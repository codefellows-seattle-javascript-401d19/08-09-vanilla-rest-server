{"level":"info","message":"Adding an POST url and callback","timestamp":"2017-12-07T00:21:25.975Z"}
{"level":"info","message":"/api/notes","timestamp":"2017-12-07T00:21:25.976Z"}
{"level":"info","message":"(request, response) => {\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {\n    sendStatus(response, 400, 'body not found');\n    return;\n  }\n\n  if (!request.body.title) {\n    sendStatus(response, 400, 'title not found');\n    return;\n  }\n\n  if (!request.body.content) {\n    sendStatus(response, 400, 'content not found');\n    return;\n  }\n  let note = new Note(request.body.title, request.body.content);\n  notes.push(note);\n  sendJSON(response, 200, note);\n}","timestamp":"2017-12-07T00:21:25.976Z"}
{"level":"info","message":"Adding an POST url and callback","timestamp":"2017-12-07T00:42:38.957Z"}
{"level":"info","message":"/api/notes","timestamp":"2017-12-07T00:42:38.958Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.title) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.content) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[25]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[26]++;\n  mountains.push(mountain); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n  sendJSON(response, 200, note);\n}","timestamp":"2017-12-07T00:42:38.958Z"}
{"level":"error","message":"__SERVER_ERROR__ PORT variable is not configured","timestamp":"2017-12-07T00:42:39.000Z"}
{"level":"error","message":"__SERVER_ERROR__ Server is already off","timestamp":"2017-12-07T00:42:39.054Z"}
{"level":"info","message":"Adding an POST url and callback","timestamp":"2017-12-07T00:44:03.003Z"}
{"level":"info","message":"/api/notes","timestamp":"2017-12-07T00:44:03.004Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.title) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.content) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[25]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[26]++;\n  mountains.push(mountain); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n  sendJSON(response, 200, note);\n}","timestamp":"2017-12-07T00:44:03.004Z"}
{"level":"error","message":"__SERVER_ERROR__ PORT variable is not configured","timestamp":"2017-12-07T00:44:03.046Z"}
{"level":"error","message":"__SERVER_ERROR__ Server is already off","timestamp":"2017-12-07T00:44:03.060Z"}
{"level":"info","message":"Adding an POST url and callback","timestamp":"2017-12-07T00:46:49.328Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-07T00:46:49.329Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.title) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.content) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[25]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[26]++;\n  mountains.push(mountain); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n  sendJSON(response, 200, note);\n}","timestamp":"2017-12-07T00:46:49.329Z"}
{"level":"error","message":"__SERVER_ERROR__ PORT variable is not configured","timestamp":"2017-12-07T00:46:49.367Z"}
{"level":"error","message":"__SERVER_ERROR__ Server is already off","timestamp":"2017-12-07T00:46:49.416Z"}
{"level":"info","message":"Adding an POST url and callback","timestamp":"2017-12-07T00:47:12.842Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-07T00:47:12.842Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.title) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.content) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[25]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[26]++;\n  mountains.push(mountain); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n  sendJSON(response, 200, mountain);\n}","timestamp":"2017-12-07T00:47:12.842Z"}
{"level":"error","message":"__SERVER_ERROR__ PORT variable is not configured","timestamp":"2017-12-07T00:47:12.886Z"}
{"level":"error","message":"__SERVER_ERROR__ Server is already off","timestamp":"2017-12-07T00:47:12.938Z"}
{"level":"info","message":"Adding an POST url and callback","timestamp":"2017-12-07T00:57:37.708Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-07T00:57:37.709Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  mountains.push(mountain); /* istanbul ignore next */cov_q0sdvsm27.s[30]++;\n  sendJSON(response, 200, mountain);\n}","timestamp":"2017-12-07T00:57:37.709Z"}
{"level":"error","message":"__SERVER_ERROR__ PORT variable is not configured","timestamp":"2017-12-07T00:57:37.796Z"}
{"level":"error","message":"__SERVER_ERROR__ Server is already off","timestamp":"2017-12-07T00:57:37.848Z"}
{"level":"info","message":"Adding an POST url and callback","timestamp":"2017-12-07T01:02:50.869Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-07T01:02:50.870Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  mountains.push(mountain); /* istanbul ignore next */cov_q0sdvsm27.s[30]++;\n  sendJSON(response, 200, mountain);\n}","timestamp":"2017-12-07T01:02:50.870Z"}
{"level":"error","message":"__SERVER_ERROR__ PORT variable is not configured","timestamp":"2017-12-07T01:02:50.959Z"}
{"level":"error","message":"__SERVER_ERROR__ Server is already off","timestamp":"2017-12-07T01:02:50.974Z"}
{"level":"info","message":"Adding an POST url and callback","timestamp":"2017-12-07T01:05:29.040Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-07T01:05:29.041Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  mountains.push(mountain); /* istanbul ignore next */cov_q0sdvsm27.s[30]++;\n  sendJSON(response, 200, mountain);\n}","timestamp":"2017-12-07T01:05:29.041Z"}
{"level":"error","message":"__SERVER_ERROR__ PORT variable is not configured","timestamp":"2017-12-07T01:05:29.083Z"}
{"level":"error","message":"__SERVER_ERROR__ Server is already off","timestamp":"2017-12-07T01:05:29.137Z"}
{"level":"info","message":"Adding an POST url and callback","timestamp":"2017-12-07T01:11:17.880Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-07T01:11:17.881Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  mountains.push(mountain); /* istanbul ignore next */cov_q0sdvsm27.s[30]++;\n  sendJSON(response, 200, mountain);\n}","timestamp":"2017-12-07T01:11:17.881Z"}
{"level":"error","message":"__SERVER_ERROR__ PORT variable is not configured","timestamp":"2017-12-07T01:11:17.962Z"}
{"level":"error","message":"__SERVER_ERROR__ Server is already off","timestamp":"2017-12-07T01:11:17.976Z"}
