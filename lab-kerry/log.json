{"level":"info","message":"Adding an POST url and callback","timestamp":"2017-12-06T23:50:42.778Z"}
{"level":"info","message":"/api/notes","timestamp":"2017-12-06T23:50:42.778Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_28p9vajc78.f[2]++;cov_28p9vajc78.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_28p9vajc78.b[0][0]++;cov_28p9vajc78.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_28p9vajc78.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_28p9vajc78.b[0][1]++;}cov_28p9vajc78.s[19]++;\n\n  if (!request.body.title) {/* istanbul ignore next */cov_28p9vajc78.b[1][0]++;cov_28p9vajc78.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_28p9vajc78.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_28p9vajc78.b[1][1]++;}cov_28p9vajc78.s[22]++;\n\n  if (!request.body.content) {/* istanbul ignore next */cov_28p9vajc78.b[2][0]++;cov_28p9vajc78.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_28p9vajc78.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_28p9vajc78.b[2][1]++;}\n  let note = /* istanbul ignore next */(cov_28p9vajc78.s[25]++, new Note(request.body.title, request.body.content)); /* istanbul ignore next */cov_28p9vajc78.s[26]++;\n  notes.push(note);\n}","timestamp":"2017-12-06T23:50:42.778Z"}
{"level":"error","message":"__SERVER_ERROR__ PORT variable is not configured","timestamp":"2017-12-06T23:50:42.865Z"}
{"level":"error","message":"__SERVER_ERROR__ Server is already off","timestamp":"2017-12-06T23:50:42.916Z"}
{"level":"info","message":"Adding an POST url and callback","timestamp":"2017-12-06T23:51:48.302Z"}
{"level":"info","message":"/api/notes","timestamp":"2017-12-06T23:51:48.302Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_28p9vajc78.f[2]++;cov_28p9vajc78.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_28p9vajc78.b[0][0]++;cov_28p9vajc78.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_28p9vajc78.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_28p9vajc78.b[0][1]++;}cov_28p9vajc78.s[19]++;\n\n  if (!request.body.title) {/* istanbul ignore next */cov_28p9vajc78.b[1][0]++;cov_28p9vajc78.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_28p9vajc78.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_28p9vajc78.b[1][1]++;}cov_28p9vajc78.s[22]++;\n\n  if (!request.body.content) {/* istanbul ignore next */cov_28p9vajc78.b[2][0]++;cov_28p9vajc78.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_28p9vajc78.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_28p9vajc78.b[2][1]++;}\n  let note = /* istanbul ignore next */(cov_28p9vajc78.s[25]++, new Note(request.body.title, request.body.content)); /* istanbul ignore next */cov_28p9vajc78.s[26]++;\n  notes.push(note);\n}","timestamp":"2017-12-06T23:51:48.303Z"}
{"level":"error","message":"__SERVER_ERROR__ PORT variable is not configured","timestamp":"2017-12-06T23:51:48.343Z"}
{"level":"error","message":"__SERVER_ERROR__ Server is already off","timestamp":"2017-12-06T23:51:48.357Z"}
{"level":"info","message":"Adding an POST url and callback","timestamp":"2017-12-06T23:55:03.411Z"}
{"level":"info","message":"/api/notes","timestamp":"2017-12-06T23:55:03.412Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_28p9vajc78.f[2]++;cov_28p9vajc78.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_28p9vajc78.b[0][0]++;cov_28p9vajc78.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_28p9vajc78.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_28p9vajc78.b[0][1]++;}cov_28p9vajc78.s[19]++;\n\n  if (!request.body.title) {/* istanbul ignore next */cov_28p9vajc78.b[1][0]++;cov_28p9vajc78.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_28p9vajc78.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_28p9vajc78.b[1][1]++;}cov_28p9vajc78.s[22]++;\n\n  if (!request.body.content) {/* istanbul ignore next */cov_28p9vajc78.b[2][0]++;cov_28p9vajc78.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_28p9vajc78.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_28p9vajc78.b[2][1]++;}\n  let note = /* istanbul ignore next */(cov_28p9vajc78.s[25]++, new Note(request.body.title, request.body.content)); /* istanbul ignore next */cov_28p9vajc78.s[26]++;\n  notes.push(note);\n}","timestamp":"2017-12-06T23:55:03.412Z"}
{"level":"info","message":"Server is online at port 3000","timestamp":"2017-12-06T23:55:03.457Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-06T23:55:03.511Z"}
{"level":"info","message":"Adding an POST url and callback","timestamp":"2017-12-07T00:00:20.462Z"}
{"level":"info","message":"/api/notes","timestamp":"2017-12-07T00:00:20.462Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_28p9vajc78.f[2]++;cov_28p9vajc78.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_28p9vajc78.b[0][0]++;cov_28p9vajc78.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_28p9vajc78.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_28p9vajc78.b[0][1]++;}cov_28p9vajc78.s[19]++;\n\n  if (!request.body.title) {/* istanbul ignore next */cov_28p9vajc78.b[1][0]++;cov_28p9vajc78.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_28p9vajc78.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_28p9vajc78.b[1][1]++;}cov_28p9vajc78.s[22]++;\n\n  if (!request.body.content) {/* istanbul ignore next */cov_28p9vajc78.b[2][0]++;cov_28p9vajc78.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_28p9vajc78.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_28p9vajc78.b[2][1]++;}\n  let note = /* istanbul ignore next */(cov_28p9vajc78.s[25]++, new Note(request.body.title, request.body.content)); /* istanbul ignore next */cov_28p9vajc78.s[26]++;\n  notes.push(note);\n}","timestamp":"2017-12-07T00:00:20.462Z"}
{"level":"info","message":"Server is online at port 3000","timestamp":"2017-12-07T00:00:20.560Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-07T00:00:20.613Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T00:00:20.614Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_28p9vajc78.f[2]++;cov_28p9vajc78.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_28p9vajc78.b[0][0]++;cov_28p9vajc78.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_28p9vajc78.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_28p9vajc78.b[0][1]++;}cov_28p9vajc78.s[19]++;\n\n  if (!request.body.title) {/* istanbul ignore next */cov_28p9vajc78.b[1][0]++;cov_28p9vajc78.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_28p9vajc78.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_28p9vajc78.b[1][1]++;}cov_28p9vajc78.s[22]++;\n\n  if (!request.body.content) {/* istanbul ignore next */cov_28p9vajc78.b[2][0]++;cov_28p9vajc78.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_28p9vajc78.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_28p9vajc78.b[2][1]++;}\n  let note = /* istanbul ignore next */(cov_28p9vajc78.s[25]++, new Note(request.body.title, request.body.content)); /* istanbul ignore next */cov_28p9vajc78.s[26]++;\n  notes.push(note);\n}","timestamp":"2017-12-07T00:00:20.615Z"}
{"level":"info","message":"Adding an POST url and callback","timestamp":"2017-12-07T00:02:13.692Z"}
{"level":"info","message":"/api/notes","timestamp":"2017-12-07T00:02:13.692Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_28p9vajc78.f[2]++;cov_28p9vajc78.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_28p9vajc78.b[0][0]++;cov_28p9vajc78.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_28p9vajc78.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_28p9vajc78.b[0][1]++;}cov_28p9vajc78.s[19]++;\n\n  if (!request.body.title) {/* istanbul ignore next */cov_28p9vajc78.b[1][0]++;cov_28p9vajc78.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_28p9vajc78.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_28p9vajc78.b[1][1]++;}cov_28p9vajc78.s[22]++;\n\n  if (!request.body.content) {/* istanbul ignore next */cov_28p9vajc78.b[2][0]++;cov_28p9vajc78.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_28p9vajc78.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_28p9vajc78.b[2][1]++;}\n  let note = /* istanbul ignore next */(cov_28p9vajc78.s[25]++, new Note(request.body.title, request.body.content)); /* istanbul ignore next */cov_28p9vajc78.s[26]++;\n  notes.push(note);\n}","timestamp":"2017-12-07T00:02:13.693Z"}
{"level":"info","message":"Server is online at port 3000","timestamp":"2017-12-07T00:02:13.742Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-07T00:02:13.756Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T00:02:13.757Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_28p9vajc78.f[2]++;cov_28p9vajc78.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_28p9vajc78.b[0][0]++;cov_28p9vajc78.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_28p9vajc78.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_28p9vajc78.b[0][1]++;}cov_28p9vajc78.s[19]++;\n\n  if (!request.body.title) {/* istanbul ignore next */cov_28p9vajc78.b[1][0]++;cov_28p9vajc78.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_28p9vajc78.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_28p9vajc78.b[1][1]++;}cov_28p9vajc78.s[22]++;\n\n  if (!request.body.content) {/* istanbul ignore next */cov_28p9vajc78.b[2][0]++;cov_28p9vajc78.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_28p9vajc78.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_28p9vajc78.b[2][1]++;}\n  let note = /* istanbul ignore next */(cov_28p9vajc78.s[25]++, new Note(request.body.title, request.body.content)); /* istanbul ignore next */cov_28p9vajc78.s[26]++;\n  notes.push(note);\n}","timestamp":"2017-12-07T00:02:13.757Z"}
{"level":"info","message":"Adding an POST url and callback","timestamp":"2017-12-07T00:11:19.227Z"}
{"level":"info","message":"/api/notes","timestamp":"2017-12-07T00:11:19.228Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_28p9vajc78.f[2]++;cov_28p9vajc78.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_28p9vajc78.b[0][0]++;cov_28p9vajc78.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_28p9vajc78.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_28p9vajc78.b[0][1]++;}cov_28p9vajc78.s[19]++;\n\n  if (!request.body.title) {/* istanbul ignore next */cov_28p9vajc78.b[1][0]++;cov_28p9vajc78.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_28p9vajc78.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_28p9vajc78.b[1][1]++;}cov_28p9vajc78.s[22]++;\n\n  if (!request.body.content) {/* istanbul ignore next */cov_28p9vajc78.b[2][0]++;cov_28p9vajc78.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_28p9vajc78.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_28p9vajc78.b[2][1]++;}\n  let note = /* istanbul ignore next */(cov_28p9vajc78.s[25]++, new Note(request.body.title, request.body.content)); /* istanbul ignore next */cov_28p9vajc78.s[26]++;\n  notes.push(note);\n}","timestamp":"2017-12-07T00:11:19.228Z"}
{"level":"info","message":"Server is online at port 3000","timestamp":"2017-12-07T00:11:19.310Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-07T00:11:19.331Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T00:11:19.332Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_28p9vajc78.f[2]++;cov_28p9vajc78.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_28p9vajc78.b[0][0]++;cov_28p9vajc78.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_28p9vajc78.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_28p9vajc78.b[0][1]++;}cov_28p9vajc78.s[19]++;\n\n  if (!request.body.title) {/* istanbul ignore next */cov_28p9vajc78.b[1][0]++;cov_28p9vajc78.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_28p9vajc78.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_28p9vajc78.b[1][1]++;}cov_28p9vajc78.s[22]++;\n\n  if (!request.body.content) {/* istanbul ignore next */cov_28p9vajc78.b[2][0]++;cov_28p9vajc78.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_28p9vajc78.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_28p9vajc78.b[2][1]++;}\n  let note = /* istanbul ignore next */(cov_28p9vajc78.s[25]++, new Note(request.body.title, request.body.content)); /* istanbul ignore next */cov_28p9vajc78.s[26]++;\n  notes.push(note);\n}","timestamp":"2017-12-07T00:11:19.333Z"}
{"level":"info","message":"Adding an POST url and callback","timestamp":"2017-12-07T00:17:29.944Z"}
{"level":"info","message":"/api/notes","timestamp":"2017-12-07T00:17:29.944Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_28p9vajc78.f[2]++;cov_28p9vajc78.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_28p9vajc78.b[0][0]++;cov_28p9vajc78.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_28p9vajc78.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_28p9vajc78.b[0][1]++;}cov_28p9vajc78.s[19]++;\n\n  if (!request.body.title) {/* istanbul ignore next */cov_28p9vajc78.b[1][0]++;cov_28p9vajc78.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_28p9vajc78.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_28p9vajc78.b[1][1]++;}cov_28p9vajc78.s[22]++;\n\n  if (!request.body.content) {/* istanbul ignore next */cov_28p9vajc78.b[2][0]++;cov_28p9vajc78.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_28p9vajc78.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_28p9vajc78.b[2][1]++;}\n  let note = /* istanbul ignore next */(cov_28p9vajc78.s[25]++, new Note(request.body.title, request.body.content)); /* istanbul ignore next */cov_28p9vajc78.s[26]++;\n  notes.push(note); /* istanbul ignore next */cov_28p9vajc78.s[27]++;\n  sendJSON(response, 200, note);\n}","timestamp":"2017-12-07T00:17:29.944Z"}
{"level":"info","message":"Server is online at port 3000","timestamp":"2017-12-07T00:17:29.989Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-07T00:17:30.041Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T00:17:30.042Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_28p9vajc78.f[2]++;cov_28p9vajc78.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_28p9vajc78.b[0][0]++;cov_28p9vajc78.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_28p9vajc78.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_28p9vajc78.b[0][1]++;}cov_28p9vajc78.s[19]++;\n\n  if (!request.body.title) {/* istanbul ignore next */cov_28p9vajc78.b[1][0]++;cov_28p9vajc78.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_28p9vajc78.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_28p9vajc78.b[1][1]++;}cov_28p9vajc78.s[22]++;\n\n  if (!request.body.content) {/* istanbul ignore next */cov_28p9vajc78.b[2][0]++;cov_28p9vajc78.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_28p9vajc78.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_28p9vajc78.b[2][1]++;}\n  let note = /* istanbul ignore next */(cov_28p9vajc78.s[25]++, new Note(request.body.title, request.body.content)); /* istanbul ignore next */cov_28p9vajc78.s[26]++;\n  notes.push(note); /* istanbul ignore next */cov_28p9vajc78.s[27]++;\n  sendJSON(response, 200, note);\n}","timestamp":"2017-12-07T00:17:30.042Z"}
{"level":"info","message":"Responding with a 200 code and the following data.","timestamp":"2017-12-07T00:17:30.043Z"}
{"id":"034658b0-dae4-11e7-9c7c-b74d47b702df","timestamp":"2017-12-07T00:17:30.043Z","title":"cats","content":"Gregor and The Hound","level":"info","message":""}
{"level":"info","message":"Adding an POST url and callback","timestamp":"2017-12-07T00:20:03.053Z"}
{"level":"info","message":"/api/notes","timestamp":"2017-12-07T00:20:03.054Z"}
{"level":"info","message":"(request, response) => {\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {\n    sendStatus(response, 400, 'body not found');\n    return;\n  }\n\n  if (!request.body.title) {\n    sendStatus(response, 400, 'title not found');\n    return;\n  }\n\n  if (!request.body.content) {\n    sendStatus(response, 400, 'content not found');\n    return;\n  }\n  let note = new Note(request.body.title, request.body.content);\n  notes.push(note);\n  sendJSON(response, 200, note);\n}","timestamp":"2017-12-07T00:20:03.054Z"}
{"level":"info","message":"Adding an POST url and callback","timestamp":"2017-12-07T00:20:13.230Z"}
{"level":"info","message":"/api/notes","timestamp":"2017-12-07T00:20:13.231Z"}
{"level":"info","message":"(request, response) => {\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {\n    sendStatus(response, 400, 'body not found');\n    return;\n  }\n\n  if (!request.body.title) {\n    sendStatus(response, 400, 'title not found');\n    return;\n  }\n\n  if (!request.body.content) {\n    sendStatus(response, 400, 'content not found');\n    return;\n  }\n  let note = new Note(request.body.title, request.body.content);\n  notes.push(note);\n  sendJSON(response, 200, note);\n}","timestamp":"2017-12-07T00:20:13.231Z"}
{"level":"info","message":"Adding an POST url and callback","timestamp":"2017-12-07T00:20:31.576Z"}
{"level":"info","message":"/api/notes","timestamp":"2017-12-07T00:20:31.578Z"}
{"level":"info","message":"(request, response) => {\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {\n    sendStatus(response, 400, 'body not found');\n    return;\n  }\n\n  if (!request.body.title) {\n    sendStatus(response, 400, 'title not found');\n    return;\n  }\n\n  if (!request.body.content) {\n    sendStatus(response, 400, 'content not found');\n    return;\n  }\n  let note = new Note(request.body.title, request.body.content);\n  notes.push(note);\n  sendJSON(response, 200, note);\n}","timestamp":"2017-12-07T00:20:31.578Z"}
{"level":"info","message":"Adding an POST url and callback","timestamp":"2017-12-07T01:11:26.933Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-07T01:11:26.934Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  mountains.push(mountain); /* istanbul ignore next */cov_q0sdvsm27.s[30]++;\n  sendJSON(response, 200, mountain);\n}","timestamp":"2017-12-07T01:11:26.934Z"}
{"level":"info","message":"Server is online at port 3000","timestamp":"2017-12-07T01:11:26.980Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-07T01:11:27.034Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T01:11:27.036Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  mountains.push(mountain); /* istanbul ignore next */cov_q0sdvsm27.s[30]++;\n  sendJSON(response, 200, mountain);\n}","timestamp":"2017-12-07T01:11:27.036Z"}
{"level":"info","message":"Responding with a 200 code and the following data.","timestamp":"2017-12-07T01:11:27.036Z"}
{"id":"8cac47c0-daeb-11e7-aa60-694d94500122","name":"Mt. Evans","location":"Colorado","elevation":"14,235","level":"info","message":"","timestamp":"2017-12-07T01:11:27.036Z"}
{"level":"info","message":"Adding an POST url and callback","timestamp":"2017-12-07T01:20:22.549Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-07T01:20:22.549Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  mountains.push(mountain); /* istanbul ignore next */cov_q0sdvsm27.s[30]++;\n  sendJSON(response, 200, mountain);\n}","timestamp":"2017-12-07T01:20:22.549Z"}
{"level":"info","message":"Server is online at port 3000","timestamp":"2017-12-07T01:20:22.591Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-07T01:20:22.607Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T01:20:22.608Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  mountains.push(mountain); /* istanbul ignore next */cov_q0sdvsm27.s[30]++;\n  sendJSON(response, 200, mountain);\n}","timestamp":"2017-12-07T01:20:22.608Z"}
{"level":"info","message":"Responding with a 200 code and the following data.","timestamp":"2017-12-07T01:20:22.609Z"}
{"id":"cbe63c10-daec-11e7-9408-d32c9dd277db","name":"Mt. Evans","location":"Colorado","elevation":"14,235","level":"info","message":"","timestamp":"2017-12-07T01:20:22.609Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-07T01:20:22.618Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T01:20:22.618Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  mountains.push(mountain); /* istanbul ignore next */cov_q0sdvsm27.s[30]++;\n  sendJSON(response, 200, mountain);\n}","timestamp":"2017-12-07T01:20:22.618Z"}
{"level":"info","message":"Responding with a 200 code and the following data.","timestamp":"2017-12-07T01:20:22.618Z"}
{"id":"cbe79ba0-daec-11e7-9408-d32c9dd277db","name":"Mt. Evans","location":"Colorado","elevation":"14,235","level":"info","message":"","timestamp":"2017-12-07T01:20:22.619Z"}
{"level":"info","message":"Adding an POST url and callback","timestamp":"2017-12-07T01:21:32.001Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-07T01:21:32.002Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  mountains.push(mountain); /* istanbul ignore next */cov_q0sdvsm27.s[30]++;\n  sendJSON(response, 200, mountain);\n}","timestamp":"2017-12-07T01:21:32.002Z"}
{"level":"info","message":"Server is online at port 3000","timestamp":"2017-12-07T01:21:32.045Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-07T01:21:32.060Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T01:21:32.061Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  mountains.push(mountain); /* istanbul ignore next */cov_q0sdvsm27.s[30]++;\n  sendJSON(response, 200, mountain);\n}","timestamp":"2017-12-07T01:21:32.061Z"}
{"level":"info","message":"Responding with a 200 code and the following data.","timestamp":"2017-12-07T01:21:32.062Z"}
{"id":"f54bc4d0-daec-11e7-864a-93a97f055123","name":"Mt. Evans","location":"Colorado","elevation":"14,235","level":"info","message":"","timestamp":"2017-12-07T01:21:32.062Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-07T01:21:32.071Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T01:21:32.071Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  mountains.push(mountain); /* istanbul ignore next */cov_q0sdvsm27.s[30]++;\n  sendJSON(response, 200, mountain);\n}","timestamp":"2017-12-07T01:21:32.071Z"}
{"level":"info","message":"Responding with a 400 code due to title not found.","timestamp":"2017-12-07T01:21:32.071Z"}
{"level":"info","message":"Adding an POST url and callback","timestamp":"2017-12-07T01:23:39.359Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-07T01:23:39.360Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  mountains.push(mountain); /* istanbul ignore next */cov_q0sdvsm27.s[30]++;\n  sendJSON(response, 200, mountain);\n}","timestamp":"2017-12-07T01:23:39.360Z"}
{"level":"info","message":"Server is online at port 3000","timestamp":"2017-12-07T01:23:39.404Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-07T01:23:39.419Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T01:23:39.420Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  mountains.push(mountain); /* istanbul ignore next */cov_q0sdvsm27.s[30]++;\n  sendJSON(response, 200, mountain);\n}","timestamp":"2017-12-07T01:23:39.420Z"}
{"level":"info","message":"Responding with a 200 code and the following data.","timestamp":"2017-12-07T01:23:39.421Z"}
{"id":"41355cd0-daed-11e7-a006-fba817b1b0c7","name":"Mt. Evans","location":"Colorado","elevation":"14,235","level":"info","message":"","timestamp":"2017-12-07T01:23:39.421Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-07T01:23:39.430Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T01:23:39.431Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  mountains.push(mountain); /* istanbul ignore next */cov_q0sdvsm27.s[30]++;\n  sendJSON(response, 200, mountain);\n}","timestamp":"2017-12-07T01:23:39.431Z"}
{"level":"info","message":"Responding with a 400 code due to title not found.","timestamp":"2017-12-07T01:23:39.431Z"}
{"level":"info","message":"Adding an POST url and callback","timestamp":"2017-12-07T01:36:06.494Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-07T01:36:06.495Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  mountains.push(mountain); /* istanbul ignore next */cov_q0sdvsm27.s[30]++;\n  sendJSON(response, 200, mountain);\n}","timestamp":"2017-12-07T01:36:06.495Z"}
{"level":"info","message":"Server is online at port 3000","timestamp":"2017-12-07T01:36:06.560Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-07T01:36:06.577Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T01:36:06.578Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  mountains.push(mountain); /* istanbul ignore next */cov_q0sdvsm27.s[30]++;\n  sendJSON(response, 200, mountain);\n}","timestamp":"2017-12-07T01:36:06.578Z"}
{"level":"info","message":"Responding with a 200 code and the following data.","timestamp":"2017-12-07T01:36:06.579Z"}
{"id":"fe8ca030-daee-11e7-b520-3f3ad856c2ec","name":"Mt. Evans","location":"Colorado","elevation":"14,235","level":"info","message":"","timestamp":"2017-12-07T01:36:06.579Z"}
{"level":"info","message":"Adding an POST url and callback","timestamp":"2017-12-07T01:36:42.521Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-07T01:36:42.522Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  mountains.push(mountain); /* istanbul ignore next */cov_q0sdvsm27.s[30]++;\n  sendJSON(response, 200, mountain);\n}","timestamp":"2017-12-07T01:36:42.522Z"}
{"level":"info","message":"Server is online at port 3000","timestamp":"2017-12-07T01:36:42.584Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-07T01:36:42.602Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T01:36:42.603Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  mountains.push(mountain); /* istanbul ignore next */cov_q0sdvsm27.s[30]++;\n  sendJSON(response, 200, mountain);\n}","timestamp":"2017-12-07T01:36:42.603Z"}
{"level":"info","message":"Responding with a 200 code and the following data.","timestamp":"2017-12-07T01:36:42.604Z"}
{"id":"14059ac0-daef-11e7-93a9-f7029d1295c7","name":"Mt. Evans","location":"Colorado","elevation":"14,235","level":"info","message":"","timestamp":"2017-12-07T01:36:42.604Z"}
{"level":"info","message":"Adding an POST url and callback","timestamp":"2017-12-07T01:38:08.512Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-07T01:38:08.512Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  mountains.push(mountain); /* istanbul ignore next */cov_q0sdvsm27.s[30]++;\n  sendJSON(response, 200, mountain);\n}","timestamp":"2017-12-07T01:38:08.512Z"}
{"level":"info","message":"Server is online at port 3000","timestamp":"2017-12-07T01:38:08.554Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-07T01:38:08.569Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T01:38:08.570Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  mountains.push(mountain); /* istanbul ignore next */cov_q0sdvsm27.s[30]++;\n  sendJSON(response, 200, mountain);\n}","timestamp":"2017-12-07T01:38:08.570Z"}
{"level":"info","message":"Responding with a 200 code and the following data.","timestamp":"2017-12-07T01:38:08.570Z"}
{"id":"4742f9a0-daef-11e7-8fb1-ff8714e819af","name":"Mt. Evans","location":"Colorado","elevation":"14,235","level":"info","message":"","timestamp":"2017-12-07T01:38:08.570Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-07T01:38:08.579Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T01:38:08.580Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  mountains.push(mountain); /* istanbul ignore next */cov_q0sdvsm27.s[30]++;\n  sendJSON(response, 200, mountain);\n}","timestamp":"2017-12-07T01:38:08.580Z"}
{"level":"info","message":"Responding with a 400 code due to title not found.","timestamp":"2017-12-07T01:38:08.580Z"}
{"level":"info","message":"Adding an POST url and callback","timestamp":"2017-12-07T01:41:01.320Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-07T01:41:01.321Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  mountains.push(mountain); /* istanbul ignore next */cov_q0sdvsm27.s[30]++;\n  sendJSON(response, 200, mountain);\n}","timestamp":"2017-12-07T01:41:01.321Z"}
{"level":"info","message":"Server is online at port 3000","timestamp":"2017-12-07T01:41:01.363Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-07T01:41:01.378Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T01:41:01.379Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  mountains.push(mountain); /* istanbul ignore next */cov_q0sdvsm27.s[30]++;\n  sendJSON(response, 200, mountain);\n}","timestamp":"2017-12-07T01:41:01.379Z"}
{"level":"info","message":"Responding with a 200 code and the following data.","timestamp":"2017-12-07T01:41:01.379Z"}
{"id":"ae438930-daef-11e7-9580-d3dfde8f8fc9","name":"Mt. Evans","location":"Colorado","elevation":"14,235","level":"info","message":"","timestamp":"2017-12-07T01:41:01.379Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-07T01:41:01.388Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T01:41:01.389Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  mountains.push(mountain); /* istanbul ignore next */cov_q0sdvsm27.s[30]++;\n  sendJSON(response, 200, mountain);\n}","timestamp":"2017-12-07T01:41:01.389Z"}
{"level":"info","message":"Responding with a 400 code due to title not found.","timestamp":"2017-12-07T01:41:01.389Z"}
{"level":"info","message":"Adding an POST url and callback","timestamp":"2017-12-07T01:42:02.873Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-07T01:42:02.874Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  mountains.push(mountain); /* istanbul ignore next */cov_q0sdvsm27.s[30]++;\n  sendJSON(response, 200, mountain);\n}","timestamp":"2017-12-07T01:42:02.874Z"}
{"level":"info","message":"Server is online at port 3000","timestamp":"2017-12-07T01:42:02.939Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-07T01:42:02.957Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T01:42:02.958Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  mountains.push(mountain); /* istanbul ignore next */cov_q0sdvsm27.s[30]++;\n  sendJSON(response, 200, mountain);\n}","timestamp":"2017-12-07T01:42:02.958Z"}
{"level":"info","message":"Responding with a 200 code and the following data.","timestamp":"2017-12-07T01:42:02.959Z"}
{"id":"d2f7e5f0-daef-11e7-8559-97935c5ff11f","name":"Mt. Evans","location":"Colorado","elevation":"14,235","level":"info","message":"","timestamp":"2017-12-07T01:42:02.959Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-07T01:42:02.969Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T01:42:02.969Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  mountains.push(mountain); /* istanbul ignore next */cov_q0sdvsm27.s[30]++;\n  sendJSON(response, 200, mountain);\n}","timestamp":"2017-12-07T01:42:02.969Z"}
{"level":"info","message":"Responding with a 400 code due to title not found.","timestamp":"2017-12-07T01:42:02.970Z"}
{"level":"info","message":"Adding an POST url and callback","timestamp":"2017-12-07T01:44:11.481Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-07T01:44:11.482Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  mountains.push(mountain); /* istanbul ignore next */cov_q0sdvsm27.s[30]++;\n  sendJSON(response, 200, mountain);\n}","timestamp":"2017-12-07T01:44:11.482Z"}
{"level":"info","message":"Server is online at port 3000","timestamp":"2017-12-07T01:44:11.525Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-07T01:44:11.541Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T01:44:11.542Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T01:44:11.542Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/lib/router.js:53:37)\n    at <anonymous>","level":"info","timestamp":"2017-12-07T01:44:11.542Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-07T01:44:11.549Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T01:44:11.550Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  mountains.push(mountain); /* istanbul ignore next */cov_q0sdvsm27.s[30]++;\n  sendJSON(response, 200, mountain);\n}","timestamp":"2017-12-07T01:44:11.550Z"}
{"level":"info","message":"Responding with a 200 code and the following data.","timestamp":"2017-12-07T01:44:11.550Z"}
{"id":"1f9d53e0-daf0-11e7-9e71-198caa9a8225","name":"Mt. Evans","location":"Colorado","elevation":"14,235","level":"info","message":"","timestamp":"2017-12-07T01:44:11.550Z"}
{"level":"info","message":"Adding an POST url and callback","timestamp":"2017-12-07T01:48:54.387Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-07T01:48:54.388Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  mountains.push(mountain); /* istanbul ignore next */cov_q0sdvsm27.s[30]++;\n  sendJSON(response, 200, mountain);\n}","timestamp":"2017-12-07T01:48:54.388Z"}
{"level":"info","message":"Server is online at port 3000","timestamp":"2017-12-07T01:48:54.432Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-07T01:48:54.446Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T01:48:54.447Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T01:48:54.447Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/lib/router.js:53:37)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T01:48:54.447Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-07T01:48:54.454Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T01:48:54.455Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  mountains.push(mountain); /* istanbul ignore next */cov_q0sdvsm27.s[30]++;\n  sendJSON(response, 200, mountain);\n}","timestamp":"2017-12-07T01:48:54.455Z"}
{"level":"info","message":"Responding with a 200 code and the following data.","timestamp":"2017-12-07T01:48:54.456Z"}
{"id":"c83d5b80-daf0-11e7-ac19-3baaf8dddeee","name":"Mt. Evans","location":"Colorado","elevation":"14,235","level":"info","message":"","timestamp":"2017-12-07T01:48:54.456Z"}
{"level":"info","message":"Adding an POST url and callback","timestamp":"2017-12-07T01:52:46.293Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-07T01:52:46.293Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  mountains.push(mountain); /* istanbul ignore next */cov_q0sdvsm27.s[30]++;\n  sendJSON(response, 200, mountain);\n}","timestamp":"2017-12-07T01:52:46.293Z"}
{"level":"info","message":"Adding an GET url and callback","timestamp":"2017-12-07T01:52:46.294Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-07T01:52:46.294Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[32]++;\n  sendJSON(response, 200, mountain);\n}","timestamp":"2017-12-07T01:52:46.294Z"}
{"level":"info","message":"Server is online at port 3000","timestamp":"2017-12-07T01:52:46.347Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-07T01:52:46.399Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T01:52:46.399Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T01:52:46.399Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/lib/router.js:53:37)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T01:52:46.399Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-07T01:52:46.407Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T01:52:46.407Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  mountains.push(mountain); /* istanbul ignore next */cov_q0sdvsm27.s[30]++;\n  sendJSON(response, 200, mountain);\n}","timestamp":"2017-12-07T01:52:46.407Z"}
{"level":"info","message":"Responding with a 200 code and the following data.","timestamp":"2017-12-07T01:52:46.408Z"}
{"id":"527e6c80-daf1-11e7-9ba0-696b5d5ff91d","name":"Mt. Evans","location":"Colorado","elevation":"14,235","level":"info","message":"","timestamp":"2017-12-07T01:52:46.408Z"}
{"level":"info","message":"Adding an POST url and callback","timestamp":"2017-12-07T01:53:27.417Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-07T01:53:27.418Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  mountains.push(mountain); /* istanbul ignore next */cov_q0sdvsm27.s[30]++;\n  sendJSON(response, 200, mountain);\n}","timestamp":"2017-12-07T01:53:27.418Z"}
{"level":"info","message":"Adding an GET url and callback","timestamp":"2017-12-07T01:53:27.418Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-07T01:53:27.418Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[32]++;\n  sendJSON(response, 200, mountain); /* istanbul ignore next */cov_q0sdvsm27.s[33]++;\n  console.log('get', mountain);\n}","timestamp":"2017-12-07T01:53:27.418Z"}
{"level":"info","message":"Server is online at port 3000","timestamp":"2017-12-07T01:53:27.467Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-07T01:53:27.520Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T01:53:27.521Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T01:53:27.521Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/lib/router.js:53:37)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T01:53:27.521Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-07T01:53:27.529Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T01:53:27.530Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  mountains.push(mountain); /* istanbul ignore next */cov_q0sdvsm27.s[30]++;\n  sendJSON(response, 200, mountain);\n}","timestamp":"2017-12-07T01:53:27.530Z"}
{"level":"info","message":"Responding with a 200 code and the following data.","timestamp":"2017-12-07T01:53:27.530Z"}
{"id":"6b0124a0-daf1-11e7-b30c-95bb2e6fbc45","name":"Mt. Evans","location":"Colorado","elevation":"14,235","level":"info","message":"","timestamp":"2017-12-07T01:53:27.530Z"}
{"level":"info","message":"Adding an POST url and callback","timestamp":"2017-12-07T01:53:47.133Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-07T01:53:47.133Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  mountains.push(mountain); /* istanbul ignore next */cov_q0sdvsm27.s[30]++;\n  sendJSON(response, 200, mountain);\n}","timestamp":"2017-12-07T01:53:47.134Z"}
{"level":"info","message":"Adding an GET url and callback","timestamp":"2017-12-07T01:53:47.134Z"}
{"level":"info","message":"/api/mountains/1","timestamp":"2017-12-07T01:53:47.134Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[32]++;\n  sendJSON(response, 200, mountain); /* istanbul ignore next */cov_q0sdvsm27.s[33]++;\n  console.log('get', mountain);\n}","timestamp":"2017-12-07T01:53:47.134Z"}
{"level":"info","message":"Server is online at port 3000","timestamp":"2017-12-07T01:53:47.181Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-07T01:53:47.232Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T01:53:47.233Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[32]++;\n  sendJSON(response, 200, mountain); /* istanbul ignore next */cov_q0sdvsm27.s[33]++;\n  console.log('get', mountain);\n}","timestamp":"2017-12-07T01:53:47.233Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T01:53:47.233Z"}
{"message":"mountain is not defined","stack":"ReferenceError: mountain is not defined\n    at Object.<anonymous>.router.get (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/route/mountain-router.js:55:27)\n    at requestParser.parse.then.request (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/lib/router.js:55:89)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T01:53:47.233Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-07T01:53:47.240Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T01:53:47.241Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  mountains.push(mountain); /* istanbul ignore next */cov_q0sdvsm27.s[30]++;\n  sendJSON(response, 200, mountain);\n}","timestamp":"2017-12-07T01:53:47.241Z"}
{"level":"info","message":"Responding with a 200 code and the following data.","timestamp":"2017-12-07T01:53:47.242Z"}
{"id":"76c0f4a0-daf1-11e7-99aa-e79bf877581b","name":"Mt. Evans","location":"Colorado","elevation":"14,235","level":"info","message":"","timestamp":"2017-12-07T01:53:47.242Z"}
{"level":"info","message":"Adding an POST url and callback","timestamp":"2017-12-07T01:53:57.319Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-07T01:53:57.319Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  mountains.push(mountain); /* istanbul ignore next */cov_q0sdvsm27.s[30]++;\n  sendJSON(response, 200, mountain);\n}","timestamp":"2017-12-07T01:53:57.319Z"}
{"level":"info","message":"Adding an GET url and callback","timestamp":"2017-12-07T01:53:57.319Z"}
{"level":"info","message":"/api/mountains/id","timestamp":"2017-12-07T01:53:57.320Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[32]++;\n  sendJSON(response, 200, mountain); /* istanbul ignore next */cov_q0sdvsm27.s[33]++;\n  console.log('get', mountain);\n}","timestamp":"2017-12-07T01:53:57.320Z"}
{"level":"info","message":"Server is online at port 3000","timestamp":"2017-12-07T01:53:57.366Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-07T01:53:57.415Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T01:53:57.415Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T01:53:57.415Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/lib/router.js:53:37)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T01:53:57.415Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-07T01:53:57.423Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T01:53:57.424Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  mountains.push(mountain); /* istanbul ignore next */cov_q0sdvsm27.s[30]++;\n  sendJSON(response, 200, mountain);\n}","timestamp":"2017-12-07T01:53:57.424Z"}
{"level":"info","message":"Responding with a 200 code and the following data.","timestamp":"2017-12-07T01:53:57.425Z"}
{"id":"7cd29b00-daf1-11e7-97f3-c30efdaa85f5","name":"Mt. Evans","location":"Colorado","elevation":"14,235","level":"info","message":"","timestamp":"2017-12-07T01:53:57.425Z"}
{"level":"info","message":"Adding an POST url and callback","timestamp":"2017-12-07T02:01:36.738Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-07T02:01:36.738Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  mountains.push(mountain); /* istanbul ignore next */cov_q0sdvsm27.s[30]++;\n  sendJSON(response, 200, mountain);\n}","timestamp":"2017-12-07T02:01:36.738Z"}
{"level":"info","message":"Adding an GET url and callback","timestamp":"2017-12-07T02:01:36.738Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-07T02:01:36.738Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[32]++;\n  sendJSON(response, 200, mountain); /* istanbul ignore next */cov_q0sdvsm27.s[33]++;\n  console.log('get', mountain);\n}","timestamp":"2017-12-07T02:01:36.738Z"}
{"level":"info","message":"Server is online at port 3000","timestamp":"2017-12-07T02:01:36.785Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-07T02:01:36.802Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T02:01:36.803Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  mountains.push(mountain); /* istanbul ignore next */cov_q0sdvsm27.s[30]++;\n  sendJSON(response, 200, mountain);\n}","timestamp":"2017-12-07T02:01:36.803Z"}
{"level":"info","message":"Responding with a 200 code and the following data.","timestamp":"2017-12-07T02:01:36.804Z"}
{"id":"8ea26e40-daf2-11e7-b017-4d075e52ac07","name":"Mt. Evans","location":"Colorado","elevation":"14,235","level":"info","message":"","timestamp":"2017-12-07T02:01:36.804Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-07T02:01:36.814Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T02:01:36.814Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T02:01:36.814Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/lib/router.js:53:37)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T02:01:36.814Z"}
{"level":"info","message":"Adding an POST url and callback","timestamp":"2017-12-07T02:01:59.970Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-07T02:01:59.970Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  mountains.push(mountain); /* istanbul ignore next */cov_q0sdvsm27.s[30]++;\n  sendJSON(response, 200, mountain);\n}","timestamp":"2017-12-07T02:01:59.971Z"}
{"level":"info","message":"Adding an GET url and callback","timestamp":"2017-12-07T02:01:59.971Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-07T02:01:59.971Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[32]++;\n  sendJSON(response, 200, mountains); /* istanbul ignore next */cov_q0sdvsm27.s[33]++;\n  console.log('get', mountain);\n}","timestamp":"2017-12-07T02:01:59.971Z"}
{"level":"info","message":"Server is online at port 3000","timestamp":"2017-12-07T02:02:00.020Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-07T02:02:00.070Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T02:02:00.071Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  mountains.push(mountain); /* istanbul ignore next */cov_q0sdvsm27.s[30]++;\n  sendJSON(response, 200, mountain);\n}","timestamp":"2017-12-07T02:02:00.071Z"}
{"level":"info","message":"Responding with a 200 code and the following data.","timestamp":"2017-12-07T02:02:00.072Z"}
{"id":"9c80b170-daf2-11e7-b6c3-5dfb7866aa60","name":"Mt. Evans","location":"Colorado","elevation":"14,235","level":"info","message":"","timestamp":"2017-12-07T02:02:00.072Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-07T02:02:00.081Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T02:02:00.081Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T02:02:00.081Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/lib/router.js:53:37)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T02:02:00.081Z"}
{"level":"info","message":"Adding an POST url and callback","timestamp":"2017-12-07T02:05:35.801Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-07T02:05:35.802Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  mountains.push(mountain); /* istanbul ignore next */cov_q0sdvsm27.s[30]++;\n  sendJSON(response, 200, mountain);\n}","timestamp":"2017-12-07T02:05:35.802Z"}
{"level":"info","message":"Adding an GET url and callback","timestamp":"2017-12-07T02:05:35.802Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-07T02:05:35.802Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[32]++;\n  sendJSON(response, 200, mountains); /* istanbul ignore next */cov_q0sdvsm27.s[33]++;\n  console.log('get', mountains);\n}","timestamp":"2017-12-07T02:05:35.803Z"}
{"level":"info","message":"Server is online at port 3000","timestamp":"2017-12-07T02:05:35.853Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-07T02:05:35.904Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T02:05:35.905Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  mountains.push(mountain); /* istanbul ignore next */cov_q0sdvsm27.s[30]++;\n  sendJSON(response, 200, mountain);\n}","timestamp":"2017-12-07T02:05:35.905Z"}
{"level":"info","message":"Responding with a 200 code and the following data.","timestamp":"2017-12-07T02:05:35.905Z"}
{"id":"1d265910-daf3-11e7-a058-9b7ef3a3c04d","name":"Mt. Evans","location":"Colorado","elevation":"14,235","level":"info","message":"","timestamp":"2017-12-07T02:05:35.905Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-07T02:05:35.914Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T02:05:35.915Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[32]++;\n  sendJSON(response, 200, mountains); /* istanbul ignore next */cov_q0sdvsm27.s[33]++;\n  console.log('get', mountains);\n}","timestamp":"2017-12-07T02:05:35.915Z"}
{"level":"info","message":"Responding with a 200 code and the following data.","timestamp":"2017-12-07T02:05:35.915Z"}
[{"id":"1d265910-daf3-11e7-a058-9b7ef3a3c04d","name":"Mt. Evans","location":"Colorado","elevation":"14,235"}]
{"level":"info","message":"Adding an POST url and callback","timestamp":"2017-12-07T02:09:28.295Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-07T02:09:28.295Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  mountains.push(mountain); /* istanbul ignore next */cov_q0sdvsm27.s[30]++;\n  sendJSON(response, 200, mountain);\n}","timestamp":"2017-12-07T02:09:28.295Z"}
{"level":"info","message":"Adding an GET url and callback","timestamp":"2017-12-07T02:09:28.295Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-07T02:09:28.295Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[32]++;\n  sendJSON(response, 200, mountains); /* istanbul ignore next */cov_q0sdvsm27.s[33]++;\n  console.log('get', mountains);\n}","timestamp":"2017-12-07T02:09:28.295Z"}
{"level":"info","message":"Server is online at port 3000","timestamp":"2017-12-07T02:09:28.339Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-07T02:09:28.355Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T02:09:28.356Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  mountains.push(mountain); /* istanbul ignore next */cov_q0sdvsm27.s[30]++;\n  sendJSON(response, 200, mountain);\n}","timestamp":"2017-12-07T02:09:28.356Z"}
{"level":"info","message":"Responding with a 200 code and the following data.","timestamp":"2017-12-07T02:09:28.357Z"}
{"id":"a7b3b550-daf3-11e7-befb-df0b67ddae93","name":"Mt. Evans","location":"Colorado","elevation":"14,235","level":"info","message":"","timestamp":"2017-12-07T02:09:28.357Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-07T02:09:28.366Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T02:09:28.367Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[32]++;\n  sendJSON(response, 200, mountains); /* istanbul ignore next */cov_q0sdvsm27.s[33]++;\n  console.log('get', mountains);\n}","timestamp":"2017-12-07T02:09:28.367Z"}
{"level":"info","message":"Responding with a 200 code and the following data.","timestamp":"2017-12-07T02:09:28.367Z"}
[{"id":"a7b3b550-daf3-11e7-befb-df0b67ddae93","name":"Mt. Evans","location":"Colorado","elevation":"14,235"}]
{"level":"info","message":"Adding an POST url and callback","timestamp":"2017-12-07T02:09:52.291Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-07T02:09:52.291Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  mountains.push(mountain); /* istanbul ignore next */cov_q0sdvsm27.s[30]++;\n  sendJSON(response, 200, mountain);\n}","timestamp":"2017-12-07T02:09:52.291Z"}
{"level":"info","message":"Adding an GET url and callback","timestamp":"2017-12-07T02:09:52.291Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-07T02:09:52.291Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[32]++;\n  sendJSON(response, 200, mountains); /* istanbul ignore next */cov_q0sdvsm27.s[33]++;\n  console.log('get', mountains);\n}","timestamp":"2017-12-07T02:09:52.292Z"}
{"level":"info","message":"Server is online at port 3000","timestamp":"2017-12-07T02:09:52.340Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-07T02:09:52.354Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T02:09:52.355Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  mountains.push(mountain); /* istanbul ignore next */cov_q0sdvsm27.s[30]++;\n  sendJSON(response, 200, mountain);\n}","timestamp":"2017-12-07T02:09:52.356Z"}
{"level":"info","message":"Responding with a 200 code and the following data.","timestamp":"2017-12-07T02:09:52.356Z"}
{"id":"b601aa40-daf3-11e7-a856-7d9c82122504","name":"Mt. Evans","location":"Colorado","elevation":"14,235","level":"info","message":"","timestamp":"2017-12-07T02:09:52.356Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-07T02:09:52.365Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T02:09:52.365Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[32]++;\n  sendJSON(response, 200, mountains); /* istanbul ignore next */cov_q0sdvsm27.s[33]++;\n  console.log('get', mountains);\n}","timestamp":"2017-12-07T02:09:52.365Z"}
{"level":"info","message":"Responding with a 200 code and the following data.","timestamp":"2017-12-07T02:09:52.365Z"}
[{"id":"b601aa40-daf3-11e7-a856-7d9c82122504","name":"Mt. Evans","location":"Colorado","elevation":"14,235"}]
{"level":"info","message":"Adding an POST url and callback","timestamp":"2017-12-07T02:37:43.819Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-07T02:37:43.820Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  mountains.push(mountain); /* istanbul ignore next */cov_q0sdvsm27.s[30]++;\n  sendJSON(response, 200, mountain);\n}","timestamp":"2017-12-07T02:37:43.820Z"}
{"level":"info","message":"Adding an GET url and callback","timestamp":"2017-12-07T02:37:43.820Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-07T02:37:43.820Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[32]++;\n  sendJSON(response, 200, mountains); /* istanbul ignore next */cov_q0sdvsm27.s[33]++;\n  console.log('get', mountains);\n}","timestamp":"2017-12-07T02:37:43.820Z"}
{"level":"info","message":"Server is online at port 3000","timestamp":"2017-12-07T02:37:43.884Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-07T02:37:43.902Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T02:37:43.903Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  mountains.push(mountain); /* istanbul ignore next */cov_q0sdvsm27.s[30]++;\n  sendJSON(response, 200, mountain);\n}","timestamp":"2017-12-07T02:37:43.903Z"}
{"level":"info","message":"Responding with a 200 code and the following data.","timestamp":"2017-12-07T02:37:43.904Z"}
{"id":"9a53a600-daf7-11e7-af91-abe011544e8e","name":"Mt. Evans","location":"Colorado","elevation":"14,235","level":"info","message":"","timestamp":"2017-12-07T02:37:43.904Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-07T02:37:43.913Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T02:37:43.913Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[32]++;\n  sendJSON(response, 200, mountains); /* istanbul ignore next */cov_q0sdvsm27.s[33]++;\n  console.log('get', mountains);\n}","timestamp":"2017-12-07T02:37:43.913Z"}
{"level":"info","message":"Responding with a 200 code and the following data.","timestamp":"2017-12-07T02:37:43.913Z"}
[{"id":"9a53a600-daf7-11e7-af91-abe011544e8e","name":"Mt. Evans","location":"Colorado","elevation":"14,235"}]
{"level":"info","message":"Routing a request","timestamp":"2017-12-07T02:37:43.918Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T02:37:43.919Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[32]++;\n  sendJSON(response, 200, mountains); /* istanbul ignore next */cov_q0sdvsm27.s[33]++;\n  console.log('get', mountains);\n}","timestamp":"2017-12-07T02:37:43.919Z"}
{"level":"info","message":"Responding with a 200 code and the following data.","timestamp":"2017-12-07T02:37:43.919Z"}
[{"id":"9a53a600-daf7-11e7-af91-abe011544e8e","name":"Mt. Evans","location":"Colorado","elevation":"14,235"}]
{"level":"info","message":"Adding an POST url and callback","timestamp":"2017-12-07T02:40:37.500Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-07T02:40:37.501Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  mountains.push(mountain); /* istanbul ignore next */cov_q0sdvsm27.s[30]++;\n  sendJSON(response, 200, mountain);\n}","timestamp":"2017-12-07T02:40:37.501Z"}
{"level":"info","message":"Adding an GET url and callback","timestamp":"2017-12-07T02:40:37.501Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-07T02:40:37.501Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[32]++;\n  sendJSON(response, 200, mountains); /* istanbul ignore next */cov_q0sdvsm27.s[33]++;\n  console.log('get', mountains);\n}","timestamp":"2017-12-07T02:40:37.501Z"}
{"level":"info","message":"Adding an GET url and callback","timestamp":"2017-12-07T02:40:37.501Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-07T02:40:37.505Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[35]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;\n    let oneMountain; /* istanbul ignore next */cov_q0sdvsm27.s[36]++;\n    for (let mountain of mountains) {/* istanbul ignore next */cov_q0sdvsm27.s[37]++;\n      if (request.url.query.id === mountain.id)\n        {/* istanbul ignore next */cov_q0sdvsm27.b[5][0]++;cov_q0sdvsm27.s[38]++;oneMountain = mountain;} else /* istanbul ignore next */{cov_q0sdvsm27.b[5][1]++;}cov_q0sdvsm27.s[39]++;\n      break;\n    } /* istanbul ignore next */cov_q0sdvsm27.s[40]++;\n    sendJSON(response, 200, mountains); /* istanbul ignore next */cov_q0sdvsm27.s[41]++;\n    console.log('get', mountains);\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}\n}","timestamp":"2017-12-07T02:40:37.506Z"}
{"level":"info","message":"Server is online at port 3000","timestamp":"2017-12-07T02:40:37.571Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-07T02:40:37.622Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T02:40:37.623Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  mountains.push(mountain); /* istanbul ignore next */cov_q0sdvsm27.s[30]++;\n  sendJSON(response, 200, mountain);\n}","timestamp":"2017-12-07T02:40:37.623Z"}
{"level":"info","message":"Responding with a 200 code and the following data.","timestamp":"2017-12-07T02:40:37.624Z"}
{"id":"01df3780-daf8-11e7-a2dd-a71b66e9553c","name":"Mt. Evans","location":"Colorado","elevation":"14,235","level":"info","message":"","timestamp":"2017-12-07T02:40:37.624Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-07T02:40:37.633Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T02:40:37.633Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[35]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;\n    let oneMountain; /* istanbul ignore next */cov_q0sdvsm27.s[36]++;\n    for (let mountain of mountains) {/* istanbul ignore next */cov_q0sdvsm27.s[37]++;\n      if (request.url.query.id === mountain.id)\n        {/* istanbul ignore next */cov_q0sdvsm27.b[5][0]++;cov_q0sdvsm27.s[38]++;oneMountain = mountain;} else /* istanbul ignore next */{cov_q0sdvsm27.b[5][1]++;}cov_q0sdvsm27.s[39]++;\n      break;\n    } /* istanbul ignore next */cov_q0sdvsm27.s[40]++;\n    sendJSON(response, 200, mountains); /* istanbul ignore next */cov_q0sdvsm27.s[41]++;\n    console.log('get', mountains);\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}\n}","timestamp":"2017-12-07T02:40:37.633Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-07T02:40:42.636Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T02:40:42.637Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[35]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;\n    let oneMountain; /* istanbul ignore next */cov_q0sdvsm27.s[36]++;\n    for (let mountain of mountains) {/* istanbul ignore next */cov_q0sdvsm27.s[37]++;\n      if (request.url.query.id === mountain.id)\n        {/* istanbul ignore next */cov_q0sdvsm27.b[5][0]++;cov_q0sdvsm27.s[38]++;oneMountain = mountain;} else /* istanbul ignore next */{cov_q0sdvsm27.b[5][1]++;}cov_q0sdvsm27.s[39]++;\n      break;\n    } /* istanbul ignore next */cov_q0sdvsm27.s[40]++;\n    sendJSON(response, 200, mountains); /* istanbul ignore next */cov_q0sdvsm27.s[41]++;\n    console.log('get', mountains);\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}\n}","timestamp":"2017-12-07T02:40:42.637Z"}
{"level":"info","message":"Responding with a 200 code and the following data.","timestamp":"2017-12-07T02:40:42.637Z"}
[{"id":"01df3780-daf8-11e7-a2dd-a71b66e9553c","name":"Mt. Evans","location":"Colorado","elevation":"14,235"}]
{"level":"info","message":"Adding an POST url and callback","timestamp":"2017-12-07T02:44:20.245Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-07T02:44:20.246Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  mountains.push(mountain); /* istanbul ignore next */cov_q0sdvsm27.s[30]++;\n  sendJSON(response, 200, mountain);\n}","timestamp":"2017-12-07T02:44:20.246Z"}
{"level":"info","message":"Adding an GET url and callback","timestamp":"2017-12-07T02:44:20.246Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-07T02:44:20.246Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[32]++;\n  sendJSON(response, 200, mountains); /* istanbul ignore next */cov_q0sdvsm27.s[33]++;\n  console.log('get', mountains);\n}","timestamp":"2017-12-07T02:44:20.246Z"}
{"level":"info","message":"Adding an GET url and callback","timestamp":"2017-12-07T02:44:20.246Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-07T02:44:20.246Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[35]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;\n    let oneMountain; /* istanbul ignore next */cov_q0sdvsm27.s[36]++;\n    for (let mountain of mountains) {/* istanbul ignore next */cov_q0sdvsm27.s[37]++;\n      if (request.url.query.id === Mountain.id)\n        {/* istanbul ignore next */cov_q0sdvsm27.b[5][0]++;cov_q0sdvsm27.s[38]++;oneMountain = mountain;} else /* istanbul ignore next */{cov_q0sdvsm27.b[5][1]++;}cov_q0sdvsm27.s[39]++;\n      break;\n    } /* istanbul ignore next */cov_q0sdvsm27.s[40]++;\n    sendJSON(response, 200, mountains); /* istanbul ignore next */cov_q0sdvsm27.s[41]++;\n    console.log('get', mountains);\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}\n}","timestamp":"2017-12-07T02:44:20.246Z"}
{"level":"info","message":"Server is online at port 3000","timestamp":"2017-12-07T02:44:20.314Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-07T02:44:20.368Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T02:44:20.369Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  mountains.push(mountain); /* istanbul ignore next */cov_q0sdvsm27.s[30]++;\n  sendJSON(response, 200, mountain);\n}","timestamp":"2017-12-07T02:44:20.369Z"}
{"level":"info","message":"Responding with a 200 code and the following data.","timestamp":"2017-12-07T02:44:20.370Z"}
{"id":"86a36810-daf8-11e7-a749-87efee6446a9","name":"Mt. Evans","location":"Colorado","elevation":"14,235","level":"info","message":"","timestamp":"2017-12-07T02:44:20.370Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-07T02:44:20.379Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T02:44:20.379Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[35]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;\n    let oneMountain; /* istanbul ignore next */cov_q0sdvsm27.s[36]++;\n    for (let mountain of mountains) {/* istanbul ignore next */cov_q0sdvsm27.s[37]++;\n      if (request.url.query.id === Mountain.id)\n        {/* istanbul ignore next */cov_q0sdvsm27.b[5][0]++;cov_q0sdvsm27.s[38]++;oneMountain = mountain;} else /* istanbul ignore next */{cov_q0sdvsm27.b[5][1]++;}cov_q0sdvsm27.s[39]++;\n      break;\n    } /* istanbul ignore next */cov_q0sdvsm27.s[40]++;\n    sendJSON(response, 200, mountains); /* istanbul ignore next */cov_q0sdvsm27.s[41]++;\n    console.log('get', mountains);\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}\n}","timestamp":"2017-12-07T02:44:20.380Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-07T02:44:25.383Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T02:44:25.384Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[35]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;\n    let oneMountain; /* istanbul ignore next */cov_q0sdvsm27.s[36]++;\n    for (let mountain of mountains) {/* istanbul ignore next */cov_q0sdvsm27.s[37]++;\n      if (request.url.query.id === Mountain.id)\n        {/* istanbul ignore next */cov_q0sdvsm27.b[5][0]++;cov_q0sdvsm27.s[38]++;oneMountain = mountain;} else /* istanbul ignore next */{cov_q0sdvsm27.b[5][1]++;}cov_q0sdvsm27.s[39]++;\n      break;\n    } /* istanbul ignore next */cov_q0sdvsm27.s[40]++;\n    sendJSON(response, 200, mountains); /* istanbul ignore next */cov_q0sdvsm27.s[41]++;\n    console.log('get', mountains);\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}\n}","timestamp":"2017-12-07T02:44:25.384Z"}
{"level":"info","message":"Responding with a 200 code and the following data.","timestamp":"2017-12-07T02:44:25.384Z"}
[{"id":"86a36810-daf8-11e7-a749-87efee6446a9","name":"Mt. Evans","location":"Colorado","elevation":"14,235"}]
{"level":"info","message":"Adding an POST url and callback","timestamp":"2017-12-07T02:44:52.608Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-07T02:44:52.609Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  mountains.push(mountain); /* istanbul ignore next */cov_q0sdvsm27.s[30]++;\n  sendJSON(response, 200, mountain);\n}","timestamp":"2017-12-07T02:44:52.609Z"}
{"level":"info","message":"Adding an GET url and callback","timestamp":"2017-12-07T02:44:52.609Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-07T02:44:52.609Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[32]++;\n  sendJSON(response, 200, mountains); /* istanbul ignore next */cov_q0sdvsm27.s[33]++;\n  console.log('get', mountains);\n}","timestamp":"2017-12-07T02:44:52.609Z"}
{"level":"info","message":"Adding an GET url and callback","timestamp":"2017-12-07T02:44:52.609Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-07T02:44:52.609Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[35]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;\n    let oneMountain; /* istanbul ignore next */cov_q0sdvsm27.s[36]++;\n    for (let mountain of mountains) {/* istanbul ignore next */cov_q0sdvsm27.s[37]++;\n      if (request.url.query.id === mountain.id)\n        {/* istanbul ignore next */cov_q0sdvsm27.b[5][0]++;cov_q0sdvsm27.s[38]++;oneMountain = mountain;} else /* istanbul ignore next */{cov_q0sdvsm27.b[5][1]++;}cov_q0sdvsm27.s[39]++;\n      break;\n    } /* istanbul ignore next */cov_q0sdvsm27.s[40]++;\n    sendJSON(response, 200, mountains); /* istanbul ignore next */cov_q0sdvsm27.s[41]++;\n    console.log('get', mountains);\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}\n}","timestamp":"2017-12-07T02:44:52.609Z"}
{"level":"info","message":"Server is online at port 3000","timestamp":"2017-12-07T02:44:52.658Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-07T02:44:52.673Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T02:44:52.674Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  mountains.push(mountain); /* istanbul ignore next */cov_q0sdvsm27.s[30]++;\n  sendJSON(response, 200, mountain);\n}","timestamp":"2017-12-07T02:44:52.674Z"}
{"level":"info","message":"Responding with a 200 code and the following data.","timestamp":"2017-12-07T02:44:52.675Z"}
{"id":"99e4e930-daf8-11e7-b451-d9afa9c0d002","name":"Mt. Evans","location":"Colorado","elevation":"14,235","level":"info","message":"","timestamp":"2017-12-07T02:44:52.675Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-07T02:44:52.684Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T02:44:52.684Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[35]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;\n    let oneMountain; /* istanbul ignore next */cov_q0sdvsm27.s[36]++;\n    for (let mountain of mountains) {/* istanbul ignore next */cov_q0sdvsm27.s[37]++;\n      if (request.url.query.id === mountain.id)\n        {/* istanbul ignore next */cov_q0sdvsm27.b[5][0]++;cov_q0sdvsm27.s[38]++;oneMountain = mountain;} else /* istanbul ignore next */{cov_q0sdvsm27.b[5][1]++;}cov_q0sdvsm27.s[39]++;\n      break;\n    } /* istanbul ignore next */cov_q0sdvsm27.s[40]++;\n    sendJSON(response, 200, mountains); /* istanbul ignore next */cov_q0sdvsm27.s[41]++;\n    console.log('get', mountains);\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}\n}","timestamp":"2017-12-07T02:44:52.684Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-07T02:44:57.692Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T02:44:57.693Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[35]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;\n    let oneMountain; /* istanbul ignore next */cov_q0sdvsm27.s[36]++;\n    for (let mountain of mountains) {/* istanbul ignore next */cov_q0sdvsm27.s[37]++;\n      if (request.url.query.id === mountain.id)\n        {/* istanbul ignore next */cov_q0sdvsm27.b[5][0]++;cov_q0sdvsm27.s[38]++;oneMountain = mountain;} else /* istanbul ignore next */{cov_q0sdvsm27.b[5][1]++;}cov_q0sdvsm27.s[39]++;\n      break;\n    } /* istanbul ignore next */cov_q0sdvsm27.s[40]++;\n    sendJSON(response, 200, mountains); /* istanbul ignore next */cov_q0sdvsm27.s[41]++;\n    console.log('get', mountains);\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}\n}","timestamp":"2017-12-07T02:44:57.693Z"}
{"level":"info","message":"Responding with a 200 code and the following data.","timestamp":"2017-12-07T02:44:57.693Z"}
[{"id":"99e4e930-daf8-11e7-b451-d9afa9c0d002","name":"Mt. Evans","location":"Colorado","elevation":"14,235"}]
{"level":"info","message":"Adding an POST url and callback","timestamp":"2017-12-07T02:45:43.820Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-07T02:45:43.820Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  mountains.push(mountain); /* istanbul ignore next */cov_q0sdvsm27.s[30]++;\n  sendJSON(response, 200, mountain);\n}","timestamp":"2017-12-07T02:45:43.820Z"}
{"level":"info","message":"Adding an GET url and callback","timestamp":"2017-12-07T02:45:43.820Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-07T02:45:43.820Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[32]++;\n  sendJSON(response, 200, mountains); /* istanbul ignore next */cov_q0sdvsm27.s[33]++;\n  console.log('get', mountains);\n}","timestamp":"2017-12-07T02:45:43.821Z"}
{"level":"info","message":"Adding an GET url and callback","timestamp":"2017-12-07T02:45:43.821Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-07T02:45:43.821Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[35]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;\n    let oneMountain; /* istanbul ignore next */cov_q0sdvsm27.s[36]++;\n    for (let mountain of mountains) {/* istanbul ignore next */cov_q0sdvsm27.s[37]++;\n      if (request.url.query.id === mountain.id)\n        {/* istanbul ignore next */cov_q0sdvsm27.b[5][0]++;cov_q0sdvsm27.s[38]++;oneMountain = mountain;} else /* istanbul ignore next */{cov_q0sdvsm27.b[5][1]++;}cov_q0sdvsm27.s[39]++;\n      break;\n    } /* istanbul ignore next */cov_q0sdvsm27.s[40]++;\n    sendJSON(response, 200, mountains); /* istanbul ignore next */cov_q0sdvsm27.s[41]++;\n    console.log('get', mountains);\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}\n}","timestamp":"2017-12-07T02:45:43.821Z"}
{"level":"info","message":"Server is online at port 3000","timestamp":"2017-12-07T02:45:43.882Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-07T02:45:43.898Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T02:45:43.899Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  mountains.push(mountain); /* istanbul ignore next */cov_q0sdvsm27.s[30]++;\n  sendJSON(response, 200, mountain);\n}","timestamp":"2017-12-07T02:45:43.899Z"}
{"level":"info","message":"Responding with a 200 code and the following data.","timestamp":"2017-12-07T02:45:43.899Z"}
{"id":"b86d12b0-daf8-11e7-a8fc-6d8d02735152","name":"Mt. Evans","location":"Colorado","elevation":"14,235","level":"info","message":"","timestamp":"2017-12-07T02:45:43.899Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-07T02:45:43.908Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T02:45:43.908Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[35]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;\n    let oneMountain; /* istanbul ignore next */cov_q0sdvsm27.s[36]++;\n    for (let mountain of mountains) {/* istanbul ignore next */cov_q0sdvsm27.s[37]++;\n      if (request.url.query.id === mountain.id)\n        {/* istanbul ignore next */cov_q0sdvsm27.b[5][0]++;cov_q0sdvsm27.s[38]++;oneMountain = mountain;} else /* istanbul ignore next */{cov_q0sdvsm27.b[5][1]++;}cov_q0sdvsm27.s[39]++;\n      break;\n    } /* istanbul ignore next */cov_q0sdvsm27.s[40]++;\n    sendJSON(response, 200, mountains); /* istanbul ignore next */cov_q0sdvsm27.s[41]++;\n    console.log('get', mountains);\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}\n}","timestamp":"2017-12-07T02:45:43.908Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-07T02:45:48.915Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T02:45:48.915Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[35]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;\n    let oneMountain; /* istanbul ignore next */cov_q0sdvsm27.s[36]++;\n    for (let mountain of mountains) {/* istanbul ignore next */cov_q0sdvsm27.s[37]++;\n      if (request.url.query.id === mountain.id)\n        {/* istanbul ignore next */cov_q0sdvsm27.b[5][0]++;cov_q0sdvsm27.s[38]++;oneMountain = mountain;} else /* istanbul ignore next */{cov_q0sdvsm27.b[5][1]++;}cov_q0sdvsm27.s[39]++;\n      break;\n    } /* istanbul ignore next */cov_q0sdvsm27.s[40]++;\n    sendJSON(response, 200, mountains); /* istanbul ignore next */cov_q0sdvsm27.s[41]++;\n    console.log('get', mountains);\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}\n}","timestamp":"2017-12-07T02:45:48.916Z"}
{"level":"info","message":"Responding with a 200 code and the following data.","timestamp":"2017-12-07T02:45:48.916Z"}
[{"id":"b86d12b0-daf8-11e7-a8fc-6d8d02735152","name":"Mt. Evans","location":"Colorado","elevation":"14,235"}]
{"level":"info","message":"Adding an POST url and callback","timestamp":"2017-12-07T02:46:21.895Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-07T02:46:21.896Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  mountains.push(mountain); /* istanbul ignore next */cov_q0sdvsm27.s[30]++;\n  sendJSON(response, 200, mountain);\n}","timestamp":"2017-12-07T02:46:21.896Z"}
{"level":"info","message":"Adding an GET url and callback","timestamp":"2017-12-07T02:46:21.896Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-07T02:46:21.896Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[32]++;\n  sendJSON(response, 200, mountains); /* istanbul ignore next */cov_q0sdvsm27.s[33]++;\n  console.log('get', mountains);\n}","timestamp":"2017-12-07T02:46:21.896Z"}
{"level":"info","message":"Adding an GET url and callback","timestamp":"2017-12-07T02:46:21.896Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-07T02:46:21.896Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[35]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;\n    let oneMountain; /* istanbul ignore next */cov_q0sdvsm27.s[36]++;\n    for (let mountain of mountains) {/* istanbul ignore next */cov_q0sdvsm27.s[37]++;\n      if (request.url.query.id === mountain.id)\n        {/* istanbul ignore next */cov_q0sdvsm27.b[5][0]++;cov_q0sdvsm27.s[38]++;oneMountain = mountain;} else /* istanbul ignore next */{cov_q0sdvsm27.b[5][1]++;}cov_q0sdvsm27.s[39]++;\n      break;\n    } /* istanbul ignore next */cov_q0sdvsm27.s[40]++;\n    sendJSON(response, 200, mountains); /* istanbul ignore next */cov_q0sdvsm27.s[41]++;\n    console.log('get', mountains);\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}\n}","timestamp":"2017-12-07T02:46:21.896Z"}
{"level":"info","message":"Server is online at port 3000","timestamp":"2017-12-07T02:46:21.939Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-07T02:46:21.956Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T02:46:21.958Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  mountains.push(mountain); /* istanbul ignore next */cov_q0sdvsm27.s[30]++;\n  sendJSON(response, 200, mountain);\n}","timestamp":"2017-12-07T02:46:21.958Z"}
{"level":"info","message":"Responding with a 200 code and the following data.","timestamp":"2017-12-07T02:46:21.958Z"}
{"id":"cf1c6a60-daf8-11e7-8606-d548f7743729","name":"Mt. Evans","location":"Colorado","elevation":"14,235","level":"info","message":"","timestamp":"2017-12-07T02:46:21.958Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-07T02:46:21.969Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T02:46:21.969Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[35]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;\n    let oneMountain; /* istanbul ignore next */cov_q0sdvsm27.s[36]++;\n    for (let mountain of mountains) {/* istanbul ignore next */cov_q0sdvsm27.s[37]++;\n      if (request.url.query.id === mountain.id)\n        {/* istanbul ignore next */cov_q0sdvsm27.b[5][0]++;cov_q0sdvsm27.s[38]++;oneMountain = mountain;} else /* istanbul ignore next */{cov_q0sdvsm27.b[5][1]++;}cov_q0sdvsm27.s[39]++;\n      break;\n    } /* istanbul ignore next */cov_q0sdvsm27.s[40]++;\n    sendJSON(response, 200, mountains); /* istanbul ignore next */cov_q0sdvsm27.s[41]++;\n    console.log('get', mountains);\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}\n}","timestamp":"2017-12-07T02:46:21.969Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-07T02:46:26.977Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T02:46:26.978Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[35]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;\n    let oneMountain; /* istanbul ignore next */cov_q0sdvsm27.s[36]++;\n    for (let mountain of mountains) {/* istanbul ignore next */cov_q0sdvsm27.s[37]++;\n      if (request.url.query.id === mountain.id)\n        {/* istanbul ignore next */cov_q0sdvsm27.b[5][0]++;cov_q0sdvsm27.s[38]++;oneMountain = mountain;} else /* istanbul ignore next */{cov_q0sdvsm27.b[5][1]++;}cov_q0sdvsm27.s[39]++;\n      break;\n    } /* istanbul ignore next */cov_q0sdvsm27.s[40]++;\n    sendJSON(response, 200, mountains); /* istanbul ignore next */cov_q0sdvsm27.s[41]++;\n    console.log('get', mountains);\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}\n}","timestamp":"2017-12-07T02:46:26.978Z"}
{"level":"info","message":"Responding with a 200 code and the following data.","timestamp":"2017-12-07T02:46:26.978Z"}
[{"id":"cf1c6a60-daf8-11e7-8606-d548f7743729","name":"Mt. Evans","location":"Colorado","elevation":"14,235"}]
{"level":"info","message":"Adding an POST url and callback","timestamp":"2017-12-07T02:46:44.105Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-07T02:46:44.106Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  mountains.push(mountain); /* istanbul ignore next */cov_q0sdvsm27.s[30]++;\n  sendJSON(response, 200, mountain);\n}","timestamp":"2017-12-07T02:46:44.106Z"}
{"level":"info","message":"Adding an GET url and callback","timestamp":"2017-12-07T02:46:44.106Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-07T02:46:44.106Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[32]++;\n  sendJSON(response, 200, mountains); /* istanbul ignore next */cov_q0sdvsm27.s[33]++;\n  console.log('get', mountains);\n}","timestamp":"2017-12-07T02:46:44.106Z"}
{"level":"info","message":"Adding an GET url and callback","timestamp":"2017-12-07T02:46:44.106Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-07T02:46:44.106Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[35]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;\n    let oneMountain; /* istanbul ignore next */cov_q0sdvsm27.s[36]++;\n    for (let mountain of mountains) {/* istanbul ignore next */cov_q0sdvsm27.s[37]++;\n      if (request.url.query.id === mountain.id)\n        {/* istanbul ignore next */cov_q0sdvsm27.b[5][0]++;cov_q0sdvsm27.s[38]++;oneMountain = mountain;} else /* istanbul ignore next */{cov_q0sdvsm27.b[5][1]++;}cov_q0sdvsm27.s[39]++;\n      break;\n    } /* istanbul ignore next */cov_q0sdvsm27.s[40]++;\n    sendJSON(response, 200, mountains); /* istanbul ignore next */cov_q0sdvsm27.s[41]++;\n    console.log('get', mountains);\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}\n}","timestamp":"2017-12-07T02:46:44.106Z"}
{"level":"info","message":"Server is online at port 3000","timestamp":"2017-12-07T02:46:44.161Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-07T02:46:44.177Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T02:46:44.179Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  mountains.push(mountain); /* istanbul ignore next */cov_q0sdvsm27.s[30]++;\n  sendJSON(response, 200, mountain);\n}","timestamp":"2017-12-07T02:46:44.179Z"}
{"level":"info","message":"Responding with a 200 code and the following data.","timestamp":"2017-12-07T02:46:44.179Z"}
{"id":"dc5b1230-daf8-11e7-9b12-9fefed6f3fcc","name":"Mt. Evans","location":"Colorado","elevation":"14,235","level":"info","message":"","timestamp":"2017-12-07T02:46:44.179Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-07T02:46:44.190Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T02:46:44.191Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[35]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;\n    let oneMountain; /* istanbul ignore next */cov_q0sdvsm27.s[36]++;\n    for (let mountain of mountains) {/* istanbul ignore next */cov_q0sdvsm27.s[37]++;\n      if (request.url.query.id === mountain.id)\n        {/* istanbul ignore next */cov_q0sdvsm27.b[5][0]++;cov_q0sdvsm27.s[38]++;oneMountain = mountain;} else /* istanbul ignore next */{cov_q0sdvsm27.b[5][1]++;}cov_q0sdvsm27.s[39]++;\n      break;\n    } /* istanbul ignore next */cov_q0sdvsm27.s[40]++;\n    sendJSON(response, 200, mountains); /* istanbul ignore next */cov_q0sdvsm27.s[41]++;\n    console.log('get', mountains);\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}\n}","timestamp":"2017-12-07T02:46:44.191Z"}
{"level":"info","message":"Adding an POST url and callback","timestamp":"2017-12-07T02:47:36.476Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-07T02:47:36.477Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  mountains.push(mountain); /* istanbul ignore next */cov_q0sdvsm27.s[30]++;\n  sendJSON(response, 200, mountain);\n}","timestamp":"2017-12-07T02:47:36.477Z"}
{"level":"info","message":"Adding an GET url and callback","timestamp":"2017-12-07T02:47:36.477Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-07T02:47:36.477Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[32]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;\n    let oneMountain; /* istanbul ignore next */cov_q0sdvsm27.s[33]++;\n    for (let mountain of mountains) {/* istanbul ignore next */cov_q0sdvsm27.s[34]++;\n      if (request.url.query.id === mountain.id)\n        {/* istanbul ignore next */cov_q0sdvsm27.b[5][0]++;cov_q0sdvsm27.s[35]++;oneMountain = mountain;} else /* istanbul ignore next */{cov_q0sdvsm27.b[5][1]++;}cov_q0sdvsm27.s[36]++;\n      break;\n    } /* istanbul ignore next */cov_q0sdvsm27.s[37]++;\n    sendJSON(response, 200, mountains); /* istanbul ignore next */cov_q0sdvsm27.s[38]++;\n    console.log('get', mountains);\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}\n}","timestamp":"2017-12-07T02:47:36.477Z"}
{"level":"info","message":"Server is online at port 3000","timestamp":"2017-12-07T02:47:36.526Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-07T02:47:36.577Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T02:47:36.578Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  mountains.push(mountain); /* istanbul ignore next */cov_q0sdvsm27.s[30]++;\n  sendJSON(response, 200, mountain);\n}","timestamp":"2017-12-07T02:47:36.578Z"}
{"level":"info","message":"Responding with a 200 code and the following data.","timestamp":"2017-12-07T02:47:36.579Z"}
{"id":"fb968620-daf8-11e7-8b6b-7730df40a636","name":"Mt. Evans","location":"Colorado","elevation":"14,235","level":"info","message":"","timestamp":"2017-12-07T02:47:36.579Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-07T02:47:36.588Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T02:47:36.588Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[32]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;\n    let oneMountain; /* istanbul ignore next */cov_q0sdvsm27.s[33]++;\n    for (let mountain of mountains) {/* istanbul ignore next */cov_q0sdvsm27.s[34]++;\n      if (request.url.query.id === mountain.id)\n        {/* istanbul ignore next */cov_q0sdvsm27.b[5][0]++;cov_q0sdvsm27.s[35]++;oneMountain = mountain;} else /* istanbul ignore next */{cov_q0sdvsm27.b[5][1]++;}cov_q0sdvsm27.s[36]++;\n      break;\n    } /* istanbul ignore next */cov_q0sdvsm27.s[37]++;\n    sendJSON(response, 200, mountains); /* istanbul ignore next */cov_q0sdvsm27.s[38]++;\n    console.log('get', mountains);\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}\n}","timestamp":"2017-12-07T02:47:36.588Z"}
{"level":"info","message":"Adding an POST url and callback","timestamp":"2017-12-07T02:48:19.762Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-07T02:48:19.763Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  mountains.push(mountain); /* istanbul ignore next */cov_q0sdvsm27.s[30]++;\n  sendJSON(response, 200, mountain);\n}","timestamp":"2017-12-07T02:48:19.763Z"}
{"level":"info","message":"Adding an GET url and callback","timestamp":"2017-12-07T02:48:19.763Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-07T02:48:19.764Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[32]++;\n  sendJSON(response, 200, mountains); /* istanbul ignore next */cov_q0sdvsm27.s[33]++;\n  console.log('get', mountains);\n}","timestamp":"2017-12-07T02:48:19.764Z"}
{"level":"info","message":"Server is online at port 3000","timestamp":"2017-12-07T02:48:19.811Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-07T02:48:19.862Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T02:48:19.863Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  mountains.push(mountain); /* istanbul ignore next */cov_q0sdvsm27.s[30]++;\n  sendJSON(response, 200, mountain);\n}","timestamp":"2017-12-07T02:48:19.863Z"}
{"level":"info","message":"Responding with a 200 code and the following data.","timestamp":"2017-12-07T02:48:19.863Z"}
{"id":"15634a70-daf9-11e7-a428-89fb27d7d2e8","name":"Mt. Evans","location":"Colorado","elevation":"14,235","level":"info","message":"","timestamp":"2017-12-07T02:48:19.863Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-07T02:48:19.873Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T02:48:19.873Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[32]++;\n  sendJSON(response, 200, mountains); /* istanbul ignore next */cov_q0sdvsm27.s[33]++;\n  console.log('get', mountains);\n}","timestamp":"2017-12-07T02:48:19.873Z"}
{"level":"info","message":"Responding with a 200 code and the following data.","timestamp":"2017-12-07T02:48:19.873Z"}
[{"id":"15634a70-daf9-11e7-a428-89fb27d7d2e8","name":"Mt. Evans","location":"Colorado","elevation":"14,235"}]
{"level":"info","message":"Adding an POST url and callback","timestamp":"2017-12-07T02:50:35.077Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-07T02:50:35.078Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  mountains.push(mountain); /* istanbul ignore next */cov_q0sdvsm27.s[30]++;\n  sendJSON(response, 200, mountain);\n}","timestamp":"2017-12-07T02:50:35.078Z"}
{"level":"info","message":"Adding an GET url and callback","timestamp":"2017-12-07T02:50:35.078Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-07T02:50:35.078Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[32]++;\n  sendJSON(response, 200, mountains); /* istanbul ignore next */cov_q0sdvsm27.s[33]++;\n  console.log('get', mountains);\n}","timestamp":"2017-12-07T02:50:35.078Z"}
{"level":"info","message":"Adding an GET url and callback","timestamp":"2017-12-07T02:50:35.078Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-07T02:50:35.078Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[35]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;\n    let oneMountain; /* istanbul ignore next */cov_q0sdvsm27.s[36]++;\n    for (let mountain of mountains) {/* istanbul ignore next */cov_q0sdvsm27.s[37]++;\n      if (request.url.query.id === mountain['id'])\n        {/* istanbul ignore next */cov_q0sdvsm27.b[5][0]++;cov_q0sdvsm27.s[38]++;oneMountain = mountain;} else /* istanbul ignore next */{cov_q0sdvsm27.b[5][1]++;}cov_q0sdvsm27.s[39]++;\n      return;\n    } /* istanbul ignore next */cov_q0sdvsm27.s[40]++;\n    sendJSON(response, 200, mountains); /* istanbul ignore next */cov_q0sdvsm27.s[41]++;\n    console.log('get', mountains);\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}\n}","timestamp":"2017-12-07T02:50:35.078Z"}
{"level":"info","message":"Server is online at port 3000","timestamp":"2017-12-07T02:50:35.124Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-07T02:50:35.173Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T02:50:35.174Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  mountains.push(mountain); /* istanbul ignore next */cov_q0sdvsm27.s[30]++;\n  sendJSON(response, 200, mountain);\n}","timestamp":"2017-12-07T02:50:35.174Z"}
{"level":"info","message":"Responding with a 200 code and the following data.","timestamp":"2017-12-07T02:50:35.175Z"}
{"id":"660a1c60-daf9-11e7-9af4-35ca65061c8e","name":"Mt. Evans","location":"Colorado","elevation":"14,235","level":"info","message":"","timestamp":"2017-12-07T02:50:35.175Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-07T02:50:35.183Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T02:50:35.184Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[35]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;\n    let oneMountain; /* istanbul ignore next */cov_q0sdvsm27.s[36]++;\n    for (let mountain of mountains) {/* istanbul ignore next */cov_q0sdvsm27.s[37]++;\n      if (request.url.query.id === mountain['id'])\n        {/* istanbul ignore next */cov_q0sdvsm27.b[5][0]++;cov_q0sdvsm27.s[38]++;oneMountain = mountain;} else /* istanbul ignore next */{cov_q0sdvsm27.b[5][1]++;}cov_q0sdvsm27.s[39]++;\n      return;\n    } /* istanbul ignore next */cov_q0sdvsm27.s[40]++;\n    sendJSON(response, 200, mountains); /* istanbul ignore next */cov_q0sdvsm27.s[41]++;\n    console.log('get', mountains);\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}\n}","timestamp":"2017-12-07T02:50:35.184Z"}
{"level":"info","message":"Adding an POST url and callback","timestamp":"2017-12-07T02:52:43.781Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-07T02:52:43.782Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  mountains.push(mountain); /* istanbul ignore next */cov_q0sdvsm27.s[30]++;\n  sendJSON(response, 200, mountain);\n}","timestamp":"2017-12-07T02:52:43.782Z"}
{"level":"info","message":"Adding an GET url and callback","timestamp":"2017-12-07T02:52:43.782Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-07T02:52:43.782Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[32]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;\n    let oneMountain; /* istanbul ignore next */cov_q0sdvsm27.s[33]++;\n    for (let mountain of mountains) {/* istanbul ignore next */cov_q0sdvsm27.s[34]++;\n      if (request.url.query.id === mountain['id'])\n        {/* istanbul ignore next */cov_q0sdvsm27.b[5][0]++;cov_q0sdvsm27.s[35]++;oneMountain = mountain;} else /* istanbul ignore next */{cov_q0sdvsm27.b[5][1]++;}cov_q0sdvsm27.s[36]++;\n      return;\n    } /* istanbul ignore next */cov_q0sdvsm27.s[37]++;\n    sendJSON(response, 200, mountains); /* istanbul ignore next */cov_q0sdvsm27.s[38]++;\n    console.log('get', mountains);\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}\n}","timestamp":"2017-12-07T02:52:43.782Z"}
{"level":"info","message":"Server is online at port 3000","timestamp":"2017-12-07T02:52:43.854Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-07T02:52:43.906Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T02:52:43.907Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  mountains.push(mountain); /* istanbul ignore next */cov_q0sdvsm27.s[30]++;\n  sendJSON(response, 200, mountain);\n}","timestamp":"2017-12-07T02:52:43.907Z"}
{"level":"info","message":"Responding with a 200 code and the following data.","timestamp":"2017-12-07T02:52:43.907Z"}
{"id":"b2c53530-daf9-11e7-9a15-4770163e5d3f","name":"Mt. Evans","location":"Colorado","elevation":"14,235","level":"info","message":"","timestamp":"2017-12-07T02:52:43.907Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-07T02:52:43.916Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T02:52:43.917Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[32]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;\n    let oneMountain; /* istanbul ignore next */cov_q0sdvsm27.s[33]++;\n    for (let mountain of mountains) {/* istanbul ignore next */cov_q0sdvsm27.s[34]++;\n      if (request.url.query.id === mountain['id'])\n        {/* istanbul ignore next */cov_q0sdvsm27.b[5][0]++;cov_q0sdvsm27.s[35]++;oneMountain = mountain;} else /* istanbul ignore next */{cov_q0sdvsm27.b[5][1]++;}cov_q0sdvsm27.s[36]++;\n      return;\n    } /* istanbul ignore next */cov_q0sdvsm27.s[37]++;\n    sendJSON(response, 200, mountains); /* istanbul ignore next */cov_q0sdvsm27.s[38]++;\n    console.log('get', mountains);\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}\n}","timestamp":"2017-12-07T02:52:43.917Z"}
{"level":"info","message":"Adding an POST url and callback","timestamp":"2017-12-07T02:54:23.709Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-07T02:54:23.710Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  mountains.push(mountain); /* istanbul ignore next */cov_q0sdvsm27.s[30]++;\n  sendJSON(response, 200, mountain);\n}","timestamp":"2017-12-07T02:54:23.710Z"}
{"level":"info","message":"Adding an GET url and callback","timestamp":"2017-12-07T02:54:23.710Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-07T02:54:23.710Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[32]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;\n    let oneMountain; /* istanbul ignore next */cov_q0sdvsm27.s[33]++;\n    for (let mountain of mountains) {/* istanbul ignore next */cov_q0sdvsm27.s[34]++;\n      if (request.url.query.id === mountain['id'])\n        {/* istanbul ignore next */cov_q0sdvsm27.b[5][0]++;cov_q0sdvsm27.s[35]++;oneMountain = mountain;} else /* istanbul ignore next */{cov_q0sdvsm27.b[5][1]++;}cov_q0sdvsm27.s[36]++;\n      return;\n    }\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}cov_q0sdvsm27.s[37]++;\n  sendJSON(response, 200, mountains); /* istanbul ignore next */cov_q0sdvsm27.s[38]++;\n  console.log('get', mountains);\n}","timestamp":"2017-12-07T02:54:23.710Z"}
{"level":"info","message":"Server is online at port 3000","timestamp":"2017-12-07T02:54:23.757Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-07T02:54:23.806Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T02:54:23.807Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  mountains.push(mountain); /* istanbul ignore next */cov_q0sdvsm27.s[30]++;\n  sendJSON(response, 200, mountain);\n}","timestamp":"2017-12-07T02:54:23.807Z"}
{"level":"info","message":"Responding with a 200 code and the following data.","timestamp":"2017-12-07T02:54:23.808Z"}
{"id":"ee50e400-daf9-11e7-af7c-275cfc43b8da","name":"Mt. Evans","location":"Colorado","elevation":"14,235","level":"info","message":"","timestamp":"2017-12-07T02:54:23.808Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-07T02:54:23.817Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T02:54:23.818Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[32]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;\n    let oneMountain; /* istanbul ignore next */cov_q0sdvsm27.s[33]++;\n    for (let mountain of mountains) {/* istanbul ignore next */cov_q0sdvsm27.s[34]++;\n      if (request.url.query.id === mountain['id'])\n        {/* istanbul ignore next */cov_q0sdvsm27.b[5][0]++;cov_q0sdvsm27.s[35]++;oneMountain = mountain;} else /* istanbul ignore next */{cov_q0sdvsm27.b[5][1]++;}cov_q0sdvsm27.s[36]++;\n      return;\n    }\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}cov_q0sdvsm27.s[37]++;\n  sendJSON(response, 200, mountains); /* istanbul ignore next */cov_q0sdvsm27.s[38]++;\n  console.log('get', mountains);\n}","timestamp":"2017-12-07T02:54:23.818Z"}
{"level":"info","message":"Adding an POST url and callback","timestamp":"2017-12-07T02:55:29.196Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-07T02:55:29.196Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  mountains.push(mountain); /* istanbul ignore next */cov_q0sdvsm27.s[30]++;\n  sendJSON(response, 200, mountain);\n}","timestamp":"2017-12-07T02:55:29.196Z"}
{"level":"info","message":"Adding an GET url and callback","timestamp":"2017-12-07T02:55:29.197Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-07T02:55:29.197Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[32]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;\n    let oneMountain; /* istanbul ignore next */cov_q0sdvsm27.s[33]++;\n    for (let mountain of mountains) {/* istanbul ignore next */cov_q0sdvsm27.s[34]++;\n      if (request.url.query.id === mountain.id)\n        {/* istanbul ignore next */cov_q0sdvsm27.b[5][0]++;cov_q0sdvsm27.s[35]++;oneMountain = mountain;} else /* istanbul ignore next */{cov_q0sdvsm27.b[5][1]++;}cov_q0sdvsm27.s[36]++;\n      break;\n    }\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}cov_q0sdvsm27.s[37]++;\n  sendJSON(response, 200, mountains); /* istanbul ignore next */cov_q0sdvsm27.s[38]++;\n  console.log('get', mountains);\n}","timestamp":"2017-12-07T02:55:29.197Z"}
{"level":"info","message":"Server is online at port 3000","timestamp":"2017-12-07T02:55:29.246Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-07T02:55:29.297Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T02:55:29.298Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  mountains.push(mountain); /* istanbul ignore next */cov_q0sdvsm27.s[30]++;\n  sendJSON(response, 200, mountain);\n}","timestamp":"2017-12-07T02:55:29.298Z"}
{"level":"info","message":"Responding with a 200 code and the following data.","timestamp":"2017-12-07T02:55:29.299Z"}
{"id":"155a0630-dafa-11e7-b04c-9385f8023df1","name":"Mt. Evans","location":"Colorado","elevation":"14,235","level":"info","message":"","timestamp":"2017-12-07T02:55:29.299Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-07T02:55:29.308Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T02:55:29.308Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[32]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;\n    let oneMountain; /* istanbul ignore next */cov_q0sdvsm27.s[33]++;\n    for (let mountain of mountains) {/* istanbul ignore next */cov_q0sdvsm27.s[34]++;\n      if (request.url.query.id === mountain.id)\n        {/* istanbul ignore next */cov_q0sdvsm27.b[5][0]++;cov_q0sdvsm27.s[35]++;oneMountain = mountain;} else /* istanbul ignore next */{cov_q0sdvsm27.b[5][1]++;}cov_q0sdvsm27.s[36]++;\n      break;\n    }\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}cov_q0sdvsm27.s[37]++;\n  sendJSON(response, 200, mountains); /* istanbul ignore next */cov_q0sdvsm27.s[38]++;\n  console.log('get', mountains);\n}","timestamp":"2017-12-07T02:55:29.308Z"}
{"level":"info","message":"Responding with a 200 code and the following data.","timestamp":"2017-12-07T02:55:29.309Z"}
[{"id":"155a0630-dafa-11e7-b04c-9385f8023df1","name":"Mt. Evans","location":"Colorado","elevation":"14,235"}]
{"level":"info","message":"Adding an POST url and callback","timestamp":"2017-12-07T02:57:20.204Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-07T02:57:20.205Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  mountains.push(mountain); /* istanbul ignore next */cov_q0sdvsm27.s[30]++;\n  sendJSON(response, 200, mountain);\n}","timestamp":"2017-12-07T02:57:20.205Z"}
{"level":"info","message":"Adding an GET url and callback","timestamp":"2017-12-07T02:57:20.205Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-07T02:57:20.205Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[32]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;\n    let oneMountain; /* istanbul ignore next */cov_q0sdvsm27.s[33]++;\n    for (let mountain of mountains) {/* istanbul ignore next */cov_q0sdvsm27.s[34]++;\n      if (request.url.query.id === mountain.id)\n        {/* istanbul ignore next */cov_q0sdvsm27.b[5][0]++;cov_q0sdvsm27.s[35]++;oneMountain = mountain;} else /* istanbul ignore next */{cov_q0sdvsm27.b[5][1]++;}cov_q0sdvsm27.s[36]++;\n      break;\n    }\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}cov_q0sdvsm27.s[37]++;\n  sendJSON(response, 200, mountains); /* istanbul ignore next */cov_q0sdvsm27.s[38]++;\n  console.log('get', mountains);\n}","timestamp":"2017-12-07T02:57:20.205Z"}
{"level":"info","message":"Server is online at port 3000","timestamp":"2017-12-07T02:57:20.255Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-07T02:57:20.270Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T02:57:20.271Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  mountains.push(mountain); /* istanbul ignore next */cov_q0sdvsm27.s[30]++;\n  sendJSON(response, 200, mountain);\n}","timestamp":"2017-12-07T02:57:20.271Z"}
{"level":"info","message":"Responding with a 200 code and the following data.","timestamp":"2017-12-07T02:57:20.272Z"}
{"id":"577f01f0-dafa-11e7-9a1c-9bc867a0ecd9","name":"Mt. Evans","location":"Colorado","elevation":"14,235","level":"info","message":"","timestamp":"2017-12-07T02:57:20.272Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-07T02:57:20.281Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T02:57:20.281Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[32]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;\n    let oneMountain; /* istanbul ignore next */cov_q0sdvsm27.s[33]++;\n    for (let mountain of mountains) {/* istanbul ignore next */cov_q0sdvsm27.s[34]++;\n      if (request.url.query.id === mountain.id)\n        {/* istanbul ignore next */cov_q0sdvsm27.b[5][0]++;cov_q0sdvsm27.s[35]++;oneMountain = mountain;} else /* istanbul ignore next */{cov_q0sdvsm27.b[5][1]++;}cov_q0sdvsm27.s[36]++;\n      break;\n    }\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}cov_q0sdvsm27.s[37]++;\n  sendJSON(response, 200, mountains); /* istanbul ignore next */cov_q0sdvsm27.s[38]++;\n  console.log('get', mountains);\n}","timestamp":"2017-12-07T02:57:20.281Z"}
{"level":"info","message":"Responding with a 200 code and the following data.","timestamp":"2017-12-07T02:57:20.282Z"}
[{"id":"577f01f0-dafa-11e7-9a1c-9bc867a0ecd9","name":"Mt. Evans","location":"Colorado","elevation":"14,235"}]
{"level":"info","message":"Adding an POST url and callback","timestamp":"2017-12-07T02:57:51.742Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-07T02:57:51.742Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  mountains.push(mountain); /* istanbul ignore next */cov_q0sdvsm27.s[30]++;\n  sendJSON(response, 200, mountain);\n}","timestamp":"2017-12-07T02:57:51.742Z"}
{"level":"info","message":"Adding an GET url and callback","timestamp":"2017-12-07T02:57:51.742Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-07T02:57:51.742Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[32]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;\n    let oneMountain; /* istanbul ignore next */cov_q0sdvsm27.s[33]++;\n    for (let mountain of mountains) {/* istanbul ignore next */cov_q0sdvsm27.s[34]++;\n      if (request.url.query.id === mountain.id)\n        {/* istanbul ignore next */cov_q0sdvsm27.b[5][0]++;cov_q0sdvsm27.s[35]++;oneMountain = mountain;} else /* istanbul ignore next */{cov_q0sdvsm27.b[5][1]++;}cov_q0sdvsm27.s[36]++;\n      break;\n    }\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}cov_q0sdvsm27.s[37]++;\n  sendJSON(response, 200, mountains); /* istanbul ignore next */cov_q0sdvsm27.s[38]++;\n  console.log('get', mountains);\n}","timestamp":"2017-12-07T02:57:51.743Z"}
{"level":"info","message":"Server is online at port 3000","timestamp":"2017-12-07T02:57:51.785Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-07T02:57:51.800Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T02:57:51.801Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  mountains.push(mountain); /* istanbul ignore next */cov_q0sdvsm27.s[30]++;\n  sendJSON(response, 200, mountain);\n}","timestamp":"2017-12-07T02:57:51.801Z"}
{"level":"info","message":"Responding with a 200 code and the following data.","timestamp":"2017-12-07T02:57:51.801Z"}
{"id":"6a4a1a90-dafa-11e7-9f61-3d60a4f29806","name":"Mt. Evans","location":"Colorado","elevation":"14,235","level":"info","message":"","timestamp":"2017-12-07T02:57:51.801Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-07T02:57:51.810Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T02:57:51.811Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[32]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;\n    let oneMountain; /* istanbul ignore next */cov_q0sdvsm27.s[33]++;\n    for (let mountain of mountains) {/* istanbul ignore next */cov_q0sdvsm27.s[34]++;\n      if (request.url.query.id === mountain.id)\n        {/* istanbul ignore next */cov_q0sdvsm27.b[5][0]++;cov_q0sdvsm27.s[35]++;oneMountain = mountain;} else /* istanbul ignore next */{cov_q0sdvsm27.b[5][1]++;}cov_q0sdvsm27.s[36]++;\n      break;\n    }\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}cov_q0sdvsm27.s[37]++;\n  sendJSON(response, 200, mountains); /* istanbul ignore next */cov_q0sdvsm27.s[38]++;\n  console.log('get', mountains);\n}","timestamp":"2017-12-07T02:57:51.811Z"}
{"level":"info","message":"Responding with a 200 code and the following data.","timestamp":"2017-12-07T02:57:51.811Z"}
[{"id":"6a4a1a90-dafa-11e7-9f61-3d60a4f29806","name":"Mt. Evans","location":"Colorado","elevation":"14,235"}]
{"level":"info","message":"Adding an POST url and callback","timestamp":"2017-12-07T02:58:19.865Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-07T02:58:19.866Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  mountains.push(mountain); /* istanbul ignore next */cov_q0sdvsm27.s[30]++;\n  sendJSON(response, 200, mountain);\n}","timestamp":"2017-12-07T02:58:19.867Z"}
{"level":"info","message":"Adding an GET url and callback","timestamp":"2017-12-07T02:58:19.867Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-07T02:58:19.867Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[32]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;\n    let oneMountain; /* istanbul ignore next */cov_q0sdvsm27.s[33]++;\n    for (let mountain of mountains) {/* istanbul ignore next */cov_q0sdvsm27.s[34]++;\n      if (request.url.query.id === mountain.id)\n        {/* istanbul ignore next */cov_q0sdvsm27.b[5][0]++;cov_q0sdvsm27.s[35]++;oneMountain = mountain;} else /* istanbul ignore next */{cov_q0sdvsm27.b[5][1]++;}cov_q0sdvsm27.s[36]++;\n      break;\n    }\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}cov_q0sdvsm27.s[37]++;\n  sendJSON(response, 200, mountains); /* istanbul ignore next */cov_q0sdvsm27.s[38]++;\n  console.log('get', mountains);\n}","timestamp":"2017-12-07T02:58:19.867Z"}
{"level":"info","message":"Server is online at port 3000","timestamp":"2017-12-07T02:58:19.911Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-07T02:58:19.925Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T02:58:19.926Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  mountains.push(mountain); /* istanbul ignore next */cov_q0sdvsm27.s[30]++;\n  sendJSON(response, 200, mountain);\n}","timestamp":"2017-12-07T02:58:19.926Z"}
{"level":"info","message":"Responding with a 200 code and the following data.","timestamp":"2017-12-07T02:58:19.927Z"}
{"id":"7b0dca70-dafa-11e7-b6c6-f1e5602bee80","name":"Mt. Evans","location":"Colorado","elevation":"14,235","level":"info","message":"","timestamp":"2017-12-07T02:58:19.927Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-07T02:58:19.936Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T02:58:19.937Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[32]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;\n    let oneMountain; /* istanbul ignore next */cov_q0sdvsm27.s[33]++;\n    for (let mountain of mountains) {/* istanbul ignore next */cov_q0sdvsm27.s[34]++;\n      if (request.url.query.id === mountain.id)\n        {/* istanbul ignore next */cov_q0sdvsm27.b[5][0]++;cov_q0sdvsm27.s[35]++;oneMountain = mountain;} else /* istanbul ignore next */{cov_q0sdvsm27.b[5][1]++;}cov_q0sdvsm27.s[36]++;\n      break;\n    }\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}cov_q0sdvsm27.s[37]++;\n  sendJSON(response, 200, mountains); /* istanbul ignore next */cov_q0sdvsm27.s[38]++;\n  console.log('get', mountains);\n}","timestamp":"2017-12-07T02:58:19.937Z"}
{"level":"info","message":"Responding with a 200 code and the following data.","timestamp":"2017-12-07T02:58:19.937Z"}
[{"id":"7b0dca70-dafa-11e7-b6c6-f1e5602bee80","name":"Mt. Evans","location":"Colorado","elevation":"14,235"}]
{"level":"info","message":"Adding an POST url and callback","timestamp":"2017-12-07T02:58:37.078Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-07T02:58:37.079Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  mountains.push(mountain); /* istanbul ignore next */cov_q0sdvsm27.s[30]++;\n  sendJSON(response, 200, mountain);\n}","timestamp":"2017-12-07T02:58:37.079Z"}
{"level":"info","message":"Adding an GET url and callback","timestamp":"2017-12-07T02:58:37.079Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-07T02:58:37.079Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[32]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;\n    let oneMountain; /* istanbul ignore next */cov_q0sdvsm27.s[33]++;\n    for (let mountain of mountains) {/* istanbul ignore next */cov_q0sdvsm27.s[34]++;\n      if (request.url.query.id === mountain.id)\n        {/* istanbul ignore next */cov_q0sdvsm27.b[5][0]++;cov_q0sdvsm27.s[35]++;oneMountain = mountain;} else /* istanbul ignore next */{cov_q0sdvsm27.b[5][1]++;}cov_q0sdvsm27.s[36]++;\n      break;\n    }\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}cov_q0sdvsm27.s[37]++;\n  sendJSON(response, 200, mountains); /* istanbul ignore next */cov_q0sdvsm27.s[38]++;\n  console.log('get', mountains);\n}","timestamp":"2017-12-07T02:58:37.079Z"}
{"level":"info","message":"Server is online at port 3000","timestamp":"2017-12-07T02:58:37.122Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-07T02:58:37.136Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T02:58:37.137Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  mountains.push(mountain); /* istanbul ignore next */cov_q0sdvsm27.s[30]++;\n  sendJSON(response, 200, mountain);\n}","timestamp":"2017-12-07T02:58:37.137Z"}
{"level":"info","message":"Responding with a 200 code and the following data.","timestamp":"2017-12-07T02:58:37.138Z"}
{"id":"854ffb20-dafa-11e7-897d-978e1f17b10c","name":"Mt. Evans","location":"Colorado","elevation":"14,235","level":"info","message":"","timestamp":"2017-12-07T02:58:37.138Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-07T02:58:37.144Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T02:58:37.145Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[32]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;\n    let oneMountain; /* istanbul ignore next */cov_q0sdvsm27.s[33]++;\n    for (let mountain of mountains) {/* istanbul ignore next */cov_q0sdvsm27.s[34]++;\n      if (request.url.query.id === mountain.id)\n        {/* istanbul ignore next */cov_q0sdvsm27.b[5][0]++;cov_q0sdvsm27.s[35]++;oneMountain = mountain;} else /* istanbul ignore next */{cov_q0sdvsm27.b[5][1]++;}cov_q0sdvsm27.s[36]++;\n      break;\n    }\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}cov_q0sdvsm27.s[37]++;\n  sendJSON(response, 200, mountains); /* istanbul ignore next */cov_q0sdvsm27.s[38]++;\n  console.log('get', mountains);\n}","timestamp":"2017-12-07T02:58:37.145Z"}
{"level":"info","message":"Responding with a 200 code and the following data.","timestamp":"2017-12-07T02:58:37.145Z"}
[{"id":"854ffb20-dafa-11e7-897d-978e1f17b10c","name":"Mt. Evans","location":"Colorado","elevation":"14,235"}]
{"level":"info","message":"Adding an POST url and callback","timestamp":"2017-12-07T02:59:18.709Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-07T02:59:18.710Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  mountains.push(mountain); /* istanbul ignore next */cov_q0sdvsm27.s[30]++;\n  sendJSON(response, 200, mountain);\n}","timestamp":"2017-12-07T02:59:18.710Z"}
{"level":"info","message":"Adding an GET url and callback","timestamp":"2017-12-07T02:59:18.710Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-07T02:59:18.710Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[32]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;\n    let oneMountain; /* istanbul ignore next */cov_q0sdvsm27.s[33]++;\n    for (let mountain of mountains) {/* istanbul ignore next */cov_q0sdvsm27.s[34]++;\n      if (request.url.query.id === mountain.id)\n        {/* istanbul ignore next */cov_q0sdvsm27.b[5][0]++;cov_q0sdvsm27.s[35]++;oneMountain = mountain;} else /* istanbul ignore next */{cov_q0sdvsm27.b[5][1]++;}cov_q0sdvsm27.s[36]++;\n      break;\n    }\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}cov_q0sdvsm27.s[37]++;\n  sendJSON(response, 200, mountains); /* istanbul ignore next */cov_q0sdvsm27.s[38]++;\n  console.log('get', mountains);\n}","timestamp":"2017-12-07T02:59:18.710Z"}
{"level":"info","message":"Server is online at port 3000","timestamp":"2017-12-07T02:59:18.758Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-07T02:59:18.774Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T02:59:18.775Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  mountains.push(mountain); /* istanbul ignore next */cov_q0sdvsm27.s[30]++;\n  sendJSON(response, 200, mountain);\n}","timestamp":"2017-12-07T02:59:18.775Z"}
{"level":"info","message":"Responding with a 200 code and the following data.","timestamp":"2017-12-07T02:59:18.775Z"}
{"id":"9e214870-dafa-11e7-ba27-0bf869655fe3","name":"Mt. Evans","location":"Colorado","elevation":"14,235","level":"info","message":"","timestamp":"2017-12-07T02:59:18.775Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-07T02:59:18.782Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T02:59:18.783Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[32]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;\n    let oneMountain; /* istanbul ignore next */cov_q0sdvsm27.s[33]++;\n    for (let mountain of mountains) {/* istanbul ignore next */cov_q0sdvsm27.s[34]++;\n      if (request.url.query.id === mountain.id)\n        {/* istanbul ignore next */cov_q0sdvsm27.b[5][0]++;cov_q0sdvsm27.s[35]++;oneMountain = mountain;} else /* istanbul ignore next */{cov_q0sdvsm27.b[5][1]++;}cov_q0sdvsm27.s[36]++;\n      break;\n    }\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}cov_q0sdvsm27.s[37]++;\n  sendJSON(response, 200, mountains); /* istanbul ignore next */cov_q0sdvsm27.s[38]++;\n  console.log('get', mountains);\n}","timestamp":"2017-12-07T02:59:18.783Z"}
{"level":"info","message":"Responding with a 200 code and the following data.","timestamp":"2017-12-07T02:59:18.783Z"}
[{"id":"9e214870-dafa-11e7-ba27-0bf869655fe3","name":"Mt. Evans","location":"Colorado","elevation":"14,235"}]
{"level":"info","message":"Adding an POST url and callback","timestamp":"2017-12-07T03:00:13.588Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-07T03:00:13.589Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  mountains.push(mountain); /* istanbul ignore next */cov_q0sdvsm27.s[30]++;\n  sendJSON(response, 200, mountain);\n}","timestamp":"2017-12-07T03:00:13.589Z"}
{"level":"info","message":"Adding an GET url and callback","timestamp":"2017-12-07T03:00:13.589Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-07T03:00:13.589Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[32]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;\n    let oneMountain; /* istanbul ignore next */cov_q0sdvsm27.s[33]++;\n    for (let mountain of mountains) {/* istanbul ignore next */cov_q0sdvsm27.s[34]++;\n      if (request.url.query.id === mountain.id)\n        {/* istanbul ignore next */cov_q0sdvsm27.b[5][0]++;cov_q0sdvsm27.s[35]++;oneMountain = mountain;} else /* istanbul ignore next */{cov_q0sdvsm27.b[5][1]++;}cov_q0sdvsm27.s[36]++;\n      break;\n    }\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}cov_q0sdvsm27.s[37]++;\n  sendJSON(response, 200, mountains); /* istanbul ignore next */cov_q0sdvsm27.s[38]++;\n  console.log('get', mountains);\n}","timestamp":"2017-12-07T03:00:13.589Z"}
{"level":"info","message":"Server is online at port 3000","timestamp":"2017-12-07T03:00:13.632Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-07T03:00:13.647Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T03:00:13.648Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  mountains.push(mountain); /* istanbul ignore next */cov_q0sdvsm27.s[30]++;\n  sendJSON(response, 200, mountain);\n}","timestamp":"2017-12-07T03:00:13.648Z"}
{"level":"info","message":"Responding with a 200 code and the following data.","timestamp":"2017-12-07T03:00:13.649Z"}
{"id":"bed66410-dafa-11e7-a362-bd9c82d36f0f","name":"Mt. Evans","location":"Colorado","elevation":"14,235","level":"info","message":"","timestamp":"2017-12-07T03:00:13.649Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-07T03:00:13.658Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T03:00:13.659Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[32]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;\n    let oneMountain; /* istanbul ignore next */cov_q0sdvsm27.s[33]++;\n    for (let mountain of mountains) {/* istanbul ignore next */cov_q0sdvsm27.s[34]++;\n      if (request.url.query.id === mountain.id)\n        {/* istanbul ignore next */cov_q0sdvsm27.b[5][0]++;cov_q0sdvsm27.s[35]++;oneMountain = mountain;} else /* istanbul ignore next */{cov_q0sdvsm27.b[5][1]++;}cov_q0sdvsm27.s[36]++;\n      break;\n    }\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}cov_q0sdvsm27.s[37]++;\n  sendJSON(response, 200, mountains); /* istanbul ignore next */cov_q0sdvsm27.s[38]++;\n  console.log('get', mountains);\n}","timestamp":"2017-12-07T03:00:13.659Z"}
{"level":"info","message":"Responding with a 200 code and the following data.","timestamp":"2017-12-07T03:00:13.659Z"}
[{"id":"bed66410-dafa-11e7-a362-bd9c82d36f0f","name":"Mt. Evans","location":"Colorado","elevation":"14,235"}]
{"level":"info","message":"Adding an POST url and callback","timestamp":"2017-12-07T03:01:43.757Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-07T03:01:43.758Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  mountains.push(mountain); /* istanbul ignore next */cov_q0sdvsm27.s[30]++;\n  sendJSON(response, 200, mountain);\n}","timestamp":"2017-12-07T03:01:43.758Z"}
{"level":"info","message":"Adding an GET url and callback","timestamp":"2017-12-07T03:01:43.758Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-07T03:01:43.758Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[32]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;\n    let oneMountain; /* istanbul ignore next */cov_q0sdvsm27.s[33]++;\n    for (let mountain of mountains) {/* istanbul ignore next */cov_q0sdvsm27.s[34]++;\n      if (request.url.query.id === mountain.id)\n        {/* istanbul ignore next */cov_q0sdvsm27.b[5][0]++;cov_q0sdvsm27.s[35]++;oneMountain = mountain;} else /* istanbul ignore next */{cov_q0sdvsm27.b[5][1]++;}cov_q0sdvsm27.s[36]++;\n      break;\n    }\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}cov_q0sdvsm27.s[37]++;\n  sendJSON(response, 200, mountains); /* istanbul ignore next */cov_q0sdvsm27.s[38]++;\n  console.log('get', mountains);\n}","timestamp":"2017-12-07T03:01:43.758Z"}
{"level":"info","message":"Server is online at port 3000","timestamp":"2017-12-07T03:01:43.802Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-07T03:01:43.816Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T03:01:43.817Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  mountains.push(mountain); /* istanbul ignore next */cov_q0sdvsm27.s[30]++;\n  sendJSON(response, 200, mountain);\n}","timestamp":"2017-12-07T03:01:43.817Z"}
{"level":"info","message":"Responding with a 200 code and the following data.","timestamp":"2017-12-07T03:01:43.818Z"}
{"id":"f49516a0-dafa-11e7-87d6-e5f9ca17d7e2","name":"Mt. Evans","location":"Colorado","elevation":"14,235","level":"info","message":"","timestamp":"2017-12-07T03:01:43.818Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-07T03:01:43.827Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T03:01:43.828Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[32]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;\n    let oneMountain; /* istanbul ignore next */cov_q0sdvsm27.s[33]++;\n    for (let mountain of mountains) {/* istanbul ignore next */cov_q0sdvsm27.s[34]++;\n      if (request.url.query.id === mountain.id)\n        {/* istanbul ignore next */cov_q0sdvsm27.b[5][0]++;cov_q0sdvsm27.s[35]++;oneMountain = mountain;} else /* istanbul ignore next */{cov_q0sdvsm27.b[5][1]++;}cov_q0sdvsm27.s[36]++;\n      break;\n    }\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}cov_q0sdvsm27.s[37]++;\n  sendJSON(response, 200, mountains); /* istanbul ignore next */cov_q0sdvsm27.s[38]++;\n  console.log('get', mountains);\n}","timestamp":"2017-12-07T03:01:43.828Z"}
{"level":"info","message":"Responding with a 200 code and the following data.","timestamp":"2017-12-07T03:01:43.828Z"}
[{"id":"f49516a0-dafa-11e7-87d6-e5f9ca17d7e2","name":"Mt. Evans","location":"Colorado","elevation":"14,235"}]
{"level":"info","message":"Adding an POST url and callback","timestamp":"2017-12-07T03:02:10.171Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-07T03:02:10.172Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  mountains.push(mountain); /* istanbul ignore next */cov_q0sdvsm27.s[30]++;\n  sendJSON(response, 200, mountain);\n}","timestamp":"2017-12-07T03:02:10.172Z"}
{"level":"info","message":"Adding an GET url and callback","timestamp":"2017-12-07T03:02:10.172Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-07T03:02:10.172Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[32]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;\n    let oneMountain; /* istanbul ignore next */cov_q0sdvsm27.s[33]++;\n    for (let mountain of mountains) {/* istanbul ignore next */cov_q0sdvsm27.s[34]++;\n      if (request.url.query.id === mountain.id)\n        {/* istanbul ignore next */cov_q0sdvsm27.b[5][0]++;cov_q0sdvsm27.s[35]++;oneMountain = mountain;} else /* istanbul ignore next */{cov_q0sdvsm27.b[5][1]++;}cov_q0sdvsm27.s[36]++;\n      break;\n    }\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}cov_q0sdvsm27.s[37]++;\n  sendJSON(response, 200, mountains); /* istanbul ignore next */cov_q0sdvsm27.s[38]++;\n  console.log('get', mountains);\n}","timestamp":"2017-12-07T03:02:10.172Z"}
{"level":"info","message":"Server is online at port 3000","timestamp":"2017-12-07T03:02:10.214Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-07T03:02:10.229Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T03:02:10.230Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  mountains.push(mountain); /* istanbul ignore next */cov_q0sdvsm27.s[30]++;\n  sendJSON(response, 200, mountain);\n}","timestamp":"2017-12-07T03:02:10.230Z"}
{"level":"info","message":"Responding with a 200 code and the following data.","timestamp":"2017-12-07T03:02:10.231Z"}
{"id":"04533d60-dafb-11e7-87cd-ad85dc6de84b","name":"Mt. Evans","location":"Colorado","elevation":"14,235","level":"info","message":"","timestamp":"2017-12-07T03:02:10.231Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-07T03:02:10.240Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T03:02:10.241Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[32]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;\n    let oneMountain; /* istanbul ignore next */cov_q0sdvsm27.s[33]++;\n    for (let mountain of mountains) {/* istanbul ignore next */cov_q0sdvsm27.s[34]++;\n      if (request.url.query.id === mountain.id)\n        {/* istanbul ignore next */cov_q0sdvsm27.b[5][0]++;cov_q0sdvsm27.s[35]++;oneMountain = mountain;} else /* istanbul ignore next */{cov_q0sdvsm27.b[5][1]++;}cov_q0sdvsm27.s[36]++;\n      break;\n    }\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}cov_q0sdvsm27.s[37]++;\n  sendJSON(response, 200, mountains); /* istanbul ignore next */cov_q0sdvsm27.s[38]++;\n  console.log('get', mountains);\n}","timestamp":"2017-12-07T03:02:10.241Z"}
{"level":"info","message":"Responding with a 200 code and the following data.","timestamp":"2017-12-07T03:02:10.241Z"}
[{"id":"04533d60-dafb-11e7-87cd-ad85dc6de84b","name":"Mt. Evans","location":"Colorado","elevation":"14,235"}]
{"level":"info","message":"Adding an POST url and callback","timestamp":"2017-12-07T03:02:49.630Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-07T03:02:49.630Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  mountains.push(mountain); /* istanbul ignore next */cov_q0sdvsm27.s[30]++;\n  sendJSON(response, 200, mountain);\n}","timestamp":"2017-12-07T03:02:49.630Z"}
{"level":"info","message":"Adding an GET url and callback","timestamp":"2017-12-07T03:02:49.631Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-07T03:02:49.631Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[32]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;\n    let oneMountain; /* istanbul ignore next */cov_q0sdvsm27.s[33]++;\n    for (let mountain of mountains) {/* istanbul ignore next */cov_q0sdvsm27.s[34]++;\n      if (request.url.query.id === mountain.id)\n        {/* istanbul ignore next */cov_q0sdvsm27.b[5][0]++;cov_q0sdvsm27.s[35]++;oneMountain = mountain;} else /* istanbul ignore next */{cov_q0sdvsm27.b[5][1]++;}cov_q0sdvsm27.s[36]++;\n      break;\n    }\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}cov_q0sdvsm27.s[37]++;\n  sendJSON(response, 200, mountains); /* istanbul ignore next */cov_q0sdvsm27.s[38]++;\n  console.log('get', mountains);\n}","timestamp":"2017-12-07T03:02:49.631Z"}
{"level":"info","message":"Server is online at port 3000","timestamp":"2017-12-07T03:02:49.671Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-07T03:02:49.686Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T03:02:49.687Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  mountains.push(mountain); /* istanbul ignore next */cov_q0sdvsm27.s[30]++;\n  sendJSON(response, 200, mountain);\n}","timestamp":"2017-12-07T03:02:49.687Z"}
{"level":"info","message":"Responding with a 200 code and the following data.","timestamp":"2017-12-07T03:02:49.688Z"}
{"id":"1bd80d80-dafb-11e7-aeb1-15c096698603","name":"Mt. Evans","location":"Colorado","elevation":"14,235","level":"info","message":"","timestamp":"2017-12-07T03:02:49.688Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-07T03:02:49.697Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T03:02:49.698Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[32]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;\n    let oneMountain; /* istanbul ignore next */cov_q0sdvsm27.s[33]++;\n    for (let mountain of mountains) {/* istanbul ignore next */cov_q0sdvsm27.s[34]++;\n      if (request.url.query.id === mountain.id)\n        {/* istanbul ignore next */cov_q0sdvsm27.b[5][0]++;cov_q0sdvsm27.s[35]++;oneMountain = mountain;} else /* istanbul ignore next */{cov_q0sdvsm27.b[5][1]++;}cov_q0sdvsm27.s[36]++;\n      break;\n    }\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}cov_q0sdvsm27.s[37]++;\n  sendJSON(response, 200, mountains); /* istanbul ignore next */cov_q0sdvsm27.s[38]++;\n  console.log('get', mountains);\n}","timestamp":"2017-12-07T03:02:49.698Z"}
{"level":"info","message":"Responding with a 200 code and the following data.","timestamp":"2017-12-07T03:02:49.698Z"}
[{"id":"1bd80d80-dafb-11e7-aeb1-15c096698603","name":"Mt. Evans","location":"Colorado","elevation":"14,235"}]
{"level":"info","message":"Adding an POST url and callback","timestamp":"2017-12-07T03:05:29.682Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-07T03:05:29.683Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  mountains.push(mountain); /* istanbul ignore next */cov_q0sdvsm27.s[30]++;\n  sendJSON(response, 200, mountain);\n}","timestamp":"2017-12-07T03:05:29.683Z"}
{"level":"info","message":"Adding an GET url and callback","timestamp":"2017-12-07T03:05:29.683Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-07T03:05:29.683Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[32]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;\n    let oneMountain; /* istanbul ignore next */cov_q0sdvsm27.s[33]++;\n    for (let mountain of mountains) {/* istanbul ignore next */cov_q0sdvsm27.s[34]++;\n      if (request.url.query.id === mountain.id)\n        {/* istanbul ignore next */cov_q0sdvsm27.b[5][0]++;cov_q0sdvsm27.s[35]++;oneMountain = mountain;} else /* istanbul ignore next */{cov_q0sdvsm27.b[5][1]++;}cov_q0sdvsm27.s[36]++;\n      break;\n    }\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}cov_q0sdvsm27.s[37]++;\n  sendJSON(response, 200, mountains); /* istanbul ignore next */cov_q0sdvsm27.s[38]++;\n  console.log('get', mountains);\n}","timestamp":"2017-12-07T03:05:29.683Z"}
{"level":"info","message":"Server is online at port 3000","timestamp":"2017-12-07T03:05:29.724Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-07T03:05:29.740Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T03:05:29.741Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  mountains.push(mountain); /* istanbul ignore next */cov_q0sdvsm27.s[30]++;\n  sendJSON(response, 200, mountain);\n}","timestamp":"2017-12-07T03:05:29.741Z"}
{"level":"info","message":"Responding with a 200 code and the following data.","timestamp":"2017-12-07T03:05:29.742Z"}
{"id":"7b3e33d0-dafb-11e7-a960-912798ed95f5","name":"Mt. Evans","location":"Colorado","elevation":"14,235","level":"info","message":"","timestamp":"2017-12-07T03:05:29.742Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-07T03:05:29.751Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T03:05:29.751Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[32]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;\n    let oneMountain; /* istanbul ignore next */cov_q0sdvsm27.s[33]++;\n    for (let mountain of mountains) {/* istanbul ignore next */cov_q0sdvsm27.s[34]++;\n      if (request.url.query.id === mountain.id)\n        {/* istanbul ignore next */cov_q0sdvsm27.b[5][0]++;cov_q0sdvsm27.s[35]++;oneMountain = mountain;} else /* istanbul ignore next */{cov_q0sdvsm27.b[5][1]++;}cov_q0sdvsm27.s[36]++;\n      break;\n    }\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}cov_q0sdvsm27.s[37]++;\n  sendJSON(response, 200, mountains); /* istanbul ignore next */cov_q0sdvsm27.s[38]++;\n  console.log('get', mountains);\n}","timestamp":"2017-12-07T03:05:29.751Z"}
{"level":"info","message":"Responding with a 200 code and the following data.","timestamp":"2017-12-07T03:05:29.752Z"}
[{"id":"7b3e33d0-dafb-11e7-a960-912798ed95f5","name":"Mt. Evans","location":"Colorado","elevation":"14,235"}]
{"level":"info","message":"Adding an POST url and callback","timestamp":"2017-12-07T06:36:09.243Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-07T06:36:09.244Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  mountains.push(mountain); /* istanbul ignore next */cov_q0sdvsm27.s[30]++;\n  sendJSON(response, 200, mountain);\n}","timestamp":"2017-12-07T06:36:09.244Z"}
{"level":"info","message":"Adding an GET url and callback","timestamp":"2017-12-07T06:36:09.244Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-07T06:36:09.244Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[32]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;\n    let oneMountain; /* istanbul ignore next */cov_q0sdvsm27.s[33]++;\n    for (let mountain of mountains) {/* istanbul ignore next */cov_q0sdvsm27.s[34]++;\n      if (request.url.query.id === mountain.id)\n        {/* istanbul ignore next */cov_q0sdvsm27.b[5][0]++;cov_q0sdvsm27.s[35]++;oneMountain = mountain;} else /* istanbul ignore next */{cov_q0sdvsm27.b[5][1]++;}cov_q0sdvsm27.s[36]++;\n      break;\n    }\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}cov_q0sdvsm27.s[37]++;\n  sendJSON(response, 200, mountains); /* istanbul ignore next */cov_q0sdvsm27.s[38]++;\n  console.log('get', mountains);\n}","timestamp":"2017-12-07T06:36:09.244Z"}
{"level":"info","message":"Server is online at port 3000","timestamp":"2017-12-07T06:36:09.311Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-07T06:36:09.365Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T06:36:09.366Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  mountains.push(mountain); /* istanbul ignore next */cov_q0sdvsm27.s[30]++;\n  sendJSON(response, 200, mountain);\n}","timestamp":"2017-12-07T06:36:09.366Z"}
{"level":"info","message":"Responding with a 200 code and the following data.","timestamp":"2017-12-07T06:36:09.366Z"}
{"id":"e90beb60-db18-11e7-814d-f9afd6132a6c","name":"Mt. Evans","location":"Colorado","elevation":"14,235","level":"info","message":"","timestamp":"2017-12-07T06:36:09.366Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-07T06:36:09.376Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T06:36:09.376Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[32]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;\n    let oneMountain; /* istanbul ignore next */cov_q0sdvsm27.s[33]++;\n    for (let mountain of mountains) {/* istanbul ignore next */cov_q0sdvsm27.s[34]++;\n      if (request.url.query.id === mountain.id)\n        {/* istanbul ignore next */cov_q0sdvsm27.b[5][0]++;cov_q0sdvsm27.s[35]++;oneMountain = mountain;} else /* istanbul ignore next */{cov_q0sdvsm27.b[5][1]++;}cov_q0sdvsm27.s[36]++;\n      break;\n    }\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}cov_q0sdvsm27.s[37]++;\n  sendJSON(response, 200, mountains); /* istanbul ignore next */cov_q0sdvsm27.s[38]++;\n  console.log('get', mountains);\n}","timestamp":"2017-12-07T06:36:09.376Z"}
{"level":"info","message":"Responding with a 200 code and the following data.","timestamp":"2017-12-07T06:36:09.376Z"}
[{"id":"e90beb60-db18-11e7-814d-f9afd6132a6c","name":"Mt. Evans","location":"Colorado","elevation":"14,235"}]
{"level":"info","message":"Routing a request","timestamp":"2017-12-07T06:36:09.382Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T06:36:09.382Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[32]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;\n    let oneMountain; /* istanbul ignore next */cov_q0sdvsm27.s[33]++;\n    for (let mountain of mountains) {/* istanbul ignore next */cov_q0sdvsm27.s[34]++;\n      if (request.url.query.id === mountain.id)\n        {/* istanbul ignore next */cov_q0sdvsm27.b[5][0]++;cov_q0sdvsm27.s[35]++;oneMountain = mountain;} else /* istanbul ignore next */{cov_q0sdvsm27.b[5][1]++;}cov_q0sdvsm27.s[36]++;\n      break;\n    }\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}cov_q0sdvsm27.s[37]++;\n  sendJSON(response, 200, mountains); /* istanbul ignore next */cov_q0sdvsm27.s[38]++;\n  console.log('get', mountains);\n}","timestamp":"2017-12-07T06:36:09.382Z"}
{"level":"info","message":"Responding with a 200 code and the following data.","timestamp":"2017-12-07T06:36:09.382Z"}
[{"id":"e90beb60-db18-11e7-814d-f9afd6132a6c","name":"Mt. Evans","location":"Colorado","elevation":"14,235"}]
{"level":"info","message":"Adding an POST url and callback","timestamp":"2017-12-07T06:37:12.986Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-07T06:37:12.987Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  mountains.push(mountain); /* istanbul ignore next */cov_q0sdvsm27.s[30]++;\n  sendJSON(response, 200, mountain);\n}","timestamp":"2017-12-07T06:37:12.987Z"}
{"level":"info","message":"Adding an GET url and callback","timestamp":"2017-12-07T06:37:12.987Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-07T06:37:12.987Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[32]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;\n    let oneMountain; /* istanbul ignore next */cov_q0sdvsm27.s[33]++;\n    for (let mountain of mountains) {/* istanbul ignore next */cov_q0sdvsm27.s[34]++;\n      if (request.url.query.id === mountain.id)\n        {/* istanbul ignore next */cov_q0sdvsm27.b[5][0]++;cov_q0sdvsm27.s[35]++;oneMountain = mountain;} else /* istanbul ignore next */{cov_q0sdvsm27.b[5][1]++;}cov_q0sdvsm27.s[36]++;\n      break;\n    }\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}cov_q0sdvsm27.s[37]++;\n  sendJSON(response, 200, mountains); /* istanbul ignore next */cov_q0sdvsm27.s[38]++;\n  console.log('get', mountains);\n}","timestamp":"2017-12-07T06:37:12.987Z"}
{"level":"info","message":"Server is online at port 3000","timestamp":"2017-12-07T06:37:13.056Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-07T06:37:13.108Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T06:37:13.109Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  mountains.push(mountain); /* istanbul ignore next */cov_q0sdvsm27.s[30]++;\n  sendJSON(response, 200, mountain);\n}","timestamp":"2017-12-07T06:37:13.109Z"}
{"level":"info","message":"Responding with a 200 code and the following data.","timestamp":"2017-12-07T06:37:13.110Z"}
{"id":"0f0a7b60-db19-11e7-afcb-5fcae40420b3","name":"Mt. Evans","location":"Colorado","elevation":"14,235","level":"info","message":"","timestamp":"2017-12-07T06:37:13.110Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-07T06:37:13.120Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T06:37:13.120Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[32]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;\n    let oneMountain; /* istanbul ignore next */cov_q0sdvsm27.s[33]++;\n    for (let mountain of mountains) {/* istanbul ignore next */cov_q0sdvsm27.s[34]++;\n      if (request.url.query.id === mountain.id)\n        {/* istanbul ignore next */cov_q0sdvsm27.b[5][0]++;cov_q0sdvsm27.s[35]++;oneMountain = mountain;} else /* istanbul ignore next */{cov_q0sdvsm27.b[5][1]++;}cov_q0sdvsm27.s[36]++;\n      break;\n    }\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}cov_q0sdvsm27.s[37]++;\n  sendJSON(response, 200, mountains); /* istanbul ignore next */cov_q0sdvsm27.s[38]++;\n  console.log('get', mountains);\n}","timestamp":"2017-12-07T06:37:13.120Z"}
{"level":"info","message":"Responding with a 200 code and the following data.","timestamp":"2017-12-07T06:37:13.120Z"}
[{"id":"0f0a7b60-db19-11e7-afcb-5fcae40420b3","name":"Mt. Evans","location":"Colorado","elevation":"14,235"}]
{"level":"info","message":"Routing a request","timestamp":"2017-12-07T06:37:13.125Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T06:37:13.126Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[32]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;\n    let oneMountain; /* istanbul ignore next */cov_q0sdvsm27.s[33]++;\n    for (let mountain of mountains) {/* istanbul ignore next */cov_q0sdvsm27.s[34]++;\n      if (request.url.query.id === mountain.id)\n        {/* istanbul ignore next */cov_q0sdvsm27.b[5][0]++;cov_q0sdvsm27.s[35]++;oneMountain = mountain;} else /* istanbul ignore next */{cov_q0sdvsm27.b[5][1]++;}cov_q0sdvsm27.s[36]++;\n      break;\n    }\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}cov_q0sdvsm27.s[37]++;\n  sendJSON(response, 200, mountains); /* istanbul ignore next */cov_q0sdvsm27.s[38]++;\n  console.log('get', mountains);\n}","timestamp":"2017-12-07T06:37:13.126Z"}
{"level":"info","message":"Responding with a 200 code and the following data.","timestamp":"2017-12-07T06:37:13.126Z"}
[{"id":"0f0a7b60-db19-11e7-afcb-5fcae40420b3","name":"Mt. Evans","location":"Colorado","elevation":"14,235"}]
