{"level":"info","message":"Adding an POST url and callback","timestamp":"2017-12-08T00:58:11.974Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T00:58:11.975Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[30]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[31]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T00:58:11.975Z"}
{"level":"info","message":"Adding an GET url and callback","timestamp":"2017-12-08T00:58:11.975Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T00:58:11.975Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[5]++;cov_q0sdvsm27.s[33]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;\n    let oneMountain; /* istanbul ignore next */cov_q0sdvsm27.s[34]++;\n    for (let mountain of mountains) {/* istanbul ignore next */cov_q0sdvsm27.s[35]++;\n      if (request.url.query.id === mountain.id)\n        {/* istanbul ignore next */cov_q0sdvsm27.b[5][0]++;cov_q0sdvsm27.s[36]++;oneMountain = mountain;} else /* istanbul ignore next */{cov_q0sdvsm27.b[5][1]++;}cov_q0sdvsm27.s[37]++;\n      break;\n    } /* istanbul ignore next */cov_q0sdvsm27.s[38]++;\n    if (!request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[6][0]++;cov_q0sdvsm27.s[39]++;\n      sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[40]++;\n      return;\n    } else /* istanbul ignore next */{cov_q0sdvsm27.b[6][1]++;}\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}cov_q0sdvsm27.s[41]++;\n  sendJSON(response, 200, mountains);\n}","timestamp":"2017-12-08T00:58:11.975Z"}
{"level":"info","message":"Adding an DELETE url and callback","timestamp":"2017-12-08T00:58:11.975Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T00:58:11.975Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[6]++;cov_q0sdvsm27.s[43]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[7][0]++;\n    let oneMountain; /* istanbul ignore next */cov_q0sdvsm27.s[44]++;\n    for (let mountain of mountains) {/* istanbul ignore next */cov_q0sdvsm27.s[45]++;\n      if (request.url.query.id === mountain.id)\n        {/* istanbul ignore next */cov_q0sdvsm27.b[8][0]++;cov_q0sdvsm27.s[46]++;oneMountain = mountain.id;} else /* istanbul ignore next */{cov_q0sdvsm27.b[8][1]++;}cov_q0sdvsm27.s[47]++;\n      break;\n    } /* istanbul ignore next */cov_q0sdvsm27.s[48]++;\n    if (!request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[9][0]++;cov_q0sdvsm27.s[49]++;\n      sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[50]++;\n      logger.log('info', `Deletion requested from database, but ${request.url.query.id} not found.`); /* istanbul ignore next */cov_q0sdvsm27.s[51]++;\n      return;\n    } else /* istanbul ignore next */{cov_q0sdvsm27.b[9][1]++;}\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[7][1]++;}cov_q0sdvsm27.s[52]++;\n  sendStatus(response, 204, 'Deleted from database.'); /* istanbul ignore next */cov_q0sdvsm27.s[53]++;\n  logger.log('info', `User deleted ${request.url.query.id} from database.`);\n}","timestamp":"2017-12-08T00:58:11.975Z"}
{"level":"info","message":"Server is online at port 3000","timestamp":"2017-12-08T00:58:12.023Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T00:58:12.038Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T00:58:12.040Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[30]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[31]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T00:58:12.040Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T00:58:12.040Z"}
{"message":"storage is not defined","stack":"ReferenceError: storage is not defined\n    at Object.<anonymous>.router.post (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/route/mountain-router.js:50:3)\n    at requestParser.parse.then.request (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/lib/router.js:55:89)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-08T00:58:12.040Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T00:58:12.049Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T00:58:12.050Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[5]++;cov_q0sdvsm27.s[33]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;\n    let oneMountain; /* istanbul ignore next */cov_q0sdvsm27.s[34]++;\n    for (let mountain of mountains) {/* istanbul ignore next */cov_q0sdvsm27.s[35]++;\n      if (request.url.query.id === mountain.id)\n        {/* istanbul ignore next */cov_q0sdvsm27.b[5][0]++;cov_q0sdvsm27.s[36]++;oneMountain = mountain;} else /* istanbul ignore next */{cov_q0sdvsm27.b[5][1]++;}cov_q0sdvsm27.s[37]++;\n      break;\n    } /* istanbul ignore next */cov_q0sdvsm27.s[38]++;\n    if (!request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[6][0]++;cov_q0sdvsm27.s[39]++;\n      sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[40]++;\n      return;\n    } else /* istanbul ignore next */{cov_q0sdvsm27.b[6][1]++;}\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}cov_q0sdvsm27.s[41]++;\n  sendJSON(response, 200, mountains);\n}","timestamp":"2017-12-08T00:58:12.050Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T00:58:12.050Z"}
{"message":"mountains is not defined","stack":"ReferenceError: mountains is not defined\n    at Object.<anonymous>.router.get (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/route/mountain-router.js:73:27)\n    at requestParser.parse.then.request (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/lib/router.js:55:89)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-08T00:58:12.050Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T00:58:12.053Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T00:58:12.053Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[5]++;cov_q0sdvsm27.s[33]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;\n    let oneMountain; /* istanbul ignore next */cov_q0sdvsm27.s[34]++;\n    for (let mountain of mountains) {/* istanbul ignore next */cov_q0sdvsm27.s[35]++;\n      if (request.url.query.id === mountain.id)\n        {/* istanbul ignore next */cov_q0sdvsm27.b[5][0]++;cov_q0sdvsm27.s[36]++;oneMountain = mountain;} else /* istanbul ignore next */{cov_q0sdvsm27.b[5][1]++;}cov_q0sdvsm27.s[37]++;\n      break;\n    } /* istanbul ignore next */cov_q0sdvsm27.s[38]++;\n    if (!request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[6][0]++;cov_q0sdvsm27.s[39]++;\n      sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[40]++;\n      return;\n    } else /* istanbul ignore next */{cov_q0sdvsm27.b[6][1]++;}\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}cov_q0sdvsm27.s[41]++;\n  sendJSON(response, 200, mountains);\n}","timestamp":"2017-12-08T00:58:12.053Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T00:58:12.054Z"}
{"message":"mountains is not defined","stack":"ReferenceError: mountains is not defined\n    at Object.<anonymous>.router.get (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/route/mountain-router.js:63:26)\n    at requestParser.parse.then.request (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/lib/router.js:55:89)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-08T00:58:12.054Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T00:58:12.056Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T00:58:12.056Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/lib/request-parser.js:34:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-08T00:58:12.056Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T00:58:12.061Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T00:58:12.062Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[6]++;cov_q0sdvsm27.s[43]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[7][0]++;\n    let oneMountain; /* istanbul ignore next */cov_q0sdvsm27.s[44]++;\n    for (let mountain of mountains) {/* istanbul ignore next */cov_q0sdvsm27.s[45]++;\n      if (request.url.query.id === mountain.id)\n        {/* istanbul ignore next */cov_q0sdvsm27.b[8][0]++;cov_q0sdvsm27.s[46]++;oneMountain = mountain.id;} else /* istanbul ignore next */{cov_q0sdvsm27.b[8][1]++;}cov_q0sdvsm27.s[47]++;\n      break;\n    } /* istanbul ignore next */cov_q0sdvsm27.s[48]++;\n    if (!request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[9][0]++;cov_q0sdvsm27.s[49]++;\n      sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[50]++;\n      logger.log('info', `Deletion requested from database, but ${request.url.query.id} not found.`); /* istanbul ignore next */cov_q0sdvsm27.s[51]++;\n      return;\n    } else /* istanbul ignore next */{cov_q0sdvsm27.b[9][1]++;}\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[7][1]++;}cov_q0sdvsm27.s[52]++;\n  sendStatus(response, 204, 'Deleted from database.'); /* istanbul ignore next */cov_q0sdvsm27.s[53]++;\n  logger.log('info', `User deleted ${request.url.query.id} from database.`);\n}","timestamp":"2017-12-08T00:58:12.062Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T00:58:12.062Z"}
{"message":"mountains is not defined","stack":"ReferenceError: mountains is not defined\n    at Object.<anonymous>.router.delete (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/route/mountain-router.js:79:26)\n    at requestParser.parse.then.request (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/lib/router.js:55:89)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-08T00:58:12.062Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T00:58:12.064Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T00:58:12.064Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[6]++;cov_q0sdvsm27.s[43]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[7][0]++;\n    let oneMountain; /* istanbul ignore next */cov_q0sdvsm27.s[44]++;\n    for (let mountain of mountains) {/* istanbul ignore next */cov_q0sdvsm27.s[45]++;\n      if (request.url.query.id === mountain.id)\n        {/* istanbul ignore next */cov_q0sdvsm27.b[8][0]++;cov_q0sdvsm27.s[46]++;oneMountain = mountain.id;} else /* istanbul ignore next */{cov_q0sdvsm27.b[8][1]++;}cov_q0sdvsm27.s[47]++;\n      break;\n    } /* istanbul ignore next */cov_q0sdvsm27.s[48]++;\n    if (!request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[9][0]++;cov_q0sdvsm27.s[49]++;\n      sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[50]++;\n      logger.log('info', `Deletion requested from database, but ${request.url.query.id} not found.`); /* istanbul ignore next */cov_q0sdvsm27.s[51]++;\n      return;\n    } else /* istanbul ignore next */{cov_q0sdvsm27.b[9][1]++;}\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[7][1]++;}cov_q0sdvsm27.s[52]++;\n  sendStatus(response, 204, 'Deleted from database.'); /* istanbul ignore next */cov_q0sdvsm27.s[53]++;\n  logger.log('info', `User deleted ${request.url.query.id} from database.`);\n}","timestamp":"2017-12-08T00:58:12.064Z"}
{"level":"info","message":"Responding with a 204 code due to Deleted from database..","timestamp":"2017-12-08T00:58:12.064Z"}
{"level":"info","message":"User deleted undefined from database.","timestamp":"2017-12-08T00:58:12.065Z"}
{"level":"info","message":"Adding an POST url and callback","timestamp":"2017-12-08T01:01:45.716Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T01:01:45.717Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[30]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[31]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T01:01:45.717Z"}
{"level":"info","message":"Adding an GET url and callback","timestamp":"2017-12-08T01:01:45.717Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T01:01:45.717Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[5]++;cov_q0sdvsm27.s[33]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;\n    let oneMountain; /* istanbul ignore next */cov_q0sdvsm27.s[34]++;\n    for (let mountain of mountains) {/* istanbul ignore next */cov_q0sdvsm27.s[35]++;\n      if (request.url.query.id === mountain.id)\n        {/* istanbul ignore next */cov_q0sdvsm27.b[5][0]++;cov_q0sdvsm27.s[36]++;oneMountain = mountain;} else /* istanbul ignore next */{cov_q0sdvsm27.b[5][1]++;}cov_q0sdvsm27.s[37]++;\n      break;\n    } /* istanbul ignore next */cov_q0sdvsm27.s[38]++;\n    if (!request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[6][0]++;cov_q0sdvsm27.s[39]++;\n      sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[40]++;\n      return;\n    } else /* istanbul ignore next */{cov_q0sdvsm27.b[6][1]++;}\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}cov_q0sdvsm27.s[41]++;\n  sendJSON(response, 200, mountains);\n}","timestamp":"2017-12-08T01:01:45.717Z"}
{"level":"info","message":"Adding an DELETE url and callback","timestamp":"2017-12-08T01:01:45.717Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T01:01:45.717Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[6]++;cov_q0sdvsm27.s[43]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[7][0]++;\n    let oneMountain; /* istanbul ignore next */cov_q0sdvsm27.s[44]++;\n    for (let mountain of mountains) {/* istanbul ignore next */cov_q0sdvsm27.s[45]++;\n      if (request.url.query.id === mountain.id)\n        {/* istanbul ignore next */cov_q0sdvsm27.b[8][0]++;cov_q0sdvsm27.s[46]++;oneMountain = mountain.id;} else /* istanbul ignore next */{cov_q0sdvsm27.b[8][1]++;}cov_q0sdvsm27.s[47]++;\n      break;\n    } /* istanbul ignore next */cov_q0sdvsm27.s[48]++;\n    if (!request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[9][0]++;cov_q0sdvsm27.s[49]++;\n      sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[50]++;\n      logger.log('info', `Deletion requested from database, but ${request.url.query.id} not found.`); /* istanbul ignore next */cov_q0sdvsm27.s[51]++;\n      return;\n    } else /* istanbul ignore next */{cov_q0sdvsm27.b[9][1]++;}\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[7][1]++;}cov_q0sdvsm27.s[52]++;\n  sendStatus(response, 204, 'Deleted from database.'); /* istanbul ignore next */cov_q0sdvsm27.s[53]++;\n  logger.log('info', `User deleted ${request.url.query.id} from database.`);\n}","timestamp":"2017-12-08T01:01:45.717Z"}
{"level":"info","message":"Server is online at port 3000","timestamp":"2017-12-08T01:01:45.789Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T01:01:45.844Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:01:45.845Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[30]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[31]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T01:01:45.845Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T01:01:45.846Z"}
{"message":"storage is not defined","stack":"ReferenceError: storage is not defined\n    at Object.<anonymous>.router.post (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/route/mountain-router.js:50:3)\n    at requestParser.parse.then.request (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/lib/router.js:55:89)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-08T01:01:45.846Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T01:01:45.853Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:01:45.853Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[5]++;cov_q0sdvsm27.s[33]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;\n    let oneMountain; /* istanbul ignore next */cov_q0sdvsm27.s[34]++;\n    for (let mountain of mountains) {/* istanbul ignore next */cov_q0sdvsm27.s[35]++;\n      if (request.url.query.id === mountain.id)\n        {/* istanbul ignore next */cov_q0sdvsm27.b[5][0]++;cov_q0sdvsm27.s[36]++;oneMountain = mountain;} else /* istanbul ignore next */{cov_q0sdvsm27.b[5][1]++;}cov_q0sdvsm27.s[37]++;\n      break;\n    } /* istanbul ignore next */cov_q0sdvsm27.s[38]++;\n    if (!request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[6][0]++;cov_q0sdvsm27.s[39]++;\n      sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[40]++;\n      return;\n    } else /* istanbul ignore next */{cov_q0sdvsm27.b[6][1]++;}\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}cov_q0sdvsm27.s[41]++;\n  sendJSON(response, 200, mountains);\n}","timestamp":"2017-12-08T01:01:45.853Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T01:01:45.854Z"}
{"message":"mountains is not defined","stack":"ReferenceError: mountains is not defined\n    at Object.<anonymous>.router.get (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/route/mountain-router.js:73:27)\n    at requestParser.parse.then.request (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/lib/router.js:55:89)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-08T01:01:45.854Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T01:01:45.857Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:01:45.857Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[5]++;cov_q0sdvsm27.s[33]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;\n    let oneMountain; /* istanbul ignore next */cov_q0sdvsm27.s[34]++;\n    for (let mountain of mountains) {/* istanbul ignore next */cov_q0sdvsm27.s[35]++;\n      if (request.url.query.id === mountain.id)\n        {/* istanbul ignore next */cov_q0sdvsm27.b[5][0]++;cov_q0sdvsm27.s[36]++;oneMountain = mountain;} else /* istanbul ignore next */{cov_q0sdvsm27.b[5][1]++;}cov_q0sdvsm27.s[37]++;\n      break;\n    } /* istanbul ignore next */cov_q0sdvsm27.s[38]++;\n    if (!request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[6][0]++;cov_q0sdvsm27.s[39]++;\n      sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[40]++;\n      return;\n    } else /* istanbul ignore next */{cov_q0sdvsm27.b[6][1]++;}\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}cov_q0sdvsm27.s[41]++;\n  sendJSON(response, 200, mountains);\n}","timestamp":"2017-12-08T01:01:45.857Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T01:01:45.857Z"}
{"message":"mountains is not defined","stack":"ReferenceError: mountains is not defined\n    at Object.<anonymous>.router.get (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/route/mountain-router.js:63:26)\n    at requestParser.parse.then.request (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/lib/router.js:55:89)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-08T01:01:45.857Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T01:01:45.859Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T01:01:45.860Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/lib/request-parser.js:34:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-08T01:01:45.860Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T01:01:45.864Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:01:45.864Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[6]++;cov_q0sdvsm27.s[43]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[7][0]++;\n    let oneMountain; /* istanbul ignore next */cov_q0sdvsm27.s[44]++;\n    for (let mountain of mountains) {/* istanbul ignore next */cov_q0sdvsm27.s[45]++;\n      if (request.url.query.id === mountain.id)\n        {/* istanbul ignore next */cov_q0sdvsm27.b[8][0]++;cov_q0sdvsm27.s[46]++;oneMountain = mountain.id;} else /* istanbul ignore next */{cov_q0sdvsm27.b[8][1]++;}cov_q0sdvsm27.s[47]++;\n      break;\n    } /* istanbul ignore next */cov_q0sdvsm27.s[48]++;\n    if (!request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[9][0]++;cov_q0sdvsm27.s[49]++;\n      sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[50]++;\n      logger.log('info', `Deletion requested from database, but ${request.url.query.id} not found.`); /* istanbul ignore next */cov_q0sdvsm27.s[51]++;\n      return;\n    } else /* istanbul ignore next */{cov_q0sdvsm27.b[9][1]++;}\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[7][1]++;}cov_q0sdvsm27.s[52]++;\n  sendStatus(response, 204, 'Deleted from database.'); /* istanbul ignore next */cov_q0sdvsm27.s[53]++;\n  logger.log('info', `User deleted ${request.url.query.id} from database.`);\n}","timestamp":"2017-12-08T01:01:45.864Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T01:01:45.864Z"}
{"message":"mountains is not defined","stack":"ReferenceError: mountains is not defined\n    at Object.<anonymous>.router.delete (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/route/mountain-router.js:79:26)\n    at requestParser.parse.then.request (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/lib/router.js:55:89)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-08T01:01:45.864Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T01:01:45.866Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:01:45.866Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[6]++;cov_q0sdvsm27.s[43]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[7][0]++;\n    let oneMountain; /* istanbul ignore next */cov_q0sdvsm27.s[44]++;\n    for (let mountain of mountains) {/* istanbul ignore next */cov_q0sdvsm27.s[45]++;\n      if (request.url.query.id === mountain.id)\n        {/* istanbul ignore next */cov_q0sdvsm27.b[8][0]++;cov_q0sdvsm27.s[46]++;oneMountain = mountain.id;} else /* istanbul ignore next */{cov_q0sdvsm27.b[8][1]++;}cov_q0sdvsm27.s[47]++;\n      break;\n    } /* istanbul ignore next */cov_q0sdvsm27.s[48]++;\n    if (!request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[9][0]++;cov_q0sdvsm27.s[49]++;\n      sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[50]++;\n      logger.log('info', `Deletion requested from database, but ${request.url.query.id} not found.`); /* istanbul ignore next */cov_q0sdvsm27.s[51]++;\n      return;\n    } else /* istanbul ignore next */{cov_q0sdvsm27.b[9][1]++;}\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[7][1]++;}cov_q0sdvsm27.s[52]++;\n  sendStatus(response, 204, 'Deleted from database.'); /* istanbul ignore next */cov_q0sdvsm27.s[53]++;\n  logger.log('info', `User deleted ${request.url.query.id} from database.`);\n}","timestamp":"2017-12-08T01:01:45.866Z"}
{"level":"info","message":"Responding with a 204 code due to Deleted from database..","timestamp":"2017-12-08T01:01:45.867Z"}
{"level":"info","message":"User deleted undefined from database.","timestamp":"2017-12-08T01:01:45.867Z"}
{"level":"info","message":"Adding an POST url and callback","timestamp":"2017-12-08T01:03:47.034Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T01:03:47.035Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[30]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[31]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T01:03:47.035Z"}
{"level":"info","message":"Adding an GET url and callback","timestamp":"2017-12-08T01:03:47.035Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T01:03:47.035Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[5]++;cov_q0sdvsm27.s[33]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;\n    let oneMountain; /* istanbul ignore next */cov_q0sdvsm27.s[34]++;\n    for (let mountain of mountains) {/* istanbul ignore next */cov_q0sdvsm27.s[35]++;\n      if (request.url.query.id === mountain.id)\n        {/* istanbul ignore next */cov_q0sdvsm27.b[5][0]++;cov_q0sdvsm27.s[36]++;oneMountain = mountain;} else /* istanbul ignore next */{cov_q0sdvsm27.b[5][1]++;}cov_q0sdvsm27.s[37]++;\n      break;\n    } /* istanbul ignore next */cov_q0sdvsm27.s[38]++;\n    if (!request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[6][0]++;cov_q0sdvsm27.s[39]++;\n      sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[40]++;\n      return;\n    } else /* istanbul ignore next */{cov_q0sdvsm27.b[6][1]++;}\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}cov_q0sdvsm27.s[41]++;\n  sendJSON(response, 200, mountains);\n}","timestamp":"2017-12-08T01:03:47.035Z"}
{"level":"info","message":"Adding an DELETE url and callback","timestamp":"2017-12-08T01:03:47.035Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T01:03:47.035Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[6]++;cov_q0sdvsm27.s[43]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[7][0]++;\n    let oneMountain; /* istanbul ignore next */cov_q0sdvsm27.s[44]++;\n    for (let mountain of mountains) {/* istanbul ignore next */cov_q0sdvsm27.s[45]++;\n      if (request.url.query.id === mountain.id)\n        {/* istanbul ignore next */cov_q0sdvsm27.b[8][0]++;cov_q0sdvsm27.s[46]++;oneMountain = mountain.id;} else /* istanbul ignore next */{cov_q0sdvsm27.b[8][1]++;}cov_q0sdvsm27.s[47]++;\n      break;\n    } /* istanbul ignore next */cov_q0sdvsm27.s[48]++;\n    if (!request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[9][0]++;cov_q0sdvsm27.s[49]++;\n      sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[50]++;\n      logger.log('info', `Deletion requested from database, but ${request.url.query.id} not found.`); /* istanbul ignore next */cov_q0sdvsm27.s[51]++;\n      return;\n    } else /* istanbul ignore next */{cov_q0sdvsm27.b[9][1]++;}\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[7][1]++;}cov_q0sdvsm27.s[52]++;\n  sendStatus(response, 204, 'Deleted from database.'); /* istanbul ignore next */cov_q0sdvsm27.s[53]++;\n  logger.log('info', `User deleted ${request.url.query.id} from database.`);\n}","timestamp":"2017-12-08T01:03:47.035Z"}
{"level":"info","message":"Server is online at port 3000","timestamp":"2017-12-08T01:03:47.100Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T01:03:47.152Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:03:47.163Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[30]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[31]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T01:03:47.163Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T01:03:47.163Z"}
{"message":"storage is not defined","stack":"ReferenceError: storage is not defined\n    at Object.<anonymous>.router.post (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/route/mountain-router.js:50:3)\n    at requestParser.parse.then.request (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/lib/router.js:57:89)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-08T01:03:47.163Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T01:03:47.170Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:03:47.176Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[5]++;cov_q0sdvsm27.s[33]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;\n    let oneMountain; /* istanbul ignore next */cov_q0sdvsm27.s[34]++;\n    for (let mountain of mountains) {/* istanbul ignore next */cov_q0sdvsm27.s[35]++;\n      if (request.url.query.id === mountain.id)\n        {/* istanbul ignore next */cov_q0sdvsm27.b[5][0]++;cov_q0sdvsm27.s[36]++;oneMountain = mountain;} else /* istanbul ignore next */{cov_q0sdvsm27.b[5][1]++;}cov_q0sdvsm27.s[37]++;\n      break;\n    } /* istanbul ignore next */cov_q0sdvsm27.s[38]++;\n    if (!request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[6][0]++;cov_q0sdvsm27.s[39]++;\n      sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[40]++;\n      return;\n    } else /* istanbul ignore next */{cov_q0sdvsm27.b[6][1]++;}\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}cov_q0sdvsm27.s[41]++;\n  sendJSON(response, 200, mountains);\n}","timestamp":"2017-12-08T01:03:47.176Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T01:03:47.176Z"}
{"message":"mountains is not defined","stack":"ReferenceError: mountains is not defined\n    at Object.<anonymous>.router.get (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/route/mountain-router.js:73:27)\n    at requestParser.parse.then.request (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/lib/router.js:57:89)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-08T01:03:47.176Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T01:03:47.179Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:03:47.186Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[5]++;cov_q0sdvsm27.s[33]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;\n    let oneMountain; /* istanbul ignore next */cov_q0sdvsm27.s[34]++;\n    for (let mountain of mountains) {/* istanbul ignore next */cov_q0sdvsm27.s[35]++;\n      if (request.url.query.id === mountain.id)\n        {/* istanbul ignore next */cov_q0sdvsm27.b[5][0]++;cov_q0sdvsm27.s[36]++;oneMountain = mountain;} else /* istanbul ignore next */{cov_q0sdvsm27.b[5][1]++;}cov_q0sdvsm27.s[37]++;\n      break;\n    } /* istanbul ignore next */cov_q0sdvsm27.s[38]++;\n    if (!request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[6][0]++;cov_q0sdvsm27.s[39]++;\n      sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[40]++;\n      return;\n    } else /* istanbul ignore next */{cov_q0sdvsm27.b[6][1]++;}\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}cov_q0sdvsm27.s[41]++;\n  sendJSON(response, 200, mountains);\n}","timestamp":"2017-12-08T01:03:47.186Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T01:03:47.186Z"}
{"message":"mountains is not defined","stack":"ReferenceError: mountains is not defined\n    at Object.<anonymous>.router.get (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/route/mountain-router.js:63:26)\n    at requestParser.parse.then.request (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/lib/router.js:57:89)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-08T01:03:47.186Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T01:03:47.189Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T01:03:47.190Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/lib/request-parser.js:34:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-08T01:03:47.190Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T01:03:47.194Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:03:47.200Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[6]++;cov_q0sdvsm27.s[43]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[7][0]++;\n    let oneMountain; /* istanbul ignore next */cov_q0sdvsm27.s[44]++;\n    for (let mountain of mountains) {/* istanbul ignore next */cov_q0sdvsm27.s[45]++;\n      if (request.url.query.id === mountain.id)\n        {/* istanbul ignore next */cov_q0sdvsm27.b[8][0]++;cov_q0sdvsm27.s[46]++;oneMountain = mountain.id;} else /* istanbul ignore next */{cov_q0sdvsm27.b[8][1]++;}cov_q0sdvsm27.s[47]++;\n      break;\n    } /* istanbul ignore next */cov_q0sdvsm27.s[48]++;\n    if (!request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[9][0]++;cov_q0sdvsm27.s[49]++;\n      sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[50]++;\n      logger.log('info', `Deletion requested from database, but ${request.url.query.id} not found.`); /* istanbul ignore next */cov_q0sdvsm27.s[51]++;\n      return;\n    } else /* istanbul ignore next */{cov_q0sdvsm27.b[9][1]++;}\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[7][1]++;}cov_q0sdvsm27.s[52]++;\n  sendStatus(response, 204, 'Deleted from database.'); /* istanbul ignore next */cov_q0sdvsm27.s[53]++;\n  logger.log('info', `User deleted ${request.url.query.id} from database.`);\n}","timestamp":"2017-12-08T01:03:47.200Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T01:03:47.200Z"}
{"message":"mountains is not defined","stack":"ReferenceError: mountains is not defined\n    at Object.<anonymous>.router.delete (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/route/mountain-router.js:79:26)\n    at requestParser.parse.then.request (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/lib/router.js:57:89)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-08T01:03:47.200Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T01:03:47.216Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:03:47.222Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[6]++;cov_q0sdvsm27.s[43]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[7][0]++;\n    let oneMountain; /* istanbul ignore next */cov_q0sdvsm27.s[44]++;\n    for (let mountain of mountains) {/* istanbul ignore next */cov_q0sdvsm27.s[45]++;\n      if (request.url.query.id === mountain.id)\n        {/* istanbul ignore next */cov_q0sdvsm27.b[8][0]++;cov_q0sdvsm27.s[46]++;oneMountain = mountain.id;} else /* istanbul ignore next */{cov_q0sdvsm27.b[8][1]++;}cov_q0sdvsm27.s[47]++;\n      break;\n    } /* istanbul ignore next */cov_q0sdvsm27.s[48]++;\n    if (!request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[9][0]++;cov_q0sdvsm27.s[49]++;\n      sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[50]++;\n      logger.log('info', `Deletion requested from database, but ${request.url.query.id} not found.`); /* istanbul ignore next */cov_q0sdvsm27.s[51]++;\n      return;\n    } else /* istanbul ignore next */{cov_q0sdvsm27.b[9][1]++;}\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[7][1]++;}cov_q0sdvsm27.s[52]++;\n  sendStatus(response, 204, 'Deleted from database.'); /* istanbul ignore next */cov_q0sdvsm27.s[53]++;\n  logger.log('info', `User deleted ${request.url.query.id} from database.`);\n}","timestamp":"2017-12-08T01:03:47.222Z"}
{"level":"info","message":"Responding with a 204 code due to Deleted from database..","timestamp":"2017-12-08T01:03:47.222Z"}
{"level":"info","message":"User deleted undefined from database.","timestamp":"2017-12-08T01:03:47.222Z"}
{"level":"info","message":"Adding an POST url and callback","timestamp":"2017-12-08T01:04:09.304Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T01:04:09.304Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[30]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[31]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T01:04:09.304Z"}
{"level":"info","message":"Adding an GET url and callback","timestamp":"2017-12-08T01:04:09.304Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T01:04:09.304Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[5]++;cov_q0sdvsm27.s[33]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;\n    let oneMountain; /* istanbul ignore next */cov_q0sdvsm27.s[34]++;\n    for (let mountain of mountains) {/* istanbul ignore next */cov_q0sdvsm27.s[35]++;\n      if (request.url.query.id === mountain.id)\n        {/* istanbul ignore next */cov_q0sdvsm27.b[5][0]++;cov_q0sdvsm27.s[36]++;oneMountain = mountain;} else /* istanbul ignore next */{cov_q0sdvsm27.b[5][1]++;}cov_q0sdvsm27.s[37]++;\n      break;\n    } /* istanbul ignore next */cov_q0sdvsm27.s[38]++;\n    if (!request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[6][0]++;cov_q0sdvsm27.s[39]++;\n      sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[40]++;\n      return;\n    } else /* istanbul ignore next */{cov_q0sdvsm27.b[6][1]++;}\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}cov_q0sdvsm27.s[41]++;\n  sendJSON(response, 200, mountains);\n}","timestamp":"2017-12-08T01:04:09.304Z"}
{"level":"info","message":"Adding an DELETE url and callback","timestamp":"2017-12-08T01:04:09.305Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T01:04:09.305Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[6]++;cov_q0sdvsm27.s[43]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[7][0]++;\n    let oneMountain; /* istanbul ignore next */cov_q0sdvsm27.s[44]++;\n    for (let mountain of mountains) {/* istanbul ignore next */cov_q0sdvsm27.s[45]++;\n      if (request.url.query.id === mountain.id)\n        {/* istanbul ignore next */cov_q0sdvsm27.b[8][0]++;cov_q0sdvsm27.s[46]++;oneMountain = mountain.id;} else /* istanbul ignore next */{cov_q0sdvsm27.b[8][1]++;}cov_q0sdvsm27.s[47]++;\n      break;\n    } /* istanbul ignore next */cov_q0sdvsm27.s[48]++;\n    if (!request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[9][0]++;cov_q0sdvsm27.s[49]++;\n      sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[50]++;\n      logger.log('info', `Deletion requested from database, but ${request.url.query.id} not found.`); /* istanbul ignore next */cov_q0sdvsm27.s[51]++;\n      return;\n    } else /* istanbul ignore next */{cov_q0sdvsm27.b[9][1]++;}\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[7][1]++;}cov_q0sdvsm27.s[52]++;\n  sendStatus(response, 204, 'Deleted from database.'); /* istanbul ignore next */cov_q0sdvsm27.s[53]++;\n  logger.log('info', `User deleted ${request.url.query.id} from database.`);\n}","timestamp":"2017-12-08T01:04:09.305Z"}
{"level":"info","message":"Server is online at port 3000","timestamp":"2017-12-08T01:04:09.349Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T01:04:09.399Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:04:09.400Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[30]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[31]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T01:04:09.400Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T01:04:09.401Z"}
{"message":"storage is not defined","stack":"ReferenceError: storage is not defined\n    at Object.<anonymous>.router.post (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/route/mountain-router.js:50:3)\n    at requestParser.parse.then.request (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/lib/router.js:56:89)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-08T01:04:09.401Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T01:04:09.408Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:04:09.408Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[5]++;cov_q0sdvsm27.s[33]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;\n    let oneMountain; /* istanbul ignore next */cov_q0sdvsm27.s[34]++;\n    for (let mountain of mountains) {/* istanbul ignore next */cov_q0sdvsm27.s[35]++;\n      if (request.url.query.id === mountain.id)\n        {/* istanbul ignore next */cov_q0sdvsm27.b[5][0]++;cov_q0sdvsm27.s[36]++;oneMountain = mountain;} else /* istanbul ignore next */{cov_q0sdvsm27.b[5][1]++;}cov_q0sdvsm27.s[37]++;\n      break;\n    } /* istanbul ignore next */cov_q0sdvsm27.s[38]++;\n    if (!request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[6][0]++;cov_q0sdvsm27.s[39]++;\n      sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[40]++;\n      return;\n    } else /* istanbul ignore next */{cov_q0sdvsm27.b[6][1]++;}\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}cov_q0sdvsm27.s[41]++;\n  sendJSON(response, 200, mountains);\n}","timestamp":"2017-12-08T01:04:09.408Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T01:04:09.408Z"}
{"message":"mountains is not defined","stack":"ReferenceError: mountains is not defined\n    at Object.<anonymous>.router.get (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/route/mountain-router.js:73:27)\n    at requestParser.parse.then.request (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/lib/router.js:56:89)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-08T01:04:09.408Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T01:04:09.411Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:04:09.412Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[5]++;cov_q0sdvsm27.s[33]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;\n    let oneMountain; /* istanbul ignore next */cov_q0sdvsm27.s[34]++;\n    for (let mountain of mountains) {/* istanbul ignore next */cov_q0sdvsm27.s[35]++;\n      if (request.url.query.id === mountain.id)\n        {/* istanbul ignore next */cov_q0sdvsm27.b[5][0]++;cov_q0sdvsm27.s[36]++;oneMountain = mountain;} else /* istanbul ignore next */{cov_q0sdvsm27.b[5][1]++;}cov_q0sdvsm27.s[37]++;\n      break;\n    } /* istanbul ignore next */cov_q0sdvsm27.s[38]++;\n    if (!request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[6][0]++;cov_q0sdvsm27.s[39]++;\n      sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[40]++;\n      return;\n    } else /* istanbul ignore next */{cov_q0sdvsm27.b[6][1]++;}\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}cov_q0sdvsm27.s[41]++;\n  sendJSON(response, 200, mountains);\n}","timestamp":"2017-12-08T01:04:09.412Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T01:04:09.412Z"}
{"message":"mountains is not defined","stack":"ReferenceError: mountains is not defined\n    at Object.<anonymous>.router.get (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/route/mountain-router.js:63:26)\n    at requestParser.parse.then.request (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/lib/router.js:56:89)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-08T01:04:09.412Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T01:04:09.415Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T01:04:09.416Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/lib/request-parser.js:34:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-08T01:04:09.416Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T01:04:09.420Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:04:09.420Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[6]++;cov_q0sdvsm27.s[43]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[7][0]++;\n    let oneMountain; /* istanbul ignore next */cov_q0sdvsm27.s[44]++;\n    for (let mountain of mountains) {/* istanbul ignore next */cov_q0sdvsm27.s[45]++;\n      if (request.url.query.id === mountain.id)\n        {/* istanbul ignore next */cov_q0sdvsm27.b[8][0]++;cov_q0sdvsm27.s[46]++;oneMountain = mountain.id;} else /* istanbul ignore next */{cov_q0sdvsm27.b[8][1]++;}cov_q0sdvsm27.s[47]++;\n      break;\n    } /* istanbul ignore next */cov_q0sdvsm27.s[48]++;\n    if (!request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[9][0]++;cov_q0sdvsm27.s[49]++;\n      sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[50]++;\n      logger.log('info', `Deletion requested from database, but ${request.url.query.id} not found.`); /* istanbul ignore next */cov_q0sdvsm27.s[51]++;\n      return;\n    } else /* istanbul ignore next */{cov_q0sdvsm27.b[9][1]++;}\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[7][1]++;}cov_q0sdvsm27.s[52]++;\n  sendStatus(response, 204, 'Deleted from database.'); /* istanbul ignore next */cov_q0sdvsm27.s[53]++;\n  logger.log('info', `User deleted ${request.url.query.id} from database.`);\n}","timestamp":"2017-12-08T01:04:09.420Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T01:04:09.420Z"}
{"message":"mountains is not defined","stack":"ReferenceError: mountains is not defined\n    at Object.<anonymous>.router.delete (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/route/mountain-router.js:79:26)\n    at requestParser.parse.then.request (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/lib/router.js:56:89)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-08T01:04:09.420Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T01:04:09.422Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:04:09.423Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[6]++;cov_q0sdvsm27.s[43]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[7][0]++;\n    let oneMountain; /* istanbul ignore next */cov_q0sdvsm27.s[44]++;\n    for (let mountain of mountains) {/* istanbul ignore next */cov_q0sdvsm27.s[45]++;\n      if (request.url.query.id === mountain.id)\n        {/* istanbul ignore next */cov_q0sdvsm27.b[8][0]++;cov_q0sdvsm27.s[46]++;oneMountain = mountain.id;} else /* istanbul ignore next */{cov_q0sdvsm27.b[8][1]++;}cov_q0sdvsm27.s[47]++;\n      break;\n    } /* istanbul ignore next */cov_q0sdvsm27.s[48]++;\n    if (!request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[9][0]++;cov_q0sdvsm27.s[49]++;\n      sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[50]++;\n      logger.log('info', `Deletion requested from database, but ${request.url.query.id} not found.`); /* istanbul ignore next */cov_q0sdvsm27.s[51]++;\n      return;\n    } else /* istanbul ignore next */{cov_q0sdvsm27.b[9][1]++;}\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[7][1]++;}cov_q0sdvsm27.s[52]++;\n  sendStatus(response, 204, 'Deleted from database.'); /* istanbul ignore next */cov_q0sdvsm27.s[53]++;\n  logger.log('info', `User deleted ${request.url.query.id} from database.`);\n}","timestamp":"2017-12-08T01:04:09.423Z"}
{"level":"info","message":"Responding with a 204 code due to Deleted from database..","timestamp":"2017-12-08T01:04:09.423Z"}
{"level":"info","message":"User deleted undefined from database.","timestamp":"2017-12-08T01:04:09.423Z"}
{"level":"info","message":"Adding an POST url and callback","timestamp":"2017-12-08T01:04:42.809Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T01:04:42.810Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[30]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[31]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T01:04:42.810Z"}
{"level":"info","message":"Adding an GET url and callback","timestamp":"2017-12-08T01:04:42.810Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T01:04:42.810Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[5]++;cov_q0sdvsm27.s[33]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;\n    let oneMountain; /* istanbul ignore next */cov_q0sdvsm27.s[34]++;\n    for (let mountain of mountains) {/* istanbul ignore next */cov_q0sdvsm27.s[35]++;\n      if (request.url.query.id === mountain.id)\n        {/* istanbul ignore next */cov_q0sdvsm27.b[5][0]++;cov_q0sdvsm27.s[36]++;oneMountain = mountain;} else /* istanbul ignore next */{cov_q0sdvsm27.b[5][1]++;}cov_q0sdvsm27.s[37]++;\n      break;\n    } /* istanbul ignore next */cov_q0sdvsm27.s[38]++;\n    if (!request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[6][0]++;cov_q0sdvsm27.s[39]++;\n      sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[40]++;\n      return;\n    } else /* istanbul ignore next */{cov_q0sdvsm27.b[6][1]++;}\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}cov_q0sdvsm27.s[41]++;\n  sendJSON(response, 200, mountains);\n}","timestamp":"2017-12-08T01:04:42.810Z"}
{"level":"info","message":"Adding an DELETE url and callback","timestamp":"2017-12-08T01:04:42.810Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T01:04:42.810Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[6]++;cov_q0sdvsm27.s[43]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[7][0]++;\n    let oneMountain; /* istanbul ignore next */cov_q0sdvsm27.s[44]++;\n    for (let mountain of mountains) {/* istanbul ignore next */cov_q0sdvsm27.s[45]++;\n      if (request.url.query.id === mountain.id)\n        {/* istanbul ignore next */cov_q0sdvsm27.b[8][0]++;cov_q0sdvsm27.s[46]++;oneMountain = mountain.id;} else /* istanbul ignore next */{cov_q0sdvsm27.b[8][1]++;}cov_q0sdvsm27.s[47]++;\n      break;\n    } /* istanbul ignore next */cov_q0sdvsm27.s[48]++;\n    if (!request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[9][0]++;cov_q0sdvsm27.s[49]++;\n      sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[50]++;\n      logger.log('info', `Deletion requested from database, but ${request.url.query.id} not found.`); /* istanbul ignore next */cov_q0sdvsm27.s[51]++;\n      return;\n    } else /* istanbul ignore next */{cov_q0sdvsm27.b[9][1]++;}\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[7][1]++;}cov_q0sdvsm27.s[52]++;\n  sendStatus(response, 204, 'Deleted from database.'); /* istanbul ignore next */cov_q0sdvsm27.s[53]++;\n  logger.log('info', `User deleted ${request.url.query.id} from database.`);\n}","timestamp":"2017-12-08T01:04:42.810Z"}
{"level":"info","message":"Server is online at port 3000","timestamp":"2017-12-08T01:04:42.854Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T01:04:42.909Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:04:42.912Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[30]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[31]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T01:04:42.912Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T01:04:42.912Z"}
{"message":"storage is not defined","stack":"ReferenceError: storage is not defined\n    at Object.<anonymous>.router.post (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/route/mountain-router.js:50:3)\n    at requestParser.parse.then.request (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/lib/router.js:57:89)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-08T01:04:42.912Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T01:04:42.919Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:04:42.920Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[5]++;cov_q0sdvsm27.s[33]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;\n    let oneMountain; /* istanbul ignore next */cov_q0sdvsm27.s[34]++;\n    for (let mountain of mountains) {/* istanbul ignore next */cov_q0sdvsm27.s[35]++;\n      if (request.url.query.id === mountain.id)\n        {/* istanbul ignore next */cov_q0sdvsm27.b[5][0]++;cov_q0sdvsm27.s[36]++;oneMountain = mountain;} else /* istanbul ignore next */{cov_q0sdvsm27.b[5][1]++;}cov_q0sdvsm27.s[37]++;\n      break;\n    } /* istanbul ignore next */cov_q0sdvsm27.s[38]++;\n    if (!request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[6][0]++;cov_q0sdvsm27.s[39]++;\n      sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[40]++;\n      return;\n    } else /* istanbul ignore next */{cov_q0sdvsm27.b[6][1]++;}\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}cov_q0sdvsm27.s[41]++;\n  sendJSON(response, 200, mountains);\n}","timestamp":"2017-12-08T01:04:42.920Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T01:04:42.920Z"}
{"message":"mountains is not defined","stack":"ReferenceError: mountains is not defined\n    at Object.<anonymous>.router.get (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/route/mountain-router.js:73:27)\n    at requestParser.parse.then.request (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/lib/router.js:57:89)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-08T01:04:42.920Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T01:04:42.923Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:04:42.924Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[5]++;cov_q0sdvsm27.s[33]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;\n    let oneMountain; /* istanbul ignore next */cov_q0sdvsm27.s[34]++;\n    for (let mountain of mountains) {/* istanbul ignore next */cov_q0sdvsm27.s[35]++;\n      if (request.url.query.id === mountain.id)\n        {/* istanbul ignore next */cov_q0sdvsm27.b[5][0]++;cov_q0sdvsm27.s[36]++;oneMountain = mountain;} else /* istanbul ignore next */{cov_q0sdvsm27.b[5][1]++;}cov_q0sdvsm27.s[37]++;\n      break;\n    } /* istanbul ignore next */cov_q0sdvsm27.s[38]++;\n    if (!request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[6][0]++;cov_q0sdvsm27.s[39]++;\n      sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[40]++;\n      return;\n    } else /* istanbul ignore next */{cov_q0sdvsm27.b[6][1]++;}\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}cov_q0sdvsm27.s[41]++;\n  sendJSON(response, 200, mountains);\n}","timestamp":"2017-12-08T01:04:42.924Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T01:04:42.924Z"}
{"message":"mountains is not defined","stack":"ReferenceError: mountains is not defined\n    at Object.<anonymous>.router.get (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/route/mountain-router.js:63:26)\n    at requestParser.parse.then.request (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/lib/router.js:57:89)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-08T01:04:42.924Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T01:04:42.926Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T01:04:42.927Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/lib/request-parser.js:34:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-08T01:04:42.927Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T01:04:42.931Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:04:42.931Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[6]++;cov_q0sdvsm27.s[43]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[7][0]++;\n    let oneMountain; /* istanbul ignore next */cov_q0sdvsm27.s[44]++;\n    for (let mountain of mountains) {/* istanbul ignore next */cov_q0sdvsm27.s[45]++;\n      if (request.url.query.id === mountain.id)\n        {/* istanbul ignore next */cov_q0sdvsm27.b[8][0]++;cov_q0sdvsm27.s[46]++;oneMountain = mountain.id;} else /* istanbul ignore next */{cov_q0sdvsm27.b[8][1]++;}cov_q0sdvsm27.s[47]++;\n      break;\n    } /* istanbul ignore next */cov_q0sdvsm27.s[48]++;\n    if (!request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[9][0]++;cov_q0sdvsm27.s[49]++;\n      sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[50]++;\n      logger.log('info', `Deletion requested from database, but ${request.url.query.id} not found.`); /* istanbul ignore next */cov_q0sdvsm27.s[51]++;\n      return;\n    } else /* istanbul ignore next */{cov_q0sdvsm27.b[9][1]++;}\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[7][1]++;}cov_q0sdvsm27.s[52]++;\n  sendStatus(response, 204, 'Deleted from database.'); /* istanbul ignore next */cov_q0sdvsm27.s[53]++;\n  logger.log('info', `User deleted ${request.url.query.id} from database.`);\n}","timestamp":"2017-12-08T01:04:42.931Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T01:04:42.931Z"}
{"message":"mountains is not defined","stack":"ReferenceError: mountains is not defined\n    at Object.<anonymous>.router.delete (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/route/mountain-router.js:79:26)\n    at requestParser.parse.then.request (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/lib/router.js:57:89)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-08T01:04:42.932Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T01:04:42.934Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:04:42.934Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[6]++;cov_q0sdvsm27.s[43]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[7][0]++;\n    let oneMountain; /* istanbul ignore next */cov_q0sdvsm27.s[44]++;\n    for (let mountain of mountains) {/* istanbul ignore next */cov_q0sdvsm27.s[45]++;\n      if (request.url.query.id === mountain.id)\n        {/* istanbul ignore next */cov_q0sdvsm27.b[8][0]++;cov_q0sdvsm27.s[46]++;oneMountain = mountain.id;} else /* istanbul ignore next */{cov_q0sdvsm27.b[8][1]++;}cov_q0sdvsm27.s[47]++;\n      break;\n    } /* istanbul ignore next */cov_q0sdvsm27.s[48]++;\n    if (!request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[9][0]++;cov_q0sdvsm27.s[49]++;\n      sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[50]++;\n      logger.log('info', `Deletion requested from database, but ${request.url.query.id} not found.`); /* istanbul ignore next */cov_q0sdvsm27.s[51]++;\n      return;\n    } else /* istanbul ignore next */{cov_q0sdvsm27.b[9][1]++;}\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[7][1]++;}cov_q0sdvsm27.s[52]++;\n  sendStatus(response, 204, 'Deleted from database.'); /* istanbul ignore next */cov_q0sdvsm27.s[53]++;\n  logger.log('info', `User deleted ${request.url.query.id} from database.`);\n}","timestamp":"2017-12-08T01:04:42.934Z"}
{"level":"info","message":"Responding with a 204 code due to Deleted from database..","timestamp":"2017-12-08T01:04:42.934Z"}
{"level":"info","message":"User deleted undefined from database.","timestamp":"2017-12-08T01:04:42.934Z"}
{"level":"info","message":"Adding an POST url and callback","timestamp":"2017-12-08T01:06:03.414Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T01:06:03.415Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[30]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[31]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T01:06:03.415Z"}
{"level":"info","message":"Adding an GET url and callback","timestamp":"2017-12-08T01:06:03.415Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T01:06:03.415Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[5]++;cov_q0sdvsm27.s[33]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;\n    let oneMountain; /* istanbul ignore next */cov_q0sdvsm27.s[34]++;\n    for (let mountain of mountains) {/* istanbul ignore next */cov_q0sdvsm27.s[35]++;\n      if (request.url.query.id === mountain.id)\n        {/* istanbul ignore next */cov_q0sdvsm27.b[5][0]++;cov_q0sdvsm27.s[36]++;oneMountain = mountain;} else /* istanbul ignore next */{cov_q0sdvsm27.b[5][1]++;}cov_q0sdvsm27.s[37]++;\n      break;\n    } /* istanbul ignore next */cov_q0sdvsm27.s[38]++;\n    if (!request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[6][0]++;cov_q0sdvsm27.s[39]++;\n      sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[40]++;\n      return;\n    } else /* istanbul ignore next */{cov_q0sdvsm27.b[6][1]++;}\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}cov_q0sdvsm27.s[41]++;\n  sendJSON(response, 200, mountains);\n}","timestamp":"2017-12-08T01:06:03.415Z"}
{"level":"info","message":"Adding an DELETE url and callback","timestamp":"2017-12-08T01:06:03.415Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T01:06:03.415Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[6]++;cov_q0sdvsm27.s[43]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[7][0]++;\n    let oneMountain; /* istanbul ignore next */cov_q0sdvsm27.s[44]++;\n    for (let mountain of mountains) {/* istanbul ignore next */cov_q0sdvsm27.s[45]++;\n      if (request.url.query.id === mountain.id)\n        {/* istanbul ignore next */cov_q0sdvsm27.b[8][0]++;cov_q0sdvsm27.s[46]++;oneMountain = mountain.id;} else /* istanbul ignore next */{cov_q0sdvsm27.b[8][1]++;}cov_q0sdvsm27.s[47]++;\n      break;\n    } /* istanbul ignore next */cov_q0sdvsm27.s[48]++;\n    if (!request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[9][0]++;cov_q0sdvsm27.s[49]++;\n      sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[50]++;\n      logger.log('info', `Deletion requested from database, but ${request.url.query.id} not found.`); /* istanbul ignore next */cov_q0sdvsm27.s[51]++;\n      return;\n    } else /* istanbul ignore next */{cov_q0sdvsm27.b[9][1]++;}\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[7][1]++;}cov_q0sdvsm27.s[52]++;\n  sendStatus(response, 204, 'Deleted from database.'); /* istanbul ignore next */cov_q0sdvsm27.s[53]++;\n  logger.log('info', `User deleted ${request.url.query.id} from database.`);\n}","timestamp":"2017-12-08T01:06:03.415Z"}
{"level":"info","message":"Server is online at port 3000","timestamp":"2017-12-08T01:06:03.475Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T01:06:03.526Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:06:03.529Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[30]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[31]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T01:06:03.529Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T01:06:03.529Z"}
{"message":"storage is not defined","stack":"ReferenceError: storage is not defined\n    at Object.<anonymous>.router.post (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/route/mountain-router.js:50:3)\n    at requestParser.parse.then.request (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/lib/router.js:57:89)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-08T01:06:03.530Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T01:06:03.536Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T01:06:03.536Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/lib/request-parser.js:34:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-08T01:06:03.537Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T01:06:03.541Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:06:03.541Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[6]++;cov_q0sdvsm27.s[43]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[7][0]++;\n    let oneMountain; /* istanbul ignore next */cov_q0sdvsm27.s[44]++;\n    for (let mountain of mountains) {/* istanbul ignore next */cov_q0sdvsm27.s[45]++;\n      if (request.url.query.id === mountain.id)\n        {/* istanbul ignore next */cov_q0sdvsm27.b[8][0]++;cov_q0sdvsm27.s[46]++;oneMountain = mountain.id;} else /* istanbul ignore next */{cov_q0sdvsm27.b[8][1]++;}cov_q0sdvsm27.s[47]++;\n      break;\n    } /* istanbul ignore next */cov_q0sdvsm27.s[48]++;\n    if (!request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[9][0]++;cov_q0sdvsm27.s[49]++;\n      sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[50]++;\n      logger.log('info', `Deletion requested from database, but ${request.url.query.id} not found.`); /* istanbul ignore next */cov_q0sdvsm27.s[51]++;\n      return;\n    } else /* istanbul ignore next */{cov_q0sdvsm27.b[9][1]++;}\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[7][1]++;}cov_q0sdvsm27.s[52]++;\n  sendStatus(response, 204, 'Deleted from database.'); /* istanbul ignore next */cov_q0sdvsm27.s[53]++;\n  logger.log('info', `User deleted ${request.url.query.id} from database.`);\n}","timestamp":"2017-12-08T01:06:03.541Z"}
{"level":"info","message":"Responding with a 204 code due to Deleted from database..","timestamp":"2017-12-08T01:06:03.541Z"}
{"level":"info","message":"User deleted undefined from database.","timestamp":"2017-12-08T01:06:03.542Z"}
{"level":"info","message":"Adding an POST url and callback","timestamp":"2017-12-08T01:06:39.302Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T01:06:39.302Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[30]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[31]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T01:06:39.302Z"}
{"level":"info","message":"Adding an GET url and callback","timestamp":"2017-12-08T01:06:39.303Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T01:06:39.303Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[5]++;cov_q0sdvsm27.s[33]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;\n    let oneMountain; /* istanbul ignore next */cov_q0sdvsm27.s[34]++;\n    for (let mountain of mountains) {/* istanbul ignore next */cov_q0sdvsm27.s[35]++;\n      if (request.url.query.id === mountain.id)\n        {/* istanbul ignore next */cov_q0sdvsm27.b[5][0]++;cov_q0sdvsm27.s[36]++;oneMountain = mountain;} else /* istanbul ignore next */{cov_q0sdvsm27.b[5][1]++;}cov_q0sdvsm27.s[37]++;\n      break;\n    } /* istanbul ignore next */cov_q0sdvsm27.s[38]++;\n    if (!request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[6][0]++;cov_q0sdvsm27.s[39]++;\n      sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[40]++;\n      return;\n    } else /* istanbul ignore next */{cov_q0sdvsm27.b[6][1]++;}\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}cov_q0sdvsm27.s[41]++;\n  sendJSON(response, 200, mountains);\n}","timestamp":"2017-12-08T01:06:39.303Z"}
{"level":"info","message":"Adding an DELETE url and callback","timestamp":"2017-12-08T01:06:39.303Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T01:06:39.303Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[6]++;cov_q0sdvsm27.s[43]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[7][0]++;\n    let oneMountain; /* istanbul ignore next */cov_q0sdvsm27.s[44]++;\n    for (let mountain of mountains) {/* istanbul ignore next */cov_q0sdvsm27.s[45]++;\n      if (request.url.query.id === mountain.id)\n        {/* istanbul ignore next */cov_q0sdvsm27.b[8][0]++;cov_q0sdvsm27.s[46]++;oneMountain = mountain.id;} else /* istanbul ignore next */{cov_q0sdvsm27.b[8][1]++;}cov_q0sdvsm27.s[47]++;\n      break;\n    } /* istanbul ignore next */cov_q0sdvsm27.s[48]++;\n    if (!request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[9][0]++;cov_q0sdvsm27.s[49]++;\n      sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[50]++;\n      logger.log('info', `Deletion requested from database, but ${request.url.query.id} not found.`); /* istanbul ignore next */cov_q0sdvsm27.s[51]++;\n      return;\n    } else /* istanbul ignore next */{cov_q0sdvsm27.b[9][1]++;}\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[7][1]++;}cov_q0sdvsm27.s[52]++;\n  sendStatus(response, 204, 'Deleted from database.'); /* istanbul ignore next */cov_q0sdvsm27.s[53]++;\n  logger.log('info', `User deleted ${request.url.query.id} from database.`);\n}","timestamp":"2017-12-08T01:06:39.303Z"}
{"level":"info","message":"Server is online at port 3000","timestamp":"2017-12-08T01:06:39.364Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T01:06:39.423Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:06:39.427Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[30]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[31]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T01:06:39.427Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T01:06:39.428Z"}
{"message":"storage is not defined","stack":"ReferenceError: storage is not defined\n    at Object.<anonymous>.router.post (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/route/mountain-router.js:50:3)\n    at requestParser.parse.then.request (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/lib/router.js:57:89)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-08T01:06:39.428Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T01:06:39.439Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T01:06:39.440Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/lib/request-parser.js:34:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-08T01:06:39.440Z"}
{"level":"info","message":"Adding an POST url and callback","timestamp":"2017-12-08T01:07:22.671Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T01:07:22.671Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[30]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[31]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T01:07:22.671Z"}
{"level":"info","message":"Adding an GET url and callback","timestamp":"2017-12-08T01:07:22.671Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T01:07:22.671Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[5]++;cov_q0sdvsm27.s[33]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;\n    let oneMountain; /* istanbul ignore next */cov_q0sdvsm27.s[34]++;\n    for (let mountain of mountains) {/* istanbul ignore next */cov_q0sdvsm27.s[35]++;\n      if (request.url.query.id === mountain.id)\n        {/* istanbul ignore next */cov_q0sdvsm27.b[5][0]++;cov_q0sdvsm27.s[36]++;oneMountain = mountain;} else /* istanbul ignore next */{cov_q0sdvsm27.b[5][1]++;}cov_q0sdvsm27.s[37]++;\n      break;\n    } /* istanbul ignore next */cov_q0sdvsm27.s[38]++;\n    if (!request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[6][0]++;cov_q0sdvsm27.s[39]++;\n      sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[40]++;\n      return;\n    } else /* istanbul ignore next */{cov_q0sdvsm27.b[6][1]++;}\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}cov_q0sdvsm27.s[41]++;\n  sendJSON(response, 200, mountains);\n}","timestamp":"2017-12-08T01:07:22.671Z"}
{"level":"info","message":"Adding an DELETE url and callback","timestamp":"2017-12-08T01:07:22.672Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T01:07:22.672Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[6]++;cov_q0sdvsm27.s[43]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[7][0]++;\n    let oneMountain; /* istanbul ignore next */cov_q0sdvsm27.s[44]++;\n    for (let mountain of mountains) {/* istanbul ignore next */cov_q0sdvsm27.s[45]++;\n      if (request.url.query.id === mountain.id)\n        {/* istanbul ignore next */cov_q0sdvsm27.b[8][0]++;cov_q0sdvsm27.s[46]++;oneMountain = mountain.id;} else /* istanbul ignore next */{cov_q0sdvsm27.b[8][1]++;}cov_q0sdvsm27.s[47]++;\n      break;\n    } /* istanbul ignore next */cov_q0sdvsm27.s[48]++;\n    if (!request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[9][0]++;cov_q0sdvsm27.s[49]++;\n      sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[50]++;\n      logger.log('info', `Deletion requested from database, but ${request.url.query.id} not found.`); /* istanbul ignore next */cov_q0sdvsm27.s[51]++;\n      return;\n    } else /* istanbul ignore next */{cov_q0sdvsm27.b[9][1]++;}\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[7][1]++;}cov_q0sdvsm27.s[52]++;\n  sendStatus(response, 204, 'Deleted from database.'); /* istanbul ignore next */cov_q0sdvsm27.s[53]++;\n  logger.log('info', `User deleted ${request.url.query.id} from database.`);\n}","timestamp":"2017-12-08T01:07:22.672Z"}
{"level":"info","message":"Server is online at port 3000","timestamp":"2017-12-08T01:07:22.720Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T01:07:22.774Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:07:22.777Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[30]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[31]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T01:07:22.777Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T01:07:22.777Z"}
{"message":"storage is not defined","stack":"ReferenceError: storage is not defined\n    at Object.<anonymous>.router.post (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/route/mountain-router.js:50:3)\n    at requestParser.parse.then.request (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/lib/router.js:58:89)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-08T01:07:22.777Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T01:07:22.784Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T01:07:22.785Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/lib/request-parser.js:34:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-08T01:07:22.785Z"}
{"level":"info","message":"Adding an POST url and callback","timestamp":"2017-12-08T01:09:02.616Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T01:09:02.617Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[30]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[31]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T01:09:02.617Z"}
{"level":"info","message":"Adding an GET url and callback","timestamp":"2017-12-08T01:09:02.617Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T01:09:02.617Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[5]++;cov_q0sdvsm27.s[33]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;\n    let oneMountain; /* istanbul ignore next */cov_q0sdvsm27.s[34]++;\n    for (let mountain of mountains) {/* istanbul ignore next */cov_q0sdvsm27.s[35]++;\n      if (request.url.query.id === mountain.id)\n        {/* istanbul ignore next */cov_q0sdvsm27.b[5][0]++;cov_q0sdvsm27.s[36]++;oneMountain = mountain;} else /* istanbul ignore next */{cov_q0sdvsm27.b[5][1]++;}cov_q0sdvsm27.s[37]++;\n      break;\n    } /* istanbul ignore next */cov_q0sdvsm27.s[38]++;\n    if (!request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[6][0]++;cov_q0sdvsm27.s[39]++;\n      sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[40]++;\n      return;\n    } else /* istanbul ignore next */{cov_q0sdvsm27.b[6][1]++;}\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}cov_q0sdvsm27.s[41]++;\n  sendJSON(response, 200, mountains);\n}","timestamp":"2017-12-08T01:09:02.617Z"}
{"level":"info","message":"Adding an DELETE url and callback","timestamp":"2017-12-08T01:09:02.618Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T01:09:02.618Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[6]++;cov_q0sdvsm27.s[43]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[7][0]++;\n    let oneMountain; /* istanbul ignore next */cov_q0sdvsm27.s[44]++;\n    for (let mountain of mountains) {/* istanbul ignore next */cov_q0sdvsm27.s[45]++;\n      if (request.url.query.id === mountain.id)\n        {/* istanbul ignore next */cov_q0sdvsm27.b[8][0]++;cov_q0sdvsm27.s[46]++;oneMountain = mountain.id;} else /* istanbul ignore next */{cov_q0sdvsm27.b[8][1]++;}cov_q0sdvsm27.s[47]++;\n      break;\n    } /* istanbul ignore next */cov_q0sdvsm27.s[48]++;\n    if (!request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[9][0]++;cov_q0sdvsm27.s[49]++;\n      sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[50]++;\n      logger.log('info', `Deletion requested from database, but ${request.url.query.id} not found.`); /* istanbul ignore next */cov_q0sdvsm27.s[51]++;\n      return;\n    } else /* istanbul ignore next */{cov_q0sdvsm27.b[9][1]++;}\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[7][1]++;}cov_q0sdvsm27.s[52]++;\n  sendStatus(response, 204, 'Deleted from database.'); /* istanbul ignore next */cov_q0sdvsm27.s[53]++;\n  logger.log('info', `User deleted ${request.url.query.id} from database.`);\n}","timestamp":"2017-12-08T01:09:02.618Z"}
{"level":"info","message":"Server is online at port 3000","timestamp":"2017-12-08T01:09:02.661Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T01:09:02.712Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:09:02.715Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[30]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[31]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T01:09:02.715Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T01:09:02.716Z"}
{"message":"storage is not defined","stack":"ReferenceError: storage is not defined\n    at Object.<anonymous>.router.post (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/route/mountain-router.js:50:3)\n    at requestParser.parse.then.request (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/lib/router.js:58:14)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-08T01:09:02.716Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T01:09:02.723Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T01:09:02.723Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/lib/request-parser.js:34:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-08T01:09:02.723Z"}
{"level":"info","message":"Adding an POST url and callback","timestamp":"2017-12-08T01:09:17.973Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T01:09:17.973Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[30]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[31]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T01:09:17.973Z"}
{"level":"info","message":"Adding an GET url and callback","timestamp":"2017-12-08T01:09:17.973Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T01:09:17.973Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[5]++;cov_q0sdvsm27.s[33]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;\n    let oneMountain; /* istanbul ignore next */cov_q0sdvsm27.s[34]++;\n    for (let mountain of mountains) {/* istanbul ignore next */cov_q0sdvsm27.s[35]++;\n      if (request.url.query.id === mountain.id)\n        {/* istanbul ignore next */cov_q0sdvsm27.b[5][0]++;cov_q0sdvsm27.s[36]++;oneMountain = mountain;} else /* istanbul ignore next */{cov_q0sdvsm27.b[5][1]++;}cov_q0sdvsm27.s[37]++;\n      break;\n    } /* istanbul ignore next */cov_q0sdvsm27.s[38]++;\n    if (!request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[6][0]++;cov_q0sdvsm27.s[39]++;\n      sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[40]++;\n      return;\n    } else /* istanbul ignore next */{cov_q0sdvsm27.b[6][1]++;}\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}cov_q0sdvsm27.s[41]++;\n  sendJSON(response, 200, mountains);\n}","timestamp":"2017-12-08T01:09:17.973Z"}
{"level":"info","message":"Adding an DELETE url and callback","timestamp":"2017-12-08T01:09:17.974Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T01:09:17.974Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[6]++;cov_q0sdvsm27.s[43]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[7][0]++;\n    let oneMountain; /* istanbul ignore next */cov_q0sdvsm27.s[44]++;\n    for (let mountain of mountains) {/* istanbul ignore next */cov_q0sdvsm27.s[45]++;\n      if (request.url.query.id === mountain.id)\n        {/* istanbul ignore next */cov_q0sdvsm27.b[8][0]++;cov_q0sdvsm27.s[46]++;oneMountain = mountain.id;} else /* istanbul ignore next */{cov_q0sdvsm27.b[8][1]++;}cov_q0sdvsm27.s[47]++;\n      break;\n    } /* istanbul ignore next */cov_q0sdvsm27.s[48]++;\n    if (!request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[9][0]++;cov_q0sdvsm27.s[49]++;\n      sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[50]++;\n      logger.log('info', `Deletion requested from database, but ${request.url.query.id} not found.`); /* istanbul ignore next */cov_q0sdvsm27.s[51]++;\n      return;\n    } else /* istanbul ignore next */{cov_q0sdvsm27.b[9][1]++;}\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[7][1]++;}cov_q0sdvsm27.s[52]++;\n  sendStatus(response, 204, 'Deleted from database.'); /* istanbul ignore next */cov_q0sdvsm27.s[53]++;\n  logger.log('info', `User deleted ${request.url.query.id} from database.`);\n}","timestamp":"2017-12-08T01:09:17.974Z"}
{"level":"info","message":"Server is online at port 3000","timestamp":"2017-12-08T01:09:18.017Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T01:09:18.079Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:09:18.082Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[30]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[31]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T01:09:18.082Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T01:09:18.083Z"}
{"message":"storage is not defined","stack":"ReferenceError: storage is not defined\n    at Object.<anonymous>.router.post (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/route/mountain-router.js:50:3)\n    at requestParser.parse.then.request (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/lib/router.js:59:14)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-08T01:09:18.083Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T01:09:18.091Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T01:09:18.091Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/lib/request-parser.js:34:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-08T01:09:18.091Z"}
{"level":"info","message":"Adding an POST url and callback","timestamp":"2017-12-08T01:10:43.433Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T01:10:43.434Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[30]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[31]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T01:10:43.434Z"}
{"level":"info","message":"Adding an GET url and callback","timestamp":"2017-12-08T01:10:43.434Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T01:10:43.434Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[5]++;cov_q0sdvsm27.s[33]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;\n    let oneMountain; /* istanbul ignore next */cov_q0sdvsm27.s[34]++;\n    for (let mountain of mountains) {/* istanbul ignore next */cov_q0sdvsm27.s[35]++;\n      if (request.url.query.id === mountain.id)\n        {/* istanbul ignore next */cov_q0sdvsm27.b[5][0]++;cov_q0sdvsm27.s[36]++;oneMountain = mountain;} else /* istanbul ignore next */{cov_q0sdvsm27.b[5][1]++;}cov_q0sdvsm27.s[37]++;\n      break;\n    } /* istanbul ignore next */cov_q0sdvsm27.s[38]++;\n    if (!request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[6][0]++;cov_q0sdvsm27.s[39]++;\n      sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[40]++;\n      return;\n    } else /* istanbul ignore next */{cov_q0sdvsm27.b[6][1]++;}\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}cov_q0sdvsm27.s[41]++;\n  sendJSON(response, 200, mountains);\n}","timestamp":"2017-12-08T01:10:43.434Z"}
{"level":"info","message":"Adding an DELETE url and callback","timestamp":"2017-12-08T01:10:43.434Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T01:10:43.434Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[6]++;cov_q0sdvsm27.s[43]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[7][0]++;\n    let oneMountain; /* istanbul ignore next */cov_q0sdvsm27.s[44]++;\n    for (let mountain of mountains) {/* istanbul ignore next */cov_q0sdvsm27.s[45]++;\n      if (request.url.query.id === mountain.id)\n        {/* istanbul ignore next */cov_q0sdvsm27.b[8][0]++;cov_q0sdvsm27.s[46]++;oneMountain = mountain.id;} else /* istanbul ignore next */{cov_q0sdvsm27.b[8][1]++;}cov_q0sdvsm27.s[47]++;\n      break;\n    } /* istanbul ignore next */cov_q0sdvsm27.s[48]++;\n    if (!request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[9][0]++;cov_q0sdvsm27.s[49]++;\n      sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[50]++;\n      logger.log('info', `Deletion requested from database, but ${request.url.query.id} not found.`); /* istanbul ignore next */cov_q0sdvsm27.s[51]++;\n      return;\n    } else /* istanbul ignore next */{cov_q0sdvsm27.b[9][1]++;}\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[7][1]++;}cov_q0sdvsm27.s[52]++;\n  sendStatus(response, 204, 'Deleted from database.'); /* istanbul ignore next */cov_q0sdvsm27.s[53]++;\n  logger.log('info', `User deleted ${request.url.query.id} from database.`);\n}","timestamp":"2017-12-08T01:10:43.434Z"}
{"level":"info","message":"Server is online at port 3000","timestamp":"2017-12-08T01:10:43.478Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T01:10:43.528Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:10:43.532Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[30]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[31]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T01:10:43.532Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T01:10:43.532Z"}
{"message":"storage is not defined","stack":"ReferenceError: storage is not defined\n    at Object.<anonymous>.router.post (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/route/mountain-router.js:50:3)\n    at requestParser.parse.then.request (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/lib/router.js:59:14)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-08T01:10:43.532Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T01:10:43.539Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T01:10:43.540Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/lib/request-parser.js:34:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-08T01:10:43.540Z"}
{"level":"info","message":"Adding an POST url and callback","timestamp":"2017-12-08T01:13:08.111Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T01:13:08.112Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[30]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[31]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T01:13:08.112Z"}
{"level":"info","message":"Adding an GET url and callback","timestamp":"2017-12-08T01:13:08.112Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T01:13:08.112Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[5]++;cov_q0sdvsm27.s[33]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;\n    let oneMountain; /* istanbul ignore next */cov_q0sdvsm27.s[34]++;\n    for (let mountain of mountains) {/* istanbul ignore next */cov_q0sdvsm27.s[35]++;\n      if (request.url.query.id === mountain.id)\n        {/* istanbul ignore next */cov_q0sdvsm27.b[5][0]++;cov_q0sdvsm27.s[36]++;oneMountain = mountain;} else /* istanbul ignore next */{cov_q0sdvsm27.b[5][1]++;}cov_q0sdvsm27.s[37]++;\n      break;\n    } /* istanbul ignore next */cov_q0sdvsm27.s[38]++;\n    if (!request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[6][0]++;cov_q0sdvsm27.s[39]++;\n      sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[40]++;\n      return;\n    } else /* istanbul ignore next */{cov_q0sdvsm27.b[6][1]++;}\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}cov_q0sdvsm27.s[41]++;\n  sendJSON(response, 200, mountains);\n}","timestamp":"2017-12-08T01:13:08.112Z"}
{"level":"info","message":"Adding an DELETE url and callback","timestamp":"2017-12-08T01:13:08.112Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T01:13:08.112Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[6]++;cov_q0sdvsm27.s[43]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[7][0]++;\n    let oneMountain; /* istanbul ignore next */cov_q0sdvsm27.s[44]++;\n    for (let mountain of mountains) {/* istanbul ignore next */cov_q0sdvsm27.s[45]++;\n      if (request.url.query.id === mountain.id)\n        {/* istanbul ignore next */cov_q0sdvsm27.b[8][0]++;cov_q0sdvsm27.s[46]++;oneMountain = mountain.id;} else /* istanbul ignore next */{cov_q0sdvsm27.b[8][1]++;}cov_q0sdvsm27.s[47]++;\n      break;\n    } /* istanbul ignore next */cov_q0sdvsm27.s[48]++;\n    if (!request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[9][0]++;cov_q0sdvsm27.s[49]++;\n      sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[50]++;\n      logger.log('info', `Deletion requested from database, but ${request.url.query.id} not found.`); /* istanbul ignore next */cov_q0sdvsm27.s[51]++;\n      return;\n    } else /* istanbul ignore next */{cov_q0sdvsm27.b[9][1]++;}\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[7][1]++;}cov_q0sdvsm27.s[52]++;\n  sendStatus(response, 204, 'Deleted from database.'); /* istanbul ignore next */cov_q0sdvsm27.s[53]++;\n  logger.log('info', `User deleted ${request.url.query.id} from database.`);\n}","timestamp":"2017-12-08T01:13:08.113Z"}
{"level":"info","message":"Server is online at port 3000","timestamp":"2017-12-08T01:13:08.182Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T01:13:08.233Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:13:08.236Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[30]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[31]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T01:13:08.236Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T01:13:08.237Z"}
{"message":"storage is not defined","stack":"ReferenceError: storage is not defined\n    at Object.<anonymous>.router.post (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/route/mountain-router.js:50:3)\n    at requestParser.parse.then.request (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/lib/router.js:59:14)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-08T01:13:08.237Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T01:13:08.246Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T01:13:08.247Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/lib/request-parser.js:34:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-08T01:13:08.247Z"}
{"level":"info","message":"Adding an POST url and callback","timestamp":"2017-12-08T01:15:09.191Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T01:15:09.192Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}cov_q0sdvsm27.s[28]++;\n  console.log(request.body);\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[29]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[30]++;\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[31]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[32]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T01:15:09.192Z"}
{"level":"info","message":"Adding an GET url and callback","timestamp":"2017-12-08T01:15:09.192Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T01:15:09.192Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[5]++;cov_q0sdvsm27.s[34]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;\n    let oneMountain; /* istanbul ignore next */cov_q0sdvsm27.s[35]++;\n    for (let mountain of mountains) {/* istanbul ignore next */cov_q0sdvsm27.s[36]++;\n      if (request.url.query.id === mountain.id)\n        {/* istanbul ignore next */cov_q0sdvsm27.b[5][0]++;cov_q0sdvsm27.s[37]++;oneMountain = mountain;} else /* istanbul ignore next */{cov_q0sdvsm27.b[5][1]++;}cov_q0sdvsm27.s[38]++;\n      break;\n    } /* istanbul ignore next */cov_q0sdvsm27.s[39]++;\n    if (!request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[6][0]++;cov_q0sdvsm27.s[40]++;\n      sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[41]++;\n      return;\n    } else /* istanbul ignore next */{cov_q0sdvsm27.b[6][1]++;}\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}cov_q0sdvsm27.s[42]++;\n  sendJSON(response, 200, mountains);\n}","timestamp":"2017-12-08T01:15:09.192Z"}
{"level":"info","message":"Adding an DELETE url and callback","timestamp":"2017-12-08T01:15:09.192Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T01:15:09.192Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[6]++;cov_q0sdvsm27.s[44]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[7][0]++;\n    let oneMountain; /* istanbul ignore next */cov_q0sdvsm27.s[45]++;\n    for (let mountain of mountains) {/* istanbul ignore next */cov_q0sdvsm27.s[46]++;\n      if (request.url.query.id === mountain.id)\n        {/* istanbul ignore next */cov_q0sdvsm27.b[8][0]++;cov_q0sdvsm27.s[47]++;oneMountain = mountain.id;} else /* istanbul ignore next */{cov_q0sdvsm27.b[8][1]++;}cov_q0sdvsm27.s[48]++;\n      break;\n    } /* istanbul ignore next */cov_q0sdvsm27.s[49]++;\n    if (!request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[9][0]++;cov_q0sdvsm27.s[50]++;\n      sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[51]++;\n      logger.log('info', `Deletion requested from database, but ${request.url.query.id} not found.`); /* istanbul ignore next */cov_q0sdvsm27.s[52]++;\n      return;\n    } else /* istanbul ignore next */{cov_q0sdvsm27.b[9][1]++;}\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[7][1]++;}cov_q0sdvsm27.s[53]++;\n  sendStatus(response, 204, 'Deleted from database.'); /* istanbul ignore next */cov_q0sdvsm27.s[54]++;\n  logger.log('info', `User deleted ${request.url.query.id} from database.`);\n}","timestamp":"2017-12-08T01:15:09.192Z"}
{"level":"info","message":"Server is online at port 3000","timestamp":"2017-12-08T01:15:09.237Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T01:15:09.288Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:15:09.291Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}cov_q0sdvsm27.s[28]++;\n  console.log(request.body);\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[29]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[30]++;\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[31]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[32]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T01:15:09.291Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T01:15:09.292Z"}
{"message":"storage is not defined","stack":"ReferenceError: storage is not defined\n    at Object.<anonymous>.router.post (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/route/mountain-router.js:50:3)\n    at requestParser.parse.then.request (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/lib/router.js:59:14)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-08T01:15:09.292Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T01:15:09.301Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T01:15:09.302Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/lib/request-parser.js:34:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-08T01:15:09.302Z"}
{"level":"info","message":"Adding an POST url and callback","timestamp":"2017-12-08T01:17:34.579Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T01:17:34.579Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}cov_q0sdvsm27.s[28]++;\n  console.log(request.body);\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[29]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[30]++;\n  console.log(mountain); /* istanbul ignore next */cov_q0sdvsm27.s[31]++;\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[32]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[33]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T01:17:34.579Z"}
{"level":"info","message":"Adding an GET url and callback","timestamp":"2017-12-08T01:17:34.579Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T01:17:34.579Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[5]++;cov_q0sdvsm27.s[35]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;\n    let oneMountain; /* istanbul ignore next */cov_q0sdvsm27.s[36]++;\n    for (let mountain of mountains) {/* istanbul ignore next */cov_q0sdvsm27.s[37]++;\n      if (request.url.query.id === mountain.id)\n        {/* istanbul ignore next */cov_q0sdvsm27.b[5][0]++;cov_q0sdvsm27.s[38]++;oneMountain = mountain;} else /* istanbul ignore next */{cov_q0sdvsm27.b[5][1]++;}cov_q0sdvsm27.s[39]++;\n      break;\n    } /* istanbul ignore next */cov_q0sdvsm27.s[40]++;\n    if (!request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[6][0]++;cov_q0sdvsm27.s[41]++;\n      sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[42]++;\n      return;\n    } else /* istanbul ignore next */{cov_q0sdvsm27.b[6][1]++;}\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}cov_q0sdvsm27.s[43]++;\n  sendJSON(response, 200, mountains);\n}","timestamp":"2017-12-08T01:17:34.579Z"}
{"level":"info","message":"Adding an DELETE url and callback","timestamp":"2017-12-08T01:17:34.580Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T01:17:34.580Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[6]++;cov_q0sdvsm27.s[45]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[7][0]++;\n    let oneMountain; /* istanbul ignore next */cov_q0sdvsm27.s[46]++;\n    for (let mountain of mountains) {/* istanbul ignore next */cov_q0sdvsm27.s[47]++;\n      if (request.url.query.id === mountain.id)\n        {/* istanbul ignore next */cov_q0sdvsm27.b[8][0]++;cov_q0sdvsm27.s[48]++;oneMountain = mountain.id;} else /* istanbul ignore next */{cov_q0sdvsm27.b[8][1]++;}cov_q0sdvsm27.s[49]++;\n      break;\n    } /* istanbul ignore next */cov_q0sdvsm27.s[50]++;\n    if (!request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[9][0]++;cov_q0sdvsm27.s[51]++;\n      sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[52]++;\n      logger.log('info', `Deletion requested from database, but ${request.url.query.id} not found.`); /* istanbul ignore next */cov_q0sdvsm27.s[53]++;\n      return;\n    } else /* istanbul ignore next */{cov_q0sdvsm27.b[9][1]++;}\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[7][1]++;}cov_q0sdvsm27.s[54]++;\n  sendStatus(response, 204, 'Deleted from database.'); /* istanbul ignore next */cov_q0sdvsm27.s[55]++;\n  logger.log('info', `User deleted ${request.url.query.id} from database.`);\n}","timestamp":"2017-12-08T01:17:34.580Z"}
{"level":"info","message":"Server is online at port 3000","timestamp":"2017-12-08T01:17:34.645Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T01:17:34.697Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:17:34.700Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}cov_q0sdvsm27.s[28]++;\n  console.log(request.body);\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[29]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[30]++;\n  console.log(mountain); /* istanbul ignore next */cov_q0sdvsm27.s[31]++;\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[32]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[33]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T01:17:34.700Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T01:17:34.701Z"}
{"message":"storage is not defined","stack":"ReferenceError: storage is not defined\n    at Object.<anonymous>.router.post (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/route/mountain-router.js:51:3)\n    at requestParser.parse.then.request (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/lib/router.js:59:14)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-08T01:17:34.701Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T01:17:34.708Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T01:17:34.709Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/lib/request-parser.js:34:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-08T01:17:34.709Z"}
{"level":"info","message":"Adding an POST url and callback","timestamp":"2017-12-08T01:18:29.039Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T01:18:29.040Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[30]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[31]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T01:18:29.040Z"}
{"level":"info","message":"Adding an GET url and callback","timestamp":"2017-12-08T01:18:29.040Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T01:18:29.040Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[5]++;cov_q0sdvsm27.s[33]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;\n    let oneMountain; /* istanbul ignore next */cov_q0sdvsm27.s[34]++;\n    for (let mountain of mountains) {/* istanbul ignore next */cov_q0sdvsm27.s[35]++;\n      if (request.url.query.id === mountain.id)\n        {/* istanbul ignore next */cov_q0sdvsm27.b[5][0]++;cov_q0sdvsm27.s[36]++;oneMountain = mountain;} else /* istanbul ignore next */{cov_q0sdvsm27.b[5][1]++;}cov_q0sdvsm27.s[37]++;\n      break;\n    } /* istanbul ignore next */cov_q0sdvsm27.s[38]++;\n    if (!request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[6][0]++;cov_q0sdvsm27.s[39]++;\n      sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[40]++;\n      return;\n    } else /* istanbul ignore next */{cov_q0sdvsm27.b[6][1]++;}\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}cov_q0sdvsm27.s[41]++;\n  sendJSON(response, 200, mountains);\n}","timestamp":"2017-12-08T01:18:29.040Z"}
{"level":"info","message":"Adding an DELETE url and callback","timestamp":"2017-12-08T01:18:29.040Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T01:18:29.040Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[6]++;cov_q0sdvsm27.s[43]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[7][0]++;\n    let oneMountain; /* istanbul ignore next */cov_q0sdvsm27.s[44]++;\n    for (let mountain of mountains) {/* istanbul ignore next */cov_q0sdvsm27.s[45]++;\n      if (request.url.query.id === mountain.id)\n        {/* istanbul ignore next */cov_q0sdvsm27.b[8][0]++;cov_q0sdvsm27.s[46]++;oneMountain = mountain.id;} else /* istanbul ignore next */{cov_q0sdvsm27.b[8][1]++;}cov_q0sdvsm27.s[47]++;\n      break;\n    } /* istanbul ignore next */cov_q0sdvsm27.s[48]++;\n    if (!request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[9][0]++;cov_q0sdvsm27.s[49]++;\n      sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[50]++;\n      logger.log('info', `Deletion requested from database, but ${request.url.query.id} not found.`); /* istanbul ignore next */cov_q0sdvsm27.s[51]++;\n      return;\n    } else /* istanbul ignore next */{cov_q0sdvsm27.b[9][1]++;}\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[7][1]++;}cov_q0sdvsm27.s[52]++;\n  sendStatus(response, 204, 'Deleted from database.'); /* istanbul ignore next */cov_q0sdvsm27.s[53]++;\n  logger.log('info', `User deleted ${request.url.query.id} from database.`);\n}","timestamp":"2017-12-08T01:18:29.040Z"}
{"level":"info","message":"Server is online at port 3000","timestamp":"2017-12-08T01:18:29.086Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T01:18:29.101Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:18:29.104Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[30]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[31]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T01:18:29.104Z"}
{"level":"info","message":"Responding with a 500 code due to Error: __STORAGE_ERROR__.","timestamp":"2017-12-08T01:18:29.105Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T01:18:29.112Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T01:18:29.113Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/lib/request-parser.js:34:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-08T01:18:29.113Z"}
{"level":"info","message":"Adding an POST url and callback","timestamp":"2017-12-08T01:20:12.454Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T01:20:12.455Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[30]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[31]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T01:20:12.455Z"}
{"level":"info","message":"Adding an GET url and callback","timestamp":"2017-12-08T01:20:12.455Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T01:20:12.455Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[5]++;cov_q0sdvsm27.s[33]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;\n    let oneMountain; /* istanbul ignore next */cov_q0sdvsm27.s[34]++;\n    for (let mountain of mountains) {/* istanbul ignore next */cov_q0sdvsm27.s[35]++;\n      if (request.url.query.id === mountain.id)\n        {/* istanbul ignore next */cov_q0sdvsm27.b[5][0]++;cov_q0sdvsm27.s[36]++;oneMountain = mountain;} else /* istanbul ignore next */{cov_q0sdvsm27.b[5][1]++;}cov_q0sdvsm27.s[37]++;\n      break;\n    } /* istanbul ignore next */cov_q0sdvsm27.s[38]++;\n    if (!request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[6][0]++;cov_q0sdvsm27.s[39]++;\n      sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[40]++;\n      return;\n    } else /* istanbul ignore next */{cov_q0sdvsm27.b[6][1]++;}\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}cov_q0sdvsm27.s[41]++;\n  sendJSON(response, 200, mountains);\n}","timestamp":"2017-12-08T01:20:12.455Z"}
{"level":"info","message":"Adding an DELETE url and callback","timestamp":"2017-12-08T01:20:12.455Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T01:20:12.455Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[6]++;cov_q0sdvsm27.s[43]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[7][0]++;\n    let oneMountain; /* istanbul ignore next */cov_q0sdvsm27.s[44]++;\n    for (let mountain of mountains) {/* istanbul ignore next */cov_q0sdvsm27.s[45]++;\n      if (request.url.query.id === mountain.id)\n        {/* istanbul ignore next */cov_q0sdvsm27.b[8][0]++;cov_q0sdvsm27.s[46]++;oneMountain = mountain.id;} else /* istanbul ignore next */{cov_q0sdvsm27.b[8][1]++;}cov_q0sdvsm27.s[47]++;\n      break;\n    } /* istanbul ignore next */cov_q0sdvsm27.s[48]++;\n    if (!request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[9][0]++;cov_q0sdvsm27.s[49]++;\n      sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[50]++;\n      logger.log('info', `Deletion requested from database, but ${request.url.query.id} not found.`); /* istanbul ignore next */cov_q0sdvsm27.s[51]++;\n      return;\n    } else /* istanbul ignore next */{cov_q0sdvsm27.b[9][1]++;}\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[7][1]++;}cov_q0sdvsm27.s[52]++;\n  sendStatus(response, 204, 'Deleted from database.'); /* istanbul ignore next */cov_q0sdvsm27.s[53]++;\n  logger.log('info', `User deleted ${request.url.query.id} from database.`);\n}","timestamp":"2017-12-08T01:20:12.455Z"}
{"level":"info","message":"Server is online at port 3000","timestamp":"2017-12-08T01:20:12.522Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T01:20:12.574Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:20:12.577Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[30]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[31]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T01:20:12.577Z"}
{"level":"info","message":"Responding with a 200 code and the following data.","timestamp":"2017-12-08T01:20:12.581Z"}
{"id":"f0553910-dbb5-11e7-abe1-19f1b4d2fe42","name":"Mt. Evans","location":"Colorado","elevation":"14,235","level":"info","message":"","timestamp":"2017-12-08T01:20:12.581Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T01:20:12.590Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T01:20:12.591Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/lib/request-parser.js:34:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-08T01:20:12.591Z"}
{"level":"info","message":"Adding an POST url and callback","timestamp":"2017-12-08T01:20:38.975Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T01:20:38.976Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[30]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[31]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T01:20:38.976Z"}
{"level":"info","message":"Adding an GET url and callback","timestamp":"2017-12-08T01:20:38.976Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T01:20:38.976Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[5]++;cov_q0sdvsm27.s[33]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;\n    let oneMountain; /* istanbul ignore next */cov_q0sdvsm27.s[34]++;\n    for (let mountain of mountains) {/* istanbul ignore next */cov_q0sdvsm27.s[35]++;\n      if (request.url.query.id === mountain.id)\n        {/* istanbul ignore next */cov_q0sdvsm27.b[5][0]++;cov_q0sdvsm27.s[36]++;oneMountain = mountain;} else /* istanbul ignore next */{cov_q0sdvsm27.b[5][1]++;}cov_q0sdvsm27.s[37]++;\n      break;\n    } /* istanbul ignore next */cov_q0sdvsm27.s[38]++;\n    if (!request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[6][0]++;cov_q0sdvsm27.s[39]++;\n      sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[40]++;\n      return;\n    } else /* istanbul ignore next */{cov_q0sdvsm27.b[6][1]++;}\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}cov_q0sdvsm27.s[41]++;\n  sendJSON(response, 200, mountains);\n}","timestamp":"2017-12-08T01:20:38.976Z"}
{"level":"info","message":"Adding an DELETE url and callback","timestamp":"2017-12-08T01:20:38.976Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T01:20:38.976Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[6]++;cov_q0sdvsm27.s[43]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[7][0]++;\n    let oneMountain; /* istanbul ignore next */cov_q0sdvsm27.s[44]++;\n    for (let mountain of mountains) {/* istanbul ignore next */cov_q0sdvsm27.s[45]++;\n      if (request.url.query.id === mountain.id)\n        {/* istanbul ignore next */cov_q0sdvsm27.b[8][0]++;cov_q0sdvsm27.s[46]++;oneMountain = mountain.id;} else /* istanbul ignore next */{cov_q0sdvsm27.b[8][1]++;}cov_q0sdvsm27.s[47]++;\n      break;\n    } /* istanbul ignore next */cov_q0sdvsm27.s[48]++;\n    if (!request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[9][0]++;cov_q0sdvsm27.s[49]++;\n      sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[50]++;\n      logger.log('info', `Deletion requested from database, but ${request.url.query.id} not found.`); /* istanbul ignore next */cov_q0sdvsm27.s[51]++;\n      return;\n    } else /* istanbul ignore next */{cov_q0sdvsm27.b[9][1]++;}\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[7][1]++;}cov_q0sdvsm27.s[52]++;\n  sendStatus(response, 204, 'Deleted from database.'); /* istanbul ignore next */cov_q0sdvsm27.s[53]++;\n  logger.log('info', `User deleted ${request.url.query.id} from database.`);\n}","timestamp":"2017-12-08T01:20:38.976Z"}
{"level":"info","message":"Server is online at port 3000","timestamp":"2017-12-08T01:20:39.043Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T01:20:39.095Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:20:39.098Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[30]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[31]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T01:20:39.098Z"}
{"level":"info","message":"Responding with a 200 code and the following data.","timestamp":"2017-12-08T01:20:39.101Z"}
{"id":"002401a0-dbb6-11e7-b24d-8bebdb705238","name":"Mt. Evans","location":"Colorado","elevation":"14,235","level":"info","message":"","timestamp":"2017-12-08T01:20:39.101Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T01:20:39.110Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:20:39.110Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[5]++;cov_q0sdvsm27.s[33]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;\n    let oneMountain; /* istanbul ignore next */cov_q0sdvsm27.s[34]++;\n    for (let mountain of mountains) {/* istanbul ignore next */cov_q0sdvsm27.s[35]++;\n      if (request.url.query.id === mountain.id)\n        {/* istanbul ignore next */cov_q0sdvsm27.b[5][0]++;cov_q0sdvsm27.s[36]++;oneMountain = mountain;} else /* istanbul ignore next */{cov_q0sdvsm27.b[5][1]++;}cov_q0sdvsm27.s[37]++;\n      break;\n    } /* istanbul ignore next */cov_q0sdvsm27.s[38]++;\n    if (!request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[6][0]++;cov_q0sdvsm27.s[39]++;\n      sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[40]++;\n      return;\n    } else /* istanbul ignore next */{cov_q0sdvsm27.b[6][1]++;}\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}cov_q0sdvsm27.s[41]++;\n  sendJSON(response, 200, mountains);\n}","timestamp":"2017-12-08T01:20:39.110Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T01:20:39.111Z"}
{"message":"mountains is not defined","stack":"ReferenceError: mountains is not defined\n    at Object.<anonymous>.router.get (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/route/mountain-router.js:73:27)\n    at requestParser.parse.then.request (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/lib/router.js:59:14)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-08T01:20:39.111Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T01:20:39.114Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T01:20:39.115Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/lib/request-parser.js:34:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-08T01:20:39.115Z"}
{"level":"info","message":"Adding an POST url and callback","timestamp":"2017-12-08T01:22:28.820Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T01:22:28.821Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[30]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[31]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T01:22:28.821Z"}
{"level":"info","message":"Adding an GET url and callback","timestamp":"2017-12-08T01:22:28.821Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T01:22:28.821Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[5]++;cov_q0sdvsm27.s[33]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;\n    let oneMountain; /* istanbul ignore next */cov_q0sdvsm27.s[34]++;\n    for (let mountain of mountains) {/* istanbul ignore next */cov_q0sdvsm27.s[35]++;\n      if (request.url.query.id === mountain.id)\n        {/* istanbul ignore next */cov_q0sdvsm27.b[5][0]++;cov_q0sdvsm27.s[36]++;oneMountain = mountain;} else /* istanbul ignore next */{cov_q0sdvsm27.b[5][1]++;}cov_q0sdvsm27.s[37]++;\n      break;\n    } /* istanbul ignore next */cov_q0sdvsm27.s[38]++;\n    if (!request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[6][0]++;cov_q0sdvsm27.s[39]++;\n      sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[40]++;\n      return;\n    } else /* istanbul ignore next */{cov_q0sdvsm27.b[6][1]++;}\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}cov_q0sdvsm27.s[41]++;\n  sendJSON(response, 200, mountains);\n}","timestamp":"2017-12-08T01:22:28.821Z"}
{"level":"info","message":"Adding an DELETE url and callback","timestamp":"2017-12-08T01:22:28.821Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T01:22:28.821Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[6]++;cov_q0sdvsm27.s[43]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[7][0]++;\n    let oneMountain; /* istanbul ignore next */cov_q0sdvsm27.s[44]++;\n    for (let mountain of mountains) {/* istanbul ignore next */cov_q0sdvsm27.s[45]++;\n      if (request.url.query.id === mountain.id)\n        {/* istanbul ignore next */cov_q0sdvsm27.b[8][0]++;cov_q0sdvsm27.s[46]++;oneMountain = mountain.id;} else /* istanbul ignore next */{cov_q0sdvsm27.b[8][1]++;}cov_q0sdvsm27.s[47]++;\n      break;\n    } /* istanbul ignore next */cov_q0sdvsm27.s[48]++;\n    if (!request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[9][0]++;cov_q0sdvsm27.s[49]++;\n      sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[50]++;\n      logger.log('info', `Deletion requested from database, but ${request.url.query.id} not found.`); /* istanbul ignore next */cov_q0sdvsm27.s[51]++;\n      return;\n    } else /* istanbul ignore next */{cov_q0sdvsm27.b[9][1]++;}\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[7][1]++;}cov_q0sdvsm27.s[52]++;\n  sendStatus(response, 204, 'Deleted from database.'); /* istanbul ignore next */cov_q0sdvsm27.s[53]++;\n  logger.log('info', `User deleted ${request.url.query.id} from database.`);\n}","timestamp":"2017-12-08T01:22:28.821Z"}
{"level":"info","message":"Server is online at port 3000","timestamp":"2017-12-08T01:22:28.885Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T01:22:28.939Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:22:28.942Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[30]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[31]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T01:22:28.942Z"}
{"level":"info","message":"Responding with a 200 code and the following data.","timestamp":"2017-12-08T01:22:28.945Z"}
{"id":"419cdee0-dbb6-11e7-99f5-ab3a0b11ea33","name":"Mt. Evans","location":"Colorado","elevation":"14,235","level":"info","message":"","timestamp":"2017-12-08T01:22:28.945Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T01:22:28.955Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:22:28.956Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[5]++;cov_q0sdvsm27.s[33]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;\n    let oneMountain; /* istanbul ignore next */cov_q0sdvsm27.s[34]++;\n    for (let mountain of mountains) {/* istanbul ignore next */cov_q0sdvsm27.s[35]++;\n      if (request.url.query.id === mountain.id)\n        {/* istanbul ignore next */cov_q0sdvsm27.b[5][0]++;cov_q0sdvsm27.s[36]++;oneMountain = mountain;} else /* istanbul ignore next */{cov_q0sdvsm27.b[5][1]++;}cov_q0sdvsm27.s[37]++;\n      break;\n    } /* istanbul ignore next */cov_q0sdvsm27.s[38]++;\n    if (!request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[6][0]++;cov_q0sdvsm27.s[39]++;\n      sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[40]++;\n      return;\n    } else /* istanbul ignore next */{cov_q0sdvsm27.b[6][1]++;}\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}cov_q0sdvsm27.s[41]++;\n  sendJSON(response, 200, mountains);\n}","timestamp":"2017-12-08T01:22:28.956Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T01:22:28.956Z"}
{"message":"mountains is not defined","stack":"ReferenceError: mountains is not defined\n    at Object.<anonymous>.router.get (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/route/mountain-router.js:63:26)\n    at requestParser.parse.then.request (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/lib/router.js:59:14)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-08T01:22:28.956Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T01:22:28.959Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T01:22:28.960Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/lib/request-parser.js:34:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-08T01:22:28.960Z"}
{"level":"info","message":"Adding an POST url and callback","timestamp":"2017-12-08T01:25:08.769Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T01:25:08.770Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[30]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[31]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T01:25:08.770Z"}
{"level":"info","message":"Adding an GET url and callback","timestamp":"2017-12-08T01:25:08.770Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T01:25:08.770Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[5]++;cov_q0sdvsm27.s[33]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;\n    let oneMountain; /* istanbul ignore next */cov_q0sdvsm27.s[34]++;\n    for (let mountain of mountains) {/* istanbul ignore next */cov_q0sdvsm27.s[35]++;\n      if (request.url.query.id === mountain.id)\n        {/* istanbul ignore next */cov_q0sdvsm27.b[5][0]++;cov_q0sdvsm27.s[36]++;oneMountain = mountain;} else /* istanbul ignore next */{cov_q0sdvsm27.b[5][1]++;}cov_q0sdvsm27.s[37]++;\n      break;\n    } /* istanbul ignore next */cov_q0sdvsm27.s[38]++;\n    if (!request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[6][0]++;cov_q0sdvsm27.s[39]++;\n      sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[40]++;\n      return;\n    } else /* istanbul ignore next */{cov_q0sdvsm27.b[6][1]++;}\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}cov_q0sdvsm27.s[41]++;\n  sendJSON(response, 200, mountains);\n}","timestamp":"2017-12-08T01:25:08.770Z"}
{"level":"info","message":"Adding an DELETE url and callback","timestamp":"2017-12-08T01:25:08.770Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T01:25:08.770Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[6]++;cov_q0sdvsm27.s[43]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[7][0]++;\n    let oneMountain; /* istanbul ignore next */cov_q0sdvsm27.s[44]++;\n    for (let mountain of mountains) {/* istanbul ignore next */cov_q0sdvsm27.s[45]++;\n      if (request.url.query.id === mountain.id)\n        {/* istanbul ignore next */cov_q0sdvsm27.b[8][0]++;cov_q0sdvsm27.s[46]++;oneMountain = mountain.id;} else /* istanbul ignore next */{cov_q0sdvsm27.b[8][1]++;}cov_q0sdvsm27.s[47]++;\n      break;\n    } /* istanbul ignore next */cov_q0sdvsm27.s[48]++;\n    if (!request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[9][0]++;cov_q0sdvsm27.s[49]++;\n      sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[50]++;\n      logger.log('info', `Deletion requested from database, but ${request.url.query.id} not found.`); /* istanbul ignore next */cov_q0sdvsm27.s[51]++;\n      return;\n    } else /* istanbul ignore next */{cov_q0sdvsm27.b[9][1]++;}\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[7][1]++;}cov_q0sdvsm27.s[52]++;\n  sendStatus(response, 204, 'Deleted from database.'); /* istanbul ignore next */cov_q0sdvsm27.s[53]++;\n  logger.log('info', `User deleted ${request.url.query.id} from database.`);\n}","timestamp":"2017-12-08T01:25:08.770Z"}
{"level":"info","message":"Server is online at port 3000","timestamp":"2017-12-08T01:25:08.813Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T01:25:08.863Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:25:08.866Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[30]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[31]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T01:25:08.866Z"}
{"level":"info","message":"Responding with a 200 code and the following data.","timestamp":"2017-12-08T01:25:08.870Z"}
{"id":"a0ef7d30-dbb6-11e7-878a-3720d47fea00","name":"Mt. Evans","location":"Colorado","elevation":"14,235","level":"info","message":"","timestamp":"2017-12-08T01:25:08.870Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T01:25:08.879Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:25:08.880Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[5]++;cov_q0sdvsm27.s[33]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;\n    let oneMountain; /* istanbul ignore next */cov_q0sdvsm27.s[34]++;\n    for (let mountain of mountains) {/* istanbul ignore next */cov_q0sdvsm27.s[35]++;\n      if (request.url.query.id === mountain.id)\n        {/* istanbul ignore next */cov_q0sdvsm27.b[5][0]++;cov_q0sdvsm27.s[36]++;oneMountain = mountain;} else /* istanbul ignore next */{cov_q0sdvsm27.b[5][1]++;}cov_q0sdvsm27.s[37]++;\n      break;\n    } /* istanbul ignore next */cov_q0sdvsm27.s[38]++;\n    if (!request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[6][0]++;cov_q0sdvsm27.s[39]++;\n      sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[40]++;\n      return;\n    } else /* istanbul ignore next */{cov_q0sdvsm27.b[6][1]++;}\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}cov_q0sdvsm27.s[41]++;\n  sendJSON(response, 200, mountains);\n}","timestamp":"2017-12-08T01:25:08.880Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T01:25:08.880Z"}
{"message":"mountains is not defined","stack":"ReferenceError: mountains is not defined\n    at Object.<anonymous>.router.get (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/route/mountain-router.js:63:26)\n    at requestParser.parse.then.request (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/lib/router.js:59:14)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-08T01:25:08.880Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T01:25:08.884Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T01:25:08.884Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/lib/request-parser.js:34:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-08T01:25:08.884Z"}
{"level":"info","message":"Adding an POST url and callback","timestamp":"2017-12-08T01:25:30.528Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T01:25:30.528Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[30]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[31]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T01:25:30.528Z"}
{"level":"info","message":"Adding an GET url and callback","timestamp":"2017-12-08T01:25:30.529Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T01:25:30.529Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[5]++;cov_q0sdvsm27.s[33]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;\n    let oneMountain; /* istanbul ignore next */cov_q0sdvsm27.s[34]++;\n    for (let mountain of mountains) {/* istanbul ignore next */cov_q0sdvsm27.s[35]++;\n      if (request.url.query.id === mountain.id)\n        {/* istanbul ignore next */cov_q0sdvsm27.b[5][0]++;cov_q0sdvsm27.s[36]++;oneMountain = mountain;} else /* istanbul ignore next */{cov_q0sdvsm27.b[5][1]++;}cov_q0sdvsm27.s[37]++;\n      break;\n    } /* istanbul ignore next */cov_q0sdvsm27.s[38]++;\n    if (!request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[6][0]++;cov_q0sdvsm27.s[39]++;\n      sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[40]++;\n      return;\n    } else /* istanbul ignore next */{cov_q0sdvsm27.b[6][1]++;}\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}cov_q0sdvsm27.s[41]++;\n  sendJSON(response, 200, mountains);\n}","timestamp":"2017-12-08T01:25:30.529Z"}
{"level":"info","message":"Adding an DELETE url and callback","timestamp":"2017-12-08T01:25:30.529Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T01:25:30.529Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[6]++;cov_q0sdvsm27.s[43]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[7][0]++;\n    let oneMountain; /* istanbul ignore next */cov_q0sdvsm27.s[44]++;\n    for (let mountain of mountains) {/* istanbul ignore next */cov_q0sdvsm27.s[45]++;\n      if (request.url.query.id === mountain.id)\n        {/* istanbul ignore next */cov_q0sdvsm27.b[8][0]++;cov_q0sdvsm27.s[46]++;oneMountain = mountain.id;} else /* istanbul ignore next */{cov_q0sdvsm27.b[8][1]++;}cov_q0sdvsm27.s[47]++;\n      break;\n    } /* istanbul ignore next */cov_q0sdvsm27.s[48]++;\n    if (!request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[9][0]++;cov_q0sdvsm27.s[49]++;\n      sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[50]++;\n      logger.log('info', `Deletion requested from database, but ${request.url.query.id} not found.`); /* istanbul ignore next */cov_q0sdvsm27.s[51]++;\n      return;\n    } else /* istanbul ignore next */{cov_q0sdvsm27.b[9][1]++;}\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[7][1]++;}cov_q0sdvsm27.s[52]++;\n  sendStatus(response, 204, 'Deleted from database.'); /* istanbul ignore next */cov_q0sdvsm27.s[53]++;\n  logger.log('info', `User deleted ${request.url.query.id} from database.`);\n}","timestamp":"2017-12-08T01:25:30.529Z"}
{"level":"info","message":"Server is online at port 3000","timestamp":"2017-12-08T01:25:30.574Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T01:25:30.626Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:25:30.627Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[30]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[31]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T01:25:30.628Z"}
{"level":"info","message":"Responding with a 200 code and the following data.","timestamp":"2017-12-08T01:25:30.631Z"}
{"id":"ade7f440-dbb6-11e7-ab49-95999f71494f","name":"Mt. Evans","location":"Colorado","elevation":"14,235","level":"info","message":"","timestamp":"2017-12-08T01:25:30.631Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T01:25:30.640Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:25:30.640Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[5]++;cov_q0sdvsm27.s[33]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;\n    let oneMountain; /* istanbul ignore next */cov_q0sdvsm27.s[34]++;\n    for (let mountain of mountains) {/* istanbul ignore next */cov_q0sdvsm27.s[35]++;\n      if (request.url.query.id === mountain.id)\n        {/* istanbul ignore next */cov_q0sdvsm27.b[5][0]++;cov_q0sdvsm27.s[36]++;oneMountain = mountain;} else /* istanbul ignore next */{cov_q0sdvsm27.b[5][1]++;}cov_q0sdvsm27.s[37]++;\n      break;\n    } /* istanbul ignore next */cov_q0sdvsm27.s[38]++;\n    if (!request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[6][0]++;cov_q0sdvsm27.s[39]++;\n      sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[40]++;\n      return;\n    } else /* istanbul ignore next */{cov_q0sdvsm27.b[6][1]++;}\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}cov_q0sdvsm27.s[41]++;\n  sendJSON(response, 200, mountains);\n}","timestamp":"2017-12-08T01:25:30.640Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T01:25:30.641Z"}
{"message":"mountains is not defined","stack":"ReferenceError: mountains is not defined\n    at Object.<anonymous>.router.get (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/route/mountain-router.js:63:26)\n    at requestParser.parse.then.request (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/lib/router.js:55:14)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-08T01:25:30.641Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T01:25:30.644Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T01:25:30.645Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/lib/request-parser.js:34:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-08T01:25:30.645Z"}
{"level":"info","message":"Adding an POST url and callback","timestamp":"2017-12-08T01:26:07.495Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T01:26:07.496Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[30]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[31]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T01:26:07.496Z"}
{"level":"info","message":"Adding an GET url and callback","timestamp":"2017-12-08T01:26:07.496Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T01:26:07.496Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[5]++;cov_q0sdvsm27.s[33]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;\n    let oneMountain; /* istanbul ignore next */cov_q0sdvsm27.s[34]++;\n    for (let mountain of mountains) {/* istanbul ignore next */cov_q0sdvsm27.s[35]++;\n      if (request.url.query.id === mountain.id)\n        {/* istanbul ignore next */cov_q0sdvsm27.b[5][0]++;cov_q0sdvsm27.s[36]++;oneMountain = mountain;} else /* istanbul ignore next */{cov_q0sdvsm27.b[5][1]++;}cov_q0sdvsm27.s[37]++;\n      break;\n    } /* istanbul ignore next */cov_q0sdvsm27.s[38]++;\n    if (!request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[6][0]++;cov_q0sdvsm27.s[39]++;\n      sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[40]++;\n      return;\n    } else /* istanbul ignore next */{cov_q0sdvsm27.b[6][1]++;}\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}cov_q0sdvsm27.s[41]++;\n  sendJSON(response, 200, mountains);\n}","timestamp":"2017-12-08T01:26:07.496Z"}
{"level":"info","message":"Adding an DELETE url and callback","timestamp":"2017-12-08T01:26:07.496Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T01:26:07.496Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[6]++;cov_q0sdvsm27.s[43]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[7][0]++;\n    let oneMountain; /* istanbul ignore next */cov_q0sdvsm27.s[44]++;\n    for (let mountain of mountains) {/* istanbul ignore next */cov_q0sdvsm27.s[45]++;\n      if (request.url.query.id === mountain.id)\n        {/* istanbul ignore next */cov_q0sdvsm27.b[8][0]++;cov_q0sdvsm27.s[46]++;oneMountain = mountain.id;} else /* istanbul ignore next */{cov_q0sdvsm27.b[8][1]++;}cov_q0sdvsm27.s[47]++;\n      break;\n    } /* istanbul ignore next */cov_q0sdvsm27.s[48]++;\n    if (!request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[9][0]++;cov_q0sdvsm27.s[49]++;\n      sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[50]++;\n      logger.log('info', `Deletion requested from database, but ${request.url.query.id} not found.`); /* istanbul ignore next */cov_q0sdvsm27.s[51]++;\n      return;\n    } else /* istanbul ignore next */{cov_q0sdvsm27.b[9][1]++;}\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[7][1]++;}cov_q0sdvsm27.s[52]++;\n  sendStatus(response, 204, 'Deleted from database.'); /* istanbul ignore next */cov_q0sdvsm27.s[53]++;\n  logger.log('info', `User deleted ${request.url.query.id} from database.`);\n}","timestamp":"2017-12-08T01:26:07.496Z"}
{"level":"info","message":"Server is online at port 3000","timestamp":"2017-12-08T01:26:07.540Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T01:26:07.592Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:26:07.593Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[30]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[31]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T01:26:07.593Z"}
{"level":"info","message":"Responding with a 200 code and the following data.","timestamp":"2017-12-08T01:26:07.596Z"}
{"id":"c3f05d90-dbb6-11e7-9c66-d154f6406ba7","name":"Mt. Evans","location":"Colorado","elevation":"14,235","level":"info","message":"","timestamp":"2017-12-08T01:26:07.596Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T01:26:07.605Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:26:07.606Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[5]++;cov_q0sdvsm27.s[33]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;\n    let oneMountain; /* istanbul ignore next */cov_q0sdvsm27.s[34]++;\n    for (let mountain of mountains) {/* istanbul ignore next */cov_q0sdvsm27.s[35]++;\n      if (request.url.query.id === mountain.id)\n        {/* istanbul ignore next */cov_q0sdvsm27.b[5][0]++;cov_q0sdvsm27.s[36]++;oneMountain = mountain;} else /* istanbul ignore next */{cov_q0sdvsm27.b[5][1]++;}cov_q0sdvsm27.s[37]++;\n      break;\n    } /* istanbul ignore next */cov_q0sdvsm27.s[38]++;\n    if (!request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[6][0]++;cov_q0sdvsm27.s[39]++;\n      sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[40]++;\n      return;\n    } else /* istanbul ignore next */{cov_q0sdvsm27.b[6][1]++;}\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}cov_q0sdvsm27.s[41]++;\n  sendJSON(response, 200, mountains);\n}","timestamp":"2017-12-08T01:26:07.606Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T01:26:07.607Z"}
{"message":"mountains is not defined","stack":"ReferenceError: mountains is not defined\n    at Object.<anonymous>.router.get (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/route/mountain-router.js:63:26)\n    at requestParser.parse.then.request (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/lib/router.js:55:14)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-08T01:26:07.607Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T01:26:07.610Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T01:26:07.611Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/lib/request-parser.js:34:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-08T01:26:07.611Z"}
{"level":"info","message":"Adding an POST url and callback","timestamp":"2017-12-08T01:26:26.441Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T01:26:26.441Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[30]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[31]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T01:26:26.442Z"}
{"level":"info","message":"Adding an GET url and callback","timestamp":"2017-12-08T01:26:26.442Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T01:26:26.442Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[5]++;cov_q0sdvsm27.s[33]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;\n    let oneMountain; /* istanbul ignore next */cov_q0sdvsm27.s[34]++;\n    for (let mountain of mountains) {/* istanbul ignore next */cov_q0sdvsm27.s[35]++;\n      if (request.url.query.id === mountain.id)\n        {/* istanbul ignore next */cov_q0sdvsm27.b[5][0]++;cov_q0sdvsm27.s[36]++;oneMountain = mountain;} else /* istanbul ignore next */{cov_q0sdvsm27.b[5][1]++;}cov_q0sdvsm27.s[37]++;\n      break;\n    } /* istanbul ignore next */cov_q0sdvsm27.s[38]++;\n    if (!request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[6][0]++;cov_q0sdvsm27.s[39]++;\n      sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[40]++;\n      return;\n    } else /* istanbul ignore next */{cov_q0sdvsm27.b[6][1]++;}\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}cov_q0sdvsm27.s[41]++;\n  sendJSON(response, 200, mountains);\n}","timestamp":"2017-12-08T01:26:26.442Z"}
{"level":"info","message":"Adding an DELETE url and callback","timestamp":"2017-12-08T01:26:26.442Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T01:26:26.442Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[6]++;cov_q0sdvsm27.s[43]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[7][0]++;\n    let oneMountain; /* istanbul ignore next */cov_q0sdvsm27.s[44]++;\n    for (let mountain of mountains) {/* istanbul ignore next */cov_q0sdvsm27.s[45]++;\n      if (request.url.query.id === mountain.id)\n        {/* istanbul ignore next */cov_q0sdvsm27.b[8][0]++;cov_q0sdvsm27.s[46]++;oneMountain = mountain.id;} else /* istanbul ignore next */{cov_q0sdvsm27.b[8][1]++;}cov_q0sdvsm27.s[47]++;\n      break;\n    } /* istanbul ignore next */cov_q0sdvsm27.s[48]++;\n    if (!request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[9][0]++;cov_q0sdvsm27.s[49]++;\n      sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[50]++;\n      logger.log('info', `Deletion requested from database, but ${request.url.query.id} not found.`); /* istanbul ignore next */cov_q0sdvsm27.s[51]++;\n      return;\n    } else /* istanbul ignore next */{cov_q0sdvsm27.b[9][1]++;}\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[7][1]++;}cov_q0sdvsm27.s[52]++;\n  sendStatus(response, 204, 'Deleted from database.'); /* istanbul ignore next */cov_q0sdvsm27.s[53]++;\n  logger.log('info', `User deleted ${request.url.query.id} from database.`);\n}","timestamp":"2017-12-08T01:26:26.442Z"}
{"level":"info","message":"Server is online at port 3000","timestamp":"2017-12-08T01:26:26.486Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T01:26:26.502Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:26:26.503Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[30]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[31]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T01:26:26.503Z"}
{"level":"info","message":"Responding with a 200 code and the following data.","timestamp":"2017-12-08T01:26:26.506Z"}
{"id":"cf35cd70-dbb6-11e7-8c77-7bbd8379fdf4","name":"Mt. Evans","location":"Colorado","elevation":"14,235","level":"info","message":"","timestamp":"2017-12-08T01:26:26.507Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T01:26:26.519Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:26:26.520Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[5]++;cov_q0sdvsm27.s[33]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;\n    let oneMountain; /* istanbul ignore next */cov_q0sdvsm27.s[34]++;\n    for (let mountain of mountains) {/* istanbul ignore next */cov_q0sdvsm27.s[35]++;\n      if (request.url.query.id === mountain.id)\n        {/* istanbul ignore next */cov_q0sdvsm27.b[5][0]++;cov_q0sdvsm27.s[36]++;oneMountain = mountain;} else /* istanbul ignore next */{cov_q0sdvsm27.b[5][1]++;}cov_q0sdvsm27.s[37]++;\n      break;\n    } /* istanbul ignore next */cov_q0sdvsm27.s[38]++;\n    if (!request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[6][0]++;cov_q0sdvsm27.s[39]++;\n      sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[40]++;\n      return;\n    } else /* istanbul ignore next */{cov_q0sdvsm27.b[6][1]++;}\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}cov_q0sdvsm27.s[41]++;\n  sendJSON(response, 200, mountains);\n}","timestamp":"2017-12-08T01:26:26.520Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T01:26:26.521Z"}
{"message":"mountains is not defined","stack":"ReferenceError: mountains is not defined\n    at Object.<anonymous>.router.get (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/route/mountain-router.js:63:26)\n    at requestParser.parse.then.request (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/lib/router.js:55:14)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-08T01:26:26.521Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T01:26:26.525Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T01:26:26.525Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/lib/request-parser.js:34:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-08T01:26:26.526Z"}
{"level":"info","message":"Adding an POST url and callback","timestamp":"2017-12-08T01:26:47.606Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T01:26:47.607Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[30]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[31]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T01:26:47.607Z"}
{"level":"info","message":"Adding an GET url and callback","timestamp":"2017-12-08T01:26:47.607Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T01:26:47.607Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[5]++;cov_q0sdvsm27.s[33]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;\n    let oneMountain; /* istanbul ignore next */cov_q0sdvsm27.s[34]++;\n    for (let mountain of mountains) {/* istanbul ignore next */cov_q0sdvsm27.s[35]++;\n      if (request.url.query.id === mountain.id)\n        {/* istanbul ignore next */cov_q0sdvsm27.b[5][0]++;cov_q0sdvsm27.s[36]++;oneMountain = mountain;} else /* istanbul ignore next */{cov_q0sdvsm27.b[5][1]++;}cov_q0sdvsm27.s[37]++;\n      break;\n    } /* istanbul ignore next */cov_q0sdvsm27.s[38]++;\n    if (!request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[6][0]++;cov_q0sdvsm27.s[39]++;\n      sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[40]++;\n      return;\n    } else /* istanbul ignore next */{cov_q0sdvsm27.b[6][1]++;}\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}cov_q0sdvsm27.s[41]++;\n  sendJSON(response, 200, mountains);\n}","timestamp":"2017-12-08T01:26:47.607Z"}
{"level":"info","message":"Adding an DELETE url and callback","timestamp":"2017-12-08T01:26:47.607Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T01:26:47.607Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[6]++;cov_q0sdvsm27.s[43]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[7][0]++;\n    let oneMountain; /* istanbul ignore next */cov_q0sdvsm27.s[44]++;\n    for (let mountain of mountains) {/* istanbul ignore next */cov_q0sdvsm27.s[45]++;\n      if (request.url.query.id === mountain.id)\n        {/* istanbul ignore next */cov_q0sdvsm27.b[8][0]++;cov_q0sdvsm27.s[46]++;oneMountain = mountain.id;} else /* istanbul ignore next */{cov_q0sdvsm27.b[8][1]++;}cov_q0sdvsm27.s[47]++;\n      break;\n    } /* istanbul ignore next */cov_q0sdvsm27.s[48]++;\n    if (!request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[9][0]++;cov_q0sdvsm27.s[49]++;\n      sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[50]++;\n      logger.log('info', `Deletion requested from database, but ${request.url.query.id} not found.`); /* istanbul ignore next */cov_q0sdvsm27.s[51]++;\n      return;\n    } else /* istanbul ignore next */{cov_q0sdvsm27.b[9][1]++;}\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[7][1]++;}cov_q0sdvsm27.s[52]++;\n  sendStatus(response, 204, 'Deleted from database.'); /* istanbul ignore next */cov_q0sdvsm27.s[53]++;\n  logger.log('info', `User deleted ${request.url.query.id} from database.`);\n}","timestamp":"2017-12-08T01:26:47.607Z"}
{"level":"info","message":"Server is online at port 3000","timestamp":"2017-12-08T01:26:47.650Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T01:26:47.665Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:26:47.666Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[30]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[31]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T01:26:47.666Z"}
{"level":"info","message":"Responding with a 200 code and the following data.","timestamp":"2017-12-08T01:26:47.670Z"}
{"id":"dbd30520-dbb6-11e7-8550-d592e85df2a8","name":"Mt. Evans","location":"Colorado","elevation":"14,235","level":"info","message":"","timestamp":"2017-12-08T01:26:47.670Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T01:26:47.678Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:26:47.679Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[5]++;cov_q0sdvsm27.s[33]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;\n    let oneMountain; /* istanbul ignore next */cov_q0sdvsm27.s[34]++;\n    for (let mountain of mountains) {/* istanbul ignore next */cov_q0sdvsm27.s[35]++;\n      if (request.url.query.id === mountain.id)\n        {/* istanbul ignore next */cov_q0sdvsm27.b[5][0]++;cov_q0sdvsm27.s[36]++;oneMountain = mountain;} else /* istanbul ignore next */{cov_q0sdvsm27.b[5][1]++;}cov_q0sdvsm27.s[37]++;\n      break;\n    } /* istanbul ignore next */cov_q0sdvsm27.s[38]++;\n    if (!request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[6][0]++;cov_q0sdvsm27.s[39]++;\n      sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[40]++;\n      return;\n    } else /* istanbul ignore next */{cov_q0sdvsm27.b[6][1]++;}\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}cov_q0sdvsm27.s[41]++;\n  sendJSON(response, 200, mountains);\n}","timestamp":"2017-12-08T01:26:47.679Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T01:26:47.679Z"}
{"message":"mountains is not defined","stack":"ReferenceError: mountains is not defined\n    at Object.<anonymous>.router.get (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/route/mountain-router.js:63:26)\n    at requestParser.parse.then.request (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/lib/router.js:55:14)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-08T01:26:47.680Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T01:26:47.683Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T01:26:47.683Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/lib/request-parser.js:34:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-08T01:26:47.683Z"}
{"level":"info","message":"Adding an POST url and callback","timestamp":"2017-12-08T01:30:56.654Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T01:30:56.654Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[30]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[31]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T01:30:56.654Z"}
{"level":"info","message":"Adding an GET url and callback","timestamp":"2017-12-08T01:30:56.655Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T01:30:56.655Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[5]++;cov_q0sdvsm27.s[33]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;\n    let oneMountain; /* istanbul ignore next */cov_q0sdvsm27.s[34]++;\n    for (let mountain of mountains) {/* istanbul ignore next */cov_q0sdvsm27.s[35]++;\n      if (request.url.query.id === mountain.id)\n        {/* istanbul ignore next */cov_q0sdvsm27.b[5][0]++;cov_q0sdvsm27.s[36]++;oneMountain = mountain;} else /* istanbul ignore next */{cov_q0sdvsm27.b[5][1]++;}cov_q0sdvsm27.s[37]++;\n      break;\n    } /* istanbul ignore next */cov_q0sdvsm27.s[38]++;\n    if (!request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[6][0]++;cov_q0sdvsm27.s[39]++;\n      sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[40]++;\n      return;\n    } else /* istanbul ignore next */{cov_q0sdvsm27.b[6][1]++;}\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}cov_q0sdvsm27.s[41]++;\n  sendJSON(response, 200, mountains);\n}","timestamp":"2017-12-08T01:30:56.655Z"}
{"level":"info","message":"Adding an DELETE url and callback","timestamp":"2017-12-08T01:30:56.655Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T01:30:56.655Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[6]++;cov_q0sdvsm27.s[43]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[7][0]++;\n    let oneMountain; /* istanbul ignore next */cov_q0sdvsm27.s[44]++;\n    for (let mountain of mountains) {/* istanbul ignore next */cov_q0sdvsm27.s[45]++;\n      if (request.url.query.id === mountain.id)\n        {/* istanbul ignore next */cov_q0sdvsm27.b[8][0]++;cov_q0sdvsm27.s[46]++;oneMountain = mountain.id;} else /* istanbul ignore next */{cov_q0sdvsm27.b[8][1]++;}cov_q0sdvsm27.s[47]++;\n      break;\n    } /* istanbul ignore next */cov_q0sdvsm27.s[48]++;\n    if (!request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[9][0]++;cov_q0sdvsm27.s[49]++;\n      sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[50]++;\n      logger.log('info', `Deletion requested from database, but ${request.url.query.id} not found.`); /* istanbul ignore next */cov_q0sdvsm27.s[51]++;\n      return;\n    } else /* istanbul ignore next */{cov_q0sdvsm27.b[9][1]++;}\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[7][1]++;}cov_q0sdvsm27.s[52]++;\n  sendStatus(response, 204, 'Deleted from database.'); /* istanbul ignore next */cov_q0sdvsm27.s[53]++;\n  logger.log('info', `User deleted ${request.url.query.id} from database.`);\n}","timestamp":"2017-12-08T01:30:56.655Z"}
{"level":"info","message":"Server is online at port 3000","timestamp":"2017-12-08T01:30:56.718Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T01:30:56.770Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:30:56.771Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[30]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[31]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T01:30:56.771Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T01:30:56.772Z"}
{"message":"mountain is not defined","stack":"ReferenceError: mountain is not defined\n    at Object.<anonymous>.storage.fetchAll (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/lib/storage.js:19:14)\n    at Object.<anonymous>.storage.addItem.mountain [as addItem] (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/lib/storage.js:32:17)\n    at Object.<anonymous>.router.post (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/route/mountain-router.js:50:11)\n    at requestParser.parse.then.request (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/lib/router.js:55:14)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-08T01:30:56.772Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T01:30:56.779Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:30:56.780Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[5]++;cov_q0sdvsm27.s[33]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;\n    let oneMountain; /* istanbul ignore next */cov_q0sdvsm27.s[34]++;\n    for (let mountain of mountains) {/* istanbul ignore next */cov_q0sdvsm27.s[35]++;\n      if (request.url.query.id === mountain.id)\n        {/* istanbul ignore next */cov_q0sdvsm27.b[5][0]++;cov_q0sdvsm27.s[36]++;oneMountain = mountain;} else /* istanbul ignore next */{cov_q0sdvsm27.b[5][1]++;}cov_q0sdvsm27.s[37]++;\n      break;\n    } /* istanbul ignore next */cov_q0sdvsm27.s[38]++;\n    if (!request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[6][0]++;cov_q0sdvsm27.s[39]++;\n      sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[40]++;\n      return;\n    } else /* istanbul ignore next */{cov_q0sdvsm27.b[6][1]++;}\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}cov_q0sdvsm27.s[41]++;\n  sendJSON(response, 200, mountains);\n}","timestamp":"2017-12-08T01:30:56.780Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T01:30:56.780Z"}
{"message":"mountains is not defined","stack":"ReferenceError: mountains is not defined\n    at Object.<anonymous>.router.get (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/route/mountain-router.js:63:26)\n    at requestParser.parse.then.request (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/lib/router.js:55:14)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-08T01:30:56.780Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T01:30:56.783Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T01:30:56.783Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/lib/request-parser.js:34:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-08T01:30:56.783Z"}
{"level":"info","message":"Adding an POST url and callback","timestamp":"2017-12-08T01:31:11.939Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T01:31:11.940Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[30]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[31]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T01:31:11.940Z"}
{"level":"info","message":"Adding an GET url and callback","timestamp":"2017-12-08T01:31:11.940Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T01:31:11.940Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[5]++;cov_q0sdvsm27.s[33]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;\n    let oneMountain; /* istanbul ignore next */cov_q0sdvsm27.s[34]++;\n    for (let mountain of mountains) {/* istanbul ignore next */cov_q0sdvsm27.s[35]++;\n      if (request.url.query.id === mountain.id)\n        {/* istanbul ignore next */cov_q0sdvsm27.b[5][0]++;cov_q0sdvsm27.s[36]++;oneMountain = mountain;} else /* istanbul ignore next */{cov_q0sdvsm27.b[5][1]++;}cov_q0sdvsm27.s[37]++;\n      break;\n    } /* istanbul ignore next */cov_q0sdvsm27.s[38]++;\n    if (!request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[6][0]++;cov_q0sdvsm27.s[39]++;\n      sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[40]++;\n      return;\n    } else /* istanbul ignore next */{cov_q0sdvsm27.b[6][1]++;}\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}cov_q0sdvsm27.s[41]++;\n  sendJSON(response, 200, mountains);\n}","timestamp":"2017-12-08T01:31:11.940Z"}
{"level":"info","message":"Adding an DELETE url and callback","timestamp":"2017-12-08T01:31:11.940Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T01:31:11.940Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[6]++;cov_q0sdvsm27.s[43]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[7][0]++;\n    let oneMountain; /* istanbul ignore next */cov_q0sdvsm27.s[44]++;\n    for (let mountain of mountains) {/* istanbul ignore next */cov_q0sdvsm27.s[45]++;\n      if (request.url.query.id === mountain.id)\n        {/* istanbul ignore next */cov_q0sdvsm27.b[8][0]++;cov_q0sdvsm27.s[46]++;oneMountain = mountain.id;} else /* istanbul ignore next */{cov_q0sdvsm27.b[8][1]++;}cov_q0sdvsm27.s[47]++;\n      break;\n    } /* istanbul ignore next */cov_q0sdvsm27.s[48]++;\n    if (!request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[9][0]++;cov_q0sdvsm27.s[49]++;\n      sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[50]++;\n      logger.log('info', `Deletion requested from database, but ${request.url.query.id} not found.`); /* istanbul ignore next */cov_q0sdvsm27.s[51]++;\n      return;\n    } else /* istanbul ignore next */{cov_q0sdvsm27.b[9][1]++;}\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[7][1]++;}cov_q0sdvsm27.s[52]++;\n  sendStatus(response, 204, 'Deleted from database.'); /* istanbul ignore next */cov_q0sdvsm27.s[53]++;\n  logger.log('info', `User deleted ${request.url.query.id} from database.`);\n}","timestamp":"2017-12-08T01:31:11.940Z"}
{"level":"info","message":"Server is online at port 3000","timestamp":"2017-12-08T01:31:11.984Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T01:31:11.999Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:31:12.000Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[30]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[31]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T01:31:12.000Z"}
{"level":"info","message":"Responding with a 200 code and the following data.","timestamp":"2017-12-08T01:31:12.003Z"}
{"id":"79613000-dbb7-11e7-8f9e-cf1a3e83d81d","name":"Mt. Evans","location":"Colorado","elevation":"14,235","level":"info","message":"","timestamp":"2017-12-08T01:31:12.004Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T01:31:12.013Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:31:12.014Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[5]++;cov_q0sdvsm27.s[33]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;\n    let oneMountain; /* istanbul ignore next */cov_q0sdvsm27.s[34]++;\n    for (let mountain of mountains) {/* istanbul ignore next */cov_q0sdvsm27.s[35]++;\n      if (request.url.query.id === mountain.id)\n        {/* istanbul ignore next */cov_q0sdvsm27.b[5][0]++;cov_q0sdvsm27.s[36]++;oneMountain = mountain;} else /* istanbul ignore next */{cov_q0sdvsm27.b[5][1]++;}cov_q0sdvsm27.s[37]++;\n      break;\n    } /* istanbul ignore next */cov_q0sdvsm27.s[38]++;\n    if (!request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[6][0]++;cov_q0sdvsm27.s[39]++;\n      sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[40]++;\n      return;\n    } else /* istanbul ignore next */{cov_q0sdvsm27.b[6][1]++;}\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}cov_q0sdvsm27.s[41]++;\n  sendJSON(response, 200, mountains);\n}","timestamp":"2017-12-08T01:31:12.014Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T01:31:12.014Z"}
{"message":"mountains is not defined","stack":"ReferenceError: mountains is not defined\n    at Object.<anonymous>.router.get (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/route/mountain-router.js:63:26)\n    at requestParser.parse.then.request (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/lib/router.js:55:14)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-08T01:31:12.014Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T01:31:12.018Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T01:31:12.018Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/lib/request-parser.js:34:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-08T01:31:12.018Z"}
{"level":"info","message":"Adding an POST url and callback","timestamp":"2017-12-08T01:32:32.507Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T01:32:32.507Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[30]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[31]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T01:32:32.508Z"}
{"level":"info","message":"Adding an GET url and callback","timestamp":"2017-12-08T01:32:32.508Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T01:32:32.508Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[5]++;cov_q0sdvsm27.s[33]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;\n    let oneMountain; /* istanbul ignore next */cov_q0sdvsm27.s[34]++;\n    for (let mountain of mountains) {/* istanbul ignore next */cov_q0sdvsm27.s[35]++;\n      if (request.url.query.id === mountain.id)\n        {/* istanbul ignore next */cov_q0sdvsm27.b[5][0]++;cov_q0sdvsm27.s[36]++;oneMountain = mountain;} else /* istanbul ignore next */{cov_q0sdvsm27.b[5][1]++;}cov_q0sdvsm27.s[37]++;\n      break;\n    } /* istanbul ignore next */cov_q0sdvsm27.s[38]++;\n    if (!request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[6][0]++;cov_q0sdvsm27.s[39]++;\n      sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[40]++;\n      return;\n    } else /* istanbul ignore next */{cov_q0sdvsm27.b[6][1]++;}\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}cov_q0sdvsm27.s[41]++;\n  sendJSON(response, 200, mountains);\n}","timestamp":"2017-12-08T01:32:32.508Z"}
{"level":"info","message":"Adding an DELETE url and callback","timestamp":"2017-12-08T01:32:32.508Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T01:32:32.508Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[6]++;cov_q0sdvsm27.s[43]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[7][0]++;\n    let oneMountain; /* istanbul ignore next */cov_q0sdvsm27.s[44]++;\n    for (let mountain of mountains) {/* istanbul ignore next */cov_q0sdvsm27.s[45]++;\n      if (request.url.query.id === mountain.id)\n        {/* istanbul ignore next */cov_q0sdvsm27.b[8][0]++;cov_q0sdvsm27.s[46]++;oneMountain = mountain.id;} else /* istanbul ignore next */{cov_q0sdvsm27.b[8][1]++;}cov_q0sdvsm27.s[47]++;\n      break;\n    } /* istanbul ignore next */cov_q0sdvsm27.s[48]++;\n    if (!request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[9][0]++;cov_q0sdvsm27.s[49]++;\n      sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[50]++;\n      logger.log('info', `Deletion requested from database, but ${request.url.query.id} not found.`); /* istanbul ignore next */cov_q0sdvsm27.s[51]++;\n      return;\n    } else /* istanbul ignore next */{cov_q0sdvsm27.b[9][1]++;}\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[7][1]++;}cov_q0sdvsm27.s[52]++;\n  sendStatus(response, 204, 'Deleted from database.'); /* istanbul ignore next */cov_q0sdvsm27.s[53]++;\n  logger.log('info', `User deleted ${request.url.query.id} from database.`);\n}","timestamp":"2017-12-08T01:32:32.508Z"}
{"level":"info","message":"Server is online at port 3000","timestamp":"2017-12-08T01:32:32.552Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T01:32:32.603Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:32:32.604Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[30]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[31]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T01:32:32.604Z"}
{"level":"info","message":"Responding with a 200 code and the following data.","timestamp":"2017-12-08T01:32:32.608Z"}
{"id":"a96c61c0-dbb7-11e7-a16b-e5195e97a39e","name":"Mt. Evans","location":"Colorado","elevation":"14,235","level":"info","message":"","timestamp":"2017-12-08T01:32:32.608Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T01:32:32.617Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:32:32.618Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[5]++;cov_q0sdvsm27.s[33]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;\n    let oneMountain; /* istanbul ignore next */cov_q0sdvsm27.s[34]++;\n    for (let mountain of mountains) {/* istanbul ignore next */cov_q0sdvsm27.s[35]++;\n      if (request.url.query.id === mountain.id)\n        {/* istanbul ignore next */cov_q0sdvsm27.b[5][0]++;cov_q0sdvsm27.s[36]++;oneMountain = mountain;} else /* istanbul ignore next */{cov_q0sdvsm27.b[5][1]++;}cov_q0sdvsm27.s[37]++;\n      break;\n    } /* istanbul ignore next */cov_q0sdvsm27.s[38]++;\n    if (!request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[6][0]++;cov_q0sdvsm27.s[39]++;\n      sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[40]++;\n      return;\n    } else /* istanbul ignore next */{cov_q0sdvsm27.b[6][1]++;}\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}cov_q0sdvsm27.s[41]++;\n  sendJSON(response, 200, mountains);\n}","timestamp":"2017-12-08T01:32:32.618Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T01:32:32.618Z"}
{"message":"mountains is not defined","stack":"ReferenceError: mountains is not defined\n    at Object.<anonymous>.router.get (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/route/mountain-router.js:63:26)\n    at requestParser.parse.then.request (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/lib/router.js:55:14)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-08T01:32:32.618Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T01:32:32.622Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T01:32:32.622Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/lib/request-parser.js:34:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-08T01:32:32.622Z"}
{"level":"info","message":"Adding an POST url and callback","timestamp":"2017-12-08T01:33:11.721Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T01:33:11.722Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[30]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[31]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T01:33:11.722Z"}
{"level":"info","message":"Adding an GET url and callback","timestamp":"2017-12-08T01:33:11.722Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T01:33:11.722Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[5]++;cov_q0sdvsm27.s[33]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;\n    let oneMountain; /* istanbul ignore next */cov_q0sdvsm27.s[34]++;\n    for (let mountain of mountains) {/* istanbul ignore next */cov_q0sdvsm27.s[35]++;\n      if (request.url.query.id === mountain.id)\n        {/* istanbul ignore next */cov_q0sdvsm27.b[5][0]++;cov_q0sdvsm27.s[36]++;oneMountain = mountain;} else /* istanbul ignore next */{cov_q0sdvsm27.b[5][1]++;}cov_q0sdvsm27.s[37]++;\n      break;\n    } /* istanbul ignore next */cov_q0sdvsm27.s[38]++;\n    if (!request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[6][0]++;cov_q0sdvsm27.s[39]++;\n      sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[40]++;\n      return;\n    } else /* istanbul ignore next */{cov_q0sdvsm27.b[6][1]++;}\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}cov_q0sdvsm27.s[41]++;\n  sendJSON(response, 200, mountains);\n}","timestamp":"2017-12-08T01:33:11.722Z"}
{"level":"info","message":"Adding an DELETE url and callback","timestamp":"2017-12-08T01:33:11.723Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T01:33:11.723Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[6]++;cov_q0sdvsm27.s[43]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[7][0]++;\n    let oneMountain; /* istanbul ignore next */cov_q0sdvsm27.s[44]++;\n    for (let mountain of mountains) {/* istanbul ignore next */cov_q0sdvsm27.s[45]++;\n      if (request.url.query.id === mountain.id)\n        {/* istanbul ignore next */cov_q0sdvsm27.b[8][0]++;cov_q0sdvsm27.s[46]++;oneMountain = mountain.id;} else /* istanbul ignore next */{cov_q0sdvsm27.b[8][1]++;}cov_q0sdvsm27.s[47]++;\n      break;\n    } /* istanbul ignore next */cov_q0sdvsm27.s[48]++;\n    if (!request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[9][0]++;cov_q0sdvsm27.s[49]++;\n      sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[50]++;\n      logger.log('info', `Deletion requested from database, but ${request.url.query.id} not found.`); /* istanbul ignore next */cov_q0sdvsm27.s[51]++;\n      return;\n    } else /* istanbul ignore next */{cov_q0sdvsm27.b[9][1]++;}\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[7][1]++;}cov_q0sdvsm27.s[52]++;\n  sendStatus(response, 204, 'Deleted from database.'); /* istanbul ignore next */cov_q0sdvsm27.s[53]++;\n  logger.log('info', `User deleted ${request.url.query.id} from database.`);\n}","timestamp":"2017-12-08T01:33:11.723Z"}
{"level":"info","message":"Server is online at port 3000","timestamp":"2017-12-08T01:33:11.793Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T01:33:11.845Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:33:11.846Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[30]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[31]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T01:33:11.846Z"}
{"level":"info","message":"Responding with a 200 code and the following data.","timestamp":"2017-12-08T01:33:11.850Z"}
{"id":"c0d06370-dbb7-11e7-b4c4-6f331c81e8a3","name":"Mt. Evans","location":"Colorado","elevation":"14,235","level":"info","message":"","timestamp":"2017-12-08T01:33:11.850Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T01:33:11.859Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:33:11.859Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[5]++;cov_q0sdvsm27.s[33]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;\n    let oneMountain; /* istanbul ignore next */cov_q0sdvsm27.s[34]++;\n    for (let mountain of mountains) {/* istanbul ignore next */cov_q0sdvsm27.s[35]++;\n      if (request.url.query.id === mountain.id)\n        {/* istanbul ignore next */cov_q0sdvsm27.b[5][0]++;cov_q0sdvsm27.s[36]++;oneMountain = mountain;} else /* istanbul ignore next */{cov_q0sdvsm27.b[5][1]++;}cov_q0sdvsm27.s[37]++;\n      break;\n    } /* istanbul ignore next */cov_q0sdvsm27.s[38]++;\n    if (!request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[6][0]++;cov_q0sdvsm27.s[39]++;\n      sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[40]++;\n      return;\n    } else /* istanbul ignore next */{cov_q0sdvsm27.b[6][1]++;}\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}cov_q0sdvsm27.s[41]++;\n  sendJSON(response, 200, mountains);\n}","timestamp":"2017-12-08T01:33:11.860Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T01:33:11.860Z"}
{"message":"mountains is not defined","stack":"ReferenceError: mountains is not defined\n    at Object.<anonymous>.router.get (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/route/mountain-router.js:63:26)\n    at requestParser.parse.then.request (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/lib/router.js:55:14)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-08T01:33:11.860Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T01:33:11.863Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T01:33:11.864Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/lib/request-parser.js:34:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-08T01:33:11.864Z"}
{"level":"info","message":"Adding an POST url and callback","timestamp":"2017-12-08T01:53:38.897Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T01:53:38.897Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[30]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[31]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T01:53:38.897Z"}
{"level":"info","message":"Adding an GET url and callback","timestamp":"2017-12-08T01:53:38.898Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T01:53:38.898Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[5]++;cov_q0sdvsm27.s[33]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;cov_q0sdvsm27.s[34]++;\n    storage.fetchItem(id).\n    then(mountain => {/* istanbul ignore next */cov_q0sdvsm27.f[6]++;cov_q0sdvsm27.s[35]++;\n      sendJSON(response, 200, mountains);\n    }).\n    catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[7]++;cov_q0sdvsm27.s[36]++;\n      sendStatus(response, 404, 'id not found');\n    });\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}\n}","timestamp":"2017-12-08T01:53:38.898Z"}
{"level":"info","message":"Adding an DELETE url and callback","timestamp":"2017-12-08T01:53:38.898Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T01:53:38.898Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[8]++;cov_q0sdvsm27.s[38]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[5][0]++;\n    let oneMountain; /* istanbul ignore next */cov_q0sdvsm27.s[39]++;\n    for (let mountain of mountains) {/* istanbul ignore next */cov_q0sdvsm27.s[40]++;\n      if (request.url.query.id === mountain.id)\n        {/* istanbul ignore next */cov_q0sdvsm27.b[6][0]++;cov_q0sdvsm27.s[41]++;oneMountain = mountain.id;} else /* istanbul ignore next */{cov_q0sdvsm27.b[6][1]++;}cov_q0sdvsm27.s[42]++;\n      break;\n    } /* istanbul ignore next */cov_q0sdvsm27.s[43]++;\n    if (!request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[7][0]++;cov_q0sdvsm27.s[44]++;\n      sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[45]++;\n      logger.log('info', `Deletion requested from database, but ${request.url.query.id} not found.`); /* istanbul ignore next */cov_q0sdvsm27.s[46]++;\n      return;\n    } else /* istanbul ignore next */{cov_q0sdvsm27.b[7][1]++;}\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[5][1]++;}cov_q0sdvsm27.s[47]++;\n  sendStatus(response, 204, 'Deleted from database.'); /* istanbul ignore next */cov_q0sdvsm27.s[48]++;\n  logger.log('info', `User deleted ${request.url.query.id} from database.`);\n}","timestamp":"2017-12-08T01:53:38.898Z"}
{"level":"info","message":"Server is online at port 3000","timestamp":"2017-12-08T01:53:38.965Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T01:53:39.018Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:53:39.019Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[30]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[31]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T01:53:39.019Z"}
{"level":"info","message":"Responding with a 200 code and the following data.","timestamp":"2017-12-08T01:53:39.022Z"}
{"id":"9c43f9b0-dbba-11e7-9db3-174656c3a61e","name":"Mt. Evans","location":"Colorado","elevation":"14,235","level":"info","message":"","timestamp":"2017-12-08T01:53:39.022Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T01:53:39.032Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:53:39.033Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[5]++;cov_q0sdvsm27.s[33]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;cov_q0sdvsm27.s[34]++;\n    storage.fetchItem(id).\n    then(mountain => {/* istanbul ignore next */cov_q0sdvsm27.f[6]++;cov_q0sdvsm27.s[35]++;\n      sendJSON(response, 200, mountains);\n    }).\n    catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[7]++;cov_q0sdvsm27.s[36]++;\n      sendStatus(response, 404, 'id not found');\n    });\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}\n}","timestamp":"2017-12-08T01:53:39.033Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T01:53:39.033Z"}
{"message":"id is not defined","stack":"ReferenceError: id is not defined\n    at Object.<anonymous>.router.get (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/route/mountain-router.js:62:23)\n    at requestParser.parse.then.request (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/lib/router.js:55:14)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-08T01:53:39.033Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T01:53:39.037Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T01:53:39.037Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/lib/request-parser.js:34:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-08T01:53:39.037Z"}
{"level":"info","message":"Adding an POST url and callback","timestamp":"2017-12-08T01:54:14.582Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T01:54:14.583Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[30]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[31]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T01:54:14.583Z"}
{"level":"info","message":"Adding an GET url and callback","timestamp":"2017-12-08T01:54:14.583Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T01:54:14.583Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[5]++;cov_q0sdvsm27.s[33]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;cov_q0sdvsm27.s[34]++;\n    storage.fetchItem(request.url.query.id).\n    then(mountain => {/* istanbul ignore next */cov_q0sdvsm27.f[6]++;cov_q0sdvsm27.s[35]++;\n      sendJSON(response, 200, mountains);\n    }).\n    catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[7]++;cov_q0sdvsm27.s[36]++;\n      sendStatus(response, 404, 'id not found');\n    });\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}\n}","timestamp":"2017-12-08T01:54:14.583Z"}
{"level":"info","message":"Adding an DELETE url and callback","timestamp":"2017-12-08T01:54:14.583Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T01:54:14.583Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[8]++;cov_q0sdvsm27.s[38]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[5][0]++;\n    let oneMountain; /* istanbul ignore next */cov_q0sdvsm27.s[39]++;\n    for (let mountain of mountains) {/* istanbul ignore next */cov_q0sdvsm27.s[40]++;\n      if (request.url.query.id === mountain.id)\n        {/* istanbul ignore next */cov_q0sdvsm27.b[6][0]++;cov_q0sdvsm27.s[41]++;oneMountain = mountain.id;} else /* istanbul ignore next */{cov_q0sdvsm27.b[6][1]++;}cov_q0sdvsm27.s[42]++;\n      break;\n    } /* istanbul ignore next */cov_q0sdvsm27.s[43]++;\n    if (!request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[7][0]++;cov_q0sdvsm27.s[44]++;\n      sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[45]++;\n      logger.log('info', `Deletion requested from database, but ${request.url.query.id} not found.`); /* istanbul ignore next */cov_q0sdvsm27.s[46]++;\n      return;\n    } else /* istanbul ignore next */{cov_q0sdvsm27.b[7][1]++;}\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[5][1]++;}cov_q0sdvsm27.s[47]++;\n  sendStatus(response, 204, 'Deleted from database.'); /* istanbul ignore next */cov_q0sdvsm27.s[48]++;\n  logger.log('info', `User deleted ${request.url.query.id} from database.`);\n}","timestamp":"2017-12-08T01:54:14.583Z"}
{"level":"info","message":"Server is online at port 3000","timestamp":"2017-12-08T01:54:14.625Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T01:54:14.676Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:54:14.677Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[30]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[31]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T01:54:14.677Z"}
{"level":"info","message":"Responding with a 200 code and the following data.","timestamp":"2017-12-08T01:54:14.681Z"}
{"id":"b1851b60-dbba-11e7-ae36-b72c86b4cdb7","name":"Mt. Evans","location":"Colorado","elevation":"14,235","level":"info","message":"","timestamp":"2017-12-08T01:54:14.681Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T01:54:14.690Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:54:14.691Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[5]++;cov_q0sdvsm27.s[33]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;cov_q0sdvsm27.s[34]++;\n    storage.fetchItem(request.url.query.id).\n    then(mountain => {/* istanbul ignore next */cov_q0sdvsm27.f[6]++;cov_q0sdvsm27.s[35]++;\n      sendJSON(response, 200, mountains);\n    }).\n    catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[7]++;cov_q0sdvsm27.s[36]++;\n      sendStatus(response, 404, 'id not found');\n    });\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}\n}","timestamp":"2017-12-08T01:54:14.691Z"}
{"level":"info","message":"Responding with a 404 code due to id not found.","timestamp":"2017-12-08T01:54:14.693Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T01:54:14.697Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T01:54:14.698Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/lib/request-parser.js:34:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-08T01:54:14.698Z"}
{"level":"info","message":"Adding an POST url and callback","timestamp":"2017-12-08T01:54:41.094Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T01:54:41.094Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[30]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[31]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T01:54:41.094Z"}
{"level":"info","message":"Adding an GET url and callback","timestamp":"2017-12-08T01:54:41.094Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T01:54:41.094Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[5]++;cov_q0sdvsm27.s[33]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;cov_q0sdvsm27.s[34]++;\n    storage.fetchItem(request.url.query.id).\n    then(mountain => {/* istanbul ignore next */cov_q0sdvsm27.f[6]++;cov_q0sdvsm27.s[35]++;\n      sendJSON(response, 200, mountains);\n    }).\n    catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[7]++;cov_q0sdvsm27.s[36]++;\n      sendStatus(response, 404, 'id not found');\n    });\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}\n}","timestamp":"2017-12-08T01:54:41.094Z"}
{"level":"info","message":"Adding an DELETE url and callback","timestamp":"2017-12-08T01:54:41.095Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T01:54:41.095Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[8]++;cov_q0sdvsm27.s[38]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[5][0]++;\n    let oneMountain; /* istanbul ignore next */cov_q0sdvsm27.s[39]++;\n    for (let mountain of mountains) {/* istanbul ignore next */cov_q0sdvsm27.s[40]++;\n      if (request.url.query.id === mountain.id)\n        {/* istanbul ignore next */cov_q0sdvsm27.b[6][0]++;cov_q0sdvsm27.s[41]++;oneMountain = mountain.id;} else /* istanbul ignore next */{cov_q0sdvsm27.b[6][1]++;}cov_q0sdvsm27.s[42]++;\n      break;\n    } /* istanbul ignore next */cov_q0sdvsm27.s[43]++;\n    if (!request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[7][0]++;cov_q0sdvsm27.s[44]++;\n      sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[45]++;\n      logger.log('info', `Deletion requested from database, but ${request.url.query.id} not found.`); /* istanbul ignore next */cov_q0sdvsm27.s[46]++;\n      return;\n    } else /* istanbul ignore next */{cov_q0sdvsm27.b[7][1]++;}\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[5][1]++;}cov_q0sdvsm27.s[47]++;\n  sendStatus(response, 204, 'Deleted from database.'); /* istanbul ignore next */cov_q0sdvsm27.s[48]++;\n  logger.log('info', `User deleted ${request.url.query.id} from database.`);\n}","timestamp":"2017-12-08T01:54:41.095Z"}
{"level":"info","message":"Server is online at port 3000","timestamp":"2017-12-08T01:54:41.159Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T01:54:41.212Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:54:41.213Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[30]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[31]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T01:54:41.213Z"}
{"level":"info","message":"Responding with a 200 code and the following data.","timestamp":"2017-12-08T01:54:41.216Z"}
{"id":"c15606d0-dbba-11e7-872f-0d9b3bfe8438","name":"Mt. Evans","location":"Colorado","elevation":"14,235","level":"info","message":"","timestamp":"2017-12-08T01:54:41.216Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T01:54:41.225Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:54:41.226Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[5]++;cov_q0sdvsm27.s[33]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;cov_q0sdvsm27.s[34]++;\n    storage.fetchItem(request.url.query.id).\n    then(mountain => {/* istanbul ignore next */cov_q0sdvsm27.f[6]++;cov_q0sdvsm27.s[35]++;\n      sendJSON(response, 200, mountains);\n    }).\n    catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[7]++;cov_q0sdvsm27.s[36]++;\n      sendStatus(response, 404, 'id not found');\n    });\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}\n}","timestamp":"2017-12-08T01:54:41.226Z"}
{"level":"info","message":"Responding with a 404 code due to id not found.","timestamp":"2017-12-08T01:54:41.227Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T01:54:41.231Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T01:54:41.231Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/lib/request-parser.js:34:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-08T01:54:41.231Z"}
{"level":"info","message":"Adding an POST url and callback","timestamp":"2017-12-08T01:55:25.289Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T01:55:25.290Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[30]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[31]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T01:55:25.290Z"}
{"level":"info","message":"Adding an GET url and callback","timestamp":"2017-12-08T01:55:25.290Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T01:55:25.290Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[5]++;cov_q0sdvsm27.s[33]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;cov_q0sdvsm27.s[34]++;\n    storage.fetchItem(request.url.query.id).\n    then(mountain => {/* istanbul ignore next */cov_q0sdvsm27.f[6]++;cov_q0sdvsm27.s[35]++;\n      sendJSON(response, 200, mountains);\n    }).\n    catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[7]++;cov_q0sdvsm27.s[36]++;\n      sendStatus(response, 404, 'id not found');\n    });\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}\n}","timestamp":"2017-12-08T01:55:25.290Z"}
{"level":"info","message":"Adding an DELETE url and callback","timestamp":"2017-12-08T01:55:25.290Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T01:55:25.290Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[8]++;cov_q0sdvsm27.s[38]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[5][0]++;\n    let oneMountain; /* istanbul ignore next */cov_q0sdvsm27.s[39]++;\n    for (let mountain of mountains) {/* istanbul ignore next */cov_q0sdvsm27.s[40]++;\n      if (request.url.query.id === mountain.id)\n        {/* istanbul ignore next */cov_q0sdvsm27.b[6][0]++;cov_q0sdvsm27.s[41]++;oneMountain = mountain.id;} else /* istanbul ignore next */{cov_q0sdvsm27.b[6][1]++;}cov_q0sdvsm27.s[42]++;\n      break;\n    } /* istanbul ignore next */cov_q0sdvsm27.s[43]++;\n    if (!request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[7][0]++;cov_q0sdvsm27.s[44]++;\n      sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[45]++;\n      logger.log('info', `Deletion requested from database, but ${request.url.query.id} not found.`); /* istanbul ignore next */cov_q0sdvsm27.s[46]++;\n      return;\n    } else /* istanbul ignore next */{cov_q0sdvsm27.b[7][1]++;}\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[5][1]++;}cov_q0sdvsm27.s[47]++;\n  sendStatus(response, 204, 'Deleted from database.'); /* istanbul ignore next */cov_q0sdvsm27.s[48]++;\n  logger.log('info', `User deleted ${request.url.query.id} from database.`);\n}","timestamp":"2017-12-08T01:55:25.290Z"}
{"level":"info","message":"Server is online at port 3000","timestamp":"2017-12-08T01:55:25.335Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T01:55:25.390Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:55:25.391Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[30]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[31]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T01:55:25.391Z"}
{"level":"info","message":"Responding with a 200 code and the following data.","timestamp":"2017-12-08T01:55:25.395Z"}
{"id":"dbab0df0-dbba-11e7-8eef-71a4bb14c774","name":"Mt. Evans","location":"Colorado","elevation":"14,235","level":"info","message":"","timestamp":"2017-12-08T01:55:25.395Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T01:55:25.404Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:55:25.404Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[5]++;cov_q0sdvsm27.s[33]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;cov_q0sdvsm27.s[34]++;\n    storage.fetchItem(request.url.query.id).\n    then(mountain => {/* istanbul ignore next */cov_q0sdvsm27.f[6]++;cov_q0sdvsm27.s[35]++;\n      sendJSON(response, 200, mountains);\n    }).\n    catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[7]++;cov_q0sdvsm27.s[36]++;\n      sendStatus(response, 404, 'id not found');\n    });\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}\n}","timestamp":"2017-12-08T01:55:25.404Z"}
{"level":"info","message":"Responding with a 404 code due to id not found.","timestamp":"2017-12-08T01:55:25.405Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T01:55:25.409Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T01:55:25.409Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/lib/request-parser.js:34:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-08T01:55:25.410Z"}
{"level":"info","message":"Adding an POST url and callback","timestamp":"2017-12-08T01:56:13.888Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T01:56:13.888Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[30]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[31]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T01:56:13.888Z"}
{"level":"info","message":"Adding an GET url and callback","timestamp":"2017-12-08T01:56:13.888Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T01:56:13.888Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[5]++;cov_q0sdvsm27.s[33]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;cov_q0sdvsm27.s[34]++;\n    storage.fetchItem(request.url.query.id).\n    then(mountain => {/* istanbul ignore next */cov_q0sdvsm27.f[6]++;cov_q0sdvsm27.s[35]++;\n      sendJSON(response, 200, mountains);\n    }).\n    catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[7]++;cov_q0sdvsm27.s[36]++;\n      sendStatus(response, 404, 'id not found');\n    });\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}\n}","timestamp":"2017-12-08T01:56:13.889Z"}
{"level":"info","message":"Adding an DELETE url and callback","timestamp":"2017-12-08T01:56:13.889Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T01:56:13.889Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[8]++;cov_q0sdvsm27.s[38]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[5][0]++;\n    let oneMountain; /* istanbul ignore next */cov_q0sdvsm27.s[39]++;\n    for (let mountain of mountains) {/* istanbul ignore next */cov_q0sdvsm27.s[40]++;\n      if (request.url.query.id === mountain.id)\n        {/* istanbul ignore next */cov_q0sdvsm27.b[6][0]++;cov_q0sdvsm27.s[41]++;oneMountain = mountain.id;} else /* istanbul ignore next */{cov_q0sdvsm27.b[6][1]++;}cov_q0sdvsm27.s[42]++;\n      break;\n    } /* istanbul ignore next */cov_q0sdvsm27.s[43]++;\n    if (!request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[7][0]++;cov_q0sdvsm27.s[44]++;\n      sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[45]++;\n      logger.log('info', `Deletion requested from database, but ${request.url.query.id} not found.`); /* istanbul ignore next */cov_q0sdvsm27.s[46]++;\n      return;\n    } else /* istanbul ignore next */{cov_q0sdvsm27.b[7][1]++;}\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[5][1]++;}cov_q0sdvsm27.s[47]++;\n  sendStatus(response, 204, 'Deleted from database.'); /* istanbul ignore next */cov_q0sdvsm27.s[48]++;\n  logger.log('info', `User deleted ${request.url.query.id} from database.`);\n}","timestamp":"2017-12-08T01:56:13.889Z"}
{"level":"info","message":"Server is online at port 3000","timestamp":"2017-12-08T01:56:13.932Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T01:56:13.946Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:56:13.947Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[30]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[31]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T01:56:13.947Z"}
{"level":"info","message":"Responding with a 200 code and the following data.","timestamp":"2017-12-08T01:56:13.951Z"}
{"id":"f89c43c0-dbba-11e7-b124-45499f620ae3","name":"Mt. Evans","location":"Colorado","elevation":"14,235","level":"info","message":"","timestamp":"2017-12-08T01:56:13.951Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T01:56:13.960Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:56:13.961Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[5]++;cov_q0sdvsm27.s[33]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;cov_q0sdvsm27.s[34]++;\n    storage.fetchItem(request.url.query.id).\n    then(mountain => {/* istanbul ignore next */cov_q0sdvsm27.f[6]++;cov_q0sdvsm27.s[35]++;\n      sendJSON(response, 200, mountains);\n    }).\n    catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[7]++;cov_q0sdvsm27.s[36]++;\n      sendStatus(response, 404, 'id not found');\n    });\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}\n}","timestamp":"2017-12-08T01:56:13.961Z"}
{"level":"info","message":"Responding with a 404 code due to id not found.","timestamp":"2017-12-08T01:56:13.962Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T01:56:13.965Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T01:56:13.966Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/lib/request-parser.js:34:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-08T01:56:13.966Z"}
{"level":"info","message":"Adding an POST url and callback","timestamp":"2017-12-08T01:56:27.755Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T01:56:27.755Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[30]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[31]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T01:56:27.755Z"}
{"level":"info","message":"Adding an GET url and callback","timestamp":"2017-12-08T01:56:27.756Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T01:56:27.756Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[5]++;cov_q0sdvsm27.s[33]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;cov_q0sdvsm27.s[34]++;\n    storage.fetchItem(request.url.query.id).\n    then(mountain => {/* istanbul ignore next */cov_q0sdvsm27.f[6]++;cov_q0sdvsm27.s[35]++;\n      sendJSON(response, 200, mountains);\n    }).\n    catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[7]++;cov_q0sdvsm27.s[36]++;\n      sendStatus(response, 404, 'id not found');\n    });\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}\n}","timestamp":"2017-12-08T01:56:27.756Z"}
{"level":"info","message":"Adding an DELETE url and callback","timestamp":"2017-12-08T01:56:27.756Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T01:56:27.756Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[8]++;cov_q0sdvsm27.s[38]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[5][0]++;\n    let oneMountain; /* istanbul ignore next */cov_q0sdvsm27.s[39]++;\n    for (let mountain of mountains) {/* istanbul ignore next */cov_q0sdvsm27.s[40]++;\n      if (request.url.query.id === mountain.id)\n        {/* istanbul ignore next */cov_q0sdvsm27.b[6][0]++;cov_q0sdvsm27.s[41]++;oneMountain = mountain.id;} else /* istanbul ignore next */{cov_q0sdvsm27.b[6][1]++;}cov_q0sdvsm27.s[42]++;\n      break;\n    } /* istanbul ignore next */cov_q0sdvsm27.s[43]++;\n    if (!request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[7][0]++;cov_q0sdvsm27.s[44]++;\n      sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[45]++;\n      logger.log('info', `Deletion requested from database, but ${request.url.query.id} not found.`); /* istanbul ignore next */cov_q0sdvsm27.s[46]++;\n      return;\n    } else /* istanbul ignore next */{cov_q0sdvsm27.b[7][1]++;}\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[5][1]++;}cov_q0sdvsm27.s[47]++;\n  sendStatus(response, 204, 'Deleted from database.'); /* istanbul ignore next */cov_q0sdvsm27.s[48]++;\n  logger.log('info', `User deleted ${request.url.query.id} from database.`);\n}","timestamp":"2017-12-08T01:56:27.756Z"}
{"level":"info","message":"Server is online at port 3000","timestamp":"2017-12-08T01:56:27.801Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T01:56:27.815Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:56:27.816Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[30]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[31]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T01:56:27.816Z"}
{"level":"info","message":"Responding with a 200 code and the following data.","timestamp":"2017-12-08T01:56:27.821Z"}
{"id":"00e08190-dbbb-11e7-b857-1313a471928a","name":"Mt. Evans","location":"Colorado","elevation":"14,235","level":"info","message":"","timestamp":"2017-12-08T01:56:27.821Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T01:56:27.830Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:56:27.831Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[5]++;cov_q0sdvsm27.s[33]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;cov_q0sdvsm27.s[34]++;\n    storage.fetchItem(request.url.query.id).\n    then(mountain => {/* istanbul ignore next */cov_q0sdvsm27.f[6]++;cov_q0sdvsm27.s[35]++;\n      sendJSON(response, 200, mountains);\n    }).\n    catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[7]++;cov_q0sdvsm27.s[36]++;\n      sendStatus(response, 404, 'id not found');\n    });\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}\n}","timestamp":"2017-12-08T01:56:27.831Z"}
{"level":"info","message":"Responding with a 404 code due to id not found.","timestamp":"2017-12-08T01:56:27.832Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T01:56:27.835Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T01:56:27.836Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/lib/request-parser.js:34:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-08T01:56:27.836Z"}
{"level":"info","message":"Adding an POST url and callback","timestamp":"2017-12-08T02:00:39.717Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T02:00:39.717Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[30]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[31]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T02:00:39.718Z"}
{"level":"info","message":"Adding an GET url and callback","timestamp":"2017-12-08T02:00:39.718Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T02:00:39.718Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[5]++;cov_q0sdvsm27.s[33]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;cov_q0sdvsm27.s[34]++;\n    storage.fetchItem(request.url.query.id).\n    then(mountain => {/* istanbul ignore next */cov_q0sdvsm27.f[6]++;cov_q0sdvsm27.s[35]++;\n      sendJSON(response, 200, mountains);\n    }).\n    catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[7]++;cov_q0sdvsm27.s[36]++;\n      sendStatus(response, 404, 'id not found');\n    });\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}\n}","timestamp":"2017-12-08T02:00:39.718Z"}
{"level":"info","message":"Adding an DELETE url and callback","timestamp":"2017-12-08T02:00:39.718Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T02:00:39.718Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[8]++;cov_q0sdvsm27.s[38]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[5][0]++;\n    let oneMountain; /* istanbul ignore next */cov_q0sdvsm27.s[39]++;\n    for (let mountain of mountains) {/* istanbul ignore next */cov_q0sdvsm27.s[40]++;\n      if (request.url.query.id === mountain.id)\n        {/* istanbul ignore next */cov_q0sdvsm27.b[6][0]++;cov_q0sdvsm27.s[41]++;oneMountain = mountain.id;} else /* istanbul ignore next */{cov_q0sdvsm27.b[6][1]++;}cov_q0sdvsm27.s[42]++;\n      break;\n    } /* istanbul ignore next */cov_q0sdvsm27.s[43]++;\n    if (!request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[7][0]++;cov_q0sdvsm27.s[44]++;\n      sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[45]++;\n      logger.log('info', `Deletion requested from database, but ${request.url.query.id} not found.`); /* istanbul ignore next */cov_q0sdvsm27.s[46]++;\n      return;\n    } else /* istanbul ignore next */{cov_q0sdvsm27.b[7][1]++;}\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[5][1]++;}cov_q0sdvsm27.s[47]++;\n  sendStatus(response, 204, 'Deleted from database.'); /* istanbul ignore next */cov_q0sdvsm27.s[48]++;\n  logger.log('info', `User deleted ${request.url.query.id} from database.`);\n}","timestamp":"2017-12-08T02:00:39.718Z"}
{"level":"info","message":"Server is online at port 3000","timestamp":"2017-12-08T02:00:39.785Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T02:00:40.384Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T02:00:40.385Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[30]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[31]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T02:00:40.385Z"}
{"level":"info","message":"Responding with a 200 code and the following data.","timestamp":"2017-12-08T02:00:40.388Z"}
{"id":"976b7a20-dbbb-11e7-96ae-417a5ed1b137","name":"Mt. Evans","location":"Colorado","elevation":"14,235","level":"info","message":"","timestamp":"2017-12-08T02:00:40.388Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T02:00:40.399Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T02:00:40.400Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[5]++;cov_q0sdvsm27.s[33]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;cov_q0sdvsm27.s[34]++;\n    storage.fetchItem(request.url.query.id).\n    then(mountain => {/* istanbul ignore next */cov_q0sdvsm27.f[6]++;cov_q0sdvsm27.s[35]++;\n      sendJSON(response, 200, mountains);\n    }).\n    catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[7]++;cov_q0sdvsm27.s[36]++;\n      sendStatus(response, 404, 'id not found');\n    });\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}\n}","timestamp":"2017-12-08T02:00:40.400Z"}
{"level":"info","message":"Responding with a 404 code due to id not found.","timestamp":"2017-12-08T02:00:40.401Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T02:00:40.404Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T02:00:40.405Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/lib/request-parser.js:34:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-08T02:00:40.405Z"}
{"level":"info","message":"Adding an POST url and callback","timestamp":"2017-12-08T02:00:55.326Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T02:00:55.327Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[30]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[31]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T02:00:55.327Z"}
{"level":"info","message":"Adding an GET url and callback","timestamp":"2017-12-08T02:00:55.327Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T02:00:55.327Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[5]++;cov_q0sdvsm27.s[33]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;cov_q0sdvsm27.s[34]++;\n    storage.fetchItem(request.url.query.id).\n    then(mountain => {/* istanbul ignore next */cov_q0sdvsm27.f[6]++;cov_q0sdvsm27.s[35]++;\n      sendJSON(response, 200, mountains);\n    }).\n    catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[7]++;cov_q0sdvsm27.s[36]++;\n      sendStatus(response, 404, 'id not found');\n    });\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}\n}","timestamp":"2017-12-08T02:00:55.327Z"}
{"level":"info","message":"Adding an DELETE url and callback","timestamp":"2017-12-08T02:00:55.327Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T02:00:55.327Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[8]++;cov_q0sdvsm27.s[38]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[5][0]++;\n    let oneMountain; /* istanbul ignore next */cov_q0sdvsm27.s[39]++;\n    for (let mountain of mountains) {/* istanbul ignore next */cov_q0sdvsm27.s[40]++;\n      if (request.url.query.id === mountain.id)\n        {/* istanbul ignore next */cov_q0sdvsm27.b[6][0]++;cov_q0sdvsm27.s[41]++;oneMountain = mountain.id;} else /* istanbul ignore next */{cov_q0sdvsm27.b[6][1]++;}cov_q0sdvsm27.s[42]++;\n      break;\n    } /* istanbul ignore next */cov_q0sdvsm27.s[43]++;\n    if (!request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[7][0]++;cov_q0sdvsm27.s[44]++;\n      sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[45]++;\n      logger.log('info', `Deletion requested from database, but ${request.url.query.id} not found.`); /* istanbul ignore next */cov_q0sdvsm27.s[46]++;\n      return;\n    } else /* istanbul ignore next */{cov_q0sdvsm27.b[7][1]++;}\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[5][1]++;}cov_q0sdvsm27.s[47]++;\n  sendStatus(response, 204, 'Deleted from database.'); /* istanbul ignore next */cov_q0sdvsm27.s[48]++;\n  logger.log('info', `User deleted ${request.url.query.id} from database.`);\n}","timestamp":"2017-12-08T02:00:55.327Z"}
{"level":"info","message":"Server is online at port 3000","timestamp":"2017-12-08T02:00:55.374Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T02:00:55.422Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T02:00:55.423Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[30]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[31]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T02:00:55.423Z"}
{"level":"info","message":"Responding with a 200 code and the following data.","timestamp":"2017-12-08T02:00:55.427Z"}
{"id":"a061f0f0-dbbb-11e7-85f8-11f50bc6851d","name":"Mt. Evans","location":"Colorado","elevation":"14,235","level":"info","message":"","timestamp":"2017-12-08T02:00:55.427Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T02:00:55.436Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T02:00:55.437Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[5]++;cov_q0sdvsm27.s[33]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;cov_q0sdvsm27.s[34]++;\n    storage.fetchItem(request.url.query.id).\n    then(mountain => {/* istanbul ignore next */cov_q0sdvsm27.f[6]++;cov_q0sdvsm27.s[35]++;\n      sendJSON(response, 200, mountains);\n    }).\n    catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[7]++;cov_q0sdvsm27.s[36]++;\n      sendStatus(response, 404, 'id not found');\n    });\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}\n}","timestamp":"2017-12-08T02:00:55.437Z"}
{"level":"info","message":"Responding with a 404 code due to id not found.","timestamp":"2017-12-08T02:00:55.438Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T02:00:55.441Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T02:00:55.442Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/lib/request-parser.js:34:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-08T02:00:55.442Z"}
{"level":"info","message":"Adding an POST url and callback","timestamp":"2017-12-08T02:02:34.274Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T02:02:34.274Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[30]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[31]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T02:02:34.274Z"}
{"level":"info","message":"Adding an GET url and callback","timestamp":"2017-12-08T02:02:34.275Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T02:02:34.275Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[5]++;cov_q0sdvsm27.s[33]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;cov_q0sdvsm27.s[34]++;\n    storage.fetchItem(request.url.query.id).\n    then(mountain => {/* istanbul ignore next */cov_q0sdvsm27.f[6]++;cov_q0sdvsm27.s[35]++;\n      sendJSON(response, 200, mountains);\n    }).\n    catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[7]++;cov_q0sdvsm27.s[36]++;\n      sendStatus(response, 404, 'id not found');\n    });\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}\n}","timestamp":"2017-12-08T02:02:34.275Z"}
{"level":"info","message":"Adding an DELETE url and callback","timestamp":"2017-12-08T02:02:34.275Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T02:02:34.275Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[8]++;cov_q0sdvsm27.s[38]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[5][0]++;\n    let oneMountain; /* istanbul ignore next */cov_q0sdvsm27.s[39]++;\n    for (let mountain of mountains) {/* istanbul ignore next */cov_q0sdvsm27.s[40]++;\n      if (request.url.query.id === mountain.id)\n        {/* istanbul ignore next */cov_q0sdvsm27.b[6][0]++;cov_q0sdvsm27.s[41]++;oneMountain = mountain.id;} else /* istanbul ignore next */{cov_q0sdvsm27.b[6][1]++;}cov_q0sdvsm27.s[42]++;\n      break;\n    } /* istanbul ignore next */cov_q0sdvsm27.s[43]++;\n    if (!request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[7][0]++;cov_q0sdvsm27.s[44]++;\n      sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[45]++;\n      logger.log('info', `Deletion requested from database, but ${request.url.query.id} not found.`); /* istanbul ignore next */cov_q0sdvsm27.s[46]++;\n      return;\n    } else /* istanbul ignore next */{cov_q0sdvsm27.b[7][1]++;}\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[5][1]++;}cov_q0sdvsm27.s[47]++;\n  sendStatus(response, 204, 'Deleted from database.'); /* istanbul ignore next */cov_q0sdvsm27.s[48]++;\n  logger.log('info', `User deleted ${request.url.query.id} from database.`);\n}","timestamp":"2017-12-08T02:02:34.275Z"}
{"level":"info","message":"Server is online at port 3000","timestamp":"2017-12-08T02:02:34.343Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T02:02:34.394Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T02:02:34.395Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[5]++;cov_q0sdvsm27.s[33]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;cov_q0sdvsm27.s[34]++;\n    storage.fetchItem(request.url.query.id).\n    then(mountain => {/* istanbul ignore next */cov_q0sdvsm27.f[6]++;cov_q0sdvsm27.s[35]++;\n      sendJSON(response, 200, mountains);\n    }).\n    catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[7]++;cov_q0sdvsm27.s[36]++;\n      sendStatus(response, 404, 'id not found');\n    });\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}\n}","timestamp":"2017-12-08T02:02:34.395Z"}
{"level":"info","message":"Responding with a 404 code due to id not found.","timestamp":"2017-12-08T02:02:34.397Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T02:02:34.404Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T02:02:34.405Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/lib/request-parser.js:34:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-08T02:02:34.405Z"}
{"level":"info","message":"Adding an POST url and callback","timestamp":"2017-12-08T02:05:55.517Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T02:05:55.518Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[30]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[31]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T02:05:55.518Z"}
{"level":"info","message":"Adding an GET url and callback","timestamp":"2017-12-08T02:05:55.518Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T02:05:55.518Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[5]++;cov_q0sdvsm27.s[33]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;cov_q0sdvsm27.s[34]++;\n    storage.fetchItem(request.url.query.id).\n    then(mountain => {/* istanbul ignore next */cov_q0sdvsm27.f[6]++;cov_q0sdvsm27.s[35]++;\n      sendJSON(response, 200, mountains);\n    }).\n    catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[7]++;cov_q0sdvsm27.s[36]++;\n      sendStatus(response, 404, 'id not found');\n    });\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}\n}","timestamp":"2017-12-08T02:05:55.518Z"}
{"level":"info","message":"Adding an DELETE url and callback","timestamp":"2017-12-08T02:05:55.518Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T02:05:55.518Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[8]++;cov_q0sdvsm27.s[38]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[5][0]++;\n    let oneMountain; /* istanbul ignore next */cov_q0sdvsm27.s[39]++;\n    for (let mountain of mountains) {/* istanbul ignore next */cov_q0sdvsm27.s[40]++;\n      if (request.url.query.id === mountain.id)\n        {/* istanbul ignore next */cov_q0sdvsm27.b[6][0]++;cov_q0sdvsm27.s[41]++;oneMountain = mountain.id;} else /* istanbul ignore next */{cov_q0sdvsm27.b[6][1]++;}cov_q0sdvsm27.s[42]++;\n      break;\n    } /* istanbul ignore next */cov_q0sdvsm27.s[43]++;\n    if (!request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[7][0]++;cov_q0sdvsm27.s[44]++;\n      sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[45]++;\n      logger.log('info', `Deletion requested from database, but ${request.url.query.id} not found.`); /* istanbul ignore next */cov_q0sdvsm27.s[46]++;\n      return;\n    } else /* istanbul ignore next */{cov_q0sdvsm27.b[7][1]++;}\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[5][1]++;}cov_q0sdvsm27.s[47]++;\n  sendStatus(response, 204, 'Deleted from database.'); /* istanbul ignore next */cov_q0sdvsm27.s[48]++;\n  logger.log('info', `User deleted ${request.url.query.id} from database.`);\n}","timestamp":"2017-12-08T02:05:55.518Z"}
{"level":"info","message":"Server is online at port 3000","timestamp":"2017-12-08T02:05:55.584Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T02:05:55.635Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T02:05:55.636Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[30]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[31]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T02:05:55.636Z"}
{"level":"info","message":"Responding with a 200 code and the following data.","timestamp":"2017-12-08T02:05:55.639Z"}
{"id":"5352f650-dbbc-11e7-96e9-3b9820e50611","name":"Mt. Evans","location":"Colorado","elevation":"14,235","level":"info","message":"","timestamp":"2017-12-08T02:05:55.639Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T02:05:55.649Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T02:05:55.649Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[5]++;cov_q0sdvsm27.s[33]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;cov_q0sdvsm27.s[34]++;\n    storage.fetchItem(request.url.query.id).\n    then(mountain => {/* istanbul ignore next */cov_q0sdvsm27.f[6]++;cov_q0sdvsm27.s[35]++;\n      sendJSON(response, 200, mountains);\n    }).\n    catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[7]++;cov_q0sdvsm27.s[36]++;\n      sendStatus(response, 404, 'id not found');\n    });\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}\n}","timestamp":"2017-12-08T02:05:55.650Z"}
{"level":"info","message":"Responding with a 404 code due to id not found.","timestamp":"2017-12-08T02:05:55.651Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T02:05:55.654Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T02:05:55.655Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/lib/request-parser.js:34:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-08T02:05:55.655Z"}
{"level":"info","message":"Adding an POST url and callback","timestamp":"2017-12-08T02:06:51.637Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T02:06:51.638Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[30]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[31]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T02:06:51.638Z"}
{"level":"info","message":"Adding an GET url and callback","timestamp":"2017-12-08T02:06:51.638Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T02:06:51.638Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[5]++;cov_q0sdvsm27.s[33]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;cov_q0sdvsm27.s[34]++;\n    storage.fetchItem(request.url.query.id).\n    then(mountain => {/* istanbul ignore next */cov_q0sdvsm27.f[6]++;cov_q0sdvsm27.s[35]++;\n      sendJSON(response, 200, mountains);\n    }).\n    catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[7]++;cov_q0sdvsm27.s[36]++;\n      sendStatus(response, 404, 'id not found');\n    });\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}\n}","timestamp":"2017-12-08T02:06:51.638Z"}
{"level":"info","message":"Adding an DELETE url and callback","timestamp":"2017-12-08T02:06:51.638Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T02:06:51.638Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[8]++;cov_q0sdvsm27.s[38]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[5][0]++;\n    let oneMountain; /* istanbul ignore next */cov_q0sdvsm27.s[39]++;\n    for (let mountain of mountains) {/* istanbul ignore next */cov_q0sdvsm27.s[40]++;\n      if (request.url.query.id === mountain.id)\n        {/* istanbul ignore next */cov_q0sdvsm27.b[6][0]++;cov_q0sdvsm27.s[41]++;oneMountain = mountain.id;} else /* istanbul ignore next */{cov_q0sdvsm27.b[6][1]++;}cov_q0sdvsm27.s[42]++;\n      break;\n    } /* istanbul ignore next */cov_q0sdvsm27.s[43]++;\n    if (!request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[7][0]++;cov_q0sdvsm27.s[44]++;\n      sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[45]++;\n      logger.log('info', `Deletion requested from database, but ${request.url.query.id} not found.`); /* istanbul ignore next */cov_q0sdvsm27.s[46]++;\n      return;\n    } else /* istanbul ignore next */{cov_q0sdvsm27.b[7][1]++;}\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[5][1]++;}cov_q0sdvsm27.s[47]++;\n  sendStatus(response, 204, 'Deleted from database.'); /* istanbul ignore next */cov_q0sdvsm27.s[48]++;\n  logger.log('info', `User deleted ${request.url.query.id} from database.`);\n}","timestamp":"2017-12-08T02:06:51.638Z"}
{"level":"info","message":"Server is online at port 3000","timestamp":"2017-12-08T02:06:51.689Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T02:06:51.739Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T02:06:51.740Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[30]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[31]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T02:06:51.740Z"}
{"level":"info","message":"Responding with a 200 code and the following data.","timestamp":"2017-12-08T02:06:51.743Z"}
{"id":"74c399c0-dbbc-11e7-affe-edd3e157f7a7","name":"Mt. Evans","location":"Colorado","elevation":"14,235","level":"info","message":"","timestamp":"2017-12-08T02:06:51.744Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T02:06:51.753Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T02:06:51.754Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[5]++;cov_q0sdvsm27.s[33]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;cov_q0sdvsm27.s[34]++;\n    storage.fetchItem(request.url.query.id).\n    then(mountain => {/* istanbul ignore next */cov_q0sdvsm27.f[6]++;cov_q0sdvsm27.s[35]++;\n      sendJSON(response, 200, mountains);\n    }).\n    catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[7]++;cov_q0sdvsm27.s[36]++;\n      sendStatus(response, 404, 'id not found');\n    });\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}\n}","timestamp":"2017-12-08T02:06:51.754Z"}
{"level":"info","message":"Responding with a 404 code due to id not found.","timestamp":"2017-12-08T02:06:51.755Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T02:06:51.758Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T02:06:51.759Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/lib/request-parser.js:34:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-08T02:06:51.759Z"}
{"level":"info","message":"Adding an POST url and callback","timestamp":"2017-12-08T02:07:06.101Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T02:07:06.101Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[30]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[31]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T02:07:06.101Z"}
{"level":"info","message":"Adding an GET url and callback","timestamp":"2017-12-08T02:07:06.101Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T02:07:06.102Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[5]++;cov_q0sdvsm27.s[33]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;cov_q0sdvsm27.s[34]++;\n    storage.fetchItem(request.url.query.id).\n    then(mountain => {/* istanbul ignore next */cov_q0sdvsm27.f[6]++;cov_q0sdvsm27.s[35]++;\n      sendJSON(response, 200, mountains);\n    }).\n    catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[7]++;cov_q0sdvsm27.s[36]++;\n      sendStatus(response, 404, 'id not found');\n    });\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}\n}","timestamp":"2017-12-08T02:07:06.102Z"}
{"level":"info","message":"Adding an DELETE url and callback","timestamp":"2017-12-08T02:07:06.102Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T02:07:06.102Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[8]++;cov_q0sdvsm27.s[38]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[5][0]++;\n    let oneMountain; /* istanbul ignore next */cov_q0sdvsm27.s[39]++;\n    for (let mountain of mountains) {/* istanbul ignore next */cov_q0sdvsm27.s[40]++;\n      if (request.url.query.id === mountain.id)\n        {/* istanbul ignore next */cov_q0sdvsm27.b[6][0]++;cov_q0sdvsm27.s[41]++;oneMountain = mountain.id;} else /* istanbul ignore next */{cov_q0sdvsm27.b[6][1]++;}cov_q0sdvsm27.s[42]++;\n      break;\n    } /* istanbul ignore next */cov_q0sdvsm27.s[43]++;\n    if (!request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[7][0]++;cov_q0sdvsm27.s[44]++;\n      sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[45]++;\n      logger.log('info', `Deletion requested from database, but ${request.url.query.id} not found.`); /* istanbul ignore next */cov_q0sdvsm27.s[46]++;\n      return;\n    } else /* istanbul ignore next */{cov_q0sdvsm27.b[7][1]++;}\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[5][1]++;}cov_q0sdvsm27.s[47]++;\n  sendStatus(response, 204, 'Deleted from database.'); /* istanbul ignore next */cov_q0sdvsm27.s[48]++;\n  logger.log('info', `User deleted ${request.url.query.id} from database.`);\n}","timestamp":"2017-12-08T02:07:06.102Z"}
{"level":"info","message":"Server is online at port 3000","timestamp":"2017-12-08T02:07:06.150Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T02:07:06.200Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T02:07:06.201Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[30]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[31]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T02:07:06.201Z"}
{"level":"info","message":"Responding with a 200 code and the following data.","timestamp":"2017-12-08T02:07:06.204Z"}
{"id":"7d622c90-dbbc-11e7-8e2f-331da803b7ca","name":"Mt. Evans","location":"Colorado","elevation":"14,235","level":"info","message":"","timestamp":"2017-12-08T02:07:06.205Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T02:07:06.211Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T02:07:06.212Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[5]++;cov_q0sdvsm27.s[33]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;cov_q0sdvsm27.s[34]++;\n    storage.fetchItem(request.url.query.id).\n    then(mountain => {/* istanbul ignore next */cov_q0sdvsm27.f[6]++;cov_q0sdvsm27.s[35]++;\n      sendJSON(response, 200, mountains);\n    }).\n    catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[7]++;cov_q0sdvsm27.s[36]++;\n      sendStatus(response, 404, 'id not found');\n    });\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}\n}","timestamp":"2017-12-08T02:07:06.212Z"}
{"level":"info","message":"Responding with a 404 code due to id not found.","timestamp":"2017-12-08T02:07:06.213Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T02:07:06.217Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T02:07:06.217Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/lib/request-parser.js:34:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-08T02:07:06.217Z"}
{"level":"info","message":"Adding an POST url and callback","timestamp":"2017-12-08T02:07:36.022Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T02:07:36.023Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[30]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[31]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T02:07:36.023Z"}
{"level":"info","message":"Adding an GET url and callback","timestamp":"2017-12-08T02:07:36.023Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T02:07:36.023Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[5]++;cov_q0sdvsm27.s[33]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;cov_q0sdvsm27.s[34]++;\n    storage.fetchItem(request.url.query.id).\n    then(mountain => {/* istanbul ignore next */cov_q0sdvsm27.f[6]++;cov_q0sdvsm27.s[35]++;\n      sendJSON(response, 200, mountains);\n    }).\n    catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[7]++;cov_q0sdvsm27.s[36]++;\n      sendStatus(response, 404, 'id not found');\n    });\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}\n}","timestamp":"2017-12-08T02:07:36.023Z"}
{"level":"info","message":"Adding an DELETE url and callback","timestamp":"2017-12-08T02:07:36.023Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T02:07:36.023Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[8]++;cov_q0sdvsm27.s[38]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[5][0]++;\n    let oneMountain; /* istanbul ignore next */cov_q0sdvsm27.s[39]++;\n    for (let mountain of mountains) {/* istanbul ignore next */cov_q0sdvsm27.s[40]++;\n      if (request.url.query.id === mountain.id)\n        {/* istanbul ignore next */cov_q0sdvsm27.b[6][0]++;cov_q0sdvsm27.s[41]++;oneMountain = mountain.id;} else /* istanbul ignore next */{cov_q0sdvsm27.b[6][1]++;}cov_q0sdvsm27.s[42]++;\n      break;\n    } /* istanbul ignore next */cov_q0sdvsm27.s[43]++;\n    if (!request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[7][0]++;cov_q0sdvsm27.s[44]++;\n      sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[45]++;\n      logger.log('info', `Deletion requested from database, but ${request.url.query.id} not found.`); /* istanbul ignore next */cov_q0sdvsm27.s[46]++;\n      return;\n    } else /* istanbul ignore next */{cov_q0sdvsm27.b[7][1]++;}\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[5][1]++;}cov_q0sdvsm27.s[47]++;\n  sendStatus(response, 204, 'Deleted from database.'); /* istanbul ignore next */cov_q0sdvsm27.s[48]++;\n  logger.log('info', `User deleted ${request.url.query.id} from database.`);\n}","timestamp":"2017-12-08T02:07:36.023Z"}
{"level":"info","message":"Server is online at port 3000","timestamp":"2017-12-08T02:07:36.074Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T02:07:36.125Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T02:07:36.126Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[30]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[31]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T02:07:36.126Z"}
{"level":"info","message":"Responding with a 200 code and the following data.","timestamp":"2017-12-08T02:07:36.129Z"}
{"id":"8f385de0-dbbc-11e7-a63c-83f924070146","name":"Mt. Evans","location":"Colorado","elevation":"14,235","level":"info","message":"","timestamp":"2017-12-08T02:07:36.129Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T02:07:36.136Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T02:07:36.137Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[5]++;cov_q0sdvsm27.s[33]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;cov_q0sdvsm27.s[34]++;\n    storage.fetchItem(request.url.query.id).\n    then(mountain => {/* istanbul ignore next */cov_q0sdvsm27.f[6]++;cov_q0sdvsm27.s[35]++;\n      sendJSON(response, 200, mountains);\n    }).\n    catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[7]++;cov_q0sdvsm27.s[36]++;\n      sendStatus(response, 404, 'id not found');\n    });\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}\n}","timestamp":"2017-12-08T02:07:36.137Z"}
{"level":"info","message":"Responding with a 404 code due to id not found.","timestamp":"2017-12-08T02:07:36.138Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T02:07:36.141Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T02:07:36.142Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/lib/request-parser.js:34:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-08T02:07:36.142Z"}
{"level":"info","message":"Adding an POST url and callback","timestamp":"2017-12-08T02:07:56.153Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T02:07:56.154Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[30]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[31]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T02:07:56.154Z"}
{"level":"info","message":"Adding an GET url and callback","timestamp":"2017-12-08T02:07:56.154Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T02:07:56.154Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[5]++;cov_q0sdvsm27.s[33]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;cov_q0sdvsm27.s[34]++;\n    storage.fetchItem(request.url.query.id).\n    then(mountain => {/* istanbul ignore next */cov_q0sdvsm27.f[6]++;cov_q0sdvsm27.s[35]++;\n      sendJSON(response, 200, mountains);\n    }).\n    catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[7]++;cov_q0sdvsm27.s[36]++;\n      sendStatus(response, 404, 'id not found');\n    });\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}\n}","timestamp":"2017-12-08T02:07:56.154Z"}
{"level":"info","message":"Adding an DELETE url and callback","timestamp":"2017-12-08T02:07:56.154Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T02:07:56.154Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[8]++;cov_q0sdvsm27.s[38]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[5][0]++;\n    let oneMountain; /* istanbul ignore next */cov_q0sdvsm27.s[39]++;\n    for (let mountain of mountains) {/* istanbul ignore next */cov_q0sdvsm27.s[40]++;\n      if (request.url.query.id === mountain.id)\n        {/* istanbul ignore next */cov_q0sdvsm27.b[6][0]++;cov_q0sdvsm27.s[41]++;oneMountain = mountain.id;} else /* istanbul ignore next */{cov_q0sdvsm27.b[6][1]++;}cov_q0sdvsm27.s[42]++;\n      break;\n    } /* istanbul ignore next */cov_q0sdvsm27.s[43]++;\n    if (!request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[7][0]++;cov_q0sdvsm27.s[44]++;\n      sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[45]++;\n      logger.log('info', `Deletion requested from database, but ${request.url.query.id} not found.`); /* istanbul ignore next */cov_q0sdvsm27.s[46]++;\n      return;\n    } else /* istanbul ignore next */{cov_q0sdvsm27.b[7][1]++;}\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[5][1]++;}cov_q0sdvsm27.s[47]++;\n  sendStatus(response, 204, 'Deleted from database.'); /* istanbul ignore next */cov_q0sdvsm27.s[48]++;\n  logger.log('info', `User deleted ${request.url.query.id} from database.`);\n}","timestamp":"2017-12-08T02:07:56.154Z"}
{"level":"info","message":"Server is online at port 3000","timestamp":"2017-12-08T02:07:56.203Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T02:07:56.253Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T02:07:56.255Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[30]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[31]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T02:07:56.255Z"}
{"level":"info","message":"Responding with a 200 code and the following data.","timestamp":"2017-12-08T02:07:56.259Z"}
{"id":"9b37cef0-dbbc-11e7-9511-5da594c3430d","name":"Mt. Evans","location":"Colorado","elevation":"14,235","level":"info","message":"","timestamp":"2017-12-08T02:07:56.259Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T02:07:56.267Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T02:07:56.268Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[5]++;cov_q0sdvsm27.s[33]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;cov_q0sdvsm27.s[34]++;\n    storage.fetchItem(request.url.query.id).\n    then(mountain => {/* istanbul ignore next */cov_q0sdvsm27.f[6]++;cov_q0sdvsm27.s[35]++;\n      sendJSON(response, 200, mountains);\n    }).\n    catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[7]++;cov_q0sdvsm27.s[36]++;\n      sendStatus(response, 404, 'id not found');\n    });\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}\n}","timestamp":"2017-12-08T02:07:56.268Z"}
{"level":"info","message":"Responding with a 404 code due to id not found.","timestamp":"2017-12-08T02:07:56.269Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T02:07:56.272Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T02:07:56.273Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/lib/request-parser.js:34:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-08T02:07:56.273Z"}
{"level":"info","message":"Adding an POST url and callback","timestamp":"2017-12-08T02:08:16.324Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T02:08:16.324Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[30]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[31]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T02:08:16.325Z"}
{"level":"info","message":"Adding an GET url and callback","timestamp":"2017-12-08T02:08:16.325Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T02:08:16.325Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[5]++;cov_q0sdvsm27.s[33]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;cov_q0sdvsm27.s[34]++;\n    storage.fetchItem(request.url.query.id).\n    then(mountain => {/* istanbul ignore next */cov_q0sdvsm27.f[6]++;cov_q0sdvsm27.s[35]++;\n      sendJSON(response, 200, mountains);\n    }).\n    catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[7]++;cov_q0sdvsm27.s[36]++;\n      sendStatus(response, 404, 'id not found');\n    });\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}\n}","timestamp":"2017-12-08T02:08:16.325Z"}
{"level":"info","message":"Adding an DELETE url and callback","timestamp":"2017-12-08T02:08:16.325Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T02:08:16.325Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[8]++;cov_q0sdvsm27.s[38]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[5][0]++;\n    let oneMountain; /* istanbul ignore next */cov_q0sdvsm27.s[39]++;\n    for (let mountain of mountains) {/* istanbul ignore next */cov_q0sdvsm27.s[40]++;\n      if (request.url.query.id === mountain.id)\n        {/* istanbul ignore next */cov_q0sdvsm27.b[6][0]++;cov_q0sdvsm27.s[41]++;oneMountain = mountain.id;} else /* istanbul ignore next */{cov_q0sdvsm27.b[6][1]++;}cov_q0sdvsm27.s[42]++;\n      break;\n    } /* istanbul ignore next */cov_q0sdvsm27.s[43]++;\n    if (!request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[7][0]++;cov_q0sdvsm27.s[44]++;\n      sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[45]++;\n      logger.log('info', `Deletion requested from database, but ${request.url.query.id} not found.`); /* istanbul ignore next */cov_q0sdvsm27.s[46]++;\n      return;\n    } else /* istanbul ignore next */{cov_q0sdvsm27.b[7][1]++;}\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[5][1]++;}cov_q0sdvsm27.s[47]++;\n  sendStatus(response, 204, 'Deleted from database.'); /* istanbul ignore next */cov_q0sdvsm27.s[48]++;\n  logger.log('info', `User deleted ${request.url.query.id} from database.`);\n}","timestamp":"2017-12-08T02:08:16.325Z"}
{"level":"info","message":"Server is online at port 3000","timestamp":"2017-12-08T02:08:16.374Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T02:08:16.424Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T02:08:16.425Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[30]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[31]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T02:08:16.425Z"}
{"level":"info","message":"Responding with a 200 code and the following data.","timestamp":"2017-12-08T02:08:16.428Z"}
{"id":"a73d8190-dbbc-11e7-ae09-2ba74e062394","name":"Mt. Evans","location":"Colorado","elevation":"14,235","level":"info","message":"","timestamp":"2017-12-08T02:08:16.428Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T02:08:16.437Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T02:08:16.438Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[5]++;cov_q0sdvsm27.s[33]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;cov_q0sdvsm27.s[34]++;\n    storage.fetchItem(request.url.query.id).\n    then(mountain => {/* istanbul ignore next */cov_q0sdvsm27.f[6]++;cov_q0sdvsm27.s[35]++;\n      sendJSON(response, 200, mountains);\n    }).\n    catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[7]++;cov_q0sdvsm27.s[36]++;\n      sendStatus(response, 404, 'id not found');\n    });\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}\n}","timestamp":"2017-12-08T02:08:16.438Z"}
{"level":"info","message":"Responding with a 404 code due to id not found.","timestamp":"2017-12-08T02:08:16.439Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T02:08:16.442Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T02:08:16.442Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/lib/request-parser.js:34:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-08T02:08:16.442Z"}
{"level":"info","message":"Adding an POST url and callback","timestamp":"2017-12-08T02:08:26.778Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T02:08:26.778Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[30]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[31]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T02:08:26.778Z"}
{"level":"info","message":"Adding an GET url and callback","timestamp":"2017-12-08T02:08:26.779Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T02:08:26.779Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[5]++;cov_q0sdvsm27.s[33]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;cov_q0sdvsm27.s[34]++;\n    storage.fetchItem(request.url.query.id).\n    then(mountain => {/* istanbul ignore next */cov_q0sdvsm27.f[6]++;cov_q0sdvsm27.s[35]++;\n      sendJSON(response, 200, mountains);\n    }).\n    catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[7]++;cov_q0sdvsm27.s[36]++;\n      sendStatus(response, 404, 'id not found');\n    });\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}\n}","timestamp":"2017-12-08T02:08:26.779Z"}
{"level":"info","message":"Adding an DELETE url and callback","timestamp":"2017-12-08T02:08:26.779Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T02:08:26.779Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[8]++;cov_q0sdvsm27.s[38]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[5][0]++;\n    let oneMountain; /* istanbul ignore next */cov_q0sdvsm27.s[39]++;\n    for (let mountain of mountains) {/* istanbul ignore next */cov_q0sdvsm27.s[40]++;\n      if (request.url.query.id === mountain.id)\n        {/* istanbul ignore next */cov_q0sdvsm27.b[6][0]++;cov_q0sdvsm27.s[41]++;oneMountain = mountain.id;} else /* istanbul ignore next */{cov_q0sdvsm27.b[6][1]++;}cov_q0sdvsm27.s[42]++;\n      break;\n    } /* istanbul ignore next */cov_q0sdvsm27.s[43]++;\n    if (!request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[7][0]++;cov_q0sdvsm27.s[44]++;\n      sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[45]++;\n      logger.log('info', `Deletion requested from database, but ${request.url.query.id} not found.`); /* istanbul ignore next */cov_q0sdvsm27.s[46]++;\n      return;\n    } else /* istanbul ignore next */{cov_q0sdvsm27.b[7][1]++;}\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[5][1]++;}cov_q0sdvsm27.s[47]++;\n  sendStatus(response, 204, 'Deleted from database.'); /* istanbul ignore next */cov_q0sdvsm27.s[48]++;\n  logger.log('info', `User deleted ${request.url.query.id} from database.`);\n}","timestamp":"2017-12-08T02:08:26.779Z"}
{"level":"info","message":"Server is online at port 3000","timestamp":"2017-12-08T02:08:26.826Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T02:08:26.875Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T02:08:26.876Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[30]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[31]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T02:08:26.876Z"}
{"level":"info","message":"Responding with a 200 code and the following data.","timestamp":"2017-12-08T02:08:26.879Z"}
{"id":"ad7833c0-dbbc-11e7-a9b1-9579f5001942","name":"Mt. Evans","location":"Colorado","elevation":"14,235","level":"info","message":"","timestamp":"2017-12-08T02:08:26.879Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T02:08:26.891Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T02:08:26.891Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[5]++;cov_q0sdvsm27.s[33]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;cov_q0sdvsm27.s[34]++;\n    storage.fetchItem(request.url.query.id).\n    then(mountain => {/* istanbul ignore next */cov_q0sdvsm27.f[6]++;cov_q0sdvsm27.s[35]++;\n      sendJSON(response, 200, mountains);\n    }).\n    catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[7]++;cov_q0sdvsm27.s[36]++;\n      sendStatus(response, 404, 'id not found');\n    });\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}\n}","timestamp":"2017-12-08T02:08:26.892Z"}
{"level":"info","message":"Responding with a 404 code due to id not found.","timestamp":"2017-12-08T02:08:26.892Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T02:08:26.896Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T02:08:26.896Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/lib/request-parser.js:34:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-08T02:08:26.896Z"}
{"level":"info","message":"Adding an POST url and callback","timestamp":"2017-12-08T02:11:07.431Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T02:11:07.432Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[30]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[31]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T02:11:07.432Z"}
{"level":"info","message":"Adding an GET url and callback","timestamp":"2017-12-08T02:11:07.432Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T02:11:07.432Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[5]++;cov_q0sdvsm27.s[33]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;cov_q0sdvsm27.s[34]++;\n    storage.fetchItem(request.url.query.id).\n    then(mountain => {/* istanbul ignore next */cov_q0sdvsm27.f[6]++;cov_q0sdvsm27.s[35]++;\n      sendJSON(response, 200, mountains);\n    }).\n    catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[7]++;cov_q0sdvsm27.s[36]++;\n      sendStatus(response, 404, 'id not found');\n    });\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}\n}","timestamp":"2017-12-08T02:11:07.432Z"}
{"level":"info","message":"Adding an DELETE url and callback","timestamp":"2017-12-08T02:11:07.432Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T02:11:07.432Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[8]++;cov_q0sdvsm27.s[38]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[5][0]++;\n    let oneMountain; /* istanbul ignore next */cov_q0sdvsm27.s[39]++;\n    for (let mountain of mountains) {/* istanbul ignore next */cov_q0sdvsm27.s[40]++;\n      if (request.url.query.id === mountain.id)\n        {/* istanbul ignore next */cov_q0sdvsm27.b[6][0]++;cov_q0sdvsm27.s[41]++;oneMountain = mountain.id;} else /* istanbul ignore next */{cov_q0sdvsm27.b[6][1]++;}cov_q0sdvsm27.s[42]++;\n      break;\n    } /* istanbul ignore next */cov_q0sdvsm27.s[43]++;\n    if (!request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[7][0]++;cov_q0sdvsm27.s[44]++;\n      sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[45]++;\n      logger.log('info', `Deletion requested from database, but ${request.url.query.id} not found.`); /* istanbul ignore next */cov_q0sdvsm27.s[46]++;\n      return;\n    } else /* istanbul ignore next */{cov_q0sdvsm27.b[7][1]++;}\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[5][1]++;}cov_q0sdvsm27.s[47]++;\n  sendStatus(response, 204, 'Deleted from database.'); /* istanbul ignore next */cov_q0sdvsm27.s[48]++;\n  logger.log('info', `User deleted ${request.url.query.id} from database.`);\n}","timestamp":"2017-12-08T02:11:07.432Z"}
{"level":"info","message":"Server is online at port 3000","timestamp":"2017-12-08T02:11:07.499Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T02:11:07.548Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T02:11:07.549Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[30]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[31]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T02:11:07.549Z"}
{"level":"info","message":"Responding with a 200 code and the following data.","timestamp":"2017-12-08T02:11:07.553Z"}
{"id":"0d3d1be0-dbbd-11e7-9f44-81032e5cba75","name":"Mt. Evans","location":"Colorado","elevation":"14,235","level":"info","message":"","timestamp":"2017-12-08T02:11:07.553Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T02:11:07.562Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T02:11:07.563Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[5]++;cov_q0sdvsm27.s[33]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;cov_q0sdvsm27.s[34]++;\n    storage.fetchItem(request.url.query.id).\n    then(mountain => {/* istanbul ignore next */cov_q0sdvsm27.f[6]++;cov_q0sdvsm27.s[35]++;\n      sendJSON(response, 200, mountains);\n    }).\n    catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[7]++;cov_q0sdvsm27.s[36]++;\n      sendStatus(response, 404, 'id not found');\n    });\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}\n}","timestamp":"2017-12-08T02:11:07.563Z"}
{"level":"info","message":"Responding with a 404 code due to id not found.","timestamp":"2017-12-08T02:11:07.564Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T02:11:07.567Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T02:11:07.567Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/lib/request-parser.js:34:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-08T02:11:07.567Z"}
{"level":"info","message":"Adding an POST url and callback","timestamp":"2017-12-08T02:11:22.112Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T02:11:22.113Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[30]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[31]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T02:11:22.113Z"}
{"level":"info","message":"Adding an GET url and callback","timestamp":"2017-12-08T02:11:22.113Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T02:11:22.113Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[5]++;cov_q0sdvsm27.s[33]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;cov_q0sdvsm27.s[34]++;\n    storage.fetchItem(request.url.query.id).\n    then(mountain => {/* istanbul ignore next */cov_q0sdvsm27.f[6]++;cov_q0sdvsm27.s[35]++;\n      sendJSON(response, 200, mountains);\n    }).\n    catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[7]++;cov_q0sdvsm27.s[36]++;\n      sendStatus(response, 404, 'id not found');\n    });\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}\n}","timestamp":"2017-12-08T02:11:22.113Z"}
{"level":"info","message":"Adding an DELETE url and callback","timestamp":"2017-12-08T02:11:22.113Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T02:11:22.113Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[8]++;cov_q0sdvsm27.s[38]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[5][0]++;\n    let oneMountain; /* istanbul ignore next */cov_q0sdvsm27.s[39]++;\n    for (let mountain of mountains) {/* istanbul ignore next */cov_q0sdvsm27.s[40]++;\n      if (request.url.query.id === mountain.id)\n        {/* istanbul ignore next */cov_q0sdvsm27.b[6][0]++;cov_q0sdvsm27.s[41]++;oneMountain = mountain.id;} else /* istanbul ignore next */{cov_q0sdvsm27.b[6][1]++;}cov_q0sdvsm27.s[42]++;\n      break;\n    } /* istanbul ignore next */cov_q0sdvsm27.s[43]++;\n    if (!request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[7][0]++;cov_q0sdvsm27.s[44]++;\n      sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[45]++;\n      logger.log('info', `Deletion requested from database, but ${request.url.query.id} not found.`); /* istanbul ignore next */cov_q0sdvsm27.s[46]++;\n      return;\n    } else /* istanbul ignore next */{cov_q0sdvsm27.b[7][1]++;}\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[5][1]++;}cov_q0sdvsm27.s[47]++;\n  sendStatus(response, 204, 'Deleted from database.'); /* istanbul ignore next */cov_q0sdvsm27.s[48]++;\n  logger.log('info', `User deleted ${request.url.query.id} from database.`);\n}","timestamp":"2017-12-08T02:11:22.113Z"}
{"level":"info","message":"Server is online at port 3000","timestamp":"2017-12-08T02:11:22.159Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T02:11:22.209Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T02:11:22.210Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[30]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[31]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T02:11:22.210Z"}
{"level":"info","message":"Responding with a 200 code and the following data.","timestamp":"2017-12-08T02:11:22.213Z"}
{"id":"15fa0c20-dbbd-11e7-ab0d-75dcbc99488d","name":"Mt. Evans","location":"Colorado","elevation":"14,235","level":"info","message":"","timestamp":"2017-12-08T02:11:22.213Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T02:11:22.224Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T02:11:22.224Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[5]++;cov_q0sdvsm27.s[33]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;cov_q0sdvsm27.s[34]++;\n    storage.fetchItem(request.url.query.id).\n    then(mountain => {/* istanbul ignore next */cov_q0sdvsm27.f[6]++;cov_q0sdvsm27.s[35]++;\n      sendJSON(response, 200, mountains);\n    }).\n    catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[7]++;cov_q0sdvsm27.s[36]++;\n      sendStatus(response, 404, 'id not found');\n    });\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}\n}","timestamp":"2017-12-08T02:11:22.224Z"}
{"level":"info","message":"Responding with a 404 code due to id not found.","timestamp":"2017-12-08T02:11:22.225Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T02:11:22.229Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T02:11:22.229Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/lib/request-parser.js:34:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-08T02:11:22.229Z"}
{"level":"info","message":"Adding an POST url and callback","timestamp":"2017-12-08T02:14:13.639Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T02:14:13.639Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[30]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[31]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T02:14:13.639Z"}
{"level":"info","message":"Adding an GET url and callback","timestamp":"2017-12-08T02:14:13.640Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T02:14:13.640Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[5]++;cov_q0sdvsm27.s[33]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;cov_q0sdvsm27.s[34]++;\n    storage.fetchItem(request.url.query.id).\n    then(mountain => {/* istanbul ignore next */cov_q0sdvsm27.f[6]++;cov_q0sdvsm27.s[35]++;\n      sendJSON(response, 200, mountains);\n    }).\n    catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[7]++;cov_q0sdvsm27.s[36]++;\n      sendStatus(response, 404, 'id not found');\n    });\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}\n}","timestamp":"2017-12-08T02:14:13.640Z"}
{"level":"info","message":"Adding an DELETE url and callback","timestamp":"2017-12-08T02:14:13.640Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T02:14:13.640Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[8]++;cov_q0sdvsm27.s[38]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[5][0]++;\n    let oneMountain; /* istanbul ignore next */cov_q0sdvsm27.s[39]++;\n    for (let mountain of mountains) {/* istanbul ignore next */cov_q0sdvsm27.s[40]++;\n      if (request.url.query.id === mountain.id)\n        {/* istanbul ignore next */cov_q0sdvsm27.b[6][0]++;cov_q0sdvsm27.s[41]++;oneMountain = mountain.id;} else /* istanbul ignore next */{cov_q0sdvsm27.b[6][1]++;}cov_q0sdvsm27.s[42]++;\n      break;\n    } /* istanbul ignore next */cov_q0sdvsm27.s[43]++;\n    if (!request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[7][0]++;cov_q0sdvsm27.s[44]++;\n      sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[45]++;\n      logger.log('info', `Deletion requested from database, but ${request.url.query.id} not found.`); /* istanbul ignore next */cov_q0sdvsm27.s[46]++;\n      return;\n    } else /* istanbul ignore next */{cov_q0sdvsm27.b[7][1]++;}\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[5][1]++;}cov_q0sdvsm27.s[47]++;\n  sendStatus(response, 204, 'Deleted from database.'); /* istanbul ignore next */cov_q0sdvsm27.s[48]++;\n  logger.log('info', `User deleted ${request.url.query.id} from database.`);\n}","timestamp":"2017-12-08T02:14:13.640Z"}
{"level":"info","message":"Server is online at port 3000","timestamp":"2017-12-08T02:14:13.710Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T02:14:13.761Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T02:14:13.762Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[30]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[31]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T02:14:13.762Z"}
{"level":"info","message":"Responding with a 200 code and the following data.","timestamp":"2017-12-08T02:14:13.765Z"}
{"id":"7c3ace20-dbbd-11e7-8fd4-ed7e0602d0ba","name":"Mt. Evans","location":"Colorado","elevation":"14,235","level":"info","message":"","timestamp":"2017-12-08T02:14:13.765Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T02:14:13.776Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T02:14:13.776Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[5]++;cov_q0sdvsm27.s[33]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;cov_q0sdvsm27.s[34]++;\n    storage.fetchItem(request.url.query.id).\n    then(mountain => {/* istanbul ignore next */cov_q0sdvsm27.f[6]++;cov_q0sdvsm27.s[35]++;\n      sendJSON(response, 200, mountains);\n    }).\n    catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[7]++;cov_q0sdvsm27.s[36]++;\n      sendStatus(response, 404, 'id not found');\n    });\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}\n}","timestamp":"2017-12-08T02:14:13.776Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T02:14:18.780Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T02:14:18.780Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/lib/request-parser.js:34:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-08T02:14:18.780Z"}
{"level":"info","message":"Adding an POST url and callback","timestamp":"2017-12-08T02:14:46.280Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T02:14:46.281Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[30]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[31]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T02:14:46.281Z"}
{"level":"info","message":"Adding an GET url and callback","timestamp":"2017-12-08T02:14:46.281Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T02:14:46.281Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[5]++;cov_q0sdvsm27.s[33]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;cov_q0sdvsm27.s[34]++;\n    storage.fetchItem(request.url.query.id).\n    then(mountain => {/* istanbul ignore next */cov_q0sdvsm27.f[6]++;cov_q0sdvsm27.s[35]++;\n      sendJSON(response, 200, mountains);\n    }).\n    catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[7]++;cov_q0sdvsm27.s[36]++;\n      sendStatus(response, 404, 'id not found');\n    });\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}\n}","timestamp":"2017-12-08T02:14:46.281Z"}
{"level":"info","message":"Adding an DELETE url and callback","timestamp":"2017-12-08T02:14:46.281Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T02:14:46.281Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[8]++;cov_q0sdvsm27.s[38]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[5][0]++;\n    let oneMountain; /* istanbul ignore next */cov_q0sdvsm27.s[39]++;\n    for (let mountain of mountains) {/* istanbul ignore next */cov_q0sdvsm27.s[40]++;\n      if (request.url.query.id === mountain.id)\n        {/* istanbul ignore next */cov_q0sdvsm27.b[6][0]++;cov_q0sdvsm27.s[41]++;oneMountain = mountain.id;} else /* istanbul ignore next */{cov_q0sdvsm27.b[6][1]++;}cov_q0sdvsm27.s[42]++;\n      break;\n    } /* istanbul ignore next */cov_q0sdvsm27.s[43]++;\n    if (!request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[7][0]++;cov_q0sdvsm27.s[44]++;\n      sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[45]++;\n      logger.log('info', `Deletion requested from database, but ${request.url.query.id} not found.`); /* istanbul ignore next */cov_q0sdvsm27.s[46]++;\n      return;\n    } else /* istanbul ignore next */{cov_q0sdvsm27.b[7][1]++;}\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[5][1]++;}cov_q0sdvsm27.s[47]++;\n  sendStatus(response, 204, 'Deleted from database.'); /* istanbul ignore next */cov_q0sdvsm27.s[48]++;\n  logger.log('info', `User deleted ${request.url.query.id} from database.`);\n}","timestamp":"2017-12-08T02:14:46.281Z"}
{"level":"info","message":"Server is online at port 3000","timestamp":"2017-12-08T02:14:46.330Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T02:14:46.379Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T02:14:46.380Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[30]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[31]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T02:14:46.380Z"}
{"level":"info","message":"Responding with a 200 code and the following data.","timestamp":"2017-12-08T02:14:46.384Z"}
{"id":"8fac11d0-dbbd-11e7-8ad6-bbd352a958a0","name":"Mt. Evans","location":"Colorado","elevation":"14,235","level":"info","message":"","timestamp":"2017-12-08T02:14:46.384Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T02:14:46.394Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T02:14:46.394Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[5]++;cov_q0sdvsm27.s[33]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;cov_q0sdvsm27.s[34]++;\n    storage.fetchItem(request.url.query.id).\n    then(mountain => {/* istanbul ignore next */cov_q0sdvsm27.f[6]++;cov_q0sdvsm27.s[35]++;\n      sendJSON(response, 200, mountains);\n    }).\n    catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[7]++;cov_q0sdvsm27.s[36]++;\n      sendStatus(response, 404, 'id not found');\n    });\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}\n}","timestamp":"2017-12-08T02:14:46.394Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T02:14:51.397Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T02:14:51.397Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/lib/request-parser.js:34:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-08T02:14:51.397Z"}
{"level":"info","message":"Adding an POST url and callback","timestamp":"2017-12-08T02:15:27.947Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T02:15:27.948Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[30]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[31]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T02:15:27.948Z"}
{"level":"info","message":"Adding an GET url and callback","timestamp":"2017-12-08T02:15:27.948Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T02:15:27.948Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[5]++;cov_q0sdvsm27.s[33]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;cov_q0sdvsm27.s[34]++;\n    storage.fetchItem(request.url.query.id).\n    then(mountain => {/* istanbul ignore next */cov_q0sdvsm27.f[6]++;cov_q0sdvsm27.s[35]++;\n      sendJSON(response, 200, mountains);\n    }).\n    catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[7]++;cov_q0sdvsm27.s[36]++;\n      sendStatus(response, 404, 'id not found');\n    });\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}\n}","timestamp":"2017-12-08T02:15:27.948Z"}
{"level":"info","message":"Adding an DELETE url and callback","timestamp":"2017-12-08T02:15:27.948Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T02:15:27.948Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[8]++;cov_q0sdvsm27.s[38]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[5][0]++;\n    let oneMountain; /* istanbul ignore next */cov_q0sdvsm27.s[39]++;\n    for (let mountain of mountains) {/* istanbul ignore next */cov_q0sdvsm27.s[40]++;\n      if (request.url.query.id === mountain.id)\n        {/* istanbul ignore next */cov_q0sdvsm27.b[6][0]++;cov_q0sdvsm27.s[41]++;oneMountain = mountain.id;} else /* istanbul ignore next */{cov_q0sdvsm27.b[6][1]++;}cov_q0sdvsm27.s[42]++;\n      break;\n    } /* istanbul ignore next */cov_q0sdvsm27.s[43]++;\n    if (!request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[7][0]++;cov_q0sdvsm27.s[44]++;\n      sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[45]++;\n      logger.log('info', `Deletion requested from database, but ${request.url.query.id} not found.`); /* istanbul ignore next */cov_q0sdvsm27.s[46]++;\n      return;\n    } else /* istanbul ignore next */{cov_q0sdvsm27.b[7][1]++;}\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[5][1]++;}cov_q0sdvsm27.s[47]++;\n  sendStatus(response, 204, 'Deleted from database.'); /* istanbul ignore next */cov_q0sdvsm27.s[48]++;\n  logger.log('info', `User deleted ${request.url.query.id} from database.`);\n}","timestamp":"2017-12-08T02:15:27.948Z"}
{"level":"info","message":"Server is online at port 3000","timestamp":"2017-12-08T02:15:28.018Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T02:15:28.069Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T02:15:28.070Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[30]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[31]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T02:15:28.070Z"}
{"level":"info","message":"Responding with a 200 code and the following data.","timestamp":"2017-12-08T02:15:28.074Z"}
{"id":"a8857570-dbbd-11e7-a488-b1d7bee96423","name":"Mt. Evans","location":"Colorado","elevation":"14,235","level":"info","message":"","timestamp":"2017-12-08T02:15:28.074Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T02:15:28.084Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T02:15:28.085Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[5]++;cov_q0sdvsm27.s[33]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;cov_q0sdvsm27.s[34]++;\n    storage.fetchItem(request.url.query.id).\n    then(mountain => {/* istanbul ignore next */cov_q0sdvsm27.f[6]++;cov_q0sdvsm27.s[35]++;\n      sendJSON(response, 200, mountains);\n    }).\n    catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[7]++;cov_q0sdvsm27.s[36]++;\n      sendStatus(response, 404, 'id not found');\n    });\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}\n}","timestamp":"2017-12-08T02:15:28.085Z"}
{"level":"info","message":"Responding with a 404 code due to id not found.","timestamp":"2017-12-08T02:15:28.086Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T02:15:28.089Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T02:15:28.090Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/lib/request-parser.js:34:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-08T02:15:28.090Z"}
{"level":"info","message":"Adding an POST url and callback","timestamp":"2017-12-08T02:16:16.488Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T02:16:16.488Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[30]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[31]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T02:16:16.488Z"}
{"level":"info","message":"Adding an GET url and callback","timestamp":"2017-12-08T02:16:16.489Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T02:16:16.489Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[5]++;cov_q0sdvsm27.s[33]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;cov_q0sdvsm27.s[34]++;\n    storage.fetchItem(request.url.query.id).\n    then(mountain => {/* istanbul ignore next */cov_q0sdvsm27.f[6]++;cov_q0sdvsm27.s[35]++;\n      sendJSON(response, 200, mountains);\n    }).\n    catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[7]++;cov_q0sdvsm27.s[36]++;\n      sendStatus(response, 404, 'id not found');\n    });\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}\n}","timestamp":"2017-12-08T02:16:16.489Z"}
{"level":"info","message":"Adding an DELETE url and callback","timestamp":"2017-12-08T02:16:16.489Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T02:16:16.489Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[8]++;cov_q0sdvsm27.s[38]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[5][0]++;\n    let oneMountain; /* istanbul ignore next */cov_q0sdvsm27.s[39]++;\n    for (let mountain of mountains) {/* istanbul ignore next */cov_q0sdvsm27.s[40]++;\n      if (request.url.query.id === mountain.id)\n        {/* istanbul ignore next */cov_q0sdvsm27.b[6][0]++;cov_q0sdvsm27.s[41]++;oneMountain = mountain.id;} else /* istanbul ignore next */{cov_q0sdvsm27.b[6][1]++;}cov_q0sdvsm27.s[42]++;\n      break;\n    } /* istanbul ignore next */cov_q0sdvsm27.s[43]++;\n    if (!request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[7][0]++;cov_q0sdvsm27.s[44]++;\n      sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[45]++;\n      logger.log('info', `Deletion requested from database, but ${request.url.query.id} not found.`); /* istanbul ignore next */cov_q0sdvsm27.s[46]++;\n      return;\n    } else /* istanbul ignore next */{cov_q0sdvsm27.b[7][1]++;}\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[5][1]++;}cov_q0sdvsm27.s[47]++;\n  sendStatus(response, 204, 'Deleted from database.'); /* istanbul ignore next */cov_q0sdvsm27.s[48]++;\n  logger.log('info', `User deleted ${request.url.query.id} from database.`);\n}","timestamp":"2017-12-08T02:16:16.489Z"}
{"level":"info","message":"Server is online at port 3000","timestamp":"2017-12-08T02:16:16.532Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T02:16:16.548Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T02:16:16.549Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[30]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[31]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T02:16:16.549Z"}
{"level":"info","message":"Responding with a 500 code due to SyntaxError: /Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/db.json: Unexpected end of JSON input.","timestamp":"2017-12-08T02:16:16.551Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T02:16:16.558Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T02:16:16.559Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[5]++;cov_q0sdvsm27.s[33]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;cov_q0sdvsm27.s[34]++;\n    storage.fetchItem(request.url.query.id).\n    then(mountain => {/* istanbul ignore next */cov_q0sdvsm27.f[6]++;cov_q0sdvsm27.s[35]++;\n      sendJSON(response, 200, mountains);\n    }).\n    catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[7]++;cov_q0sdvsm27.s[36]++;\n      sendStatus(response, 404, 'id not found');\n    });\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}\n}","timestamp":"2017-12-08T02:16:16.559Z"}
{"level":"info","message":"Responding with a 404 code due to id not found.","timestamp":"2017-12-08T02:16:16.559Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T02:16:16.562Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T02:16:16.563Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/lib/request-parser.js:34:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-08T02:16:16.563Z"}
{"level":"info","message":"Adding an POST url and callback","timestamp":"2017-12-08T02:16:33.261Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T02:16:33.262Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[30]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[31]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T02:16:33.262Z"}
{"level":"info","message":"Adding an GET url and callback","timestamp":"2017-12-08T02:16:33.262Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T02:16:33.262Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[5]++;cov_q0sdvsm27.s[33]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;cov_q0sdvsm27.s[34]++;\n    storage.fetchItem(request.url.query.id).\n    then(mountain => {/* istanbul ignore next */cov_q0sdvsm27.f[6]++;cov_q0sdvsm27.s[35]++;\n      sendJSON(response, 200, mountains);\n    }).\n    catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[7]++;cov_q0sdvsm27.s[36]++;\n      sendStatus(response, 404, 'id not found');\n    });\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}\n}","timestamp":"2017-12-08T02:16:33.262Z"}
{"level":"info","message":"Adding an DELETE url and callback","timestamp":"2017-12-08T02:16:33.262Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T02:16:33.262Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[8]++;cov_q0sdvsm27.s[38]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[5][0]++;\n    let oneMountain; /* istanbul ignore next */cov_q0sdvsm27.s[39]++;\n    for (let mountain of mountains) {/* istanbul ignore next */cov_q0sdvsm27.s[40]++;\n      if (request.url.query.id === mountain.id)\n        {/* istanbul ignore next */cov_q0sdvsm27.b[6][0]++;cov_q0sdvsm27.s[41]++;oneMountain = mountain.id;} else /* istanbul ignore next */{cov_q0sdvsm27.b[6][1]++;}cov_q0sdvsm27.s[42]++;\n      break;\n    } /* istanbul ignore next */cov_q0sdvsm27.s[43]++;\n    if (!request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[7][0]++;cov_q0sdvsm27.s[44]++;\n      sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[45]++;\n      logger.log('info', `Deletion requested from database, but ${request.url.query.id} not found.`); /* istanbul ignore next */cov_q0sdvsm27.s[46]++;\n      return;\n    } else /* istanbul ignore next */{cov_q0sdvsm27.b[7][1]++;}\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[5][1]++;}cov_q0sdvsm27.s[47]++;\n  sendStatus(response, 204, 'Deleted from database.'); /* istanbul ignore next */cov_q0sdvsm27.s[48]++;\n  logger.log('info', `User deleted ${request.url.query.id} from database.`);\n}","timestamp":"2017-12-08T02:16:33.262Z"}
{"level":"info","message":"Server is online at port 3000","timestamp":"2017-12-08T02:16:33.306Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T02:16:33.324Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T02:16:33.325Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[30]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[31]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T02:16:33.325Z"}
{"level":"info","message":"Responding with a 200 code and the following data.","timestamp":"2017-12-08T02:16:33.328Z"}
{"id":"cf6a94e0-dbbd-11e7-88fb-a54523802ff3","name":"Mt. Evans","location":"Colorado","elevation":"14,235","level":"info","message":"","timestamp":"2017-12-08T02:16:33.328Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T02:16:33.339Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T02:16:33.340Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[5]++;cov_q0sdvsm27.s[33]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;cov_q0sdvsm27.s[34]++;\n    storage.fetchItem(request.url.query.id).\n    then(mountain => {/* istanbul ignore next */cov_q0sdvsm27.f[6]++;cov_q0sdvsm27.s[35]++;\n      sendJSON(response, 200, mountains);\n    }).\n    catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[7]++;cov_q0sdvsm27.s[36]++;\n      sendStatus(response, 404, 'id not found');\n    });\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}\n}","timestamp":"2017-12-08T02:16:33.340Z"}
{"level":"info","message":"Responding with a 404 code due to id not found.","timestamp":"2017-12-08T02:16:33.341Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T02:16:33.345Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T02:16:33.345Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/lib/request-parser.js:34:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-08T02:16:33.345Z"}
{"level":"info","message":"Adding an POST url and callback","timestamp":"2017-12-08T02:17:37.754Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T02:17:37.754Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[30]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[31]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T02:17:37.754Z"}
{"level":"info","message":"Adding an GET url and callback","timestamp":"2017-12-08T02:17:37.754Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T02:17:37.754Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[5]++;cov_q0sdvsm27.s[33]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;cov_q0sdvsm27.s[34]++;\n    storage.fetchItem(request.url.query.id).\n    then(mountain => {/* istanbul ignore next */cov_q0sdvsm27.f[6]++;cov_q0sdvsm27.s[35]++;\n      sendJSON(response, 200, mountains);\n    }).\n    catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[7]++;cov_q0sdvsm27.s[36]++;\n      sendStatus(response, 404, 'id not found');\n    });\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}\n}","timestamp":"2017-12-08T02:17:37.754Z"}
{"level":"info","message":"Adding an DELETE url and callback","timestamp":"2017-12-08T02:17:37.755Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T02:17:37.755Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[8]++;cov_q0sdvsm27.s[38]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[5][0]++;\n    let oneMountain; /* istanbul ignore next */cov_q0sdvsm27.s[39]++;\n    for (let mountain of mountains) {/* istanbul ignore next */cov_q0sdvsm27.s[40]++;\n      if (request.url.query.id === mountain.id)\n        {/* istanbul ignore next */cov_q0sdvsm27.b[6][0]++;cov_q0sdvsm27.s[41]++;oneMountain = mountain.id;} else /* istanbul ignore next */{cov_q0sdvsm27.b[6][1]++;}cov_q0sdvsm27.s[42]++;\n      break;\n    } /* istanbul ignore next */cov_q0sdvsm27.s[43]++;\n    if (!request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[7][0]++;cov_q0sdvsm27.s[44]++;\n      sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[45]++;\n      logger.log('info', `Deletion requested from database, but ${request.url.query.id} not found.`); /* istanbul ignore next */cov_q0sdvsm27.s[46]++;\n      return;\n    } else /* istanbul ignore next */{cov_q0sdvsm27.b[7][1]++;}\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[5][1]++;}cov_q0sdvsm27.s[47]++;\n  sendStatus(response, 204, 'Deleted from database.'); /* istanbul ignore next */cov_q0sdvsm27.s[48]++;\n  logger.log('info', `User deleted ${request.url.query.id} from database.`);\n}","timestamp":"2017-12-08T02:17:37.755Z"}
{"level":"info","message":"Server is online at port 3000","timestamp":"2017-12-08T02:17:37.825Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T02:17:37.877Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T02:17:37.878Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[30]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[31]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T02:17:37.878Z"}
{"level":"info","message":"Responding with a 200 code and the following data.","timestamp":"2017-12-08T02:17:37.881Z"}
{"id":"f5e46f60-dbbd-11e7-97b5-8987722d87ad","name":"Mt. Evans","location":"Colorado","elevation":"14,235","level":"info","message":"","timestamp":"2017-12-08T02:17:37.881Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T02:17:37.890Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T02:17:37.891Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[5]++;cov_q0sdvsm27.s[33]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;cov_q0sdvsm27.s[34]++;\n    storage.fetchItem(request.url.query.id).\n    then(mountain => {/* istanbul ignore next */cov_q0sdvsm27.f[6]++;cov_q0sdvsm27.s[35]++;\n      sendJSON(response, 200, mountains);\n    }).\n    catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[7]++;cov_q0sdvsm27.s[36]++;\n      sendStatus(response, 404, 'id not found');\n    });\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}\n}","timestamp":"2017-12-08T02:17:37.891Z"}
{"level":"info","message":"Responding with a 404 code due to id not found.","timestamp":"2017-12-08T02:17:37.892Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T02:17:37.895Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T02:17:37.896Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/lib/request-parser.js:34:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-08T02:17:37.896Z"}
{"level":"info","message":"Adding an POST url and callback","timestamp":"2017-12-08T02:18:45.861Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T02:18:45.861Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[30]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[31]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T02:18:45.861Z"}
{"level":"info","message":"Adding an GET url and callback","timestamp":"2017-12-08T02:18:45.861Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T02:18:45.862Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[5]++;cov_q0sdvsm27.s[33]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;cov_q0sdvsm27.s[34]++;\n    storage.fetchItem(request.url.query.id).\n    then(mountain => {/* istanbul ignore next */cov_q0sdvsm27.f[6]++;cov_q0sdvsm27.s[35]++;\n      sendJSON(response, 200, mountains);\n    }).\n    catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[7]++;cov_q0sdvsm27.s[36]++;\n      sendStatus(response, 404, 'id not found');\n    });\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}\n}","timestamp":"2017-12-08T02:18:45.862Z"}
{"level":"info","message":"Adding an DELETE url and callback","timestamp":"2017-12-08T02:18:45.862Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T02:18:45.862Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[8]++;cov_q0sdvsm27.s[38]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[5][0]++;\n    let oneMountain; /* istanbul ignore next */cov_q0sdvsm27.s[39]++;\n    for (let mountain of mountains) {/* istanbul ignore next */cov_q0sdvsm27.s[40]++;\n      if (request.url.query.id === mountain.id)\n        {/* istanbul ignore next */cov_q0sdvsm27.b[6][0]++;cov_q0sdvsm27.s[41]++;oneMountain = mountain.id;} else /* istanbul ignore next */{cov_q0sdvsm27.b[6][1]++;}cov_q0sdvsm27.s[42]++;\n      break;\n    } /* istanbul ignore next */cov_q0sdvsm27.s[43]++;\n    if (!request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[7][0]++;cov_q0sdvsm27.s[44]++;\n      sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[45]++;\n      logger.log('info', `Deletion requested from database, but ${request.url.query.id} not found.`); /* istanbul ignore next */cov_q0sdvsm27.s[46]++;\n      return;\n    } else /* istanbul ignore next */{cov_q0sdvsm27.b[7][1]++;}\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[5][1]++;}cov_q0sdvsm27.s[47]++;\n  sendStatus(response, 204, 'Deleted from database.'); /* istanbul ignore next */cov_q0sdvsm27.s[48]++;\n  logger.log('info', `User deleted ${request.url.query.id} from database.`);\n}","timestamp":"2017-12-08T02:18:45.862Z"}
{"level":"info","message":"Server is online at port 3000","timestamp":"2017-12-08T02:18:45.909Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T02:18:45.961Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T02:18:45.962Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[30]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[31]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T02:18:45.962Z"}
{"level":"info","message":"Responding with a 200 code and the following data.","timestamp":"2017-12-08T02:18:45.965Z"}
{"id":"1e793aa0-dbbe-11e7-baef-21a8447b50e4","name":"Mt. Evans","location":"Colorado","elevation":"14,235","level":"info","message":"","timestamp":"2017-12-08T02:18:45.966Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T02:18:45.974Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T02:18:45.975Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[5]++;cov_q0sdvsm27.s[33]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;cov_q0sdvsm27.s[34]++;\n    storage.fetchItem(request.url.query.id).\n    then(mountain => {/* istanbul ignore next */cov_q0sdvsm27.f[6]++;cov_q0sdvsm27.s[35]++;\n      sendJSON(response, 200, mountains);\n    }).\n    catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[7]++;cov_q0sdvsm27.s[36]++;\n      sendStatus(response, 404, 'id not found');\n    });\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}\n}","timestamp":"2017-12-08T02:18:45.975Z"}
{"level":"info","message":"Responding with a 404 code due to id not found.","timestamp":"2017-12-08T02:18:45.976Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T02:18:45.980Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T02:18:45.980Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/lib/request-parser.js:34:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-08T02:18:45.980Z"}
{"level":"info","message":"Adding an POST url and callback","timestamp":"2017-12-08T02:19:13.182Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T02:19:13.183Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[30]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[31]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T02:19:13.183Z"}
{"level":"info","message":"Adding an GET url and callback","timestamp":"2017-12-08T02:19:13.183Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T02:19:13.183Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[5]++;cov_q0sdvsm27.s[33]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;cov_q0sdvsm27.s[34]++;\n    storage.fetchItem(request.url.query.id).\n    then(mountain => {/* istanbul ignore next */cov_q0sdvsm27.f[6]++;cov_q0sdvsm27.s[35]++;\n      sendJSON(response, 200, mountains);\n    }).\n    catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[7]++;cov_q0sdvsm27.s[36]++;\n      sendStatus(response, 404, 'id not found');\n    });\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}\n}","timestamp":"2017-12-08T02:19:13.183Z"}
{"level":"info","message":"Adding an DELETE url and callback","timestamp":"2017-12-08T02:19:13.183Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T02:19:13.183Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[8]++;cov_q0sdvsm27.s[38]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[5][0]++;\n    let oneMountain; /* istanbul ignore next */cov_q0sdvsm27.s[39]++;\n    for (let mountain of mountains) {/* istanbul ignore next */cov_q0sdvsm27.s[40]++;\n      if (request.url.query.id === mountain.id)\n        {/* istanbul ignore next */cov_q0sdvsm27.b[6][0]++;cov_q0sdvsm27.s[41]++;oneMountain = mountain.id;} else /* istanbul ignore next */{cov_q0sdvsm27.b[6][1]++;}cov_q0sdvsm27.s[42]++;\n      break;\n    } /* istanbul ignore next */cov_q0sdvsm27.s[43]++;\n    if (!request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[7][0]++;cov_q0sdvsm27.s[44]++;\n      sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[45]++;\n      logger.log('info', `Deletion requested from database, but ${request.url.query.id} not found.`); /* istanbul ignore next */cov_q0sdvsm27.s[46]++;\n      return;\n    } else /* istanbul ignore next */{cov_q0sdvsm27.b[7][1]++;}\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[5][1]++;}cov_q0sdvsm27.s[47]++;\n  sendStatus(response, 204, 'Deleted from database.'); /* istanbul ignore next */cov_q0sdvsm27.s[48]++;\n  logger.log('info', `User deleted ${request.url.query.id} from database.`);\n}","timestamp":"2017-12-08T02:19:13.183Z"}
{"level":"info","message":"Server is online at port 3000","timestamp":"2017-12-08T02:19:13.231Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T02:19:13.279Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T02:19:13.280Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[30]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[31]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T02:19:13.280Z"}
{"level":"info","message":"Responding with a 200 code and the following data.","timestamp":"2017-12-08T02:19:13.284Z"}
{"id":"2ec1c710-dbbe-11e7-aea4-7d3b9b6d73b8","name":"Mt. Evans","location":"Colorado","elevation":"14,235","level":"info","message":"","timestamp":"2017-12-08T02:19:13.284Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T02:19:13.292Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T02:19:13.293Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[5]++;cov_q0sdvsm27.s[33]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;cov_q0sdvsm27.s[34]++;\n    storage.fetchItem(request.url.query.id).\n    then(mountain => {/* istanbul ignore next */cov_q0sdvsm27.f[6]++;cov_q0sdvsm27.s[35]++;\n      sendJSON(response, 200, mountains);\n    }).\n    catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[7]++;cov_q0sdvsm27.s[36]++;\n      sendStatus(response, 404, 'id not found');\n    });\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}\n}","timestamp":"2017-12-08T02:19:13.293Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T02:19:18.298Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T02:19:18.298Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/lib/request-parser.js:34:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-08T02:19:18.298Z"}
{"level":"info","message":"Adding an POST url and callback","timestamp":"2017-12-08T02:20:09.800Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T02:20:09.801Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[30]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[31]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T02:20:09.801Z"}
{"level":"info","message":"Adding an GET url and callback","timestamp":"2017-12-08T02:20:09.801Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T02:20:09.801Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[5]++;cov_q0sdvsm27.s[33]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;cov_q0sdvsm27.s[34]++;\n    storage.fetchItem(request.url.query.id).\n    then(mountain => {/* istanbul ignore next */cov_q0sdvsm27.f[6]++;cov_q0sdvsm27.s[35]++;\n      sendJSON(response, 200, mountains);\n    }).\n    catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[7]++;cov_q0sdvsm27.s[36]++;\n      sendStatus(response, 404, 'id not found');\n    });\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}\n}","timestamp":"2017-12-08T02:20:09.801Z"}
{"level":"info","message":"Adding an DELETE url and callback","timestamp":"2017-12-08T02:20:09.801Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T02:20:09.801Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[8]++;cov_q0sdvsm27.s[38]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[5][0]++;\n    let oneMountain; /* istanbul ignore next */cov_q0sdvsm27.s[39]++;\n    for (let mountain of mountains) {/* istanbul ignore next */cov_q0sdvsm27.s[40]++;\n      if (request.url.query.id === mountain.id)\n        {/* istanbul ignore next */cov_q0sdvsm27.b[6][0]++;cov_q0sdvsm27.s[41]++;oneMountain = mountain.id;} else /* istanbul ignore next */{cov_q0sdvsm27.b[6][1]++;}cov_q0sdvsm27.s[42]++;\n      break;\n    } /* istanbul ignore next */cov_q0sdvsm27.s[43]++;\n    if (!request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[7][0]++;cov_q0sdvsm27.s[44]++;\n      sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[45]++;\n      logger.log('info', `Deletion requested from database, but ${request.url.query.id} not found.`); /* istanbul ignore next */cov_q0sdvsm27.s[46]++;\n      return;\n    } else /* istanbul ignore next */{cov_q0sdvsm27.b[7][1]++;}\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[5][1]++;}cov_q0sdvsm27.s[47]++;\n  sendStatus(response, 204, 'Deleted from database.'); /* istanbul ignore next */cov_q0sdvsm27.s[48]++;\n  logger.log('info', `User deleted ${request.url.query.id} from database.`);\n}","timestamp":"2017-12-08T02:20:09.801Z"}
{"level":"info","message":"Server is online at port 3000","timestamp":"2017-12-08T02:20:09.851Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T02:20:09.898Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T02:20:09.899Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[30]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[31]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T02:20:09.899Z"}
{"level":"info","message":"Responding with a 200 code and the following data.","timestamp":"2017-12-08T02:20:09.902Z"}
{"id":"5080ffb0-dbbe-11e7-9718-73462050272e","name":"Mt. Evans","location":"Colorado","elevation":"14,235","level":"info","message":"","timestamp":"2017-12-08T02:20:09.902Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T02:20:09.911Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T02:20:09.912Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[5]++;cov_q0sdvsm27.s[33]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;cov_q0sdvsm27.s[34]++;\n    storage.fetchItem(request.url.query.id).\n    then(mountain => {/* istanbul ignore next */cov_q0sdvsm27.f[6]++;cov_q0sdvsm27.s[35]++;\n      sendJSON(response, 200, mountains);\n    }).\n    catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[7]++;cov_q0sdvsm27.s[36]++;\n      sendStatus(response, 404, 'id not found');\n    });\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}\n}","timestamp":"2017-12-08T02:20:09.912Z"}
{"level":"info","message":"Responding with a 404 code due to id not found.","timestamp":"2017-12-08T02:20:09.913Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T02:20:09.917Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T02:20:09.917Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/lib/request-parser.js:34:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-08T02:20:09.917Z"}
{"level":"info","message":"Adding an POST url and callback","timestamp":"2017-12-08T02:23:36.696Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T02:23:36.696Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[30]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[31]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T02:23:36.697Z"}
{"level":"info","message":"Adding an GET url and callback","timestamp":"2017-12-08T02:23:36.697Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T02:23:36.697Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[5]++;cov_q0sdvsm27.s[33]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;cov_q0sdvsm27.s[34]++;\n    storage.fetchItem(request.url.query.id).\n    then(mountain => {/* istanbul ignore next */cov_q0sdvsm27.f[6]++;cov_q0sdvsm27.s[35]++;\n      sendJSON(response, 200, mountain);\n    }).\n    catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[7]++;cov_q0sdvsm27.s[36]++;\n      sendStatus(response, 404, 'id not found');\n    });\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}\n}","timestamp":"2017-12-08T02:23:36.697Z"}
{"level":"info","message":"Adding an DELETE url and callback","timestamp":"2017-12-08T02:23:36.697Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T02:23:36.697Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[8]++;cov_q0sdvsm27.s[38]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[5][0]++;\n    let oneMountain; /* istanbul ignore next */cov_q0sdvsm27.s[39]++;\n    for (let mountain of mountains) {/* istanbul ignore next */cov_q0sdvsm27.s[40]++;\n      if (request.url.query.id === mountain.id)\n        {/* istanbul ignore next */cov_q0sdvsm27.b[6][0]++;cov_q0sdvsm27.s[41]++;oneMountain = mountain.id;} else /* istanbul ignore next */{cov_q0sdvsm27.b[6][1]++;}cov_q0sdvsm27.s[42]++;\n      break;\n    } /* istanbul ignore next */cov_q0sdvsm27.s[43]++;\n    if (!request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[7][0]++;cov_q0sdvsm27.s[44]++;\n      sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[45]++;\n      logger.log('info', `Deletion requested from database, but ${request.url.query.id} not found.`); /* istanbul ignore next */cov_q0sdvsm27.s[46]++;\n      return;\n    } else /* istanbul ignore next */{cov_q0sdvsm27.b[7][1]++;}\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[5][1]++;}cov_q0sdvsm27.s[47]++;\n  sendStatus(response, 204, 'Deleted from database.'); /* istanbul ignore next */cov_q0sdvsm27.s[48]++;\n  logger.log('info', `User deleted ${request.url.query.id} from database.`);\n}","timestamp":"2017-12-08T02:23:36.697Z"}
{"level":"info","message":"Server is online at port 3000","timestamp":"2017-12-08T02:23:36.766Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T02:23:36.817Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T02:23:36.818Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[30]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[31]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T02:23:36.818Z"}
{"level":"info","message":"Responding with a 200 code and the following data.","timestamp":"2017-12-08T02:23:36.821Z"}
{"id":"cbd67c30-dbbe-11e7-aa80-0ff0856f4d5a","name":"Mt. Evans","location":"Colorado","elevation":"14,235","level":"info","message":"","timestamp":"2017-12-08T02:23:36.821Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T02:23:36.830Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T02:23:36.831Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[5]++;cov_q0sdvsm27.s[33]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;cov_q0sdvsm27.s[34]++;\n    storage.fetchItem(request.url.query.id).\n    then(mountain => {/* istanbul ignore next */cov_q0sdvsm27.f[6]++;cov_q0sdvsm27.s[35]++;\n      sendJSON(response, 200, mountain);\n    }).\n    catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[7]++;cov_q0sdvsm27.s[36]++;\n      sendStatus(response, 404, 'id not found');\n    });\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}\n}","timestamp":"2017-12-08T02:23:36.831Z"}
{"level":"info","message":"Responding with a 404 code due to id not found.","timestamp":"2017-12-08T02:23:36.832Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T02:23:36.835Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T02:23:36.835Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/lib/request-parser.js:34:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-08T02:23:36.835Z"}
{"level":"info","message":"Adding an POST url and callback","timestamp":"2017-12-08T02:24:44.842Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T02:24:44.842Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[30]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[31]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T02:24:44.842Z"}
{"level":"info","message":"Adding an GET url and callback","timestamp":"2017-12-08T02:24:44.843Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T02:24:44.843Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[5]++;cov_q0sdvsm27.s[33]++;\n  if (request.body.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;cov_q0sdvsm27.s[34]++;\n    storage.fetchItem(request.body.id).\n    then(mountain => {/* istanbul ignore next */cov_q0sdvsm27.f[6]++;cov_q0sdvsm27.s[35]++;\n      sendJSON(response, 200, mountain);\n    }).\n    catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[7]++;cov_q0sdvsm27.s[36]++;\n      sendStatus(response, 404, 'id not found');\n    });\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}\n}","timestamp":"2017-12-08T02:24:44.843Z"}
{"level":"info","message":"Adding an DELETE url and callback","timestamp":"2017-12-08T02:24:44.843Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T02:24:44.843Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[8]++;cov_q0sdvsm27.s[38]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[5][0]++;\n    let oneMountain; /* istanbul ignore next */cov_q0sdvsm27.s[39]++;\n    for (let mountain of mountains) {/* istanbul ignore next */cov_q0sdvsm27.s[40]++;\n      if (request.url.query.id === mountain.id)\n        {/* istanbul ignore next */cov_q0sdvsm27.b[6][0]++;cov_q0sdvsm27.s[41]++;oneMountain = mountain.id;} else /* istanbul ignore next */{cov_q0sdvsm27.b[6][1]++;}cov_q0sdvsm27.s[42]++;\n      break;\n    } /* istanbul ignore next */cov_q0sdvsm27.s[43]++;\n    if (!request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[7][0]++;cov_q0sdvsm27.s[44]++;\n      sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[45]++;\n      logger.log('info', `Deletion requested from database, but ${request.url.query.id} not found.`); /* istanbul ignore next */cov_q0sdvsm27.s[46]++;\n      return;\n    } else /* istanbul ignore next */{cov_q0sdvsm27.b[7][1]++;}\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[5][1]++;}cov_q0sdvsm27.s[47]++;\n  sendStatus(response, 204, 'Deleted from database.'); /* istanbul ignore next */cov_q0sdvsm27.s[48]++;\n  logger.log('info', `User deleted ${request.url.query.id} from database.`);\n}","timestamp":"2017-12-08T02:24:44.843Z"}
{"level":"info","message":"Server is online at port 3000","timestamp":"2017-12-08T02:24:44.912Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T02:24:44.961Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T02:24:44.962Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[30]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[31]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T02:24:44.963Z"}
{"level":"info","message":"Responding with a 200 code and the following data.","timestamp":"2017-12-08T02:24:44.966Z"}
{"id":"f4746f30-dbbe-11e7-9181-433628298242","name":"Mt. Evans","location":"Colorado","elevation":"14,235","level":"info","message":"","timestamp":"2017-12-08T02:24:44.966Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T02:24:44.974Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T02:24:44.975Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[5]++;cov_q0sdvsm27.s[33]++;\n  if (request.body.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;cov_q0sdvsm27.s[34]++;\n    storage.fetchItem(request.body.id).\n    then(mountain => {/* istanbul ignore next */cov_q0sdvsm27.f[6]++;cov_q0sdvsm27.s[35]++;\n      sendJSON(response, 200, mountain);\n    }).\n    catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[7]++;cov_q0sdvsm27.s[36]++;\n      sendStatus(response, 404, 'id not found');\n    });\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}\n}","timestamp":"2017-12-08T02:24:44.975Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T02:24:44.975Z"}
{"message":"Cannot read property 'id' of undefined","stack":"TypeError: Cannot read property 'id' of undefined\n    at Object.<anonymous>.router.get (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/route/mountain-router.js:61:20)\n    at requestParser.parse.then.request (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/lib/router.js:55:14)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-08T02:24:44.975Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T02:24:44.979Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T02:24:44.979Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/lib/request-parser.js:34:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-08T02:24:44.979Z"}
{"level":"info","message":"Adding an POST url and callback","timestamp":"2017-12-08T02:25:01.358Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T02:25:01.359Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[30]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[31]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T02:25:01.359Z"}
{"level":"info","message":"Adding an GET url and callback","timestamp":"2017-12-08T02:25:01.359Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T02:25:01.359Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[5]++;cov_q0sdvsm27.s[33]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;cov_q0sdvsm27.s[34]++;\n    storage.fetchItem(request.body.id).\n    then(mountain => {/* istanbul ignore next */cov_q0sdvsm27.f[6]++;cov_q0sdvsm27.s[35]++;\n      sendJSON(response, 200, mountain);\n    }).\n    catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[7]++;cov_q0sdvsm27.s[36]++;\n      sendStatus(response, 404, 'id not found');\n    });\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}\n}","timestamp":"2017-12-08T02:25:01.359Z"}
{"level":"info","message":"Adding an DELETE url and callback","timestamp":"2017-12-08T02:25:01.359Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T02:25:01.359Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[8]++;cov_q0sdvsm27.s[38]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[5][0]++;\n    let oneMountain; /* istanbul ignore next */cov_q0sdvsm27.s[39]++;\n    for (let mountain of mountains) {/* istanbul ignore next */cov_q0sdvsm27.s[40]++;\n      if (request.url.query.id === mountain.id)\n        {/* istanbul ignore next */cov_q0sdvsm27.b[6][0]++;cov_q0sdvsm27.s[41]++;oneMountain = mountain.id;} else /* istanbul ignore next */{cov_q0sdvsm27.b[6][1]++;}cov_q0sdvsm27.s[42]++;\n      break;\n    } /* istanbul ignore next */cov_q0sdvsm27.s[43]++;\n    if (!request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[7][0]++;cov_q0sdvsm27.s[44]++;\n      sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[45]++;\n      logger.log('info', `Deletion requested from database, but ${request.url.query.id} not found.`); /* istanbul ignore next */cov_q0sdvsm27.s[46]++;\n      return;\n    } else /* istanbul ignore next */{cov_q0sdvsm27.b[7][1]++;}\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[5][1]++;}cov_q0sdvsm27.s[47]++;\n  sendStatus(response, 204, 'Deleted from database.'); /* istanbul ignore next */cov_q0sdvsm27.s[48]++;\n  logger.log('info', `User deleted ${request.url.query.id} from database.`);\n}","timestamp":"2017-12-08T02:25:01.359Z"}
{"level":"info","message":"Server is online at port 3000","timestamp":"2017-12-08T02:25:01.405Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T02:25:01.454Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T02:25:01.455Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[30]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[31]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T02:25:01.455Z"}
{"level":"info","message":"Responding with a 200 code and the following data.","timestamp":"2017-12-08T02:25:01.458Z"}
{"id":"fe48e9f0-dbbe-11e7-8530-99d19465e81c","name":"Mt. Evans","location":"Colorado","elevation":"14,235","level":"info","message":"","timestamp":"2017-12-08T02:25:01.458Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T02:25:01.468Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T02:25:01.468Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[5]++;cov_q0sdvsm27.s[33]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;cov_q0sdvsm27.s[34]++;\n    storage.fetchItem(request.body.id).\n    then(mountain => {/* istanbul ignore next */cov_q0sdvsm27.f[6]++;cov_q0sdvsm27.s[35]++;\n      sendJSON(response, 200, mountain);\n    }).\n    catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[7]++;cov_q0sdvsm27.s[36]++;\n      sendStatus(response, 404, 'id not found');\n    });\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}\n}","timestamp":"2017-12-08T02:25:01.469Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T02:25:01.469Z"}
{"message":"Cannot read property 'id' of undefined","stack":"TypeError: Cannot read property 'id' of undefined\n    at Object.<anonymous>.router.get (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/route/mountain-router.js:62:36)\n    at requestParser.parse.then.request (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/lib/router.js:55:14)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-08T02:25:01.469Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T02:25:01.472Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T02:25:01.473Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/lib/request-parser.js:34:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-08T02:25:01.473Z"}
{"level":"info","message":"Adding an POST url and callback","timestamp":"2017-12-08T02:25:07.849Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T02:25:07.849Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[30]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[31]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T02:25:07.849Z"}
{"level":"info","message":"Adding an GET url and callback","timestamp":"2017-12-08T02:25:07.850Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T02:25:07.850Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[5]++;cov_q0sdvsm27.s[33]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;cov_q0sdvsm27.s[34]++;\n    storage.fetchItem(request.url.query.id).\n    then(mountain => {/* istanbul ignore next */cov_q0sdvsm27.f[6]++;cov_q0sdvsm27.s[35]++;\n      sendJSON(response, 200, mountain);\n    }).\n    catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[7]++;cov_q0sdvsm27.s[36]++;\n      sendStatus(response, 404, 'id not found');\n    });\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}\n}","timestamp":"2017-12-08T02:25:07.850Z"}
{"level":"info","message":"Adding an DELETE url and callback","timestamp":"2017-12-08T02:25:07.850Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T02:25:07.850Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[8]++;cov_q0sdvsm27.s[38]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[5][0]++;\n    let oneMountain; /* istanbul ignore next */cov_q0sdvsm27.s[39]++;\n    for (let mountain of mountains) {/* istanbul ignore next */cov_q0sdvsm27.s[40]++;\n      if (request.url.query.id === mountain.id)\n        {/* istanbul ignore next */cov_q0sdvsm27.b[6][0]++;cov_q0sdvsm27.s[41]++;oneMountain = mountain.id;} else /* istanbul ignore next */{cov_q0sdvsm27.b[6][1]++;}cov_q0sdvsm27.s[42]++;\n      break;\n    } /* istanbul ignore next */cov_q0sdvsm27.s[43]++;\n    if (!request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[7][0]++;cov_q0sdvsm27.s[44]++;\n      sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[45]++;\n      logger.log('info', `Deletion requested from database, but ${request.url.query.id} not found.`); /* istanbul ignore next */cov_q0sdvsm27.s[46]++;\n      return;\n    } else /* istanbul ignore next */{cov_q0sdvsm27.b[7][1]++;}\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[5][1]++;}cov_q0sdvsm27.s[47]++;\n  sendStatus(response, 204, 'Deleted from database.'); /* istanbul ignore next */cov_q0sdvsm27.s[48]++;\n  logger.log('info', `User deleted ${request.url.query.id} from database.`);\n}","timestamp":"2017-12-08T02:25:07.850Z"}
{"level":"info","message":"Server is online at port 3000","timestamp":"2017-12-08T02:25:07.907Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T02:25:07.922Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T02:25:07.924Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[30]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[31]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T02:25:07.924Z"}
{"level":"info","message":"Responding with a 200 code and the following data.","timestamp":"2017-12-08T02:25:07.927Z"}
{"id":"02240140-dbbf-11e7-a08a-9ded6bacb73c","name":"Mt. Evans","location":"Colorado","elevation":"14,235","level":"info","message":"","timestamp":"2017-12-08T02:25:07.927Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T02:25:07.936Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T02:25:07.937Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[5]++;cov_q0sdvsm27.s[33]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;cov_q0sdvsm27.s[34]++;\n    storage.fetchItem(request.url.query.id).\n    then(mountain => {/* istanbul ignore next */cov_q0sdvsm27.f[6]++;cov_q0sdvsm27.s[35]++;\n      sendJSON(response, 200, mountain);\n    }).\n    catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[7]++;cov_q0sdvsm27.s[36]++;\n      sendStatus(response, 404, 'id not found');\n    });\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}\n}","timestamp":"2017-12-08T02:25:07.937Z"}
{"level":"info","message":"Responding with a 404 code due to id not found.","timestamp":"2017-12-08T02:25:07.938Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T02:25:07.941Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T02:25:07.942Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/lib/request-parser.js:34:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-08T02:25:07.942Z"}
{"level":"info","message":"Adding an POST url and callback","timestamp":"2017-12-08T02:25:23.941Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T02:25:23.942Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[30]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[31]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T02:25:23.942Z"}
{"level":"info","message":"Adding an GET url and callback","timestamp":"2017-12-08T02:25:23.942Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T02:25:23.942Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[5]++;cov_q0sdvsm27.s[33]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;cov_q0sdvsm27.s[34]++;\n    storage.fetchItem(request.url.query.id).\n    then(mountain => {/* istanbul ignore next */cov_q0sdvsm27.f[6]++;cov_q0sdvsm27.s[35]++;\n      console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[36]++;\n      sendJSON(response, 200, mountain);\n    }).\n    catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[7]++;cov_q0sdvsm27.s[37]++;\n      sendStatus(response, 404, 'id not found');\n    });\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}\n}","timestamp":"2017-12-08T02:25:23.942Z"}
{"level":"info","message":"Adding an DELETE url and callback","timestamp":"2017-12-08T02:25:23.942Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T02:25:23.942Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[8]++;cov_q0sdvsm27.s[39]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[5][0]++;\n    let oneMountain; /* istanbul ignore next */cov_q0sdvsm27.s[40]++;\n    for (let mountain of mountains) {/* istanbul ignore next */cov_q0sdvsm27.s[41]++;\n      if (request.url.query.id === mountain.id)\n        {/* istanbul ignore next */cov_q0sdvsm27.b[6][0]++;cov_q0sdvsm27.s[42]++;oneMountain = mountain.id;} else /* istanbul ignore next */{cov_q0sdvsm27.b[6][1]++;}cov_q0sdvsm27.s[43]++;\n      break;\n    } /* istanbul ignore next */cov_q0sdvsm27.s[44]++;\n    if (!request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[7][0]++;cov_q0sdvsm27.s[45]++;\n      sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[46]++;\n      logger.log('info', `Deletion requested from database, but ${request.url.query.id} not found.`); /* istanbul ignore next */cov_q0sdvsm27.s[47]++;\n      return;\n    } else /* istanbul ignore next */{cov_q0sdvsm27.b[7][1]++;}\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[5][1]++;}cov_q0sdvsm27.s[48]++;\n  sendStatus(response, 204, 'Deleted from database.'); /* istanbul ignore next */cov_q0sdvsm27.s[49]++;\n  logger.log('info', `User deleted ${request.url.query.id} from database.`);\n}","timestamp":"2017-12-08T02:25:23.942Z"}
{"level":"info","message":"Server is online at port 3000","timestamp":"2017-12-08T02:25:23.989Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T02:25:24.040Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T02:25:24.041Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[30]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[31]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T02:25:24.041Z"}
{"level":"info","message":"Responding with a 200 code and the following data.","timestamp":"2017-12-08T02:25:24.044Z"}
{"id":"0bbf4390-dbbf-11e7-be34-9f1f62ca1435","name":"Mt. Evans","location":"Colorado","elevation":"14,235","level":"info","message":"","timestamp":"2017-12-08T02:25:24.044Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T02:25:24.053Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T02:25:24.054Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[5]++;cov_q0sdvsm27.s[33]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;cov_q0sdvsm27.s[34]++;\n    storage.fetchItem(request.url.query.id).\n    then(mountain => {/* istanbul ignore next */cov_q0sdvsm27.f[6]++;cov_q0sdvsm27.s[35]++;\n      console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[36]++;\n      sendJSON(response, 200, mountain);\n    }).\n    catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[7]++;cov_q0sdvsm27.s[37]++;\n      sendStatus(response, 404, 'id not found');\n    });\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}\n}","timestamp":"2017-12-08T02:25:24.054Z"}
{"level":"info","message":"Responding with a 404 code due to id not found.","timestamp":"2017-12-08T02:25:24.055Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T02:25:24.058Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T02:25:24.059Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/lib/request-parser.js:34:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-08T02:25:24.059Z"}
{"level":"info","message":"Adding an POST url and callback","timestamp":"2017-12-08T02:25:41.550Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T02:25:41.551Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[30]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[31]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T02:25:41.551Z"}
{"level":"info","message":"Adding an GET url and callback","timestamp":"2017-12-08T02:25:41.551Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T02:25:41.551Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[5]++;cov_q0sdvsm27.s[33]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;cov_q0sdvsm27.s[34]++;\n    storage.fetchItem(request.url.query.id).\n    then(mountain => {/* istanbul ignore next */cov_q0sdvsm27.f[6]++;cov_q0sdvsm27.s[35]++;\n      sendJSON(response, 200, mountain);\n    }).\n    catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[7]++;cov_q0sdvsm27.s[36]++;\n      console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[37]++;\n      sendStatus(response, 404, 'id not found');\n    });\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}\n}","timestamp":"2017-12-08T02:25:41.551Z"}
{"level":"info","message":"Adding an DELETE url and callback","timestamp":"2017-12-08T02:25:41.551Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T02:25:41.551Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[8]++;cov_q0sdvsm27.s[39]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[5][0]++;\n    let oneMountain; /* istanbul ignore next */cov_q0sdvsm27.s[40]++;\n    for (let mountain of mountains) {/* istanbul ignore next */cov_q0sdvsm27.s[41]++;\n      if (request.url.query.id === mountain.id)\n        {/* istanbul ignore next */cov_q0sdvsm27.b[6][0]++;cov_q0sdvsm27.s[42]++;oneMountain = mountain.id;} else /* istanbul ignore next */{cov_q0sdvsm27.b[6][1]++;}cov_q0sdvsm27.s[43]++;\n      break;\n    } /* istanbul ignore next */cov_q0sdvsm27.s[44]++;\n    if (!request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[7][0]++;cov_q0sdvsm27.s[45]++;\n      sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[46]++;\n      logger.log('info', `Deletion requested from database, but ${request.url.query.id} not found.`); /* istanbul ignore next */cov_q0sdvsm27.s[47]++;\n      return;\n    } else /* istanbul ignore next */{cov_q0sdvsm27.b[7][1]++;}\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[5][1]++;}cov_q0sdvsm27.s[48]++;\n  sendStatus(response, 204, 'Deleted from database.'); /* istanbul ignore next */cov_q0sdvsm27.s[49]++;\n  logger.log('info', `User deleted ${request.url.query.id} from database.`);\n}","timestamp":"2017-12-08T02:25:41.551Z"}
{"level":"info","message":"Server is online at port 3000","timestamp":"2017-12-08T02:25:41.622Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T02:25:41.671Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T02:25:41.673Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[30]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[31]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T02:25:41.673Z"}
{"level":"info","message":"Responding with a 200 code and the following data.","timestamp":"2017-12-08T02:25:41.676Z"}
{"id":"1641b190-dbbf-11e7-af5f-95eff208c6ef","name":"Mt. Evans","location":"Colorado","elevation":"14,235","level":"info","message":"","timestamp":"2017-12-08T02:25:41.676Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T02:25:41.685Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T02:25:41.686Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[5]++;cov_q0sdvsm27.s[33]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;cov_q0sdvsm27.s[34]++;\n    storage.fetchItem(request.url.query.id).\n    then(mountain => {/* istanbul ignore next */cov_q0sdvsm27.f[6]++;cov_q0sdvsm27.s[35]++;\n      sendJSON(response, 200, mountain);\n    }).\n    catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[7]++;cov_q0sdvsm27.s[36]++;\n      console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[37]++;\n      sendStatus(response, 404, 'id not found');\n    });\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}\n}","timestamp":"2017-12-08T02:25:41.686Z"}
{"level":"info","message":"Responding with a 404 code due to id not found.","timestamp":"2017-12-08T02:25:41.687Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T02:25:41.690Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T02:25:41.690Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/lib/request-parser.js:34:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-08T02:25:41.690Z"}
{"level":"info","message":"Adding an POST url and callback","timestamp":"2017-12-08T02:26:01.889Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T02:26:01.889Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[30]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[31]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T02:26:01.889Z"}
{"level":"info","message":"Adding an GET url and callback","timestamp":"2017-12-08T02:26:01.889Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T02:26:01.890Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[5]++;cov_q0sdvsm27.s[33]++;\n  if (mountainId) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;cov_q0sdvsm27.s[34]++;\n    storage.fetchItem(mountainId).\n    then(mountain => {/* istanbul ignore next */cov_q0sdvsm27.f[6]++;cov_q0sdvsm27.s[35]++;\n      sendJSON(response, 200, mountain);\n    }).\n    catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[7]++;cov_q0sdvsm27.s[36]++;\n      console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[37]++;\n      sendStatus(response, 404, 'id not found');\n    });\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}\n}","timestamp":"2017-12-08T02:26:01.890Z"}
{"level":"info","message":"Adding an DELETE url and callback","timestamp":"2017-12-08T02:26:01.890Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T02:26:01.890Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[8]++;cov_q0sdvsm27.s[39]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[5][0]++;\n    let oneMountain; /* istanbul ignore next */cov_q0sdvsm27.s[40]++;\n    for (let mountain of mountains) {/* istanbul ignore next */cov_q0sdvsm27.s[41]++;\n      if (request.url.query.id === mountain.id)\n        {/* istanbul ignore next */cov_q0sdvsm27.b[6][0]++;cov_q0sdvsm27.s[42]++;oneMountain = mountain.id;} else /* istanbul ignore next */{cov_q0sdvsm27.b[6][1]++;}cov_q0sdvsm27.s[43]++;\n      break;\n    } /* istanbul ignore next */cov_q0sdvsm27.s[44]++;\n    if (!request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[7][0]++;cov_q0sdvsm27.s[45]++;\n      sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[46]++;\n      logger.log('info', `Deletion requested from database, but ${request.url.query.id} not found.`); /* istanbul ignore next */cov_q0sdvsm27.s[47]++;\n      return;\n    } else /* istanbul ignore next */{cov_q0sdvsm27.b[7][1]++;}\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[5][1]++;}cov_q0sdvsm27.s[48]++;\n  sendStatus(response, 204, 'Deleted from database.'); /* istanbul ignore next */cov_q0sdvsm27.s[49]++;\n  logger.log('info', `User deleted ${request.url.query.id} from database.`);\n}","timestamp":"2017-12-08T02:26:01.890Z"}
{"level":"info","message":"Server is online at port 3000","timestamp":"2017-12-08T02:26:01.957Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T02:26:02.006Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T02:26:02.007Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[30]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[31]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T02:26:02.007Z"}
{"level":"info","message":"Responding with a 200 code and the following data.","timestamp":"2017-12-08T02:26:02.011Z"}
{"id":"22609180-dbbf-11e7-912a-55e7e260ff38","name":"Mt. Evans","location":"Colorado","elevation":"14,235","level":"info","message":"","timestamp":"2017-12-08T02:26:02.011Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T02:26:02.020Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T02:26:02.020Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[5]++;cov_q0sdvsm27.s[33]++;\n  if (mountainId) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;cov_q0sdvsm27.s[34]++;\n    storage.fetchItem(mountainId).\n    then(mountain => {/* istanbul ignore next */cov_q0sdvsm27.f[6]++;cov_q0sdvsm27.s[35]++;\n      sendJSON(response, 200, mountain);\n    }).\n    catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[7]++;cov_q0sdvsm27.s[36]++;\n      console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[37]++;\n      sendStatus(response, 404, 'id not found');\n    });\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}\n}","timestamp":"2017-12-08T02:26:02.020Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T02:26:02.021Z"}
{"message":"mountainId is not defined","stack":"ReferenceError: mountainId is not defined\n    at Object.<anonymous>.router.get (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/route/mountain-router.js:61:3)\n    at requestParser.parse.then.request (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/lib/router.js:55:14)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-08T02:26:02.021Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T02:26:02.024Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T02:26:02.025Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/lib/request-parser.js:34:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-08T02:26:02.025Z"}
{"level":"info","message":"Adding an POST url and callback","timestamp":"2017-12-08T02:29:53.799Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T02:29:53.800Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[30]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[31]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T02:29:53.800Z"}
{"level":"info","message":"Adding an GET url and callback","timestamp":"2017-12-08T02:29:53.800Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T02:29:53.800Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[5]++;cov_q0sdvsm27.s[33]++;\n  if (mountainId) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;cov_q0sdvsm27.s[34]++;\n    storage.fetchItem(mountainId).\n    then(mountain => {/* istanbul ignore next */cov_q0sdvsm27.f[6]++;cov_q0sdvsm27.s[35]++;\n      sendJSON(response, 200, mountain);\n    }).\n    catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[7]++;cov_q0sdvsm27.s[36]++;\n      console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[37]++;\n      sendStatus(response, 404, 'id not found');\n    });\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}\n}","timestamp":"2017-12-08T02:29:53.800Z"}
{"level":"info","message":"Adding an DELETE url and callback","timestamp":"2017-12-08T02:29:53.800Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T02:29:53.800Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[8]++;cov_q0sdvsm27.s[39]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[5][0]++;\n    let oneMountain; /* istanbul ignore next */cov_q0sdvsm27.s[40]++;\n    for (let mountain of mountains) {/* istanbul ignore next */cov_q0sdvsm27.s[41]++;\n      if (request.url.query.id === mountain.id)\n        {/* istanbul ignore next */cov_q0sdvsm27.b[6][0]++;cov_q0sdvsm27.s[42]++;oneMountain = mountain.id;} else /* istanbul ignore next */{cov_q0sdvsm27.b[6][1]++;}cov_q0sdvsm27.s[43]++;\n      break;\n    } /* istanbul ignore next */cov_q0sdvsm27.s[44]++;\n    if (!request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[7][0]++;cov_q0sdvsm27.s[45]++;\n      sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[46]++;\n      logger.log('info', `Deletion requested from database, but ${request.url.query.id} not found.`); /* istanbul ignore next */cov_q0sdvsm27.s[47]++;\n      return;\n    } else /* istanbul ignore next */{cov_q0sdvsm27.b[7][1]++;}\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[5][1]++;}cov_q0sdvsm27.s[48]++;\n  sendStatus(response, 204, 'Deleted from database.'); /* istanbul ignore next */cov_q0sdvsm27.s[49]++;\n  logger.log('info', `User deleted ${request.url.query.id} from database.`);\n}","timestamp":"2017-12-08T02:29:53.800Z"}
{"level":"info","message":"Server is online at port 3000","timestamp":"2017-12-08T02:29:53.850Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T02:29:53.898Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T02:29:53.899Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[30]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[31]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T02:29:53.899Z"}
{"level":"info","message":"Responding with a 200 code and the following data.","timestamp":"2017-12-08T02:29:53.903Z"}
{"id":"ac987ac0-dbbf-11e7-9153-c311cfbfe3e5","name":"Mt. Evans","location":"Colorado","elevation":"14,235","level":"info","message":"","timestamp":"2017-12-08T02:29:53.903Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T02:29:53.913Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T02:29:53.913Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[5]++;cov_q0sdvsm27.s[33]++;\n  if (mountainId) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;cov_q0sdvsm27.s[34]++;\n    storage.fetchItem(mountainId).\n    then(mountain => {/* istanbul ignore next */cov_q0sdvsm27.f[6]++;cov_q0sdvsm27.s[35]++;\n      sendJSON(response, 200, mountain);\n    }).\n    catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[7]++;cov_q0sdvsm27.s[36]++;\n      console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[37]++;\n      sendStatus(response, 404, 'id not found');\n    });\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}\n}","timestamp":"2017-12-08T02:29:53.913Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T02:29:53.913Z"}
{"message":"mountainId is not defined","stack":"ReferenceError: mountainId is not defined\n    at Object.<anonymous>.router.get (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/route/mountain-router.js:61:3)\n    at requestParser.parse.then.request (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/lib/router.js:55:14)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-08T02:29:53.914Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T02:29:53.918Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T02:29:53.918Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/lib/request-parser.js:34:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-08T02:29:53.918Z"}
{"level":"info","message":"Adding an POST url and callback","timestamp":"2017-12-08T02:30:07.284Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T02:30:07.285Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[30]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[31]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T02:30:07.285Z"}
{"level":"info","message":"Adding an GET url and callback","timestamp":"2017-12-08T02:30:07.285Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T02:30:07.285Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[5]++;cov_q0sdvsm27.s[33]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;cov_q0sdvsm27.s[34]++;\n    storage.fetchItem(request.url.query.id).\n    then(mountain => {/* istanbul ignore next */cov_q0sdvsm27.f[6]++;cov_q0sdvsm27.s[35]++;\n      sendJSON(response, 200, mountains);\n    }).\n    catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[7]++;cov_q0sdvsm27.s[36]++;\n      console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[37]++;\n      sendStatus(response, 404, 'id not found');\n    });\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}\n}","timestamp":"2017-12-08T02:30:07.285Z"}
{"level":"info","message":"Adding an DELETE url and callback","timestamp":"2017-12-08T02:30:07.285Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T02:30:07.285Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[8]++;cov_q0sdvsm27.s[39]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[5][0]++;\n    let oneMountain; /* istanbul ignore next */cov_q0sdvsm27.s[40]++;\n    for (let mountain of mountains) {/* istanbul ignore next */cov_q0sdvsm27.s[41]++;\n      if (request.url.query.id === mountain.id)\n        {/* istanbul ignore next */cov_q0sdvsm27.b[6][0]++;cov_q0sdvsm27.s[42]++;oneMountain = mountain.id;} else /* istanbul ignore next */{cov_q0sdvsm27.b[6][1]++;}cov_q0sdvsm27.s[43]++;\n      break;\n    } /* istanbul ignore next */cov_q0sdvsm27.s[44]++;\n    if (!request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[7][0]++;cov_q0sdvsm27.s[45]++;\n      sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[46]++;\n      logger.log('info', `Deletion requested from database, but ${request.url.query.id} not found.`); /* istanbul ignore next */cov_q0sdvsm27.s[47]++;\n      return;\n    } else /* istanbul ignore next */{cov_q0sdvsm27.b[7][1]++;}\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[5][1]++;}cov_q0sdvsm27.s[48]++;\n  sendStatus(response, 204, 'Deleted from database.'); /* istanbul ignore next */cov_q0sdvsm27.s[49]++;\n  logger.log('info', `User deleted ${request.url.query.id} from database.`);\n}","timestamp":"2017-12-08T02:30:07.285Z"}
{"level":"info","message":"Server is online at port 3000","timestamp":"2017-12-08T02:30:07.328Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T02:30:07.380Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T02:30:07.381Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[30]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[31]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T02:30:07.382Z"}
{"level":"info","message":"Responding with a 200 code and the following data.","timestamp":"2017-12-08T02:30:07.385Z"}
{"id":"b4a1ab60-dbbf-11e7-be8f-3bdc80e4e130","name":"Mt. Evans","location":"Colorado","elevation":"14,235","level":"info","message":"","timestamp":"2017-12-08T02:30:07.385Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T02:30:07.394Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T02:30:07.394Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[5]++;cov_q0sdvsm27.s[33]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;cov_q0sdvsm27.s[34]++;\n    storage.fetchItem(request.url.query.id).\n    then(mountain => {/* istanbul ignore next */cov_q0sdvsm27.f[6]++;cov_q0sdvsm27.s[35]++;\n      sendJSON(response, 200, mountains);\n    }).\n    catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[7]++;cov_q0sdvsm27.s[36]++;\n      console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[37]++;\n      sendStatus(response, 404, 'id not found');\n    });\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}\n}","timestamp":"2017-12-08T02:30:07.395Z"}
{"level":"info","message":"Responding with a 404 code due to id not found.","timestamp":"2017-12-08T02:30:07.396Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T02:30:07.399Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T02:30:07.400Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/lib/request-parser.js:34:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-08T02:30:07.400Z"}
{"level":"info","message":"Adding an POST url and callback","timestamp":"2017-12-08T02:32:06.771Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T02:32:06.772Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[30]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[31]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T02:32:06.772Z"}
{"level":"info","message":"Adding an GET url and callback","timestamp":"2017-12-08T02:32:06.772Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T02:32:06.772Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[5]++;cov_q0sdvsm27.s[33]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;cov_q0sdvsm27.s[34]++;\n    storage.fetchItem(request.url.query.id).\n    then(mountain => {/* istanbul ignore next */cov_q0sdvsm27.f[6]++;cov_q0sdvsm27.s[35]++;\n      sendJSON(response, 200, mountain);\n    }).\n    catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[7]++;cov_q0sdvsm27.s[36]++;\n      console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[37]++;\n      sendStatus(response, 404, 'id not found');\n    });\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}\n}","timestamp":"2017-12-08T02:32:06.772Z"}
{"level":"info","message":"Adding an DELETE url and callback","timestamp":"2017-12-08T02:32:06.772Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T02:32:06.772Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[8]++;cov_q0sdvsm27.s[39]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[5][0]++;\n    let oneMountain; /* istanbul ignore next */cov_q0sdvsm27.s[40]++;\n    for (let mountain of mountains) {/* istanbul ignore next */cov_q0sdvsm27.s[41]++;\n      if (request.url.query.id === mountain.id)\n        {/* istanbul ignore next */cov_q0sdvsm27.b[6][0]++;cov_q0sdvsm27.s[42]++;oneMountain = mountain.id;} else /* istanbul ignore next */{cov_q0sdvsm27.b[6][1]++;}cov_q0sdvsm27.s[43]++;\n      break;\n    } /* istanbul ignore next */cov_q0sdvsm27.s[44]++;\n    if (!request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[7][0]++;cov_q0sdvsm27.s[45]++;\n      sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[46]++;\n      logger.log('info', `Deletion requested from database, but ${request.url.query.id} not found.`); /* istanbul ignore next */cov_q0sdvsm27.s[47]++;\n      return;\n    } else /* istanbul ignore next */{cov_q0sdvsm27.b[7][1]++;}\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[5][1]++;}cov_q0sdvsm27.s[48]++;\n  sendStatus(response, 204, 'Deleted from database.'); /* istanbul ignore next */cov_q0sdvsm27.s[49]++;\n  logger.log('info', `User deleted ${request.url.query.id} from database.`);\n}","timestamp":"2017-12-08T02:32:06.773Z"}
{"level":"info","message":"Server is online at port 3000","timestamp":"2017-12-08T02:32:06.817Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T02:32:06.833Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T02:32:06.834Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[30]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[31]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T02:32:06.834Z"}
{"level":"info","message":"Responding with a 200 code and the following data.","timestamp":"2017-12-08T02:32:06.837Z"}
{"id":"fbd49920-dbbf-11e7-99b7-bd2951bc4d86","name":"Mt. Evans","location":"Colorado","elevation":"14,235","level":"info","message":"","timestamp":"2017-12-08T02:32:06.837Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T02:32:06.847Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T02:32:06.847Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[5]++;cov_q0sdvsm27.s[33]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;cov_q0sdvsm27.s[34]++;\n    storage.fetchItem(request.url.query.id).\n    then(mountain => {/* istanbul ignore next */cov_q0sdvsm27.f[6]++;cov_q0sdvsm27.s[35]++;\n      sendJSON(response, 200, mountain);\n    }).\n    catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[7]++;cov_q0sdvsm27.s[36]++;\n      console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[37]++;\n      sendStatus(response, 404, 'id not found');\n    });\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}\n}","timestamp":"2017-12-08T02:32:06.847Z"}
{"level":"info","message":"Responding with a 404 code due to id not found.","timestamp":"2017-12-08T02:32:06.848Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T02:32:06.852Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T02:32:06.853Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/lib/request-parser.js:34:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-08T02:32:06.853Z"}
{"level":"info","message":"Adding an POST url and callback","timestamp":"2017-12-08T02:34:01.417Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T02:34:01.418Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[30]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[31]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T02:34:01.418Z"}
{"level":"info","message":"Adding an GET url and callback","timestamp":"2017-12-08T02:34:01.418Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T02:34:01.418Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[5]++;cov_q0sdvsm27.s[33]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;cov_q0sdvsm27.s[34]++;\n    storage.fetchItem(request.url.query.id).\n    then(mountain => {/* istanbul ignore next */cov_q0sdvsm27.f[6]++;cov_q0sdvsm27.s[35]++;\n      sendJSON(response, 200, mountain);\n    }).\n    catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[7]++;cov_q0sdvsm27.s[36]++;\n      console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[37]++;\n      sendStatus(response, 404, 'id not found');\n    });\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}\n}","timestamp":"2017-12-08T02:34:01.418Z"}
{"level":"info","message":"Adding an DELETE url and callback","timestamp":"2017-12-08T02:34:01.418Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T02:34:01.418Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[8]++;cov_q0sdvsm27.s[39]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[5][0]++;\n    let oneMountain; /* istanbul ignore next */cov_q0sdvsm27.s[40]++;\n    for (let mountain of mountains) {/* istanbul ignore next */cov_q0sdvsm27.s[41]++;\n      if (request.url.query.id === mountain.id)\n        {/* istanbul ignore next */cov_q0sdvsm27.b[6][0]++;cov_q0sdvsm27.s[42]++;oneMountain = mountain.id;} else /* istanbul ignore next */{cov_q0sdvsm27.b[6][1]++;}cov_q0sdvsm27.s[43]++;\n      break;\n    } /* istanbul ignore next */cov_q0sdvsm27.s[44]++;\n    if (!request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[7][0]++;cov_q0sdvsm27.s[45]++;\n      sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[46]++;\n      logger.log('info', `Deletion requested from database, but ${request.url.query.id} not found.`); /* istanbul ignore next */cov_q0sdvsm27.s[47]++;\n      return;\n    } else /* istanbul ignore next */{cov_q0sdvsm27.b[7][1]++;}\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[5][1]++;}cov_q0sdvsm27.s[48]++;\n  sendStatus(response, 204, 'Deleted from database.'); /* istanbul ignore next */cov_q0sdvsm27.s[49]++;\n  logger.log('info', `User deleted ${request.url.query.id} from database.`);\n}","timestamp":"2017-12-08T02:34:01.418Z"}
{"level":"info","message":"Server is online at port 3000","timestamp":"2017-12-08T02:34:01.467Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T02:34:01.515Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T02:34:01.516Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[30]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[31]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T02:34:01.516Z"}
{"level":"info","message":"Responding with a 200 code and the following data.","timestamp":"2017-12-08T02:34:01.519Z"}
{"id":"402faec0-dbc0-11e7-9dee-b392cb09f239","name":"Mt. Evans","location":"Colorado","elevation":"14,235","level":"info","message":"","timestamp":"2017-12-08T02:34:01.519Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T02:34:01.529Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T02:34:01.529Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[5]++;cov_q0sdvsm27.s[33]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;cov_q0sdvsm27.s[34]++;\n    storage.fetchItem(request.url.query.id).\n    then(mountain => {/* istanbul ignore next */cov_q0sdvsm27.f[6]++;cov_q0sdvsm27.s[35]++;\n      sendJSON(response, 200, mountain);\n    }).\n    catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[7]++;cov_q0sdvsm27.s[36]++;\n      console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[37]++;\n      sendStatus(response, 404, 'id not found');\n    });\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}\n}","timestamp":"2017-12-08T02:34:01.529Z"}
{"level":"info","message":"Responding with a 200 code and the following data.","timestamp":"2017-12-08T02:34:01.530Z"}
{"id":"402faec0-dbc0-11e7-9dee-b392cb09f239","name":"Mt. Evans","location":"Colorado","elevation":"14,235","level":"info","message":"","timestamp":"2017-12-08T02:34:01.530Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T02:34:01.534Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T02:34:01.534Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/lib/request-parser.js:34:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-08T02:34:01.534Z"}
{"level":"info","message":"Adding an POST url and callback","timestamp":"2017-12-08T03:08:35.387Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T03:08:35.388Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[30]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[31]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T03:08:35.388Z"}
{"level":"info","message":"Adding an GET url and callback","timestamp":"2017-12-08T03:08:35.388Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T03:08:35.388Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[5]++;cov_q0sdvsm27.s[33]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;cov_q0sdvsm27.s[34]++;\n    storage.fetchItem(request.url.query.id).\n    then(mountain => {/* istanbul ignore next */cov_q0sdvsm27.f[6]++;cov_q0sdvsm27.s[35]++;\n      sendJSON(response, 200, mountain);\n    }).\n    catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[7]++;cov_q0sdvsm27.s[36]++;\n      console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[37]++;\n      sendStatus(response, 404, 'id not found');\n    });\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}\n}","timestamp":"2017-12-08T03:08:35.388Z"}
{"level":"info","message":"Adding an DELETE url and callback","timestamp":"2017-12-08T03:08:35.388Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T03:08:35.388Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[8]++;cov_q0sdvsm27.s[39]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[5][0]++;\n    let oneMountain; /* istanbul ignore next */cov_q0sdvsm27.s[40]++;\n    for (let mountain of mountains) {/* istanbul ignore next */cov_q0sdvsm27.s[41]++;\n      if (request.url.query.id === mountain.id)\n        {/* istanbul ignore next */cov_q0sdvsm27.b[6][0]++;cov_q0sdvsm27.s[42]++;oneMountain = mountain.id;} else /* istanbul ignore next */{cov_q0sdvsm27.b[6][1]++;}cov_q0sdvsm27.s[43]++;\n      break;\n    } /* istanbul ignore next */cov_q0sdvsm27.s[44]++;\n    if (!request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[7][0]++;cov_q0sdvsm27.s[45]++;\n      sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[46]++;\n      logger.log('info', `Deletion requested from database, but ${request.url.query.id} not found.`); /* istanbul ignore next */cov_q0sdvsm27.s[47]++;\n      return;\n    } else /* istanbul ignore next */{cov_q0sdvsm27.b[7][1]++;}\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[5][1]++;}cov_q0sdvsm27.s[48]++;\n  sendStatus(response, 204, 'Deleted from database.'); /* istanbul ignore next */cov_q0sdvsm27.s[49]++;\n  logger.log('info', `User deleted ${request.url.query.id} from database.`);\n}","timestamp":"2017-12-08T03:08:35.388Z"}
{"level":"info","message":"Server is online at port 3000","timestamp":"2017-12-08T03:08:35.454Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T03:08:35.507Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:08:35.508Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[30]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[31]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T03:08:35.508Z"}
{"level":"info","message":"Responding with a 200 code and the following data.","timestamp":"2017-12-08T03:08:35.511Z"}
{"id":"1461bf40-dbc5-11e7-bff5-ad08a7472343","name":"Mt. Evans","location":"Colorado","elevation":"14,235","level":"info","message":"","timestamp":"2017-12-08T03:08:35.511Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T03:08:35.520Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:08:35.520Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[5]++;cov_q0sdvsm27.s[33]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;cov_q0sdvsm27.s[34]++;\n    storage.fetchItem(request.url.query.id).\n    then(mountain => {/* istanbul ignore next */cov_q0sdvsm27.f[6]++;cov_q0sdvsm27.s[35]++;\n      sendJSON(response, 200, mountain);\n    }).\n    catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[7]++;cov_q0sdvsm27.s[36]++;\n      console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[37]++;\n      sendStatus(response, 404, 'id not found');\n    });\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}\n}","timestamp":"2017-12-08T03:08:35.520Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T03:08:40.525Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:08:40.526Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[5]++;cov_q0sdvsm27.s[33]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;cov_q0sdvsm27.s[34]++;\n    storage.fetchItem(request.url.query.id).\n    then(mountain => {/* istanbul ignore next */cov_q0sdvsm27.f[6]++;cov_q0sdvsm27.s[35]++;\n      sendJSON(response, 200, mountain);\n    }).\n    catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[7]++;cov_q0sdvsm27.s[36]++;\n      console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[37]++;\n      sendStatus(response, 404, 'id not found');\n    });\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}\n}","timestamp":"2017-12-08T03:08:40.526Z"}
{"level":"info","message":"Responding with a 200 code and the following data.","timestamp":"2017-12-08T03:08:40.527Z"}
{"id":"1461bf40-dbc5-11e7-bff5-ad08a7472343","name":"Mt. Evans","location":"Colorado","elevation":"14,235","level":"info","message":"","timestamp":"2017-12-08T03:08:40.527Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T03:08:40.530Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T03:08:40.531Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/lib/request-parser.js:34:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-08T03:08:40.531Z"}
{"level":"info","message":"Adding an POST url and callback","timestamp":"2017-12-08T03:08:57.873Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T03:08:57.874Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[30]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[31]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T03:08:57.874Z"}
{"level":"info","message":"Adding an GET url and callback","timestamp":"2017-12-08T03:08:57.874Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T03:08:57.874Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[5]++;cov_q0sdvsm27.s[33]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;cov_q0sdvsm27.s[34]++;\n    storage.fetchItem(request.url.query.id).\n    then(mountain => {/* istanbul ignore next */cov_q0sdvsm27.f[6]++;cov_q0sdvsm27.s[35]++;\n      sendJSON(response, 200, mountain);\n    }).\n    catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[7]++;cov_q0sdvsm27.s[36]++;\n      console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[37]++;\n      sendStatus(response, 404, 'id not found');\n    });\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}\n}","timestamp":"2017-12-08T03:08:57.874Z"}
{"level":"info","message":"Adding an DELETE url and callback","timestamp":"2017-12-08T03:08:57.874Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T03:08:57.874Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[8]++;cov_q0sdvsm27.s[39]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[5][0]++;\n    let oneMountain; /* istanbul ignore next */cov_q0sdvsm27.s[40]++;\n    for (let mountain of mountains) {/* istanbul ignore next */cov_q0sdvsm27.s[41]++;\n      if (request.url.query.id === mountain.id)\n        {/* istanbul ignore next */cov_q0sdvsm27.b[6][0]++;cov_q0sdvsm27.s[42]++;oneMountain = mountain.id;} else /* istanbul ignore next */{cov_q0sdvsm27.b[6][1]++;}cov_q0sdvsm27.s[43]++;\n      break;\n    } /* istanbul ignore next */cov_q0sdvsm27.s[44]++;\n    if (!request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[7][0]++;cov_q0sdvsm27.s[45]++;\n      sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[46]++;\n      logger.log('info', `Deletion requested from database, but ${request.url.query.id} not found.`); /* istanbul ignore next */cov_q0sdvsm27.s[47]++;\n      return;\n    } else /* istanbul ignore next */{cov_q0sdvsm27.b[7][1]++;}\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[5][1]++;}cov_q0sdvsm27.s[48]++;\n  sendStatus(response, 204, 'Deleted from database.'); /* istanbul ignore next */cov_q0sdvsm27.s[49]++;\n  logger.log('info', `User deleted ${request.url.query.id} from database.`);\n}","timestamp":"2017-12-08T03:08:57.874Z"}
{"level":"info","message":"Server is online at port 3000","timestamp":"2017-12-08T03:08:57.922Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T03:08:57.971Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:08:57.972Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[30]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[31]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T03:08:57.972Z"}
{"level":"info","message":"Responding with a 200 code and the following data.","timestamp":"2017-12-08T03:08:57.975Z"}
{"id":"21c57b40-dbc5-11e7-87a1-4501ccace290","name":"Mt. Evans","location":"Colorado","elevation":"14,235","level":"info","message":"","timestamp":"2017-12-08T03:08:57.975Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T03:08:57.984Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:08:57.984Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[5]++;cov_q0sdvsm27.s[33]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;cov_q0sdvsm27.s[34]++;\n    storage.fetchItem(request.url.query.id).\n    then(mountain => {/* istanbul ignore next */cov_q0sdvsm27.f[6]++;cov_q0sdvsm27.s[35]++;\n      sendJSON(response, 200, mountain);\n    }).\n    catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[7]++;cov_q0sdvsm27.s[36]++;\n      console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[37]++;\n      sendStatus(response, 404, 'id not found');\n    });\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}\n}","timestamp":"2017-12-08T03:08:57.984Z"}
{"level":"info","message":"Responding with a 200 code and the following data.","timestamp":"2017-12-08T03:08:57.985Z"}
{"id":"21c57b40-dbc5-11e7-87a1-4501ccace290","name":"Mt. Evans","location":"Colorado","elevation":"14,235","level":"info","message":"","timestamp":"2017-12-08T03:08:57.985Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T03:08:57.989Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T03:08:57.989Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/lib/request-parser.js:34:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-08T03:08:57.989Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T03:08:57.992Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:08:57.992Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[8]++;cov_q0sdvsm27.s[39]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[5][0]++;\n    let oneMountain; /* istanbul ignore next */cov_q0sdvsm27.s[40]++;\n    for (let mountain of mountains) {/* istanbul ignore next */cov_q0sdvsm27.s[41]++;\n      if (request.url.query.id === mountain.id)\n        {/* istanbul ignore next */cov_q0sdvsm27.b[6][0]++;cov_q0sdvsm27.s[42]++;oneMountain = mountain.id;} else /* istanbul ignore next */{cov_q0sdvsm27.b[6][1]++;}cov_q0sdvsm27.s[43]++;\n      break;\n    } /* istanbul ignore next */cov_q0sdvsm27.s[44]++;\n    if (!request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[7][0]++;cov_q0sdvsm27.s[45]++;\n      sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[46]++;\n      logger.log('info', `Deletion requested from database, but ${request.url.query.id} not found.`); /* istanbul ignore next */cov_q0sdvsm27.s[47]++;\n      return;\n    } else /* istanbul ignore next */{cov_q0sdvsm27.b[7][1]++;}\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[5][1]++;}cov_q0sdvsm27.s[48]++;\n  sendStatus(response, 204, 'Deleted from database.'); /* istanbul ignore next */cov_q0sdvsm27.s[49]++;\n  logger.log('info', `User deleted ${request.url.query.id} from database.`);\n}","timestamp":"2017-12-08T03:08:57.992Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T03:08:57.993Z"}
{"message":"mountains is not defined","stack":"ReferenceError: mountains is not defined\n    at Object.<anonymous>.router.delete (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/route/mountain-router.js:76:26)\n    at requestParser.parse.then.request (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/lib/router.js:55:14)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-08T03:08:57.993Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T03:08:57.995Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:08:57.996Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[8]++;cov_q0sdvsm27.s[39]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[5][0]++;\n    let oneMountain; /* istanbul ignore next */cov_q0sdvsm27.s[40]++;\n    for (let mountain of mountains) {/* istanbul ignore next */cov_q0sdvsm27.s[41]++;\n      if (request.url.query.id === mountain.id)\n        {/* istanbul ignore next */cov_q0sdvsm27.b[6][0]++;cov_q0sdvsm27.s[42]++;oneMountain = mountain.id;} else /* istanbul ignore next */{cov_q0sdvsm27.b[6][1]++;}cov_q0sdvsm27.s[43]++;\n      break;\n    } /* istanbul ignore next */cov_q0sdvsm27.s[44]++;\n    if (!request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[7][0]++;cov_q0sdvsm27.s[45]++;\n      sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[46]++;\n      logger.log('info', `Deletion requested from database, but ${request.url.query.id} not found.`); /* istanbul ignore next */cov_q0sdvsm27.s[47]++;\n      return;\n    } else /* istanbul ignore next */{cov_q0sdvsm27.b[7][1]++;}\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[5][1]++;}cov_q0sdvsm27.s[48]++;\n  sendStatus(response, 204, 'Deleted from database.'); /* istanbul ignore next */cov_q0sdvsm27.s[49]++;\n  logger.log('info', `User deleted ${request.url.query.id} from database.`);\n}","timestamp":"2017-12-08T03:08:57.996Z"}
{"level":"info","message":"Responding with a 204 code due to Deleted from database..","timestamp":"2017-12-08T03:08:57.996Z"}
{"level":"info","message":"User deleted undefined from database.","timestamp":"2017-12-08T03:08:57.996Z"}
{"level":"info","message":"Adding an POST url and callback","timestamp":"2017-12-08T03:11:36.230Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T03:11:36.231Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[30]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[31]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T03:11:36.231Z"}
{"level":"info","message":"Adding an GET url and callback","timestamp":"2017-12-08T03:11:36.231Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T03:11:36.231Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[5]++;cov_q0sdvsm27.s[33]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;cov_q0sdvsm27.s[34]++;\n    storage.fetchItem(request.url.query.id).\n    then(mountain => {/* istanbul ignore next */cov_q0sdvsm27.f[6]++;cov_q0sdvsm27.s[35]++;\n      sendJSON(response, 200, mountain);\n    }).\n    catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[7]++;cov_q0sdvsm27.s[36]++;\n      console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[37]++;\n      sendStatus(response, 404, 'id not found');\n    });\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}\n}","timestamp":"2017-12-08T03:11:36.231Z"}
{"level":"info","message":"Adding an DELETE url and callback","timestamp":"2017-12-08T03:11:36.231Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T03:11:36.231Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[8]++;cov_q0sdvsm27.s[39]++;\n  storage.fetchItem(request.url.query.id).\n  then(mountain => {/* istanbul ignore next */cov_q0sdvsm27.f[9]++;cov_q0sdvsm27.s[40]++;\n    sendStatus(response, 204, 'Deleted from database.'); /* istanbul ignore next */cov_q0sdvsm27.s[41]++;\n    logger.log('info', `User deleted ${request.url.query.id} from database.`);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[10]++;cov_q0sdvsm27.s[42]++;\n    console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[43]++;\n    sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[44]++;\n    logger.log('info', `Deletion requested from database, but ${request.url.query.id} not found.`);\n  });\n}","timestamp":"2017-12-08T03:11:36.231Z"}
{"level":"info","message":"Server is online at port 3000","timestamp":"2017-12-08T03:11:36.276Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T03:11:36.326Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:11:36.327Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[30]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[31]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T03:11:36.327Z"}
{"level":"info","message":"Responding with a 200 code and the following data.","timestamp":"2017-12-08T03:11:36.331Z"}
{"id":"80288970-dbc5-11e7-9703-7fb1249842c2","name":"Mt. Evans","location":"Colorado","elevation":"14,235","level":"info","message":"","timestamp":"2017-12-08T03:11:36.331Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T03:11:36.340Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:11:36.340Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[5]++;cov_q0sdvsm27.s[33]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;cov_q0sdvsm27.s[34]++;\n    storage.fetchItem(request.url.query.id).\n    then(mountain => {/* istanbul ignore next */cov_q0sdvsm27.f[6]++;cov_q0sdvsm27.s[35]++;\n      sendJSON(response, 200, mountain);\n    }).\n    catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[7]++;cov_q0sdvsm27.s[36]++;\n      console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[37]++;\n      sendStatus(response, 404, 'id not found');\n    });\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}\n}","timestamp":"2017-12-08T03:11:36.340Z"}
{"level":"info","message":"Responding with a 200 code and the following data.","timestamp":"2017-12-08T03:11:36.341Z"}
{"id":"80288970-dbc5-11e7-9703-7fb1249842c2","name":"Mt. Evans","location":"Colorado","elevation":"14,235","level":"info","message":"","timestamp":"2017-12-08T03:11:36.341Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T03:11:36.345Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T03:11:36.345Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/lib/request-parser.js:34:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-08T03:11:36.345Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T03:11:36.348Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:11:36.348Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[8]++;cov_q0sdvsm27.s[39]++;\n  storage.fetchItem(request.url.query.id).\n  then(mountain => {/* istanbul ignore next */cov_q0sdvsm27.f[9]++;cov_q0sdvsm27.s[40]++;\n    sendStatus(response, 204, 'Deleted from database.'); /* istanbul ignore next */cov_q0sdvsm27.s[41]++;\n    logger.log('info', `User deleted ${request.url.query.id} from database.`);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[10]++;cov_q0sdvsm27.s[42]++;\n    console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[43]++;\n    sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[44]++;\n    logger.log('info', `Deletion requested from database, but ${request.url.query.id} not found.`);\n  });\n}","timestamp":"2017-12-08T03:11:36.348Z"}
{"level":"info","message":"Responding with a 404 code due to id not found.","timestamp":"2017-12-08T03:11:36.349Z"}
{"level":"info","message":"Deletion requested from database, but ${mountainId} not found.","timestamp":"2017-12-08T03:11:36.349Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T03:11:36.352Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:11:36.352Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[8]++;cov_q0sdvsm27.s[39]++;\n  storage.fetchItem(request.url.query.id).\n  then(mountain => {/* istanbul ignore next */cov_q0sdvsm27.f[9]++;cov_q0sdvsm27.s[40]++;\n    sendStatus(response, 204, 'Deleted from database.'); /* istanbul ignore next */cov_q0sdvsm27.s[41]++;\n    logger.log('info', `User deleted ${request.url.query.id} from database.`);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[10]++;cov_q0sdvsm27.s[42]++;\n    console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[43]++;\n    sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[44]++;\n    logger.log('info', `Deletion requested from database, but ${request.url.query.id} not found.`);\n  });\n}","timestamp":"2017-12-08T03:11:36.352Z"}
{"level":"info","message":"Responding with a 404 code due to id not found.","timestamp":"2017-12-08T03:11:36.353Z"}
{"level":"info","message":"Deletion requested from database, but undefined not found.","timestamp":"2017-12-08T03:11:36.353Z"}
{"level":"info","message":"Adding an POST url and callback","timestamp":"2017-12-08T03:12:03.156Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T03:12:03.156Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[30]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[31]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T03:12:03.156Z"}
{"level":"info","message":"Adding an GET url and callback","timestamp":"2017-12-08T03:12:03.156Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T03:12:03.156Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[5]++;cov_q0sdvsm27.s[33]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;cov_q0sdvsm27.s[34]++;\n    storage.fetchItem(request.url.query.id).\n    then(mountain => {/* istanbul ignore next */cov_q0sdvsm27.f[6]++;cov_q0sdvsm27.s[35]++;\n      sendJSON(response, 200, mountain);\n    }).\n    catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[7]++;cov_q0sdvsm27.s[36]++;\n      console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[37]++;\n      sendStatus(response, 404, 'id not found');\n    });\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}\n}","timestamp":"2017-12-08T03:12:03.157Z"}
{"level":"info","message":"Adding an DELETE url and callback","timestamp":"2017-12-08T03:12:03.157Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T03:12:03.157Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[8]++;cov_q0sdvsm27.s[39]++;\n  storage.fetchItem(request.url.query.id).\n  then(mountain => {/* istanbul ignore next */cov_q0sdvsm27.f[9]++;cov_q0sdvsm27.s[40]++;\n    sendStatus(response, 204, 'Deleted from database.'); /* istanbul ignore next */cov_q0sdvsm27.s[41]++;\n    logger.log('info', `User deleted ${request.url.query.id} from database.`);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[10]++;cov_q0sdvsm27.s[42]++;\n    console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[43]++;\n    sendStatus(response, 400, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[44]++;\n    logger.log('info', `Deletion requested from database, but ${request.url.query.id} not found.`);\n  });\n}","timestamp":"2017-12-08T03:12:03.157Z"}
{"level":"info","message":"Server is online at port 3000","timestamp":"2017-12-08T03:12:03.203Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T03:12:03.252Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:12:03.253Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[30]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[31]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T03:12:03.253Z"}
{"level":"info","message":"Responding with a 200 code and the following data.","timestamp":"2017-12-08T03:12:03.257Z"}
{"id":"90351e50-dbc5-11e7-836e-d1e9f7601943","name":"Mt. Evans","location":"Colorado","elevation":"14,235","level":"info","message":"","timestamp":"2017-12-08T03:12:03.257Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T03:12:03.266Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:12:03.267Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[5]++;cov_q0sdvsm27.s[33]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;cov_q0sdvsm27.s[34]++;\n    storage.fetchItem(request.url.query.id).\n    then(mountain => {/* istanbul ignore next */cov_q0sdvsm27.f[6]++;cov_q0sdvsm27.s[35]++;\n      sendJSON(response, 200, mountain);\n    }).\n    catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[7]++;cov_q0sdvsm27.s[36]++;\n      console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[37]++;\n      sendStatus(response, 404, 'id not found');\n    });\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}\n}","timestamp":"2017-12-08T03:12:03.267Z"}
{"level":"info","message":"Responding with a 200 code and the following data.","timestamp":"2017-12-08T03:12:03.267Z"}
{"id":"90351e50-dbc5-11e7-836e-d1e9f7601943","name":"Mt. Evans","location":"Colorado","elevation":"14,235","level":"info","message":"","timestamp":"2017-12-08T03:12:03.268Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T03:12:03.271Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T03:12:03.271Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/lib/request-parser.js:34:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-08T03:12:03.271Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T03:12:03.274Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:12:03.275Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[8]++;cov_q0sdvsm27.s[39]++;\n  storage.fetchItem(request.url.query.id).\n  then(mountain => {/* istanbul ignore next */cov_q0sdvsm27.f[9]++;cov_q0sdvsm27.s[40]++;\n    sendStatus(response, 204, 'Deleted from database.'); /* istanbul ignore next */cov_q0sdvsm27.s[41]++;\n    logger.log('info', `User deleted ${request.url.query.id} from database.`);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[10]++;cov_q0sdvsm27.s[42]++;\n    console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[43]++;\n    sendStatus(response, 400, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[44]++;\n    logger.log('info', `Deletion requested from database, but ${request.url.query.id} not found.`);\n  });\n}","timestamp":"2017-12-08T03:12:03.275Z"}
{"level":"info","message":"Responding with a 400 code due to id not found.","timestamp":"2017-12-08T03:12:03.275Z"}
{"level":"info","message":"Deletion requested from database, but ${mountainId} not found.","timestamp":"2017-12-08T03:12:03.276Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T03:12:03.278Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:12:03.278Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[8]++;cov_q0sdvsm27.s[39]++;\n  storage.fetchItem(request.url.query.id).\n  then(mountain => {/* istanbul ignore next */cov_q0sdvsm27.f[9]++;cov_q0sdvsm27.s[40]++;\n    sendStatus(response, 204, 'Deleted from database.'); /* istanbul ignore next */cov_q0sdvsm27.s[41]++;\n    logger.log('info', `User deleted ${request.url.query.id} from database.`);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[10]++;cov_q0sdvsm27.s[42]++;\n    console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[43]++;\n    sendStatus(response, 400, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[44]++;\n    logger.log('info', `Deletion requested from database, but ${request.url.query.id} not found.`);\n  });\n}","timestamp":"2017-12-08T03:12:03.278Z"}
{"level":"info","message":"Responding with a 400 code due to id not found.","timestamp":"2017-12-08T03:12:03.280Z"}
{"level":"info","message":"Deletion requested from database, but undefined not found.","timestamp":"2017-12-08T03:12:03.280Z"}
{"level":"info","message":"Adding an POST url and callback","timestamp":"2017-12-08T03:13:10.376Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T03:13:10.377Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[30]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[31]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T03:13:10.377Z"}
{"level":"info","message":"Adding an GET url and callback","timestamp":"2017-12-08T03:13:10.377Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T03:13:10.377Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[5]++;cov_q0sdvsm27.s[33]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;cov_q0sdvsm27.s[34]++;\n    storage.fetchItem(request.url.query.id).\n    then(mountain => {/* istanbul ignore next */cov_q0sdvsm27.f[6]++;cov_q0sdvsm27.s[35]++;\n      sendJSON(response, 200, mountain);\n    }).\n    catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[7]++;cov_q0sdvsm27.s[36]++;\n      console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[37]++;\n      sendStatus(response, 404, 'id not found');\n    });\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}\n}","timestamp":"2017-12-08T03:13:10.377Z"}
{"level":"info","message":"Adding an DELETE url and callback","timestamp":"2017-12-08T03:13:10.377Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T03:13:10.377Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[8]++;cov_q0sdvsm27.s[39]++;\n  storage.deleteItem(request.url.query.id).\n  then(mountain => {/* istanbul ignore next */cov_q0sdvsm27.f[9]++;cov_q0sdvsm27.s[40]++;\n    sendStatus(response, 204, 'Deleted from database.'); /* istanbul ignore next */cov_q0sdvsm27.s[41]++;\n    logger.log('info', `User deleted ${request.url.query.id} from database.`);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[10]++;cov_q0sdvsm27.s[42]++;\n    console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[43]++;\n    sendStatus(response, 400, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[44]++;\n    logger.log('info', `Deletion requested from database, but ${request.url.query.id} not found.`);\n  });\n}","timestamp":"2017-12-08T03:13:10.377Z"}
{"level":"info","message":"Server is online at port 3000","timestamp":"2017-12-08T03:13:10.442Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T03:13:10.493Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:13:10.494Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[30]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[31]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T03:13:10.494Z"}
{"level":"info","message":"Responding with a 200 code and the following data.","timestamp":"2017-12-08T03:13:10.498Z"}
{"id":"b8496ef0-dbc5-11e7-a90c-6d2f745cd3e7","name":"Mt. Evans","location":"Colorado","elevation":"14,235","level":"info","message":"","timestamp":"2017-12-08T03:13:10.498Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T03:13:10.507Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:13:10.507Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[5]++;cov_q0sdvsm27.s[33]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;cov_q0sdvsm27.s[34]++;\n    storage.fetchItem(request.url.query.id).\n    then(mountain => {/* istanbul ignore next */cov_q0sdvsm27.f[6]++;cov_q0sdvsm27.s[35]++;\n      sendJSON(response, 200, mountain);\n    }).\n    catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[7]++;cov_q0sdvsm27.s[36]++;\n      console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[37]++;\n      sendStatus(response, 404, 'id not found');\n    });\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}\n}","timestamp":"2017-12-08T03:13:10.508Z"}
{"level":"info","message":"Responding with a 200 code and the following data.","timestamp":"2017-12-08T03:13:10.508Z"}
{"id":"b8496ef0-dbc5-11e7-a90c-6d2f745cd3e7","name":"Mt. Evans","location":"Colorado","elevation":"14,235","level":"info","message":"","timestamp":"2017-12-08T03:13:10.509Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T03:13:10.512Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T03:13:10.512Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/lib/request-parser.js:34:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-08T03:13:10.512Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T03:13:10.515Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:13:10.516Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[8]++;cov_q0sdvsm27.s[39]++;\n  storage.deleteItem(request.url.query.id).\n  then(mountain => {/* istanbul ignore next */cov_q0sdvsm27.f[9]++;cov_q0sdvsm27.s[40]++;\n    sendStatus(response, 204, 'Deleted from database.'); /* istanbul ignore next */cov_q0sdvsm27.s[41]++;\n    logger.log('info', `User deleted ${request.url.query.id} from database.`);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[10]++;cov_q0sdvsm27.s[42]++;\n    console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[43]++;\n    sendStatus(response, 400, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[44]++;\n    logger.log('info', `Deletion requested from database, but ${request.url.query.id} not found.`);\n  });\n}","timestamp":"2017-12-08T03:13:10.516Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T03:13:15.520Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:13:15.520Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[8]++;cov_q0sdvsm27.s[39]++;\n  storage.deleteItem(request.url.query.id).\n  then(mountain => {/* istanbul ignore next */cov_q0sdvsm27.f[9]++;cov_q0sdvsm27.s[40]++;\n    sendStatus(response, 204, 'Deleted from database.'); /* istanbul ignore next */cov_q0sdvsm27.s[41]++;\n    logger.log('info', `User deleted ${request.url.query.id} from database.`);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[10]++;cov_q0sdvsm27.s[42]++;\n    console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[43]++;\n    sendStatus(response, 400, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[44]++;\n    logger.log('info', `Deletion requested from database, but ${request.url.query.id} not found.`);\n  });\n}","timestamp":"2017-12-08T03:13:15.520Z"}
{"level":"info","message":"Adding an POST url and callback","timestamp":"2017-12-08T03:13:48.875Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T03:13:48.876Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[30]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[31]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T03:13:48.876Z"}
{"level":"info","message":"Adding an GET url and callback","timestamp":"2017-12-08T03:13:48.876Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T03:13:48.876Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[5]++;cov_q0sdvsm27.s[33]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;cov_q0sdvsm27.s[34]++;\n    storage.fetchItem(request.url.query.id).\n    then(mountain => {/* istanbul ignore next */cov_q0sdvsm27.f[6]++;cov_q0sdvsm27.s[35]++;\n      sendJSON(response, 200, mountain);\n    }).\n    catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[7]++;cov_q0sdvsm27.s[36]++;\n      console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[37]++;\n      sendStatus(response, 404, 'id not found');\n    });\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}\n}","timestamp":"2017-12-08T03:13:48.876Z"}
{"level":"info","message":"Adding an DELETE url and callback","timestamp":"2017-12-08T03:13:48.876Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T03:13:48.876Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[8]++;cov_q0sdvsm27.s[39]++;\n  storage.deleteItem(request.url.query.id).\n  then(mountain => {/* istanbul ignore next */cov_q0sdvsm27.f[9]++;cov_q0sdvsm27.s[40]++;\n    sendStatus(response, 204, 'Deleted from database.'); /* istanbul ignore next */cov_q0sdvsm27.s[41]++;\n    logger.log('info', `User deleted ${request.url.query.id} from database.`);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[10]++;cov_q0sdvsm27.s[42]++;\n    console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[43]++;\n    sendStatus(response, 400, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[44]++;\n    logger.log('info', `Deletion requested from database, but ${request.url.query.id} not found.`);\n  });\n}","timestamp":"2017-12-08T03:13:48.876Z"}
{"level":"info","message":"Server is online at port 3000","timestamp":"2017-12-08T03:13:48.942Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T03:13:48.991Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:13:48.992Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[30]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[31]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T03:13:48.992Z"}
{"level":"info","message":"Responding with a 200 code and the following data.","timestamp":"2017-12-08T03:13:48.996Z"}
{"id":"cf3bc310-dbc5-11e7-bf09-f9c239f76f0c","name":"Mt. Evans","location":"Colorado","elevation":"14,235","level":"info","message":"","timestamp":"2017-12-08T03:13:48.996Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T03:13:49.005Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:13:49.006Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[5]++;cov_q0sdvsm27.s[33]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;cov_q0sdvsm27.s[34]++;\n    storage.fetchItem(request.url.query.id).\n    then(mountain => {/* istanbul ignore next */cov_q0sdvsm27.f[6]++;cov_q0sdvsm27.s[35]++;\n      sendJSON(response, 200, mountain);\n    }).\n    catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[7]++;cov_q0sdvsm27.s[36]++;\n      console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[37]++;\n      sendStatus(response, 404, 'id not found');\n    });\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}\n}","timestamp":"2017-12-08T03:13:49.006Z"}
{"level":"info","message":"Responding with a 200 code and the following data.","timestamp":"2017-12-08T03:13:49.007Z"}
{"id":"cf3bc310-dbc5-11e7-bf09-f9c239f76f0c","name":"Mt. Evans","location":"Colorado","elevation":"14,235","level":"info","message":"","timestamp":"2017-12-08T03:13:49.007Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T03:13:49.010Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T03:13:49.010Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/lib/request-parser.js:34:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-08T03:13:49.010Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T03:13:49.013Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:13:49.013Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[8]++;cov_q0sdvsm27.s[39]++;\n  storage.deleteItem(request.url.query.id).\n  then(mountain => {/* istanbul ignore next */cov_q0sdvsm27.f[9]++;cov_q0sdvsm27.s[40]++;\n    sendStatus(response, 204, 'Deleted from database.'); /* istanbul ignore next */cov_q0sdvsm27.s[41]++;\n    logger.log('info', `User deleted ${request.url.query.id} from database.`);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[10]++;cov_q0sdvsm27.s[42]++;\n    console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[43]++;\n    sendStatus(response, 400, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[44]++;\n    logger.log('info', `Deletion requested from database, but ${request.url.query.id} not found.`);\n  });\n}","timestamp":"2017-12-08T03:13:49.013Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T03:13:54.015Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:13:54.016Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[8]++;cov_q0sdvsm27.s[39]++;\n  storage.deleteItem(request.url.query.id).\n  then(mountain => {/* istanbul ignore next */cov_q0sdvsm27.f[9]++;cov_q0sdvsm27.s[40]++;\n    sendStatus(response, 204, 'Deleted from database.'); /* istanbul ignore next */cov_q0sdvsm27.s[41]++;\n    logger.log('info', `User deleted ${request.url.query.id} from database.`);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[10]++;cov_q0sdvsm27.s[42]++;\n    console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[43]++;\n    sendStatus(response, 400, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[44]++;\n    logger.log('info', `Deletion requested from database, but ${request.url.query.id} not found.`);\n  });\n}","timestamp":"2017-12-08T03:13:54.016Z"}
{"level":"info","message":"Adding an POST url and callback","timestamp":"2017-12-08T03:15:40.951Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T03:15:40.952Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[30]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[31]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T03:15:40.952Z"}
{"level":"info","message":"Adding an GET url and callback","timestamp":"2017-12-08T03:15:40.952Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T03:15:40.952Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[5]++;cov_q0sdvsm27.s[33]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;cov_q0sdvsm27.s[34]++;\n    storage.fetchItem(request.url.query.id).\n    then(mountain => {/* istanbul ignore next */cov_q0sdvsm27.f[6]++;cov_q0sdvsm27.s[35]++;\n      sendJSON(response, 200, mountain);\n    }).\n    catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[7]++;cov_q0sdvsm27.s[36]++;\n      console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[37]++;\n      sendStatus(response, 404, 'id not found');\n    });\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}\n}","timestamp":"2017-12-08T03:15:40.952Z"}
{"level":"info","message":"Adding an DELETE url and callback","timestamp":"2017-12-08T03:15:40.952Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T03:15:40.952Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[8]++;cov_q0sdvsm27.s[39]++;\n  storage.deleteItem(request.url.query.id).\n  then(mountain => {/* istanbul ignore next */cov_q0sdvsm27.f[9]++;cov_q0sdvsm27.s[40]++;\n    sendStatus(response, 204, 'Deleted from database.'); /* istanbul ignore next */cov_q0sdvsm27.s[41]++;\n    logger.log('info', `User deleted ${request.url.query.id} from database.`);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[10]++;cov_q0sdvsm27.s[42]++;\n    console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[43]++;\n    sendStatus(response, 400, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[44]++;\n    logger.log('info', `Deletion requested from database, but ${request.url.query.id} not found.`);\n  });\n}","timestamp":"2017-12-08T03:15:40.952Z"}
{"level":"info","message":"Server is online at port 3000","timestamp":"2017-12-08T03:15:41.013Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T03:15:41.029Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:15:41.031Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[30]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[31]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T03:15:41.031Z"}
{"level":"info","message":"Responding with a 200 code and the following data.","timestamp":"2017-12-08T03:15:41.034Z"}
{"id":"12036770-dbc6-11e7-a246-555a8f9be49d","name":"Mt. Evans","location":"Colorado","elevation":"14,235","level":"info","message":"","timestamp":"2017-12-08T03:15:41.034Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T03:15:41.043Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:15:41.044Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[5]++;cov_q0sdvsm27.s[33]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;cov_q0sdvsm27.s[34]++;\n    storage.fetchItem(request.url.query.id).\n    then(mountain => {/* istanbul ignore next */cov_q0sdvsm27.f[6]++;cov_q0sdvsm27.s[35]++;\n      sendJSON(response, 200, mountain);\n    }).\n    catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[7]++;cov_q0sdvsm27.s[36]++;\n      console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[37]++;\n      sendStatus(response, 404, 'id not found');\n    });\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}\n}","timestamp":"2017-12-08T03:15:41.044Z"}
{"level":"info","message":"Responding with a 200 code and the following data.","timestamp":"2017-12-08T03:15:41.045Z"}
{"id":"12036770-dbc6-11e7-a246-555a8f9be49d","name":"Mt. Evans","location":"Colorado","elevation":"14,235","level":"info","message":"","timestamp":"2017-12-08T03:15:41.045Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T03:15:41.048Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T03:15:41.049Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/lib/request-parser.js:34:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-08T03:15:41.049Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T03:15:41.051Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:15:41.052Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[8]++;cov_q0sdvsm27.s[39]++;\n  storage.deleteItem(request.url.query.id).\n  then(mountain => {/* istanbul ignore next */cov_q0sdvsm27.f[9]++;cov_q0sdvsm27.s[40]++;\n    sendStatus(response, 204, 'Deleted from database.'); /* istanbul ignore next */cov_q0sdvsm27.s[41]++;\n    logger.log('info', `User deleted ${request.url.query.id} from database.`);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[10]++;cov_q0sdvsm27.s[42]++;\n    console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[43]++;\n    sendStatus(response, 400, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[44]++;\n    logger.log('info', `Deletion requested from database, but ${request.url.query.id} not found.`);\n  });\n}","timestamp":"2017-12-08T03:15:41.052Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T03:15:46.056Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:15:46.056Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[8]++;cov_q0sdvsm27.s[39]++;\n  storage.deleteItem(request.url.query.id).\n  then(mountain => {/* istanbul ignore next */cov_q0sdvsm27.f[9]++;cov_q0sdvsm27.s[40]++;\n    sendStatus(response, 204, 'Deleted from database.'); /* istanbul ignore next */cov_q0sdvsm27.s[41]++;\n    logger.log('info', `User deleted ${request.url.query.id} from database.`);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[10]++;cov_q0sdvsm27.s[42]++;\n    console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[43]++;\n    sendStatus(response, 400, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[44]++;\n    logger.log('info', `Deletion requested from database, but ${request.url.query.id} not found.`);\n  });\n}","timestamp":"2017-12-08T03:15:46.056Z"}
{"level":"info","message":"Adding an POST url and callback","timestamp":"2017-12-08T03:16:22.286Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T03:16:22.287Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[30]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[31]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T03:16:22.287Z"}
{"level":"info","message":"Adding an GET url and callback","timestamp":"2017-12-08T03:16:22.287Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T03:16:22.287Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[5]++;cov_q0sdvsm27.s[33]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;cov_q0sdvsm27.s[34]++;\n    storage.fetchItem(request.url.query.id).\n    then(mountain => {/* istanbul ignore next */cov_q0sdvsm27.f[6]++;cov_q0sdvsm27.s[35]++;\n      sendJSON(response, 200, mountain);\n    }).\n    catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[7]++;cov_q0sdvsm27.s[36]++;\n      console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[37]++;\n      sendStatus(response, 404, 'id not found');\n    });\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}\n}","timestamp":"2017-12-08T03:16:22.287Z"}
{"level":"info","message":"Adding an DELETE url and callback","timestamp":"2017-12-08T03:16:22.287Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T03:16:22.287Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[8]++;cov_q0sdvsm27.s[39]++;\n  storage.deleteItem(request.url.query.id).\n  then(mountain => {/* istanbul ignore next */cov_q0sdvsm27.f[9]++;cov_q0sdvsm27.s[40]++;\n    sendStatus(response, 204, 'Deleted from database.'); /* istanbul ignore next */cov_q0sdvsm27.s[41]++;\n    logger.log('info', `User deleted ${request.url.query.id} from database.`);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[10]++;cov_q0sdvsm27.s[42]++;\n    console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[43]++;\n    sendStatus(response, 400, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[44]++;\n    logger.log('info', `Deletion requested from database, but ${request.url.query.id} not found.`);\n  });\n}","timestamp":"2017-12-08T03:16:22.287Z"}
{"level":"info","message":"Server is online at port 3000","timestamp":"2017-12-08T03:16:22.350Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T03:16:22.399Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:16:22.400Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[30]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[31]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T03:16:22.400Z"}
{"level":"info","message":"Responding with a 200 code and the following data.","timestamp":"2017-12-08T03:16:22.403Z"}
{"id":"2aabf710-dbc6-11e7-b380-993c6805b8e3","name":"Mt. Evans","location":"Colorado","elevation":"14,235","level":"info","message":"","timestamp":"2017-12-08T03:16:22.404Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T03:16:22.412Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:16:22.413Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[5]++;cov_q0sdvsm27.s[33]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;cov_q0sdvsm27.s[34]++;\n    storage.fetchItem(request.url.query.id).\n    then(mountain => {/* istanbul ignore next */cov_q0sdvsm27.f[6]++;cov_q0sdvsm27.s[35]++;\n      sendJSON(response, 200, mountain);\n    }).\n    catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[7]++;cov_q0sdvsm27.s[36]++;\n      console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[37]++;\n      sendStatus(response, 404, 'id not found');\n    });\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}\n}","timestamp":"2017-12-08T03:16:22.413Z"}
{"level":"info","message":"Responding with a 200 code and the following data.","timestamp":"2017-12-08T03:16:22.413Z"}
{"id":"2aabf710-dbc6-11e7-b380-993c6805b8e3","name":"Mt. Evans","location":"Colorado","elevation":"14,235","level":"info","message":"","timestamp":"2017-12-08T03:16:22.413Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T03:16:22.417Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T03:16:22.417Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/lib/request-parser.js:34:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-08T03:16:22.417Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T03:16:22.420Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:16:22.420Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[8]++;cov_q0sdvsm27.s[39]++;\n  storage.deleteItem(request.url.query.id).\n  then(mountain => {/* istanbul ignore next */cov_q0sdvsm27.f[9]++;cov_q0sdvsm27.s[40]++;\n    sendStatus(response, 204, 'Deleted from database.'); /* istanbul ignore next */cov_q0sdvsm27.s[41]++;\n    logger.log('info', `User deleted ${request.url.query.id} from database.`);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[10]++;cov_q0sdvsm27.s[42]++;\n    console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[43]++;\n    sendStatus(response, 400, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[44]++;\n    logger.log('info', `Deletion requested from database, but ${request.url.query.id} not found.`);\n  });\n}","timestamp":"2017-12-08T03:16:22.420Z"}
{"level":"info","message":"Adding an POST url and callback","timestamp":"2017-12-08T03:17:05.620Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T03:17:05.620Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[30]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[31]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T03:17:05.621Z"}
{"level":"info","message":"Adding an GET url and callback","timestamp":"2017-12-08T03:17:05.621Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T03:17:05.621Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[5]++;cov_q0sdvsm27.s[33]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;cov_q0sdvsm27.s[34]++;\n    storage.fetchItem(request.url.query.id).\n    then(mountain => {/* istanbul ignore next */cov_q0sdvsm27.f[6]++;cov_q0sdvsm27.s[35]++;\n      sendJSON(response, 200, mountain);\n    }).\n    catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[7]++;cov_q0sdvsm27.s[36]++;\n      console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[37]++;\n      sendStatus(response, 404, 'id not found');\n    });\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}\n}","timestamp":"2017-12-08T03:17:05.621Z"}
{"level":"info","message":"Adding an DELETE url and callback","timestamp":"2017-12-08T03:17:05.621Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T03:17:05.621Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[8]++;cov_q0sdvsm27.s[39]++;\n  storage.deleteItem(request.url.query.id).\n  then(mountain => {/* istanbul ignore next */cov_q0sdvsm27.f[9]++;cov_q0sdvsm27.s[40]++;\n    sendStatus(response, 204, 'Deleted from database.'); /* istanbul ignore next */cov_q0sdvsm27.s[41]++;\n    logger.log('info', `User deleted ${request.url.query.id} from database.`);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[10]++;cov_q0sdvsm27.s[42]++;\n    console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[43]++;\n    sendStatus(response, 400, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[44]++;\n    logger.log('info', `Deletion requested from database, but ${request.url.query.id} not found.`);\n  });\n}","timestamp":"2017-12-08T03:17:05.621Z"}
{"level":"info","message":"Server is online at port 3000","timestamp":"2017-12-08T03:17:05.667Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T03:17:05.716Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:17:05.717Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[30]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[31]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T03:17:05.717Z"}
{"level":"info","message":"Responding with a 200 code and the following data.","timestamp":"2017-12-08T03:17:05.720Z"}
{"id":"447d7650-dbc6-11e7-a857-2f21c7f19fe1","name":"Mt. Evans","location":"Colorado","elevation":"14,235","level":"info","message":"","timestamp":"2017-12-08T03:17:05.720Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T03:17:05.729Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:17:05.729Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[5]++;cov_q0sdvsm27.s[33]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;cov_q0sdvsm27.s[34]++;\n    storage.fetchItem(request.url.query.id).\n    then(mountain => {/* istanbul ignore next */cov_q0sdvsm27.f[6]++;cov_q0sdvsm27.s[35]++;\n      sendJSON(response, 200, mountain);\n    }).\n    catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[7]++;cov_q0sdvsm27.s[36]++;\n      console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[37]++;\n      sendStatus(response, 404, 'id not found');\n    });\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}\n}","timestamp":"2017-12-08T03:17:05.730Z"}
{"level":"info","message":"Responding with a 200 code and the following data.","timestamp":"2017-12-08T03:17:05.730Z"}
{"id":"447d7650-dbc6-11e7-a857-2f21c7f19fe1","name":"Mt. Evans","location":"Colorado","elevation":"14,235","level":"info","message":"","timestamp":"2017-12-08T03:17:05.730Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T03:17:05.734Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T03:17:05.734Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/lib/request-parser.js:34:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-08T03:17:05.734Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T03:17:05.737Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:17:05.737Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[8]++;cov_q0sdvsm27.s[39]++;\n  storage.deleteItem(request.url.query.id).\n  then(mountain => {/* istanbul ignore next */cov_q0sdvsm27.f[9]++;cov_q0sdvsm27.s[40]++;\n    sendStatus(response, 204, 'Deleted from database.'); /* istanbul ignore next */cov_q0sdvsm27.s[41]++;\n    logger.log('info', `User deleted ${request.url.query.id} from database.`);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[10]++;cov_q0sdvsm27.s[42]++;\n    console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[43]++;\n    sendStatus(response, 400, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[44]++;\n    logger.log('info', `Deletion requested from database, but ${request.url.query.id} not found.`);\n  });\n}","timestamp":"2017-12-08T03:17:05.737Z"}
{"level":"info","message":"Adding an POST url and callback","timestamp":"2017-12-08T03:18:17.097Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T03:18:17.098Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[30]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[31]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T03:18:17.098Z"}
{"level":"info","message":"Adding an GET url and callback","timestamp":"2017-12-08T03:18:17.098Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T03:18:17.098Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[5]++;cov_q0sdvsm27.s[33]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;cov_q0sdvsm27.s[34]++;\n    storage.fetchItem(request.url.query.id).\n    then(mountain => {/* istanbul ignore next */cov_q0sdvsm27.f[6]++;cov_q0sdvsm27.s[35]++;\n      sendJSON(response, 200, mountain);\n    }).\n    catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[7]++;cov_q0sdvsm27.s[36]++;\n      console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[37]++;\n      sendStatus(response, 404, 'id not found');\n    });\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}\n}","timestamp":"2017-12-08T03:18:17.098Z"}
{"level":"info","message":"Adding an DELETE url and callback","timestamp":"2017-12-08T03:18:17.098Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T03:18:17.098Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[8]++;cov_q0sdvsm27.s[39]++;\n  storage.deleteItem(request.url.query.id).\n  then(mountain => {/* istanbul ignore next */cov_q0sdvsm27.f[9]++;cov_q0sdvsm27.s[40]++;\n    sendJSON(response, 204, mountain); /* istanbul ignore next */cov_q0sdvsm27.s[41]++;\n    logger.log('info', `User deleted ${request.url.query.id} from database.`);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[10]++;cov_q0sdvsm27.s[42]++;\n    console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[43]++;\n    sendStatus(response, 400, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[44]++;\n    logger.log('info', `Deletion requested from database, but ${request.url.query.id} not found.`);\n  });\n}","timestamp":"2017-12-08T03:18:17.098Z"}
{"level":"info","message":"Server is online at port 3000","timestamp":"2017-12-08T03:18:17.169Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T03:18:17.224Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:18:17.225Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[30]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[31]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T03:18:17.225Z"}
{"level":"info","message":"Responding with a 200 code and the following data.","timestamp":"2017-12-08T03:18:17.228Z"}
{"id":"6f1cb790-dbc6-11e7-a638-29ab967f263b","name":"Mt. Evans","location":"Colorado","elevation":"14,235","level":"info","message":"","timestamp":"2017-12-08T03:18:17.228Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T03:18:17.237Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:18:17.238Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[5]++;cov_q0sdvsm27.s[33]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;cov_q0sdvsm27.s[34]++;\n    storage.fetchItem(request.url.query.id).\n    then(mountain => {/* istanbul ignore next */cov_q0sdvsm27.f[6]++;cov_q0sdvsm27.s[35]++;\n      sendJSON(response, 200, mountain);\n    }).\n    catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[7]++;cov_q0sdvsm27.s[36]++;\n      console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[37]++;\n      sendStatus(response, 404, 'id not found');\n    });\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}\n}","timestamp":"2017-12-08T03:18:17.238Z"}
{"level":"info","message":"Responding with a 200 code and the following data.","timestamp":"2017-12-08T03:18:17.239Z"}
{"id":"6f1cb790-dbc6-11e7-a638-29ab967f263b","name":"Mt. Evans","location":"Colorado","elevation":"14,235","level":"info","message":"","timestamp":"2017-12-08T03:18:17.239Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T03:18:17.242Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T03:18:17.242Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/lib/request-parser.js:34:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-08T03:18:17.242Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T03:18:17.244Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:18:17.245Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[8]++;cov_q0sdvsm27.s[39]++;\n  storage.deleteItem(request.url.query.id).\n  then(mountain => {/* istanbul ignore next */cov_q0sdvsm27.f[9]++;cov_q0sdvsm27.s[40]++;\n    sendJSON(response, 204, mountain); /* istanbul ignore next */cov_q0sdvsm27.s[41]++;\n    logger.log('info', `User deleted ${request.url.query.id} from database.`);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[10]++;cov_q0sdvsm27.s[42]++;\n    console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[43]++;\n    sendStatus(response, 400, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[44]++;\n    logger.log('info', `Deletion requested from database, but ${request.url.query.id} not found.`);\n  });\n}","timestamp":"2017-12-08T03:18:17.245Z"}
{"level":"info","message":"Adding an POST url and callback","timestamp":"2017-12-08T03:19:50.178Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T03:19:50.179Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[30]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[31]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T03:19:50.179Z"}
{"level":"info","message":"Adding an GET url and callback","timestamp":"2017-12-08T03:19:50.179Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T03:19:50.179Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[5]++;cov_q0sdvsm27.s[33]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;cov_q0sdvsm27.s[34]++;\n    storage.fetchItem(request.url.query.id).\n    then(mountain => {/* istanbul ignore next */cov_q0sdvsm27.f[6]++;cov_q0sdvsm27.s[35]++;\n      sendJSON(response, 200, mountain);\n    }).\n    catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[7]++;cov_q0sdvsm27.s[36]++;\n      console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[37]++;\n      sendStatus(response, 404, 'id not found');\n    });\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}\n}","timestamp":"2017-12-08T03:19:50.183Z"}
{"level":"info","message":"Adding an DELETE url and callback","timestamp":"2017-12-08T03:19:50.183Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T03:19:50.183Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[8]++;cov_q0sdvsm27.s[39]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[5][0]++;cov_q0sdvsm27.s[40]++;\n    storage.deleteItem(request.url.query.id).\n    then(mountain => {/* istanbul ignore next */cov_q0sdvsm27.f[9]++;cov_q0sdvsm27.s[41]++;\n      sendJSON(response, 204, mountain); /* istanbul ignore next */cov_q0sdvsm27.s[42]++;\n      logger.log('info', `User deleted ${request.url.query.id} from database.`);\n    }).\n    catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[10]++;cov_q0sdvsm27.s[43]++;\n      console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[44]++;\n      sendStatus(response, 400, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[45]++;\n      logger.log('info', `Deletion requested from database, but ${request.url.query.id} not found.`);\n    });\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[5][1]++;}\n}","timestamp":"2017-12-08T03:19:50.183Z"}
{"level":"info","message":"Server is online at port 3000","timestamp":"2017-12-08T03:19:50.246Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T03:19:50.300Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:19:50.301Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[30]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[31]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T03:19:50.301Z"}
{"level":"info","message":"Responding with a 200 code and the following data.","timestamp":"2017-12-08T03:19:50.304Z"}
{"id":"a696fcd0-dbc6-11e7-b5f5-590dcdaab7ae","name":"Mt. Evans","location":"Colorado","elevation":"14,235","level":"info","message":"","timestamp":"2017-12-08T03:19:50.304Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T03:19:50.313Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:19:50.313Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[5]++;cov_q0sdvsm27.s[33]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;cov_q0sdvsm27.s[34]++;\n    storage.fetchItem(request.url.query.id).\n    then(mountain => {/* istanbul ignore next */cov_q0sdvsm27.f[6]++;cov_q0sdvsm27.s[35]++;\n      sendJSON(response, 200, mountain);\n    }).\n    catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[7]++;cov_q0sdvsm27.s[36]++;\n      console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[37]++;\n      sendStatus(response, 404, 'id not found');\n    });\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}\n}","timestamp":"2017-12-08T03:19:50.314Z"}
{"level":"info","message":"Responding with a 200 code and the following data.","timestamp":"2017-12-08T03:19:50.314Z"}
{"id":"a696fcd0-dbc6-11e7-b5f5-590dcdaab7ae","name":"Mt. Evans","location":"Colorado","elevation":"14,235","level":"info","message":"","timestamp":"2017-12-08T03:19:50.314Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T03:19:50.318Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T03:19:50.318Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/lib/request-parser.js:34:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-08T03:19:50.318Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T03:19:50.321Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:19:50.321Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[8]++;cov_q0sdvsm27.s[39]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[5][0]++;cov_q0sdvsm27.s[40]++;\n    storage.deleteItem(request.url.query.id).\n    then(mountain => {/* istanbul ignore next */cov_q0sdvsm27.f[9]++;cov_q0sdvsm27.s[41]++;\n      sendJSON(response, 204, mountain); /* istanbul ignore next */cov_q0sdvsm27.s[42]++;\n      logger.log('info', `User deleted ${request.url.query.id} from database.`);\n    }).\n    catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[10]++;cov_q0sdvsm27.s[43]++;\n      console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[44]++;\n      sendStatus(response, 400, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[45]++;\n      logger.log('info', `Deletion requested from database, but ${request.url.query.id} not found.`);\n    });\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[5][1]++;}\n}","timestamp":"2017-12-08T03:19:50.321Z"}
{"level":"info","message":"Adding an POST url and callback","timestamp":"2017-12-08T03:20:25.695Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T03:20:25.696Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[30]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[31]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T03:20:25.696Z"}
{"level":"info","message":"Adding an GET url and callback","timestamp":"2017-12-08T03:20:25.696Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T03:20:25.696Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[5]++;cov_q0sdvsm27.s[33]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;cov_q0sdvsm27.s[34]++;\n    storage.fetchItem(request.url.query.id).\n    then(mountain => {/* istanbul ignore next */cov_q0sdvsm27.f[6]++;cov_q0sdvsm27.s[35]++;\n      sendJSON(response, 200, mountain);\n    }).\n    catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[7]++;cov_q0sdvsm27.s[36]++;\n      console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[37]++;\n      sendStatus(response, 404, 'id not found');\n    });\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}\n}","timestamp":"2017-12-08T03:20:25.696Z"}
{"level":"info","message":"Adding an DELETE url and callback","timestamp":"2017-12-08T03:20:25.696Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T03:20:25.696Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[8]++;cov_q0sdvsm27.s[39]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[5][0]++;cov_q0sdvsm27.s[40]++;\n    storage.deleteItem(request.url.query.id).\n    then(mountain => {/* istanbul ignore next */cov_q0sdvsm27.f[9]++;cov_q0sdvsm27.s[41]++;\n      sendJSON(response, 204); /* istanbul ignore next */cov_q0sdvsm27.s[42]++;\n      logger.log('info', `User deleted ${request.url.query.id} from database.`);\n    }).\n    catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[10]++;cov_q0sdvsm27.s[43]++;\n      console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[44]++;\n      sendStatus(response, 400, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[45]++;\n      logger.log('info', `Deletion requested from database, but ${request.url.query.id} not found.`);\n    });\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[5][1]++;}\n}","timestamp":"2017-12-08T03:20:25.696Z"}
{"level":"info","message":"Server is online at port 3000","timestamp":"2017-12-08T03:20:25.762Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T03:20:25.816Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:20:25.817Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[30]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[31]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T03:20:25.817Z"}
{"level":"info","message":"Responding with a 200 code and the following data.","timestamp":"2017-12-08T03:20:25.820Z"}
{"id":"bbc24c90-dbc6-11e7-babe-ef1a51873244","name":"Mt. Evans","location":"Colorado","elevation":"14,235","level":"info","message":"","timestamp":"2017-12-08T03:20:25.820Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T03:20:25.830Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:20:25.831Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[5]++;cov_q0sdvsm27.s[33]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;cov_q0sdvsm27.s[34]++;\n    storage.fetchItem(request.url.query.id).\n    then(mountain => {/* istanbul ignore next */cov_q0sdvsm27.f[6]++;cov_q0sdvsm27.s[35]++;\n      sendJSON(response, 200, mountain);\n    }).\n    catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[7]++;cov_q0sdvsm27.s[36]++;\n      console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[37]++;\n      sendStatus(response, 404, 'id not found');\n    });\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}\n}","timestamp":"2017-12-08T03:20:25.831Z"}
{"level":"info","message":"Responding with a 200 code and the following data.","timestamp":"2017-12-08T03:20:25.832Z"}
{"id":"bbc24c90-dbc6-11e7-babe-ef1a51873244","name":"Mt. Evans","location":"Colorado","elevation":"14,235","level":"info","message":"","timestamp":"2017-12-08T03:20:25.832Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T03:20:25.835Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T03:20:25.835Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/lib/request-parser.js:34:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-08T03:20:25.835Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T03:20:25.838Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:20:25.838Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[8]++;cov_q0sdvsm27.s[39]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[5][0]++;cov_q0sdvsm27.s[40]++;\n    storage.deleteItem(request.url.query.id).\n    then(mountain => {/* istanbul ignore next */cov_q0sdvsm27.f[9]++;cov_q0sdvsm27.s[41]++;\n      sendJSON(response, 204); /* istanbul ignore next */cov_q0sdvsm27.s[42]++;\n      logger.log('info', `User deleted ${request.url.query.id} from database.`);\n    }).\n    catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[10]++;cov_q0sdvsm27.s[43]++;\n      console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[44]++;\n      sendStatus(response, 400, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[45]++;\n      logger.log('info', `Deletion requested from database, but ${request.url.query.id} not found.`);\n    });\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[5][1]++;}\n}","timestamp":"2017-12-08T03:20:25.838Z"}
{"level":"info","message":"Adding an POST url and callback","timestamp":"2017-12-08T03:21:15.737Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T03:21:15.737Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[30]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[31]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T03:21:15.737Z"}
{"level":"info","message":"Adding an GET url and callback","timestamp":"2017-12-08T03:21:15.737Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T03:21:15.737Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[5]++;cov_q0sdvsm27.s[33]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;cov_q0sdvsm27.s[34]++;\n    storage.fetchItem(request.url.query.id).\n    then(mountain => {/* istanbul ignore next */cov_q0sdvsm27.f[6]++;cov_q0sdvsm27.s[35]++;\n      sendJSON(response, 200, mountain);\n    }).\n    catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[7]++;cov_q0sdvsm27.s[36]++;\n      console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[37]++;\n      sendStatus(response, 404, 'id not found');\n    });\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}\n}","timestamp":"2017-12-08T03:21:15.737Z"}
{"level":"info","message":"Adding an DELETE url and callback","timestamp":"2017-12-08T03:21:15.737Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T03:21:15.738Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[8]++;cov_q0sdvsm27.s[39]++;\n  storage.deleteItem(request.url.query.id).\n  then(mountain => {/* istanbul ignore next */cov_q0sdvsm27.f[9]++;cov_q0sdvsm27.s[40]++;\n    sendJSON(response, 204, mountain); /* istanbul ignore next */cov_q0sdvsm27.s[41]++;\n    logger.log('info', `User deleted ${request.url.query.id} from database.`);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[10]++;cov_q0sdvsm27.s[42]++;\n    console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[43]++;\n    sendStatus(response, 400, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[44]++;\n    logger.log('info', `Deletion requested from database, but ${request.url.query.id} not found.`);\n  });\n}","timestamp":"2017-12-08T03:21:15.738Z"}
{"level":"info","message":"Server is online at port 3000","timestamp":"2017-12-08T03:21:15.803Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T03:21:15.847Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:21:15.848Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[30]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[31]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T03:21:15.848Z"}
{"level":"info","message":"Responding with a 200 code and the following data.","timestamp":"2017-12-08T03:21:15.852Z"}
{"id":"d9949390-dbc6-11e7-8888-9bb609c2590d","name":"Mt. Evans","location":"Colorado","elevation":"14,235","level":"info","message":"","timestamp":"2017-12-08T03:21:15.852Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T03:21:15.861Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:21:15.862Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[5]++;cov_q0sdvsm27.s[33]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;cov_q0sdvsm27.s[34]++;\n    storage.fetchItem(request.url.query.id).\n    then(mountain => {/* istanbul ignore next */cov_q0sdvsm27.f[6]++;cov_q0sdvsm27.s[35]++;\n      sendJSON(response, 200, mountain);\n    }).\n    catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[7]++;cov_q0sdvsm27.s[36]++;\n      console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[37]++;\n      sendStatus(response, 404, 'id not found');\n    });\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}\n}","timestamp":"2017-12-08T03:21:15.862Z"}
{"level":"info","message":"Responding with a 200 code and the following data.","timestamp":"2017-12-08T03:21:15.863Z"}
{"id":"d9949390-dbc6-11e7-8888-9bb609c2590d","name":"Mt. Evans","location":"Colorado","elevation":"14,235","level":"info","message":"","timestamp":"2017-12-08T03:21:15.863Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T03:21:15.866Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T03:21:15.866Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/lib/request-parser.js:34:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-08T03:21:15.867Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T03:21:15.869Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:21:15.870Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[8]++;cov_q0sdvsm27.s[39]++;\n  storage.deleteItem(request.url.query.id).\n  then(mountain => {/* istanbul ignore next */cov_q0sdvsm27.f[9]++;cov_q0sdvsm27.s[40]++;\n    sendJSON(response, 204, mountain); /* istanbul ignore next */cov_q0sdvsm27.s[41]++;\n    logger.log('info', `User deleted ${request.url.query.id} from database.`);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[10]++;cov_q0sdvsm27.s[42]++;\n    console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[43]++;\n    sendStatus(response, 400, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[44]++;\n    logger.log('info', `Deletion requested from database, but ${request.url.query.id} not found.`);\n  });\n}","timestamp":"2017-12-08T03:21:15.870Z"}
{"level":"info","message":"Adding an POST url and callback","timestamp":"2017-12-08T03:24:51.635Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T03:24:51.636Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[30]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[31]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T03:24:51.636Z"}
{"level":"info","message":"Adding an GET url and callback","timestamp":"2017-12-08T03:24:51.636Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T03:24:51.636Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[5]++;cov_q0sdvsm27.s[33]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;cov_q0sdvsm27.s[34]++;\n    storage.fetchItem(request.url.query.id).\n    then(mountain => {/* istanbul ignore next */cov_q0sdvsm27.f[6]++;cov_q0sdvsm27.s[35]++;\n      sendJSON(response, 200, mountain);\n    }).\n    catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[7]++;cov_q0sdvsm27.s[36]++;\n      console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[37]++;\n      sendStatus(response, 404, 'id not found');\n    });\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}\n}","timestamp":"2017-12-08T03:24:51.636Z"}
{"level":"info","message":"Adding an DELETE url and callback","timestamp":"2017-12-08T03:24:51.636Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T03:24:51.636Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[8]++;cov_q0sdvsm27.s[39]++;\n  storage.deleteItem(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[40]++;\n  console.log(request.url.query.id).\n  then(mountain => {/* istanbul ignore next */cov_q0sdvsm27.f[9]++;cov_q0sdvsm27.s[41]++;\n    sendJSON(response, 204, mountain); /* istanbul ignore next */cov_q0sdvsm27.s[42]++;\n    logger.log('info', `User deleted ${request.url.query.id} from database.`);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[10]++;cov_q0sdvsm27.s[43]++;\n    console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[44]++;\n    sendStatus(response, 400, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[45]++;\n    logger.log('info', `Deletion requested from database, but ${request.url.query.id} not found.`);\n  });\n}","timestamp":"2017-12-08T03:24:51.636Z"}
{"level":"info","message":"Server is online at port 3000","timestamp":"2017-12-08T03:24:51.702Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T03:24:51.754Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:24:51.755Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[30]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[31]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T03:24:51.755Z"}
{"level":"info","message":"Responding with a 200 code and the following data.","timestamp":"2017-12-08T03:24:51.759Z"}
{"id":"5a4537b0-dbc7-11e7-9914-99616d04303e","name":"Mt. Evans","location":"Colorado","elevation":"14,235","level":"info","message":"","timestamp":"2017-12-08T03:24:51.759Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T03:24:51.768Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:24:51.769Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[5]++;cov_q0sdvsm27.s[33]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;cov_q0sdvsm27.s[34]++;\n    storage.fetchItem(request.url.query.id).\n    then(mountain => {/* istanbul ignore next */cov_q0sdvsm27.f[6]++;cov_q0sdvsm27.s[35]++;\n      sendJSON(response, 200, mountain);\n    }).\n    catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[7]++;cov_q0sdvsm27.s[36]++;\n      console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[37]++;\n      sendStatus(response, 404, 'id not found');\n    });\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}\n}","timestamp":"2017-12-08T03:24:51.769Z"}
{"level":"info","message":"Responding with a 200 code and the following data.","timestamp":"2017-12-08T03:24:51.769Z"}
{"id":"5a4537b0-dbc7-11e7-9914-99616d04303e","name":"Mt. Evans","location":"Colorado","elevation":"14,235","level":"info","message":"","timestamp":"2017-12-08T03:24:51.770Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T03:24:51.772Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T03:24:51.773Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/lib/request-parser.js:34:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-08T03:24:51.773Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T03:24:51.775Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:24:51.775Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[8]++;cov_q0sdvsm27.s[39]++;\n  storage.deleteItem(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[40]++;\n  console.log(request.url.query.id).\n  then(mountain => {/* istanbul ignore next */cov_q0sdvsm27.f[9]++;cov_q0sdvsm27.s[41]++;\n    sendJSON(response, 204, mountain); /* istanbul ignore next */cov_q0sdvsm27.s[42]++;\n    logger.log('info', `User deleted ${request.url.query.id} from database.`);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[10]++;cov_q0sdvsm27.s[43]++;\n    console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[44]++;\n    sendStatus(response, 400, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[45]++;\n    logger.log('info', `Deletion requested from database, but ${request.url.query.id} not found.`);\n  });\n}","timestamp":"2017-12-08T03:24:51.775Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T03:24:51.776Z"}
{"message":"Cannot read property 'then' of undefined","stack":"TypeError: Cannot read property 'then' of undefined\n    at Object.<anonymous>.router.delete (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/route/mountain-router.js:75:36)\n    at requestParser.parse.then.request (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/lib/router.js:55:14)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-08T03:24:51.776Z"}
{"level":"info","message":"Adding an POST url and callback","timestamp":"2017-12-08T03:29:54.199Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T03:29:54.199Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[30]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[31]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T03:29:54.199Z"}
{"level":"info","message":"Adding an GET url and callback","timestamp":"2017-12-08T03:29:54.199Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T03:29:54.199Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[5]++;cov_q0sdvsm27.s[33]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;cov_q0sdvsm27.s[34]++;\n    storage.fetchItem(request.url.query.id).\n    then(mountain => {/* istanbul ignore next */cov_q0sdvsm27.f[6]++;cov_q0sdvsm27.s[35]++;\n      sendJSON(response, 200, mountain);\n    }).\n    catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[7]++;cov_q0sdvsm27.s[36]++;\n      console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[37]++;\n      sendStatus(response, 404, 'id not found');\n    });\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}\n}","timestamp":"2017-12-08T03:29:54.200Z"}
{"level":"info","message":"Adding an DELETE url and callback","timestamp":"2017-12-08T03:29:54.200Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T03:29:54.200Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[8]++;cov_q0sdvsm27.s[39]++;\n  storage.deleteItem(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[40]++;\n  console.log(request.url.query.id).\n  then(mountains => {/* istanbul ignore next */cov_q0sdvsm27.f[9]++;cov_q0sdvsm27.s[41]++;\n    sendJSON(response, 204, mountains); /* istanbul ignore next */cov_q0sdvsm27.s[42]++;\n    logger.log('info', `User deleted ${request.url.query.id} from database.`);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[10]++;cov_q0sdvsm27.s[43]++;\n    console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[44]++;\n    sendStatus(response, 400, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[45]++;\n    logger.log('info', `Deletion requested from database, but ${request.url.query.id} not found.`);\n  });\n}","timestamp":"2017-12-08T03:29:54.200Z"}
{"level":"info","message":"Server is online at port 3000","timestamp":"2017-12-08T03:29:54.264Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T03:29:54.318Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:29:54.319Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[30]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[31]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T03:29:54.319Z"}
{"level":"info","message":"Responding with a 200 code and the following data.","timestamp":"2017-12-08T03:29:54.322Z"}
{"id":"0e9cf900-dbc8-11e7-8fb6-c98a913602cc","name":"Mt. Evans","location":"Colorado","elevation":"14,235","level":"info","message":"","timestamp":"2017-12-08T03:29:54.322Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T03:29:54.331Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:29:54.332Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[5]++;cov_q0sdvsm27.s[33]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;cov_q0sdvsm27.s[34]++;\n    storage.fetchItem(request.url.query.id).\n    then(mountain => {/* istanbul ignore next */cov_q0sdvsm27.f[6]++;cov_q0sdvsm27.s[35]++;\n      sendJSON(response, 200, mountain);\n    }).\n    catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[7]++;cov_q0sdvsm27.s[36]++;\n      console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[37]++;\n      sendStatus(response, 404, 'id not found');\n    });\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}\n}","timestamp":"2017-12-08T03:29:54.332Z"}
{"level":"info","message":"Responding with a 200 code and the following data.","timestamp":"2017-12-08T03:29:54.333Z"}
{"id":"0e9cf900-dbc8-11e7-8fb6-c98a913602cc","name":"Mt. Evans","location":"Colorado","elevation":"14,235","level":"info","message":"","timestamp":"2017-12-08T03:29:54.333Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T03:29:54.336Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T03:29:54.337Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/lib/request-parser.js:34:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-08T03:29:54.337Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T03:29:54.339Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:29:54.339Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[8]++;cov_q0sdvsm27.s[39]++;\n  storage.deleteItem(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[40]++;\n  console.log(request.url.query.id).\n  then(mountains => {/* istanbul ignore next */cov_q0sdvsm27.f[9]++;cov_q0sdvsm27.s[41]++;\n    sendJSON(response, 204, mountains); /* istanbul ignore next */cov_q0sdvsm27.s[42]++;\n    logger.log('info', `User deleted ${request.url.query.id} from database.`);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[10]++;cov_q0sdvsm27.s[43]++;\n    console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[44]++;\n    sendStatus(response, 400, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[45]++;\n    logger.log('info', `Deletion requested from database, but ${request.url.query.id} not found.`);\n  });\n}","timestamp":"2017-12-08T03:29:54.340Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T03:29:54.340Z"}
{"message":"Cannot read property 'then' of undefined","stack":"TypeError: Cannot read property 'then' of undefined\n    at Object.<anonymous>.router.delete (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/route/mountain-router.js:75:36)\n    at requestParser.parse.then.request (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/lib/router.js:55:14)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-08T03:29:54.340Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T03:29:54.343Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:29:54.343Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[8]++;cov_q0sdvsm27.s[39]++;\n  storage.deleteItem(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[40]++;\n  console.log(request.url.query.id).\n  then(mountains => {/* istanbul ignore next */cov_q0sdvsm27.f[9]++;cov_q0sdvsm27.s[41]++;\n    sendJSON(response, 204, mountains); /* istanbul ignore next */cov_q0sdvsm27.s[42]++;\n    logger.log('info', `User deleted ${request.url.query.id} from database.`);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[10]++;cov_q0sdvsm27.s[43]++;\n    console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[44]++;\n    sendStatus(response, 400, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[45]++;\n    logger.log('info', `Deletion requested from database, but ${request.url.query.id} not found.`);\n  });\n}","timestamp":"2017-12-08T03:29:54.343Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T03:29:54.343Z"}
{"message":"Cannot read property 'then' of undefined","stack":"TypeError: Cannot read property 'then' of undefined\n    at Object.<anonymous>.router.delete (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/route/mountain-router.js:75:36)\n    at requestParser.parse.then.request (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/lib/router.js:55:14)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-08T03:29:54.343Z"}
{"level":"info","message":"Adding an POST url and callback","timestamp":"2017-12-08T03:31:06.744Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T03:31:06.744Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[30]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[31]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T03:31:06.744Z"}
{"level":"info","message":"Adding an GET url and callback","timestamp":"2017-12-08T03:31:06.744Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T03:31:06.744Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[5]++;cov_q0sdvsm27.s[33]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;cov_q0sdvsm27.s[34]++;\n    storage.fetchItem(request.url.query.id).\n    then(mountain => {/* istanbul ignore next */cov_q0sdvsm27.f[6]++;cov_q0sdvsm27.s[35]++;\n      sendJSON(response, 200, mountain);\n    }).\n    catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[7]++;cov_q0sdvsm27.s[36]++;\n      console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[37]++;\n      sendStatus(response, 404, 'id not found');\n    });\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}\n}","timestamp":"2017-12-08T03:31:06.744Z"}
{"level":"info","message":"Adding an DELETE url and callback","timestamp":"2017-12-08T03:31:06.745Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T03:31:06.745Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[8]++;cov_q0sdvsm27.s[39]++;\n  storage.deleteItem(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[40]++;\n  console.log(request.url.query.id).\n  then(mountains => {/* istanbul ignore next */cov_q0sdvsm27.f[9]++;cov_q0sdvsm27.s[41]++;\n    sendJSON(response, 204, mountains); /* istanbul ignore next */cov_q0sdvsm27.s[42]++;\n    logger.log('info', `User deleted ${request.url.query.id} from database.`);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[10]++;cov_q0sdvsm27.s[43]++;\n    console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[44]++;\n    sendStatus(response, 400, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[45]++;\n    logger.log('info', `Deletion requested from database, but ${request.url.query.id} not found.`);\n  });\n}","timestamp":"2017-12-08T03:31:06.745Z"}
{"level":"info","message":"Server is online at port 3000","timestamp":"2017-12-08T03:31:06.795Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T03:31:06.849Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:31:06.850Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[30]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[31]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T03:31:06.850Z"}
{"level":"info","message":"Responding with a 200 code and the following data.","timestamp":"2017-12-08T03:31:06.854Z"}
{"id":"39d85330-dbc8-11e7-9913-75673819b0a5","name":"Mt. Evans","location":"Colorado","elevation":"14,235","level":"info","message":"","timestamp":"2017-12-08T03:31:06.854Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T03:31:06.863Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:31:06.864Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[5]++;cov_q0sdvsm27.s[33]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;cov_q0sdvsm27.s[34]++;\n    storage.fetchItem(request.url.query.id).\n    then(mountain => {/* istanbul ignore next */cov_q0sdvsm27.f[6]++;cov_q0sdvsm27.s[35]++;\n      sendJSON(response, 200, mountain);\n    }).\n    catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[7]++;cov_q0sdvsm27.s[36]++;\n      console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[37]++;\n      sendStatus(response, 404, 'id not found');\n    });\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}\n}","timestamp":"2017-12-08T03:31:06.864Z"}
{"level":"info","message":"Responding with a 200 code and the following data.","timestamp":"2017-12-08T03:31:06.865Z"}
{"id":"39d85330-dbc8-11e7-9913-75673819b0a5","name":"Mt. Evans","location":"Colorado","elevation":"14,235","level":"info","message":"","timestamp":"2017-12-08T03:31:06.865Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T03:31:06.868Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T03:31:06.868Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/lib/request-parser.js:34:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-08T03:31:06.868Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T03:31:06.871Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:31:06.871Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[8]++;cov_q0sdvsm27.s[39]++;\n  storage.deleteItem(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[40]++;\n  console.log(request.url.query.id).\n  then(mountains => {/* istanbul ignore next */cov_q0sdvsm27.f[9]++;cov_q0sdvsm27.s[41]++;\n    sendJSON(response, 204, mountains); /* istanbul ignore next */cov_q0sdvsm27.s[42]++;\n    logger.log('info', `User deleted ${request.url.query.id} from database.`);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[10]++;cov_q0sdvsm27.s[43]++;\n    console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[44]++;\n    sendStatus(response, 400, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[45]++;\n    logger.log('info', `Deletion requested from database, but ${request.url.query.id} not found.`);\n  });\n}","timestamp":"2017-12-08T03:31:06.871Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T03:31:06.872Z"}
{"message":"Cannot read property 'then' of undefined","stack":"TypeError: Cannot read property 'then' of undefined\n    at Object.<anonymous>.router.delete (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/route/mountain-router.js:75:36)\n    at requestParser.parse.then.request (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/lib/router.js:55:14)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-08T03:31:06.872Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T03:31:06.875Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:31:06.875Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[8]++;cov_q0sdvsm27.s[39]++;\n  storage.deleteItem(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[40]++;\n  console.log(request.url.query.id).\n  then(mountains => {/* istanbul ignore next */cov_q0sdvsm27.f[9]++;cov_q0sdvsm27.s[41]++;\n    sendJSON(response, 204, mountains); /* istanbul ignore next */cov_q0sdvsm27.s[42]++;\n    logger.log('info', `User deleted ${request.url.query.id} from database.`);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[10]++;cov_q0sdvsm27.s[43]++;\n    console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[44]++;\n    sendStatus(response, 400, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[45]++;\n    logger.log('info', `Deletion requested from database, but ${request.url.query.id} not found.`);\n  });\n}","timestamp":"2017-12-08T03:31:06.875Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T03:31:06.876Z"}
{"message":"Cannot read property 'then' of undefined","stack":"TypeError: Cannot read property 'then' of undefined\n    at Object.<anonymous>.router.delete (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/route/mountain-router.js:75:36)\n    at requestParser.parse.then.request (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/lib/router.js:55:14)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-08T03:31:06.876Z"}
{"level":"info","message":"Adding an POST url and callback","timestamp":"2017-12-08T03:31:23.249Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T03:31:23.249Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[30]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[31]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T03:31:23.249Z"}
{"level":"info","message":"Adding an GET url and callback","timestamp":"2017-12-08T03:31:23.249Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T03:31:23.249Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[5]++;cov_q0sdvsm27.s[33]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;cov_q0sdvsm27.s[34]++;\n    storage.fetchItem(request.url.query.id).\n    then(mountain => {/* istanbul ignore next */cov_q0sdvsm27.f[6]++;cov_q0sdvsm27.s[35]++;\n      sendJSON(response, 200, mountain);\n    }).\n    catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[7]++;cov_q0sdvsm27.s[36]++;\n      console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[37]++;\n      sendStatus(response, 404, 'id not found');\n    });\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}\n}","timestamp":"2017-12-08T03:31:23.249Z"}
{"level":"info","message":"Adding an DELETE url and callback","timestamp":"2017-12-08T03:31:23.250Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T03:31:23.250Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[8]++;cov_q0sdvsm27.s[39]++;\n  storage.deleteItem(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[40]++;\n  console.log(request.url.query.id).\n  then(mountains => {/* istanbul ignore next */cov_q0sdvsm27.f[9]++;cov_q0sdvsm27.s[41]++;\n    sendJSON(response, 204, mountains); /* istanbul ignore next */cov_q0sdvsm27.s[42]++;\n    logger.log('info', `User deleted ${request.url.query.id} from database.`);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[10]++;cov_q0sdvsm27.s[43]++;\n    console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[44]++;\n    sendStatus(response, 400, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[45]++;\n    logger.log('info', `Deletion requested from database, but ${request.url.query.id} not found.`);\n  });\n}","timestamp":"2017-12-08T03:31:23.250Z"}
{"level":"info","message":"Server is online at port 3000","timestamp":"2017-12-08T03:31:23.298Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T03:31:23.348Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:31:23.349Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[30]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[31]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T03:31:23.349Z"}
{"level":"info","message":"Responding with a 200 code and the following data.","timestamp":"2017-12-08T03:31:23.353Z"}
{"id":"43adb850-dbc8-11e7-b669-f3c9b781235c","name":"Mt. Evans","location":"Colorado","elevation":"14,235","level":"info","message":"","timestamp":"2017-12-08T03:31:23.353Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T03:31:23.362Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:31:23.363Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[5]++;cov_q0sdvsm27.s[33]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;cov_q0sdvsm27.s[34]++;\n    storage.fetchItem(request.url.query.id).\n    then(mountain => {/* istanbul ignore next */cov_q0sdvsm27.f[6]++;cov_q0sdvsm27.s[35]++;\n      sendJSON(response, 200, mountain);\n    }).\n    catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[7]++;cov_q0sdvsm27.s[36]++;\n      console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[37]++;\n      sendStatus(response, 404, 'id not found');\n    });\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}\n}","timestamp":"2017-12-08T03:31:23.363Z"}
{"level":"info","message":"Responding with a 200 code and the following data.","timestamp":"2017-12-08T03:31:23.364Z"}
{"id":"43adb850-dbc8-11e7-b669-f3c9b781235c","name":"Mt. Evans","location":"Colorado","elevation":"14,235","level":"info","message":"","timestamp":"2017-12-08T03:31:23.364Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T03:31:23.367Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T03:31:23.368Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/lib/request-parser.js:34:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-08T03:31:23.368Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T03:31:23.371Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:31:23.371Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[8]++;cov_q0sdvsm27.s[39]++;\n  storage.deleteItem(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[40]++;\n  console.log(request.url.query.id).\n  then(mountains => {/* istanbul ignore next */cov_q0sdvsm27.f[9]++;cov_q0sdvsm27.s[41]++;\n    sendJSON(response, 204, mountains); /* istanbul ignore next */cov_q0sdvsm27.s[42]++;\n    logger.log('info', `User deleted ${request.url.query.id} from database.`);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[10]++;cov_q0sdvsm27.s[43]++;\n    console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[44]++;\n    sendStatus(response, 400, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[45]++;\n    logger.log('info', `Deletion requested from database, but ${request.url.query.id} not found.`);\n  });\n}","timestamp":"2017-12-08T03:31:23.371Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T03:31:23.372Z"}
{"message":"Cannot read property 'then' of undefined","stack":"TypeError: Cannot read property 'then' of undefined\n    at Object.<anonymous>.router.delete (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/route/mountain-router.js:75:36)\n    at requestParser.parse.then.request (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/lib/router.js:55:14)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-08T03:31:23.372Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T03:31:23.375Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:31:23.375Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[8]++;cov_q0sdvsm27.s[39]++;\n  storage.deleteItem(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[40]++;\n  console.log(request.url.query.id).\n  then(mountains => {/* istanbul ignore next */cov_q0sdvsm27.f[9]++;cov_q0sdvsm27.s[41]++;\n    sendJSON(response, 204, mountains); /* istanbul ignore next */cov_q0sdvsm27.s[42]++;\n    logger.log('info', `User deleted ${request.url.query.id} from database.`);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[10]++;cov_q0sdvsm27.s[43]++;\n    console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[44]++;\n    sendStatus(response, 400, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[45]++;\n    logger.log('info', `Deletion requested from database, but ${request.url.query.id} not found.`);\n  });\n}","timestamp":"2017-12-08T03:31:23.375Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T03:31:23.375Z"}
{"message":"Cannot read property 'then' of undefined","stack":"TypeError: Cannot read property 'then' of undefined\n    at Object.<anonymous>.router.delete (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/route/mountain-router.js:75:36)\n    at requestParser.parse.then.request (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/lib/router.js:55:14)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-08T03:31:23.375Z"}
{"level":"info","message":"Adding an POST url and callback","timestamp":"2017-12-08T03:31:50.897Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T03:31:50.897Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[30]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[31]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T03:31:50.897Z"}
{"level":"info","message":"Adding an GET url and callback","timestamp":"2017-12-08T03:31:50.898Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T03:31:50.898Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[5]++;cov_q0sdvsm27.s[33]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;cov_q0sdvsm27.s[34]++;\n    storage.fetchItem(request.url.query.id).\n    then(mountain => {/* istanbul ignore next */cov_q0sdvsm27.f[6]++;cov_q0sdvsm27.s[35]++;\n      sendJSON(response, 200, mountain);\n    }).\n    catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[7]++;cov_q0sdvsm27.s[36]++;\n      console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[37]++;\n      sendStatus(response, 404, 'id not found');\n    });\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}\n}","timestamp":"2017-12-08T03:31:50.898Z"}
{"level":"info","message":"Adding an DELETE url and callback","timestamp":"2017-12-08T03:31:50.898Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T03:31:50.898Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[8]++;cov_q0sdvsm27.s[39]++;\n  storage.deleteItem(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[40]++;\n  console.log(request.url.query.id).\n  then(mountains => {/* istanbul ignore next */cov_q0sdvsm27.f[9]++;cov_q0sdvsm27.s[41]++;\n    sendJSON(response, 204, mountains); /* istanbul ignore next */cov_q0sdvsm27.s[42]++;\n    logger.log('info', `User deleted ${request.url.query.id} from database.`);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[10]++;cov_q0sdvsm27.s[43]++;\n    console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[44]++;\n    sendStatus(response, 400, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[45]++;\n    logger.log('info', `Deletion requested from database, but ${request.url.query.id} not found.`);\n  });\n}","timestamp":"2017-12-08T03:31:50.898Z"}
{"level":"info","message":"Server is online at port 3000","timestamp":"2017-12-08T03:31:50.947Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T03:31:50.997Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:31:50.998Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[30]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[31]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T03:31:50.999Z"}
{"level":"info","message":"Responding with a 200 code and the following data.","timestamp":"2017-12-08T03:31:51.002Z"}
{"id":"5428c670-dbc8-11e7-a619-b35b8d630d06","name":"Mt. Evans","location":"Colorado","elevation":"14,235","level":"info","message":"","timestamp":"2017-12-08T03:31:51.002Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T03:31:51.011Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:31:51.012Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[5]++;cov_q0sdvsm27.s[33]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;cov_q0sdvsm27.s[34]++;\n    storage.fetchItem(request.url.query.id).\n    then(mountain => {/* istanbul ignore next */cov_q0sdvsm27.f[6]++;cov_q0sdvsm27.s[35]++;\n      sendJSON(response, 200, mountain);\n    }).\n    catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[7]++;cov_q0sdvsm27.s[36]++;\n      console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[37]++;\n      sendStatus(response, 404, 'id not found');\n    });\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}\n}","timestamp":"2017-12-08T03:31:51.012Z"}
{"level":"info","message":"Responding with a 200 code and the following data.","timestamp":"2017-12-08T03:31:51.013Z"}
{"id":"5428c670-dbc8-11e7-a619-b35b8d630d06","name":"Mt. Evans","location":"Colorado","elevation":"14,235","level":"info","message":"","timestamp":"2017-12-08T03:31:51.013Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T03:31:51.016Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T03:31:51.017Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/lib/request-parser.js:34:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-08T03:31:51.017Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T03:31:51.019Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:31:51.020Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[8]++;cov_q0sdvsm27.s[39]++;\n  storage.deleteItem(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[40]++;\n  console.log(request.url.query.id).\n  then(mountains => {/* istanbul ignore next */cov_q0sdvsm27.f[9]++;cov_q0sdvsm27.s[41]++;\n    sendJSON(response, 204, mountains); /* istanbul ignore next */cov_q0sdvsm27.s[42]++;\n    logger.log('info', `User deleted ${request.url.query.id} from database.`);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[10]++;cov_q0sdvsm27.s[43]++;\n    console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[44]++;\n    sendStatus(response, 400, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[45]++;\n    logger.log('info', `Deletion requested from database, but ${request.url.query.id} not found.`);\n  });\n}","timestamp":"2017-12-08T03:31:51.020Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T03:31:51.020Z"}
{"message":"Cannot read property 'then' of undefined","stack":"TypeError: Cannot read property 'then' of undefined\n    at Object.<anonymous>.router.delete (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/route/mountain-router.js:75:36)\n    at requestParser.parse.then.request (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/lib/router.js:55:14)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-08T03:31:51.020Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T03:31:51.023Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:31:51.023Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[8]++;cov_q0sdvsm27.s[39]++;\n  storage.deleteItem(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[40]++;\n  console.log(request.url.query.id).\n  then(mountains => {/* istanbul ignore next */cov_q0sdvsm27.f[9]++;cov_q0sdvsm27.s[41]++;\n    sendJSON(response, 204, mountains); /* istanbul ignore next */cov_q0sdvsm27.s[42]++;\n    logger.log('info', `User deleted ${request.url.query.id} from database.`);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[10]++;cov_q0sdvsm27.s[43]++;\n    console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[44]++;\n    sendStatus(response, 400, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[45]++;\n    logger.log('info', `Deletion requested from database, but ${request.url.query.id} not found.`);\n  });\n}","timestamp":"2017-12-08T03:31:51.023Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T03:31:51.024Z"}
{"message":"Cannot read property 'then' of undefined","stack":"TypeError: Cannot read property 'then' of undefined\n    at Object.<anonymous>.router.delete (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/route/mountain-router.js:75:36)\n    at requestParser.parse.then.request (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/lib/router.js:55:14)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-08T03:31:51.024Z"}
{"level":"info","message":"Adding an POST url and callback","timestamp":"2017-12-08T03:32:33.429Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T03:32:33.430Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[30]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[31]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T03:32:33.431Z"}
{"level":"info","message":"Adding an GET url and callback","timestamp":"2017-12-08T03:32:33.431Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T03:32:33.431Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[5]++;cov_q0sdvsm27.s[33]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;cov_q0sdvsm27.s[34]++;\n    storage.fetchItem(request.url.query.id).\n    then(mountain => {/* istanbul ignore next */cov_q0sdvsm27.f[6]++;cov_q0sdvsm27.s[35]++;\n      sendJSON(response, 200, mountain);\n    }).\n    catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[7]++;cov_q0sdvsm27.s[36]++;\n      console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[37]++;\n      sendStatus(response, 404, 'id not found');\n    });\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}\n}","timestamp":"2017-12-08T03:32:33.431Z"}
{"level":"info","message":"Adding an DELETE url and callback","timestamp":"2017-12-08T03:32:33.431Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T03:32:33.431Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[8]++;cov_q0sdvsm27.s[39]++;\n  storage.deleteItem(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[40]++;\n  console.log(request.url.query.id).\n  then(mountains => {/* istanbul ignore next */cov_q0sdvsm27.f[9]++;cov_q0sdvsm27.s[41]++;\n    sendJSON(response, 204, mountains); /* istanbul ignore next */cov_q0sdvsm27.s[42]++;\n    logger.log('info', `User deleted ${request.url.query.id} from database.`);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[10]++;cov_q0sdvsm27.s[43]++;\n    console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[44]++;\n    sendStatus(response, 400, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[45]++;\n    logger.log('info', `Deletion requested from database, but ${request.url.query.id} not found.`);\n  });\n}","timestamp":"2017-12-08T03:32:33.431Z"}
{"level":"info","message":"Server is online at port 3000","timestamp":"2017-12-08T03:32:33.496Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T03:32:33.517Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:32:33.519Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[30]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[31]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T03:32:33.519Z"}
{"level":"info","message":"Responding with a 200 code and the following data.","timestamp":"2017-12-08T03:32:33.523Z"}
{"id":"6d80f700-dbc8-11e7-994f-f392b20f15dc","name":"Mt. Evans","location":"Colorado","elevation":"14,235","level":"info","message":"","timestamp":"2017-12-08T03:32:33.523Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T03:32:33.534Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:32:33.535Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[5]++;cov_q0sdvsm27.s[33]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;cov_q0sdvsm27.s[34]++;\n    storage.fetchItem(request.url.query.id).\n    then(mountain => {/* istanbul ignore next */cov_q0sdvsm27.f[6]++;cov_q0sdvsm27.s[35]++;\n      sendJSON(response, 200, mountain);\n    }).\n    catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[7]++;cov_q0sdvsm27.s[36]++;\n      console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[37]++;\n      sendStatus(response, 404, 'id not found');\n    });\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}\n}","timestamp":"2017-12-08T03:32:33.535Z"}
{"level":"info","message":"Responding with a 200 code and the following data.","timestamp":"2017-12-08T03:32:33.536Z"}
{"id":"6d80f700-dbc8-11e7-994f-f392b20f15dc","name":"Mt. Evans","location":"Colorado","elevation":"14,235","level":"info","message":"","timestamp":"2017-12-08T03:32:33.536Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T03:32:33.539Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T03:32:33.539Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/lib/request-parser.js:34:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-08T03:32:33.539Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T03:32:33.541Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:32:33.542Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[8]++;cov_q0sdvsm27.s[39]++;\n  storage.deleteItem(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[40]++;\n  console.log(request.url.query.id).\n  then(mountains => {/* istanbul ignore next */cov_q0sdvsm27.f[9]++;cov_q0sdvsm27.s[41]++;\n    sendJSON(response, 204, mountains); /* istanbul ignore next */cov_q0sdvsm27.s[42]++;\n    logger.log('info', `User deleted ${request.url.query.id} from database.`);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[10]++;cov_q0sdvsm27.s[43]++;\n    console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[44]++;\n    sendStatus(response, 400, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[45]++;\n    logger.log('info', `Deletion requested from database, but ${request.url.query.id} not found.`);\n  });\n}","timestamp":"2017-12-08T03:32:33.542Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T03:32:33.542Z"}
{"message":"Cannot read property 'then' of undefined","stack":"TypeError: Cannot read property 'then' of undefined\n    at Object.<anonymous>.router.delete (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/route/mountain-router.js:75:36)\n    at requestParser.parse.then.request (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/lib/router.js:55:14)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-08T03:32:33.542Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T03:32:33.545Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:32:33.545Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[8]++;cov_q0sdvsm27.s[39]++;\n  storage.deleteItem(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[40]++;\n  console.log(request.url.query.id).\n  then(mountains => {/* istanbul ignore next */cov_q0sdvsm27.f[9]++;cov_q0sdvsm27.s[41]++;\n    sendJSON(response, 204, mountains); /* istanbul ignore next */cov_q0sdvsm27.s[42]++;\n    logger.log('info', `User deleted ${request.url.query.id} from database.`);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[10]++;cov_q0sdvsm27.s[43]++;\n    console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[44]++;\n    sendStatus(response, 400, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[45]++;\n    logger.log('info', `Deletion requested from database, but ${request.url.query.id} not found.`);\n  });\n}","timestamp":"2017-12-08T03:32:33.545Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T03:32:33.545Z"}
{"message":"Cannot read property 'then' of undefined","stack":"TypeError: Cannot read property 'then' of undefined\n    at Object.<anonymous>.router.delete (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/route/mountain-router.js:75:36)\n    at requestParser.parse.then.request (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/lib/router.js:55:14)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-08T03:32:33.545Z"}
{"level":"info","message":"Adding an POST url and callback","timestamp":"2017-12-08T03:33:49.549Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T03:33:49.550Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[30]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[31]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T03:33:49.550Z"}
{"level":"info","message":"Adding an GET url and callback","timestamp":"2017-12-08T03:33:49.550Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T03:33:49.550Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[5]++;cov_q0sdvsm27.s[33]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;cov_q0sdvsm27.s[34]++;\n    storage.fetchItem(request.url.query.id).\n    then(mountain => {/* istanbul ignore next */cov_q0sdvsm27.f[6]++;cov_q0sdvsm27.s[35]++;\n      sendJSON(response, 200, mountain);\n    }).\n    catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[7]++;cov_q0sdvsm27.s[36]++;\n      console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[37]++;\n      sendStatus(response, 404, 'id not found');\n    });\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}\n}","timestamp":"2017-12-08T03:33:49.550Z"}
{"level":"info","message":"Adding an DELETE url and callback","timestamp":"2017-12-08T03:33:49.550Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T03:33:49.550Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[8]++;cov_q0sdvsm27.s[39]++;\n  storage.deleteItem(request.url.query.id).\n  then(mountains => {/* istanbul ignore next */cov_q0sdvsm27.f[9]++;cov_q0sdvsm27.s[40]++;\n    console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[41]++;\n    sendJSON(response, 204, mountains); /* istanbul ignore next */cov_q0sdvsm27.s[42]++;\n    logger.log('info', `User deleted ${request.url.query.id} from database.`);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[10]++;cov_q0sdvsm27.s[43]++;\n    console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[44]++;\n    sendStatus(response, 400, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[45]++;\n    logger.log('info', `Deletion requested from database, but ${request.url.query.id} not found.`);\n  });\n}","timestamp":"2017-12-08T03:33:49.550Z"}
{"level":"info","message":"Server is online at port 3000","timestamp":"2017-12-08T03:33:49.616Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T03:33:49.671Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:33:49.673Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[30]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[31]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T03:33:49.673Z"}
{"level":"info","message":"Responding with a 200 code and the following data.","timestamp":"2017-12-08T03:33:49.676Z"}
{"id":"9ae4fd90-dbc8-11e7-bbcf-fd225b5b5bf8","name":"Mt. Evans","location":"Colorado","elevation":"14,235","level":"info","message":"","timestamp":"2017-12-08T03:33:49.676Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T03:33:49.685Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:33:49.685Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[5]++;cov_q0sdvsm27.s[33]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;cov_q0sdvsm27.s[34]++;\n    storage.fetchItem(request.url.query.id).\n    then(mountain => {/* istanbul ignore next */cov_q0sdvsm27.f[6]++;cov_q0sdvsm27.s[35]++;\n      sendJSON(response, 200, mountain);\n    }).\n    catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[7]++;cov_q0sdvsm27.s[36]++;\n      console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[37]++;\n      sendStatus(response, 404, 'id not found');\n    });\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}\n}","timestamp":"2017-12-08T03:33:49.685Z"}
{"level":"info","message":"Responding with a 200 code and the following data.","timestamp":"2017-12-08T03:33:49.686Z"}
{"id":"9ae4fd90-dbc8-11e7-bbcf-fd225b5b5bf8","name":"Mt. Evans","location":"Colorado","elevation":"14,235","level":"info","message":"","timestamp":"2017-12-08T03:33:49.686Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T03:33:49.689Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T03:33:49.690Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/lib/request-parser.js:34:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-08T03:33:49.690Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T03:33:49.692Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:33:49.693Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[8]++;cov_q0sdvsm27.s[39]++;\n  storage.deleteItem(request.url.query.id).\n  then(mountains => {/* istanbul ignore next */cov_q0sdvsm27.f[9]++;cov_q0sdvsm27.s[40]++;\n    console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[41]++;\n    sendJSON(response, 204, mountains); /* istanbul ignore next */cov_q0sdvsm27.s[42]++;\n    logger.log('info', `User deleted ${request.url.query.id} from database.`);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[10]++;cov_q0sdvsm27.s[43]++;\n    console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[44]++;\n    sendStatus(response, 400, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[45]++;\n    logger.log('info', `Deletion requested from database, but ${request.url.query.id} not found.`);\n  });\n}","timestamp":"2017-12-08T03:33:49.693Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T03:33:54.697Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:33:54.697Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[8]++;cov_q0sdvsm27.s[39]++;\n  storage.deleteItem(request.url.query.id).\n  then(mountains => {/* istanbul ignore next */cov_q0sdvsm27.f[9]++;cov_q0sdvsm27.s[40]++;\n    console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[41]++;\n    sendJSON(response, 204, mountains); /* istanbul ignore next */cov_q0sdvsm27.s[42]++;\n    logger.log('info', `User deleted ${request.url.query.id} from database.`);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[10]++;cov_q0sdvsm27.s[43]++;\n    console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[44]++;\n    sendStatus(response, 400, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[45]++;\n    logger.log('info', `Deletion requested from database, but ${request.url.query.id} not found.`);\n  });\n}","timestamp":"2017-12-08T03:33:54.697Z"}
{"level":"info","message":"Adding an POST url and callback","timestamp":"2017-12-08T03:37:44.244Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T03:37:44.245Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[30]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[31]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T03:37:44.245Z"}
{"level":"info","message":"Adding an GET url and callback","timestamp":"2017-12-08T03:37:44.245Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T03:37:44.245Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[5]++;cov_q0sdvsm27.s[33]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;cov_q0sdvsm27.s[34]++;\n    storage.fetchItem(request.url.query.id).\n    then(mountain => {/* istanbul ignore next */cov_q0sdvsm27.f[6]++;cov_q0sdvsm27.s[35]++;\n      sendJSON(response, 200, mountain);\n    }).\n    catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[7]++;cov_q0sdvsm27.s[36]++;\n      console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[37]++;\n      sendStatus(response, 404, 'id not found');\n    });\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}\n}","timestamp":"2017-12-08T03:37:44.245Z"}
{"level":"info","message":"Adding an DELETE url and callback","timestamp":"2017-12-08T03:37:44.245Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T03:37:44.245Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[8]++;cov_q0sdvsm27.s[39]++;\n  storage.deleteItem(request.url.query.id).\n  then(mountains => {/* istanbul ignore next */cov_q0sdvsm27.f[9]++;cov_q0sdvsm27.s[40]++;\n    sendJSON(response, 204, mountains); /* istanbul ignore next */cov_q0sdvsm27.s[41]++;\n    logger.log('info', `User deleted ${request.url.query.id} from database.`);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[10]++;cov_q0sdvsm27.s[42]++;\n    console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[43]++;\n    sendStatus(response, 400, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[44]++;\n    logger.log('info', `Deletion requested from database, but ${request.url.query.id} not found.`);\n  });\n}","timestamp":"2017-12-08T03:37:44.245Z"}
{"level":"info","message":"Server is online at port 3000","timestamp":"2017-12-08T03:37:44.313Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T03:37:44.367Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:37:44.368Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[30]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[31]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T03:37:44.368Z"}
{"level":"info","message":"Responding with a 200 code and the following data.","timestamp":"2017-12-08T03:37:44.371Z"}
{"id":"26c89b00-dbc9-11e7-b333-ad7174ae4b6f","name":"Mt. Evans","location":"Colorado","elevation":"14,235","level":"info","message":"","timestamp":"2017-12-08T03:37:44.371Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T03:37:44.381Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:37:44.381Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[5]++;cov_q0sdvsm27.s[33]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;cov_q0sdvsm27.s[34]++;\n    storage.fetchItem(request.url.query.id).\n    then(mountain => {/* istanbul ignore next */cov_q0sdvsm27.f[6]++;cov_q0sdvsm27.s[35]++;\n      sendJSON(response, 200, mountain);\n    }).\n    catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[7]++;cov_q0sdvsm27.s[36]++;\n      console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[37]++;\n      sendStatus(response, 404, 'id not found');\n    });\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}\n}","timestamp":"2017-12-08T03:37:44.382Z"}
{"level":"info","message":"Responding with a 200 code and the following data.","timestamp":"2017-12-08T03:37:44.382Z"}
{"id":"26c89b00-dbc9-11e7-b333-ad7174ae4b6f","name":"Mt. Evans","location":"Colorado","elevation":"14,235","level":"info","message":"","timestamp":"2017-12-08T03:37:44.382Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T03:37:44.386Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T03:37:44.386Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/lib/request-parser.js:34:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-08T03:37:44.386Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T03:37:44.389Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:37:44.389Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[8]++;cov_q0sdvsm27.s[39]++;\n  storage.deleteItem(request.url.query.id).\n  then(mountains => {/* istanbul ignore next */cov_q0sdvsm27.f[9]++;cov_q0sdvsm27.s[40]++;\n    sendJSON(response, 204, mountains); /* istanbul ignore next */cov_q0sdvsm27.s[41]++;\n    logger.log('info', `User deleted ${request.url.query.id} from database.`);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[10]++;cov_q0sdvsm27.s[42]++;\n    console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[43]++;\n    sendStatus(response, 400, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[44]++;\n    logger.log('info', `Deletion requested from database, but ${request.url.query.id} not found.`);\n  });\n}","timestamp":"2017-12-08T03:37:44.389Z"}
{"level":"info","message":"Responding with a 204 code and the following data.","timestamp":"2017-12-08T03:37:44.390Z"}
{"level":"info","message":"","timestamp":"2017-12-08T03:37:44.390Z"}
{"level":"info","message":"User deleted 26c89b00-dbc9-11e7-b333-ad7174ae4b6f from database.","timestamp":"2017-12-08T03:37:44.390Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T03:37:44.395Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:37:44.395Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[8]++;cov_q0sdvsm27.s[39]++;\n  storage.deleteItem(request.url.query.id).\n  then(mountains => {/* istanbul ignore next */cov_q0sdvsm27.f[9]++;cov_q0sdvsm27.s[40]++;\n    sendJSON(response, 204, mountains); /* istanbul ignore next */cov_q0sdvsm27.s[41]++;\n    logger.log('info', `User deleted ${request.url.query.id} from database.`);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[10]++;cov_q0sdvsm27.s[42]++;\n    console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[43]++;\n    sendStatus(response, 400, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[44]++;\n    logger.log('info', `Deletion requested from database, but ${request.url.query.id} not found.`);\n  });\n}","timestamp":"2017-12-08T03:37:44.395Z"}
{"level":"info","message":"Responding with a 204 code and the following data.","timestamp":"2017-12-08T03:37:44.396Z"}
{"level":"info","message":"","timestamp":"2017-12-08T03:37:44.396Z"}
{"level":"info","message":"User deleted 26c89b00-dbc9-11e7-b333-ad7174ae4b6f from database.","timestamp":"2017-12-08T03:37:44.396Z"}
{"level":"info","message":"Adding an POST url and callback","timestamp":"2017-12-08T03:38:48.232Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T03:38:48.233Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[30]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[31]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T03:38:48.233Z"}
{"level":"info","message":"Adding an GET url and callback","timestamp":"2017-12-08T03:38:48.233Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T03:38:48.233Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[5]++;cov_q0sdvsm27.s[33]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;cov_q0sdvsm27.s[34]++;\n    storage.fetchItem(request.url.query.id).\n    then(mountain => {/* istanbul ignore next */cov_q0sdvsm27.f[6]++;cov_q0sdvsm27.s[35]++;\n      sendJSON(response, 200, mountain);\n    }).\n    catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[7]++;cov_q0sdvsm27.s[36]++;\n      console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[37]++;\n      sendStatus(response, 404, 'id not found');\n    });\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}\n}","timestamp":"2017-12-08T03:38:48.233Z"}
{"level":"info","message":"Adding an DELETE url and callback","timestamp":"2017-12-08T03:38:48.233Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T03:38:48.233Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[8]++;cov_q0sdvsm27.s[39]++;\n  storage.deleteItem(request.url.query.id).\n  then(mountains => {/* istanbul ignore next */cov_q0sdvsm27.f[9]++;cov_q0sdvsm27.s[40]++;\n    sendJSON(response, 204, mountains); /* istanbul ignore next */cov_q0sdvsm27.s[41]++;\n    logger.log('info', `User deleted ${request.url.query.id} from database.`);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[10]++;cov_q0sdvsm27.s[42]++;\n    console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[43]++;\n    sendStatus(response, 400, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[44]++;\n    logger.log('info', `Deletion requested from database, but ${request.url.query.id} not found.`);\n  });\n}","timestamp":"2017-12-08T03:38:48.233Z"}
{"level":"info","message":"Server is online at port 3000","timestamp":"2017-12-08T03:38:48.280Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T03:38:48.332Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:38:48.333Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[30]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[31]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T03:38:48.333Z"}
{"level":"info","message":"Responding with a 200 code and the following data.","timestamp":"2017-12-08T03:38:48.336Z"}
{"id":"4ce90ae0-dbc9-11e7-a54f-83daad899798","name":"Mt. Evans","location":"Colorado","elevation":"14,235","level":"info","message":"","timestamp":"2017-12-08T03:38:48.336Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T03:38:48.346Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:38:48.347Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[5]++;cov_q0sdvsm27.s[33]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;cov_q0sdvsm27.s[34]++;\n    storage.fetchItem(request.url.query.id).\n    then(mountain => {/* istanbul ignore next */cov_q0sdvsm27.f[6]++;cov_q0sdvsm27.s[35]++;\n      sendJSON(response, 200, mountain);\n    }).\n    catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[7]++;cov_q0sdvsm27.s[36]++;\n      console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[37]++;\n      sendStatus(response, 404, 'id not found');\n    });\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}\n}","timestamp":"2017-12-08T03:38:48.347Z"}
{"level":"info","message":"Responding with a 200 code and the following data.","timestamp":"2017-12-08T03:38:48.347Z"}
{"id":"4ce90ae0-dbc9-11e7-a54f-83daad899798","name":"Mt. Evans","location":"Colorado","elevation":"14,235","level":"info","message":"","timestamp":"2017-12-08T03:38:48.348Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T03:38:48.351Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T03:38:48.351Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/lib/request-parser.js:34:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-08T03:38:48.351Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T03:38:48.354Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:38:48.354Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[8]++;cov_q0sdvsm27.s[39]++;\n  storage.deleteItem(request.url.query.id).\n  then(mountains => {/* istanbul ignore next */cov_q0sdvsm27.f[9]++;cov_q0sdvsm27.s[40]++;\n    sendJSON(response, 204, mountains); /* istanbul ignore next */cov_q0sdvsm27.s[41]++;\n    logger.log('info', `User deleted ${request.url.query.id} from database.`);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[10]++;cov_q0sdvsm27.s[42]++;\n    console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[43]++;\n    sendStatus(response, 400, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[44]++;\n    logger.log('info', `Deletion requested from database, but ${request.url.query.id} not found.`);\n  });\n}","timestamp":"2017-12-08T03:38:48.354Z"}
{"level":"info","message":"Responding with a 204 code and the following data.","timestamp":"2017-12-08T03:38:48.355Z"}
{"level":"info","message":"","timestamp":"2017-12-08T03:38:48.355Z"}
{"level":"info","message":"User deleted 4ce90ae0-dbc9-11e7-a54f-83daad899798 from database.","timestamp":"2017-12-08T03:38:48.356Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T03:38:48.358Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:38:48.358Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[8]++;cov_q0sdvsm27.s[39]++;\n  storage.deleteItem(request.url.query.id).\n  then(mountains => {/* istanbul ignore next */cov_q0sdvsm27.f[9]++;cov_q0sdvsm27.s[40]++;\n    sendJSON(response, 204, mountains); /* istanbul ignore next */cov_q0sdvsm27.s[41]++;\n    logger.log('info', `User deleted ${request.url.query.id} from database.`);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[10]++;cov_q0sdvsm27.s[42]++;\n    console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[43]++;\n    sendStatus(response, 400, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[44]++;\n    logger.log('info', `Deletion requested from database, but ${request.url.query.id} not found.`);\n  });\n}","timestamp":"2017-12-08T03:38:48.359Z"}
{"level":"info","message":"Responding with a 204 code and the following data.","timestamp":"2017-12-08T03:38:48.359Z"}
{"level":"info","message":"","timestamp":"2017-12-08T03:38:48.359Z"}
{"level":"info","message":"User deleted 4ce90ae0-dbc9-11e7-a54f-83daad899798 from database.","timestamp":"2017-12-08T03:38:48.359Z"}
{"level":"info","message":"Adding an POST url and callback","timestamp":"2017-12-08T03:44:09.016Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T03:44:09.017Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[30]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[31]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T03:44:09.017Z"}
{"level":"info","message":"Adding an GET url and callback","timestamp":"2017-12-08T03:44:09.017Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T03:44:09.017Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[5]++;cov_q0sdvsm27.s[33]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;cov_q0sdvsm27.s[34]++;\n    storage.fetchItem(request.url.query.id).\n    then(mountain => {/* istanbul ignore next */cov_q0sdvsm27.f[6]++;cov_q0sdvsm27.s[35]++;\n      sendJSON(response, 200, mountain);\n    }).\n    catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[7]++;cov_q0sdvsm27.s[36]++;\n      console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[37]++;\n      sendStatus(response, 404, 'id not found');\n    });\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}\n}","timestamp":"2017-12-08T03:44:09.017Z"}
{"level":"info","message":"Adding an DELETE url and callback","timestamp":"2017-12-08T03:44:09.017Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T03:44:09.017Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[8]++;cov_q0sdvsm27.s[39]++;\n  storage.deleteItem(request.url.query.id).\n  then(mountains => {/* istanbul ignore next */cov_q0sdvsm27.f[9]++;cov_q0sdvsm27.s[40]++;\n    sendJSON(response, 204, mountains); /* istanbul ignore next */cov_q0sdvsm27.s[41]++;\n    logger.log('info', `User deleted ${request.url.query.id} from database.`);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[10]++;cov_q0sdvsm27.s[42]++;\n    console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[43]++;\n    sendStatus(response, 400, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[44]++;\n    logger.log('info', `Deletion requested from database, but ${request.url.query.id} not found.`);\n  });\n}","timestamp":"2017-12-08T03:44:09.017Z"}
{"level":"info","message":"Server is online at port 3000","timestamp":"2017-12-08T03:44:09.084Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T03:44:09.136Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:44:09.137Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[30]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[31]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T03:44:09.137Z"}
{"level":"info","message":"Responding with a 200 code and the following data.","timestamp":"2017-12-08T03:44:09.141Z"}
{"id":"0c1fb210-dbca-11e7-b70e-d30076ccc452","name":"Mt. Evans","location":"Colorado","elevation":"14,235","level":"info","message":"","timestamp":"2017-12-08T03:44:09.141Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T03:44:09.150Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:44:09.151Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[5]++;cov_q0sdvsm27.s[33]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;cov_q0sdvsm27.s[34]++;\n    storage.fetchItem(request.url.query.id).\n    then(mountain => {/* istanbul ignore next */cov_q0sdvsm27.f[6]++;cov_q0sdvsm27.s[35]++;\n      sendJSON(response, 200, mountain);\n    }).\n    catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[7]++;cov_q0sdvsm27.s[36]++;\n      console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[37]++;\n      sendStatus(response, 404, 'id not found');\n    });\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}\n}","timestamp":"2017-12-08T03:44:09.151Z"}
{"level":"info","message":"Responding with a 200 code and the following data.","timestamp":"2017-12-08T03:44:09.152Z"}
{"id":"0c1fb210-dbca-11e7-b70e-d30076ccc452","name":"Mt. Evans","location":"Colorado","elevation":"14,235","level":"info","message":"","timestamp":"2017-12-08T03:44:09.152Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T03:44:09.155Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T03:44:09.155Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/lib/request-parser.js:34:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-08T03:44:09.156Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T03:44:09.158Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:44:09.158Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[8]++;cov_q0sdvsm27.s[39]++;\n  storage.deleteItem(request.url.query.id).\n  then(mountains => {/* istanbul ignore next */cov_q0sdvsm27.f[9]++;cov_q0sdvsm27.s[40]++;\n    sendJSON(response, 204, mountains); /* istanbul ignore next */cov_q0sdvsm27.s[41]++;\n    logger.log('info', `User deleted ${request.url.query.id} from database.`);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[10]++;cov_q0sdvsm27.s[42]++;\n    console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[43]++;\n    sendStatus(response, 400, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[44]++;\n    logger.log('info', `Deletion requested from database, but ${request.url.query.id} not found.`);\n  });\n}","timestamp":"2017-12-08T03:44:09.158Z"}
{"level":"info","message":"Responding with a 204 code and the following data.","timestamp":"2017-12-08T03:44:09.159Z"}
{"level":"info","message":"","timestamp":"2017-12-08T03:44:09.160Z"}
{"level":"info","message":"User deleted 0c1fb210-dbca-11e7-b70e-d30076ccc452 from database.","timestamp":"2017-12-08T03:44:09.160Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T03:44:09.162Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:44:09.162Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[8]++;cov_q0sdvsm27.s[39]++;\n  storage.deleteItem(request.url.query.id).\n  then(mountains => {/* istanbul ignore next */cov_q0sdvsm27.f[9]++;cov_q0sdvsm27.s[40]++;\n    sendJSON(response, 204, mountains); /* istanbul ignore next */cov_q0sdvsm27.s[41]++;\n    logger.log('info', `User deleted ${request.url.query.id} from database.`);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[10]++;cov_q0sdvsm27.s[42]++;\n    console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[43]++;\n    sendStatus(response, 400, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[44]++;\n    logger.log('info', `Deletion requested from database, but ${request.url.query.id} not found.`);\n  });\n}","timestamp":"2017-12-08T03:44:09.162Z"}
{"level":"info","message":"Responding with a 204 code and the following data.","timestamp":"2017-12-08T03:44:09.163Z"}
{"level":"info","message":"","timestamp":"2017-12-08T03:44:09.163Z"}
{"level":"info","message":"User deleted 0c1fb210-dbca-11e7-b70e-d30076ccc452 from database.","timestamp":"2017-12-08T03:44:09.163Z"}
{"level":"info","message":"Adding an POST url and callback","timestamp":"2017-12-08T03:45:13.568Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T03:45:13.569Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[30]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[31]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T03:45:13.569Z"}
{"level":"info","message":"Adding an GET url and callback","timestamp":"2017-12-08T03:45:13.569Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T03:45:13.569Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[5]++;cov_q0sdvsm27.s[33]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;cov_q0sdvsm27.s[34]++;\n    storage.fetchItem(request.url.query.id).\n    then(mountain => {/* istanbul ignore next */cov_q0sdvsm27.f[6]++;cov_q0sdvsm27.s[35]++;\n      sendJSON(response, 200, mountain);\n    }).\n    catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[7]++;cov_q0sdvsm27.s[36]++;\n      console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[37]++;\n      sendStatus(response, 404, 'id not found');\n    });\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}\n}","timestamp":"2017-12-08T03:45:13.569Z"}
{"level":"info","message":"Adding an DELETE url and callback","timestamp":"2017-12-08T03:45:13.569Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T03:45:13.569Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[8]++;cov_q0sdvsm27.s[39]++;\n  storage.deleteItem(request.url.query.id).\n  then(mountains => {/* istanbul ignore next */cov_q0sdvsm27.f[9]++;cov_q0sdvsm27.s[40]++;\n    sendJSON(response, 204, mountains); /* istanbul ignore next */cov_q0sdvsm27.s[41]++;\n    logger.log('info', `User deleted ${request.url.query.id} from database.`);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[10]++;cov_q0sdvsm27.s[42]++;\n    console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[43]++;\n    sendStatus(response, 400, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[44]++;\n    logger.log('info', `Deletion requested from database, but ${request.url.query.id} not found.`);\n  });\n}","timestamp":"2017-12-08T03:45:13.569Z"}
{"level":"info","message":"Server is online at port 3000","timestamp":"2017-12-08T03:45:13.619Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T03:45:13.670Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:45:13.671Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[30]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[31]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T03:45:13.671Z"}
{"level":"info","message":"Responding with a 200 code and the following data.","timestamp":"2017-12-08T03:45:13.675Z"}
{"id":"3296cd70-dbca-11e7-8af6-7dbc27afdc74","name":"Mt. Evans","location":"Colorado","elevation":"14,235","level":"info","message":"","timestamp":"2017-12-08T03:45:13.675Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T03:45:13.684Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:45:13.685Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[5]++;cov_q0sdvsm27.s[33]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;cov_q0sdvsm27.s[34]++;\n    storage.fetchItem(request.url.query.id).\n    then(mountain => {/* istanbul ignore next */cov_q0sdvsm27.f[6]++;cov_q0sdvsm27.s[35]++;\n      sendJSON(response, 200, mountain);\n    }).\n    catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[7]++;cov_q0sdvsm27.s[36]++;\n      console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[37]++;\n      sendStatus(response, 404, 'id not found');\n    });\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}\n}","timestamp":"2017-12-08T03:45:13.685Z"}
{"level":"info","message":"Responding with a 200 code and the following data.","timestamp":"2017-12-08T03:45:13.686Z"}
{"id":"3296cd70-dbca-11e7-8af6-7dbc27afdc74","name":"Mt. Evans","location":"Colorado","elevation":"14,235","level":"info","message":"","timestamp":"2017-12-08T03:45:13.686Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T03:45:13.690Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T03:45:13.690Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/lib/request-parser.js:34:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-08T03:45:13.690Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T03:45:13.693Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:45:13.693Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[8]++;cov_q0sdvsm27.s[39]++;\n  storage.deleteItem(request.url.query.id).\n  then(mountains => {/* istanbul ignore next */cov_q0sdvsm27.f[9]++;cov_q0sdvsm27.s[40]++;\n    sendJSON(response, 204, mountains); /* istanbul ignore next */cov_q0sdvsm27.s[41]++;\n    logger.log('info', `User deleted ${request.url.query.id} from database.`);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[10]++;cov_q0sdvsm27.s[42]++;\n    console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[43]++;\n    sendStatus(response, 400, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[44]++;\n    logger.log('info', `Deletion requested from database, but ${request.url.query.id} not found.`);\n  });\n}","timestamp":"2017-12-08T03:45:13.693Z"}
{"level":"info","message":"Responding with a 204 code and the following data.","timestamp":"2017-12-08T03:45:13.694Z"}
{"level":"info","message":"","timestamp":"2017-12-08T03:45:13.694Z"}
{"level":"info","message":"User deleted 3296cd70-dbca-11e7-8af6-7dbc27afdc74 from database.","timestamp":"2017-12-08T03:45:13.694Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T03:45:13.697Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:45:13.697Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[8]++;cov_q0sdvsm27.s[39]++;\n  storage.deleteItem(request.url.query.id).\n  then(mountains => {/* istanbul ignore next */cov_q0sdvsm27.f[9]++;cov_q0sdvsm27.s[40]++;\n    sendJSON(response, 204, mountains); /* istanbul ignore next */cov_q0sdvsm27.s[41]++;\n    logger.log('info', `User deleted ${request.url.query.id} from database.`);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[10]++;cov_q0sdvsm27.s[42]++;\n    console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[43]++;\n    sendStatus(response, 400, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[44]++;\n    logger.log('info', `Deletion requested from database, but ${request.url.query.id} not found.`);\n  });\n}","timestamp":"2017-12-08T03:45:13.698Z"}
{"level":"info","message":"Responding with a 204 code and the following data.","timestamp":"2017-12-08T03:45:13.698Z"}
{"level":"info","message":"","timestamp":"2017-12-08T03:45:13.699Z"}
{"level":"info","message":"User deleted 3296cd70-dbca-11e7-8af6-7dbc27afdc74 from database.","timestamp":"2017-12-08T03:45:13.699Z"}
{"level":"info","message":"Adding an POST url and callback","timestamp":"2017-12-08T03:45:47.910Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T03:45:47.911Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[30]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[31]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T03:45:47.911Z"}
{"level":"info","message":"Adding an GET url and callback","timestamp":"2017-12-08T03:45:47.911Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T03:45:47.911Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[5]++;cov_q0sdvsm27.s[33]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;cov_q0sdvsm27.s[34]++;\n    storage.fetchItem(request.url.query.id).\n    then(mountain => {/* istanbul ignore next */cov_q0sdvsm27.f[6]++;cov_q0sdvsm27.s[35]++;\n      sendJSON(response, 200, mountain);\n    }).\n    catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[7]++;cov_q0sdvsm27.s[36]++;\n      console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[37]++;\n      sendStatus(response, 404, 'id not found');\n    });\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}\n}","timestamp":"2017-12-08T03:45:47.911Z"}
{"level":"info","message":"Adding an DELETE url and callback","timestamp":"2017-12-08T03:45:47.911Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T03:45:47.911Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[8]++;cov_q0sdvsm27.s[39]++;\n  storage.deleteItem(request.url.query.id).\n  then(mountains => {/* istanbul ignore next */cov_q0sdvsm27.f[9]++;cov_q0sdvsm27.s[40]++;\n    sendJSON(response, 204, mountains); /* istanbul ignore next */cov_q0sdvsm27.s[41]++;\n    logger.log('info', `User deleted ${request.url.query.id} from database.`);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[10]++;cov_q0sdvsm27.s[42]++;\n    console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[43]++;\n    sendStatus(response, 400, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[44]++;\n    logger.log('info', `Deletion requested from database, but ${request.url.query.id} not found.`);\n  });\n}","timestamp":"2017-12-08T03:45:47.911Z"}
{"level":"info","message":"Server is online at port 3000","timestamp":"2017-12-08T03:45:47.961Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T03:45:48.014Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:45:48.016Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[30]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[31]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T03:45:48.016Z"}
{"level":"info","message":"Responding with a 200 code and the following data.","timestamp":"2017-12-08T03:45:48.020Z"}
{"id":"470f6f00-dbca-11e7-b3cc-9ff9020522c5","name":"Mt. Evans","location":"Colorado","elevation":"14,235","level":"info","message":"","timestamp":"2017-12-08T03:45:48.020Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T03:45:48.031Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:45:48.032Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[5]++;cov_q0sdvsm27.s[33]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;cov_q0sdvsm27.s[34]++;\n    storage.fetchItem(request.url.query.id).\n    then(mountain => {/* istanbul ignore next */cov_q0sdvsm27.f[6]++;cov_q0sdvsm27.s[35]++;\n      sendJSON(response, 200, mountain);\n    }).\n    catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[7]++;cov_q0sdvsm27.s[36]++;\n      console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[37]++;\n      sendStatus(response, 404, 'id not found');\n    });\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}\n}","timestamp":"2017-12-08T03:45:48.032Z"}
{"level":"info","message":"Responding with a 200 code and the following data.","timestamp":"2017-12-08T03:45:48.033Z"}
{"id":"470f6f00-dbca-11e7-b3cc-9ff9020522c5","name":"Mt. Evans","location":"Colorado","elevation":"14,235","level":"info","message":"","timestamp":"2017-12-08T03:45:48.033Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T03:45:48.038Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T03:45:48.038Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/lib/request-parser.js:34:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-08T03:45:48.038Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T03:45:48.042Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:45:48.042Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[8]++;cov_q0sdvsm27.s[39]++;\n  storage.deleteItem(request.url.query.id).\n  then(mountains => {/* istanbul ignore next */cov_q0sdvsm27.f[9]++;cov_q0sdvsm27.s[40]++;\n    sendJSON(response, 204, mountains); /* istanbul ignore next */cov_q0sdvsm27.s[41]++;\n    logger.log('info', `User deleted ${request.url.query.id} from database.`);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[10]++;cov_q0sdvsm27.s[42]++;\n    console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[43]++;\n    sendStatus(response, 400, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[44]++;\n    logger.log('info', `Deletion requested from database, but ${request.url.query.id} not found.`);\n  });\n}","timestamp":"2017-12-08T03:45:48.042Z"}
{"level":"info","message":"Responding with a 204 code and the following data.","timestamp":"2017-12-08T03:45:48.044Z"}
{"level":"info","message":"","timestamp":"2017-12-08T03:45:48.044Z"}
{"level":"info","message":"User deleted 470f6f00-dbca-11e7-b3cc-9ff9020522c5 from database.","timestamp":"2017-12-08T03:45:48.044Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T03:45:48.048Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:45:48.048Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[8]++;cov_q0sdvsm27.s[39]++;\n  storage.deleteItem(request.url.query.id).\n  then(mountains => {/* istanbul ignore next */cov_q0sdvsm27.f[9]++;cov_q0sdvsm27.s[40]++;\n    sendJSON(response, 204, mountains); /* istanbul ignore next */cov_q0sdvsm27.s[41]++;\n    logger.log('info', `User deleted ${request.url.query.id} from database.`);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[10]++;cov_q0sdvsm27.s[42]++;\n    console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[43]++;\n    sendStatus(response, 400, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[44]++;\n    logger.log('info', `Deletion requested from database, but ${request.url.query.id} not found.`);\n  });\n}","timestamp":"2017-12-08T03:45:48.048Z"}
{"level":"info","message":"Responding with a 204 code and the following data.","timestamp":"2017-12-08T03:45:48.049Z"}
{"level":"info","message":"","timestamp":"2017-12-08T03:45:48.049Z"}
{"level":"info","message":"User deleted 470f6f00-dbca-11e7-b3cc-9ff9020522c5 from database.","timestamp":"2017-12-08T03:45:48.049Z"}
{"level":"info","message":"Adding an POST url and callback","timestamp":"2017-12-08T03:46:21.689Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T03:46:21.690Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[30]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[31]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T03:46:21.690Z"}
{"level":"info","message":"Adding an GET url and callback","timestamp":"2017-12-08T03:46:21.690Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T03:46:21.690Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[5]++;cov_q0sdvsm27.s[33]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;cov_q0sdvsm27.s[34]++;\n    storage.fetchItem(request.url.query.id).\n    then(mountain => {/* istanbul ignore next */cov_q0sdvsm27.f[6]++;cov_q0sdvsm27.s[35]++;\n      sendJSON(response, 200, mountain);\n    }).\n    catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[7]++;cov_q0sdvsm27.s[36]++;\n      console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[37]++;\n      sendStatus(response, 404, 'id not found');\n    });\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}\n}","timestamp":"2017-12-08T03:46:21.690Z"}
{"level":"info","message":"Adding an DELETE url and callback","timestamp":"2017-12-08T03:46:21.690Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T03:46:21.690Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[8]++;cov_q0sdvsm27.s[39]++;\n  storage.deleteItem(request.url.query.id).\n  then(mountains => {/* istanbul ignore next */cov_q0sdvsm27.f[9]++;cov_q0sdvsm27.s[40]++;\n    sendJSON(response, 204, mountains); /* istanbul ignore next */cov_q0sdvsm27.s[41]++;\n    logger.log('info', `User deleted ${request.url.query.id} from database.`);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[10]++;cov_q0sdvsm27.s[42]++;\n    console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[43]++;\n    sendStatus(response, 400, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[44]++;\n    logger.log('info', `Deletion requested from database, but ${request.url.query.id} not found.`);\n  });\n}","timestamp":"2017-12-08T03:46:21.690Z"}
{"level":"info","message":"Server is online at port 3000","timestamp":"2017-12-08T03:46:21.738Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T03:46:21.791Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:46:21.792Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[30]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[31]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T03:46:21.792Z"}
{"level":"info","message":"Responding with a 200 code and the following data.","timestamp":"2017-12-08T03:46:21.795Z"}
{"id":"5b316510-dbca-11e7-b470-63d8b1ab8824","name":"Mt. Evans","location":"Colorado","elevation":"14,235","level":"info","message":"","timestamp":"2017-12-08T03:46:21.796Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T03:46:21.804Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:46:21.805Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[5]++;cov_q0sdvsm27.s[33]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;cov_q0sdvsm27.s[34]++;\n    storage.fetchItem(request.url.query.id).\n    then(mountain => {/* istanbul ignore next */cov_q0sdvsm27.f[6]++;cov_q0sdvsm27.s[35]++;\n      sendJSON(response, 200, mountain);\n    }).\n    catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[7]++;cov_q0sdvsm27.s[36]++;\n      console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[37]++;\n      sendStatus(response, 404, 'id not found');\n    });\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}\n}","timestamp":"2017-12-08T03:46:21.805Z"}
{"level":"info","message":"Responding with a 200 code and the following data.","timestamp":"2017-12-08T03:46:21.806Z"}
{"id":"5b316510-dbca-11e7-b470-63d8b1ab8824","name":"Mt. Evans","location":"Colorado","elevation":"14,235","level":"info","message":"","timestamp":"2017-12-08T03:46:21.806Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T03:46:21.809Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T03:46:21.810Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/lib/request-parser.js:34:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-08T03:46:21.810Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T03:46:21.813Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:46:21.814Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[8]++;cov_q0sdvsm27.s[39]++;\n  storage.deleteItem(request.url.query.id).\n  then(mountains => {/* istanbul ignore next */cov_q0sdvsm27.f[9]++;cov_q0sdvsm27.s[40]++;\n    sendJSON(response, 204, mountains); /* istanbul ignore next */cov_q0sdvsm27.s[41]++;\n    logger.log('info', `User deleted ${request.url.query.id} from database.`);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[10]++;cov_q0sdvsm27.s[42]++;\n    console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[43]++;\n    sendStatus(response, 400, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[44]++;\n    logger.log('info', `Deletion requested from database, but ${request.url.query.id} not found.`);\n  });\n}","timestamp":"2017-12-08T03:46:21.814Z"}
{"level":"info","message":"Responding with a 204 code and the following data.","timestamp":"2017-12-08T03:46:21.815Z"}
{"level":"info","message":"","timestamp":"2017-12-08T03:46:21.815Z"}
{"level":"info","message":"User deleted 5b316510-dbca-11e7-b470-63d8b1ab8824 from database.","timestamp":"2017-12-08T03:46:21.815Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T03:46:21.817Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:46:21.818Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[8]++;cov_q0sdvsm27.s[39]++;\n  storage.deleteItem(request.url.query.id).\n  then(mountains => {/* istanbul ignore next */cov_q0sdvsm27.f[9]++;cov_q0sdvsm27.s[40]++;\n    sendJSON(response, 204, mountains); /* istanbul ignore next */cov_q0sdvsm27.s[41]++;\n    logger.log('info', `User deleted ${request.url.query.id} from database.`);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[10]++;cov_q0sdvsm27.s[42]++;\n    console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[43]++;\n    sendStatus(response, 400, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[44]++;\n    logger.log('info', `Deletion requested from database, but ${request.url.query.id} not found.`);\n  });\n}","timestamp":"2017-12-08T03:46:21.818Z"}
{"level":"info","message":"Responding with a 204 code and the following data.","timestamp":"2017-12-08T03:46:21.818Z"}
{"level":"info","message":"","timestamp":"2017-12-08T03:46:21.818Z"}
{"level":"info","message":"User deleted 5b316510-dbca-11e7-b470-63d8b1ab8824 from database.","timestamp":"2017-12-08T03:46:21.818Z"}
{"level":"info","message":"Adding an POST url and callback","timestamp":"2017-12-08T03:47:04.353Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T03:47:04.353Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[30]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[31]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T03:47:04.354Z"}
{"level":"info","message":"Adding an GET url and callback","timestamp":"2017-12-08T03:47:04.354Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T03:47:04.354Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[5]++;cov_q0sdvsm27.s[33]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;cov_q0sdvsm27.s[34]++;\n    storage.fetchItem(request.url.query.id).\n    then(mountain => {/* istanbul ignore next */cov_q0sdvsm27.f[6]++;cov_q0sdvsm27.s[35]++;\n      sendJSON(response, 200, mountain);\n    }).\n    catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[7]++;cov_q0sdvsm27.s[36]++;\n      console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[37]++;\n      sendStatus(response, 404, 'id not found');\n    });\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}\n}","timestamp":"2017-12-08T03:47:04.354Z"}
{"level":"info","message":"Adding an DELETE url and callback","timestamp":"2017-12-08T03:47:04.354Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T03:47:04.354Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[8]++;cov_q0sdvsm27.s[39]++;\n  storage.deleteItem(request.url.query.id).\n  then(mountains => {/* istanbul ignore next */cov_q0sdvsm27.f[9]++;cov_q0sdvsm27.s[40]++;\n    sendJSON(response, 204, mountains); /* istanbul ignore next */cov_q0sdvsm27.s[41]++;\n    logger.log('info', `User deleted ${request.url.query.id} from database.`);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[10]++;cov_q0sdvsm27.s[42]++;\n    console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[43]++;\n    sendStatus(response, 400, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[44]++;\n    logger.log('info', `Deletion requested from database, but ${request.url.query.id} not found.`);\n  });\n}","timestamp":"2017-12-08T03:47:04.354Z"}
{"level":"info","message":"Server is online at port 3000","timestamp":"2017-12-08T03:47:04.401Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T03:47:04.450Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:47:04.451Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[30]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[31]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T03:47:04.451Z"}
{"level":"info","message":"Responding with a 200 code and the following data.","timestamp":"2017-12-08T03:47:04.455Z"}
{"id":"749e7d30-dbca-11e7-bc0f-df8d596132f0","name":"Mt. Evans","location":"Colorado","elevation":"14,235","level":"info","message":"","timestamp":"2017-12-08T03:47:04.455Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T03:47:04.464Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:47:04.464Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[5]++;cov_q0sdvsm27.s[33]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;cov_q0sdvsm27.s[34]++;\n    storage.fetchItem(request.url.query.id).\n    then(mountain => {/* istanbul ignore next */cov_q0sdvsm27.f[6]++;cov_q0sdvsm27.s[35]++;\n      sendJSON(response, 200, mountain);\n    }).\n    catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[7]++;cov_q0sdvsm27.s[36]++;\n      console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[37]++;\n      sendStatus(response, 404, 'id not found');\n    });\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}\n}","timestamp":"2017-12-08T03:47:04.464Z"}
{"level":"info","message":"Responding with a 200 code and the following data.","timestamp":"2017-12-08T03:47:04.465Z"}
{"id":"749e7d30-dbca-11e7-bc0f-df8d596132f0","name":"Mt. Evans","location":"Colorado","elevation":"14,235","level":"info","message":"","timestamp":"2017-12-08T03:47:04.465Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T03:47:04.469Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T03:47:04.469Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/lib/request-parser.js:34:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-08T03:47:04.469Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T03:47:04.472Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:47:04.472Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[8]++;cov_q0sdvsm27.s[39]++;\n  storage.deleteItem(request.url.query.id).\n  then(mountains => {/* istanbul ignore next */cov_q0sdvsm27.f[9]++;cov_q0sdvsm27.s[40]++;\n    sendJSON(response, 204, mountains); /* istanbul ignore next */cov_q0sdvsm27.s[41]++;\n    logger.log('info', `User deleted ${request.url.query.id} from database.`);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[10]++;cov_q0sdvsm27.s[42]++;\n    console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[43]++;\n    sendStatus(response, 400, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[44]++;\n    logger.log('info', `Deletion requested from database, but ${request.url.query.id} not found.`);\n  });\n}","timestamp":"2017-12-08T03:47:04.472Z"}
{"level":"info","message":"Responding with a 204 code and the following data.","timestamp":"2017-12-08T03:47:04.473Z"}
{"level":"info","message":"","timestamp":"2017-12-08T03:47:04.473Z"}
{"level":"info","message":"User deleted 749e7d30-dbca-11e7-bc0f-df8d596132f0 from database.","timestamp":"2017-12-08T03:47:04.473Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T03:47:04.476Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:47:04.476Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[8]++;cov_q0sdvsm27.s[39]++;\n  storage.deleteItem(request.url.query.id).\n  then(mountains => {/* istanbul ignore next */cov_q0sdvsm27.f[9]++;cov_q0sdvsm27.s[40]++;\n    sendJSON(response, 204, mountains); /* istanbul ignore next */cov_q0sdvsm27.s[41]++;\n    logger.log('info', `User deleted ${request.url.query.id} from database.`);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[10]++;cov_q0sdvsm27.s[42]++;\n    console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[43]++;\n    sendStatus(response, 400, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[44]++;\n    logger.log('info', `Deletion requested from database, but ${request.url.query.id} not found.`);\n  });\n}","timestamp":"2017-12-08T03:47:04.476Z"}
{"level":"info","message":"Responding with a 204 code and the following data.","timestamp":"2017-12-08T03:47:04.477Z"}
{"level":"info","message":"","timestamp":"2017-12-08T03:47:04.477Z"}
{"level":"info","message":"User deleted 749e7d30-dbca-11e7-bc0f-df8d596132f0 from database.","timestamp":"2017-12-08T03:47:04.477Z"}
{"level":"info","message":"Adding an POST url and callback","timestamp":"2017-12-08T03:49:56.200Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T03:49:56.201Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[30]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[31]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T03:49:56.201Z"}
{"level":"info","message":"Adding an GET url and callback","timestamp":"2017-12-08T03:49:56.201Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T03:49:56.201Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[5]++;cov_q0sdvsm27.s[33]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;cov_q0sdvsm27.s[34]++;\n    storage.fetchItem(request.url.query.id).\n    then(mountain => {/* istanbul ignore next */cov_q0sdvsm27.f[6]++;cov_q0sdvsm27.s[35]++;\n      sendJSON(response, 200, mountain);\n    }).\n    catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[7]++;cov_q0sdvsm27.s[36]++;\n      console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[37]++;\n      sendStatus(response, 404, 'id not found');\n    });\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}\n}","timestamp":"2017-12-08T03:49:56.201Z"}
{"level":"info","message":"Adding an DELETE url and callback","timestamp":"2017-12-08T03:49:56.201Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T03:49:56.201Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[8]++;cov_q0sdvsm27.s[39]++;\n  storage.deleteItem(request.url.query.id).\n  then(mountains => {/* istanbul ignore next */cov_q0sdvsm27.f[9]++;cov_q0sdvsm27.s[40]++;\n    sendJSON(response, 204, mountains); /* istanbul ignore next */cov_q0sdvsm27.s[41]++;\n    logger.log('info', `User deleted ${request.url.query.id} from database.`);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[10]++;cov_q0sdvsm27.s[42]++;\n    console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[43]++;\n    sendStatus(response, 400, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[44]++;\n    logger.log('info', `Deletion requested from database, but ${request.url.query.id} not found.`);\n  });\n}","timestamp":"2017-12-08T03:49:56.201Z"}
{"level":"info","message":"Server is online at port 3000","timestamp":"2017-12-08T03:49:56.263Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T03:49:56.315Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:49:56.316Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[30]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[31]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T03:49:56.316Z"}
{"level":"info","message":"Responding with a 200 code and the following data.","timestamp":"2017-12-08T03:49:56.319Z"}
{"id":"db0f28d0-dbca-11e7-b12d-afa54e7a626a","name":"Mt. Evans","location":"Colorado","elevation":"14,235","level":"info","message":"","timestamp":"2017-12-08T03:49:56.319Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T03:49:56.328Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:49:56.329Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[5]++;cov_q0sdvsm27.s[33]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;cov_q0sdvsm27.s[34]++;\n    storage.fetchItem(request.url.query.id).\n    then(mountain => {/* istanbul ignore next */cov_q0sdvsm27.f[6]++;cov_q0sdvsm27.s[35]++;\n      sendJSON(response, 200, mountain);\n    }).\n    catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[7]++;cov_q0sdvsm27.s[36]++;\n      console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[37]++;\n      sendStatus(response, 404, 'id not found');\n    });\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}\n}","timestamp":"2017-12-08T03:49:56.329Z"}
{"level":"info","message":"Responding with a 200 code and the following data.","timestamp":"2017-12-08T03:49:56.330Z"}
{"id":"db0f28d0-dbca-11e7-b12d-afa54e7a626a","name":"Mt. Evans","location":"Colorado","elevation":"14,235","level":"info","message":"","timestamp":"2017-12-08T03:49:56.330Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T03:49:56.332Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T03:49:56.333Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/lib/request-parser.js:34:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-08T03:49:56.333Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T03:49:56.335Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:49:56.335Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[8]++;cov_q0sdvsm27.s[39]++;\n  storage.deleteItem(request.url.query.id).\n  then(mountains => {/* istanbul ignore next */cov_q0sdvsm27.f[9]++;cov_q0sdvsm27.s[40]++;\n    sendJSON(response, 204, mountains); /* istanbul ignore next */cov_q0sdvsm27.s[41]++;\n    logger.log('info', `User deleted ${request.url.query.id} from database.`);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[10]++;cov_q0sdvsm27.s[42]++;\n    console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[43]++;\n    sendStatus(response, 400, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[44]++;\n    logger.log('info', `Deletion requested from database, but ${request.url.query.id} not found.`);\n  });\n}","timestamp":"2017-12-08T03:49:56.335Z"}
{"level":"info","message":"Responding with a 204 code and the following data.","timestamp":"2017-12-08T03:49:56.336Z"}
{"level":"info","message":"","timestamp":"2017-12-08T03:49:56.336Z"}
{"level":"info","message":"User deleted db0f28d0-dbca-11e7-b12d-afa54e7a626a from database.","timestamp":"2017-12-08T03:49:56.336Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T03:49:56.338Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:49:56.338Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[8]++;cov_q0sdvsm27.s[39]++;\n  storage.deleteItem(request.url.query.id).\n  then(mountains => {/* istanbul ignore next */cov_q0sdvsm27.f[9]++;cov_q0sdvsm27.s[40]++;\n    sendJSON(response, 204, mountains); /* istanbul ignore next */cov_q0sdvsm27.s[41]++;\n    logger.log('info', `User deleted ${request.url.query.id} from database.`);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[10]++;cov_q0sdvsm27.s[42]++;\n    console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[43]++;\n    sendStatus(response, 400, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[44]++;\n    logger.log('info', `Deletion requested from database, but ${request.url.query.id} not found.`);\n  });\n}","timestamp":"2017-12-08T03:49:56.338Z"}
{"level":"info","message":"Responding with a 204 code and the following data.","timestamp":"2017-12-08T03:49:56.339Z"}
{"level":"info","message":"","timestamp":"2017-12-08T03:49:56.339Z"}
{"level":"info","message":"User deleted goofy from database.","timestamp":"2017-12-08T03:49:56.339Z"}
{"level":"info","message":"Adding an POST url and callback","timestamp":"2017-12-08T03:50:34.647Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T03:50:34.648Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[30]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[31]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T03:50:34.648Z"}
{"level":"info","message":"Adding an GET url and callback","timestamp":"2017-12-08T03:50:34.648Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T03:50:34.648Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[5]++;cov_q0sdvsm27.s[33]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;cov_q0sdvsm27.s[34]++;\n    storage.fetchItem(request.url.query.id).\n    then(mountain => {/* istanbul ignore next */cov_q0sdvsm27.f[6]++;cov_q0sdvsm27.s[35]++;\n      sendJSON(response, 200, mountain);\n    }).\n    catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[7]++;cov_q0sdvsm27.s[36]++;\n      console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[37]++;\n      sendStatus(response, 404, 'id not found');\n    });\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}\n}","timestamp":"2017-12-08T03:50:34.648Z"}
{"level":"info","message":"Adding an DELETE url and callback","timestamp":"2017-12-08T03:50:34.648Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T03:50:34.648Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[8]++;cov_q0sdvsm27.s[39]++;\n  storage.deleteItem(request.url.query.id).\n  then(mountains => {/* istanbul ignore next */cov_q0sdvsm27.f[9]++;cov_q0sdvsm27.s[40]++;\n    sendJSON(response, 204, mountains); /* istanbul ignore next */cov_q0sdvsm27.s[41]++;\n    logger.log('info', `User deleted ${request.url.query.id} from database.`);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[10]++;cov_q0sdvsm27.s[42]++;\n    console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[43]++;\n    sendStatus(response, 400, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[44]++;\n    logger.log('info', `Deletion requested from database, but ${request.url.query.id} not found.`);\n  });\n}","timestamp":"2017-12-08T03:50:34.648Z"}
{"level":"info","message":"Server is online at port 3000","timestamp":"2017-12-08T03:50:34.699Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T03:50:34.748Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:50:34.749Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[30]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[31]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T03:50:34.749Z"}
{"level":"info","message":"Responding with a 200 code and the following data.","timestamp":"2017-12-08T03:50:34.752Z"}
{"id":"f1f76ad0-dbca-11e7-bd81-9f8488785030","name":"Mt. Evans","location":"Colorado","elevation":"14,235","level":"info","message":"","timestamp":"2017-12-08T03:50:34.752Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T03:50:34.762Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:50:34.762Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[5]++;cov_q0sdvsm27.s[33]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;cov_q0sdvsm27.s[34]++;\n    storage.fetchItem(request.url.query.id).\n    then(mountain => {/* istanbul ignore next */cov_q0sdvsm27.f[6]++;cov_q0sdvsm27.s[35]++;\n      sendJSON(response, 200, mountain);\n    }).\n    catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[7]++;cov_q0sdvsm27.s[36]++;\n      console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[37]++;\n      sendStatus(response, 404, 'id not found');\n    });\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}\n}","timestamp":"2017-12-08T03:50:34.762Z"}
{"level":"info","message":"Responding with a 200 code and the following data.","timestamp":"2017-12-08T03:50:34.763Z"}
{"id":"f1f76ad0-dbca-11e7-bd81-9f8488785030","name":"Mt. Evans","location":"Colorado","elevation":"14,235","level":"info","message":"","timestamp":"2017-12-08T03:50:34.763Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T03:50:34.767Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T03:50:34.767Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/lib/request-parser.js:34:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-08T03:50:34.767Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T03:50:34.770Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:50:34.770Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[8]++;cov_q0sdvsm27.s[39]++;\n  storage.deleteItem(request.url.query.id).\n  then(mountains => {/* istanbul ignore next */cov_q0sdvsm27.f[9]++;cov_q0sdvsm27.s[40]++;\n    sendJSON(response, 204, mountains); /* istanbul ignore next */cov_q0sdvsm27.s[41]++;\n    logger.log('info', `User deleted ${request.url.query.id} from database.`);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[10]++;cov_q0sdvsm27.s[42]++;\n    console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[43]++;\n    sendStatus(response, 400, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[44]++;\n    logger.log('info', `Deletion requested from database, but ${request.url.query.id} not found.`);\n  });\n}","timestamp":"2017-12-08T03:50:34.770Z"}
{"level":"info","message":"Responding with a 204 code and the following data.","timestamp":"2017-12-08T03:50:34.771Z"}
{"level":"info","message":"","timestamp":"2017-12-08T03:50:34.771Z"}
{"level":"info","message":"User deleted f1f76ad0-dbca-11e7-bd81-9f8488785030 from database.","timestamp":"2017-12-08T03:50:34.771Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T03:50:34.774Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:50:34.774Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[8]++;cov_q0sdvsm27.s[39]++;\n  storage.deleteItem(request.url.query.id).\n  then(mountains => {/* istanbul ignore next */cov_q0sdvsm27.f[9]++;cov_q0sdvsm27.s[40]++;\n    sendJSON(response, 204, mountains); /* istanbul ignore next */cov_q0sdvsm27.s[41]++;\n    logger.log('info', `User deleted ${request.url.query.id} from database.`);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[10]++;cov_q0sdvsm27.s[42]++;\n    console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[43]++;\n    sendStatus(response, 400, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[44]++;\n    logger.log('info', `Deletion requested from database, but ${request.url.query.id} not found.`);\n  });\n}","timestamp":"2017-12-08T03:50:34.774Z"}
{"level":"info","message":"Responding with a 204 code and the following data.","timestamp":"2017-12-08T03:50:34.775Z"}
{"level":"info","message":"","timestamp":"2017-12-08T03:50:34.775Z"}
{"level":"info","message":"User deleted goofy from database.","timestamp":"2017-12-08T03:50:34.775Z"}
{"level":"info","message":"Adding an POST url and callback","timestamp":"2017-12-08T03:51:36.590Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T03:51:36.591Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[30]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[31]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T03:51:36.591Z"}
{"level":"info","message":"Adding an GET url and callback","timestamp":"2017-12-08T03:51:36.591Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T03:51:36.591Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[5]++;cov_q0sdvsm27.s[33]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;cov_q0sdvsm27.s[34]++;\n    storage.fetchItem(request.url.query.id).\n    then(mountain => {/* istanbul ignore next */cov_q0sdvsm27.f[6]++;cov_q0sdvsm27.s[35]++;\n      sendJSON(response, 200, mountain);\n    }).\n    catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[7]++;cov_q0sdvsm27.s[36]++;\n      console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[37]++;\n      sendStatus(response, 404, 'id not found');\n    });\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}\n}","timestamp":"2017-12-08T03:51:36.591Z"}
{"level":"info","message":"Adding an DELETE url and callback","timestamp":"2017-12-08T03:51:36.591Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T03:51:36.591Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[8]++;cov_q0sdvsm27.s[39]++;\n  storage.deleteItem(request.url.query.id).\n  then(mountains => {/* istanbul ignore next */cov_q0sdvsm27.f[9]++;cov_q0sdvsm27.s[40]++;\n    sendJSON(response, 204, mountains); /* istanbul ignore next */cov_q0sdvsm27.s[41]++;\n    logger.log('info', `User deleted ${request.url.query.id} from database.`);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[10]++;cov_q0sdvsm27.s[42]++;\n    console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[43]++;\n    sendStatus(response, 400, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[44]++;\n    logger.log('info', `Deletion requested from database, but ${request.url.query.id} not found.`);\n  });\n}","timestamp":"2017-12-08T03:51:36.591Z"}
{"level":"info","message":"Server is online at port 3000","timestamp":"2017-12-08T03:51:36.638Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T03:51:36.687Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:51:36.688Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[30]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[31]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T03:51:36.688Z"}
{"level":"info","message":"Responding with a 200 code and the following data.","timestamp":"2017-12-08T03:51:36.691Z"}
{"id":"16e2b610-dbcb-11e7-b75e-71aee77960cc","name":"Mt. Evans","location":"Colorado","elevation":"14,235","level":"info","message":"","timestamp":"2017-12-08T03:51:36.691Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T03:51:36.701Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:51:36.701Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[5]++;cov_q0sdvsm27.s[33]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;cov_q0sdvsm27.s[34]++;\n    storage.fetchItem(request.url.query.id).\n    then(mountain => {/* istanbul ignore next */cov_q0sdvsm27.f[6]++;cov_q0sdvsm27.s[35]++;\n      sendJSON(response, 200, mountain);\n    }).\n    catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[7]++;cov_q0sdvsm27.s[36]++;\n      console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[37]++;\n      sendStatus(response, 404, 'id not found');\n    });\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}\n}","timestamp":"2017-12-08T03:51:36.702Z"}
{"level":"info","message":"Responding with a 200 code and the following data.","timestamp":"2017-12-08T03:51:36.702Z"}
{"id":"16e2b610-dbcb-11e7-b75e-71aee77960cc","name":"Mt. Evans","location":"Colorado","elevation":"14,235","level":"info","message":"","timestamp":"2017-12-08T03:51:36.702Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T03:51:36.705Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T03:51:36.706Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/lib/request-parser.js:34:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-08T03:51:36.706Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T03:51:36.708Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:51:36.709Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[8]++;cov_q0sdvsm27.s[39]++;\n  storage.deleteItem(request.url.query.id).\n  then(mountains => {/* istanbul ignore next */cov_q0sdvsm27.f[9]++;cov_q0sdvsm27.s[40]++;\n    sendJSON(response, 204, mountains); /* istanbul ignore next */cov_q0sdvsm27.s[41]++;\n    logger.log('info', `User deleted ${request.url.query.id} from database.`);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[10]++;cov_q0sdvsm27.s[42]++;\n    console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[43]++;\n    sendStatus(response, 400, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[44]++;\n    logger.log('info', `Deletion requested from database, but ${request.url.query.id} not found.`);\n  });\n}","timestamp":"2017-12-08T03:51:36.709Z"}
{"level":"info","message":"Responding with a 204 code and the following data.","timestamp":"2017-12-08T03:51:36.710Z"}
{"level":"info","message":"","timestamp":"2017-12-08T03:51:36.710Z"}
{"level":"info","message":"User deleted 16e2b610-dbcb-11e7-b75e-71aee77960cc from database.","timestamp":"2017-12-08T03:51:36.710Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T03:51:36.712Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:51:36.713Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[8]++;cov_q0sdvsm27.s[39]++;\n  storage.deleteItem(request.url.query.id).\n  then(mountains => {/* istanbul ignore next */cov_q0sdvsm27.f[9]++;cov_q0sdvsm27.s[40]++;\n    sendJSON(response, 204, mountains); /* istanbul ignore next */cov_q0sdvsm27.s[41]++;\n    logger.log('info', `User deleted ${request.url.query.id} from database.`);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[10]++;cov_q0sdvsm27.s[42]++;\n    console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[43]++;\n    sendStatus(response, 400, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[44]++;\n    logger.log('info', `Deletion requested from database, but ${request.url.query.id} not found.`);\n  });\n}","timestamp":"2017-12-08T03:51:36.713Z"}
{"level":"info","message":"Responding with a 204 code and the following data.","timestamp":"2017-12-08T03:51:36.713Z"}
{"level":"info","message":"","timestamp":"2017-12-08T03:51:36.713Z"}
{"level":"info","message":"User deleted 16e2b610-dbcb-11e7-b75e-71aee77960cc from database.","timestamp":"2017-12-08T03:51:36.713Z"}
{"level":"info","message":"Adding an POST url and callback","timestamp":"2017-12-08T03:52:06.818Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T03:52:06.819Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[30]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[31]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T03:52:06.819Z"}
{"level":"info","message":"Adding an GET url and callback","timestamp":"2017-12-08T03:52:06.819Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T03:52:06.819Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[5]++;cov_q0sdvsm27.s[33]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;cov_q0sdvsm27.s[34]++;\n    storage.fetchItem(request.url.query.id).\n    then(mountain => {/* istanbul ignore next */cov_q0sdvsm27.f[6]++;cov_q0sdvsm27.s[35]++;\n      sendJSON(response, 200, mountain);\n    }).\n    catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[7]++;cov_q0sdvsm27.s[36]++;\n      console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[37]++;\n      sendStatus(response, 404, 'id not found');\n    });\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}\n}","timestamp":"2017-12-08T03:52:06.819Z"}
{"level":"info","message":"Adding an DELETE url and callback","timestamp":"2017-12-08T03:52:06.819Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T03:52:06.819Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[8]++;cov_q0sdvsm27.s[39]++;\n  storage.deleteItem(request.url.query.id).\n  then(mountains => {/* istanbul ignore next */cov_q0sdvsm27.f[9]++;cov_q0sdvsm27.s[40]++;\n    sendJSON(response, 204, mountains); /* istanbul ignore next */cov_q0sdvsm27.s[41]++;\n    logger.log('info', `User deleted ${request.url.query.id} from database.`);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[10]++;cov_q0sdvsm27.s[42]++;\n    console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[43]++;\n    sendStatus(response, 400, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[44]++;\n    logger.log('info', `Deletion requested from database, but ${request.url.query.id} not found.`);\n  });\n}","timestamp":"2017-12-08T03:52:06.819Z"}
{"level":"info","message":"Server is online at port 3000","timestamp":"2017-12-08T03:52:06.867Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T03:52:06.917Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:52:06.918Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[30]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[31]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T03:52:06.919Z"}
{"level":"info","message":"Responding with a 200 code and the following data.","timestamp":"2017-12-08T03:52:06.922Z"}
{"id":"28e77170-dbcb-11e7-a7e6-2712b259a027","name":"Mt. Evans","location":"Colorado","elevation":"14,235","level":"info","message":"","timestamp":"2017-12-08T03:52:06.922Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T03:52:06.931Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:52:06.931Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[5]++;cov_q0sdvsm27.s[33]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;cov_q0sdvsm27.s[34]++;\n    storage.fetchItem(request.url.query.id).\n    then(mountain => {/* istanbul ignore next */cov_q0sdvsm27.f[6]++;cov_q0sdvsm27.s[35]++;\n      sendJSON(response, 200, mountain);\n    }).\n    catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[7]++;cov_q0sdvsm27.s[36]++;\n      console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[37]++;\n      sendStatus(response, 404, 'id not found');\n    });\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}\n}","timestamp":"2017-12-08T03:52:06.931Z"}
{"level":"info","message":"Responding with a 200 code and the following data.","timestamp":"2017-12-08T03:52:06.932Z"}
{"id":"28e77170-dbcb-11e7-a7e6-2712b259a027","name":"Mt. Evans","location":"Colorado","elevation":"14,235","level":"info","message":"","timestamp":"2017-12-08T03:52:06.932Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T03:52:06.936Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T03:52:06.936Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/lib/request-parser.js:34:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-08T03:52:06.936Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T03:52:06.939Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:52:06.939Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[8]++;cov_q0sdvsm27.s[39]++;\n  storage.deleteItem(request.url.query.id).\n  then(mountains => {/* istanbul ignore next */cov_q0sdvsm27.f[9]++;cov_q0sdvsm27.s[40]++;\n    sendJSON(response, 204, mountains); /* istanbul ignore next */cov_q0sdvsm27.s[41]++;\n    logger.log('info', `User deleted ${request.url.query.id} from database.`);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[10]++;cov_q0sdvsm27.s[42]++;\n    console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[43]++;\n    sendStatus(response, 400, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[44]++;\n    logger.log('info', `Deletion requested from database, but ${request.url.query.id} not found.`);\n  });\n}","timestamp":"2017-12-08T03:52:06.939Z"}
{"level":"info","message":"Responding with a 204 code and the following data.","timestamp":"2017-12-08T03:52:06.940Z"}
{"level":"info","message":"","timestamp":"2017-12-08T03:52:06.940Z"}
{"level":"info","message":"User deleted 28e77170-dbcb-11e7-a7e6-2712b259a027 from database.","timestamp":"2017-12-08T03:52:06.940Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T03:52:06.943Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:52:06.943Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[8]++;cov_q0sdvsm27.s[39]++;\n  storage.deleteItem(request.url.query.id).\n  then(mountains => {/* istanbul ignore next */cov_q0sdvsm27.f[9]++;cov_q0sdvsm27.s[40]++;\n    sendJSON(response, 204, mountains); /* istanbul ignore next */cov_q0sdvsm27.s[41]++;\n    logger.log('info', `User deleted ${request.url.query.id} from database.`);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[10]++;cov_q0sdvsm27.s[42]++;\n    console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[43]++;\n    sendStatus(response, 400, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[44]++;\n    logger.log('info', `Deletion requested from database, but ${request.url.query.id} not found.`);\n  });\n}","timestamp":"2017-12-08T03:52:06.943Z"}
{"level":"info","message":"Responding with a 204 code and the following data.","timestamp":"2017-12-08T03:52:06.944Z"}
{"level":"info","message":"","timestamp":"2017-12-08T03:52:06.944Z"}
{"level":"info","message":"User deleted $ from database.","timestamp":"2017-12-08T03:52:06.944Z"}
{"level":"info","message":"Adding an POST url and callback","timestamp":"2017-12-08T03:52:17.726Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T03:52:17.727Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[30]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[31]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T03:52:17.727Z"}
{"level":"info","message":"Adding an GET url and callback","timestamp":"2017-12-08T03:52:17.727Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T03:52:17.727Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[5]++;cov_q0sdvsm27.s[33]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;cov_q0sdvsm27.s[34]++;\n    storage.fetchItem(request.url.query.id).\n    then(mountain => {/* istanbul ignore next */cov_q0sdvsm27.f[6]++;cov_q0sdvsm27.s[35]++;\n      sendJSON(response, 200, mountain);\n    }).\n    catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[7]++;cov_q0sdvsm27.s[36]++;\n      console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[37]++;\n      sendStatus(response, 404, 'id not found');\n    });\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}\n}","timestamp":"2017-12-08T03:52:17.727Z"}
{"level":"info","message":"Adding an DELETE url and callback","timestamp":"2017-12-08T03:52:17.727Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T03:52:17.727Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[8]++;cov_q0sdvsm27.s[39]++;\n  storage.deleteItem(request.url.query.id).\n  then(mountains => {/* istanbul ignore next */cov_q0sdvsm27.f[9]++;cov_q0sdvsm27.s[40]++;\n    sendJSON(response, 204, mountains); /* istanbul ignore next */cov_q0sdvsm27.s[41]++;\n    logger.log('info', `User deleted ${request.url.query.id} from database.`);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[10]++;cov_q0sdvsm27.s[42]++;\n    console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[43]++;\n    sendStatus(response, 400, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[44]++;\n    logger.log('info', `Deletion requested from database, but ${request.url.query.id} not found.`);\n  });\n}","timestamp":"2017-12-08T03:52:17.727Z"}
{"level":"info","message":"Server is online at port 3000","timestamp":"2017-12-08T03:52:17.775Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T03:52:17.823Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:52:17.824Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[30]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[31]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T03:52:17.824Z"}
{"level":"info","message":"Responding with a 200 code and the following data.","timestamp":"2017-12-08T03:52:17.828Z"}
{"id":"2f679110-dbcb-11e7-a086-dfbeae6d4479","name":"Mt. Evans","location":"Colorado","elevation":"14,235","level":"info","message":"","timestamp":"2017-12-08T03:52:17.828Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T03:52:17.838Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:52:17.838Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[5]++;cov_q0sdvsm27.s[33]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;cov_q0sdvsm27.s[34]++;\n    storage.fetchItem(request.url.query.id).\n    then(mountain => {/* istanbul ignore next */cov_q0sdvsm27.f[6]++;cov_q0sdvsm27.s[35]++;\n      sendJSON(response, 200, mountain);\n    }).\n    catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[7]++;cov_q0sdvsm27.s[36]++;\n      console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[37]++;\n      sendStatus(response, 404, 'id not found');\n    });\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}\n}","timestamp":"2017-12-08T03:52:17.838Z"}
{"level":"info","message":"Responding with a 200 code and the following data.","timestamp":"2017-12-08T03:52:17.839Z"}
{"id":"2f679110-dbcb-11e7-a086-dfbeae6d4479","name":"Mt. Evans","location":"Colorado","elevation":"14,235","level":"info","message":"","timestamp":"2017-12-08T03:52:17.839Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T03:52:17.843Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T03:52:17.843Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/lib/request-parser.js:34:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-08T03:52:17.843Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T03:52:17.846Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:52:17.846Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[8]++;cov_q0sdvsm27.s[39]++;\n  storage.deleteItem(request.url.query.id).\n  then(mountains => {/* istanbul ignore next */cov_q0sdvsm27.f[9]++;cov_q0sdvsm27.s[40]++;\n    sendJSON(response, 204, mountains); /* istanbul ignore next */cov_q0sdvsm27.s[41]++;\n    logger.log('info', `User deleted ${request.url.query.id} from database.`);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[10]++;cov_q0sdvsm27.s[42]++;\n    console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[43]++;\n    sendStatus(response, 400, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[44]++;\n    logger.log('info', `Deletion requested from database, but ${request.url.query.id} not found.`);\n  });\n}","timestamp":"2017-12-08T03:52:17.846Z"}
{"level":"info","message":"Responding with a 204 code and the following data.","timestamp":"2017-12-08T03:52:17.847Z"}
{"level":"info","message":"","timestamp":"2017-12-08T03:52:17.847Z"}
{"level":"info","message":"User deleted 2f679110-dbcb-11e7-a086-dfbeae6d4479 from database.","timestamp":"2017-12-08T03:52:17.848Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T03:52:17.850Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:52:17.850Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[8]++;cov_q0sdvsm27.s[39]++;\n  storage.deleteItem(request.url.query.id).\n  then(mountains => {/* istanbul ignore next */cov_q0sdvsm27.f[9]++;cov_q0sdvsm27.s[40]++;\n    sendJSON(response, 204, mountains); /* istanbul ignore next */cov_q0sdvsm27.s[41]++;\n    logger.log('info', `User deleted ${request.url.query.id} from database.`);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[10]++;cov_q0sdvsm27.s[42]++;\n    console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[43]++;\n    sendStatus(response, 400, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[44]++;\n    logger.log('info', `Deletion requested from database, but ${request.url.query.id} not found.`);\n  });\n}","timestamp":"2017-12-08T03:52:17.850Z"}
{"level":"info","message":"Responding with a 204 code and the following data.","timestamp":"2017-12-08T03:52:17.851Z"}
{"level":"info","message":"","timestamp":"2017-12-08T03:52:17.851Z"}
{"level":"info","message":"User deleted 234234234 from database.","timestamp":"2017-12-08T03:52:17.851Z"}
{"level":"info","message":"Adding an POST url and callback","timestamp":"2017-12-08T03:52:26.876Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T03:52:26.877Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[30]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[31]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T03:52:26.877Z"}
{"level":"info","message":"Adding an GET url and callback","timestamp":"2017-12-08T03:52:26.877Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T03:52:26.877Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[5]++;cov_q0sdvsm27.s[33]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;cov_q0sdvsm27.s[34]++;\n    storage.fetchItem(request.url.query.id).\n    then(mountain => {/* istanbul ignore next */cov_q0sdvsm27.f[6]++;cov_q0sdvsm27.s[35]++;\n      sendJSON(response, 200, mountain);\n    }).\n    catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[7]++;cov_q0sdvsm27.s[36]++;\n      console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[37]++;\n      sendStatus(response, 404, 'id not found');\n    });\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}\n}","timestamp":"2017-12-08T03:52:26.877Z"}
{"level":"info","message":"Adding an DELETE url and callback","timestamp":"2017-12-08T03:52:26.877Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T03:52:26.877Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[8]++;cov_q0sdvsm27.s[39]++;\n  storage.deleteItem(request.url.query.id).\n  then(mountains => {/* istanbul ignore next */cov_q0sdvsm27.f[9]++;cov_q0sdvsm27.s[40]++;\n    sendJSON(response, 204, mountains); /* istanbul ignore next */cov_q0sdvsm27.s[41]++;\n    logger.log('info', `User deleted ${request.url.query.id} from database.`);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[10]++;cov_q0sdvsm27.s[42]++;\n    console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[43]++;\n    sendStatus(response, 400, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[44]++;\n    logger.log('info', `Deletion requested from database, but ${request.url.query.id} not found.`);\n  });\n}","timestamp":"2017-12-08T03:52:26.877Z"}
{"level":"info","message":"Server is online at port 3000","timestamp":"2017-12-08T03:52:26.924Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T03:52:26.973Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:52:26.974Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[30]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[31]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T03:52:26.975Z"}
{"level":"info","message":"Responding with a 200 code and the following data.","timestamp":"2017-12-08T03:52:26.978Z"}
{"id":"34dbbef0-dbcb-11e7-9693-8510793dfa06","name":"Mt. Evans","location":"Colorado","elevation":"14,235","level":"info","message":"","timestamp":"2017-12-08T03:52:26.978Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T03:52:26.988Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:52:26.989Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[5]++;cov_q0sdvsm27.s[33]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;cov_q0sdvsm27.s[34]++;\n    storage.fetchItem(request.url.query.id).\n    then(mountain => {/* istanbul ignore next */cov_q0sdvsm27.f[6]++;cov_q0sdvsm27.s[35]++;\n      sendJSON(response, 200, mountain);\n    }).\n    catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[7]++;cov_q0sdvsm27.s[36]++;\n      console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[37]++;\n      sendStatus(response, 404, 'id not found');\n    });\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}\n}","timestamp":"2017-12-08T03:52:26.989Z"}
{"level":"info","message":"Responding with a 200 code and the following data.","timestamp":"2017-12-08T03:52:26.990Z"}
{"id":"34dbbef0-dbcb-11e7-9693-8510793dfa06","name":"Mt. Evans","location":"Colorado","elevation":"14,235","level":"info","message":"","timestamp":"2017-12-08T03:52:26.990Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T03:52:26.993Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T03:52:26.994Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/lib/request-parser.js:34:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-08T03:52:26.994Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T03:52:26.996Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:52:26.996Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[8]++;cov_q0sdvsm27.s[39]++;\n  storage.deleteItem(request.url.query.id).\n  then(mountains => {/* istanbul ignore next */cov_q0sdvsm27.f[9]++;cov_q0sdvsm27.s[40]++;\n    sendJSON(response, 204, mountains); /* istanbul ignore next */cov_q0sdvsm27.s[41]++;\n    logger.log('info', `User deleted ${request.url.query.id} from database.`);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[10]++;cov_q0sdvsm27.s[42]++;\n    console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[43]++;\n    sendStatus(response, 400, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[44]++;\n    logger.log('info', `Deletion requested from database, but ${request.url.query.id} not found.`);\n  });\n}","timestamp":"2017-12-08T03:52:26.996Z"}
{"level":"info","message":"Responding with a 204 code and the following data.","timestamp":"2017-12-08T03:52:26.997Z"}
{"level":"info","message":"","timestamp":"2017-12-08T03:52:26.997Z"}
{"level":"info","message":"User deleted 34dbbef0-dbcb-11e7-9693-8510793dfa06 from database.","timestamp":"2017-12-08T03:52:26.998Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T03:52:27.000Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:52:27.000Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[8]++;cov_q0sdvsm27.s[39]++;\n  storage.deleteItem(request.url.query.id).\n  then(mountains => {/* istanbul ignore next */cov_q0sdvsm27.f[9]++;cov_q0sdvsm27.s[40]++;\n    sendJSON(response, 204, mountains); /* istanbul ignore next */cov_q0sdvsm27.s[41]++;\n    logger.log('info', `User deleted ${request.url.query.id} from database.`);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[10]++;cov_q0sdvsm27.s[42]++;\n    console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[43]++;\n    sendStatus(response, 400, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[44]++;\n    logger.log('info', `Deletion requested from database, but ${request.url.query.id} not found.`);\n  });\n}","timestamp":"2017-12-08T03:52:27.000Z"}
{"level":"info","message":"Responding with a 204 code and the following data.","timestamp":"2017-12-08T03:52:27.001Z"}
{"level":"info","message":"","timestamp":"2017-12-08T03:52:27.001Z"}
{"level":"info","message":"User deleted 234234234 from database.","timestamp":"2017-12-08T03:52:27.001Z"}
{"level":"info","message":"Adding an POST url and callback","timestamp":"2017-12-08T05:37:07.110Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T05:37:07.111Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[30]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[31]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T05:37:07.111Z"}
{"level":"info","message":"Adding an GET url and callback","timestamp":"2017-12-08T05:37:07.111Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T05:37:07.111Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[5]++;cov_q0sdvsm27.s[33]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;cov_q0sdvsm27.s[34]++;\n    storage.fetchItem(request.url.query.id).\n    then(mountain => {/* istanbul ignore next */cov_q0sdvsm27.f[6]++;cov_q0sdvsm27.s[35]++;\n      sendJSON(response, 200, mountain);\n    }).\n    catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[7]++;cov_q0sdvsm27.s[36]++;\n      console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[37]++;\n      sendStatus(response, 404, 'id not found');\n    });\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}\n}","timestamp":"2017-12-08T05:37:07.111Z"}
{"level":"info","message":"Adding an DELETE url and callback","timestamp":"2017-12-08T05:37:07.111Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T05:37:07.111Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[8]++;cov_q0sdvsm27.s[39]++;\n  storage.deleteItem(request.url.query.id).\n  then(mountains => {/* istanbul ignore next */cov_q0sdvsm27.f[9]++;cov_q0sdvsm27.s[40]++;\n    sendJSON(response, 204, mountains); /* istanbul ignore next */cov_q0sdvsm27.s[41]++;\n    logger.log('info', `User deleted ${request.url.query.id} from database.`);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[10]++;cov_q0sdvsm27.s[42]++;\n    console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[43]++;\n    sendStatus(response, 400, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[44]++;\n    logger.log('info', `Deletion requested from database, but ${request.url.query.id} not found.`);\n  });\n}","timestamp":"2017-12-08T05:37:07.111Z"}
{"level":"info","message":"Server is online at port 3000","timestamp":"2017-12-08T05:37:07.175Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T05:37:07.229Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T05:37:07.230Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[30]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[31]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T05:37:07.230Z"}
{"level":"info","message":"Responding with a 200 code and the following data.","timestamp":"2017-12-08T05:37:07.234Z"}
{"id":"d42ec2f0-dbd9-11e7-a7af-59bcca4b159e","name":"Mt. Evans","location":"Colorado","elevation":"14,235","level":"info","message":"","timestamp":"2017-12-08T05:37:07.234Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T05:37:07.243Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T05:37:07.243Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[5]++;cov_q0sdvsm27.s[33]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;cov_q0sdvsm27.s[34]++;\n    storage.fetchItem(request.url.query.id).\n    then(mountain => {/* istanbul ignore next */cov_q0sdvsm27.f[6]++;cov_q0sdvsm27.s[35]++;\n      sendJSON(response, 200, mountain);\n    }).\n    catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[7]++;cov_q0sdvsm27.s[36]++;\n      console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[37]++;\n      sendStatus(response, 404, 'id not found');\n    });\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}\n}","timestamp":"2017-12-08T05:37:07.243Z"}
{"level":"info","message":"Responding with a 200 code and the following data.","timestamp":"2017-12-08T05:37:07.244Z"}
{"id":"d42ec2f0-dbd9-11e7-a7af-59bcca4b159e","name":"Mt. Evans","location":"Colorado","elevation":"14,235","level":"info","message":"","timestamp":"2017-12-08T05:37:07.244Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T05:37:07.247Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T05:37:07.247Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/lib/request-parser.js:34:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-08T05:37:07.247Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T05:37:07.249Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T05:37:07.249Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[8]++;cov_q0sdvsm27.s[39]++;\n  storage.deleteItem(request.url.query.id).\n  then(mountains => {/* istanbul ignore next */cov_q0sdvsm27.f[9]++;cov_q0sdvsm27.s[40]++;\n    sendJSON(response, 204, mountains); /* istanbul ignore next */cov_q0sdvsm27.s[41]++;\n    logger.log('info', `User deleted ${request.url.query.id} from database.`);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[10]++;cov_q0sdvsm27.s[42]++;\n    console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[43]++;\n    sendStatus(response, 400, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[44]++;\n    logger.log('info', `Deletion requested from database, but ${request.url.query.id} not found.`);\n  });\n}","timestamp":"2017-12-08T05:37:07.249Z"}
{"level":"info","message":"Responding with a 204 code and the following data.","timestamp":"2017-12-08T05:37:07.250Z"}
{"level":"info","message":"","timestamp":"2017-12-08T05:37:07.250Z"}
{"level":"info","message":"User deleted d42ec2f0-dbd9-11e7-a7af-59bcca4b159e from database.","timestamp":"2017-12-08T05:37:07.251Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T05:37:07.253Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T05:37:07.253Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[8]++;cov_q0sdvsm27.s[39]++;\n  storage.deleteItem(request.url.query.id).\n  then(mountains => {/* istanbul ignore next */cov_q0sdvsm27.f[9]++;cov_q0sdvsm27.s[40]++;\n    sendJSON(response, 204, mountains); /* istanbul ignore next */cov_q0sdvsm27.s[41]++;\n    logger.log('info', `User deleted ${request.url.query.id} from database.`);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[10]++;cov_q0sdvsm27.s[42]++;\n    console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[43]++;\n    sendStatus(response, 400, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[44]++;\n    logger.log('info', `Deletion requested from database, but ${request.url.query.id} not found.`);\n  });\n}","timestamp":"2017-12-08T05:37:07.253Z"}
{"level":"info","message":"Responding with a 204 code and the following data.","timestamp":"2017-12-08T05:37:07.253Z"}
{"level":"info","message":"","timestamp":"2017-12-08T05:37:07.253Z"}
{"level":"info","message":"User deleted 234234234 from database.","timestamp":"2017-12-08T05:37:07.254Z"}
{"level":"info","message":"Adding an POST url and callback","timestamp":"2017-12-08T05:43:57.479Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T05:43:57.480Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[30]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[31]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T05:43:57.480Z"}
{"level":"info","message":"Adding an GET url and callback","timestamp":"2017-12-08T05:43:57.480Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T05:43:57.480Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[5]++;cov_q0sdvsm27.s[33]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;cov_q0sdvsm27.s[34]++;\n    storage.fetchItem(request.url.query.id).\n    then(mountain => {/* istanbul ignore next */cov_q0sdvsm27.f[6]++;cov_q0sdvsm27.s[35]++;\n      sendJSON(response, 200, mountain);\n    }).\n    catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[7]++;cov_q0sdvsm27.s[36]++;\n      console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[37]++;\n      sendStatus(response, 404, 'id not found');\n    });\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}\n}","timestamp":"2017-12-08T05:43:57.480Z"}
{"level":"info","message":"Adding an DELETE url and callback","timestamp":"2017-12-08T05:43:57.480Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T05:43:57.480Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[8]++;cov_q0sdvsm27.s[39]++;\n  storage.deleteItem(request.url.query.id).\n  then(mountains => {/* istanbul ignore next */cov_q0sdvsm27.f[9]++;cov_q0sdvsm27.s[40]++;\n    sendJSON(response, 204, mountains); /* istanbul ignore next */cov_q0sdvsm27.s[41]++;\n    logger.log('info', `User deleted ${request.url.query.id} from database.`);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[10]++;cov_q0sdvsm27.s[42]++;\n    console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[43]++;\n    sendStatus(response, 400, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[44]++;\n    logger.log('info', `Deletion requested from database, but ${request.url.query.id} not found.`);\n  });\n}","timestamp":"2017-12-08T05:43:57.480Z"}
{"level":"info","message":"Server is online at port 3000","timestamp":"2017-12-08T05:43:57.543Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T05:43:57.594Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T05:43:57.596Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[30]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[31]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T05:43:57.596Z"}
{"level":"info","message":"Responding with a 200 code and the following data.","timestamp":"2017-12-08T05:43:57.599Z"}
{"id":"c8c77dc0-dbda-11e7-a5f6-d1d124cfb686","name":"Mt. Evans","location":"Colorado","elevation":"14,235","level":"info","message":"","timestamp":"2017-12-08T05:43:57.599Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T05:43:57.608Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T05:43:57.608Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[5]++;cov_q0sdvsm27.s[33]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;cov_q0sdvsm27.s[34]++;\n    storage.fetchItem(request.url.query.id).\n    then(mountain => {/* istanbul ignore next */cov_q0sdvsm27.f[6]++;cov_q0sdvsm27.s[35]++;\n      sendJSON(response, 200, mountain);\n    }).\n    catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[7]++;cov_q0sdvsm27.s[36]++;\n      console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[37]++;\n      sendStatus(response, 404, 'id not found');\n    });\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}\n}","timestamp":"2017-12-08T05:43:57.608Z"}
{"level":"info","message":"Responding with a 200 code and the following data.","timestamp":"2017-12-08T05:43:57.609Z"}
{"id":"c8c77dc0-dbda-11e7-a5f6-d1d124cfb686","name":"Mt. Evans","location":"Colorado","elevation":"14,235","level":"info","message":"","timestamp":"2017-12-08T05:43:57.609Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T05:43:57.613Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T05:43:57.613Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/lib/request-parser.js:34:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-08T05:43:57.613Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T05:43:57.616Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T05:43:57.616Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[8]++;cov_q0sdvsm27.s[39]++;\n  storage.deleteItem(request.url.query.id).\n  then(mountains => {/* istanbul ignore next */cov_q0sdvsm27.f[9]++;cov_q0sdvsm27.s[40]++;\n    sendJSON(response, 204, mountains); /* istanbul ignore next */cov_q0sdvsm27.s[41]++;\n    logger.log('info', `User deleted ${request.url.query.id} from database.`);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[10]++;cov_q0sdvsm27.s[42]++;\n    console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[43]++;\n    sendStatus(response, 400, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[44]++;\n    logger.log('info', `Deletion requested from database, but ${request.url.query.id} not found.`);\n  });\n}","timestamp":"2017-12-08T05:43:57.616Z"}
{"level":"info","message":"Responding with a 204 code and the following data.","timestamp":"2017-12-08T05:43:57.617Z"}
{"level":"info","message":"","timestamp":"2017-12-08T05:43:57.617Z"}
{"level":"info","message":"User deleted c8c77dc0-dbda-11e7-a5f6-d1d124cfb686 from database.","timestamp":"2017-12-08T05:43:57.618Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T05:43:57.620Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T05:43:57.620Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[8]++;cov_q0sdvsm27.s[39]++;\n  storage.deleteItem(request.url.query.id).\n  then(mountains => {/* istanbul ignore next */cov_q0sdvsm27.f[9]++;cov_q0sdvsm27.s[40]++;\n    sendJSON(response, 204, mountains); /* istanbul ignore next */cov_q0sdvsm27.s[41]++;\n    logger.log('info', `User deleted ${request.url.query.id} from database.`);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[10]++;cov_q0sdvsm27.s[42]++;\n    console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[43]++;\n    sendStatus(response, 400, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[44]++;\n    logger.log('info', `Deletion requested from database, but ${request.url.query.id} not found.`);\n  });\n}","timestamp":"2017-12-08T05:43:57.620Z"}
{"level":"info","message":"Responding with a 204 code and the following data.","timestamp":"2017-12-08T05:43:57.621Z"}
{"level":"info","message":"","timestamp":"2017-12-08T05:43:57.621Z"}
{"level":"info","message":"User deleted undefined from database.","timestamp":"2017-12-08T05:43:57.621Z"}
{"level":"info","message":"Adding an POST url and callback","timestamp":"2017-12-08T05:44:55.724Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T05:44:55.724Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[30]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[31]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T05:44:55.724Z"}
{"level":"info","message":"Adding an GET url and callback","timestamp":"2017-12-08T05:44:55.724Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T05:44:55.725Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[5]++;cov_q0sdvsm27.s[33]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;cov_q0sdvsm27.s[34]++;\n    storage.fetchItem(request.url.query.id).\n    then(mountain => {/* istanbul ignore next */cov_q0sdvsm27.f[6]++;cov_q0sdvsm27.s[35]++;\n      sendJSON(response, 200, mountain);\n    }).\n    catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[7]++;cov_q0sdvsm27.s[36]++;\n      console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[37]++;\n      sendStatus(response, 404, 'id not found');\n    });\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}\n}","timestamp":"2017-12-08T05:44:55.725Z"}
{"level":"info","message":"Adding an DELETE url and callback","timestamp":"2017-12-08T05:44:55.725Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T05:44:55.725Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[8]++;cov_q0sdvsm27.s[39]++;\n  storage.deleteItem(request.url.query.id).\n  then(mountains => {/* istanbul ignore next */cov_q0sdvsm27.f[9]++;cov_q0sdvsm27.s[40]++;\n    sendJSON(response, 204, mountains); /* istanbul ignore next */cov_q0sdvsm27.s[41]++;\n    logger.log('info', `User deleted ${request.url.query.id} from database.`);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[10]++;cov_q0sdvsm27.s[42]++;\n    console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[43]++;\n    sendStatus(response, 400, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[44]++;\n    logger.log('info', `Deletion requested from database, but ${request.url.query.id} not found.`);\n  });\n}","timestamp":"2017-12-08T05:44:55.725Z"}
{"level":"info","message":"Server is online at port 3000","timestamp":"2017-12-08T05:44:55.793Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T05:44:55.846Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T05:44:55.848Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[30]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[31]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T05:44:55.848Z"}
{"level":"info","message":"Responding with a 200 code and the following data.","timestamp":"2017-12-08T05:44:55.851Z"}
{"id":"eb800a80-dbda-11e7-81ca-a33fe74c38f8","name":"Mt. Evans","location":"Colorado","elevation":"14,235","level":"info","message":"","timestamp":"2017-12-08T05:44:55.851Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T05:44:55.860Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T05:44:55.860Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[5]++;cov_q0sdvsm27.s[33]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;cov_q0sdvsm27.s[34]++;\n    storage.fetchItem(request.url.query.id).\n    then(mountain => {/* istanbul ignore next */cov_q0sdvsm27.f[6]++;cov_q0sdvsm27.s[35]++;\n      sendJSON(response, 200, mountain);\n    }).\n    catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[7]++;cov_q0sdvsm27.s[36]++;\n      console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[37]++;\n      sendStatus(response, 404, 'id not found');\n    });\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}\n}","timestamp":"2017-12-08T05:44:55.860Z"}
{"level":"info","message":"Responding with a 200 code and the following data.","timestamp":"2017-12-08T05:44:55.861Z"}
{"id":"eb800a80-dbda-11e7-81ca-a33fe74c38f8","name":"Mt. Evans","location":"Colorado","elevation":"14,235","level":"info","message":"","timestamp":"2017-12-08T05:44:55.861Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T05:44:55.864Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T05:44:55.865Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/lib/request-parser.js:34:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-08T05:44:55.865Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T05:44:55.868Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T05:44:55.868Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[8]++;cov_q0sdvsm27.s[39]++;\n  storage.deleteItem(request.url.query.id).\n  then(mountains => {/* istanbul ignore next */cov_q0sdvsm27.f[9]++;cov_q0sdvsm27.s[40]++;\n    sendJSON(response, 204, mountains); /* istanbul ignore next */cov_q0sdvsm27.s[41]++;\n    logger.log('info', `User deleted ${request.url.query.id} from database.`);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[10]++;cov_q0sdvsm27.s[42]++;\n    console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[43]++;\n    sendStatus(response, 400, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[44]++;\n    logger.log('info', `Deletion requested from database, but ${request.url.query.id} not found.`);\n  });\n}","timestamp":"2017-12-08T05:44:55.868Z"}
{"level":"info","message":"Responding with a 204 code and the following data.","timestamp":"2017-12-08T05:44:55.869Z"}
{"level":"info","message":"","timestamp":"2017-12-08T05:44:55.869Z"}
{"level":"info","message":"User deleted eb800a80-dbda-11e7-81ca-a33fe74c38f8 from database.","timestamp":"2017-12-08T05:44:55.869Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T05:44:55.872Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T05:44:55.872Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[8]++;cov_q0sdvsm27.s[39]++;\n  storage.deleteItem(request.url.query.id).\n  then(mountains => {/* istanbul ignore next */cov_q0sdvsm27.f[9]++;cov_q0sdvsm27.s[40]++;\n    sendJSON(response, 204, mountains); /* istanbul ignore next */cov_q0sdvsm27.s[41]++;\n    logger.log('info', `User deleted ${request.url.query.id} from database.`);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[10]++;cov_q0sdvsm27.s[42]++;\n    console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[43]++;\n    sendStatus(response, 400, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[44]++;\n    logger.log('info', `Deletion requested from database, but ${request.url.query.id} not found.`);\n  });\n}","timestamp":"2017-12-08T05:44:55.872Z"}
{"level":"info","message":"Responding with a 204 code and the following data.","timestamp":"2017-12-08T05:44:55.873Z"}
{"level":"info","message":"","timestamp":"2017-12-08T05:44:55.873Z"}
{"level":"info","message":"User deleted undefined from database.","timestamp":"2017-12-08T05:44:55.873Z"}
{"level":"info","message":"Adding an POST url and callback","timestamp":"2017-12-08T05:45:16.502Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T05:45:16.503Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[30]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[31]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T05:45:16.503Z"}
{"level":"info","message":"Adding an GET url and callback","timestamp":"2017-12-08T05:45:16.503Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T05:45:16.503Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[5]++;cov_q0sdvsm27.s[33]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;cov_q0sdvsm27.s[34]++;\n    storage.fetchItem(request.url.query.id).\n    then(mountain => {/* istanbul ignore next */cov_q0sdvsm27.f[6]++;cov_q0sdvsm27.s[35]++;\n      sendJSON(response, 200, mountain);\n    }).\n    catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[7]++;cov_q0sdvsm27.s[36]++;\n      console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[37]++;\n      sendStatus(response, 404, 'id not found');\n    });\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}\n}","timestamp":"2017-12-08T05:45:16.503Z"}
{"level":"info","message":"Adding an DELETE url and callback","timestamp":"2017-12-08T05:45:16.503Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T05:45:16.503Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[8]++;cov_q0sdvsm27.s[39]++;\n  storage.deleteItem(request.url.query.id).\n  then(mountains => {/* istanbul ignore next */cov_q0sdvsm27.f[9]++;cov_q0sdvsm27.s[40]++;\n    sendJSON(response, 204, mountains); /* istanbul ignore next */cov_q0sdvsm27.s[41]++;\n    logger.log('info', `User deleted ${request.url.query.id} from database.`);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[10]++;cov_q0sdvsm27.s[42]++;\n    console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[43]++;\n    sendStatus(response, 400, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[44]++;\n    logger.log('info', `Deletion requested from database, but ${request.url.query.id} not found.`);\n  });\n}","timestamp":"2017-12-08T05:45:16.503Z"}
{"level":"info","message":"Server is online at port 3000","timestamp":"2017-12-08T05:45:16.572Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T05:45:16.626Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T05:45:16.627Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[30]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[31]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T05:45:16.627Z"}
{"level":"info","message":"Responding with a 200 code and the following data.","timestamp":"2017-12-08T05:45:16.630Z"}
{"id":"f7e2d140-dbda-11e7-b43b-eba5d0c42142","name":"Mt. Evans","location":"Colorado","elevation":"14,235","level":"info","message":"","timestamp":"2017-12-08T05:45:16.631Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T05:45:16.640Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T05:45:16.641Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[5]++;cov_q0sdvsm27.s[33]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;cov_q0sdvsm27.s[34]++;\n    storage.fetchItem(request.url.query.id).\n    then(mountain => {/* istanbul ignore next */cov_q0sdvsm27.f[6]++;cov_q0sdvsm27.s[35]++;\n      sendJSON(response, 200, mountain);\n    }).\n    catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[7]++;cov_q0sdvsm27.s[36]++;\n      console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[37]++;\n      sendStatus(response, 404, 'id not found');\n    });\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}\n}","timestamp":"2017-12-08T05:45:16.641Z"}
{"level":"info","message":"Responding with a 200 code and the following data.","timestamp":"2017-12-08T05:45:16.642Z"}
{"id":"f7e2d140-dbda-11e7-b43b-eba5d0c42142","name":"Mt. Evans","location":"Colorado","elevation":"14,235","level":"info","message":"","timestamp":"2017-12-08T05:45:16.642Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T05:45:16.645Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T05:45:16.645Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/lib/request-parser.js:34:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-08T05:45:16.645Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T05:45:16.648Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T05:45:16.648Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[8]++;cov_q0sdvsm27.s[39]++;\n  storage.deleteItem(request.url.query.id).\n  then(mountains => {/* istanbul ignore next */cov_q0sdvsm27.f[9]++;cov_q0sdvsm27.s[40]++;\n    sendJSON(response, 204, mountains); /* istanbul ignore next */cov_q0sdvsm27.s[41]++;\n    logger.log('info', `User deleted ${request.url.query.id} from database.`);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[10]++;cov_q0sdvsm27.s[42]++;\n    console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[43]++;\n    sendStatus(response, 400, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[44]++;\n    logger.log('info', `Deletion requested from database, but ${request.url.query.id} not found.`);\n  });\n}","timestamp":"2017-12-08T05:45:16.648Z"}
{"level":"info","message":"Responding with a 204 code and the following data.","timestamp":"2017-12-08T05:45:16.650Z"}
{"level":"info","message":"","timestamp":"2017-12-08T05:45:16.650Z"}
{"level":"info","message":"User deleted f7e2d140-dbda-11e7-b43b-eba5d0c42142 from database.","timestamp":"2017-12-08T05:45:16.650Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T05:45:16.652Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T05:45:16.652Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[8]++;cov_q0sdvsm27.s[39]++;\n  storage.deleteItem(request.url.query.id).\n  then(mountains => {/* istanbul ignore next */cov_q0sdvsm27.f[9]++;cov_q0sdvsm27.s[40]++;\n    sendJSON(response, 204, mountains); /* istanbul ignore next */cov_q0sdvsm27.s[41]++;\n    logger.log('info', `User deleted ${request.url.query.id} from database.`);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[10]++;cov_q0sdvsm27.s[42]++;\n    console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[43]++;\n    sendStatus(response, 400, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[44]++;\n    logger.log('info', `Deletion requested from database, but ${request.url.query.id} not found.`);\n  });\n}","timestamp":"2017-12-08T05:45:16.652Z"}
{"level":"info","message":"Responding with a 204 code and the following data.","timestamp":"2017-12-08T05:45:16.653Z"}
{"level":"info","message":"","timestamp":"2017-12-08T05:45:16.653Z"}
{"level":"info","message":"User deleted undefined from database.","timestamp":"2017-12-08T05:45:16.653Z"}
{"level":"info","message":"Adding an POST url and callback","timestamp":"2017-12-08T05:45:33.621Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T05:45:33.622Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[30]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[31]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T05:45:33.622Z"}
{"level":"info","message":"Adding an GET url and callback","timestamp":"2017-12-08T05:45:33.622Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T05:45:33.622Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[5]++;cov_q0sdvsm27.s[33]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;cov_q0sdvsm27.s[34]++;\n    storage.fetchItem(request.url.query.id).\n    then(mountain => {/* istanbul ignore next */cov_q0sdvsm27.f[6]++;cov_q0sdvsm27.s[35]++;\n      sendJSON(response, 200, mountain);\n    }).\n    catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[7]++;cov_q0sdvsm27.s[36]++;\n      console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[37]++;\n      sendStatus(response, 404, 'id not found');\n    });\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}\n}","timestamp":"2017-12-08T05:45:33.622Z"}
{"level":"info","message":"Adding an DELETE url and callback","timestamp":"2017-12-08T05:45:33.622Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T05:45:33.622Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[8]++;cov_q0sdvsm27.s[39]++;\n  storage.deleteItem(request.url.query.id).\n  then(mountains => {/* istanbul ignore next */cov_q0sdvsm27.f[9]++;cov_q0sdvsm27.s[40]++;\n    sendJSON(response, 204, mountains); /* istanbul ignore next */cov_q0sdvsm27.s[41]++;\n    logger.log('info', `User deleted ${request.url.query.id} from database.`);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[10]++;cov_q0sdvsm27.s[42]++;\n    console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[43]++;\n    sendStatus(response, 400, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[44]++;\n    logger.log('info', `Deletion requested from database, but ${request.url.query.id} not found.`);\n  });\n}","timestamp":"2017-12-08T05:45:33.622Z"}
{"level":"info","message":"Server is online at port 3000","timestamp":"2017-12-08T05:45:33.669Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T05:45:33.718Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T05:45:33.719Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[30]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[31]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T05:45:33.719Z"}
{"level":"info","message":"Responding with a 200 code and the following data.","timestamp":"2017-12-08T05:45:33.722Z"}
{"id":"0212b270-dbdb-11e7-9e40-01ac688ea0ec","name":"Mt. Evans","location":"Colorado","elevation":"14,235","level":"info","message":"","timestamp":"2017-12-08T05:45:33.722Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T05:45:33.731Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T05:45:33.731Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[5]++;cov_q0sdvsm27.s[33]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;cov_q0sdvsm27.s[34]++;\n    storage.fetchItem(request.url.query.id).\n    then(mountain => {/* istanbul ignore next */cov_q0sdvsm27.f[6]++;cov_q0sdvsm27.s[35]++;\n      sendJSON(response, 200, mountain);\n    }).\n    catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[7]++;cov_q0sdvsm27.s[36]++;\n      console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[37]++;\n      sendStatus(response, 404, 'id not found');\n    });\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}\n}","timestamp":"2017-12-08T05:45:33.731Z"}
{"level":"info","message":"Responding with a 200 code and the following data.","timestamp":"2017-12-08T05:45:33.732Z"}
{"id":"0212b270-dbdb-11e7-9e40-01ac688ea0ec","name":"Mt. Evans","location":"Colorado","elevation":"14,235","level":"info","message":"","timestamp":"2017-12-08T05:45:33.733Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T05:45:33.736Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T05:45:33.736Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/lib/request-parser.js:34:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-08T05:45:33.736Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T05:45:33.739Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T05:45:33.739Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[8]++;cov_q0sdvsm27.s[39]++;\n  storage.deleteItem(request.url.query.id).\n  then(mountains => {/* istanbul ignore next */cov_q0sdvsm27.f[9]++;cov_q0sdvsm27.s[40]++;\n    sendJSON(response, 204, mountains); /* istanbul ignore next */cov_q0sdvsm27.s[41]++;\n    logger.log('info', `User deleted ${request.url.query.id} from database.`);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[10]++;cov_q0sdvsm27.s[42]++;\n    console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[43]++;\n    sendStatus(response, 400, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[44]++;\n    logger.log('info', `Deletion requested from database, but ${request.url.query.id} not found.`);\n  });\n}","timestamp":"2017-12-08T05:45:33.739Z"}
{"level":"info","message":"Responding with a 204 code and the following data.","timestamp":"2017-12-08T05:45:33.740Z"}
{"level":"info","message":"","timestamp":"2017-12-08T05:45:33.741Z"}
{"level":"info","message":"User deleted 0212b270-dbdb-11e7-9e40-01ac688ea0ec from database.","timestamp":"2017-12-08T05:45:33.741Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T05:45:33.743Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T05:45:33.743Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[8]++;cov_q0sdvsm27.s[39]++;\n  storage.deleteItem(request.url.query.id).\n  then(mountains => {/* istanbul ignore next */cov_q0sdvsm27.f[9]++;cov_q0sdvsm27.s[40]++;\n    sendJSON(response, 204, mountains); /* istanbul ignore next */cov_q0sdvsm27.s[41]++;\n    logger.log('info', `User deleted ${request.url.query.id} from database.`);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[10]++;cov_q0sdvsm27.s[42]++;\n    console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[43]++;\n    sendStatus(response, 400, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[44]++;\n    logger.log('info', `Deletion requested from database, but ${request.url.query.id} not found.`);\n  });\n}","timestamp":"2017-12-08T05:45:33.743Z"}
{"level":"info","message":"Responding with a 204 code and the following data.","timestamp":"2017-12-08T05:45:33.744Z"}
{"level":"info","message":"","timestamp":"2017-12-08T05:45:33.744Z"}
{"level":"info","message":"User deleted undefined from database.","timestamp":"2017-12-08T05:45:33.744Z"}
{"level":"info","message":"Adding an POST url and callback","timestamp":"2017-12-08T05:48:56.073Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T05:48:56.074Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[30]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[31]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T05:48:56.074Z"}
{"level":"info","message":"Adding an GET url and callback","timestamp":"2017-12-08T05:48:56.074Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T05:48:56.074Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[5]++;cov_q0sdvsm27.s[33]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;cov_q0sdvsm27.s[34]++;\n    storage.fetchItem(request.url.query.id).\n    then(mountain => {/* istanbul ignore next */cov_q0sdvsm27.f[6]++;cov_q0sdvsm27.s[35]++;\n      sendJSON(response, 200, mountain);\n    }).\n    catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[7]++;cov_q0sdvsm27.s[36]++;\n      console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[37]++;\n      sendStatus(response, 404, 'id not found');\n    });\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}\n}","timestamp":"2017-12-08T05:48:56.074Z"}
{"level":"info","message":"Adding an DELETE url and callback","timestamp":"2017-12-08T05:48:56.074Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T05:48:56.074Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[8]++;cov_q0sdvsm27.s[39]++;\n  storage.deleteItem(request.url.query.id).\n  then(mountains => {/* istanbul ignore next */cov_q0sdvsm27.f[9]++;cov_q0sdvsm27.s[40]++;\n    sendJSON(response, 204, mountains); /* istanbul ignore next */cov_q0sdvsm27.s[41]++;\n    logger.log('info', `User deleted ${request.url.query.id} from database.`);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[10]++;cov_q0sdvsm27.s[42]++;\n    console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[43]++;\n    sendStatus(response, 400, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[44]++;\n    logger.log('info', `Deletion requested from database, but ${request.url.query.id} not found.`);\n  });\n}","timestamp":"2017-12-08T05:48:56.074Z"}
{"level":"info","message":"Server is online at port 3000","timestamp":"2017-12-08T05:48:56.138Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T05:48:56.191Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T05:48:56.192Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[30]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[31]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T05:48:56.192Z"}
{"level":"info","message":"Responding with a 200 code and the following data.","timestamp":"2017-12-08T05:48:56.196Z"}
{"id":"7ac1c710-dbdb-11e7-85be-a319a0a3f3e8","name":"Mt. Evans","location":"Colorado","elevation":"14,235","level":"info","message":"","timestamp":"2017-12-08T05:48:56.196Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T05:48:56.205Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T05:48:56.205Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[5]++;cov_q0sdvsm27.s[33]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;cov_q0sdvsm27.s[34]++;\n    storage.fetchItem(request.url.query.id).\n    then(mountain => {/* istanbul ignore next */cov_q0sdvsm27.f[6]++;cov_q0sdvsm27.s[35]++;\n      sendJSON(response, 200, mountain);\n    }).\n    catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[7]++;cov_q0sdvsm27.s[36]++;\n      console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[37]++;\n      sendStatus(response, 404, 'id not found');\n    });\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}\n}","timestamp":"2017-12-08T05:48:56.206Z"}
{"level":"info","message":"Responding with a 200 code and the following data.","timestamp":"2017-12-08T05:48:56.206Z"}
{"id":"7ac1c710-dbdb-11e7-85be-a319a0a3f3e8","name":"Mt. Evans","location":"Colorado","elevation":"14,235","level":"info","message":"","timestamp":"2017-12-08T05:48:56.207Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T05:48:56.210Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T05:48:56.210Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/lib/request-parser.js:34:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-08T05:48:56.211Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T05:48:56.214Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T05:48:56.214Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[8]++;cov_q0sdvsm27.s[39]++;\n  storage.deleteItem(request.url.query.id).\n  then(mountains => {/* istanbul ignore next */cov_q0sdvsm27.f[9]++;cov_q0sdvsm27.s[40]++;\n    sendJSON(response, 204, mountains); /* istanbul ignore next */cov_q0sdvsm27.s[41]++;\n    logger.log('info', `User deleted ${request.url.query.id} from database.`);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[10]++;cov_q0sdvsm27.s[42]++;\n    console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[43]++;\n    sendStatus(response, 400, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[44]++;\n    logger.log('info', `Deletion requested from database, but ${request.url.query.id} not found.`);\n  });\n}","timestamp":"2017-12-08T05:48:56.214Z"}
{"level":"info","message":"Responding with a 204 code and the following data.","timestamp":"2017-12-08T05:48:56.215Z"}
{"level":"info","message":"","timestamp":"2017-12-08T05:48:56.215Z"}
{"level":"info","message":"User deleted 7ac1c710-dbdb-11e7-85be-a319a0a3f3e8 from database.","timestamp":"2017-12-08T05:48:56.215Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T05:48:56.218Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T05:48:56.218Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[8]++;cov_q0sdvsm27.s[39]++;\n  storage.deleteItem(request.url.query.id).\n  then(mountains => {/* istanbul ignore next */cov_q0sdvsm27.f[9]++;cov_q0sdvsm27.s[40]++;\n    sendJSON(response, 204, mountains); /* istanbul ignore next */cov_q0sdvsm27.s[41]++;\n    logger.log('info', `User deleted ${request.url.query.id} from database.`);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[10]++;cov_q0sdvsm27.s[42]++;\n    console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[43]++;\n    sendStatus(response, 400, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[44]++;\n    logger.log('info', `Deletion requested from database, but ${request.url.query.id} not found.`);\n  });\n}","timestamp":"2017-12-08T05:48:56.218Z"}
{"level":"info","message":"Responding with a 204 code and the following data.","timestamp":"2017-12-08T05:48:56.219Z"}
{"level":"info","message":"","timestamp":"2017-12-08T05:48:56.219Z"}
{"level":"info","message":"User deleted undefined from database.","timestamp":"2017-12-08T05:48:56.219Z"}
{"level":"info","message":"Adding an POST url and callback","timestamp":"2017-12-08T05:50:31.069Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T05:50:31.070Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[30]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[31]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T05:50:31.070Z"}
{"level":"info","message":"Adding an GET url and callback","timestamp":"2017-12-08T05:50:31.070Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T05:50:31.070Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[5]++;cov_q0sdvsm27.s[33]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;cov_q0sdvsm27.s[34]++;\n    storage.fetchItem(request.url.query.id).\n    then(mountain => {/* istanbul ignore next */cov_q0sdvsm27.f[6]++;cov_q0sdvsm27.s[35]++;\n      sendJSON(response, 200, mountain);\n    }).\n    catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[7]++;cov_q0sdvsm27.s[36]++;\n      console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[37]++;\n      sendStatus(response, 404, 'id not found');\n    });\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}\n}","timestamp":"2017-12-08T05:50:31.070Z"}
{"level":"info","message":"Adding an DELETE url and callback","timestamp":"2017-12-08T05:50:31.070Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T05:50:31.070Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[8]++;cov_q0sdvsm27.s[39]++;\n  storage.deleteItem(request.url.query.id).\n  then(mountains => {/* istanbul ignore next */cov_q0sdvsm27.f[9]++;cov_q0sdvsm27.s[40]++;\n    sendJSON(response, 204, mountains); /* istanbul ignore next */cov_q0sdvsm27.s[41]++;\n    logger.log('info', `User deleted ${request.url.query.id} from database.`);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[10]++;cov_q0sdvsm27.s[42]++;\n    console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[43]++;\n    sendStatus(response, 400, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[44]++;\n    logger.log('info', `Deletion requested from database, but ${request.url.query.id} not found.`);\n  });\n}","timestamp":"2017-12-08T05:50:31.070Z"}
{"level":"info","message":"Server is online at port 3000","timestamp":"2017-12-08T05:50:31.137Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T05:50:31.192Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T05:50:31.193Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[30]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[31]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T05:50:31.193Z"}
{"level":"info","message":"Responding with a 200 code and the following data.","timestamp":"2017-12-08T05:50:31.196Z"}
{"id":"b361a090-dbdb-11e7-89bf-a92d7f554d74","name":"Mt. Evans","location":"Colorado","elevation":"14,235","level":"info","message":"","timestamp":"2017-12-08T05:50:31.196Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T05:50:31.205Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T05:50:31.205Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[5]++;cov_q0sdvsm27.s[33]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;cov_q0sdvsm27.s[34]++;\n    storage.fetchItem(request.url.query.id).\n    then(mountain => {/* istanbul ignore next */cov_q0sdvsm27.f[6]++;cov_q0sdvsm27.s[35]++;\n      sendJSON(response, 200, mountain);\n    }).\n    catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[7]++;cov_q0sdvsm27.s[36]++;\n      console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[37]++;\n      sendStatus(response, 404, 'id not found');\n    });\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}\n}","timestamp":"2017-12-08T05:50:31.206Z"}
{"level":"info","message":"Responding with a 200 code and the following data.","timestamp":"2017-12-08T05:50:31.206Z"}
{"id":"b361a090-dbdb-11e7-89bf-a92d7f554d74","name":"Mt. Evans","location":"Colorado","elevation":"14,235","level":"info","message":"","timestamp":"2017-12-08T05:50:31.206Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T05:50:31.209Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T05:50:31.210Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/lib/request-parser.js:34:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-08T05:50:31.210Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T05:50:31.212Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T05:50:31.212Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[8]++;cov_q0sdvsm27.s[39]++;\n  storage.deleteItem(request.url.query.id).\n  then(mountains => {/* istanbul ignore next */cov_q0sdvsm27.f[9]++;cov_q0sdvsm27.s[40]++;\n    sendJSON(response, 204, mountains); /* istanbul ignore next */cov_q0sdvsm27.s[41]++;\n    logger.log('info', `User deleted ${request.url.query.id} from database.`);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[10]++;cov_q0sdvsm27.s[42]++;\n    console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[43]++;\n    sendStatus(response, 400, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[44]++;\n    logger.log('info', `Deletion requested from database, but ${request.url.query.id} not found.`);\n  });\n}","timestamp":"2017-12-08T05:50:31.212Z"}
{"level":"info","message":"Responding with a 204 code and the following data.","timestamp":"2017-12-08T05:50:31.214Z"}
{"level":"info","message":"","timestamp":"2017-12-08T05:50:31.214Z"}
{"level":"info","message":"User deleted b361a090-dbdb-11e7-89bf-a92d7f554d74 from database.","timestamp":"2017-12-08T05:50:31.214Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T05:50:31.216Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T05:50:31.216Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[8]++;cov_q0sdvsm27.s[39]++;\n  storage.deleteItem(request.url.query.id).\n  then(mountains => {/* istanbul ignore next */cov_q0sdvsm27.f[9]++;cov_q0sdvsm27.s[40]++;\n    sendJSON(response, 204, mountains); /* istanbul ignore next */cov_q0sdvsm27.s[41]++;\n    logger.log('info', `User deleted ${request.url.query.id} from database.`);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[10]++;cov_q0sdvsm27.s[42]++;\n    console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[43]++;\n    sendStatus(response, 400, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[44]++;\n    logger.log('info', `Deletion requested from database, but ${request.url.query.id} not found.`);\n  });\n}","timestamp":"2017-12-08T05:50:31.217Z"}
{"level":"info","message":"Responding with a 204 code and the following data.","timestamp":"2017-12-08T05:50:31.217Z"}
{"level":"info","message":"","timestamp":"2017-12-08T05:50:31.217Z"}
{"level":"info","message":"User deleted undefined from database.","timestamp":"2017-12-08T05:50:31.217Z"}
{"level":"info","message":"Adding an POST url and callback","timestamp":"2017-12-08T05:52:46.007Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T05:52:46.008Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[30]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[31]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T05:52:46.008Z"}
{"level":"info","message":"Adding an GET url and callback","timestamp":"2017-12-08T05:52:46.008Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T05:52:46.008Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[5]++;cov_q0sdvsm27.s[33]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;cov_q0sdvsm27.s[34]++;\n    storage.fetchItem(request.url.query.id).\n    then(mountain => {/* istanbul ignore next */cov_q0sdvsm27.f[6]++;cov_q0sdvsm27.s[35]++;\n      sendJSON(response, 200, mountain);\n    }).\n    catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[7]++;cov_q0sdvsm27.s[36]++;\n      console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[37]++;\n      sendStatus(response, 404, 'id not found');\n    });\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}\n}","timestamp":"2017-12-08T05:52:46.008Z"}
{"level":"info","message":"Adding an DELETE url and callback","timestamp":"2017-12-08T05:52:46.008Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T05:52:46.008Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[8]++;cov_q0sdvsm27.s[39]++;\n  storage.deleteItem(request.url.query.id).\n  then(mountains => {/* istanbul ignore next */cov_q0sdvsm27.f[9]++;cov_q0sdvsm27.s[40]++;\n    sendJSON(response, 204, mountains); /* istanbul ignore next */cov_q0sdvsm27.s[41]++;\n    logger.log('info', `User deleted ${request.url.query.id} from database.`);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[10]++;cov_q0sdvsm27.s[42]++;\n    console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[43]++;\n    sendStatus(response, 400, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[44]++;\n    logger.log('info', `Deletion requested from database, but ${request.url.query.id} not found.`);\n  });\n}","timestamp":"2017-12-08T05:52:46.008Z"}
{"level":"info","message":"Server is online at port 3000","timestamp":"2017-12-08T05:52:46.075Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T05:52:46.129Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T05:52:46.130Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[30]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[31]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T05:52:46.130Z"}
{"level":"info","message":"Responding with a 200 code and the following data.","timestamp":"2017-12-08T05:52:46.133Z"}
{"id":"03cf6120-dbdc-11e7-9ca3-ffd66c51f41d","name":"Mt. Evans","location":"Colorado","elevation":"14,235","level":"info","message":"","timestamp":"2017-12-08T05:52:46.134Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T05:52:46.142Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T05:52:46.143Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[5]++;cov_q0sdvsm27.s[33]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;cov_q0sdvsm27.s[34]++;\n    storage.fetchItem(request.url.query.id).\n    then(mountain => {/* istanbul ignore next */cov_q0sdvsm27.f[6]++;cov_q0sdvsm27.s[35]++;\n      sendJSON(response, 200, mountain);\n    }).\n    catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[7]++;cov_q0sdvsm27.s[36]++;\n      console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[37]++;\n      sendStatus(response, 404, 'id not found');\n    });\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}\n}","timestamp":"2017-12-08T05:52:46.143Z"}
{"level":"info","message":"Responding with a 200 code and the following data.","timestamp":"2017-12-08T05:52:46.144Z"}
{"id":"03cf6120-dbdc-11e7-9ca3-ffd66c51f41d","name":"Mt. Evans","location":"Colorado","elevation":"14,235","level":"info","message":"","timestamp":"2017-12-08T05:52:46.144Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T05:52:46.147Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T05:52:46.147Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/lib/request-parser.js:34:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-08T05:52:46.147Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T05:52:46.150Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T05:52:46.150Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[8]++;cov_q0sdvsm27.s[39]++;\n  storage.deleteItem(request.url.query.id).\n  then(mountains => {/* istanbul ignore next */cov_q0sdvsm27.f[9]++;cov_q0sdvsm27.s[40]++;\n    sendJSON(response, 204, mountains); /* istanbul ignore next */cov_q0sdvsm27.s[41]++;\n    logger.log('info', `User deleted ${request.url.query.id} from database.`);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[10]++;cov_q0sdvsm27.s[42]++;\n    console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[43]++;\n    sendStatus(response, 400, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[44]++;\n    logger.log('info', `Deletion requested from database, but ${request.url.query.id} not found.`);\n  });\n}","timestamp":"2017-12-08T05:52:46.150Z"}
{"level":"info","message":"Responding with a 204 code and the following data.","timestamp":"2017-12-08T05:52:46.151Z"}
{"level":"info","message":"","timestamp":"2017-12-08T05:52:46.151Z"}
{"level":"info","message":"User deleted 03cf6120-dbdc-11e7-9ca3-ffd66c51f41d from database.","timestamp":"2017-12-08T05:52:46.151Z"}
{"level":"info","message":"Adding an POST url and callback","timestamp":"2017-12-08T05:52:58.189Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T05:52:58.190Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[30]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[31]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T05:52:58.190Z"}
{"level":"info","message":"Adding an GET url and callback","timestamp":"2017-12-08T05:52:58.190Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T05:52:58.190Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[5]++;cov_q0sdvsm27.s[33]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;cov_q0sdvsm27.s[34]++;\n    storage.fetchItem(request.url.query.id).\n    then(mountain => {/* istanbul ignore next */cov_q0sdvsm27.f[6]++;cov_q0sdvsm27.s[35]++;\n      sendJSON(response, 200, mountain);\n    }).\n    catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[7]++;cov_q0sdvsm27.s[36]++;\n      console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[37]++;\n      sendStatus(response, 404, 'id not found');\n    });\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}\n}","timestamp":"2017-12-08T05:52:58.190Z"}
{"level":"info","message":"Adding an DELETE url and callback","timestamp":"2017-12-08T05:52:58.190Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T05:52:58.190Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[8]++;cov_q0sdvsm27.s[39]++;\n  storage.deleteItem(request.url.query.id).\n  then(mountains => {/* istanbul ignore next */cov_q0sdvsm27.f[9]++;cov_q0sdvsm27.s[40]++;\n    sendJSON(response, 204, mountains); /* istanbul ignore next */cov_q0sdvsm27.s[41]++;\n    logger.log('info', `User deleted ${request.url.query.id} from database.`);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[10]++;cov_q0sdvsm27.s[42]++;\n    console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[43]++;\n    sendStatus(response, 400, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[44]++;\n    logger.log('info', `Deletion requested from database, but ${request.url.query.id} not found.`);\n  });\n}","timestamp":"2017-12-08T05:52:58.190Z"}
{"level":"info","message":"Server is online at port 3000","timestamp":"2017-12-08T05:52:58.260Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T05:52:58.306Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T05:52:58.308Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[30]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[31]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T05:52:58.308Z"}
{"level":"info","message":"Responding with a 200 code and the following data.","timestamp":"2017-12-08T05:52:58.311Z"}
{"id":"0b119840-dbdc-11e7-8247-23a35a0cc341","name":"Mt. Evans","location":"Colorado","elevation":"14,235","level":"info","message":"","timestamp":"2017-12-08T05:52:58.311Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T05:52:58.320Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T05:52:58.321Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[5]++;cov_q0sdvsm27.s[33]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;cov_q0sdvsm27.s[34]++;\n    storage.fetchItem(request.url.query.id).\n    then(mountain => {/* istanbul ignore next */cov_q0sdvsm27.f[6]++;cov_q0sdvsm27.s[35]++;\n      sendJSON(response, 200, mountain);\n    }).\n    catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[7]++;cov_q0sdvsm27.s[36]++;\n      console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[37]++;\n      sendStatus(response, 404, 'id not found');\n    });\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}\n}","timestamp":"2017-12-08T05:52:58.321Z"}
{"level":"info","message":"Responding with a 200 code and the following data.","timestamp":"2017-12-08T05:52:58.322Z"}
{"id":"0b119840-dbdc-11e7-8247-23a35a0cc341","name":"Mt. Evans","location":"Colorado","elevation":"14,235","level":"info","message":"","timestamp":"2017-12-08T05:52:58.322Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T05:52:58.325Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T05:52:58.325Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/lib/request-parser.js:34:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-08T05:52:58.325Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T05:52:58.328Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T05:52:58.328Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[8]++;cov_q0sdvsm27.s[39]++;\n  storage.deleteItem(request.url.query.id).\n  then(mountains => {/* istanbul ignore next */cov_q0sdvsm27.f[9]++;cov_q0sdvsm27.s[40]++;\n    sendJSON(response, 204, mountains); /* istanbul ignore next */cov_q0sdvsm27.s[41]++;\n    logger.log('info', `User deleted ${request.url.query.id} from database.`);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[10]++;cov_q0sdvsm27.s[42]++;\n    console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[43]++;\n    sendStatus(response, 400, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[44]++;\n    logger.log('info', `Deletion requested from database, but ${request.url.query.id} not found.`);\n  });\n}","timestamp":"2017-12-08T05:52:58.328Z"}
{"level":"info","message":"Responding with a 204 code and the following data.","timestamp":"2017-12-08T05:52:58.329Z"}
{"level":"info","message":"","timestamp":"2017-12-08T05:52:58.329Z"}
{"level":"info","message":"User deleted 0b119840-dbdc-11e7-8247-23a35a0cc341 from database.","timestamp":"2017-12-08T05:52:58.329Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T05:52:58.331Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T05:52:58.331Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[8]++;cov_q0sdvsm27.s[39]++;\n  storage.deleteItem(request.url.query.id).\n  then(mountains => {/* istanbul ignore next */cov_q0sdvsm27.f[9]++;cov_q0sdvsm27.s[40]++;\n    sendJSON(response, 204, mountains); /* istanbul ignore next */cov_q0sdvsm27.s[41]++;\n    logger.log('info', `User deleted ${request.url.query.id} from database.`);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[10]++;cov_q0sdvsm27.s[42]++;\n    console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[43]++;\n    sendStatus(response, 400, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[44]++;\n    logger.log('info', `Deletion requested from database, but ${request.url.query.id} not found.`);\n  });\n}","timestamp":"2017-12-08T05:52:58.331Z"}
{"level":"info","message":"Responding with a 204 code and the following data.","timestamp":"2017-12-08T05:52:58.332Z"}
{"level":"info","message":"","timestamp":"2017-12-08T05:52:58.332Z"}
{"level":"info","message":"User deleted undefined from database.","timestamp":"2017-12-08T05:52:58.332Z"}
{"level":"info","message":"Adding an POST url and callback","timestamp":"2017-12-08T05:54:13.353Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T05:54:13.354Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[30]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[31]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T05:54:13.354Z"}
{"level":"info","message":"Adding an GET url and callback","timestamp":"2017-12-08T05:54:13.354Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T05:54:13.354Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[5]++;cov_q0sdvsm27.s[33]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;cov_q0sdvsm27.s[34]++;\n    storage.fetchItem(request.url.query.id).\n    then(mountain => {/* istanbul ignore next */cov_q0sdvsm27.f[6]++;cov_q0sdvsm27.s[35]++;\n      sendJSON(response, 200, mountain);\n    }).\n    catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[7]++;cov_q0sdvsm27.s[36]++;\n      console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[37]++;\n      sendStatus(response, 404, 'id not found');\n    });\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}\n}","timestamp":"2017-12-08T05:54:13.354Z"}
{"level":"info","message":"Adding an DELETE url and callback","timestamp":"2017-12-08T05:54:13.354Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T05:54:13.354Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[8]++;cov_q0sdvsm27.s[39]++;\n  storage.deleteItem(request.url.query.id).\n  then(mountains => {/* istanbul ignore next */cov_q0sdvsm27.f[9]++;cov_q0sdvsm27.s[40]++;\n    sendJSON(response, 204, mountains); /* istanbul ignore next */cov_q0sdvsm27.s[41]++;\n    logger.log('info', `User deleted ${request.url.query.id} from database.`);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[10]++;cov_q0sdvsm27.s[42]++;\n    console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[43]++;\n    sendStatus(response, 400, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[44]++;\n    logger.log('info', `Deletion requested from database, but ${request.url.query.id} not found.`);\n  });\n}","timestamp":"2017-12-08T05:54:13.354Z"}
{"level":"info","message":"Server is online at port 3000","timestamp":"2017-12-08T05:54:13.426Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T05:54:13.481Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T05:54:13.483Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[30]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[31]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T05:54:13.483Z"}
{"level":"info","message":"Responding with a 200 code and the following data.","timestamp":"2017-12-08T05:54:13.487Z"}
{"id":"37e063b0-dbdc-11e7-9537-cdf64d36ffe8","name":"Mt. Evans","location":"Colorado","elevation":"14,235","level":"info","message":"","timestamp":"2017-12-08T05:54:13.487Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T05:54:13.496Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T05:54:13.496Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[5]++;cov_q0sdvsm27.s[33]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;cov_q0sdvsm27.s[34]++;\n    storage.fetchItem(request.url.query.id).\n    then(mountain => {/* istanbul ignore next */cov_q0sdvsm27.f[6]++;cov_q0sdvsm27.s[35]++;\n      sendJSON(response, 200, mountain);\n    }).\n    catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[7]++;cov_q0sdvsm27.s[36]++;\n      console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[37]++;\n      sendStatus(response, 404, 'id not found');\n    });\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}\n}","timestamp":"2017-12-08T05:54:13.497Z"}
{"level":"info","message":"Responding with a 200 code and the following data.","timestamp":"2017-12-08T05:54:13.497Z"}
{"id":"37e063b0-dbdc-11e7-9537-cdf64d36ffe8","name":"Mt. Evans","location":"Colorado","elevation":"14,235","level":"info","message":"","timestamp":"2017-12-08T05:54:13.498Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T05:54:13.501Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T05:54:13.501Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/lib/request-parser.js:34:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-08T05:54:13.501Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T05:54:13.504Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T05:54:13.504Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[8]++;cov_q0sdvsm27.s[39]++;\n  storage.deleteItem(request.url.query.id).\n  then(mountains => {/* istanbul ignore next */cov_q0sdvsm27.f[9]++;cov_q0sdvsm27.s[40]++;\n    sendJSON(response, 204, mountains); /* istanbul ignore next */cov_q0sdvsm27.s[41]++;\n    logger.log('info', `User deleted ${request.url.query.id} from database.`);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[10]++;cov_q0sdvsm27.s[42]++;\n    console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[43]++;\n    sendStatus(response, 400, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[44]++;\n    logger.log('info', `Deletion requested from database, but ${request.url.query.id} not found.`);\n  });\n}","timestamp":"2017-12-08T05:54:13.504Z"}
{"level":"info","message":"Responding with a 204 code and the following data.","timestamp":"2017-12-08T05:54:13.505Z"}
{"level":"info","message":"","timestamp":"2017-12-08T05:54:13.505Z"}
{"level":"info","message":"User deleted 37e063b0-dbdc-11e7-9537-cdf64d36ffe8 from database.","timestamp":"2017-12-08T05:54:13.505Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T05:54:13.508Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T05:54:13.508Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[8]++;cov_q0sdvsm27.s[39]++;\n  storage.deleteItem(request.url.query.id).\n  then(mountains => {/* istanbul ignore next */cov_q0sdvsm27.f[9]++;cov_q0sdvsm27.s[40]++;\n    sendJSON(response, 204, mountains); /* istanbul ignore next */cov_q0sdvsm27.s[41]++;\n    logger.log('info', `User deleted ${request.url.query.id} from database.`);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[10]++;cov_q0sdvsm27.s[42]++;\n    console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[43]++;\n    sendStatus(response, 400, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[44]++;\n    logger.log('info', `Deletion requested from database, but ${request.url.query.id} not found.`);\n  });\n}","timestamp":"2017-12-08T05:54:13.508Z"}
{"level":"info","message":"Responding with a 204 code and the following data.","timestamp":"2017-12-08T05:54:13.508Z"}
{"level":"info","message":"","timestamp":"2017-12-08T05:54:13.508Z"}
{"level":"info","message":"User deleted undefined from database.","timestamp":"2017-12-08T05:54:13.509Z"}
{"level":"info","message":"Adding an POST url and callback","timestamp":"2017-12-08T05:59:57.882Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T05:59:57.882Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[30]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[31]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T05:59:57.882Z"}
{"level":"info","message":"Adding an GET url and callback","timestamp":"2017-12-08T05:59:57.882Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T05:59:57.882Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[5]++;cov_q0sdvsm27.s[33]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;cov_q0sdvsm27.s[34]++;\n    storage.fetchItem(request.url.query.id).\n    then(mountain => {/* istanbul ignore next */cov_q0sdvsm27.f[6]++;cov_q0sdvsm27.s[35]++;\n      sendJSON(response, 200, mountain);\n    }).\n    catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[7]++;cov_q0sdvsm27.s[36]++;\n      console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[37]++;\n      sendStatus(response, 404, 'id not found');\n    });\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}\n}","timestamp":"2017-12-08T05:59:57.883Z"}
{"level":"info","message":"Adding an DELETE url and callback","timestamp":"2017-12-08T05:59:57.883Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T05:59:57.883Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[8]++;cov_q0sdvsm27.s[39]++;\n  storage.deleteItem(request.url.query.id).\n  then(mountains => {/* istanbul ignore next */cov_q0sdvsm27.f[9]++;cov_q0sdvsm27.s[40]++;\n    sendJSON(response, 204, mountains); /* istanbul ignore next */cov_q0sdvsm27.s[41]++;\n    logger.log('info', `User deleted ${request.url.query.id} from database.`);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[10]++;cov_q0sdvsm27.s[42]++;\n    console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[43]++;\n    sendStatus(response, 400, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[44]++;\n    logger.log('info', `Deletion requested from database, but ${request.url.query.id} not found.`);\n  });\n}","timestamp":"2017-12-08T05:59:57.883Z"}
{"level":"info","message":"Server is online at port 3000","timestamp":"2017-12-08T05:59:57.946Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T05:59:58.002Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T05:59:58.003Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[30]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[31]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T05:59:58.003Z"}
{"level":"info","message":"Responding with a 200 code and the following data.","timestamp":"2017-12-08T05:59:58.006Z"}
{"id":"0539f830-dbdd-11e7-9f11-fdd2743b87a7","name":"Mt. Evans","location":"Colorado","elevation":"14,235","level":"info","message":"","timestamp":"2017-12-08T05:59:58.006Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T05:59:58.015Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T05:59:58.015Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[5]++;cov_q0sdvsm27.s[33]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;cov_q0sdvsm27.s[34]++;\n    storage.fetchItem(request.url.query.id).\n    then(mountain => {/* istanbul ignore next */cov_q0sdvsm27.f[6]++;cov_q0sdvsm27.s[35]++;\n      sendJSON(response, 200, mountain);\n    }).\n    catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[7]++;cov_q0sdvsm27.s[36]++;\n      console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[37]++;\n      sendStatus(response, 404, 'id not found');\n    });\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}\n}","timestamp":"2017-12-08T05:59:58.015Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T06:00:03.017Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T06:00:03.018Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[5]++;cov_q0sdvsm27.s[33]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;cov_q0sdvsm27.s[34]++;\n    storage.fetchItem(request.url.query.id).\n    then(mountain => {/* istanbul ignore next */cov_q0sdvsm27.f[6]++;cov_q0sdvsm27.s[35]++;\n      sendJSON(response, 200, mountain);\n    }).\n    catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[7]++;cov_q0sdvsm27.s[36]++;\n      console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[37]++;\n      sendStatus(response, 404, 'id not found');\n    });\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}\n}","timestamp":"2017-12-08T06:00:03.018Z"}
{"level":"info","message":"Responding with a 200 code and the following data.","timestamp":"2017-12-08T06:00:03.019Z"}
{"id":"0539f830-dbdd-11e7-9f11-fdd2743b87a7","name":"Mt. Evans","location":"Colorado","elevation":"14,235","level":"info","message":"","timestamp":"2017-12-08T06:00:03.019Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T06:00:03.023Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T06:00:03.023Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/lib/request-parser.js:27:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-08T06:00:03.023Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T06:00:03.026Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T06:00:03.026Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[8]++;cov_q0sdvsm27.s[39]++;\n  storage.deleteItem(request.url.query.id).\n  then(mountains => {/* istanbul ignore next */cov_q0sdvsm27.f[9]++;cov_q0sdvsm27.s[40]++;\n    sendJSON(response, 204, mountains); /* istanbul ignore next */cov_q0sdvsm27.s[41]++;\n    logger.log('info', `User deleted ${request.url.query.id} from database.`);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[10]++;cov_q0sdvsm27.s[42]++;\n    console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[43]++;\n    sendStatus(response, 400, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[44]++;\n    logger.log('info', `Deletion requested from database, but ${request.url.query.id} not found.`);\n  });\n}","timestamp":"2017-12-08T06:00:03.026Z"}
{"level":"info","message":"Responding with a 204 code and the following data.","timestamp":"2017-12-08T06:00:03.027Z"}
{"level":"info","message":"","timestamp":"2017-12-08T06:00:03.028Z"}
{"level":"info","message":"User deleted 0539f830-dbdd-11e7-9f11-fdd2743b87a7 from database.","timestamp":"2017-12-08T06:00:03.028Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T06:00:03.030Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T06:00:03.030Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[8]++;cov_q0sdvsm27.s[39]++;\n  storage.deleteItem(request.url.query.id).\n  then(mountains => {/* istanbul ignore next */cov_q0sdvsm27.f[9]++;cov_q0sdvsm27.s[40]++;\n    sendJSON(response, 204, mountains); /* istanbul ignore next */cov_q0sdvsm27.s[41]++;\n    logger.log('info', `User deleted ${request.url.query.id} from database.`);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[10]++;cov_q0sdvsm27.s[42]++;\n    console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[43]++;\n    sendStatus(response, 400, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[44]++;\n    logger.log('info', `Deletion requested from database, but ${request.url.query.id} not found.`);\n  });\n}","timestamp":"2017-12-08T06:00:03.030Z"}
{"level":"info","message":"Responding with a 204 code and the following data.","timestamp":"2017-12-08T06:00:03.031Z"}
{"level":"info","message":"","timestamp":"2017-12-08T06:00:03.031Z"}
{"level":"info","message":"User deleted undefined from database.","timestamp":"2017-12-08T06:00:03.031Z"}
{"level":"info","message":"Adding an POST url and callback","timestamp":"2017-12-08T06:01:05.635Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T06:01:05.636Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[30]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[31]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T06:01:05.636Z"}
{"level":"info","message":"Adding an GET url and callback","timestamp":"2017-12-08T06:01:05.636Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T06:01:05.636Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[5]++;cov_q0sdvsm27.s[33]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;cov_q0sdvsm27.s[34]++;\n    storage.fetchItem(request.url.query.id).\n    then(mountain => {/* istanbul ignore next */cov_q0sdvsm27.f[6]++;cov_q0sdvsm27.s[35]++;\n      sendJSON(response, 200, mountain);\n    }).\n    catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[7]++;cov_q0sdvsm27.s[36]++;\n      console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[37]++;\n      sendStatus(response, 404, 'id not found');\n    });\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}\n}","timestamp":"2017-12-08T06:01:05.636Z"}
{"level":"info","message":"Adding an DELETE url and callback","timestamp":"2017-12-08T06:01:05.636Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T06:01:05.636Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[8]++;cov_q0sdvsm27.s[39]++;\n  storage.deleteItem(request.url.query.id).\n  then(mountains => {/* istanbul ignore next */cov_q0sdvsm27.f[9]++;cov_q0sdvsm27.s[40]++;\n    sendJSON(response, 204, mountains); /* istanbul ignore next */cov_q0sdvsm27.s[41]++;\n    logger.log('info', `User deleted ${request.url.query.id} from database.`);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[10]++;cov_q0sdvsm27.s[42]++;\n    console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[43]++;\n    sendStatus(response, 400, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[44]++;\n    logger.log('info', `Deletion requested from database, but ${request.url.query.id} not found.`);\n  });\n}","timestamp":"2017-12-08T06:01:05.636Z"}
{"level":"info","message":"Server is online at port 3000","timestamp":"2017-12-08T06:01:05.705Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T06:01:05.757Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T06:01:05.758Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[30]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[31]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T06:01:05.758Z"}
{"level":"info","message":"Responding with a 200 code and the following data.","timestamp":"2017-12-08T06:01:05.761Z"}
{"id":"2d9c8fe0-dbdd-11e7-b0b2-9bb84724f6a8","name":"Mt. Evans","location":"Colorado","elevation":"14,235","level":"info","message":"","timestamp":"2017-12-08T06:01:05.761Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T06:01:05.770Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T06:01:05.770Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[5]++;cov_q0sdvsm27.s[33]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;cov_q0sdvsm27.s[34]++;\n    storage.fetchItem(request.url.query.id).\n    then(mountain => {/* istanbul ignore next */cov_q0sdvsm27.f[6]++;cov_q0sdvsm27.s[35]++;\n      sendJSON(response, 200, mountain);\n    }).\n    catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[7]++;cov_q0sdvsm27.s[36]++;\n      console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[37]++;\n      sendStatus(response, 404, 'id not found');\n    });\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}\n}","timestamp":"2017-12-08T06:01:05.770Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T06:01:10.776Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T06:01:10.777Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[5]++;cov_q0sdvsm27.s[33]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;cov_q0sdvsm27.s[34]++;\n    storage.fetchItem(request.url.query.id).\n    then(mountain => {/* istanbul ignore next */cov_q0sdvsm27.f[6]++;cov_q0sdvsm27.s[35]++;\n      sendJSON(response, 200, mountain);\n    }).\n    catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[7]++;cov_q0sdvsm27.s[36]++;\n      console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[37]++;\n      sendStatus(response, 404, 'id not found');\n    });\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}\n}","timestamp":"2017-12-08T06:01:10.777Z"}
{"level":"info","message":"Responding with a 200 code and the following data.","timestamp":"2017-12-08T06:01:10.778Z"}
{"id":"2d9c8fe0-dbdd-11e7-b0b2-9bb84724f6a8","name":"Mt. Evans","location":"Colorado","elevation":"14,235","level":"info","message":"","timestamp":"2017-12-08T06:01:10.778Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T06:01:10.781Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T06:01:10.781Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/lib/request-parser.js:27:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-08T06:01:10.781Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T06:01:10.784Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T06:01:10.785Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[8]++;cov_q0sdvsm27.s[39]++;\n  storage.deleteItem(request.url.query.id).\n  then(mountains => {/* istanbul ignore next */cov_q0sdvsm27.f[9]++;cov_q0sdvsm27.s[40]++;\n    sendJSON(response, 204, mountains); /* istanbul ignore next */cov_q0sdvsm27.s[41]++;\n    logger.log('info', `User deleted ${request.url.query.id} from database.`);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[10]++;cov_q0sdvsm27.s[42]++;\n    console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[43]++;\n    sendStatus(response, 400, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[44]++;\n    logger.log('info', `Deletion requested from database, but ${request.url.query.id} not found.`);\n  });\n}","timestamp":"2017-12-08T06:01:10.785Z"}
{"level":"info","message":"Responding with a 204 code and the following data.","timestamp":"2017-12-08T06:01:10.786Z"}
{"level":"info","message":"","timestamp":"2017-12-08T06:01:10.786Z"}
{"level":"info","message":"User deleted 2d9c8fe0-dbdd-11e7-b0b2-9bb84724f6a8 from database.","timestamp":"2017-12-08T06:01:10.786Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T06:01:10.789Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T06:01:10.789Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[8]++;cov_q0sdvsm27.s[39]++;\n  storage.deleteItem(request.url.query.id).\n  then(mountains => {/* istanbul ignore next */cov_q0sdvsm27.f[9]++;cov_q0sdvsm27.s[40]++;\n    sendJSON(response, 204, mountains); /* istanbul ignore next */cov_q0sdvsm27.s[41]++;\n    logger.log('info', `User deleted ${request.url.query.id} from database.`);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[10]++;cov_q0sdvsm27.s[42]++;\n    console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[43]++;\n    sendStatus(response, 400, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[44]++;\n    logger.log('info', `Deletion requested from database, but ${request.url.query.id} not found.`);\n  });\n}","timestamp":"2017-12-08T06:01:10.789Z"}
{"level":"info","message":"Responding with a 204 code and the following data.","timestamp":"2017-12-08T06:01:10.789Z"}
{"level":"info","message":"","timestamp":"2017-12-08T06:01:10.789Z"}
{"level":"info","message":"User deleted undefined from database.","timestamp":"2017-12-08T06:01:10.789Z"}
{"level":"info","message":"Adding an POST url and callback","timestamp":"2017-12-08T06:01:51.875Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T06:01:51.876Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[30]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[31]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T06:01:51.876Z"}
{"level":"info","message":"Adding an GET url and callback","timestamp":"2017-12-08T06:01:51.876Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T06:01:51.876Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[5]++;cov_q0sdvsm27.s[33]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;cov_q0sdvsm27.s[34]++;\n    storage.fetchItem(request.url.query.id).\n    then(mountain => {/* istanbul ignore next */cov_q0sdvsm27.f[6]++;cov_q0sdvsm27.s[35]++;\n      sendJSON(response, 200, mountain);\n    }).\n    catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[7]++;cov_q0sdvsm27.s[36]++;\n      console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[37]++;\n      sendStatus(response, 404, 'id not found');\n    });\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}\n}","timestamp":"2017-12-08T06:01:51.876Z"}
{"level":"info","message":"Adding an DELETE url and callback","timestamp":"2017-12-08T06:01:51.876Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T06:01:51.876Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[8]++;cov_q0sdvsm27.s[39]++;\n  storage.deleteItem(request.url.query.id).\n  then(mountains => {/* istanbul ignore next */cov_q0sdvsm27.f[9]++;cov_q0sdvsm27.s[40]++;\n    sendJSON(response, 204, mountains); /* istanbul ignore next */cov_q0sdvsm27.s[41]++;\n    logger.log('info', `User deleted ${request.url.query.id} from database.`);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[10]++;cov_q0sdvsm27.s[42]++;\n    console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[43]++;\n    sendStatus(response, 400, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[44]++;\n    logger.log('info', `Deletion requested from database, but ${request.url.query.id} not found.`);\n  });\n}","timestamp":"2017-12-08T06:01:51.876Z"}
{"level":"info","message":"Server is online at port 3000","timestamp":"2017-12-08T06:01:51.942Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T06:01:51.995Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T06:01:51.997Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[2]++;cov_q0sdvsm27.s[16]++;\n  //Here I know that my request has been pre-parsed (?)\n  if (!request.body) {/* istanbul ignore next */cov_q0sdvsm27.b[0][0]++;cov_q0sdvsm27.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_q0sdvsm27.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[0][1]++;}cov_q0sdvsm27.s[19]++;\n\n  if (!request.body.name) {/* istanbul ignore next */cov_q0sdvsm27.b[1][0]++;cov_q0sdvsm27.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_q0sdvsm27.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[1][1]++;}cov_q0sdvsm27.s[22]++;\n\n  if (!request.body.location) {/* istanbul ignore next */cov_q0sdvsm27.b[2][0]++;cov_q0sdvsm27.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[2][1]++;}cov_q0sdvsm27.s[25]++;\n\n  if (!request.body.elevation) {/* istanbul ignore next */cov_q0sdvsm27.b[3][0]++;cov_q0sdvsm27.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_q0sdvsm27.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[3][1]++;}\n\n  let mountain = /* istanbul ignore next */(cov_q0sdvsm27.s[28]++, new Mountain(request.body.name, request.body.location, request.body.elevation)); /* istanbul ignore next */cov_q0sdvsm27.s[29]++;\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_q0sdvsm27.f[3]++;cov_q0sdvsm27.s[30]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[4]++;cov_q0sdvsm27.s[31]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T06:01:51.997Z"}
{"level":"info","message":"Responding with a 200 code and the following data.","timestamp":"2017-12-08T06:01:51.999Z"}
{"id":"492c12d0-dbdd-11e7-b393-3b9c8cef3a9e","name":"Mt. Evans","location":"Colorado","elevation":"14,235","level":"info","message":"","timestamp":"2017-12-08T06:01:52.000Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T06:01:52.009Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T06:01:52.009Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[5]++;cov_q0sdvsm27.s[33]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_q0sdvsm27.b[4][0]++;cov_q0sdvsm27.s[34]++;\n    storage.fetchItem(request.url.query.id).\n    then(mountain => {/* istanbul ignore next */cov_q0sdvsm27.f[6]++;cov_q0sdvsm27.s[35]++;\n      sendJSON(response, 200, mountain);\n    }).\n    catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[7]++;cov_q0sdvsm27.s[36]++;\n      console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[37]++;\n      sendStatus(response, 404, 'id not found');\n    });\n  } else /* istanbul ignore next */{cov_q0sdvsm27.b[4][1]++;}\n}","timestamp":"2017-12-08T06:01:52.009Z"}
{"level":"info","message":"Responding with a 200 code and the following data.","timestamp":"2017-12-08T06:01:52.010Z"}
{"id":"492c12d0-dbdd-11e7-b393-3b9c8cef3a9e","name":"Mt. Evans","location":"Colorado","elevation":"14,235","level":"info","message":"","timestamp":"2017-12-08T06:01:52.010Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T06:01:52.013Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T06:01:52.013Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/Users/kerrynordstrom/codefellows/401/labs/08-09-vanilla-rest-server/lab-kerry/lib/request-parser.js:27:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-08T06:01:52.014Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T06:01:52.016Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T06:01:52.016Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[8]++;cov_q0sdvsm27.s[39]++;\n  storage.deleteItem(request.url.query.id).\n  then(mountains => {/* istanbul ignore next */cov_q0sdvsm27.f[9]++;cov_q0sdvsm27.s[40]++;\n    sendJSON(response, 204, mountains); /* istanbul ignore next */cov_q0sdvsm27.s[41]++;\n    logger.log('info', `User deleted ${request.url.query.id} from database.`);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[10]++;cov_q0sdvsm27.s[42]++;\n    console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[43]++;\n    sendStatus(response, 400, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[44]++;\n    logger.log('info', `Deletion requested from database, but ${request.url.query.id} not found.`);\n  });\n}","timestamp":"2017-12-08T06:01:52.016Z"}
{"level":"info","message":"Responding with a 204 code and the following data.","timestamp":"2017-12-08T06:01:52.017Z"}
{"level":"info","message":"","timestamp":"2017-12-08T06:01:52.017Z"}
{"level":"info","message":"User deleted 492c12d0-dbdd-11e7-b393-3b9c8cef3a9e from database.","timestamp":"2017-12-08T06:01:52.017Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T06:01:52.019Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T06:01:52.020Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_q0sdvsm27.f[8]++;cov_q0sdvsm27.s[39]++;\n  storage.deleteItem(request.url.query.id).\n  then(mountains => {/* istanbul ignore next */cov_q0sdvsm27.f[9]++;cov_q0sdvsm27.s[40]++;\n    sendJSON(response, 204, mountains); /* istanbul ignore next */cov_q0sdvsm27.s[41]++;\n    logger.log('info', `User deleted ${request.url.query.id} from database.`);\n  }).\n  catch(error => {/* istanbul ignore next */cov_q0sdvsm27.f[10]++;cov_q0sdvsm27.s[42]++;\n    console.log(request.url.query.id); /* istanbul ignore next */cov_q0sdvsm27.s[43]++;\n    sendStatus(response, 400, 'id not found'); /* istanbul ignore next */cov_q0sdvsm27.s[44]++;\n    logger.log('info', `Deletion requested from database, but ${request.url.query.id} not found.`);\n  });\n}","timestamp":"2017-12-08T06:01:52.020Z"}
{"level":"info","message":"Responding with a 204 code and the following data.","timestamp":"2017-12-08T06:01:52.020Z"}
{"level":"info","message":"","timestamp":"2017-12-08T06:01:52.020Z"}
{"level":"info","message":"User deleted undefined from database.","timestamp":"2017-12-08T06:01:52.021Z"}
