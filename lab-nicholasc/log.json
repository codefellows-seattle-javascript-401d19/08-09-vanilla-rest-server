
{"level":"info","message":"adding a POST url and callbacck","timestamp":"2017-12-07T03:12:47.408Z"}
{"level":"info","message":"/api/notes","timestamp":"2017-12-07T03:12:47.409Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[2]++;cov_yvt6rhqjy.s[16]++;\n  //here, i know that request has been pre-parsed- request parser in router took care of it\n  console.log('note-router.js line 29'); /* istanbul ignore next */cov_yvt6rhqjy.s[17]++;\n  if (!request.body) {/* istanbul ignore next */cov_yvt6rhqjy.b[0][0]++;cov_yvt6rhqjy.s[18]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[0][1]++;}\n  // if(!request.body.title){\n  //   sendStatus(response, 400, 'title not found');\n  //   return;\n  // }\n  // if(!request.body.content){\n  //   sendStatus(response, 400, 'content not found');\n  //   return;\n  // }\n\n  let note = /* istanbul ignore next */(cov_yvt6rhqjy.s[20]++, new Note(request.body.title, request.body.content)); /* istanbul ignore next */cov_yvt6rhqjy.s[21]++;\n  notes.push(note); /* istanbul ignore next */cov_yvt6rhqjy.s[22]++;\n  sendJSON(response, 200, notes);\n}","timestamp":"2017-12-07T03:12:47.410Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T03:12:47.451Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T03:12:47.465Z"}
{"level":"info","message":"log the features here","timestamp":"2017-12-07T03:12:47.465Z"}
{"level":"info","message":"__REQUEST_ERROR","timestamp":"2017-12-07T03:12:47.467Z"}
{"message":"Cannot read property 'indexOf' of undefined","stack":"TypeError: Cannot read property 'indexOf' of undefined\n    at IncomingMessage.request.on.error (/home/ncarignan/cf/401/lab-assignments/08-09-vanilla-rest-server/lab-nicholasc/lib/request-parser.js:30:44)\n    at emitNone (events.js:86:13)\n    at IncomingMessage.emit (events.js:185:7)\n    at endReadableNT (_stream_readable.js:974:12)\n    at _combinedTickCallback (internal/process/next_tick.js:80:11)\n    at process._tickCallback (internal/process/next_tick.js:104:9)","level":"info","timestamp":"2017-12-07T03:12:47.467Z"}
{"level":"info","message":"adding a POST url and callbacck","timestamp":"2017-12-07T03:13:37.350Z"}
{"level":"info","message":"/api/notes","timestamp":"2017-12-07T03:13:37.351Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[2]++;cov_yvt6rhqjy.s[16]++;\n  //here, i know that request has been pre-parsed- request parser in router took care of it\n  console.log('note-router.js line 29'); /* istanbul ignore next */cov_yvt6rhqjy.s[17]++;\n  if (!request.body) {/* istanbul ignore next */cov_yvt6rhqjy.b[0][0]++;cov_yvt6rhqjy.s[18]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[0][1]++;}\n  // if(!request.body.title){\n  //   sendStatus(response, 400, 'title not found');\n  //   return;\n  // }\n  // if(!request.body.content){\n  //   sendStatus(response, 400, 'content not found');\n  //   return;\n  // }\n\n  let note = /* istanbul ignore next */(cov_yvt6rhqjy.s[20]++, new Note(request.body.title, request.body.content)); /* istanbul ignore next */cov_yvt6rhqjy.s[21]++;\n  notes.push(note); /* istanbul ignore next */cov_yvt6rhqjy.s[22]++;\n  sendJSON(response, 200, notes);\n}","timestamp":"2017-12-07T03:13:37.351Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T03:13:37.392Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T03:13:37.411Z"}
{"level":"info","message":"log the features here","timestamp":"2017-12-07T03:13:37.411Z"}
{"level":"info","message":"Original URL : \"/api/notes\"","timestamp":"2017-12-07T03:13:37.412Z"}
{"level":"info","message":"Parsed URL : {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/notes\",\"path\":\"/api/notes\",\"href\":\"/api/notes\"}","timestamp":"2017-12-07T03:13:37.412Z"}
{"level":"info","message":"__REQUEST_ERROR","timestamp":"2017-12-07T03:13:37.413Z"}
{"message":"Cannot read property 'indexOf' of undefined","stack":"TypeError: Cannot read property 'indexOf' of undefined\n    at IncomingMessage.request.on.error (/home/ncarignan/cf/401/lab-assignments/08-09-vanilla-rest-server/lab-nicholasc/lib/request-parser.js:30:44)\n    at emitNone (events.js:86:13)\n    at IncomingMessage.emit (events.js:185:7)\n    at endReadableNT (_stream_readable.js:974:12)\n    at _combinedTickCallback (internal/process/next_tick.js:80:11)\n    at process._tickCallback (internal/process/next_tick.js:104:9)","level":"info","timestamp":"2017-12-07T03:13:37.413Z"}
{"level":"info","message":"adding a POST url and callbacck","timestamp":"2017-12-07T03:14:39.438Z"}
{"level":"info","message":"/api/notes","timestamp":"2017-12-07T03:14:39.440Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[2]++;cov_yvt6rhqjy.s[16]++;\n  //here, i know that request has been pre-parsed- request parser in router took care of it\n  console.log('note-router.js line 29'); /* istanbul ignore next */cov_yvt6rhqjy.s[17]++;\n  if (!request.body) {/* istanbul ignore next */cov_yvt6rhqjy.b[0][0]++;cov_yvt6rhqjy.s[18]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[0][1]++;}\n  // if(!request.body.title){\n  //   sendStatus(response, 400, 'title not found');\n  //   return;\n  // }\n  // if(!request.body.content){\n  //   sendStatus(response, 400, 'content not found');\n  //   return;\n  // }\n\n  let note = /* istanbul ignore next */(cov_yvt6rhqjy.s[20]++, new Note(request.body.title, request.body.content)); /* istanbul ignore next */cov_yvt6rhqjy.s[21]++;\n  notes.push(note); /* istanbul ignore next */cov_yvt6rhqjy.s[22]++;\n  sendJSON(response, 200, notes);\n}","timestamp":"2017-12-07T03:14:39.440Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T03:14:39.487Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T03:14:39.501Z"}
{"level":"info","message":"log the features here","timestamp":"2017-12-07T03:14:39.501Z"}
{"level":"info","message":"__REQUEST_ERROR","timestamp":"2017-12-07T03:14:39.504Z"}
{"message":"Cannot read property 'indexOf' of undefined","stack":"TypeError: Cannot read property 'indexOf' of undefined\n    at IncomingMessage.request.on.error (/home/ncarignan/cf/401/lab-assignments/08-09-vanilla-rest-server/lab-nicholasc/lib/request-parser.js:31:44)\n    at emitNone (events.js:86:13)\n    at IncomingMessage.emit (events.js:185:7)\n    at endReadableNT (_stream_readable.js:974:12)\n    at _combinedTickCallback (internal/process/next_tick.js:80:11)\n    at process._tickCallback (internal/process/next_tick.js:104:9)","level":"info","timestamp":"2017-12-07T03:14:39.504Z"}
{"level":"info","message":"adding a POST url and callbacck","timestamp":"2017-12-07T03:15:16.787Z"}
{"level":"info","message":"/api/notes","timestamp":"2017-12-07T03:15:16.788Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[2]++;cov_yvt6rhqjy.s[16]++;\n  //here, i know that request has been pre-parsed- request parser in router took care of it\n  console.log('note-router.js line 29'); /* istanbul ignore next */cov_yvt6rhqjy.s[17]++;\n  if (!request.body) {/* istanbul ignore next */cov_yvt6rhqjy.b[0][0]++;cov_yvt6rhqjy.s[18]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[0][1]++;}\n  // if(!request.body.title){\n  //   sendStatus(response, 400, 'title not found');\n  //   return;\n  // }\n  // if(!request.body.content){\n  //   sendStatus(response, 400, 'content not found');\n  //   return;\n  // }\n\n  let note = /* istanbul ignore next */(cov_yvt6rhqjy.s[20]++, new Note(request.body.title, request.body.content)); /* istanbul ignore next */cov_yvt6rhqjy.s[21]++;\n  notes.push(note); /* istanbul ignore next */cov_yvt6rhqjy.s[22]++;\n  sendJSON(response, 200, notes);\n}","timestamp":"2017-12-07T03:15:16.788Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T03:15:16.834Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T03:15:16.848Z"}
{"level":"info","message":"log the features here","timestamp":"2017-12-07T03:15:16.848Z"}
{"level":"info","message":"__REQUEST_ERROR","timestamp":"2017-12-07T03:15:16.852Z"}
{"message":"Cannot read property 'indexOf' of undefined","stack":"TypeError: Cannot read property 'indexOf' of undefined\n    at IncomingMessage.request.on.error (/home/ncarignan/cf/401/lab-assignments/08-09-vanilla-rest-server/lab-nicholasc/lib/request-parser.js:32:44)\n    at emitNone (events.js:86:13)\n    at IncomingMessage.emit (events.js:185:7)\n    at endReadableNT (_stream_readable.js:974:12)\n    at _combinedTickCallback (internal/process/next_tick.js:80:11)\n    at process._tickCallback (internal/process/next_tick.js:104:9)","level":"info","timestamp":"2017-12-07T03:15:16.852Z"}
{"level":"info","message":"adding a POST url and callbacck","timestamp":"2017-12-07T03:15:45.560Z"}
{"level":"info","message":"/api/notes","timestamp":"2017-12-07T03:15:45.561Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[2]++;cov_yvt6rhqjy.s[16]++;\n  //here, i know that request has been pre-parsed- request parser in router took care of it\n  console.log('note-router.js line 29'); /* istanbul ignore next */cov_yvt6rhqjy.s[17]++;\n  if (!request.body) {/* istanbul ignore next */cov_yvt6rhqjy.b[0][0]++;cov_yvt6rhqjy.s[18]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[0][1]++;}\n  // if(!request.body.title){\n  //   sendStatus(response, 400, 'title not found');\n  //   return;\n  // }\n  // if(!request.body.content){\n  //   sendStatus(response, 400, 'content not found');\n  //   return;\n  // }\n\n  let note = /* istanbul ignore next */(cov_yvt6rhqjy.s[20]++, new Note(request.body.title, request.body.content)); /* istanbul ignore next */cov_yvt6rhqjy.s[21]++;\n  notes.push(note); /* istanbul ignore next */cov_yvt6rhqjy.s[22]++;\n  sendJSON(response, 200, notes);\n}","timestamp":"2017-12-07T03:15:45.561Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T03:15:45.606Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T03:15:45.621Z"}
{"level":"info","message":"log the features here","timestamp":"2017-12-07T03:15:45.621Z"}
{"level":"info","message":"__REQUEST_ERROR","timestamp":"2017-12-07T03:15:45.624Z"}
{"message":"Cannot read property 'indexOf' of undefined","stack":"TypeError: Cannot read property 'indexOf' of undefined\n    at IncomingMessage.request.on.error (/home/ncarignan/cf/401/lab-assignments/08-09-vanilla-rest-server/lab-nicholasc/lib/request-parser.js:32:44)\n    at emitNone (events.js:86:13)\n    at IncomingMessage.emit (events.js:185:7)\n    at endReadableNT (_stream_readable.js:974:12)\n    at _combinedTickCallback (internal/process/next_tick.js:80:11)\n    at process._tickCallback (internal/process/next_tick.js:104:9)","level":"info","timestamp":"2017-12-07T03:15:45.624Z"}
{"level":"info","message":"adding a POST url and callbacck","timestamp":"2017-12-07T03:16:20.642Z"}
{"level":"info","message":"/api/notes","timestamp":"2017-12-07T03:16:20.643Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[2]++;cov_yvt6rhqjy.s[16]++;\n  //here, i know that request has been pre-parsed- request parser in router took care of it\n  console.log('note-router.js line 29'); /* istanbul ignore next */cov_yvt6rhqjy.s[17]++;\n  if (!request.body) {/* istanbul ignore next */cov_yvt6rhqjy.b[0][0]++;cov_yvt6rhqjy.s[18]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[0][1]++;}\n  // if(!request.body.title){\n  //   sendStatus(response, 400, 'title not found');\n  //   return;\n  // }\n  // if(!request.body.content){\n  //   sendStatus(response, 400, 'content not found');\n  //   return;\n  // }\n\n  let note = /* istanbul ignore next */(cov_yvt6rhqjy.s[20]++, new Note(request.body.title, request.body.content)); /* istanbul ignore next */cov_yvt6rhqjy.s[21]++;\n  notes.push(note); /* istanbul ignore next */cov_yvt6rhqjy.s[22]++;\n  sendJSON(response, 200, notes);\n}","timestamp":"2017-12-07T03:16:20.643Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T03:16:20.685Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T03:16:20.699Z"}
{"level":"info","message":"log the features here","timestamp":"2017-12-07T03:16:20.699Z"}
{"level":"info","message":"__REQUEST_ERROR","timestamp":"2017-12-07T03:16:20.702Z"}
{"message":"Cannot read property 'indexOf' of undefined","stack":"TypeError: Cannot read property 'indexOf' of undefined\n    at IncomingMessage.request.on.error (/home/ncarignan/cf/401/lab-assignments/08-09-vanilla-rest-server/lab-nicholasc/lib/request-parser.js:32:44)\n    at emitNone (events.js:86:13)\n    at IncomingMessage.emit (events.js:185:7)\n    at endReadableNT (_stream_readable.js:974:12)\n    at _combinedTickCallback (internal/process/next_tick.js:80:11)\n    at process._tickCallback (internal/process/next_tick.js:104:9)","level":"info","timestamp":"2017-12-07T03:16:20.702Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T03:16:20.708Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T03:16:20.712Z"}
{"level":"info","message":"log the features here","timestamp":"2017-12-07T03:16:20.712Z"}
{"level":"info","message":"__REQUEST_ERROR","timestamp":"2017-12-07T03:16:20.713Z"}
{"message":"Cannot read property 'indexOf' of undefined","stack":"TypeError: Cannot read property 'indexOf' of undefined\n    at IncomingMessage.request.on.error (/home/ncarignan/cf/401/lab-assignments/08-09-vanilla-rest-server/lab-nicholasc/lib/request-parser.js:32:44)\n    at emitNone (events.js:86:13)\n    at IncomingMessage.emit (events.js:185:7)\n    at endReadableNT (_stream_readable.js:974:12)\n    at _combinedTickCallback (internal/process/next_tick.js:80:11)\n    at process._tickCallback (internal/process/next_tick.js:104:9)","level":"info","timestamp":"2017-12-07T03:16:20.713Z"}
{"level":"info","message":"adding a POST url and callbacck","timestamp":"2017-12-07T03:17:05.810Z"}
{"level":"info","message":"/api/notes","timestamp":"2017-12-07T03:17:05.811Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[2]++;cov_yvt6rhqjy.s[16]++;\n  //here, i know that request has been pre-parsed- request parser in router took care of it\n  console.log('note-router.js line 29'); /* istanbul ignore next */cov_yvt6rhqjy.s[17]++;\n  if (!request.body) {/* istanbul ignore next */cov_yvt6rhqjy.b[0][0]++;cov_yvt6rhqjy.s[18]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[0][1]++;}\n  // if(!request.body.title){\n  //   sendStatus(response, 400, 'title not found');\n  //   return;\n  // }\n  // if(!request.body.content){\n  //   sendStatus(response, 400, 'content not found');\n  //   return;\n  // }\n\n  let note = /* istanbul ignore next */(cov_yvt6rhqjy.s[20]++, new Note(request.body.title, request.body.content)); /* istanbul ignore next */cov_yvt6rhqjy.s[21]++;\n  notes.push(note); /* istanbul ignore next */cov_yvt6rhqjy.s[22]++;\n  sendJSON(response, 200, notes);\n}","timestamp":"2017-12-07T03:17:05.811Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T03:17:05.858Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T03:17:05.872Z"}
{"level":"info","message":"log the features here","timestamp":"2017-12-07T03:17:05.872Z"}
{"level":"info","message":"__REQUEST_ERROR","timestamp":"2017-12-07T03:17:05.874Z"}
{"message":"request.url.query.toString is not a function","stack":"TypeError: request.url.query.toString is not a function\n    at Promise (/home/ncarignan/cf/401/lab-assignments/08-09-vanilla-rest-server/lab-nicholasc/lib/request-parser.js:19:35)\n    at Object.<anonymous>.requestParser.parse.request [as parse] (/home/ncarignan/cf/401/lab-assignments/08-09-vanilla-rest-server/lab-nicholasc/lib/request-parser.js:13:10)\n    at Server.Object.<anonymous>.router.route (/home/ncarignan/cf/401/lab-assignments/08-09-vanilla-rest-server/lab-nicholasc/lib/router.js:43:66)\n    at emitTwo (events.js:106:13)\n    at Server.emit (events.js:191:7)\n    at HTTPParser.parserOnIncoming [as onIncoming] (_http_server.js:546:12)\n    at HTTPParser.parserOnHeadersComplete (_http_common.js:99:23)","level":"info","timestamp":"2017-12-07T03:17:05.874Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T03:17:05.880Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T03:17:05.883Z"}
{"level":"info","message":"log the features here","timestamp":"2017-12-07T03:17:05.884Z"}
{"level":"info","message":"__REQUEST_ERROR","timestamp":"2017-12-07T03:17:05.884Z"}
{"message":"request.url.query.toString is not a function","stack":"TypeError: request.url.query.toString is not a function\n    at Promise (/home/ncarignan/cf/401/lab-assignments/08-09-vanilla-rest-server/lab-nicholasc/lib/request-parser.js:19:35)\n    at Object.<anonymous>.requestParser.parse.request [as parse] (/home/ncarignan/cf/401/lab-assignments/08-09-vanilla-rest-server/lab-nicholasc/lib/request-parser.js:13:10)\n    at Server.Object.<anonymous>.router.route (/home/ncarignan/cf/401/lab-assignments/08-09-vanilla-rest-server/lab-nicholasc/lib/router.js:43:66)\n    at emitTwo (events.js:106:13)\n    at Server.emit (events.js:191:7)\n    at HTTPParser.parserOnIncoming [as onIncoming] (_http_server.js:546:12)\n    at HTTPParser.parserOnHeadersComplete (_http_common.js:99:23)","level":"info","timestamp":"2017-12-07T03:17:05.884Z"}
{"level":"info","message":"adding a POST url and callbacck","timestamp":"2017-12-07T03:22:57.944Z"}
{"level":"info","message":"/api/notes","timestamp":"2017-12-07T03:22:57.945Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[2]++;cov_yvt6rhqjy.s[16]++;\n  //here, i know that request has been pre-parsed- request parser in router took care of it\n  console.log('note-router.js line 29'); /* istanbul ignore next */cov_yvt6rhqjy.s[17]++;\n  if (!request.body) {/* istanbul ignore next */cov_yvt6rhqjy.b[0][0]++;cov_yvt6rhqjy.s[18]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[0][1]++;}\n  // if(!request.body.title){\n  //   sendStatus(response, 400, 'title not found');\n  //   return;\n  // }\n  // if(!request.body.content){\n  //   sendStatus(response, 400, 'content not found');\n  //   return;\n  // }\n\n  let note = /* istanbul ignore next */(cov_yvt6rhqjy.s[20]++, new Note(request.body.title, request.body.content)); /* istanbul ignore next */cov_yvt6rhqjy.s[21]++;\n  notes.push(note); /* istanbul ignore next */cov_yvt6rhqjy.s[22]++;\n  sendJSON(response, 200, notes);\n}","timestamp":"2017-12-07T03:22:57.945Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T03:22:57.992Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T03:22:58.007Z"}
{"level":"info","message":"log the features here","timestamp":"2017-12-07T03:22:58.007Z"}
{"level":"info","message":"__REQUEST_ERROR","timestamp":"2017-12-07T03:22:58.008Z"}
{"message":"Cannot read property 'indexOf' of undefined","stack":"TypeError: Cannot read property 'indexOf' of undefined\n    at IncomingMessage.request.on.error (/home/ncarignan/cf/401/lab-assignments/08-09-vanilla-rest-server/lab-nicholasc/lib/request-parser.js:28:44)\n    at emitNone (events.js:86:13)\n    at IncomingMessage.emit (events.js:185:7)\n    at endReadableNT (_stream_readable.js:974:12)\n    at _combinedTickCallback (internal/process/next_tick.js:80:11)\n    at process._tickCallback (internal/process/next_tick.js:104:9)","level":"info","timestamp":"2017-12-07T03:22:58.008Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T03:22:58.014Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T03:22:58.017Z"}
{"level":"info","message":"log the features here","timestamp":"2017-12-07T03:22:58.017Z"}
{"level":"info","message":"__REQUEST_ERROR","timestamp":"2017-12-07T03:22:58.018Z"}
{"message":"Cannot read property 'indexOf' of undefined","stack":"TypeError: Cannot read property 'indexOf' of undefined\n    at IncomingMessage.request.on.error (/home/ncarignan/cf/401/lab-assignments/08-09-vanilla-rest-server/lab-nicholasc/lib/request-parser.js:28:44)\n    at emitNone (events.js:86:13)\n    at IncomingMessage.emit (events.js:185:7)\n    at endReadableNT (_stream_readable.js:974:12)\n    at _combinedTickCallback (internal/process/next_tick.js:80:11)\n    at process._tickCallback (internal/process/next_tick.js:104:9)","level":"info","timestamp":"2017-12-07T03:22:58.018Z"}
{"level":"info","message":"adding a POST url and callbacck","timestamp":"2017-12-07T03:23:22.360Z"}
{"level":"info","message":"/api/notes","timestamp":"2017-12-07T03:23:22.361Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[2]++;cov_yvt6rhqjy.s[16]++;\n  //here, i know that request has been pre-parsed- request parser in router took care of it\n  console.log('note-router.js line 29'); /* istanbul ignore next */cov_yvt6rhqjy.s[17]++;\n  if (!request.body) {/* istanbul ignore next */cov_yvt6rhqjy.b[0][0]++;cov_yvt6rhqjy.s[18]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[0][1]++;}\n  // if(!request.body.title){\n  //   sendStatus(response, 400, 'title not found');\n  //   return;\n  // }\n  // if(!request.body.content){\n  //   sendStatus(response, 400, 'content not found');\n  //   return;\n  // }\n\n  let note = /* istanbul ignore next */(cov_yvt6rhqjy.s[20]++, new Note(request.body.title, request.body.content)); /* istanbul ignore next */cov_yvt6rhqjy.s[21]++;\n  notes.push(note); /* istanbul ignore next */cov_yvt6rhqjy.s[22]++;\n  sendJSON(response, 200, notes);\n}","timestamp":"2017-12-07T03:23:22.361Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T03:23:22.404Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T03:23:22.419Z"}
{"level":"info","message":"log the features here","timestamp":"2017-12-07T03:23:22.419Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T03:23:22.420Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[2]++;cov_yvt6rhqjy.s[16]++;\n  //here, i know that request has been pre-parsed- request parser in router took care of it\n  console.log('note-router.js line 29'); /* istanbul ignore next */cov_yvt6rhqjy.s[17]++;\n  if (!request.body) {/* istanbul ignore next */cov_yvt6rhqjy.b[0][0]++;cov_yvt6rhqjy.s[18]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[0][1]++;}\n  // if(!request.body.title){\n  //   sendStatus(response, 400, 'title not found');\n  //   return;\n  // }\n  // if(!request.body.content){\n  //   sendStatus(response, 400, 'content not found');\n  //   return;\n  // }\n\n  let note = /* istanbul ignore next */(cov_yvt6rhqjy.s[20]++, new Note(request.body.title, request.body.content)); /* istanbul ignore next */cov_yvt6rhqjy.s[21]++;\n  notes.push(note); /* istanbul ignore next */cov_yvt6rhqjy.s[22]++;\n  sendJSON(response, 200, notes);\n}","timestamp":"2017-12-07T03:23:22.420Z"}
{"level":"info","message":"responding with a status code of 200 and the following data","timestamp":"2017-12-07T03:23:22.421Z"}
[{"id":"fa9c2e50-dafd-11e7-8ad6-a1e1cfdfce3c","timestamp":"2017-12-07T03:23:22.421Z","title":"cats","content":"Gregor and the hound"}]
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T03:23:22.435Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T03:23:22.438Z"}
{"level":"info","message":"log the features here","timestamp":"2017-12-07T03:23:22.439Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T03:23:22.439Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[2]++;cov_yvt6rhqjy.s[16]++;\n  //here, i know that request has been pre-parsed- request parser in router took care of it\n  console.log('note-router.js line 29'); /* istanbul ignore next */cov_yvt6rhqjy.s[17]++;\n  if (!request.body) {/* istanbul ignore next */cov_yvt6rhqjy.b[0][0]++;cov_yvt6rhqjy.s[18]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[0][1]++;}\n  // if(!request.body.title){\n  //   sendStatus(response, 400, 'title not found');\n  //   return;\n  // }\n  // if(!request.body.content){\n  //   sendStatus(response, 400, 'content not found');\n  //   return;\n  // }\n\n  let note = /* istanbul ignore next */(cov_yvt6rhqjy.s[20]++, new Note(request.body.title, request.body.content)); /* istanbul ignore next */cov_yvt6rhqjy.s[21]++;\n  notes.push(note); /* istanbul ignore next */cov_yvt6rhqjy.s[22]++;\n  sendJSON(response, 200, notes);\n}","timestamp":"2017-12-07T03:23:22.439Z"}
{"level":"info","message":"responding with a status code of 200 and the following data","timestamp":"2017-12-07T03:23:22.439Z"}
[{"id":"fa9c2e50-dafd-11e7-8ad6-a1e1cfdfce3c","timestamp":"2017-12-07T03:23:22.421Z","title":"cats","content":"Gregor and the hound"},{"id":"fa9eed70-dafd-11e7-8ad6-a1e1cfdfce3c","timestamp":"2017-12-07T03:23:22.439Z","title":"cats","content":"Gregor and The Hound"}]
{"level":"info","message":"adding a POST url and callbacck","timestamp":"2017-12-07T03:24:42.207Z"}
{"level":"info","message":"/api/notes","timestamp":"2017-12-07T03:24:42.208Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[2]++;cov_yvt6rhqjy.s[16]++;\n  //here, i know that request has been pre-parsed- request parser in router took care of it\n  console.log('note-router.js line 29'); /* istanbul ignore next */cov_yvt6rhqjy.s[17]++;\n  if (!request.body) {/* istanbul ignore next */cov_yvt6rhqjy.b[0][0]++;cov_yvt6rhqjy.s[18]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[0][1]++;}\n  // if(!request.body.title){\n  //   sendStatus(response, 400, 'title not found');\n  //   return;\n  // }\n  // if(!request.body.content){\n  //   sendStatus(response, 400, 'content not found');\n  //   return;\n  // }\n\n  let note = /* istanbul ignore next */(cov_yvt6rhqjy.s[20]++, new Note(request.body.title, request.body.content)); /* istanbul ignore next */cov_yvt6rhqjy.s[21]++;\n  notes.push(note); /* istanbul ignore next */cov_yvt6rhqjy.s[22]++;\n  sendJSON(response, 200, notes);\n}","timestamp":"2017-12-07T03:24:42.208Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T03:24:42.252Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T03:24:42.266Z"}
{"level":"info","message":"log the features here","timestamp":"2017-12-07T03:24:42.266Z"}
{"level":"info","message":"__REQUEST_ERROR","timestamp":"2017-12-07T03:24:42.267Z"}
{"message":"Cannot read property 'indexOf' of undefined","stack":"TypeError: Cannot read property 'indexOf' of undefined\n    at IncomingMessage.request.on.error (/home/ncarignan/cf/401/lab-assignments/08-09-vanilla-rest-server/lab-nicholasc/lib/request-parser.js:28:44)\n    at emitNone (events.js:86:13)\n    at IncomingMessage.emit (events.js:185:7)\n    at endReadableNT (_stream_readable.js:974:12)\n    at _combinedTickCallback (internal/process/next_tick.js:80:11)\n    at process._tickCallback (internal/process/next_tick.js:104:9)","level":"info","timestamp":"2017-12-07T03:24:42.267Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T03:24:42.274Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T03:24:42.277Z"}
{"level":"info","message":"log the features here","timestamp":"2017-12-07T03:24:42.277Z"}
{"level":"info","message":"__REQUEST_ERROR","timestamp":"2017-12-07T03:24:42.277Z"}
{"message":"Cannot read property 'indexOf' of undefined","stack":"TypeError: Cannot read property 'indexOf' of undefined\n    at IncomingMessage.request.on.error (/home/ncarignan/cf/401/lab-assignments/08-09-vanilla-rest-server/lab-nicholasc/lib/request-parser.js:28:44)\n    at emitNone (events.js:86:13)\n    at IncomingMessage.emit (events.js:185:7)\n    at endReadableNT (_stream_readable.js:974:12)\n    at _combinedTickCallback (internal/process/next_tick.js:80:11)\n    at process._tickCallback (internal/process/next_tick.js:104:9)","level":"info","timestamp":"2017-12-07T03:24:42.277Z"}
{"level":"info","message":"adding a POST url and callbacck","timestamp":"2017-12-07T03:26:15.103Z"}
{"level":"info","message":"/api/notes","timestamp":"2017-12-07T03:26:15.104Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[2]++;cov_yvt6rhqjy.s[16]++;\n  //here, i know that request has been pre-parsed- request parser in router took care of it\n  console.log('note-router.js line 29'); /* istanbul ignore next */cov_yvt6rhqjy.s[17]++;\n  if (!request.body) {/* istanbul ignore next */cov_yvt6rhqjy.b[0][0]++;cov_yvt6rhqjy.s[18]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[0][1]++;}\n  // if(!request.body.title){\n  //   sendStatus(response, 400, 'title not found');\n  //   return;\n  // }\n  // if(!request.body.content){\n  //   sendStatus(response, 400, 'content not found');\n  //   return;\n  // }\n\n  let note = /* istanbul ignore next */(cov_yvt6rhqjy.s[20]++, new Note(request.body.title, request.body.content)); /* istanbul ignore next */cov_yvt6rhqjy.s[21]++;\n  notes.push(note); /* istanbul ignore next */cov_yvt6rhqjy.s[22]++;\n  sendJSON(response, 200, notes);\n}","timestamp":"2017-12-07T03:26:15.104Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T03:26:15.151Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T03:26:15.165Z"}
{"level":"info","message":"log the features here","timestamp":"2017-12-07T03:26:15.165Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T03:26:15.166Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[2]++;cov_yvt6rhqjy.s[16]++;\n  //here, i know that request has been pre-parsed- request parser in router took care of it\n  console.log('note-router.js line 29'); /* istanbul ignore next */cov_yvt6rhqjy.s[17]++;\n  if (!request.body) {/* istanbul ignore next */cov_yvt6rhqjy.b[0][0]++;cov_yvt6rhqjy.s[18]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[0][1]++;}\n  // if(!request.body.title){\n  //   sendStatus(response, 400, 'title not found');\n  //   return;\n  // }\n  // if(!request.body.content){\n  //   sendStatus(response, 400, 'content not found');\n  //   return;\n  // }\n\n  let note = /* istanbul ignore next */(cov_yvt6rhqjy.s[20]++, new Note(request.body.title, request.body.content)); /* istanbul ignore next */cov_yvt6rhqjy.s[21]++;\n  notes.push(note); /* istanbul ignore next */cov_yvt6rhqjy.s[22]++;\n  sendJSON(response, 200, notes);\n}","timestamp":"2017-12-07T03:26:15.166Z"}
{"level":"info","message":"responding with a status code of 200 and the following data","timestamp":"2017-12-07T03:26:15.167Z"}
[{"id":"6192f9e0-dafe-11e7-b54e-0b0c3cb180dc","timestamp":"2017-12-07T03:26:15.167Z","title":"cats","content":"Gregor and the hound"}]
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T03:26:15.177Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T03:26:15.180Z"}
{"level":"info","message":"log the features here","timestamp":"2017-12-07T03:26:15.180Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T03:26:15.181Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[2]++;cov_yvt6rhqjy.s[16]++;\n  //here, i know that request has been pre-parsed- request parser in router took care of it\n  console.log('note-router.js line 29'); /* istanbul ignore next */cov_yvt6rhqjy.s[17]++;\n  if (!request.body) {/* istanbul ignore next */cov_yvt6rhqjy.b[0][0]++;cov_yvt6rhqjy.s[18]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[0][1]++;}\n  // if(!request.body.title){\n  //   sendStatus(response, 400, 'title not found');\n  //   return;\n  // }\n  // if(!request.body.content){\n  //   sendStatus(response, 400, 'content not found');\n  //   return;\n  // }\n\n  let note = /* istanbul ignore next */(cov_yvt6rhqjy.s[20]++, new Note(request.body.title, request.body.content)); /* istanbul ignore next */cov_yvt6rhqjy.s[21]++;\n  notes.push(note); /* istanbul ignore next */cov_yvt6rhqjy.s[22]++;\n  sendJSON(response, 200, notes);\n}","timestamp":"2017-12-07T03:26:15.181Z"}
{"level":"info","message":"responding with a status code of 200 and the following data","timestamp":"2017-12-07T03:26:15.181Z"}
[{"id":"6192f9e0-dafe-11e7-b54e-0b0c3cb180dc","timestamp":"2017-12-07T03:26:15.167Z","title":"cats","content":"Gregor and the hound"},{"id":"619543d0-dafe-11e7-b54e-0b0c3cb180dc","timestamp":"2017-12-07T03:26:15.181Z","title":"cats","content":"Gregor and The Hound"}]
{"level":"info","message":"adding a POST url and callbacck","timestamp":"2017-12-07T03:29:05.824Z"}
{"level":"info","message":"/api/notes","timestamp":"2017-12-07T03:29:05.825Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[2]++;cov_yvt6rhqjy.s[16]++;\n  //here, i know that request has been pre-parsed- request parser in router took care of it\n  console.log('note-router.js line 29'); /* istanbul ignore next */cov_yvt6rhqjy.s[17]++;\n  if (!request.body) {/* istanbul ignore next */cov_yvt6rhqjy.b[0][0]++;cov_yvt6rhqjy.s[18]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[0][1]++;}\n  // if(!request.body.title){\n  //   sendStatus(response, 400, 'title not found');\n  //   return;\n  // }\n  // if(!request.body.content){\n  //   sendStatus(response, 400, 'content not found');\n  //   return;\n  // }\n\n  let note = /* istanbul ignore next */(cov_yvt6rhqjy.s[20]++, new Note(request.body.title, request.body.content)); /* istanbul ignore next */cov_yvt6rhqjy.s[21]++;\n  notes.push(note); /* istanbul ignore next */cov_yvt6rhqjy.s[22]++;\n  sendJSON(response, 200, notes);\n}","timestamp":"2017-12-07T03:29:05.825Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T03:29:05.873Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T03:29:05.889Z"}
{"level":"info","message":"log the features here","timestamp":"2017-12-07T03:29:05.889Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T03:29:05.890Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[2]++;cov_yvt6rhqjy.s[16]++;\n  //here, i know that request has been pre-parsed- request parser in router took care of it\n  console.log('note-router.js line 29'); /* istanbul ignore next */cov_yvt6rhqjy.s[17]++;\n  if (!request.body) {/* istanbul ignore next */cov_yvt6rhqjy.b[0][0]++;cov_yvt6rhqjy.s[18]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[0][1]++;}\n  // if(!request.body.title){\n  //   sendStatus(response, 400, 'title not found');\n  //   return;\n  // }\n  // if(!request.body.content){\n  //   sendStatus(response, 400, 'content not found');\n  //   return;\n  // }\n\n  let note = /* istanbul ignore next */(cov_yvt6rhqjy.s[20]++, new Note(request.body.title, request.body.content)); /* istanbul ignore next */cov_yvt6rhqjy.s[21]++;\n  notes.push(note); /* istanbul ignore next */cov_yvt6rhqjy.s[22]++;\n  sendJSON(response, 200, notes);\n}","timestamp":"2017-12-07T03:29:05.890Z"}
{"level":"info","message":"responding with a status code of 200 and the following data","timestamp":"2017-12-07T03:29:05.891Z"}
[{"id":"c7556420-dafe-11e7-9062-538e774cb55b","timestamp":"2017-12-07T03:29:05.891Z","title":"cats","content":"Gregor and the hound"}]
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T03:29:05.901Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T03:29:05.903Z"}
{"level":"info","message":"log the features here","timestamp":"2017-12-07T03:29:05.904Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T03:29:05.904Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[2]++;cov_yvt6rhqjy.s[16]++;\n  //here, i know that request has been pre-parsed- request parser in router took care of it\n  console.log('note-router.js line 29'); /* istanbul ignore next */cov_yvt6rhqjy.s[17]++;\n  if (!request.body) {/* istanbul ignore next */cov_yvt6rhqjy.b[0][0]++;cov_yvt6rhqjy.s[18]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[0][1]++;}\n  // if(!request.body.title){\n  //   sendStatus(response, 400, 'title not found');\n  //   return;\n  // }\n  // if(!request.body.content){\n  //   sendStatus(response, 400, 'content not found');\n  //   return;\n  // }\n\n  let note = /* istanbul ignore next */(cov_yvt6rhqjy.s[20]++, new Note(request.body.title, request.body.content)); /* istanbul ignore next */cov_yvt6rhqjy.s[21]++;\n  notes.push(note); /* istanbul ignore next */cov_yvt6rhqjy.s[22]++;\n  sendJSON(response, 200, notes);\n}","timestamp":"2017-12-07T03:29:05.904Z"}
{"level":"info","message":"responding with a status code of 200 and the following data","timestamp":"2017-12-07T03:29:05.904Z"}
[{"id":"c7556420-dafe-11e7-9062-538e774cb55b","timestamp":"2017-12-07T03:29:05.891Z","title":"cats","content":"Gregor and the hound"},{"id":"c7578700-dafe-11e7-9062-538e774cb55b","timestamp":"2017-12-07T03:29:05.904Z","title":"cats","content":"Gregor and The Hound"}]
{"level":"info","message":"adding a POST url and callbacck","timestamp":"2017-12-07T03:30:06.338Z"}
{"level":"info","message":"/api/notes","timestamp":"2017-12-07T03:30:06.339Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[2]++;cov_yvt6rhqjy.s[16]++;\n  //here, i know that request has been pre-parsed- request parser in router took care of it\n  console.log('note-router.js line 29'); /* istanbul ignore next */cov_yvt6rhqjy.s[17]++;\n  if (!request.body) {/* istanbul ignore next */cov_yvt6rhqjy.b[0][0]++;cov_yvt6rhqjy.s[18]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[0][1]++;}\n  // if(!request.body.title){\n  //   sendStatus(response, 400, 'title not found');\n  //   return;\n  // }\n  // if(!request.body.content){\n  //   sendStatus(response, 400, 'content not found');\n  //   return;\n  // }\n\n  let note = /* istanbul ignore next */(cov_yvt6rhqjy.s[20]++, new Note(request.body.title, request.body.content)); /* istanbul ignore next */cov_yvt6rhqjy.s[21]++;\n  notes.push(note); /* istanbul ignore next */cov_yvt6rhqjy.s[22]++;\n  sendJSON(response, 200, notes);\n}","timestamp":"2017-12-07T03:30:06.339Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T03:30:06.388Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T03:30:06.403Z"}
{"level":"info","message":"log the features here","timestamp":"2017-12-07T03:30:06.403Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T03:30:06.404Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[2]++;cov_yvt6rhqjy.s[16]++;\n  //here, i know that request has been pre-parsed- request parser in router took care of it\n  console.log('note-router.js line 29'); /* istanbul ignore next */cov_yvt6rhqjy.s[17]++;\n  if (!request.body) {/* istanbul ignore next */cov_yvt6rhqjy.b[0][0]++;cov_yvt6rhqjy.s[18]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[0][1]++;}\n  // if(!request.body.title){\n  //   sendStatus(response, 400, 'title not found');\n  //   return;\n  // }\n  // if(!request.body.content){\n  //   sendStatus(response, 400, 'content not found');\n  //   return;\n  // }\n\n  let note = /* istanbul ignore next */(cov_yvt6rhqjy.s[20]++, new Note(request.body.title, request.body.content)); /* istanbul ignore next */cov_yvt6rhqjy.s[21]++;\n  notes.push(note); /* istanbul ignore next */cov_yvt6rhqjy.s[22]++;\n  sendJSON(response, 200, notes);\n}","timestamp":"2017-12-07T03:30:06.404Z"}
{"level":"info","message":"responding with a status code of 200 and the following data","timestamp":"2017-12-07T03:30:06.405Z"}
[{"id":"eb671840-dafe-11e7-991e-4bc0369677f3","timestamp":"2017-12-07T03:30:06.405Z","title":"cats","content":"Gregor and the hound"}]
{"level":"info","message":"adding a POST url and callbacck","timestamp":"2017-12-07T03:30:25.712Z"}
{"level":"info","message":"/api/notes","timestamp":"2017-12-07T03:30:25.713Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[2]++;cov_yvt6rhqjy.s[16]++;\n  //here, i know that request has been pre-parsed- request parser in router took care of it\n  console.log('note-router.js line 29'); /* istanbul ignore next */cov_yvt6rhqjy.s[17]++;\n  if (!request.body) {/* istanbul ignore next */cov_yvt6rhqjy.b[0][0]++;cov_yvt6rhqjy.s[18]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[0][1]++;}\n  // if(!request.body.title){\n  //   sendStatus(response, 400, 'title not found');\n  //   return;\n  // }\n  // if(!request.body.content){\n  //   sendStatus(response, 400, 'content not found');\n  //   return;\n  // }\n\n  let note = /* istanbul ignore next */(cov_yvt6rhqjy.s[20]++, new Note(request.body.title, request.body.content)); /* istanbul ignore next */cov_yvt6rhqjy.s[21]++;\n  notes.push(note); /* istanbul ignore next */cov_yvt6rhqjy.s[22]++;\n  sendJSON(response, 200, notes);\n}","timestamp":"2017-12-07T03:30:25.713Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T03:30:25.757Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T03:30:25.771Z"}
{"level":"info","message":"log the features here","timestamp":"2017-12-07T03:30:25.771Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T03:30:25.772Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[2]++;cov_yvt6rhqjy.s[16]++;\n  //here, i know that request has been pre-parsed- request parser in router took care of it\n  console.log('note-router.js line 29'); /* istanbul ignore next */cov_yvt6rhqjy.s[17]++;\n  if (!request.body) {/* istanbul ignore next */cov_yvt6rhqjy.b[0][0]++;cov_yvt6rhqjy.s[18]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[0][1]++;}\n  // if(!request.body.title){\n  //   sendStatus(response, 400, 'title not found');\n  //   return;\n  // }\n  // if(!request.body.content){\n  //   sendStatus(response, 400, 'content not found');\n  //   return;\n  // }\n\n  let note = /* istanbul ignore next */(cov_yvt6rhqjy.s[20]++, new Note(request.body.title, request.body.content)); /* istanbul ignore next */cov_yvt6rhqjy.s[21]++;\n  notes.push(note); /* istanbul ignore next */cov_yvt6rhqjy.s[22]++;\n  sendJSON(response, 200, notes);\n}","timestamp":"2017-12-07T03:30:25.772Z"}
{"level":"info","message":"responding with a status code of 200 and the following data","timestamp":"2017-12-07T03:30:25.773Z"}
[{"id":"f6f291d0-dafe-11e7-b70a-571fb38b538f","timestamp":"2017-12-07T03:30:25.773Z","title":"cats","content":"Gregor and the hound"}]
{"level":"info","message":"adding a POST url and callbacck","timestamp":"2017-12-07T03:31:53.871Z"}
{"level":"info","message":"/api/notes","timestamp":"2017-12-07T03:31:53.872Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[2]++;cov_yvt6rhqjy.s[16]++;\n  //here, i know that request has been pre-parsed- request parser in router took care of it\n  console.log('note-router.js line 29'); /* istanbul ignore next */cov_yvt6rhqjy.s[17]++;\n  if (!request.body) {/* istanbul ignore next */cov_yvt6rhqjy.b[0][0]++;cov_yvt6rhqjy.s[18]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[0][1]++;}\n  // if(!request.body.title){\n  //   sendStatus(response, 400, 'title not found');\n  //   return;\n  // }\n  // if(!request.body.content){\n  //   sendStatus(response, 400, 'content not found');\n  //   return;\n  // }\n\n  let note = /* istanbul ignore next */(cov_yvt6rhqjy.s[20]++, new Note(request.body.title, request.body.content)); /* istanbul ignore next */cov_yvt6rhqjy.s[21]++;\n  notes.push(note); /* istanbul ignore next */cov_yvt6rhqjy.s[22]++;\n  sendJSON(response, 200, notes);\n}","timestamp":"2017-12-07T03:31:53.872Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T03:31:53.918Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T03:31:53.932Z"}
{"level":"info","message":"log the features here","timestamp":"2017-12-07T03:31:53.932Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T03:31:53.933Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[2]++;cov_yvt6rhqjy.s[16]++;\n  //here, i know that request has been pre-parsed- request parser in router took care of it\n  console.log('note-router.js line 29'); /* istanbul ignore next */cov_yvt6rhqjy.s[17]++;\n  if (!request.body) {/* istanbul ignore next */cov_yvt6rhqjy.b[0][0]++;cov_yvt6rhqjy.s[18]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[0][1]++;}\n  // if(!request.body.title){\n  //   sendStatus(response, 400, 'title not found');\n  //   return;\n  // }\n  // if(!request.body.content){\n  //   sendStatus(response, 400, 'content not found');\n  //   return;\n  // }\n\n  let note = /* istanbul ignore next */(cov_yvt6rhqjy.s[20]++, new Note(request.body.title, request.body.content)); /* istanbul ignore next */cov_yvt6rhqjy.s[21]++;\n  notes.push(note); /* istanbul ignore next */cov_yvt6rhqjy.s[22]++;\n  sendJSON(response, 200, notes);\n}","timestamp":"2017-12-07T03:31:53.933Z"}
{"level":"info","message":"responding with a status code of 200 and the following data","timestamp":"2017-12-07T03:31:53.934Z"}
[{"id":"2b7eb7d0-daff-11e7-8c63-774df42dc69f","timestamp":"2017-12-07T03:31:53.934Z","title":"cats","content":"Gregor and the hound"}]
{"level":"info","message":"adding a POST url and callbacck","timestamp":"2017-12-07T03:32:31.741Z"}
{"level":"info","message":"/api/notes","timestamp":"2017-12-07T03:32:31.742Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[2]++;cov_yvt6rhqjy.s[16]++;\n  //here, i know that request has been pre-parsed- request parser in router took care of it\n  console.log('note-router.js line 29'); /* istanbul ignore next */cov_yvt6rhqjy.s[17]++;\n  if (!request.body) {/* istanbul ignore next */cov_yvt6rhqjy.b[0][0]++;cov_yvt6rhqjy.s[18]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[0][1]++;}\n  // if(!request.body.title){\n  //   sendStatus(response, 400, 'title not found');\n  //   return;\n  // }\n  // if(!request.body.content){\n  //   sendStatus(response, 400, 'content not found');\n  //   return;\n  // }\n\n  let note = /* istanbul ignore next */(cov_yvt6rhqjy.s[20]++, new Note(request.body.title, request.body.content)); /* istanbul ignore next */cov_yvt6rhqjy.s[21]++;\n  notes.push(note); /* istanbul ignore next */cov_yvt6rhqjy.s[22]++;\n  sendJSON(response, 200, notes);\n}","timestamp":"2017-12-07T03:32:31.742Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T03:32:31.785Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T03:32:31.799Z"}
{"level":"info","message":"log the features here","timestamp":"2017-12-07T03:32:31.799Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T03:32:31.801Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[2]++;cov_yvt6rhqjy.s[16]++;\n  //here, i know that request has been pre-parsed- request parser in router took care of it\n  console.log('note-router.js line 29'); /* istanbul ignore next */cov_yvt6rhqjy.s[17]++;\n  if (!request.body) {/* istanbul ignore next */cov_yvt6rhqjy.b[0][0]++;cov_yvt6rhqjy.s[18]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[0][1]++;}\n  // if(!request.body.title){\n  //   sendStatus(response, 400, 'title not found');\n  //   return;\n  // }\n  // if(!request.body.content){\n  //   sendStatus(response, 400, 'content not found');\n  //   return;\n  // }\n\n  let note = /* istanbul ignore next */(cov_yvt6rhqjy.s[20]++, new Note(request.body.title, request.body.content)); /* istanbul ignore next */cov_yvt6rhqjy.s[21]++;\n  notes.push(note); /* istanbul ignore next */cov_yvt6rhqjy.s[22]++;\n  sendJSON(response, 200, notes);\n}","timestamp":"2017-12-07T03:32:31.801Z"}
{"level":"info","message":"responding with a status code of 200 and the following data","timestamp":"2017-12-07T03:32:31.801Z"}
[{"id":"4210ea90-daff-11e7-b750-b79f52636e64","timestamp":"2017-12-07T03:32:31.801Z","title":"cats","content":"Gregor and the hound"}]
{"level":"info","message":"adding a POST url and callbacck","timestamp":"2017-12-07T03:33:01.393Z"}
{"level":"info","message":"/api/notes","timestamp":"2017-12-07T03:33:01.394Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[2]++;cov_yvt6rhqjy.s[16]++;\n  //here, i know that request has been pre-parsed- request parser in router took care of it\n  console.log('note-router.js line 29'); /* istanbul ignore next */cov_yvt6rhqjy.s[17]++;\n  if (!request.body) {/* istanbul ignore next */cov_yvt6rhqjy.b[0][0]++;cov_yvt6rhqjy.s[18]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[0][1]++;}\n  // if(!request.body.title){\n  //   sendStatus(response, 400, 'title not found');\n  //   return;\n  // }\n  // if(!request.body.content){\n  //   sendStatus(response, 400, 'content not found');\n  //   return;\n  // }\n\n  let note = /* istanbul ignore next */(cov_yvt6rhqjy.s[20]++, new Note(request.body.title, request.body.content)); /* istanbul ignore next */cov_yvt6rhqjy.s[21]++;\n  notes.push(note); /* istanbul ignore next */cov_yvt6rhqjy.s[22]++;\n  sendJSON(response, 200, notes);\n}","timestamp":"2017-12-07T03:33:01.394Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T03:33:01.437Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T03:33:01.451Z"}
{"level":"info","message":"log the features here","timestamp":"2017-12-07T03:33:01.451Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T03:33:01.452Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[2]++;cov_yvt6rhqjy.s[16]++;\n  //here, i know that request has been pre-parsed- request parser in router took care of it\n  console.log('note-router.js line 29'); /* istanbul ignore next */cov_yvt6rhqjy.s[17]++;\n  if (!request.body) {/* istanbul ignore next */cov_yvt6rhqjy.b[0][0]++;cov_yvt6rhqjy.s[18]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[0][1]++;}\n  // if(!request.body.title){\n  //   sendStatus(response, 400, 'title not found');\n  //   return;\n  // }\n  // if(!request.body.content){\n  //   sendStatus(response, 400, 'content not found');\n  //   return;\n  // }\n\n  let note = /* istanbul ignore next */(cov_yvt6rhqjy.s[20]++, new Note(request.body.title, request.body.content)); /* istanbul ignore next */cov_yvt6rhqjy.s[21]++;\n  notes.push(note); /* istanbul ignore next */cov_yvt6rhqjy.s[22]++;\n  sendJSON(response, 200, notes);\n}","timestamp":"2017-12-07T03:33:01.452Z"}
{"level":"info","message":"responding with a status code of 200 and the following data","timestamp":"2017-12-07T03:33:01.453Z"}
[{"id":"53bd73d0-daff-11e7-92d1-158ad681d8bc","timestamp":"2017-12-07T03:33:01.453Z","title":"cats","content":"Gregor and the hound"}]
{"level":"info","message":"adding a POST url and callbacck","timestamp":"2017-12-07T03:33:19.019Z"}
{"level":"info","message":"/api/notes","timestamp":"2017-12-07T03:33:19.020Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[2]++;cov_yvt6rhqjy.s[16]++;\n  //here, i know that request has been pre-parsed- request parser in router took care of it\n  console.log('note-router.js line 29'); /* istanbul ignore next */cov_yvt6rhqjy.s[17]++;\n  if (!request.body) {/* istanbul ignore next */cov_yvt6rhqjy.b[0][0]++;cov_yvt6rhqjy.s[18]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[0][1]++;}\n  // if(!request.body.title){\n  //   sendStatus(response, 400, 'title not found');\n  //   return;\n  // }\n  // if(!request.body.content){\n  //   sendStatus(response, 400, 'content not found');\n  //   return;\n  // }\n\n  let note = /* istanbul ignore next */(cov_yvt6rhqjy.s[20]++, new Note(request.body.title, request.body.content)); /* istanbul ignore next */cov_yvt6rhqjy.s[21]++;\n  notes.push(note); /* istanbul ignore next */cov_yvt6rhqjy.s[22]++;\n  sendJSON(response, 200, notes);\n}","timestamp":"2017-12-07T03:33:19.020Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T03:33:19.064Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T03:33:19.078Z"}
{"level":"info","message":"log the features here","timestamp":"2017-12-07T03:33:19.078Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T03:33:19.079Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[2]++;cov_yvt6rhqjy.s[16]++;\n  //here, i know that request has been pre-parsed- request parser in router took care of it\n  console.log('note-router.js line 29'); /* istanbul ignore next */cov_yvt6rhqjy.s[17]++;\n  if (!request.body) {/* istanbul ignore next */cov_yvt6rhqjy.b[0][0]++;cov_yvt6rhqjy.s[18]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[0][1]++;}\n  // if(!request.body.title){\n  //   sendStatus(response, 400, 'title not found');\n  //   return;\n  // }\n  // if(!request.body.content){\n  //   sendStatus(response, 400, 'content not found');\n  //   return;\n  // }\n\n  let note = /* istanbul ignore next */(cov_yvt6rhqjy.s[20]++, new Note(request.body.title, request.body.content)); /* istanbul ignore next */cov_yvt6rhqjy.s[21]++;\n  notes.push(note); /* istanbul ignore next */cov_yvt6rhqjy.s[22]++;\n  sendJSON(response, 200, notes);\n}","timestamp":"2017-12-07T03:33:19.080Z"}
{"level":"info","message":"responding with a status code of 200 and the following data","timestamp":"2017-12-07T03:33:19.080Z"}
[{"id":"5e3f1e80-daff-11e7-a944-e562fb4513e6","timestamp":"2017-12-07T03:33:19.080Z","title":"cats","content":"Gregor and the hound"}]
{"level":"info","message":"adding a POST url and callbacck","timestamp":"2017-12-07T03:33:42.019Z"}
{"level":"info","message":"/api/notes","timestamp":"2017-12-07T03:33:42.020Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[2]++;cov_yvt6rhqjy.s[16]++;\n  //here, i know that request has been pre-parsed- request parser in router took care of it\n  console.log('note-router.js line 29'); /* istanbul ignore next */cov_yvt6rhqjy.s[17]++;\n  if (!request.body) {/* istanbul ignore next */cov_yvt6rhqjy.b[0][0]++;cov_yvt6rhqjy.s[18]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[0][1]++;}\n  // if(!request.body.title){\n  //   sendStatus(response, 400, 'title not found');\n  //   return;\n  // }\n  // if(!request.body.content){\n  //   sendStatus(response, 400, 'content not found');\n  //   return;\n  // }\n\n  let note = /* istanbul ignore next */(cov_yvt6rhqjy.s[20]++, new Note(request.body.title, request.body.content)); /* istanbul ignore next */cov_yvt6rhqjy.s[21]++;\n  notes.push(note); /* istanbul ignore next */cov_yvt6rhqjy.s[22]++;\n  sendJSON(response, 200, notes);\n}","timestamp":"2017-12-07T03:33:42.020Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T03:33:42.071Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T03:33:42.086Z"}
{"level":"info","message":"log the features here","timestamp":"2017-12-07T03:33:42.086Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T03:33:42.087Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[2]++;cov_yvt6rhqjy.s[16]++;\n  //here, i know that request has been pre-parsed- request parser in router took care of it\n  console.log('note-router.js line 29'); /* istanbul ignore next */cov_yvt6rhqjy.s[17]++;\n  if (!request.body) {/* istanbul ignore next */cov_yvt6rhqjy.b[0][0]++;cov_yvt6rhqjy.s[18]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[0][1]++;}\n  // if(!request.body.title){\n  //   sendStatus(response, 400, 'title not found');\n  //   return;\n  // }\n  // if(!request.body.content){\n  //   sendStatus(response, 400, 'content not found');\n  //   return;\n  // }\n\n  let note = /* istanbul ignore next */(cov_yvt6rhqjy.s[20]++, new Note(request.body.title, request.body.content)); /* istanbul ignore next */cov_yvt6rhqjy.s[21]++;\n  notes.push(note); /* istanbul ignore next */cov_yvt6rhqjy.s[22]++;\n  sendJSON(response, 200, notes);\n}","timestamp":"2017-12-07T03:33:42.087Z"}
{"level":"info","message":"responding with a status code of 200 and the following data","timestamp":"2017-12-07T03:33:42.088Z"}
[{"id":"6bf5b570-daff-11e7-8122-a359a20865eb","timestamp":"2017-12-07T03:33:42.088Z","title":"cats","content":"Gregor and the hound"}]
{"level":"info","message":"adding a POST url and callbacck","timestamp":"2017-12-07T03:35:09.279Z"}
{"level":"info","message":"/api/notes","timestamp":"2017-12-07T03:35:09.281Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[2]++;cov_yvt6rhqjy.s[16]++;\n  //here, i know that request has been pre-parsed- request parser in router took care of it\n  console.log('note-router.js line 29'); /* istanbul ignore next */cov_yvt6rhqjy.s[17]++;\n  if (!request.body) {/* istanbul ignore next */cov_yvt6rhqjy.b[0][0]++;cov_yvt6rhqjy.s[18]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[0][1]++;}\n  // if(!request.body.title){\n  //   sendStatus(response, 400, 'title not found');\n  //   return;\n  // }\n  // if(!request.body.content){\n  //   sendStatus(response, 400, 'content not found');\n  //   return;\n  // }\n\n  let note = /* istanbul ignore next */(cov_yvt6rhqjy.s[20]++, new Note(request.body.title, request.body.content)); /* istanbul ignore next */cov_yvt6rhqjy.s[21]++;\n  notes.push(note); /* istanbul ignore next */cov_yvt6rhqjy.s[22]++;\n  sendJSON(response, 200, notes);\n}","timestamp":"2017-12-07T03:35:09.281Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T03:35:09.329Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T03:35:09.343Z"}
{"level":"info","message":"log the features here","timestamp":"2017-12-07T03:35:09.343Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T03:35:09.345Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[2]++;cov_yvt6rhqjy.s[16]++;\n  //here, i know that request has been pre-parsed- request parser in router took care of it\n  console.log('note-router.js line 29'); /* istanbul ignore next */cov_yvt6rhqjy.s[17]++;\n  if (!request.body) {/* istanbul ignore next */cov_yvt6rhqjy.b[0][0]++;cov_yvt6rhqjy.s[18]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[0][1]++;}\n  // if(!request.body.title){\n  //   sendStatus(response, 400, 'title not found');\n  //   return;\n  // }\n  // if(!request.body.content){\n  //   sendStatus(response, 400, 'content not found');\n  //   return;\n  // }\n\n  let note = /* istanbul ignore next */(cov_yvt6rhqjy.s[20]++, new Note(request.body.title, request.body.content)); /* istanbul ignore next */cov_yvt6rhqjy.s[21]++;\n  notes.push(note); /* istanbul ignore next */cov_yvt6rhqjy.s[22]++;\n  sendJSON(response, 200, notes);\n}","timestamp":"2017-12-07T03:35:09.345Z"}
{"level":"info","message":"responding with a status code of 200 and the following data","timestamp":"2017-12-07T03:35:09.345Z"}
[{"id":"9ff83910-daff-11e7-90ac-d5f69b418c8b","timestamp":"2017-12-07T03:35:09.345Z"}]
{"level":"info","message":"adding a POST url and callbacck","timestamp":"2017-12-07T03:35:48.785Z"}
{"level":"info","message":"/api/notes","timestamp":"2017-12-07T03:35:48.787Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[2]++;cov_yvt6rhqjy.s[16]++;\n  //here, i know that request has been pre-parsed- request parser in router took care of it\n  console.log('note-router.js line 29'); /* istanbul ignore next */cov_yvt6rhqjy.s[17]++;\n  if (!request.body) {/* istanbul ignore next */cov_yvt6rhqjy.b[0][0]++;cov_yvt6rhqjy.s[18]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[0][1]++;}\n  // if(!request.body.title){\n  //   sendStatus(response, 400, 'title not found');\n  //   return;\n  // }\n  // if(!request.body.content){\n  //   sendStatus(response, 400, 'content not found');\n  //   return;\n  // }\n\n  let note = /* istanbul ignore next */(cov_yvt6rhqjy.s[20]++, new Note(request.body.title, request.body.content)); /* istanbul ignore next */cov_yvt6rhqjy.s[21]++;\n  notes.push(note); /* istanbul ignore next */cov_yvt6rhqjy.s[22]++;\n  sendJSON(response, 200, notes);\n}","timestamp":"2017-12-07T03:35:48.787Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T03:35:48.832Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T03:35:48.847Z"}
{"level":"info","message":"log the features here","timestamp":"2017-12-07T03:35:48.847Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T03:35:48.848Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[2]++;cov_yvt6rhqjy.s[16]++;\n  //here, i know that request has been pre-parsed- request parser in router took care of it\n  console.log('note-router.js line 29'); /* istanbul ignore next */cov_yvt6rhqjy.s[17]++;\n  if (!request.body) {/* istanbul ignore next */cov_yvt6rhqjy.b[0][0]++;cov_yvt6rhqjy.s[18]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[0][1]++;}\n  // if(!request.body.title){\n  //   sendStatus(response, 400, 'title not found');\n  //   return;\n  // }\n  // if(!request.body.content){\n  //   sendStatus(response, 400, 'content not found');\n  //   return;\n  // }\n\n  let note = /* istanbul ignore next */(cov_yvt6rhqjy.s[20]++, new Note(request.body.title, request.body.content)); /* istanbul ignore next */cov_yvt6rhqjy.s[21]++;\n  notes.push(note); /* istanbul ignore next */cov_yvt6rhqjy.s[22]++;\n  sendJSON(response, 200, notes);\n}","timestamp":"2017-12-07T03:35:48.848Z"}
{"level":"info","message":"responding with a status code of 200 and the following data","timestamp":"2017-12-07T03:35:48.849Z"}
[{"id":"b7840e10-daff-11e7-aac2-0f4ddaa5afbc","timestamp":"2017-12-07T03:35:48.849Z","title":"cats","content":"Gregor and the hound"}]
{"level":"info","message":"adding a POST url and callbacck","timestamp":"2017-12-07T03:36:43.308Z"}
{"level":"info","message":"/api/notes","timestamp":"2017-12-07T03:36:43.309Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[2]++;cov_yvt6rhqjy.s[16]++;\n  //here, i know that request has been pre-parsed- request parser in router took care of it\n  console.log('note-router.js line 29'); /* istanbul ignore next */cov_yvt6rhqjy.s[17]++;\n  if (!request.body) {/* istanbul ignore next */cov_yvt6rhqjy.b[0][0]++;cov_yvt6rhqjy.s[18]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[0][1]++;}cov_yvt6rhqjy.s[20]++;\n  if (!request.body.title) {/* istanbul ignore next */cov_yvt6rhqjy.b[1][0]++;cov_yvt6rhqjy.s[21]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[1][1]++;}cov_yvt6rhqjy.s[23]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_yvt6rhqjy.b[2][0]++;cov_yvt6rhqjy.s[24]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[2][1]++;}\n\n  let note = /* istanbul ignore next */(cov_yvt6rhqjy.s[26]++, new Note(request.body.title, request.body.content)); /* istanbul ignore next */cov_yvt6rhqjy.s[27]++;\n  notes.push(note); /* istanbul ignore next */cov_yvt6rhqjy.s[28]++;\n  sendJSON(response, 200, notes);\n}","timestamp":"2017-12-07T03:36:43.309Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T03:36:43.356Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T03:36:43.370Z"}
{"level":"info","message":"log the features here","timestamp":"2017-12-07T03:36:43.370Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T03:36:43.371Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[2]++;cov_yvt6rhqjy.s[16]++;\n  //here, i know that request has been pre-parsed- request parser in router took care of it\n  console.log('note-router.js line 29'); /* istanbul ignore next */cov_yvt6rhqjy.s[17]++;\n  if (!request.body) {/* istanbul ignore next */cov_yvt6rhqjy.b[0][0]++;cov_yvt6rhqjy.s[18]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[0][1]++;}cov_yvt6rhqjy.s[20]++;\n  if (!request.body.title) {/* istanbul ignore next */cov_yvt6rhqjy.b[1][0]++;cov_yvt6rhqjy.s[21]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[1][1]++;}cov_yvt6rhqjy.s[23]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_yvt6rhqjy.b[2][0]++;cov_yvt6rhqjy.s[24]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[2][1]++;}\n\n  let note = /* istanbul ignore next */(cov_yvt6rhqjy.s[26]++, new Note(request.body.title, request.body.content)); /* istanbul ignore next */cov_yvt6rhqjy.s[27]++;\n  notes.push(note); /* istanbul ignore next */cov_yvt6rhqjy.s[28]++;\n  sendJSON(response, 200, notes);\n}","timestamp":"2017-12-07T03:36:43.371Z"}
{"level":"info","message":"responding with a status code of 200 and the following data","timestamp":"2017-12-07T03:36:43.372Z"}
[{"id":"d8039ac0-daff-11e7-b376-997f3f563f9e","timestamp":"2017-12-07T03:36:43.372Z","title":"cats","content":"Gregor and the hound"}]
{"level":"info","message":"adding a POST url and callbacck","timestamp":"2017-12-07T03:38:29.702Z"}
{"level":"info","message":"/api/notes","timestamp":"2017-12-07T03:38:29.703Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[2]++;cov_yvt6rhqjy.s[16]++;\n  console.log('note-router.js line 29'); /* istanbul ignore next */cov_yvt6rhqjy.s[17]++;\n  if (!request.body) {/* istanbul ignore next */cov_yvt6rhqjy.b[0][0]++;cov_yvt6rhqjy.s[18]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[0][1]++;}cov_yvt6rhqjy.s[20]++;\n  if (!request.body.title) {/* istanbul ignore next */cov_yvt6rhqjy.b[1][0]++;cov_yvt6rhqjy.s[21]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[1][1]++;}cov_yvt6rhqjy.s[23]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_yvt6rhqjy.b[2][0]++;cov_yvt6rhqjy.s[24]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[2][1]++;}\n\n  let note = /* istanbul ignore next */(cov_yvt6rhqjy.s[26]++, new Note(request.body.title, request.body.content)); /* istanbul ignore next */cov_yvt6rhqjy.s[27]++;\n  notes.push(note); /* istanbul ignore next */cov_yvt6rhqjy.s[28]++;\n  sendJSON(response, 200, notes);\n}","timestamp":"2017-12-07T03:38:29.703Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T03:38:29.752Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T03:38:29.766Z"}
{"level":"info","message":"log the features here","timestamp":"2017-12-07T03:38:29.767Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T03:38:29.768Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[2]++;cov_yvt6rhqjy.s[16]++;\n  console.log('note-router.js line 29'); /* istanbul ignore next */cov_yvt6rhqjy.s[17]++;\n  if (!request.body) {/* istanbul ignore next */cov_yvt6rhqjy.b[0][0]++;cov_yvt6rhqjy.s[18]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[0][1]++;}cov_yvt6rhqjy.s[20]++;\n  if (!request.body.title) {/* istanbul ignore next */cov_yvt6rhqjy.b[1][0]++;cov_yvt6rhqjy.s[21]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[1][1]++;}cov_yvt6rhqjy.s[23]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_yvt6rhqjy.b[2][0]++;cov_yvt6rhqjy.s[24]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[2][1]++;}\n\n  let note = /* istanbul ignore next */(cov_yvt6rhqjy.s[26]++, new Note(request.body.title, request.body.content)); /* istanbul ignore next */cov_yvt6rhqjy.s[27]++;\n  notes.push(note); /* istanbul ignore next */cov_yvt6rhqjy.s[28]++;\n  sendJSON(response, 200, notes);\n}","timestamp":"2017-12-07T03:38:29.768Z"}
{"level":"info","message":"responding with a status code of 200 and the following data","timestamp":"2017-12-07T03:38:29.769Z"}
[{"id":"176e5880-db00-11e7-9c66-11eb34b69139","timestamp":"2017-12-07T03:38:29.769Z","title":"cats","content":"Gregor and the hound"}]
{"level":"info","message":"adding a POST url and callbacck","timestamp":"2017-12-07T03:38:42.392Z"}
{"level":"info","message":"/api/notes","timestamp":"2017-12-07T03:38:42.393Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[2]++;cov_yvt6rhqjy.s[16]++;\n  console.log('note-router.js line 29'); /* istanbul ignore next */cov_yvt6rhqjy.s[17]++;\n  if (!request.body) {/* istanbul ignore next */cov_yvt6rhqjy.b[0][0]++;cov_yvt6rhqjy.s[18]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[0][1]++;}cov_yvt6rhqjy.s[20]++;\n  if (!request.body.title) {/* istanbul ignore next */cov_yvt6rhqjy.b[1][0]++;cov_yvt6rhqjy.s[21]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[1][1]++;}cov_yvt6rhqjy.s[23]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_yvt6rhqjy.b[2][0]++;cov_yvt6rhqjy.s[24]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[2][1]++;}\n\n  let note = /* istanbul ignore next */(cov_yvt6rhqjy.s[26]++, new Note(request.body.title, request.body.content)); /* istanbul ignore next */cov_yvt6rhqjy.s[27]++;\n  notes.push(note); /* istanbul ignore next */cov_yvt6rhqjy.s[28]++;\n  sendJSON(response, 200, notes);\n}","timestamp":"2017-12-07T03:38:42.394Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T03:38:42.439Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T03:38:42.454Z"}
{"level":"info","message":"log the features here","timestamp":"2017-12-07T03:38:42.454Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T03:38:42.455Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[2]++;cov_yvt6rhqjy.s[16]++;\n  console.log('note-router.js line 29'); /* istanbul ignore next */cov_yvt6rhqjy.s[17]++;\n  if (!request.body) {/* istanbul ignore next */cov_yvt6rhqjy.b[0][0]++;cov_yvt6rhqjy.s[18]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[0][1]++;}cov_yvt6rhqjy.s[20]++;\n  if (!request.body.title) {/* istanbul ignore next */cov_yvt6rhqjy.b[1][0]++;cov_yvt6rhqjy.s[21]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[1][1]++;}cov_yvt6rhqjy.s[23]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_yvt6rhqjy.b[2][0]++;cov_yvt6rhqjy.s[24]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[2][1]++;}\n\n  let note = /* istanbul ignore next */(cov_yvt6rhqjy.s[26]++, new Note(request.body.title, request.body.content)); /* istanbul ignore next */cov_yvt6rhqjy.s[27]++;\n  notes.push(note); /* istanbul ignore next */cov_yvt6rhqjy.s[28]++;\n  sendJSON(response, 200, notes);\n}","timestamp":"2017-12-07T03:38:42.455Z"}
{"level":"info","message":"responding with a status code of 200 and the following data","timestamp":"2017-12-07T03:38:42.456Z"}
[{"id":"1efe6180-db00-11e7-bddc-63284de109bb","timestamp":"2017-12-07T03:38:42.456Z","title":"cats","content":"Gregor and the hound"}]
