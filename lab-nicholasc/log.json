{"level":"info","message":"adding a POST url and callbacck","timestamp":"2017-12-08T05:37:31.622Z"}
{"level":"info","message":"/api/notes","timestamp":"2017-12-08T05:37:31.623Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[2]++;cov_yvt6rhqjy.s[16]++;\n  //TODO: run console.trace(); track what happens\n  if (!request.body) {/* istanbul ignore next */cov_yvt6rhqjy.b[0][0]++;cov_yvt6rhqjy.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[0][1]++;}\n  // checking if values are present- instead we should check if values match type\n  // if typeof\n  cov_yvt6rhqjy.s[19]++;if (typeof request.body.title !== 'string') {/* istanbul ignore next */cov_yvt6rhqjy.b[1][0]++;cov_yvt6rhqjy.s[20]++;\n    sendStatus(response, 400, 'title must be a string'); /* istanbul ignore next */cov_yvt6rhqjy.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[1][1]++;}cov_yvt6rhqjy.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_yvt6rhqjy.b[2][0]++;cov_yvt6rhqjy.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[2][1]++;}\n\n  let note = /* istanbul ignore next */(cov_yvt6rhqjy.s[25]++, new Note(request.body.title, request.body.content)); /* istanbul ignore next */cov_yvt6rhqjy.s[26]++;\n  storage.addItem(note).\n  then(() => {/* istanbul ignore next */cov_yvt6rhqjy.f[3]++;cov_yvt6rhqjy.s[27]++;\n    sendJSON(response, 200, note); /* istanbul ignore next */cov_yvt6rhqjy.s[28]++;\n    return;\n  }).\n  catch(error => {/* istanbul ignore next */cov_yvt6rhqjy.f[4]++;cov_yvt6rhqjy.s[29]++;\n    sendStatus(response, 500, error); /* istanbul ignore next */cov_yvt6rhqjy.s[30]++;\n    return;\n  });\n}","timestamp":"2017-12-08T05:37:31.624Z"}
{"level":"info","message":"adding a GET url and callbacck","timestamp":"2017-12-08T05:37:31.624Z"}
{"level":"info","message":"/api/notes","timestamp":"2017-12-08T05:37:31.624Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[5]++;cov_yvt6rhqjy.s[32]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_yvt6rhqjy.b[3][0]++;cov_yvt6rhqjy.s[33]++;\n    storage.fetchItem(request.url.query.id).\n    then(note => {/* istanbul ignore next */cov_yvt6rhqjy.f[6]++;cov_yvt6rhqjy.s[34]++;\n      sendJSON(response, 200, note); /* istanbul ignore next */cov_yvt6rhqjy.s[35]++;\n      return;\n    }).\n    catch(error => {/* istanbul ignore next */cov_yvt6rhqjy.f[7]++;cov_yvt6rhqjy.s[36]++;\n      sendStatus(response, 500, error); /* istanbul ignore next */cov_yvt6rhqjy.s[37]++;\n      return;\n    });\n  } else {/* istanbul ignore next */cov_yvt6rhqjy.b[3][1]++;cov_yvt6rhqjy.s[38]++;\n    storage.fetchAll().\n    then(notes => {/* istanbul ignore next */cov_yvt6rhqjy.f[8]++;cov_yvt6rhqjy.s[39]++;\n      sendJSON(response, 200, notes); /* istanbul ignore next */cov_yvt6rhqjy.s[40]++;\n      return;\n    }).\n    catch(error => {/* istanbul ignore next */cov_yvt6rhqjy.f[9]++;cov_yvt6rhqjy.s[41]++;\n      sendStatus(response, 500, error); /* istanbul ignore next */cov_yvt6rhqjy.s[42]++;\n      return;\n    });\n  }\n}","timestamp":"2017-12-08T05:37:31.624Z"}
{"level":"info","message":"adding a DELETE url and callbacck","timestamp":"2017-12-08T05:37:31.624Z"}
{"level":"info","message":"/api/notes","timestamp":"2017-12-08T05:37:31.624Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[10]++;cov_yvt6rhqjy.s[44]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_yvt6rhqjy.b[4][0]++;cov_yvt6rhqjy.s[45]++;\n    storage.delete(request.url.query.id).\n    then(() => {/* istanbul ignore next */cov_yvt6rhqjy.f[11]++;cov_yvt6rhqjy.s[46]++;\n      sendStatus(response, 204, 'successfully deleted'); /* istanbul ignore next */cov_yvt6rhqjy.s[47]++;\n      return;\n    }).\n    catch(error => {/* istanbul ignore next */cov_yvt6rhqjy.f[12]++;cov_yvt6rhqjy.s[48]++;\n      sendStatus(response, 500, error); /* istanbul ignore next */cov_yvt6rhqjy.s[49]++;\n      return;\n    });\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[4][1]++;}cov_yvt6rhqjy.s[50]++;\n  sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[51]++;\n  return;\n}","timestamp":"2017-12-08T05:37:31.624Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-08T05:37:31.681Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T05:37:31.697Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T05:37:31.698Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[2]++;cov_yvt6rhqjy.s[16]++;\n  //TODO: run console.trace(); track what happens\n  if (!request.body) {/* istanbul ignore next */cov_yvt6rhqjy.b[0][0]++;cov_yvt6rhqjy.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[0][1]++;}\n  // checking if values are present- instead we should check if values match type\n  // if typeof\n  cov_yvt6rhqjy.s[19]++;if (typeof request.body.title !== 'string') {/* istanbul ignore next */cov_yvt6rhqjy.b[1][0]++;cov_yvt6rhqjy.s[20]++;\n    sendStatus(response, 400, 'title must be a string'); /* istanbul ignore next */cov_yvt6rhqjy.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[1][1]++;}cov_yvt6rhqjy.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_yvt6rhqjy.b[2][0]++;cov_yvt6rhqjy.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[2][1]++;}\n\n  let note = /* istanbul ignore next */(cov_yvt6rhqjy.s[25]++, new Note(request.body.title, request.body.content)); /* istanbul ignore next */cov_yvt6rhqjy.s[26]++;\n  storage.addItem(note).\n  then(() => {/* istanbul ignore next */cov_yvt6rhqjy.f[3]++;cov_yvt6rhqjy.s[27]++;\n    sendJSON(response, 200, note); /* istanbul ignore next */cov_yvt6rhqjy.s[28]++;\n    return;\n  }).\n  catch(error => {/* istanbul ignore next */cov_yvt6rhqjy.f[4]++;cov_yvt6rhqjy.s[29]++;\n    sendStatus(response, 500, error); /* istanbul ignore next */cov_yvt6rhqjy.s[30]++;\n    return;\n  });\n}","timestamp":"2017-12-08T05:37:31.698Z"}
{"level":"info","message":"responding with a status code of 200 and the following data","timestamp":"2017-12-08T05:37:31.702Z"}
{"id":"e2c44830-dbd9-11e7-bfe4-1d554c4e6923","timestamp":"2017-12-08T05:37:31.702Z","title":"food that sounds yummy","content":"eggs and steak","level":"info","message":""}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T05:37:31.714Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T05:37:31.714Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[5]++;cov_yvt6rhqjy.s[32]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_yvt6rhqjy.b[3][0]++;cov_yvt6rhqjy.s[33]++;\n    storage.fetchItem(request.url.query.id).\n    then(note => {/* istanbul ignore next */cov_yvt6rhqjy.f[6]++;cov_yvt6rhqjy.s[34]++;\n      sendJSON(response, 200, note); /* istanbul ignore next */cov_yvt6rhqjy.s[35]++;\n      return;\n    }).\n    catch(error => {/* istanbul ignore next */cov_yvt6rhqjy.f[7]++;cov_yvt6rhqjy.s[36]++;\n      sendStatus(response, 500, error); /* istanbul ignore next */cov_yvt6rhqjy.s[37]++;\n      return;\n    });\n  } else {/* istanbul ignore next */cov_yvt6rhqjy.b[3][1]++;cov_yvt6rhqjy.s[38]++;\n    storage.fetchAll().\n    then(notes => {/* istanbul ignore next */cov_yvt6rhqjy.f[8]++;cov_yvt6rhqjy.s[39]++;\n      sendJSON(response, 200, notes); /* istanbul ignore next */cov_yvt6rhqjy.s[40]++;\n      return;\n    }).\n    catch(error => {/* istanbul ignore next */cov_yvt6rhqjy.f[9]++;cov_yvt6rhqjy.s[41]++;\n      sendStatus(response, 500, error); /* istanbul ignore next */cov_yvt6rhqjy.s[42]++;\n      return;\n    });\n  }\n}","timestamp":"2017-12-08T05:37:31.714Z"}
{"level":"info","message":"responding with a status code of 200 and the following data","timestamp":"2017-12-08T05:37:31.715Z"}
[{"id":"ab9bf380-dbd9-11e7-b6a7-8f46d9f8761d","timestamp":"2017-12-08T05:35:59.160Z","title":"food that sounds yummy","content":"eggs and steak"},{"id":"e2c44830-dbd9-11e7-bfe4-1d554c4e6923","timestamp":"2017-12-08T05:37:31.699Z","title":"food that sounds yummy","content":"eggs and steak"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T05:37:31.721Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T05:37:31.722Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[5]++;cov_yvt6rhqjy.s[32]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_yvt6rhqjy.b[3][0]++;cov_yvt6rhqjy.s[33]++;\n    storage.fetchItem(request.url.query.id).\n    then(note => {/* istanbul ignore next */cov_yvt6rhqjy.f[6]++;cov_yvt6rhqjy.s[34]++;\n      sendJSON(response, 200, note); /* istanbul ignore next */cov_yvt6rhqjy.s[35]++;\n      return;\n    }).\n    catch(error => {/* istanbul ignore next */cov_yvt6rhqjy.f[7]++;cov_yvt6rhqjy.s[36]++;\n      sendStatus(response, 500, error); /* istanbul ignore next */cov_yvt6rhqjy.s[37]++;\n      return;\n    });\n  } else {/* istanbul ignore next */cov_yvt6rhqjy.b[3][1]++;cov_yvt6rhqjy.s[38]++;\n    storage.fetchAll().\n    then(notes => {/* istanbul ignore next */cov_yvt6rhqjy.f[8]++;cov_yvt6rhqjy.s[39]++;\n      sendJSON(response, 200, notes); /* istanbul ignore next */cov_yvt6rhqjy.s[40]++;\n      return;\n    }).\n    catch(error => {/* istanbul ignore next */cov_yvt6rhqjy.f[9]++;cov_yvt6rhqjy.s[41]++;\n      sendStatus(response, 500, error); /* istanbul ignore next */cov_yvt6rhqjy.s[42]++;\n      return;\n    });\n  }\n}","timestamp":"2017-12-08T05:37:31.722Z"}
{"level":"info","message":"responding with a status code of 200 and the following data","timestamp":"2017-12-08T05:37:31.723Z"}
{"id":"ab9bf380-dbd9-11e7-b6a7-8f46d9f8761d","timestamp":"2017-12-08T05:37:31.723Z","title":"food that sounds yummy","content":"eggs and steak","level":"info","message":""}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T05:37:31.725Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T05:37:31.725Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[10]++;cov_yvt6rhqjy.s[44]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_yvt6rhqjy.b[4][0]++;cov_yvt6rhqjy.s[45]++;\n    storage.delete(request.url.query.id).\n    then(() => {/* istanbul ignore next */cov_yvt6rhqjy.f[11]++;cov_yvt6rhqjy.s[46]++;\n      sendStatus(response, 204, 'successfully deleted'); /* istanbul ignore next */cov_yvt6rhqjy.s[47]++;\n      return;\n    }).\n    catch(error => {/* istanbul ignore next */cov_yvt6rhqjy.f[12]++;cov_yvt6rhqjy.s[48]++;\n      sendStatus(response, 500, error); /* istanbul ignore next */cov_yvt6rhqjy.s[49]++;\n      return;\n    });\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[4][1]++;}cov_yvt6rhqjy.s[50]++;\n  sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[51]++;\n  return;\n}","timestamp":"2017-12-08T05:37:31.725Z"}
{"level":"info","message":"__REQUEST_ERROR","timestamp":"2017-12-08T05:37:31.726Z"}
{"message":"storage.delete is not a function","stack":"TypeError: storage.delete is not a function\n    at Object.<anonymous>.router.delete (/home/ncarignan/cf/401/lab-assignments/08-09-vanilla-rest-server/lab-nicholasc/route/note-router.js:81:19)\n    at requestParser.parse.then.request (/home/ncarignan/cf/401/lab-assignments/08-09-vanilla-rest-server/lab-nicholasc/lib/router.js:48:89)\n    at process._tickCallback (internal/process/next_tick.js:109:7)","level":"info","timestamp":"2017-12-08T05:37:31.726Z"}
{"level":"info","message":"adding a POST url and callbacck","timestamp":"2017-12-08T05:39:20.368Z"}
{"level":"info","message":"/api/notes","timestamp":"2017-12-08T05:39:20.369Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[2]++;cov_yvt6rhqjy.s[16]++;\n  //TODO: run console.trace(); track what happens\n  if (!request.body) {/* istanbul ignore next */cov_yvt6rhqjy.b[0][0]++;cov_yvt6rhqjy.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[0][1]++;}\n  // checking if values are present- instead we should check if values match type\n  // if typeof\n  cov_yvt6rhqjy.s[19]++;if (typeof request.body.title !== 'string') {/* istanbul ignore next */cov_yvt6rhqjy.b[1][0]++;cov_yvt6rhqjy.s[20]++;\n    sendStatus(response, 400, 'title must be a string'); /* istanbul ignore next */cov_yvt6rhqjy.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[1][1]++;}cov_yvt6rhqjy.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_yvt6rhqjy.b[2][0]++;cov_yvt6rhqjy.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[2][1]++;}\n\n  let note = /* istanbul ignore next */(cov_yvt6rhqjy.s[25]++, new Note(request.body.title, request.body.content)); /* istanbul ignore next */cov_yvt6rhqjy.s[26]++;\n  storage.addItem(note).\n  then(() => {/* istanbul ignore next */cov_yvt6rhqjy.f[3]++;cov_yvt6rhqjy.s[27]++;\n    sendJSON(response, 200, note); /* istanbul ignore next */cov_yvt6rhqjy.s[28]++;\n    return;\n  }).\n  catch(error => {/* istanbul ignore next */cov_yvt6rhqjy.f[4]++;cov_yvt6rhqjy.s[29]++;\n    sendStatus(response, 500, error); /* istanbul ignore next */cov_yvt6rhqjy.s[30]++;\n    return;\n  });\n}","timestamp":"2017-12-08T05:39:20.369Z"}
{"level":"info","message":"adding a GET url and callbacck","timestamp":"2017-12-08T05:39:20.369Z"}
{"level":"info","message":"/api/notes","timestamp":"2017-12-08T05:39:20.369Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[5]++;cov_yvt6rhqjy.s[32]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_yvt6rhqjy.b[3][0]++;cov_yvt6rhqjy.s[33]++;\n    storage.fetchItem(request.url.query.id).\n    then(note => {/* istanbul ignore next */cov_yvt6rhqjy.f[6]++;cov_yvt6rhqjy.s[34]++;\n      sendJSON(response, 200, note); /* istanbul ignore next */cov_yvt6rhqjy.s[35]++;\n      return;\n    }).\n    catch(error => {/* istanbul ignore next */cov_yvt6rhqjy.f[7]++;cov_yvt6rhqjy.s[36]++;\n      sendStatus(response, 500, error); /* istanbul ignore next */cov_yvt6rhqjy.s[37]++;\n      return;\n    });\n  } else {/* istanbul ignore next */cov_yvt6rhqjy.b[3][1]++;cov_yvt6rhqjy.s[38]++;\n    storage.fetchAll().\n    then(notes => {/* istanbul ignore next */cov_yvt6rhqjy.f[8]++;cov_yvt6rhqjy.s[39]++;\n      sendJSON(response, 200, notes); /* istanbul ignore next */cov_yvt6rhqjy.s[40]++;\n      return;\n    }).\n    catch(error => {/* istanbul ignore next */cov_yvt6rhqjy.f[9]++;cov_yvt6rhqjy.s[41]++;\n      sendStatus(response, 500, error); /* istanbul ignore next */cov_yvt6rhqjy.s[42]++;\n      return;\n    });\n  }\n}","timestamp":"2017-12-08T05:39:20.369Z"}
{"level":"info","message":"adding a DELETE url and callbacck","timestamp":"2017-12-08T05:39:20.369Z"}
{"level":"info","message":"/api/notes","timestamp":"2017-12-08T05:39:20.369Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[10]++;cov_yvt6rhqjy.s[44]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_yvt6rhqjy.b[4][0]++;cov_yvt6rhqjy.s[45]++;\n    storage.delete(request.url.query.id).\n    then(() => {/* istanbul ignore next */cov_yvt6rhqjy.f[11]++;cov_yvt6rhqjy.s[46]++;\n      sendStatus(response, 204, 'successfully deleted'); /* istanbul ignore next */cov_yvt6rhqjy.s[47]++;\n      return;\n    }).\n    catch(error => {/* istanbul ignore next */cov_yvt6rhqjy.f[12]++;cov_yvt6rhqjy.s[48]++;\n      sendStatus(response, 500, error); /* istanbul ignore next */cov_yvt6rhqjy.s[49]++;\n      return;\n    });\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[4][1]++;}cov_yvt6rhqjy.s[50]++;\n  sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[51]++;\n  return;\n}","timestamp":"2017-12-08T05:39:20.369Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-08T05:39:20.418Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T05:39:20.433Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T05:39:20.435Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[2]++;cov_yvt6rhqjy.s[16]++;\n  //TODO: run console.trace(); track what happens\n  if (!request.body) {/* istanbul ignore next */cov_yvt6rhqjy.b[0][0]++;cov_yvt6rhqjy.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[0][1]++;}\n  // checking if values are present- instead we should check if values match type\n  // if typeof\n  cov_yvt6rhqjy.s[19]++;if (typeof request.body.title !== 'string') {/* istanbul ignore next */cov_yvt6rhqjy.b[1][0]++;cov_yvt6rhqjy.s[20]++;\n    sendStatus(response, 400, 'title must be a string'); /* istanbul ignore next */cov_yvt6rhqjy.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[1][1]++;}cov_yvt6rhqjy.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_yvt6rhqjy.b[2][0]++;cov_yvt6rhqjy.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[2][1]++;}\n\n  let note = /* istanbul ignore next */(cov_yvt6rhqjy.s[25]++, new Note(request.body.title, request.body.content)); /* istanbul ignore next */cov_yvt6rhqjy.s[26]++;\n  storage.addItem(note).\n  then(() => {/* istanbul ignore next */cov_yvt6rhqjy.f[3]++;cov_yvt6rhqjy.s[27]++;\n    sendJSON(response, 200, note); /* istanbul ignore next */cov_yvt6rhqjy.s[28]++;\n    return;\n  }).\n  catch(error => {/* istanbul ignore next */cov_yvt6rhqjy.f[4]++;cov_yvt6rhqjy.s[29]++;\n    sendStatus(response, 500, error); /* istanbul ignore next */cov_yvt6rhqjy.s[30]++;\n    return;\n  });\n}","timestamp":"2017-12-08T05:39:20.435Z"}
{"level":"info","message":"responding with a status code of 200 and the following data","timestamp":"2017-12-08T05:39:20.439Z"}
{"id":"23941430-dbda-11e7-aa57-3d8910f94ca5","timestamp":"2017-12-08T05:39:20.439Z","title":"food that sounds yummy","content":"eggs and steak","level":"info","message":""}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T05:39:20.471Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T05:39:20.471Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[5]++;cov_yvt6rhqjy.s[32]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_yvt6rhqjy.b[3][0]++;cov_yvt6rhqjy.s[33]++;\n    storage.fetchItem(request.url.query.id).\n    then(note => {/* istanbul ignore next */cov_yvt6rhqjy.f[6]++;cov_yvt6rhqjy.s[34]++;\n      sendJSON(response, 200, note); /* istanbul ignore next */cov_yvt6rhqjy.s[35]++;\n      return;\n    }).\n    catch(error => {/* istanbul ignore next */cov_yvt6rhqjy.f[7]++;cov_yvt6rhqjy.s[36]++;\n      sendStatus(response, 500, error); /* istanbul ignore next */cov_yvt6rhqjy.s[37]++;\n      return;\n    });\n  } else {/* istanbul ignore next */cov_yvt6rhqjy.b[3][1]++;cov_yvt6rhqjy.s[38]++;\n    storage.fetchAll().\n    then(notes => {/* istanbul ignore next */cov_yvt6rhqjy.f[8]++;cov_yvt6rhqjy.s[39]++;\n      sendJSON(response, 200, notes); /* istanbul ignore next */cov_yvt6rhqjy.s[40]++;\n      return;\n    }).\n    catch(error => {/* istanbul ignore next */cov_yvt6rhqjy.f[9]++;cov_yvt6rhqjy.s[41]++;\n      sendStatus(response, 500, error); /* istanbul ignore next */cov_yvt6rhqjy.s[42]++;\n      return;\n    });\n  }\n}","timestamp":"2017-12-08T05:39:20.471Z"}
{"level":"info","message":"responding with a status code of 200 and the following data","timestamp":"2017-12-08T05:39:20.472Z"}
[{"id":"ab9bf380-dbd9-11e7-b6a7-8f46d9f8761d","timestamp":"2017-12-08T05:35:59.160Z","title":"food that sounds yummy","content":"eggs and steak"},{"id":"e2c44830-dbd9-11e7-bfe4-1d554c4e6923","timestamp":"2017-12-08T05:37:31.699Z","title":"food that sounds yummy","content":"eggs and steak"},{"id":"23941430-dbda-11e7-aa57-3d8910f94ca5","timestamp":"2017-12-08T05:39:20.435Z","title":"food that sounds yummy","content":"eggs and steak"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T05:39:20.478Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T05:39:20.478Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[5]++;cov_yvt6rhqjy.s[32]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_yvt6rhqjy.b[3][0]++;cov_yvt6rhqjy.s[33]++;\n    storage.fetchItem(request.url.query.id).\n    then(note => {/* istanbul ignore next */cov_yvt6rhqjy.f[6]++;cov_yvt6rhqjy.s[34]++;\n      sendJSON(response, 200, note); /* istanbul ignore next */cov_yvt6rhqjy.s[35]++;\n      return;\n    }).\n    catch(error => {/* istanbul ignore next */cov_yvt6rhqjy.f[7]++;cov_yvt6rhqjy.s[36]++;\n      sendStatus(response, 500, error); /* istanbul ignore next */cov_yvt6rhqjy.s[37]++;\n      return;\n    });\n  } else {/* istanbul ignore next */cov_yvt6rhqjy.b[3][1]++;cov_yvt6rhqjy.s[38]++;\n    storage.fetchAll().\n    then(notes => {/* istanbul ignore next */cov_yvt6rhqjy.f[8]++;cov_yvt6rhqjy.s[39]++;\n      sendJSON(response, 200, notes); /* istanbul ignore next */cov_yvt6rhqjy.s[40]++;\n      return;\n    }).\n    catch(error => {/* istanbul ignore next */cov_yvt6rhqjy.f[9]++;cov_yvt6rhqjy.s[41]++;\n      sendStatus(response, 500, error); /* istanbul ignore next */cov_yvt6rhqjy.s[42]++;\n      return;\n    });\n  }\n}","timestamp":"2017-12-08T05:39:20.479Z"}
{"level":"info","message":"responding with a status code of 200 and the following data","timestamp":"2017-12-08T05:39:20.480Z"}
{"id":"ab9bf380-dbd9-11e7-b6a7-8f46d9f8761d","timestamp":"2017-12-08T05:39:20.480Z","title":"food that sounds yummy","content":"eggs and steak","level":"info","message":""}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T05:39:20.483Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T05:39:20.483Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[10]++;cov_yvt6rhqjy.s[44]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_yvt6rhqjy.b[4][0]++;cov_yvt6rhqjy.s[45]++;\n    storage.delete(request.url.query.id).\n    then(() => {/* istanbul ignore next */cov_yvt6rhqjy.f[11]++;cov_yvt6rhqjy.s[46]++;\n      sendStatus(response, 204, 'successfully deleted'); /* istanbul ignore next */cov_yvt6rhqjy.s[47]++;\n      return;\n    }).\n    catch(error => {/* istanbul ignore next */cov_yvt6rhqjy.f[12]++;cov_yvt6rhqjy.s[48]++;\n      sendStatus(response, 500, error); /* istanbul ignore next */cov_yvt6rhqjy.s[49]++;\n      return;\n    });\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[4][1]++;}cov_yvt6rhqjy.s[50]++;\n  sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[51]++;\n  return;\n}","timestamp":"2017-12-08T05:39:20.483Z"}
{"level":"info","message":"__REQUEST_ERROR","timestamp":"2017-12-08T05:39:20.483Z"}
{"message":"storage.delete is not a function","stack":"TypeError: storage.delete is not a function\n    at Object.<anonymous>.router.delete (/home/ncarignan/cf/401/lab-assignments/08-09-vanilla-rest-server/lab-nicholasc/route/note-router.js:81:19)\n    at requestParser.parse.then.request (/home/ncarignan/cf/401/lab-assignments/08-09-vanilla-rest-server/lab-nicholasc/lib/router.js:48:89)\n    at process._tickCallback (internal/process/next_tick.js:109:7)","level":"info","timestamp":"2017-12-08T05:39:20.483Z"}
{"level":"info","message":"adding a POST url and callbacck","timestamp":"2017-12-08T05:39:30.380Z"}
{"level":"info","message":"/api/notes","timestamp":"2017-12-08T05:39:30.381Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[2]++;cov_yvt6rhqjy.s[16]++;\n  //TODO: run console.trace(); track what happens\n  if (!request.body) {/* istanbul ignore next */cov_yvt6rhqjy.b[0][0]++;cov_yvt6rhqjy.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[0][1]++;}\n  // checking if values are present- instead we should check if values match type\n  // if typeof\n  cov_yvt6rhqjy.s[19]++;if (typeof request.body.title !== 'string') {/* istanbul ignore next */cov_yvt6rhqjy.b[1][0]++;cov_yvt6rhqjy.s[20]++;\n    sendStatus(response, 400, 'title must be a string'); /* istanbul ignore next */cov_yvt6rhqjy.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[1][1]++;}cov_yvt6rhqjy.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_yvt6rhqjy.b[2][0]++;cov_yvt6rhqjy.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[2][1]++;}\n\n  let note = /* istanbul ignore next */(cov_yvt6rhqjy.s[25]++, new Note(request.body.title, request.body.content)); /* istanbul ignore next */cov_yvt6rhqjy.s[26]++;\n  storage.addItem(note).\n  then(() => {/* istanbul ignore next */cov_yvt6rhqjy.f[3]++;cov_yvt6rhqjy.s[27]++;\n    sendJSON(response, 200, note); /* istanbul ignore next */cov_yvt6rhqjy.s[28]++;\n    return;\n  }).\n  catch(error => {/* istanbul ignore next */cov_yvt6rhqjy.f[4]++;cov_yvt6rhqjy.s[29]++;\n    sendStatus(response, 500, error); /* istanbul ignore next */cov_yvt6rhqjy.s[30]++;\n    return;\n  });\n}","timestamp":"2017-12-08T05:39:30.381Z"}
{"level":"info","message":"adding a GET url and callbacck","timestamp":"2017-12-08T05:39:30.382Z"}
{"level":"info","message":"/api/notes","timestamp":"2017-12-08T05:39:30.382Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[5]++;cov_yvt6rhqjy.s[32]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_yvt6rhqjy.b[3][0]++;cov_yvt6rhqjy.s[33]++;\n    storage.fetchItem(request.url.query.id).\n    then(note => {/* istanbul ignore next */cov_yvt6rhqjy.f[6]++;cov_yvt6rhqjy.s[34]++;\n      sendJSON(response, 200, note); /* istanbul ignore next */cov_yvt6rhqjy.s[35]++;\n      return;\n    }).\n    catch(error => {/* istanbul ignore next */cov_yvt6rhqjy.f[7]++;cov_yvt6rhqjy.s[36]++;\n      sendStatus(response, 500, error); /* istanbul ignore next */cov_yvt6rhqjy.s[37]++;\n      return;\n    });\n  } else {/* istanbul ignore next */cov_yvt6rhqjy.b[3][1]++;cov_yvt6rhqjy.s[38]++;\n    storage.fetchAll().\n    then(notes => {/* istanbul ignore next */cov_yvt6rhqjy.f[8]++;cov_yvt6rhqjy.s[39]++;\n      sendJSON(response, 200, notes); /* istanbul ignore next */cov_yvt6rhqjy.s[40]++;\n      return;\n    }).\n    catch(error => {/* istanbul ignore next */cov_yvt6rhqjy.f[9]++;cov_yvt6rhqjy.s[41]++;\n      sendStatus(response, 500, error); /* istanbul ignore next */cov_yvt6rhqjy.s[42]++;\n      return;\n    });\n  }\n}","timestamp":"2017-12-08T05:39:30.382Z"}
{"level":"info","message":"adding a DELETE url and callbacck","timestamp":"2017-12-08T05:39:30.382Z"}
{"level":"info","message":"/api/notes","timestamp":"2017-12-08T05:39:30.382Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[10]++;cov_yvt6rhqjy.s[44]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_yvt6rhqjy.b[4][0]++;cov_yvt6rhqjy.s[45]++;\n    storage.delete(request.url.query.id).\n    then(() => {/* istanbul ignore next */cov_yvt6rhqjy.f[11]++;cov_yvt6rhqjy.s[46]++;\n      sendStatus(response, 204, 'successfully deleted'); /* istanbul ignore next */cov_yvt6rhqjy.s[47]++;\n      return;\n    }).\n    catch(error => {/* istanbul ignore next */cov_yvt6rhqjy.f[12]++;cov_yvt6rhqjy.s[48]++;\n      sendStatus(response, 500, error); /* istanbul ignore next */cov_yvt6rhqjy.s[49]++;\n      return;\n    });\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[4][1]++;}cov_yvt6rhqjy.s[50]++;\n  sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[51]++;\n  return;\n}","timestamp":"2017-12-08T05:39:30.382Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-08T05:39:30.428Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T05:39:30.443Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T05:39:30.444Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[2]++;cov_yvt6rhqjy.s[16]++;\n  //TODO: run console.trace(); track what happens\n  if (!request.body) {/* istanbul ignore next */cov_yvt6rhqjy.b[0][0]++;cov_yvt6rhqjy.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[0][1]++;}\n  // checking if values are present- instead we should check if values match type\n  // if typeof\n  cov_yvt6rhqjy.s[19]++;if (typeof request.body.title !== 'string') {/* istanbul ignore next */cov_yvt6rhqjy.b[1][0]++;cov_yvt6rhqjy.s[20]++;\n    sendStatus(response, 400, 'title must be a string'); /* istanbul ignore next */cov_yvt6rhqjy.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[1][1]++;}cov_yvt6rhqjy.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_yvt6rhqjy.b[2][0]++;cov_yvt6rhqjy.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[2][1]++;}\n\n  let note = /* istanbul ignore next */(cov_yvt6rhqjy.s[25]++, new Note(request.body.title, request.body.content)); /* istanbul ignore next */cov_yvt6rhqjy.s[26]++;\n  storage.addItem(note).\n  then(() => {/* istanbul ignore next */cov_yvt6rhqjy.f[3]++;cov_yvt6rhqjy.s[27]++;\n    sendJSON(response, 200, note); /* istanbul ignore next */cov_yvt6rhqjy.s[28]++;\n    return;\n  }).\n  catch(error => {/* istanbul ignore next */cov_yvt6rhqjy.f[4]++;cov_yvt6rhqjy.s[29]++;\n    sendStatus(response, 500, error); /* istanbul ignore next */cov_yvt6rhqjy.s[30]++;\n    return;\n  });\n}","timestamp":"2017-12-08T05:39:30.444Z"}
{"level":"info","message":"responding with a status code of 200 and the following data","timestamp":"2017-12-08T05:39:30.447Z"}
{"id":"298b54c0-dbda-11e7-ae5d-6dd9671a7f44","timestamp":"2017-12-08T05:39:30.448Z","title":"food that sounds yummy","content":"eggs and steak","level":"info","message":""}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T05:39:30.460Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T05:39:30.460Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[5]++;cov_yvt6rhqjy.s[32]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_yvt6rhqjy.b[3][0]++;cov_yvt6rhqjy.s[33]++;\n    storage.fetchItem(request.url.query.id).\n    then(note => {/* istanbul ignore next */cov_yvt6rhqjy.f[6]++;cov_yvt6rhqjy.s[34]++;\n      sendJSON(response, 200, note); /* istanbul ignore next */cov_yvt6rhqjy.s[35]++;\n      return;\n    }).\n    catch(error => {/* istanbul ignore next */cov_yvt6rhqjy.f[7]++;cov_yvt6rhqjy.s[36]++;\n      sendStatus(response, 500, error); /* istanbul ignore next */cov_yvt6rhqjy.s[37]++;\n      return;\n    });\n  } else {/* istanbul ignore next */cov_yvt6rhqjy.b[3][1]++;cov_yvt6rhqjy.s[38]++;\n    storage.fetchAll().\n    then(notes => {/* istanbul ignore next */cov_yvt6rhqjy.f[8]++;cov_yvt6rhqjy.s[39]++;\n      sendJSON(response, 200, notes); /* istanbul ignore next */cov_yvt6rhqjy.s[40]++;\n      return;\n    }).\n    catch(error => {/* istanbul ignore next */cov_yvt6rhqjy.f[9]++;cov_yvt6rhqjy.s[41]++;\n      sendStatus(response, 500, error); /* istanbul ignore next */cov_yvt6rhqjy.s[42]++;\n      return;\n    });\n  }\n}","timestamp":"2017-12-08T05:39:30.460Z"}
{"level":"info","message":"responding with a status code of 200 and the following data","timestamp":"2017-12-08T05:39:30.461Z"}
[{"id":"ab9bf380-dbd9-11e7-b6a7-8f46d9f8761d","timestamp":"2017-12-08T05:35:59.160Z","title":"food that sounds yummy","content":"eggs and steak"},{"id":"e2c44830-dbd9-11e7-bfe4-1d554c4e6923","timestamp":"2017-12-08T05:37:31.699Z","title":"food that sounds yummy","content":"eggs and steak"},{"id":"23941430-dbda-11e7-aa57-3d8910f94ca5","timestamp":"2017-12-08T05:39:20.435Z","title":"food that sounds yummy","content":"eggs and steak"},{"id":"298b54c0-dbda-11e7-ae5d-6dd9671a7f44","timestamp":"2017-12-08T05:39:30.445Z","title":"food that sounds yummy","content":"eggs and steak"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T05:39:30.466Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T05:39:30.467Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[5]++;cov_yvt6rhqjy.s[32]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_yvt6rhqjy.b[3][0]++;cov_yvt6rhqjy.s[33]++;\n    storage.fetchItem(request.url.query.id).\n    then(note => {/* istanbul ignore next */cov_yvt6rhqjy.f[6]++;cov_yvt6rhqjy.s[34]++;\n      sendJSON(response, 200, note); /* istanbul ignore next */cov_yvt6rhqjy.s[35]++;\n      return;\n    }).\n    catch(error => {/* istanbul ignore next */cov_yvt6rhqjy.f[7]++;cov_yvt6rhqjy.s[36]++;\n      sendStatus(response, 500, error); /* istanbul ignore next */cov_yvt6rhqjy.s[37]++;\n      return;\n    });\n  } else {/* istanbul ignore next */cov_yvt6rhqjy.b[3][1]++;cov_yvt6rhqjy.s[38]++;\n    storage.fetchAll().\n    then(notes => {/* istanbul ignore next */cov_yvt6rhqjy.f[8]++;cov_yvt6rhqjy.s[39]++;\n      sendJSON(response, 200, notes); /* istanbul ignore next */cov_yvt6rhqjy.s[40]++;\n      return;\n    }).\n    catch(error => {/* istanbul ignore next */cov_yvt6rhqjy.f[9]++;cov_yvt6rhqjy.s[41]++;\n      sendStatus(response, 500, error); /* istanbul ignore next */cov_yvt6rhqjy.s[42]++;\n      return;\n    });\n  }\n}","timestamp":"2017-12-08T05:39:30.467Z"}
{"level":"info","message":"responding with a status code of 200 and the following data","timestamp":"2017-12-08T05:39:30.468Z"}
{"id":"ab9bf380-dbd9-11e7-b6a7-8f46d9f8761d","timestamp":"2017-12-08T05:39:30.468Z","title":"food that sounds yummy","content":"eggs and steak","level":"info","message":""}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T05:39:30.471Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T05:39:30.471Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[10]++;cov_yvt6rhqjy.s[44]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_yvt6rhqjy.b[4][0]++;cov_yvt6rhqjy.s[45]++;\n    storage.delete(request.url.query.id).\n    then(() => {/* istanbul ignore next */cov_yvt6rhqjy.f[11]++;cov_yvt6rhqjy.s[46]++;\n      sendStatus(response, 204, 'successfully deleted'); /* istanbul ignore next */cov_yvt6rhqjy.s[47]++;\n      return;\n    }).\n    catch(error => {/* istanbul ignore next */cov_yvt6rhqjy.f[12]++;cov_yvt6rhqjy.s[48]++;\n      sendStatus(response, 500, error); /* istanbul ignore next */cov_yvt6rhqjy.s[49]++;\n      return;\n    });\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[4][1]++;}cov_yvt6rhqjy.s[50]++;\n  sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[51]++;\n  return;\n}","timestamp":"2017-12-08T05:39:30.471Z"}
{"level":"info","message":"__REQUEST_ERROR","timestamp":"2017-12-08T05:39:30.471Z"}
{"message":"storage.delete is not a function","stack":"TypeError: storage.delete is not a function\n    at Object.<anonymous>.router.delete (/home/ncarignan/cf/401/lab-assignments/08-09-vanilla-rest-server/lab-nicholasc/route/note-router.js:81:19)\n    at requestParser.parse.then.request (/home/ncarignan/cf/401/lab-assignments/08-09-vanilla-rest-server/lab-nicholasc/lib/router.js:48:89)\n    at process._tickCallback (internal/process/next_tick.js:109:7)","level":"info","timestamp":"2017-12-08T05:39:30.471Z"}
{"level":"info","message":"adding a POST url and callbacck","timestamp":"2017-12-08T05:39:59.838Z"}
{"level":"info","message":"/api/notes","timestamp":"2017-12-08T05:39:59.839Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[2]++;cov_yvt6rhqjy.s[16]++;\n  //TODO: run console.trace(); track what happens\n  if (!request.body) {/* istanbul ignore next */cov_yvt6rhqjy.b[0][0]++;cov_yvt6rhqjy.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[0][1]++;}\n  // checking if values are present- instead we should check if values match type\n  // if typeof\n  cov_yvt6rhqjy.s[19]++;if (typeof request.body.title !== 'string') {/* istanbul ignore next */cov_yvt6rhqjy.b[1][0]++;cov_yvt6rhqjy.s[20]++;\n    sendStatus(response, 400, 'title must be a string'); /* istanbul ignore next */cov_yvt6rhqjy.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[1][1]++;}cov_yvt6rhqjy.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_yvt6rhqjy.b[2][0]++;cov_yvt6rhqjy.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[2][1]++;}\n\n  let note = /* istanbul ignore next */(cov_yvt6rhqjy.s[25]++, new Note(request.body.title, request.body.content)); /* istanbul ignore next */cov_yvt6rhqjy.s[26]++;\n  storage.addItem(note).\n  then(() => {/* istanbul ignore next */cov_yvt6rhqjy.f[3]++;cov_yvt6rhqjy.s[27]++;\n    sendJSON(response, 200, note); /* istanbul ignore next */cov_yvt6rhqjy.s[28]++;\n    return;\n  }).\n  catch(error => {/* istanbul ignore next */cov_yvt6rhqjy.f[4]++;cov_yvt6rhqjy.s[29]++;\n    sendStatus(response, 500, error); /* istanbul ignore next */cov_yvt6rhqjy.s[30]++;\n    return;\n  });\n}","timestamp":"2017-12-08T05:39:59.839Z"}
{"level":"info","message":"adding a GET url and callbacck","timestamp":"2017-12-08T05:39:59.839Z"}
{"level":"info","message":"/api/notes","timestamp":"2017-12-08T05:39:59.839Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[5]++;cov_yvt6rhqjy.s[32]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_yvt6rhqjy.b[3][0]++;cov_yvt6rhqjy.s[33]++;\n    storage.fetchItem(request.url.query.id).\n    then(note => {/* istanbul ignore next */cov_yvt6rhqjy.f[6]++;cov_yvt6rhqjy.s[34]++;\n      sendJSON(response, 200, note); /* istanbul ignore next */cov_yvt6rhqjy.s[35]++;\n      return;\n    }).\n    catch(error => {/* istanbul ignore next */cov_yvt6rhqjy.f[7]++;cov_yvt6rhqjy.s[36]++;\n      sendStatus(response, 500, error); /* istanbul ignore next */cov_yvt6rhqjy.s[37]++;\n      return;\n    });\n  } else {/* istanbul ignore next */cov_yvt6rhqjy.b[3][1]++;cov_yvt6rhqjy.s[38]++;\n    storage.fetchAll().\n    then(notes => {/* istanbul ignore next */cov_yvt6rhqjy.f[8]++;cov_yvt6rhqjy.s[39]++;\n      sendJSON(response, 200, notes); /* istanbul ignore next */cov_yvt6rhqjy.s[40]++;\n      return;\n    }).\n    catch(error => {/* istanbul ignore next */cov_yvt6rhqjy.f[9]++;cov_yvt6rhqjy.s[41]++;\n      sendStatus(response, 500, error); /* istanbul ignore next */cov_yvt6rhqjy.s[42]++;\n      return;\n    });\n  }\n}","timestamp":"2017-12-08T05:39:59.839Z"}
{"level":"info","message":"adding a DELETE url and callbacck","timestamp":"2017-12-08T05:39:59.839Z"}
{"level":"info","message":"/api/notes","timestamp":"2017-12-08T05:39:59.839Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[10]++;cov_yvt6rhqjy.s[44]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_yvt6rhqjy.b[4][0]++;cov_yvt6rhqjy.s[45]++;\n    storage.delete(request.url.query.id).\n    then(() => {/* istanbul ignore next */cov_yvt6rhqjy.f[11]++;cov_yvt6rhqjy.s[46]++;\n      sendStatus(response, 204, 'successfully deleted'); /* istanbul ignore next */cov_yvt6rhqjy.s[47]++;\n      return;\n    }).\n    catch(error => {/* istanbul ignore next */cov_yvt6rhqjy.f[12]++;cov_yvt6rhqjy.s[48]++;\n      sendStatus(response, 500, error); /* istanbul ignore next */cov_yvt6rhqjy.s[49]++;\n      return;\n    });\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[4][1]++;}cov_yvt6rhqjy.s[50]++;\n  sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[51]++;\n  return;\n}","timestamp":"2017-12-08T05:39:59.839Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-08T05:39:59.881Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T05:39:59.896Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T05:39:59.897Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[2]++;cov_yvt6rhqjy.s[16]++;\n  //TODO: run console.trace(); track what happens\n  if (!request.body) {/* istanbul ignore next */cov_yvt6rhqjy.b[0][0]++;cov_yvt6rhqjy.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[0][1]++;}\n  // checking if values are present- instead we should check if values match type\n  // if typeof\n  cov_yvt6rhqjy.s[19]++;if (typeof request.body.title !== 'string') {/* istanbul ignore next */cov_yvt6rhqjy.b[1][0]++;cov_yvt6rhqjy.s[20]++;\n    sendStatus(response, 400, 'title must be a string'); /* istanbul ignore next */cov_yvt6rhqjy.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[1][1]++;}cov_yvt6rhqjy.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_yvt6rhqjy.b[2][0]++;cov_yvt6rhqjy.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[2][1]++;}\n\n  let note = /* istanbul ignore next */(cov_yvt6rhqjy.s[25]++, new Note(request.body.title, request.body.content)); /* istanbul ignore next */cov_yvt6rhqjy.s[26]++;\n  storage.addItem(note).\n  then(() => {/* istanbul ignore next */cov_yvt6rhqjy.f[3]++;cov_yvt6rhqjy.s[27]++;\n    sendJSON(response, 200, note); /* istanbul ignore next */cov_yvt6rhqjy.s[28]++;\n    return;\n  }).\n  catch(error => {/* istanbul ignore next */cov_yvt6rhqjy.f[4]++;cov_yvt6rhqjy.s[29]++;\n    sendStatus(response, 500, error); /* istanbul ignore next */cov_yvt6rhqjy.s[30]++;\n    return;\n  });\n}","timestamp":"2017-12-08T05:39:59.898Z"}
{"level":"info","message":"responding with a status code of 200 and the following data","timestamp":"2017-12-08T05:39:59.901Z"}
{"id":"3b19a7a0-dbda-11e7-bd10-03c34b77f060","timestamp":"2017-12-08T05:39:59.901Z","title":"food that sounds yummy","content":"eggs and steak","level":"info","message":""}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T05:39:59.914Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T05:39:59.914Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[5]++;cov_yvt6rhqjy.s[32]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_yvt6rhqjy.b[3][0]++;cov_yvt6rhqjy.s[33]++;\n    storage.fetchItem(request.url.query.id).\n    then(note => {/* istanbul ignore next */cov_yvt6rhqjy.f[6]++;cov_yvt6rhqjy.s[34]++;\n      sendJSON(response, 200, note); /* istanbul ignore next */cov_yvt6rhqjy.s[35]++;\n      return;\n    }).\n    catch(error => {/* istanbul ignore next */cov_yvt6rhqjy.f[7]++;cov_yvt6rhqjy.s[36]++;\n      sendStatus(response, 500, error); /* istanbul ignore next */cov_yvt6rhqjy.s[37]++;\n      return;\n    });\n  } else {/* istanbul ignore next */cov_yvt6rhqjy.b[3][1]++;cov_yvt6rhqjy.s[38]++;\n    storage.fetchAll().\n    then(notes => {/* istanbul ignore next */cov_yvt6rhqjy.f[8]++;cov_yvt6rhqjy.s[39]++;\n      sendJSON(response, 200, notes); /* istanbul ignore next */cov_yvt6rhqjy.s[40]++;\n      return;\n    }).\n    catch(error => {/* istanbul ignore next */cov_yvt6rhqjy.f[9]++;cov_yvt6rhqjy.s[41]++;\n      sendStatus(response, 500, error); /* istanbul ignore next */cov_yvt6rhqjy.s[42]++;\n      return;\n    });\n  }\n}","timestamp":"2017-12-08T05:39:59.914Z"}
{"level":"info","message":"responding with a status code of 200 and the following data","timestamp":"2017-12-08T05:39:59.915Z"}
[{"id":"ab9bf380-dbd9-11e7-b6a7-8f46d9f8761d","timestamp":"2017-12-08T05:35:59.160Z","title":"food that sounds yummy","content":"eggs and steak"},{"id":"e2c44830-dbd9-11e7-bfe4-1d554c4e6923","timestamp":"2017-12-08T05:37:31.699Z","title":"food that sounds yummy","content":"eggs and steak"},{"id":"23941430-dbda-11e7-aa57-3d8910f94ca5","timestamp":"2017-12-08T05:39:20.435Z","title":"food that sounds yummy","content":"eggs and steak"},{"id":"298b54c0-dbda-11e7-ae5d-6dd9671a7f44","timestamp":"2017-12-08T05:39:30.445Z","title":"food that sounds yummy","content":"eggs and steak"},{"id":"3b19a7a0-dbda-11e7-bd10-03c34b77f060","timestamp":"2017-12-08T05:39:59.898Z","title":"food that sounds yummy","content":"eggs and steak"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T05:39:59.919Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T05:39:59.920Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[5]++;cov_yvt6rhqjy.s[32]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_yvt6rhqjy.b[3][0]++;cov_yvt6rhqjy.s[33]++;\n    storage.fetchItem(request.url.query.id).\n    then(note => {/* istanbul ignore next */cov_yvt6rhqjy.f[6]++;cov_yvt6rhqjy.s[34]++;\n      sendJSON(response, 200, note); /* istanbul ignore next */cov_yvt6rhqjy.s[35]++;\n      return;\n    }).\n    catch(error => {/* istanbul ignore next */cov_yvt6rhqjy.f[7]++;cov_yvt6rhqjy.s[36]++;\n      sendStatus(response, 500, error); /* istanbul ignore next */cov_yvt6rhqjy.s[37]++;\n      return;\n    });\n  } else {/* istanbul ignore next */cov_yvt6rhqjy.b[3][1]++;cov_yvt6rhqjy.s[38]++;\n    storage.fetchAll().\n    then(notes => {/* istanbul ignore next */cov_yvt6rhqjy.f[8]++;cov_yvt6rhqjy.s[39]++;\n      sendJSON(response, 200, notes); /* istanbul ignore next */cov_yvt6rhqjy.s[40]++;\n      return;\n    }).\n    catch(error => {/* istanbul ignore next */cov_yvt6rhqjy.f[9]++;cov_yvt6rhqjy.s[41]++;\n      sendStatus(response, 500, error); /* istanbul ignore next */cov_yvt6rhqjy.s[42]++;\n      return;\n    });\n  }\n}","timestamp":"2017-12-08T05:39:59.920Z"}
{"level":"info","message":"responding with a status code of 200 and the following data","timestamp":"2017-12-08T05:39:59.921Z"}
{"id":"ab9bf380-dbd9-11e7-b6a7-8f46d9f8761d","timestamp":"2017-12-08T05:39:59.921Z","title":"food that sounds yummy","content":"eggs and steak","level":"info","message":""}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T05:39:59.923Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T05:39:59.924Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[10]++;cov_yvt6rhqjy.s[44]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_yvt6rhqjy.b[4][0]++;cov_yvt6rhqjy.s[45]++;\n    storage.delete(request.url.query.id).\n    then(() => {/* istanbul ignore next */cov_yvt6rhqjy.f[11]++;cov_yvt6rhqjy.s[46]++;\n      sendStatus(response, 204, 'successfully deleted'); /* istanbul ignore next */cov_yvt6rhqjy.s[47]++;\n      return;\n    }).\n    catch(error => {/* istanbul ignore next */cov_yvt6rhqjy.f[12]++;cov_yvt6rhqjy.s[48]++;\n      sendStatus(response, 500, error); /* istanbul ignore next */cov_yvt6rhqjy.s[49]++;\n      return;\n    });\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[4][1]++;}cov_yvt6rhqjy.s[50]++;\n  sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[51]++;\n  return;\n}","timestamp":"2017-12-08T05:39:59.924Z"}
{"level":"info","message":"__REQUEST_ERROR","timestamp":"2017-12-08T05:39:59.924Z"}
{"message":"storage.delete is not a function","stack":"TypeError: storage.delete is not a function\n    at Object.<anonymous>.router.delete (/home/ncarignan/cf/401/lab-assignments/08-09-vanilla-rest-server/lab-nicholasc/route/note-router.js:81:19)\n    at requestParser.parse.then.request (/home/ncarignan/cf/401/lab-assignments/08-09-vanilla-rest-server/lab-nicholasc/lib/router.js:48:89)\n    at process._tickCallback (internal/process/next_tick.js:109:7)","level":"info","timestamp":"2017-12-08T05:39:59.924Z"}
{"level":"info","message":"adding a POST url and callbacck","timestamp":"2017-12-08T05:40:25.835Z"}
{"level":"info","message":"/api/notes","timestamp":"2017-12-08T05:40:25.836Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[2]++;cov_yvt6rhqjy.s[16]++;\n  //TODO: run console.trace(); track what happens\n  if (!request.body) {/* istanbul ignore next */cov_yvt6rhqjy.b[0][0]++;cov_yvt6rhqjy.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[0][1]++;}\n  // checking if values are present- instead we should check if values match type\n  // if typeof\n  cov_yvt6rhqjy.s[19]++;if (typeof request.body.title !== 'string') {/* istanbul ignore next */cov_yvt6rhqjy.b[1][0]++;cov_yvt6rhqjy.s[20]++;\n    sendStatus(response, 400, 'title must be a string'); /* istanbul ignore next */cov_yvt6rhqjy.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[1][1]++;}cov_yvt6rhqjy.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_yvt6rhqjy.b[2][0]++;cov_yvt6rhqjy.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[2][1]++;}\n\n  let note = /* istanbul ignore next */(cov_yvt6rhqjy.s[25]++, new Note(request.body.title, request.body.content)); /* istanbul ignore next */cov_yvt6rhqjy.s[26]++;\n  storage.addItem(note).\n  then(() => {/* istanbul ignore next */cov_yvt6rhqjy.f[3]++;cov_yvt6rhqjy.s[27]++;\n    sendJSON(response, 200, note); /* istanbul ignore next */cov_yvt6rhqjy.s[28]++;\n    return;\n  }).\n  catch(error => {/* istanbul ignore next */cov_yvt6rhqjy.f[4]++;cov_yvt6rhqjy.s[29]++;\n    sendStatus(response, 500, error); /* istanbul ignore next */cov_yvt6rhqjy.s[30]++;\n    return;\n  });\n}","timestamp":"2017-12-08T05:40:25.836Z"}
{"level":"info","message":"adding a GET url and callbacck","timestamp":"2017-12-08T05:40:25.836Z"}
{"level":"info","message":"/api/notes","timestamp":"2017-12-08T05:40:25.836Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[5]++;cov_yvt6rhqjy.s[32]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_yvt6rhqjy.b[3][0]++;cov_yvt6rhqjy.s[33]++;\n    storage.fetchItem(request.url.query.id).\n    then(note => {/* istanbul ignore next */cov_yvt6rhqjy.f[6]++;cov_yvt6rhqjy.s[34]++;\n      sendJSON(response, 200, note); /* istanbul ignore next */cov_yvt6rhqjy.s[35]++;\n      return;\n    }).\n    catch(error => {/* istanbul ignore next */cov_yvt6rhqjy.f[7]++;cov_yvt6rhqjy.s[36]++;\n      sendStatus(response, 500, error); /* istanbul ignore next */cov_yvt6rhqjy.s[37]++;\n      return;\n    });\n  } else {/* istanbul ignore next */cov_yvt6rhqjy.b[3][1]++;cov_yvt6rhqjy.s[38]++;\n    storage.fetchAll().\n    then(notes => {/* istanbul ignore next */cov_yvt6rhqjy.f[8]++;cov_yvt6rhqjy.s[39]++;\n      sendJSON(response, 200, notes); /* istanbul ignore next */cov_yvt6rhqjy.s[40]++;\n      return;\n    }).\n    catch(error => {/* istanbul ignore next */cov_yvt6rhqjy.f[9]++;cov_yvt6rhqjy.s[41]++;\n      sendStatus(response, 500, error); /* istanbul ignore next */cov_yvt6rhqjy.s[42]++;\n      return;\n    });\n  }\n}","timestamp":"2017-12-08T05:40:25.836Z"}
{"level":"info","message":"adding a DELETE url and callbacck","timestamp":"2017-12-08T05:40:25.836Z"}
{"level":"info","message":"/api/notes","timestamp":"2017-12-08T05:40:25.836Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[10]++;cov_yvt6rhqjy.s[44]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_yvt6rhqjy.b[4][0]++;cov_yvt6rhqjy.s[45]++;\n    storage.delete(request.url.query.id).\n    then(() => {/* istanbul ignore next */cov_yvt6rhqjy.f[11]++;cov_yvt6rhqjy.s[46]++;\n      sendStatus(response, 204, 'successfully deleted'); /* istanbul ignore next */cov_yvt6rhqjy.s[47]++;\n      return;\n    }).\n    catch(error => {/* istanbul ignore next */cov_yvt6rhqjy.f[12]++;cov_yvt6rhqjy.s[48]++;\n      sendStatus(response, 500, error); /* istanbul ignore next */cov_yvt6rhqjy.s[49]++;\n      return;\n    });\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[4][1]++;}cov_yvt6rhqjy.s[50]++;\n  sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[51]++;\n  return;\n}","timestamp":"2017-12-08T05:40:25.836Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-08T05:40:25.881Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T05:40:25.896Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T05:40:25.897Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[2]++;cov_yvt6rhqjy.s[16]++;\n  //TODO: run console.trace(); track what happens\n  if (!request.body) {/* istanbul ignore next */cov_yvt6rhqjy.b[0][0]++;cov_yvt6rhqjy.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[0][1]++;}\n  // checking if values are present- instead we should check if values match type\n  // if typeof\n  cov_yvt6rhqjy.s[19]++;if (typeof request.body.title !== 'string') {/* istanbul ignore next */cov_yvt6rhqjy.b[1][0]++;cov_yvt6rhqjy.s[20]++;\n    sendStatus(response, 400, 'title must be a string'); /* istanbul ignore next */cov_yvt6rhqjy.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[1][1]++;}cov_yvt6rhqjy.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_yvt6rhqjy.b[2][0]++;cov_yvt6rhqjy.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[2][1]++;}\n\n  let note = /* istanbul ignore next */(cov_yvt6rhqjy.s[25]++, new Note(request.body.title, request.body.content)); /* istanbul ignore next */cov_yvt6rhqjy.s[26]++;\n  storage.addItem(note).\n  then(() => {/* istanbul ignore next */cov_yvt6rhqjy.f[3]++;cov_yvt6rhqjy.s[27]++;\n    sendJSON(response, 200, note); /* istanbul ignore next */cov_yvt6rhqjy.s[28]++;\n    return;\n  }).\n  catch(error => {/* istanbul ignore next */cov_yvt6rhqjy.f[4]++;cov_yvt6rhqjy.s[29]++;\n    sendStatus(response, 500, error); /* istanbul ignore next */cov_yvt6rhqjy.s[30]++;\n    return;\n  });\n}","timestamp":"2017-12-08T05:40:25.897Z"}
{"level":"info","message":"responding with a status code of 200 and the following data","timestamp":"2017-12-08T05:40:25.901Z"}
{"id":"4a98c990-dbda-11e7-902a-233bcd24deae","timestamp":"2017-12-08T05:40:25.901Z","title":"food that sounds yummy","content":"eggs and steak","level":"info","message":""}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T05:40:25.914Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T05:40:25.914Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[5]++;cov_yvt6rhqjy.s[32]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_yvt6rhqjy.b[3][0]++;cov_yvt6rhqjy.s[33]++;\n    storage.fetchItem(request.url.query.id).\n    then(note => {/* istanbul ignore next */cov_yvt6rhqjy.f[6]++;cov_yvt6rhqjy.s[34]++;\n      sendJSON(response, 200, note); /* istanbul ignore next */cov_yvt6rhqjy.s[35]++;\n      return;\n    }).\n    catch(error => {/* istanbul ignore next */cov_yvt6rhqjy.f[7]++;cov_yvt6rhqjy.s[36]++;\n      sendStatus(response, 500, error); /* istanbul ignore next */cov_yvt6rhqjy.s[37]++;\n      return;\n    });\n  } else {/* istanbul ignore next */cov_yvt6rhqjy.b[3][1]++;cov_yvt6rhqjy.s[38]++;\n    storage.fetchAll().\n    then(notes => {/* istanbul ignore next */cov_yvt6rhqjy.f[8]++;cov_yvt6rhqjy.s[39]++;\n      sendJSON(response, 200, notes); /* istanbul ignore next */cov_yvt6rhqjy.s[40]++;\n      return;\n    }).\n    catch(error => {/* istanbul ignore next */cov_yvt6rhqjy.f[9]++;cov_yvt6rhqjy.s[41]++;\n      sendStatus(response, 500, error); /* istanbul ignore next */cov_yvt6rhqjy.s[42]++;\n      return;\n    });\n  }\n}","timestamp":"2017-12-08T05:40:25.914Z"}
{"level":"info","message":"responding with a status code of 200 and the following data","timestamp":"2017-12-08T05:40:25.915Z"}
[{"id":"ab9bf380-dbd9-11e7-b6a7-8f46d9f8761d","timestamp":"2017-12-08T05:35:59.160Z","title":"food that sounds yummy","content":"eggs and steak"},{"id":"e2c44830-dbd9-11e7-bfe4-1d554c4e6923","timestamp":"2017-12-08T05:37:31.699Z","title":"food that sounds yummy","content":"eggs and steak"},{"id":"23941430-dbda-11e7-aa57-3d8910f94ca5","timestamp":"2017-12-08T05:39:20.435Z","title":"food that sounds yummy","content":"eggs and steak"},{"id":"298b54c0-dbda-11e7-ae5d-6dd9671a7f44","timestamp":"2017-12-08T05:39:30.445Z","title":"food that sounds yummy","content":"eggs and steak"},{"id":"3b19a7a0-dbda-11e7-bd10-03c34b77f060","timestamp":"2017-12-08T05:39:59.898Z","title":"food that sounds yummy","content":"eggs and steak"},{"id":"4a98c990-dbda-11e7-902a-233bcd24deae","timestamp":"2017-12-08T05:40:25.898Z","title":"food that sounds yummy","content":"eggs and steak"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T05:40:25.921Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T05:40:25.922Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[5]++;cov_yvt6rhqjy.s[32]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_yvt6rhqjy.b[3][0]++;cov_yvt6rhqjy.s[33]++;\n    storage.fetchItem(request.url.query.id).\n    then(note => {/* istanbul ignore next */cov_yvt6rhqjy.f[6]++;cov_yvt6rhqjy.s[34]++;\n      sendJSON(response, 200, note); /* istanbul ignore next */cov_yvt6rhqjy.s[35]++;\n      return;\n    }).\n    catch(error => {/* istanbul ignore next */cov_yvt6rhqjy.f[7]++;cov_yvt6rhqjy.s[36]++;\n      sendStatus(response, 500, error); /* istanbul ignore next */cov_yvt6rhqjy.s[37]++;\n      return;\n    });\n  } else {/* istanbul ignore next */cov_yvt6rhqjy.b[3][1]++;cov_yvt6rhqjy.s[38]++;\n    storage.fetchAll().\n    then(notes => {/* istanbul ignore next */cov_yvt6rhqjy.f[8]++;cov_yvt6rhqjy.s[39]++;\n      sendJSON(response, 200, notes); /* istanbul ignore next */cov_yvt6rhqjy.s[40]++;\n      return;\n    }).\n    catch(error => {/* istanbul ignore next */cov_yvt6rhqjy.f[9]++;cov_yvt6rhqjy.s[41]++;\n      sendStatus(response, 500, error); /* istanbul ignore next */cov_yvt6rhqjy.s[42]++;\n      return;\n    });\n  }\n}","timestamp":"2017-12-08T05:40:25.922Z"}
{"level":"info","message":"responding with a status code of 500 due to Error: __STORAGE_ERROR__ item not found","timestamp":"2017-12-08T05:40:25.922Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T05:40:25.924Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T05:40:25.924Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[10]++;cov_yvt6rhqjy.s[44]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_yvt6rhqjy.b[4][0]++;cov_yvt6rhqjy.s[45]++;\n    storage.delete(request.url.query.id).\n    then(() => {/* istanbul ignore next */cov_yvt6rhqjy.f[11]++;cov_yvt6rhqjy.s[46]++;\n      sendStatus(response, 204, 'successfully deleted'); /* istanbul ignore next */cov_yvt6rhqjy.s[47]++;\n      return;\n    }).\n    catch(error => {/* istanbul ignore next */cov_yvt6rhqjy.f[12]++;cov_yvt6rhqjy.s[48]++;\n      sendStatus(response, 500, error); /* istanbul ignore next */cov_yvt6rhqjy.s[49]++;\n      return;\n    });\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[4][1]++;}cov_yvt6rhqjy.s[50]++;\n  sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[51]++;\n  return;\n}","timestamp":"2017-12-08T05:40:25.924Z"}
{"level":"info","message":"__REQUEST_ERROR","timestamp":"2017-12-08T05:40:25.925Z"}
{"message":"storage.delete is not a function","stack":"TypeError: storage.delete is not a function\n    at Object.<anonymous>.router.delete (/home/ncarignan/cf/401/lab-assignments/08-09-vanilla-rest-server/lab-nicholasc/route/note-router.js:81:19)\n    at requestParser.parse.then.request (/home/ncarignan/cf/401/lab-assignments/08-09-vanilla-rest-server/lab-nicholasc/lib/router.js:48:89)\n    at process._tickCallback (internal/process/next_tick.js:109:7)","level":"info","timestamp":"2017-12-08T05:40:25.925Z"}
{"level":"info","message":"adding a POST url and callbacck","timestamp":"2017-12-08T05:40:48.439Z"}
{"level":"info","message":"/api/notes","timestamp":"2017-12-08T05:40:48.440Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[2]++;cov_yvt6rhqjy.s[16]++;\n  //TODO: run console.trace(); track what happens\n  if (!request.body) {/* istanbul ignore next */cov_yvt6rhqjy.b[0][0]++;cov_yvt6rhqjy.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[0][1]++;}\n  // checking if values are present- instead we should check if values match type\n  // if typeof\n  cov_yvt6rhqjy.s[19]++;if (typeof request.body.title !== 'string') {/* istanbul ignore next */cov_yvt6rhqjy.b[1][0]++;cov_yvt6rhqjy.s[20]++;\n    sendStatus(response, 400, 'title must be a string'); /* istanbul ignore next */cov_yvt6rhqjy.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[1][1]++;}cov_yvt6rhqjy.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_yvt6rhqjy.b[2][0]++;cov_yvt6rhqjy.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[2][1]++;}\n\n  let note = /* istanbul ignore next */(cov_yvt6rhqjy.s[25]++, new Note(request.body.title, request.body.content)); /* istanbul ignore next */cov_yvt6rhqjy.s[26]++;\n  storage.addItem(note).\n  then(() => {/* istanbul ignore next */cov_yvt6rhqjy.f[3]++;cov_yvt6rhqjy.s[27]++;\n    sendJSON(response, 200, note); /* istanbul ignore next */cov_yvt6rhqjy.s[28]++;\n    return;\n  }).\n  catch(error => {/* istanbul ignore next */cov_yvt6rhqjy.f[4]++;cov_yvt6rhqjy.s[29]++;\n    sendStatus(response, 500, error); /* istanbul ignore next */cov_yvt6rhqjy.s[30]++;\n    return;\n  });\n}","timestamp":"2017-12-08T05:40:48.440Z"}
{"level":"info","message":"adding a GET url and callbacck","timestamp":"2017-12-08T05:40:48.440Z"}
{"level":"info","message":"/api/notes","timestamp":"2017-12-08T05:40:48.440Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[5]++;cov_yvt6rhqjy.s[32]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_yvt6rhqjy.b[3][0]++;cov_yvt6rhqjy.s[33]++;\n    storage.fetchItem(request.url.query.id).\n    then(note => {/* istanbul ignore next */cov_yvt6rhqjy.f[6]++;cov_yvt6rhqjy.s[34]++;\n      sendJSON(response, 200, note); /* istanbul ignore next */cov_yvt6rhqjy.s[35]++;\n      return;\n    }).\n    catch(error => {/* istanbul ignore next */cov_yvt6rhqjy.f[7]++;cov_yvt6rhqjy.s[36]++;\n      sendStatus(response, 500, error); /* istanbul ignore next */cov_yvt6rhqjy.s[37]++;\n      return;\n    });\n  } else {/* istanbul ignore next */cov_yvt6rhqjy.b[3][1]++;cov_yvt6rhqjy.s[38]++;\n    storage.fetchAll().\n    then(notes => {/* istanbul ignore next */cov_yvt6rhqjy.f[8]++;cov_yvt6rhqjy.s[39]++;\n      sendJSON(response, 200, notes); /* istanbul ignore next */cov_yvt6rhqjy.s[40]++;\n      return;\n    }).\n    catch(error => {/* istanbul ignore next */cov_yvt6rhqjy.f[9]++;cov_yvt6rhqjy.s[41]++;\n      sendStatus(response, 500, error); /* istanbul ignore next */cov_yvt6rhqjy.s[42]++;\n      return;\n    });\n  }\n}","timestamp":"2017-12-08T05:40:48.440Z"}
{"level":"info","message":"adding a DELETE url and callbacck","timestamp":"2017-12-08T05:40:48.440Z"}
{"level":"info","message":"/api/notes","timestamp":"2017-12-08T05:40:48.440Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[10]++;cov_yvt6rhqjy.s[44]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_yvt6rhqjy.b[4][0]++;cov_yvt6rhqjy.s[45]++;\n    storage.delete(request.url.query.id).\n    then(() => {/* istanbul ignore next */cov_yvt6rhqjy.f[11]++;cov_yvt6rhqjy.s[46]++;\n      sendStatus(response, 204, 'successfully deleted'); /* istanbul ignore next */cov_yvt6rhqjy.s[47]++;\n      return;\n    }).\n    catch(error => {/* istanbul ignore next */cov_yvt6rhqjy.f[12]++;cov_yvt6rhqjy.s[48]++;\n      sendStatus(response, 500, error); /* istanbul ignore next */cov_yvt6rhqjy.s[49]++;\n      return;\n    });\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[4][1]++;}cov_yvt6rhqjy.s[50]++;\n  sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[51]++;\n  return;\n}","timestamp":"2017-12-08T05:40:48.440Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-08T05:40:48.482Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T05:40:48.497Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T05:40:48.498Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[2]++;cov_yvt6rhqjy.s[16]++;\n  //TODO: run console.trace(); track what happens\n  if (!request.body) {/* istanbul ignore next */cov_yvt6rhqjy.b[0][0]++;cov_yvt6rhqjy.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[0][1]++;}\n  // checking if values are present- instead we should check if values match type\n  // if typeof\n  cov_yvt6rhqjy.s[19]++;if (typeof request.body.title !== 'string') {/* istanbul ignore next */cov_yvt6rhqjy.b[1][0]++;cov_yvt6rhqjy.s[20]++;\n    sendStatus(response, 400, 'title must be a string'); /* istanbul ignore next */cov_yvt6rhqjy.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[1][1]++;}cov_yvt6rhqjy.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_yvt6rhqjy.b[2][0]++;cov_yvt6rhqjy.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[2][1]++;}\n\n  let note = /* istanbul ignore next */(cov_yvt6rhqjy.s[25]++, new Note(request.body.title, request.body.content)); /* istanbul ignore next */cov_yvt6rhqjy.s[26]++;\n  storage.addItem(note).\n  then(() => {/* istanbul ignore next */cov_yvt6rhqjy.f[3]++;cov_yvt6rhqjy.s[27]++;\n    sendJSON(response, 200, note); /* istanbul ignore next */cov_yvt6rhqjy.s[28]++;\n    return;\n  }).\n  catch(error => {/* istanbul ignore next */cov_yvt6rhqjy.f[4]++;cov_yvt6rhqjy.s[29]++;\n    sendStatus(response, 500, error); /* istanbul ignore next */cov_yvt6rhqjy.s[30]++;\n    return;\n  });\n}","timestamp":"2017-12-08T05:40:48.498Z"}
{"level":"info","message":"responding with a status code of 200 and the following data","timestamp":"2017-12-08T05:40:48.502Z"}
{"id":"58119430-dbda-11e7-a198-e3caf5ab958f","timestamp":"2017-12-08T05:40:48.503Z","title":"food that sounds yummy","content":"eggs and steak","level":"info","message":""}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T05:40:48.515Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T05:40:48.515Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[5]++;cov_yvt6rhqjy.s[32]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_yvt6rhqjy.b[3][0]++;cov_yvt6rhqjy.s[33]++;\n    storage.fetchItem(request.url.query.id).\n    then(note => {/* istanbul ignore next */cov_yvt6rhqjy.f[6]++;cov_yvt6rhqjy.s[34]++;\n      sendJSON(response, 200, note); /* istanbul ignore next */cov_yvt6rhqjy.s[35]++;\n      return;\n    }).\n    catch(error => {/* istanbul ignore next */cov_yvt6rhqjy.f[7]++;cov_yvt6rhqjy.s[36]++;\n      sendStatus(response, 500, error); /* istanbul ignore next */cov_yvt6rhqjy.s[37]++;\n      return;\n    });\n  } else {/* istanbul ignore next */cov_yvt6rhqjy.b[3][1]++;cov_yvt6rhqjy.s[38]++;\n    storage.fetchAll().\n    then(notes => {/* istanbul ignore next */cov_yvt6rhqjy.f[8]++;cov_yvt6rhqjy.s[39]++;\n      sendJSON(response, 200, notes); /* istanbul ignore next */cov_yvt6rhqjy.s[40]++;\n      return;\n    }).\n    catch(error => {/* istanbul ignore next */cov_yvt6rhqjy.f[9]++;cov_yvt6rhqjy.s[41]++;\n      sendStatus(response, 500, error); /* istanbul ignore next */cov_yvt6rhqjy.s[42]++;\n      return;\n    });\n  }\n}","timestamp":"2017-12-08T05:40:48.515Z"}
{"level":"info","message":"responding with a status code of 200 and the following data","timestamp":"2017-12-08T05:40:48.516Z"}
[{"id":"ab9bf380-dbd9-11e7-b6a7-8f46d9f8761d","timestamp":"2017-12-08T05:35:59.160Z","title":"food that sounds yummy","content":"eggs and steak"},{"id":"e2c44830-dbd9-11e7-bfe4-1d554c4e6923","timestamp":"2017-12-08T05:37:31.699Z","title":"food that sounds yummy","content":"eggs and steak"},{"id":"23941430-dbda-11e7-aa57-3d8910f94ca5","timestamp":"2017-12-08T05:39:20.435Z","title":"food that sounds yummy","content":"eggs and steak"},{"id":"298b54c0-dbda-11e7-ae5d-6dd9671a7f44","timestamp":"2017-12-08T05:39:30.445Z","title":"food that sounds yummy","content":"eggs and steak"},{"id":"3b19a7a0-dbda-11e7-bd10-03c34b77f060","timestamp":"2017-12-08T05:39:59.898Z","title":"food that sounds yummy","content":"eggs and steak"},{"id":"4a98c990-dbda-11e7-902a-233bcd24deae","timestamp":"2017-12-08T05:40:25.898Z","title":"food that sounds yummy","content":"eggs and steak"},{"id":"58119430-dbda-11e7-a198-e3caf5ab958f","timestamp":"2017-12-08T05:40:48.499Z","title":"food that sounds yummy","content":"eggs and steak"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T05:40:48.522Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T05:40:48.523Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[5]++;cov_yvt6rhqjy.s[32]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_yvt6rhqjy.b[3][0]++;cov_yvt6rhqjy.s[33]++;\n    storage.fetchItem(request.url.query.id).\n    then(note => {/* istanbul ignore next */cov_yvt6rhqjy.f[6]++;cov_yvt6rhqjy.s[34]++;\n      sendJSON(response, 200, note); /* istanbul ignore next */cov_yvt6rhqjy.s[35]++;\n      return;\n    }).\n    catch(error => {/* istanbul ignore next */cov_yvt6rhqjy.f[7]++;cov_yvt6rhqjy.s[36]++;\n      sendStatus(response, 500, error); /* istanbul ignore next */cov_yvt6rhqjy.s[37]++;\n      return;\n    });\n  } else {/* istanbul ignore next */cov_yvt6rhqjy.b[3][1]++;cov_yvt6rhqjy.s[38]++;\n    storage.fetchAll().\n    then(notes => {/* istanbul ignore next */cov_yvt6rhqjy.f[8]++;cov_yvt6rhqjy.s[39]++;\n      sendJSON(response, 200, notes); /* istanbul ignore next */cov_yvt6rhqjy.s[40]++;\n      return;\n    }).\n    catch(error => {/* istanbul ignore next */cov_yvt6rhqjy.f[9]++;cov_yvt6rhqjy.s[41]++;\n      sendStatus(response, 500, error); /* istanbul ignore next */cov_yvt6rhqjy.s[42]++;\n      return;\n    });\n  }\n}","timestamp":"2017-12-08T05:40:48.523Z"}
{"level":"info","message":"responding with a status code of 500 due to Error: __STORAGE_ERROR__ item not found","timestamp":"2017-12-08T05:40:48.523Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T05:40:48.525Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T05:40:48.526Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[10]++;cov_yvt6rhqjy.s[44]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_yvt6rhqjy.b[4][0]++;cov_yvt6rhqjy.s[45]++;\n    storage.delete(request.url.query.id).\n    then(() => {/* istanbul ignore next */cov_yvt6rhqjy.f[11]++;cov_yvt6rhqjy.s[46]++;\n      sendStatus(response, 204, 'successfully deleted'); /* istanbul ignore next */cov_yvt6rhqjy.s[47]++;\n      return;\n    }).\n    catch(error => {/* istanbul ignore next */cov_yvt6rhqjy.f[12]++;cov_yvt6rhqjy.s[48]++;\n      sendStatus(response, 500, error); /* istanbul ignore next */cov_yvt6rhqjy.s[49]++;\n      return;\n    });\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[4][1]++;}cov_yvt6rhqjy.s[50]++;\n  sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[51]++;\n  return;\n}","timestamp":"2017-12-08T05:40:48.526Z"}
{"level":"info","message":"__REQUEST_ERROR","timestamp":"2017-12-08T05:40:48.526Z"}
{"message":"storage.delete is not a function","stack":"TypeError: storage.delete is not a function\n    at Object.<anonymous>.router.delete (/home/ncarignan/cf/401/lab-assignments/08-09-vanilla-rest-server/lab-nicholasc/route/note-router.js:81:19)\n    at requestParser.parse.then.request (/home/ncarignan/cf/401/lab-assignments/08-09-vanilla-rest-server/lab-nicholasc/lib/router.js:48:89)\n    at process._tickCallback (internal/process/next_tick.js:109:7)","level":"info","timestamp":"2017-12-08T05:40:48.526Z"}
{"level":"info","message":"adding a POST url and callbacck","timestamp":"2017-12-08T05:41:14.119Z"}
{"level":"info","message":"/api/notes","timestamp":"2017-12-08T05:41:14.121Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[2]++;cov_yvt6rhqjy.s[16]++;\n  //TODO: run console.trace(); track what happens\n  if (!request.body) {/* istanbul ignore next */cov_yvt6rhqjy.b[0][0]++;cov_yvt6rhqjy.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[0][1]++;}\n  // checking if values are present- instead we should check if values match type\n  // if typeof\n  cov_yvt6rhqjy.s[19]++;if (typeof request.body.title !== 'string') {/* istanbul ignore next */cov_yvt6rhqjy.b[1][0]++;cov_yvt6rhqjy.s[20]++;\n    sendStatus(response, 400, 'title must be a string'); /* istanbul ignore next */cov_yvt6rhqjy.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[1][1]++;}cov_yvt6rhqjy.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_yvt6rhqjy.b[2][0]++;cov_yvt6rhqjy.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[2][1]++;}\n\n  let note = /* istanbul ignore next */(cov_yvt6rhqjy.s[25]++, new Note(request.body.title, request.body.content)); /* istanbul ignore next */cov_yvt6rhqjy.s[26]++;\n  storage.addItem(note).\n  then(() => {/* istanbul ignore next */cov_yvt6rhqjy.f[3]++;cov_yvt6rhqjy.s[27]++;\n    sendJSON(response, 200, note); /* istanbul ignore next */cov_yvt6rhqjy.s[28]++;\n    return;\n  }).\n  catch(error => {/* istanbul ignore next */cov_yvt6rhqjy.f[4]++;cov_yvt6rhqjy.s[29]++;\n    sendStatus(response, 500, error); /* istanbul ignore next */cov_yvt6rhqjy.s[30]++;\n    return;\n  });\n}","timestamp":"2017-12-08T05:41:14.121Z"}
{"level":"info","message":"adding a GET url and callbacck","timestamp":"2017-12-08T05:41:14.121Z"}
{"level":"info","message":"/api/notes","timestamp":"2017-12-08T05:41:14.121Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[5]++;cov_yvt6rhqjy.s[32]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_yvt6rhqjy.b[3][0]++;cov_yvt6rhqjy.s[33]++;\n    storage.fetchItem(request.url.query.id).\n    then(note => {/* istanbul ignore next */cov_yvt6rhqjy.f[6]++;cov_yvt6rhqjy.s[34]++;\n      sendJSON(response, 200, note); /* istanbul ignore next */cov_yvt6rhqjy.s[35]++;\n      return;\n    }).\n    catch(error => {/* istanbul ignore next */cov_yvt6rhqjy.f[7]++;cov_yvt6rhqjy.s[36]++;\n      sendStatus(response, 500, error); /* istanbul ignore next */cov_yvt6rhqjy.s[37]++;\n      return;\n    });\n  } else {/* istanbul ignore next */cov_yvt6rhqjy.b[3][1]++;cov_yvt6rhqjy.s[38]++;\n    storage.fetchAll().\n    then(notes => {/* istanbul ignore next */cov_yvt6rhqjy.f[8]++;cov_yvt6rhqjy.s[39]++;\n      sendJSON(response, 200, notes); /* istanbul ignore next */cov_yvt6rhqjy.s[40]++;\n      return;\n    }).\n    catch(error => {/* istanbul ignore next */cov_yvt6rhqjy.f[9]++;cov_yvt6rhqjy.s[41]++;\n      sendStatus(response, 500, error); /* istanbul ignore next */cov_yvt6rhqjy.s[42]++;\n      return;\n    });\n  }\n}","timestamp":"2017-12-08T05:41:14.121Z"}
{"level":"info","message":"adding a DELETE url and callbacck","timestamp":"2017-12-08T05:41:14.121Z"}
{"level":"info","message":"/api/notes","timestamp":"2017-12-08T05:41:14.121Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[10]++;cov_yvt6rhqjy.s[44]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_yvt6rhqjy.b[4][0]++;cov_yvt6rhqjy.s[45]++;\n    storage.delete(request.url.query.id).\n    then(() => {/* istanbul ignore next */cov_yvt6rhqjy.f[11]++;cov_yvt6rhqjy.s[46]++;\n      sendStatus(response, 204, 'successfully deleted'); /* istanbul ignore next */cov_yvt6rhqjy.s[47]++;\n      return;\n    }).\n    catch(error => {/* istanbul ignore next */cov_yvt6rhqjy.f[12]++;cov_yvt6rhqjy.s[48]++;\n      sendStatus(response, 500, error); /* istanbul ignore next */cov_yvt6rhqjy.s[49]++;\n      return;\n    });\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[4][1]++;}cov_yvt6rhqjy.s[50]++;\n  sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[51]++;\n  return;\n}","timestamp":"2017-12-08T05:41:14.121Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-08T05:41:14.172Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T05:41:14.188Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T05:41:14.190Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[2]++;cov_yvt6rhqjy.s[16]++;\n  //TODO: run console.trace(); track what happens\n  if (!request.body) {/* istanbul ignore next */cov_yvt6rhqjy.b[0][0]++;cov_yvt6rhqjy.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[0][1]++;}\n  // checking if values are present- instead we should check if values match type\n  // if typeof\n  cov_yvt6rhqjy.s[19]++;if (typeof request.body.title !== 'string') {/* istanbul ignore next */cov_yvt6rhqjy.b[1][0]++;cov_yvt6rhqjy.s[20]++;\n    sendStatus(response, 400, 'title must be a string'); /* istanbul ignore next */cov_yvt6rhqjy.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[1][1]++;}cov_yvt6rhqjy.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_yvt6rhqjy.b[2][0]++;cov_yvt6rhqjy.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[2][1]++;}\n\n  let note = /* istanbul ignore next */(cov_yvt6rhqjy.s[25]++, new Note(request.body.title, request.body.content)); /* istanbul ignore next */cov_yvt6rhqjy.s[26]++;\n  storage.addItem(note).\n  then(() => {/* istanbul ignore next */cov_yvt6rhqjy.f[3]++;cov_yvt6rhqjy.s[27]++;\n    sendJSON(response, 200, note); /* istanbul ignore next */cov_yvt6rhqjy.s[28]++;\n    return;\n  }).\n  catch(error => {/* istanbul ignore next */cov_yvt6rhqjy.f[4]++;cov_yvt6rhqjy.s[29]++;\n    sendStatus(response, 500, error); /* istanbul ignore next */cov_yvt6rhqjy.s[30]++;\n    return;\n  });\n}","timestamp":"2017-12-08T05:41:14.190Z"}
{"level":"info","message":"responding with a status code of 200 and the following data","timestamp":"2017-12-08T05:41:14.194Z"}
{"id":"6761b6e0-dbda-11e7-93e4-533474af1c5b","timestamp":"2017-12-08T05:41:14.194Z","title":"food that sounds yummy","content":"eggs and steak","level":"info","message":""}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T05:41:14.206Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T05:41:14.206Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[5]++;cov_yvt6rhqjy.s[32]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_yvt6rhqjy.b[3][0]++;cov_yvt6rhqjy.s[33]++;\n    storage.fetchItem(request.url.query.id).\n    then(note => {/* istanbul ignore next */cov_yvt6rhqjy.f[6]++;cov_yvt6rhqjy.s[34]++;\n      sendJSON(response, 200, note); /* istanbul ignore next */cov_yvt6rhqjy.s[35]++;\n      return;\n    }).\n    catch(error => {/* istanbul ignore next */cov_yvt6rhqjy.f[7]++;cov_yvt6rhqjy.s[36]++;\n      sendStatus(response, 500, error); /* istanbul ignore next */cov_yvt6rhqjy.s[37]++;\n      return;\n    });\n  } else {/* istanbul ignore next */cov_yvt6rhqjy.b[3][1]++;cov_yvt6rhqjy.s[38]++;\n    storage.fetchAll().\n    then(notes => {/* istanbul ignore next */cov_yvt6rhqjy.f[8]++;cov_yvt6rhqjy.s[39]++;\n      sendJSON(response, 200, notes); /* istanbul ignore next */cov_yvt6rhqjy.s[40]++;\n      return;\n    }).\n    catch(error => {/* istanbul ignore next */cov_yvt6rhqjy.f[9]++;cov_yvt6rhqjy.s[41]++;\n      sendStatus(response, 500, error); /* istanbul ignore next */cov_yvt6rhqjy.s[42]++;\n      return;\n    });\n  }\n}","timestamp":"2017-12-08T05:41:14.206Z"}
{"level":"info","message":"responding with a status code of 200 and the following data","timestamp":"2017-12-08T05:41:14.207Z"}
[{"id":"ab9bf380-dbd9-11e7-b6a7-8f46d9f8761d","timestamp":"2017-12-08T05:35:59.160Z","title":"food that sounds yummy","content":"eggs and steak"},{"id":"e2c44830-dbd9-11e7-bfe4-1d554c4e6923","timestamp":"2017-12-08T05:37:31.699Z","title":"food that sounds yummy","content":"eggs and steak"},{"id":"23941430-dbda-11e7-aa57-3d8910f94ca5","timestamp":"2017-12-08T05:39:20.435Z","title":"food that sounds yummy","content":"eggs and steak"},{"id":"298b54c0-dbda-11e7-ae5d-6dd9671a7f44","timestamp":"2017-12-08T05:39:30.445Z","title":"food that sounds yummy","content":"eggs and steak"},{"id":"3b19a7a0-dbda-11e7-bd10-03c34b77f060","timestamp":"2017-12-08T05:39:59.898Z","title":"food that sounds yummy","content":"eggs and steak"},{"id":"4a98c990-dbda-11e7-902a-233bcd24deae","timestamp":"2017-12-08T05:40:25.898Z","title":"food that sounds yummy","content":"eggs and steak"},{"id":"58119430-dbda-11e7-a198-e3caf5ab958f","timestamp":"2017-12-08T05:40:48.499Z","title":"food that sounds yummy","content":"eggs and steak"},{"id":"6761b6e0-dbda-11e7-93e4-533474af1c5b","timestamp":"2017-12-08T05:41:14.190Z","title":"food that sounds yummy","content":"eggs and steak"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T05:41:14.212Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T05:41:14.212Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[5]++;cov_yvt6rhqjy.s[32]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_yvt6rhqjy.b[3][0]++;cov_yvt6rhqjy.s[33]++;\n    storage.fetchItem(request.url.query.id).\n    then(note => {/* istanbul ignore next */cov_yvt6rhqjy.f[6]++;cov_yvt6rhqjy.s[34]++;\n      sendJSON(response, 200, note); /* istanbul ignore next */cov_yvt6rhqjy.s[35]++;\n      return;\n    }).\n    catch(error => {/* istanbul ignore next */cov_yvt6rhqjy.f[7]++;cov_yvt6rhqjy.s[36]++;\n      sendStatus(response, 500, error); /* istanbul ignore next */cov_yvt6rhqjy.s[37]++;\n      return;\n    });\n  } else {/* istanbul ignore next */cov_yvt6rhqjy.b[3][1]++;cov_yvt6rhqjy.s[38]++;\n    storage.fetchAll().\n    then(notes => {/* istanbul ignore next */cov_yvt6rhqjy.f[8]++;cov_yvt6rhqjy.s[39]++;\n      sendJSON(response, 200, notes); /* istanbul ignore next */cov_yvt6rhqjy.s[40]++;\n      return;\n    }).\n    catch(error => {/* istanbul ignore next */cov_yvt6rhqjy.f[9]++;cov_yvt6rhqjy.s[41]++;\n      sendStatus(response, 500, error); /* istanbul ignore next */cov_yvt6rhqjy.s[42]++;\n      return;\n    });\n  }\n}","timestamp":"2017-12-08T05:41:14.212Z"}
{"level":"info","message":"responding with a status code of 200 and the following data","timestamp":"2017-12-08T05:41:14.213Z"}
{"id":"ab9bf380-dbd9-11e7-b6a7-8f46d9f8761d","timestamp":"2017-12-08T05:41:14.213Z","title":"food that sounds yummy","content":"eggs and steak","level":"info","message":""}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T05:41:14.215Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T05:41:14.215Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[10]++;cov_yvt6rhqjy.s[44]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_yvt6rhqjy.b[4][0]++;cov_yvt6rhqjy.s[45]++;\n    storage.delete(request.url.query.id).\n    then(() => {/* istanbul ignore next */cov_yvt6rhqjy.f[11]++;cov_yvt6rhqjy.s[46]++;\n      sendStatus(response, 204, 'successfully deleted'); /* istanbul ignore next */cov_yvt6rhqjy.s[47]++;\n      return;\n    }).\n    catch(error => {/* istanbul ignore next */cov_yvt6rhqjy.f[12]++;cov_yvt6rhqjy.s[48]++;\n      sendStatus(response, 500, error); /* istanbul ignore next */cov_yvt6rhqjy.s[49]++;\n      return;\n    });\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[4][1]++;}cov_yvt6rhqjy.s[50]++;\n  sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[51]++;\n  return;\n}","timestamp":"2017-12-08T05:41:14.215Z"}
{"level":"info","message":"__REQUEST_ERROR","timestamp":"2017-12-08T05:41:14.216Z"}
{"message":"storage.delete is not a function","stack":"TypeError: storage.delete is not a function\n    at Object.<anonymous>.router.delete (/home/ncarignan/cf/401/lab-assignments/08-09-vanilla-rest-server/lab-nicholasc/route/note-router.js:81:19)\n    at requestParser.parse.then.request (/home/ncarignan/cf/401/lab-assignments/08-09-vanilla-rest-server/lab-nicholasc/lib/router.js:48:89)\n    at process._tickCallback (internal/process/next_tick.js:109:7)","level":"info","timestamp":"2017-12-08T05:41:14.216Z"}
{"level":"info","message":"adding a POST url and callbacck","timestamp":"2017-12-08T05:41:23.062Z"}
{"level":"info","message":"/api/notes","timestamp":"2017-12-08T05:41:23.063Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[2]++;cov_yvt6rhqjy.s[16]++;\n  //TODO: run console.trace(); track what happens\n  if (!request.body) {/* istanbul ignore next */cov_yvt6rhqjy.b[0][0]++;cov_yvt6rhqjy.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[0][1]++;}\n  // checking if values are present- instead we should check if values match type\n  // if typeof\n  cov_yvt6rhqjy.s[19]++;if (typeof request.body.title !== 'string') {/* istanbul ignore next */cov_yvt6rhqjy.b[1][0]++;cov_yvt6rhqjy.s[20]++;\n    sendStatus(response, 400, 'title must be a string'); /* istanbul ignore next */cov_yvt6rhqjy.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[1][1]++;}cov_yvt6rhqjy.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_yvt6rhqjy.b[2][0]++;cov_yvt6rhqjy.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[2][1]++;}\n\n  let note = /* istanbul ignore next */(cov_yvt6rhqjy.s[25]++, new Note(request.body.title, request.body.content)); /* istanbul ignore next */cov_yvt6rhqjy.s[26]++;\n  storage.addItem(note).\n  then(() => {/* istanbul ignore next */cov_yvt6rhqjy.f[3]++;cov_yvt6rhqjy.s[27]++;\n    sendJSON(response, 200, note); /* istanbul ignore next */cov_yvt6rhqjy.s[28]++;\n    return;\n  }).\n  catch(error => {/* istanbul ignore next */cov_yvt6rhqjy.f[4]++;cov_yvt6rhqjy.s[29]++;\n    sendStatus(response, 500, error); /* istanbul ignore next */cov_yvt6rhqjy.s[30]++;\n    return;\n  });\n}","timestamp":"2017-12-08T05:41:23.063Z"}
{"level":"info","message":"adding a GET url and callbacck","timestamp":"2017-12-08T05:41:23.063Z"}
{"level":"info","message":"/api/notes","timestamp":"2017-12-08T05:41:23.063Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[5]++;cov_yvt6rhqjy.s[32]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_yvt6rhqjy.b[3][0]++;cov_yvt6rhqjy.s[33]++;\n    storage.fetchItem(request.url.query.id).\n    then(note => {/* istanbul ignore next */cov_yvt6rhqjy.f[6]++;cov_yvt6rhqjy.s[34]++;\n      sendJSON(response, 200, note); /* istanbul ignore next */cov_yvt6rhqjy.s[35]++;\n      return;\n    }).\n    catch(error => {/* istanbul ignore next */cov_yvt6rhqjy.f[7]++;cov_yvt6rhqjy.s[36]++;\n      sendStatus(response, 500, error); /* istanbul ignore next */cov_yvt6rhqjy.s[37]++;\n      return;\n    });\n  } else {/* istanbul ignore next */cov_yvt6rhqjy.b[3][1]++;cov_yvt6rhqjy.s[38]++;\n    storage.fetchAll().\n    then(notes => {/* istanbul ignore next */cov_yvt6rhqjy.f[8]++;cov_yvt6rhqjy.s[39]++;\n      sendJSON(response, 200, notes); /* istanbul ignore next */cov_yvt6rhqjy.s[40]++;\n      return;\n    }).\n    catch(error => {/* istanbul ignore next */cov_yvt6rhqjy.f[9]++;cov_yvt6rhqjy.s[41]++;\n      sendStatus(response, 500, error); /* istanbul ignore next */cov_yvt6rhqjy.s[42]++;\n      return;\n    });\n  }\n}","timestamp":"2017-12-08T05:41:23.063Z"}
{"level":"info","message":"adding a DELETE url and callbacck","timestamp":"2017-12-08T05:41:23.063Z"}
{"level":"info","message":"/api/notes","timestamp":"2017-12-08T05:41:23.063Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[10]++;cov_yvt6rhqjy.s[44]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_yvt6rhqjy.b[4][0]++;cov_yvt6rhqjy.s[45]++;\n    storage.delete(request.url.query.id).\n    then(() => {/* istanbul ignore next */cov_yvt6rhqjy.f[11]++;cov_yvt6rhqjy.s[46]++;\n      sendStatus(response, 204, 'successfully deleted'); /* istanbul ignore next */cov_yvt6rhqjy.s[47]++;\n      return;\n    }).\n    catch(error => {/* istanbul ignore next */cov_yvt6rhqjy.f[12]++;cov_yvt6rhqjy.s[48]++;\n      sendStatus(response, 500, error); /* istanbul ignore next */cov_yvt6rhqjy.s[49]++;\n      return;\n    });\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[4][1]++;}cov_yvt6rhqjy.s[50]++;\n  sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[51]++;\n  return;\n}","timestamp":"2017-12-08T05:41:23.063Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-08T05:41:23.105Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T05:41:23.120Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T05:41:23.122Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[2]++;cov_yvt6rhqjy.s[16]++;\n  //TODO: run console.trace(); track what happens\n  if (!request.body) {/* istanbul ignore next */cov_yvt6rhqjy.b[0][0]++;cov_yvt6rhqjy.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[0][1]++;}\n  // checking if values are present- instead we should check if values match type\n  // if typeof\n  cov_yvt6rhqjy.s[19]++;if (typeof request.body.title !== 'string') {/* istanbul ignore next */cov_yvt6rhqjy.b[1][0]++;cov_yvt6rhqjy.s[20]++;\n    sendStatus(response, 400, 'title must be a string'); /* istanbul ignore next */cov_yvt6rhqjy.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[1][1]++;}cov_yvt6rhqjy.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_yvt6rhqjy.b[2][0]++;cov_yvt6rhqjy.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[2][1]++;}\n\n  let note = /* istanbul ignore next */(cov_yvt6rhqjy.s[25]++, new Note(request.body.title, request.body.content)); /* istanbul ignore next */cov_yvt6rhqjy.s[26]++;\n  storage.addItem(note).\n  then(() => {/* istanbul ignore next */cov_yvt6rhqjy.f[3]++;cov_yvt6rhqjy.s[27]++;\n    sendJSON(response, 200, note); /* istanbul ignore next */cov_yvt6rhqjy.s[28]++;\n    return;\n  }).\n  catch(error => {/* istanbul ignore next */cov_yvt6rhqjy.f[4]++;cov_yvt6rhqjy.s[29]++;\n    sendStatus(response, 500, error); /* istanbul ignore next */cov_yvt6rhqjy.s[30]++;\n    return;\n  });\n}","timestamp":"2017-12-08T05:41:23.122Z"}
{"level":"info","message":"responding with a status code of 200 and the following data","timestamp":"2017-12-08T05:41:23.125Z"}
{"id":"6cb4a120-dbda-11e7-8ae5-2947f3ca84f7","timestamp":"2017-12-08T05:41:23.125Z","title":"food that sounds yummy","content":"eggs and steak","level":"info","message":""}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T05:41:23.137Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T05:41:23.137Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[5]++;cov_yvt6rhqjy.s[32]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_yvt6rhqjy.b[3][0]++;cov_yvt6rhqjy.s[33]++;\n    storage.fetchItem(request.url.query.id).\n    then(note => {/* istanbul ignore next */cov_yvt6rhqjy.f[6]++;cov_yvt6rhqjy.s[34]++;\n      sendJSON(response, 200, note); /* istanbul ignore next */cov_yvt6rhqjy.s[35]++;\n      return;\n    }).\n    catch(error => {/* istanbul ignore next */cov_yvt6rhqjy.f[7]++;cov_yvt6rhqjy.s[36]++;\n      sendStatus(response, 500, error); /* istanbul ignore next */cov_yvt6rhqjy.s[37]++;\n      return;\n    });\n  } else {/* istanbul ignore next */cov_yvt6rhqjy.b[3][1]++;cov_yvt6rhqjy.s[38]++;\n    storage.fetchAll().\n    then(notes => {/* istanbul ignore next */cov_yvt6rhqjy.f[8]++;cov_yvt6rhqjy.s[39]++;\n      sendJSON(response, 200, notes); /* istanbul ignore next */cov_yvt6rhqjy.s[40]++;\n      return;\n    }).\n    catch(error => {/* istanbul ignore next */cov_yvt6rhqjy.f[9]++;cov_yvt6rhqjy.s[41]++;\n      sendStatus(response, 500, error); /* istanbul ignore next */cov_yvt6rhqjy.s[42]++;\n      return;\n    });\n  }\n}","timestamp":"2017-12-08T05:41:23.137Z"}
{"level":"info","message":"responding with a status code of 200 and the following data","timestamp":"2017-12-08T05:41:23.138Z"}
[{"id":"ab9bf380-dbd9-11e7-b6a7-8f46d9f8761d","timestamp":"2017-12-08T05:35:59.160Z","title":"food that sounds yummy","content":"eggs and steak"},{"id":"e2c44830-dbd9-11e7-bfe4-1d554c4e6923","timestamp":"2017-12-08T05:37:31.699Z","title":"food that sounds yummy","content":"eggs and steak"},{"id":"23941430-dbda-11e7-aa57-3d8910f94ca5","timestamp":"2017-12-08T05:39:20.435Z","title":"food that sounds yummy","content":"eggs and steak"},{"id":"298b54c0-dbda-11e7-ae5d-6dd9671a7f44","timestamp":"2017-12-08T05:39:30.445Z","title":"food that sounds yummy","content":"eggs and steak"},{"id":"3b19a7a0-dbda-11e7-bd10-03c34b77f060","timestamp":"2017-12-08T05:39:59.898Z","title":"food that sounds yummy","content":"eggs and steak"},{"id":"4a98c990-dbda-11e7-902a-233bcd24deae","timestamp":"2017-12-08T05:40:25.898Z","title":"food that sounds yummy","content":"eggs and steak"},{"id":"58119430-dbda-11e7-a198-e3caf5ab958f","timestamp":"2017-12-08T05:40:48.499Z","title":"food that sounds yummy","content":"eggs and steak"},{"id":"6761b6e0-dbda-11e7-93e4-533474af1c5b","timestamp":"2017-12-08T05:41:14.190Z","title":"food that sounds yummy","content":"eggs and steak"},{"id":"6cb4a120-dbda-11e7-8ae5-2947f3ca84f7","timestamp":"2017-12-08T05:41:23.122Z","title":"food that sounds yummy","content":"eggs and steak"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T05:41:23.142Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T05:41:23.143Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[5]++;cov_yvt6rhqjy.s[32]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_yvt6rhqjy.b[3][0]++;cov_yvt6rhqjy.s[33]++;\n    storage.fetchItem(request.url.query.id).\n    then(note => {/* istanbul ignore next */cov_yvt6rhqjy.f[6]++;cov_yvt6rhqjy.s[34]++;\n      sendJSON(response, 200, note); /* istanbul ignore next */cov_yvt6rhqjy.s[35]++;\n      return;\n    }).\n    catch(error => {/* istanbul ignore next */cov_yvt6rhqjy.f[7]++;cov_yvt6rhqjy.s[36]++;\n      sendStatus(response, 500, error); /* istanbul ignore next */cov_yvt6rhqjy.s[37]++;\n      return;\n    });\n  } else {/* istanbul ignore next */cov_yvt6rhqjy.b[3][1]++;cov_yvt6rhqjy.s[38]++;\n    storage.fetchAll().\n    then(notes => {/* istanbul ignore next */cov_yvt6rhqjy.f[8]++;cov_yvt6rhqjy.s[39]++;\n      sendJSON(response, 200, notes); /* istanbul ignore next */cov_yvt6rhqjy.s[40]++;\n      return;\n    }).\n    catch(error => {/* istanbul ignore next */cov_yvt6rhqjy.f[9]++;cov_yvt6rhqjy.s[41]++;\n      sendStatus(response, 500, error); /* istanbul ignore next */cov_yvt6rhqjy.s[42]++;\n      return;\n    });\n  }\n}","timestamp":"2017-12-08T05:41:23.143Z"}
{"level":"info","message":"responding with a status code of 200 and the following data","timestamp":"2017-12-08T05:41:23.144Z"}
{"id":"ab9bf380-dbd9-11e7-b6a7-8f46d9f8761d","timestamp":"2017-12-08T05:41:23.144Z","title":"food that sounds yummy","content":"eggs and steak","level":"info","message":""}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T05:41:23.147Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T05:41:23.147Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[10]++;cov_yvt6rhqjy.s[44]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_yvt6rhqjy.b[4][0]++;cov_yvt6rhqjy.s[45]++;\n    storage.delete(request.url.query.id).\n    then(() => {/* istanbul ignore next */cov_yvt6rhqjy.f[11]++;cov_yvt6rhqjy.s[46]++;\n      sendStatus(response, 204, 'successfully deleted'); /* istanbul ignore next */cov_yvt6rhqjy.s[47]++;\n      return;\n    }).\n    catch(error => {/* istanbul ignore next */cov_yvt6rhqjy.f[12]++;cov_yvt6rhqjy.s[48]++;\n      sendStatus(response, 500, error); /* istanbul ignore next */cov_yvt6rhqjy.s[49]++;\n      return;\n    });\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[4][1]++;}cov_yvt6rhqjy.s[50]++;\n  sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[51]++;\n  return;\n}","timestamp":"2017-12-08T05:41:23.147Z"}
{"level":"info","message":"__REQUEST_ERROR","timestamp":"2017-12-08T05:41:23.147Z"}
{"message":"storage.delete is not a function","stack":"TypeError: storage.delete is not a function\n    at Object.<anonymous>.router.delete (/home/ncarignan/cf/401/lab-assignments/08-09-vanilla-rest-server/lab-nicholasc/route/note-router.js:81:19)\n    at requestParser.parse.then.request (/home/ncarignan/cf/401/lab-assignments/08-09-vanilla-rest-server/lab-nicholasc/lib/router.js:48:89)\n    at process._tickCallback (internal/process/next_tick.js:109:7)","level":"info","timestamp":"2017-12-08T05:41:23.147Z"}
{"level":"info","message":"adding a POST url and callbacck","timestamp":"2017-12-08T05:41:32.325Z"}
{"level":"info","message":"/api/notes","timestamp":"2017-12-08T05:41:32.326Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[2]++;cov_yvt6rhqjy.s[16]++;\n  //TODO: run console.trace(); track what happens\n  if (!request.body) {/* istanbul ignore next */cov_yvt6rhqjy.b[0][0]++;cov_yvt6rhqjy.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[0][1]++;}\n  // checking if values are present- instead we should check if values match type\n  // if typeof\n  cov_yvt6rhqjy.s[19]++;if (typeof request.body.title !== 'string') {/* istanbul ignore next */cov_yvt6rhqjy.b[1][0]++;cov_yvt6rhqjy.s[20]++;\n    sendStatus(response, 400, 'title must be a string'); /* istanbul ignore next */cov_yvt6rhqjy.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[1][1]++;}cov_yvt6rhqjy.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_yvt6rhqjy.b[2][0]++;cov_yvt6rhqjy.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[2][1]++;}\n\n  let note = /* istanbul ignore next */(cov_yvt6rhqjy.s[25]++, new Note(request.body.title, request.body.content)); /* istanbul ignore next */cov_yvt6rhqjy.s[26]++;\n  storage.addItem(note).\n  then(() => {/* istanbul ignore next */cov_yvt6rhqjy.f[3]++;cov_yvt6rhqjy.s[27]++;\n    sendJSON(response, 200, note); /* istanbul ignore next */cov_yvt6rhqjy.s[28]++;\n    return;\n  }).\n  catch(error => {/* istanbul ignore next */cov_yvt6rhqjy.f[4]++;cov_yvt6rhqjy.s[29]++;\n    sendStatus(response, 500, error); /* istanbul ignore next */cov_yvt6rhqjy.s[30]++;\n    return;\n  });\n}","timestamp":"2017-12-08T05:41:32.327Z"}
{"level":"info","message":"adding a GET url and callbacck","timestamp":"2017-12-08T05:41:32.327Z"}
{"level":"info","message":"/api/notes","timestamp":"2017-12-08T05:41:32.327Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[5]++;cov_yvt6rhqjy.s[32]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_yvt6rhqjy.b[3][0]++;cov_yvt6rhqjy.s[33]++;\n    storage.fetchItem(request.url.query.id).\n    then(note => {/* istanbul ignore next */cov_yvt6rhqjy.f[6]++;cov_yvt6rhqjy.s[34]++;\n      sendJSON(response, 200, note); /* istanbul ignore next */cov_yvt6rhqjy.s[35]++;\n      return;\n    }).\n    catch(error => {/* istanbul ignore next */cov_yvt6rhqjy.f[7]++;cov_yvt6rhqjy.s[36]++;\n      sendStatus(response, 500, error); /* istanbul ignore next */cov_yvt6rhqjy.s[37]++;\n      return;\n    });\n  } else {/* istanbul ignore next */cov_yvt6rhqjy.b[3][1]++;cov_yvt6rhqjy.s[38]++;\n    storage.fetchAll().\n    then(notes => {/* istanbul ignore next */cov_yvt6rhqjy.f[8]++;cov_yvt6rhqjy.s[39]++;\n      sendJSON(response, 200, notes); /* istanbul ignore next */cov_yvt6rhqjy.s[40]++;\n      return;\n    }).\n    catch(error => {/* istanbul ignore next */cov_yvt6rhqjy.f[9]++;cov_yvt6rhqjy.s[41]++;\n      sendStatus(response, 500, error); /* istanbul ignore next */cov_yvt6rhqjy.s[42]++;\n      return;\n    });\n  }\n}","timestamp":"2017-12-08T05:41:32.327Z"}
{"level":"info","message":"adding a DELETE url and callbacck","timestamp":"2017-12-08T05:41:32.327Z"}
{"level":"info","message":"/api/notes","timestamp":"2017-12-08T05:41:32.327Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[10]++;cov_yvt6rhqjy.s[44]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_yvt6rhqjy.b[4][0]++;cov_yvt6rhqjy.s[45]++;\n    storage.delete(request.url.query.id).\n    then(() => {/* istanbul ignore next */cov_yvt6rhqjy.f[11]++;cov_yvt6rhqjy.s[46]++;\n      sendStatus(response, 204, 'successfully deleted'); /* istanbul ignore next */cov_yvt6rhqjy.s[47]++;\n      return;\n    }).\n    catch(error => {/* istanbul ignore next */cov_yvt6rhqjy.f[12]++;cov_yvt6rhqjy.s[48]++;\n      sendStatus(response, 500, error); /* istanbul ignore next */cov_yvt6rhqjy.s[49]++;\n      return;\n    });\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[4][1]++;}cov_yvt6rhqjy.s[50]++;\n  sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[51]++;\n  return;\n}","timestamp":"2017-12-08T05:41:32.327Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-08T05:41:32.381Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T05:41:32.397Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T05:41:32.398Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[2]++;cov_yvt6rhqjy.s[16]++;\n  //TODO: run console.trace(); track what happens\n  if (!request.body) {/* istanbul ignore next */cov_yvt6rhqjy.b[0][0]++;cov_yvt6rhqjy.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[0][1]++;}\n  // checking if values are present- instead we should check if values match type\n  // if typeof\n  cov_yvt6rhqjy.s[19]++;if (typeof request.body.title !== 'string') {/* istanbul ignore next */cov_yvt6rhqjy.b[1][0]++;cov_yvt6rhqjy.s[20]++;\n    sendStatus(response, 400, 'title must be a string'); /* istanbul ignore next */cov_yvt6rhqjy.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[1][1]++;}cov_yvt6rhqjy.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_yvt6rhqjy.b[2][0]++;cov_yvt6rhqjy.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[2][1]++;}\n\n  let note = /* istanbul ignore next */(cov_yvt6rhqjy.s[25]++, new Note(request.body.title, request.body.content)); /* istanbul ignore next */cov_yvt6rhqjy.s[26]++;\n  storage.addItem(note).\n  then(() => {/* istanbul ignore next */cov_yvt6rhqjy.f[3]++;cov_yvt6rhqjy.s[27]++;\n    sendJSON(response, 200, note); /* istanbul ignore next */cov_yvt6rhqjy.s[28]++;\n    return;\n  }).\n  catch(error => {/* istanbul ignore next */cov_yvt6rhqjy.f[4]++;cov_yvt6rhqjy.s[29]++;\n    sendStatus(response, 500, error); /* istanbul ignore next */cov_yvt6rhqjy.s[30]++;\n    return;\n  });\n}","timestamp":"2017-12-08T05:41:32.398Z"}
{"level":"info","message":"responding with a status code of 200 and the following data","timestamp":"2017-12-08T05:41:32.403Z"}
{"id":"723c2ff0-dbda-11e7-be3b-03e71f98a3d9","timestamp":"2017-12-08T05:41:32.403Z","title":"food that sounds yummy","content":"eggs and steak","level":"info","message":""}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T05:41:32.416Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T05:41:32.416Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[5]++;cov_yvt6rhqjy.s[32]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_yvt6rhqjy.b[3][0]++;cov_yvt6rhqjy.s[33]++;\n    storage.fetchItem(request.url.query.id).\n    then(note => {/* istanbul ignore next */cov_yvt6rhqjy.f[6]++;cov_yvt6rhqjy.s[34]++;\n      sendJSON(response, 200, note); /* istanbul ignore next */cov_yvt6rhqjy.s[35]++;\n      return;\n    }).\n    catch(error => {/* istanbul ignore next */cov_yvt6rhqjy.f[7]++;cov_yvt6rhqjy.s[36]++;\n      sendStatus(response, 500, error); /* istanbul ignore next */cov_yvt6rhqjy.s[37]++;\n      return;\n    });\n  } else {/* istanbul ignore next */cov_yvt6rhqjy.b[3][1]++;cov_yvt6rhqjy.s[38]++;\n    storage.fetchAll().\n    then(notes => {/* istanbul ignore next */cov_yvt6rhqjy.f[8]++;cov_yvt6rhqjy.s[39]++;\n      sendJSON(response, 200, notes); /* istanbul ignore next */cov_yvt6rhqjy.s[40]++;\n      return;\n    }).\n    catch(error => {/* istanbul ignore next */cov_yvt6rhqjy.f[9]++;cov_yvt6rhqjy.s[41]++;\n      sendStatus(response, 500, error); /* istanbul ignore next */cov_yvt6rhqjy.s[42]++;\n      return;\n    });\n  }\n}","timestamp":"2017-12-08T05:41:32.416Z"}
{"level":"info","message":"responding with a status code of 200 and the following data","timestamp":"2017-12-08T05:41:32.417Z"}
[{"id":"ab9bf380-dbd9-11e7-b6a7-8f46d9f8761d","timestamp":"2017-12-08T05:35:59.160Z","title":"food that sounds yummy","content":"eggs and steak"},{"id":"e2c44830-dbd9-11e7-bfe4-1d554c4e6923","timestamp":"2017-12-08T05:37:31.699Z","title":"food that sounds yummy","content":"eggs and steak"},{"id":"23941430-dbda-11e7-aa57-3d8910f94ca5","timestamp":"2017-12-08T05:39:20.435Z","title":"food that sounds yummy","content":"eggs and steak"},{"id":"298b54c0-dbda-11e7-ae5d-6dd9671a7f44","timestamp":"2017-12-08T05:39:30.445Z","title":"food that sounds yummy","content":"eggs and steak"},{"id":"3b19a7a0-dbda-11e7-bd10-03c34b77f060","timestamp":"2017-12-08T05:39:59.898Z","title":"food that sounds yummy","content":"eggs and steak"},{"id":"4a98c990-dbda-11e7-902a-233bcd24deae","timestamp":"2017-12-08T05:40:25.898Z","title":"food that sounds yummy","content":"eggs and steak"},{"id":"58119430-dbda-11e7-a198-e3caf5ab958f","timestamp":"2017-12-08T05:40:48.499Z","title":"food that sounds yummy","content":"eggs and steak"},{"id":"6761b6e0-dbda-11e7-93e4-533474af1c5b","timestamp":"2017-12-08T05:41:14.190Z","title":"food that sounds yummy","content":"eggs and steak"},{"id":"6cb4a120-dbda-11e7-8ae5-2947f3ca84f7","timestamp":"2017-12-08T05:41:23.122Z","title":"food that sounds yummy","content":"eggs and steak"},{"id":"723c2ff0-dbda-11e7-be3b-03e71f98a3d9","timestamp":"2017-12-08T05:41:32.399Z","title":"food that sounds yummy","content":"eggs and steak"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T05:41:32.422Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T05:41:32.422Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[5]++;cov_yvt6rhqjy.s[32]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_yvt6rhqjy.b[3][0]++;cov_yvt6rhqjy.s[33]++;\n    storage.fetchItem(request.url.query.id).\n    then(note => {/* istanbul ignore next */cov_yvt6rhqjy.f[6]++;cov_yvt6rhqjy.s[34]++;\n      sendJSON(response, 200, note); /* istanbul ignore next */cov_yvt6rhqjy.s[35]++;\n      return;\n    }).\n    catch(error => {/* istanbul ignore next */cov_yvt6rhqjy.f[7]++;cov_yvt6rhqjy.s[36]++;\n      sendStatus(response, 500, error); /* istanbul ignore next */cov_yvt6rhqjy.s[37]++;\n      return;\n    });\n  } else {/* istanbul ignore next */cov_yvt6rhqjy.b[3][1]++;cov_yvt6rhqjy.s[38]++;\n    storage.fetchAll().\n    then(notes => {/* istanbul ignore next */cov_yvt6rhqjy.f[8]++;cov_yvt6rhqjy.s[39]++;\n      sendJSON(response, 200, notes); /* istanbul ignore next */cov_yvt6rhqjy.s[40]++;\n      return;\n    }).\n    catch(error => {/* istanbul ignore next */cov_yvt6rhqjy.f[9]++;cov_yvt6rhqjy.s[41]++;\n      sendStatus(response, 500, error); /* istanbul ignore next */cov_yvt6rhqjy.s[42]++;\n      return;\n    });\n  }\n}","timestamp":"2017-12-08T05:41:32.423Z"}
{"level":"info","message":"responding with a status code of 200 and the following data","timestamp":"2017-12-08T05:41:32.423Z"}
{"id":"ab9bf380-dbd9-11e7-b6a7-8f46d9f8761d","timestamp":"2017-12-08T05:41:32.423Z","title":"food that sounds yummy","content":"eggs and steak","level":"info","message":""}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T05:41:32.426Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T05:41:32.427Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[10]++;cov_yvt6rhqjy.s[44]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_yvt6rhqjy.b[4][0]++;cov_yvt6rhqjy.s[45]++;\n    storage.delete(request.url.query.id).\n    then(() => {/* istanbul ignore next */cov_yvt6rhqjy.f[11]++;cov_yvt6rhqjy.s[46]++;\n      sendStatus(response, 204, 'successfully deleted'); /* istanbul ignore next */cov_yvt6rhqjy.s[47]++;\n      return;\n    }).\n    catch(error => {/* istanbul ignore next */cov_yvt6rhqjy.f[12]++;cov_yvt6rhqjy.s[48]++;\n      sendStatus(response, 500, error); /* istanbul ignore next */cov_yvt6rhqjy.s[49]++;\n      return;\n    });\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[4][1]++;}cov_yvt6rhqjy.s[50]++;\n  sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[51]++;\n  return;\n}","timestamp":"2017-12-08T05:41:32.427Z"}
{"level":"info","message":"__REQUEST_ERROR","timestamp":"2017-12-08T05:41:32.427Z"}
{"message":"storage.delete is not a function","stack":"TypeError: storage.delete is not a function\n    at Object.<anonymous>.router.delete (/home/ncarignan/cf/401/lab-assignments/08-09-vanilla-rest-server/lab-nicholasc/route/note-router.js:81:19)\n    at requestParser.parse.then.request (/home/ncarignan/cf/401/lab-assignments/08-09-vanilla-rest-server/lab-nicholasc/lib/router.js:48:89)\n    at process._tickCallback (internal/process/next_tick.js:109:7)","level":"info","timestamp":"2017-12-08T05:41:32.427Z"}
{"level":"info","message":"adding a POST url and callbacck","timestamp":"2017-12-08T05:41:57.343Z"}
{"level":"info","message":"/api/notes","timestamp":"2017-12-08T05:41:57.344Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[2]++;cov_yvt6rhqjy.s[16]++;\n  //TODO: run console.trace(); track what happens\n  if (!request.body) {/* istanbul ignore next */cov_yvt6rhqjy.b[0][0]++;cov_yvt6rhqjy.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[0][1]++;}\n  // checking if values are present- instead we should check if values match type\n  // if typeof\n  cov_yvt6rhqjy.s[19]++;if (typeof request.body.title !== 'string') {/* istanbul ignore next */cov_yvt6rhqjy.b[1][0]++;cov_yvt6rhqjy.s[20]++;\n    sendStatus(response, 400, 'title must be a string'); /* istanbul ignore next */cov_yvt6rhqjy.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[1][1]++;}cov_yvt6rhqjy.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_yvt6rhqjy.b[2][0]++;cov_yvt6rhqjy.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[2][1]++;}\n\n  let note = /* istanbul ignore next */(cov_yvt6rhqjy.s[25]++, new Note(request.body.title, request.body.content)); /* istanbul ignore next */cov_yvt6rhqjy.s[26]++;\n  storage.addItem(note).\n  then(() => {/* istanbul ignore next */cov_yvt6rhqjy.f[3]++;cov_yvt6rhqjy.s[27]++;\n    sendJSON(response, 200, note); /* istanbul ignore next */cov_yvt6rhqjy.s[28]++;\n    return;\n  }).\n  catch(error => {/* istanbul ignore next */cov_yvt6rhqjy.f[4]++;cov_yvt6rhqjy.s[29]++;\n    sendStatus(response, 500, error); /* istanbul ignore next */cov_yvt6rhqjy.s[30]++;\n    return;\n  });\n}","timestamp":"2017-12-08T05:41:57.344Z"}
{"level":"info","message":"adding a GET url and callbacck","timestamp":"2017-12-08T05:41:57.344Z"}
{"level":"info","message":"/api/notes","timestamp":"2017-12-08T05:41:57.344Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[5]++;cov_yvt6rhqjy.s[32]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_yvt6rhqjy.b[3][0]++;cov_yvt6rhqjy.s[33]++;\n    storage.fetchItem(request.url.query.id).\n    then(note => {/* istanbul ignore next */cov_yvt6rhqjy.f[6]++;cov_yvt6rhqjy.s[34]++;\n      sendJSON(response, 200, note); /* istanbul ignore next */cov_yvt6rhqjy.s[35]++;\n      return;\n    }).\n    catch(error => {/* istanbul ignore next */cov_yvt6rhqjy.f[7]++;cov_yvt6rhqjy.s[36]++;\n      sendStatus(response, 500, error); /* istanbul ignore next */cov_yvt6rhqjy.s[37]++;\n      return;\n    });\n  } else {/* istanbul ignore next */cov_yvt6rhqjy.b[3][1]++;cov_yvt6rhqjy.s[38]++;\n    storage.fetchAll().\n    then(notes => {/* istanbul ignore next */cov_yvt6rhqjy.f[8]++;cov_yvt6rhqjy.s[39]++;\n      sendJSON(response, 200, notes); /* istanbul ignore next */cov_yvt6rhqjy.s[40]++;\n      return;\n    }).\n    catch(error => {/* istanbul ignore next */cov_yvt6rhqjy.f[9]++;cov_yvt6rhqjy.s[41]++;\n      sendStatus(response, 500, error); /* istanbul ignore next */cov_yvt6rhqjy.s[42]++;\n      return;\n    });\n  }\n}","timestamp":"2017-12-08T05:41:57.344Z"}
{"level":"info","message":"adding a DELETE url and callbacck","timestamp":"2017-12-08T05:41:57.344Z"}
{"level":"info","message":"/api/notes","timestamp":"2017-12-08T05:41:57.344Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[10]++;cov_yvt6rhqjy.s[44]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_yvt6rhqjy.b[4][0]++;cov_yvt6rhqjy.s[45]++;\n    storage.delete(request.url.query.id).\n    then(() => {/* istanbul ignore next */cov_yvt6rhqjy.f[11]++;cov_yvt6rhqjy.s[46]++;\n      sendStatus(response, 204, 'successfully deleted'); /* istanbul ignore next */cov_yvt6rhqjy.s[47]++;\n      return;\n    }).\n    catch(error => {/* istanbul ignore next */cov_yvt6rhqjy.f[12]++;cov_yvt6rhqjy.s[48]++;\n      sendStatus(response, 500, error); /* istanbul ignore next */cov_yvt6rhqjy.s[49]++;\n      return;\n    });\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[4][1]++;}cov_yvt6rhqjy.s[50]++;\n  sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[51]++;\n  return;\n}","timestamp":"2017-12-08T05:41:57.344Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-08T05:41:57.385Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T05:41:57.399Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T05:41:57.400Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[2]++;cov_yvt6rhqjy.s[16]++;\n  //TODO: run console.trace(); track what happens\n  if (!request.body) {/* istanbul ignore next */cov_yvt6rhqjy.b[0][0]++;cov_yvt6rhqjy.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[0][1]++;}\n  // checking if values are present- instead we should check if values match type\n  // if typeof\n  cov_yvt6rhqjy.s[19]++;if (typeof request.body.title !== 'string') {/* istanbul ignore next */cov_yvt6rhqjy.b[1][0]++;cov_yvt6rhqjy.s[20]++;\n    sendStatus(response, 400, 'title must be a string'); /* istanbul ignore next */cov_yvt6rhqjy.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[1][1]++;}cov_yvt6rhqjy.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_yvt6rhqjy.b[2][0]++;cov_yvt6rhqjy.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[2][1]++;}\n\n  let note = /* istanbul ignore next */(cov_yvt6rhqjy.s[25]++, new Note(request.body.title, request.body.content)); /* istanbul ignore next */cov_yvt6rhqjy.s[26]++;\n  storage.addItem(note).\n  then(() => {/* istanbul ignore next */cov_yvt6rhqjy.f[3]++;cov_yvt6rhqjy.s[27]++;\n    sendJSON(response, 200, note); /* istanbul ignore next */cov_yvt6rhqjy.s[28]++;\n    return;\n  }).\n  catch(error => {/* istanbul ignore next */cov_yvt6rhqjy.f[4]++;cov_yvt6rhqjy.s[29]++;\n    sendStatus(response, 500, error); /* istanbul ignore next */cov_yvt6rhqjy.s[30]++;\n    return;\n  });\n}","timestamp":"2017-12-08T05:41:57.400Z"}
{"level":"info","message":"responding with a status code of 200 and the following data","timestamp":"2017-12-08T05:41:57.404Z"}
{"id":"81233090-dbda-11e7-8580-e5c399b06ec6","timestamp":"2017-12-08T05:41:57.404Z","title":"food that sounds yummy","content":"eggs and steak","level":"info","message":""}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T05:41:57.416Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T05:41:57.416Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[5]++;cov_yvt6rhqjy.s[32]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_yvt6rhqjy.b[3][0]++;cov_yvt6rhqjy.s[33]++;\n    storage.fetchItem(request.url.query.id).\n    then(note => {/* istanbul ignore next */cov_yvt6rhqjy.f[6]++;cov_yvt6rhqjy.s[34]++;\n      sendJSON(response, 200, note); /* istanbul ignore next */cov_yvt6rhqjy.s[35]++;\n      return;\n    }).\n    catch(error => {/* istanbul ignore next */cov_yvt6rhqjy.f[7]++;cov_yvt6rhqjy.s[36]++;\n      sendStatus(response, 500, error); /* istanbul ignore next */cov_yvt6rhqjy.s[37]++;\n      return;\n    });\n  } else {/* istanbul ignore next */cov_yvt6rhqjy.b[3][1]++;cov_yvt6rhqjy.s[38]++;\n    storage.fetchAll().\n    then(notes => {/* istanbul ignore next */cov_yvt6rhqjy.f[8]++;cov_yvt6rhqjy.s[39]++;\n      sendJSON(response, 200, notes); /* istanbul ignore next */cov_yvt6rhqjy.s[40]++;\n      return;\n    }).\n    catch(error => {/* istanbul ignore next */cov_yvt6rhqjy.f[9]++;cov_yvt6rhqjy.s[41]++;\n      sendStatus(response, 500, error); /* istanbul ignore next */cov_yvt6rhqjy.s[42]++;\n      return;\n    });\n  }\n}","timestamp":"2017-12-08T05:41:57.416Z"}
{"level":"info","message":"responding with a status code of 200 and the following data","timestamp":"2017-12-08T05:41:57.417Z"}
[{"id":"ab9bf380-dbd9-11e7-b6a7-8f46d9f8761d","timestamp":"2017-12-08T05:35:59.160Z","title":"food that sounds yummy","content":"eggs and steak"},{"id":"e2c44830-dbd9-11e7-bfe4-1d554c4e6923","timestamp":"2017-12-08T05:37:31.699Z","title":"food that sounds yummy","content":"eggs and steak"},{"id":"23941430-dbda-11e7-aa57-3d8910f94ca5","timestamp":"2017-12-08T05:39:20.435Z","title":"food that sounds yummy","content":"eggs and steak"},{"id":"298b54c0-dbda-11e7-ae5d-6dd9671a7f44","timestamp":"2017-12-08T05:39:30.445Z","title":"food that sounds yummy","content":"eggs and steak"},{"id":"3b19a7a0-dbda-11e7-bd10-03c34b77f060","timestamp":"2017-12-08T05:39:59.898Z","title":"food that sounds yummy","content":"eggs and steak"},{"id":"4a98c990-dbda-11e7-902a-233bcd24deae","timestamp":"2017-12-08T05:40:25.898Z","title":"food that sounds yummy","content":"eggs and steak"},{"id":"58119430-dbda-11e7-a198-e3caf5ab958f","timestamp":"2017-12-08T05:40:48.499Z","title":"food that sounds yummy","content":"eggs and steak"},{"id":"6761b6e0-dbda-11e7-93e4-533474af1c5b","timestamp":"2017-12-08T05:41:14.190Z","title":"food that sounds yummy","content":"eggs and steak"},{"id":"6cb4a120-dbda-11e7-8ae5-2947f3ca84f7","timestamp":"2017-12-08T05:41:23.122Z","title":"food that sounds yummy","content":"eggs and steak"},{"id":"723c2ff0-dbda-11e7-be3b-03e71f98a3d9","timestamp":"2017-12-08T05:41:32.399Z","title":"food that sounds yummy","content":"eggs and steak"},{"id":"81233090-dbda-11e7-8580-e5c399b06ec6","timestamp":"2017-12-08T05:41:57.401Z","title":"food that sounds yummy","content":"eggs and steak"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T05:41:57.422Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T05:41:57.423Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[5]++;cov_yvt6rhqjy.s[32]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_yvt6rhqjy.b[3][0]++;cov_yvt6rhqjy.s[33]++;\n    storage.fetchItem(request.url.query.id).\n    then(note => {/* istanbul ignore next */cov_yvt6rhqjy.f[6]++;cov_yvt6rhqjy.s[34]++;\n      sendJSON(response, 200, note); /* istanbul ignore next */cov_yvt6rhqjy.s[35]++;\n      return;\n    }).\n    catch(error => {/* istanbul ignore next */cov_yvt6rhqjy.f[7]++;cov_yvt6rhqjy.s[36]++;\n      sendStatus(response, 500, error); /* istanbul ignore next */cov_yvt6rhqjy.s[37]++;\n      return;\n    });\n  } else {/* istanbul ignore next */cov_yvt6rhqjy.b[3][1]++;cov_yvt6rhqjy.s[38]++;\n    storage.fetchAll().\n    then(notes => {/* istanbul ignore next */cov_yvt6rhqjy.f[8]++;cov_yvt6rhqjy.s[39]++;\n      sendJSON(response, 200, notes); /* istanbul ignore next */cov_yvt6rhqjy.s[40]++;\n      return;\n    }).\n    catch(error => {/* istanbul ignore next */cov_yvt6rhqjy.f[9]++;cov_yvt6rhqjy.s[41]++;\n      sendStatus(response, 500, error); /* istanbul ignore next */cov_yvt6rhqjy.s[42]++;\n      return;\n    });\n  }\n}","timestamp":"2017-12-08T05:41:57.423Z"}
{"level":"info","message":"responding with a status code of 500 due to Error: __STORAGE_ERROR__ item not found","timestamp":"2017-12-08T05:41:57.424Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T05:41:57.426Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T05:41:57.426Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[10]++;cov_yvt6rhqjy.s[44]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_yvt6rhqjy.b[4][0]++;cov_yvt6rhqjy.s[45]++;\n    storage.delete(request.url.query.id).\n    then(() => {/* istanbul ignore next */cov_yvt6rhqjy.f[11]++;cov_yvt6rhqjy.s[46]++;\n      sendStatus(response, 204, 'successfully deleted'); /* istanbul ignore next */cov_yvt6rhqjy.s[47]++;\n      return;\n    }).\n    catch(error => {/* istanbul ignore next */cov_yvt6rhqjy.f[12]++;cov_yvt6rhqjy.s[48]++;\n      sendStatus(response, 500, error); /* istanbul ignore next */cov_yvt6rhqjy.s[49]++;\n      return;\n    });\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[4][1]++;}cov_yvt6rhqjy.s[50]++;\n  sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[51]++;\n  return;\n}","timestamp":"2017-12-08T05:41:57.426Z"}
{"level":"info","message":"__REQUEST_ERROR","timestamp":"2017-12-08T05:41:57.427Z"}
{"message":"storage.delete is not a function","stack":"TypeError: storage.delete is not a function\n    at Object.<anonymous>.router.delete (/home/ncarignan/cf/401/lab-assignments/08-09-vanilla-rest-server/lab-nicholasc/route/note-router.js:81:19)\n    at requestParser.parse.then.request (/home/ncarignan/cf/401/lab-assignments/08-09-vanilla-rest-server/lab-nicholasc/lib/router.js:48:89)\n    at process._tickCallback (internal/process/next_tick.js:109:7)","level":"info","timestamp":"2017-12-08T05:41:57.427Z"}
{"level":"info","message":"adding a POST url and callbacck","timestamp":"2017-12-08T05:42:34.396Z"}
{"level":"info","message":"/api/notes","timestamp":"2017-12-08T05:42:34.397Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[2]++;cov_yvt6rhqjy.s[16]++;\n  //TODO: run console.trace(); track what happens\n  if (!request.body) {/* istanbul ignore next */cov_yvt6rhqjy.b[0][0]++;cov_yvt6rhqjy.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[0][1]++;}\n  // checking if values are present- instead we should check if values match type\n  // if typeof\n  cov_yvt6rhqjy.s[19]++;if (typeof request.body.title !== 'string') {/* istanbul ignore next */cov_yvt6rhqjy.b[1][0]++;cov_yvt6rhqjy.s[20]++;\n    sendStatus(response, 400, 'title must be a string'); /* istanbul ignore next */cov_yvt6rhqjy.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[1][1]++;}cov_yvt6rhqjy.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_yvt6rhqjy.b[2][0]++;cov_yvt6rhqjy.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[2][1]++;}\n\n  let note = /* istanbul ignore next */(cov_yvt6rhqjy.s[25]++, new Note(request.body.title, request.body.content)); /* istanbul ignore next */cov_yvt6rhqjy.s[26]++;\n  storage.addItem(note).\n  then(() => {/* istanbul ignore next */cov_yvt6rhqjy.f[3]++;cov_yvt6rhqjy.s[27]++;\n    sendJSON(response, 200, note); /* istanbul ignore next */cov_yvt6rhqjy.s[28]++;\n    return;\n  }).\n  catch(error => {/* istanbul ignore next */cov_yvt6rhqjy.f[4]++;cov_yvt6rhqjy.s[29]++;\n    sendStatus(response, 500, error); /* istanbul ignore next */cov_yvt6rhqjy.s[30]++;\n    return;\n  });\n}","timestamp":"2017-12-08T05:42:34.397Z"}
{"level":"info","message":"adding a GET url and callbacck","timestamp":"2017-12-08T05:42:34.397Z"}
{"level":"info","message":"/api/notes","timestamp":"2017-12-08T05:42:34.397Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[5]++;cov_yvt6rhqjy.s[32]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_yvt6rhqjy.b[3][0]++;cov_yvt6rhqjy.s[33]++;\n    storage.fetchItem(request.url.query.id).\n    then(note => {/* istanbul ignore next */cov_yvt6rhqjy.f[6]++;cov_yvt6rhqjy.s[34]++;\n      sendJSON(response, 200, note); /* istanbul ignore next */cov_yvt6rhqjy.s[35]++;\n      return;\n    }).\n    catch(error => {/* istanbul ignore next */cov_yvt6rhqjy.f[7]++;cov_yvt6rhqjy.s[36]++;\n      sendStatus(response, 500, error); /* istanbul ignore next */cov_yvt6rhqjy.s[37]++;\n      return;\n    });\n  } else {/* istanbul ignore next */cov_yvt6rhqjy.b[3][1]++;cov_yvt6rhqjy.s[38]++;\n    storage.fetchAll().\n    then(notes => {/* istanbul ignore next */cov_yvt6rhqjy.f[8]++;cov_yvt6rhqjy.s[39]++;\n      sendJSON(response, 200, notes); /* istanbul ignore next */cov_yvt6rhqjy.s[40]++;\n      return;\n    }).\n    catch(error => {/* istanbul ignore next */cov_yvt6rhqjy.f[9]++;cov_yvt6rhqjy.s[41]++;\n      sendStatus(response, 500, error); /* istanbul ignore next */cov_yvt6rhqjy.s[42]++;\n      return;\n    });\n  }\n}","timestamp":"2017-12-08T05:42:34.397Z"}
{"level":"info","message":"adding a DELETE url and callbacck","timestamp":"2017-12-08T05:42:34.397Z"}
{"level":"info","message":"/api/notes","timestamp":"2017-12-08T05:42:34.398Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[10]++;cov_yvt6rhqjy.s[44]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_yvt6rhqjy.b[4][0]++;cov_yvt6rhqjy.s[45]++;\n    storage.delete(request.url.query.id).\n    then(() => {/* istanbul ignore next */cov_yvt6rhqjy.f[11]++;cov_yvt6rhqjy.s[46]++;\n      sendStatus(response, 204, 'successfully deleted'); /* istanbul ignore next */cov_yvt6rhqjy.s[47]++;\n      return;\n    }).\n    catch(error => {/* istanbul ignore next */cov_yvt6rhqjy.f[12]++;cov_yvt6rhqjy.s[48]++;\n      sendStatus(response, 500, error); /* istanbul ignore next */cov_yvt6rhqjy.s[49]++;\n      return;\n    });\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[4][1]++;}cov_yvt6rhqjy.s[50]++;\n  sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[51]++;\n  return;\n}","timestamp":"2017-12-08T05:42:34.398Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-08T05:42:34.446Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T05:42:34.462Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T05:42:34.463Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[2]++;cov_yvt6rhqjy.s[16]++;\n  //TODO: run console.trace(); track what happens\n  if (!request.body) {/* istanbul ignore next */cov_yvt6rhqjy.b[0][0]++;cov_yvt6rhqjy.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[0][1]++;}\n  // checking if values are present- instead we should check if values match type\n  // if typeof\n  cov_yvt6rhqjy.s[19]++;if (typeof request.body.title !== 'string') {/* istanbul ignore next */cov_yvt6rhqjy.b[1][0]++;cov_yvt6rhqjy.s[20]++;\n    sendStatus(response, 400, 'title must be a string'); /* istanbul ignore next */cov_yvt6rhqjy.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[1][1]++;}cov_yvt6rhqjy.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_yvt6rhqjy.b[2][0]++;cov_yvt6rhqjy.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[2][1]++;}\n\n  let note = /* istanbul ignore next */(cov_yvt6rhqjy.s[25]++, new Note(request.body.title, request.body.content)); /* istanbul ignore next */cov_yvt6rhqjy.s[26]++;\n  storage.addItem(note).\n  then(() => {/* istanbul ignore next */cov_yvt6rhqjy.f[3]++;cov_yvt6rhqjy.s[27]++;\n    sendJSON(response, 200, note); /* istanbul ignore next */cov_yvt6rhqjy.s[28]++;\n    return;\n  }).\n  catch(error => {/* istanbul ignore next */cov_yvt6rhqjy.f[4]++;cov_yvt6rhqjy.s[29]++;\n    sendStatus(response, 500, error); /* istanbul ignore next */cov_yvt6rhqjy.s[30]++;\n    return;\n  });\n}","timestamp":"2017-12-08T05:42:34.463Z"}
{"level":"info","message":"responding with a status code of 200 and the following data","timestamp":"2017-12-08T05:42:34.467Z"}
{"id":"973a66f0-dbda-11e7-b86f-a924f17df39d","timestamp":"2017-12-08T05:42:34.467Z","title":"food that sounds yummy","content":"eggs and steak","level":"info","message":""}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T05:42:34.480Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T05:42:34.480Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[5]++;cov_yvt6rhqjy.s[32]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_yvt6rhqjy.b[3][0]++;cov_yvt6rhqjy.s[33]++;\n    storage.fetchItem(request.url.query.id).\n    then(note => {/* istanbul ignore next */cov_yvt6rhqjy.f[6]++;cov_yvt6rhqjy.s[34]++;\n      sendJSON(response, 200, note); /* istanbul ignore next */cov_yvt6rhqjy.s[35]++;\n      return;\n    }).\n    catch(error => {/* istanbul ignore next */cov_yvt6rhqjy.f[7]++;cov_yvt6rhqjy.s[36]++;\n      sendStatus(response, 500, error); /* istanbul ignore next */cov_yvt6rhqjy.s[37]++;\n      return;\n    });\n  } else {/* istanbul ignore next */cov_yvt6rhqjy.b[3][1]++;cov_yvt6rhqjy.s[38]++;\n    storage.fetchAll().\n    then(notes => {/* istanbul ignore next */cov_yvt6rhqjy.f[8]++;cov_yvt6rhqjy.s[39]++;\n      sendJSON(response, 200, notes); /* istanbul ignore next */cov_yvt6rhqjy.s[40]++;\n      return;\n    }).\n    catch(error => {/* istanbul ignore next */cov_yvt6rhqjy.f[9]++;cov_yvt6rhqjy.s[41]++;\n      sendStatus(response, 500, error); /* istanbul ignore next */cov_yvt6rhqjy.s[42]++;\n      return;\n    });\n  }\n}","timestamp":"2017-12-08T05:42:34.480Z"}
{"level":"info","message":"responding with a status code of 200 and the following data","timestamp":"2017-12-08T05:42:34.481Z"}
[{"id":"ab9bf380-dbd9-11e7-b6a7-8f46d9f8761d","timestamp":"2017-12-08T05:35:59.160Z","title":"food that sounds yummy","content":"eggs and steak"},{"id":"e2c44830-dbd9-11e7-bfe4-1d554c4e6923","timestamp":"2017-12-08T05:37:31.699Z","title":"food that sounds yummy","content":"eggs and steak"},{"id":"23941430-dbda-11e7-aa57-3d8910f94ca5","timestamp":"2017-12-08T05:39:20.435Z","title":"food that sounds yummy","content":"eggs and steak"},{"id":"298b54c0-dbda-11e7-ae5d-6dd9671a7f44","timestamp":"2017-12-08T05:39:30.445Z","title":"food that sounds yummy","content":"eggs and steak"},{"id":"3b19a7a0-dbda-11e7-bd10-03c34b77f060","timestamp":"2017-12-08T05:39:59.898Z","title":"food that sounds yummy","content":"eggs and steak"},{"id":"4a98c990-dbda-11e7-902a-233bcd24deae","timestamp":"2017-12-08T05:40:25.898Z","title":"food that sounds yummy","content":"eggs and steak"},{"id":"58119430-dbda-11e7-a198-e3caf5ab958f","timestamp":"2017-12-08T05:40:48.499Z","title":"food that sounds yummy","content":"eggs and steak"},{"id":"6761b6e0-dbda-11e7-93e4-533474af1c5b","timestamp":"2017-12-08T05:41:14.190Z","title":"food that sounds yummy","content":"eggs and steak"},{"id":"6cb4a120-dbda-11e7-8ae5-2947f3ca84f7","timestamp":"2017-12-08T05:41:23.122Z","title":"food that sounds yummy","content":"eggs and steak"},{"id":"723c2ff0-dbda-11e7-be3b-03e71f98a3d9","timestamp":"2017-12-08T05:41:32.399Z","title":"food that sounds yummy","content":"eggs and steak"},{"id":"81233090-dbda-11e7-8580-e5c399b06ec6","timestamp":"2017-12-08T05:41:57.401Z","title":"food that sounds yummy","content":"eggs and steak"},{"id":"973a66f0-dbda-11e7-b86f-a924f17df39d","timestamp":"2017-12-08T05:42:34.464Z","title":"food that sounds yummy","content":"eggs and steak"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T05:42:34.487Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T05:42:34.488Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[5]++;cov_yvt6rhqjy.s[32]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_yvt6rhqjy.b[3][0]++;cov_yvt6rhqjy.s[33]++;\n    storage.fetchItem(request.url.query.id).\n    then(note => {/* istanbul ignore next */cov_yvt6rhqjy.f[6]++;cov_yvt6rhqjy.s[34]++;\n      sendJSON(response, 200, note); /* istanbul ignore next */cov_yvt6rhqjy.s[35]++;\n      return;\n    }).\n    catch(error => {/* istanbul ignore next */cov_yvt6rhqjy.f[7]++;cov_yvt6rhqjy.s[36]++;\n      sendStatus(response, 500, error); /* istanbul ignore next */cov_yvt6rhqjy.s[37]++;\n      return;\n    });\n  } else {/* istanbul ignore next */cov_yvt6rhqjy.b[3][1]++;cov_yvt6rhqjy.s[38]++;\n    storage.fetchAll().\n    then(notes => {/* istanbul ignore next */cov_yvt6rhqjy.f[8]++;cov_yvt6rhqjy.s[39]++;\n      sendJSON(response, 200, notes); /* istanbul ignore next */cov_yvt6rhqjy.s[40]++;\n      return;\n    }).\n    catch(error => {/* istanbul ignore next */cov_yvt6rhqjy.f[9]++;cov_yvt6rhqjy.s[41]++;\n      sendStatus(response, 500, error); /* istanbul ignore next */cov_yvt6rhqjy.s[42]++;\n      return;\n    });\n  }\n}","timestamp":"2017-12-08T05:42:34.488Z"}
{"level":"info","message":"responding with a status code of 200 and the following data","timestamp":"2017-12-08T05:42:34.489Z"}
{"id":"ab9bf380-dbd9-11e7-b6a7-8f46d9f8761d","timestamp":"2017-12-08T05:42:34.489Z","title":"food that sounds yummy","content":"eggs and steak","level":"info","message":""}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T05:42:34.492Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T05:42:34.492Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[10]++;cov_yvt6rhqjy.s[44]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_yvt6rhqjy.b[4][0]++;cov_yvt6rhqjy.s[45]++;\n    storage.delete(request.url.query.id).\n    then(() => {/* istanbul ignore next */cov_yvt6rhqjy.f[11]++;cov_yvt6rhqjy.s[46]++;\n      sendStatus(response, 204, 'successfully deleted'); /* istanbul ignore next */cov_yvt6rhqjy.s[47]++;\n      return;\n    }).\n    catch(error => {/* istanbul ignore next */cov_yvt6rhqjy.f[12]++;cov_yvt6rhqjy.s[48]++;\n      sendStatus(response, 500, error); /* istanbul ignore next */cov_yvt6rhqjy.s[49]++;\n      return;\n    });\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[4][1]++;}cov_yvt6rhqjy.s[50]++;\n  sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[51]++;\n  return;\n}","timestamp":"2017-12-08T05:42:34.492Z"}
{"level":"info","message":"__REQUEST_ERROR","timestamp":"2017-12-08T05:42:34.492Z"}
{"message":"storage.delete is not a function","stack":"TypeError: storage.delete is not a function\n    at Object.<anonymous>.router.delete (/home/ncarignan/cf/401/lab-assignments/08-09-vanilla-rest-server/lab-nicholasc/route/note-router.js:81:19)\n    at requestParser.parse.then.request (/home/ncarignan/cf/401/lab-assignments/08-09-vanilla-rest-server/lab-nicholasc/lib/router.js:48:89)\n    at process._tickCallback (internal/process/next_tick.js:109:7)","level":"info","timestamp":"2017-12-08T05:42:34.492Z"}
{"level":"info","message":"adding a POST url and callbacck","timestamp":"2017-12-08T05:43:44.730Z"}
{"level":"info","message":"/api/notes","timestamp":"2017-12-08T05:43:44.731Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[2]++;cov_yvt6rhqjy.s[16]++;\n  //TODO: run console.trace(); track what happens\n  if (!request.body) {/* istanbul ignore next */cov_yvt6rhqjy.b[0][0]++;cov_yvt6rhqjy.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[0][1]++;}\n  // checking if values are present- instead we should check if values match type\n  // if typeof\n  cov_yvt6rhqjy.s[19]++;if (typeof request.body.title !== 'string') {/* istanbul ignore next */cov_yvt6rhqjy.b[1][0]++;cov_yvt6rhqjy.s[20]++;\n    sendStatus(response, 400, 'title must be a string'); /* istanbul ignore next */cov_yvt6rhqjy.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[1][1]++;}cov_yvt6rhqjy.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_yvt6rhqjy.b[2][0]++;cov_yvt6rhqjy.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[2][1]++;}\n\n  let note = /* istanbul ignore next */(cov_yvt6rhqjy.s[25]++, new Note(request.body.title, request.body.content)); /* istanbul ignore next */cov_yvt6rhqjy.s[26]++;\n  storage.addItem(note).\n  then(() => {/* istanbul ignore next */cov_yvt6rhqjy.f[3]++;cov_yvt6rhqjy.s[27]++;\n    sendJSON(response, 200, note); /* istanbul ignore next */cov_yvt6rhqjy.s[28]++;\n    return;\n  }).\n  catch(error => {/* istanbul ignore next */cov_yvt6rhqjy.f[4]++;cov_yvt6rhqjy.s[29]++;\n    sendStatus(response, 500, error); /* istanbul ignore next */cov_yvt6rhqjy.s[30]++;\n    return;\n  });\n}","timestamp":"2017-12-08T05:43:44.731Z"}
{"level":"info","message":"adding a GET url and callbacck","timestamp":"2017-12-08T05:43:44.732Z"}
{"level":"info","message":"/api/notes","timestamp":"2017-12-08T05:43:44.732Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[5]++;cov_yvt6rhqjy.s[32]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_yvt6rhqjy.b[3][0]++;cov_yvt6rhqjy.s[33]++;\n    storage.fetchItem(request.url.query.id).\n    then(note => {/* istanbul ignore next */cov_yvt6rhqjy.f[6]++;cov_yvt6rhqjy.s[34]++;\n      sendJSON(response, 200, note); /* istanbul ignore next */cov_yvt6rhqjy.s[35]++;\n      return;\n    }).\n    catch(error => {/* istanbul ignore next */cov_yvt6rhqjy.f[7]++;cov_yvt6rhqjy.s[36]++;\n      sendStatus(response, 500, error); /* istanbul ignore next */cov_yvt6rhqjy.s[37]++;\n      return;\n    });\n  } else {/* istanbul ignore next */cov_yvt6rhqjy.b[3][1]++;cov_yvt6rhqjy.s[38]++;\n    storage.fetchAll().\n    then(notes => {/* istanbul ignore next */cov_yvt6rhqjy.f[8]++;cov_yvt6rhqjy.s[39]++;\n      sendJSON(response, 200, notes); /* istanbul ignore next */cov_yvt6rhqjy.s[40]++;\n      return;\n    }).\n    catch(error => {/* istanbul ignore next */cov_yvt6rhqjy.f[9]++;cov_yvt6rhqjy.s[41]++;\n      sendStatus(response, 500, error); /* istanbul ignore next */cov_yvt6rhqjy.s[42]++;\n      return;\n    });\n  }\n}","timestamp":"2017-12-08T05:43:44.732Z"}
{"level":"info","message":"adding a DELETE url and callbacck","timestamp":"2017-12-08T05:43:44.732Z"}
{"level":"info","message":"/api/notes","timestamp":"2017-12-08T05:43:44.732Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[10]++;cov_yvt6rhqjy.s[44]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_yvt6rhqjy.b[4][0]++;cov_yvt6rhqjy.s[45]++;\n    storage.delete(request.url.query.id).\n    then(() => {/* istanbul ignore next */cov_yvt6rhqjy.f[11]++;cov_yvt6rhqjy.s[46]++;\n      sendStatus(response, 204, 'successfully deleted'); /* istanbul ignore next */cov_yvt6rhqjy.s[47]++;\n      return;\n    }).\n    catch(error => {/* istanbul ignore next */cov_yvt6rhqjy.f[12]++;cov_yvt6rhqjy.s[48]++;\n      sendStatus(response, 500, error); /* istanbul ignore next */cov_yvt6rhqjy.s[49]++;\n      return;\n    });\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[4][1]++;}cov_yvt6rhqjy.s[50]++;\n  sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[51]++;\n  return;\n}","timestamp":"2017-12-08T05:43:44.732Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-08T05:43:44.782Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T05:43:44.797Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T05:43:44.798Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[2]++;cov_yvt6rhqjy.s[16]++;\n  //TODO: run console.trace(); track what happens\n  if (!request.body) {/* istanbul ignore next */cov_yvt6rhqjy.b[0][0]++;cov_yvt6rhqjy.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[0][1]++;}\n  // checking if values are present- instead we should check if values match type\n  // if typeof\n  cov_yvt6rhqjy.s[19]++;if (typeof request.body.title !== 'string') {/* istanbul ignore next */cov_yvt6rhqjy.b[1][0]++;cov_yvt6rhqjy.s[20]++;\n    sendStatus(response, 400, 'title must be a string'); /* istanbul ignore next */cov_yvt6rhqjy.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[1][1]++;}cov_yvt6rhqjy.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_yvt6rhqjy.b[2][0]++;cov_yvt6rhqjy.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[2][1]++;}\n\n  let note = /* istanbul ignore next */(cov_yvt6rhqjy.s[25]++, new Note(request.body.title, request.body.content)); /* istanbul ignore next */cov_yvt6rhqjy.s[26]++;\n  storage.addItem(note).\n  then(() => {/* istanbul ignore next */cov_yvt6rhqjy.f[3]++;cov_yvt6rhqjy.s[27]++;\n    sendJSON(response, 200, note); /* istanbul ignore next */cov_yvt6rhqjy.s[28]++;\n    return;\n  }).\n  catch(error => {/* istanbul ignore next */cov_yvt6rhqjy.f[4]++;cov_yvt6rhqjy.s[29]++;\n    sendStatus(response, 500, error); /* istanbul ignore next */cov_yvt6rhqjy.s[30]++;\n    return;\n  });\n}","timestamp":"2017-12-08T05:43:44.798Z"}
{"level":"info","message":"responding with a status code of 200 and the following data","timestamp":"2017-12-08T05:43:44.801Z"}
{"id":"c126abe0-dbda-11e7-8d97-d96ad9197099","timestamp":"2017-12-08T05:43:44.801Z","title":"food that sounds yummy","content":"eggs and steak","level":"info","message":""}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T05:43:44.813Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T05:43:44.813Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[5]++;cov_yvt6rhqjy.s[32]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_yvt6rhqjy.b[3][0]++;cov_yvt6rhqjy.s[33]++;\n    storage.fetchItem(request.url.query.id).\n    then(note => {/* istanbul ignore next */cov_yvt6rhqjy.f[6]++;cov_yvt6rhqjy.s[34]++;\n      sendJSON(response, 200, note); /* istanbul ignore next */cov_yvt6rhqjy.s[35]++;\n      return;\n    }).\n    catch(error => {/* istanbul ignore next */cov_yvt6rhqjy.f[7]++;cov_yvt6rhqjy.s[36]++;\n      sendStatus(response, 500, error); /* istanbul ignore next */cov_yvt6rhqjy.s[37]++;\n      return;\n    });\n  } else {/* istanbul ignore next */cov_yvt6rhqjy.b[3][1]++;cov_yvt6rhqjy.s[38]++;\n    storage.fetchAll().\n    then(notes => {/* istanbul ignore next */cov_yvt6rhqjy.f[8]++;cov_yvt6rhqjy.s[39]++;\n      sendJSON(response, 200, notes); /* istanbul ignore next */cov_yvt6rhqjy.s[40]++;\n      return;\n    }).\n    catch(error => {/* istanbul ignore next */cov_yvt6rhqjy.f[9]++;cov_yvt6rhqjy.s[41]++;\n      sendStatus(response, 500, error); /* istanbul ignore next */cov_yvt6rhqjy.s[42]++;\n      return;\n    });\n  }\n}","timestamp":"2017-12-08T05:43:44.813Z"}
{"level":"info","message":"responding with a status code of 200 and the following data","timestamp":"2017-12-08T05:43:44.814Z"}
[{"id":"ab9bf380-dbd9-11e7-b6a7-8f46d9f8761d","timestamp":"2017-12-08T05:35:59.160Z","title":"food that sounds yummy","content":"eggs and steak"},{"id":"e2c44830-dbd9-11e7-bfe4-1d554c4e6923","timestamp":"2017-12-08T05:37:31.699Z","title":"food that sounds yummy","content":"eggs and steak"},{"id":"23941430-dbda-11e7-aa57-3d8910f94ca5","timestamp":"2017-12-08T05:39:20.435Z","title":"food that sounds yummy","content":"eggs and steak"},{"id":"298b54c0-dbda-11e7-ae5d-6dd9671a7f44","timestamp":"2017-12-08T05:39:30.445Z","title":"food that sounds yummy","content":"eggs and steak"},{"id":"3b19a7a0-dbda-11e7-bd10-03c34b77f060","timestamp":"2017-12-08T05:39:59.898Z","title":"food that sounds yummy","content":"eggs and steak"},{"id":"4a98c990-dbda-11e7-902a-233bcd24deae","timestamp":"2017-12-08T05:40:25.898Z","title":"food that sounds yummy","content":"eggs and steak"},{"id":"58119430-dbda-11e7-a198-e3caf5ab958f","timestamp":"2017-12-08T05:40:48.499Z","title":"food that sounds yummy","content":"eggs and steak"},{"id":"6761b6e0-dbda-11e7-93e4-533474af1c5b","timestamp":"2017-12-08T05:41:14.190Z","title":"food that sounds yummy","content":"eggs and steak"},{"id":"6cb4a120-dbda-11e7-8ae5-2947f3ca84f7","timestamp":"2017-12-08T05:41:23.122Z","title":"food that sounds yummy","content":"eggs and steak"},{"id":"723c2ff0-dbda-11e7-be3b-03e71f98a3d9","timestamp":"2017-12-08T05:41:32.399Z","title":"food that sounds yummy","content":"eggs and steak"},{"id":"81233090-dbda-11e7-8580-e5c399b06ec6","timestamp":"2017-12-08T05:41:57.401Z","title":"food that sounds yummy","content":"eggs and steak"},{"id":"973a66f0-dbda-11e7-b86f-a924f17df39d","timestamp":"2017-12-08T05:42:34.464Z","title":"food that sounds yummy","content":"eggs and steak"},{"id":"c126abe0-dbda-11e7-8d97-d96ad9197099","timestamp":"2017-12-08T05:43:44.799Z","title":"food that sounds yummy","content":"eggs and steak"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T05:43:44.820Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T05:43:44.821Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[5]++;cov_yvt6rhqjy.s[32]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_yvt6rhqjy.b[3][0]++;cov_yvt6rhqjy.s[33]++;\n    storage.fetchItem(request.url.query.id).\n    then(note => {/* istanbul ignore next */cov_yvt6rhqjy.f[6]++;cov_yvt6rhqjy.s[34]++;\n      sendJSON(response, 200, note); /* istanbul ignore next */cov_yvt6rhqjy.s[35]++;\n      return;\n    }).\n    catch(error => {/* istanbul ignore next */cov_yvt6rhqjy.f[7]++;cov_yvt6rhqjy.s[36]++;\n      sendStatus(response, 500, error); /* istanbul ignore next */cov_yvt6rhqjy.s[37]++;\n      return;\n    });\n  } else {/* istanbul ignore next */cov_yvt6rhqjy.b[3][1]++;cov_yvt6rhqjy.s[38]++;\n    storage.fetchAll().\n    then(notes => {/* istanbul ignore next */cov_yvt6rhqjy.f[8]++;cov_yvt6rhqjy.s[39]++;\n      sendJSON(response, 200, notes); /* istanbul ignore next */cov_yvt6rhqjy.s[40]++;\n      return;\n    }).\n    catch(error => {/* istanbul ignore next */cov_yvt6rhqjy.f[9]++;cov_yvt6rhqjy.s[41]++;\n      sendStatus(response, 500, error); /* istanbul ignore next */cov_yvt6rhqjy.s[42]++;\n      return;\n    });\n  }\n}","timestamp":"2017-12-08T05:43:44.821Z"}
{"level":"info","message":"responding with a status code of 200 and the following data","timestamp":"2017-12-08T05:43:44.821Z"}
{"id":"ab9bf380-dbd9-11e7-b6a7-8f46d9f8761d","timestamp":"2017-12-08T05:43:44.821Z","title":"food that sounds yummy","content":"eggs and steak","level":"info","message":""}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T05:43:44.824Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T05:43:44.824Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[10]++;cov_yvt6rhqjy.s[44]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_yvt6rhqjy.b[4][0]++;cov_yvt6rhqjy.s[45]++;\n    storage.delete(request.url.query.id).\n    then(() => {/* istanbul ignore next */cov_yvt6rhqjy.f[11]++;cov_yvt6rhqjy.s[46]++;\n      sendStatus(response, 204, 'successfully deleted'); /* istanbul ignore next */cov_yvt6rhqjy.s[47]++;\n      return;\n    }).\n    catch(error => {/* istanbul ignore next */cov_yvt6rhqjy.f[12]++;cov_yvt6rhqjy.s[48]++;\n      sendStatus(response, 500, error); /* istanbul ignore next */cov_yvt6rhqjy.s[49]++;\n      return;\n    });\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[4][1]++;}cov_yvt6rhqjy.s[50]++;\n  sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[51]++;\n  return;\n}","timestamp":"2017-12-08T05:43:44.824Z"}
{"level":"info","message":"__REQUEST_ERROR","timestamp":"2017-12-08T05:43:44.825Z"}
{"message":"storage.delete is not a function","stack":"TypeError: storage.delete is not a function\n    at Object.<anonymous>.router.delete (/home/ncarignan/cf/401/lab-assignments/08-09-vanilla-rest-server/lab-nicholasc/route/note-router.js:81:19)\n    at requestParser.parse.then.request (/home/ncarignan/cf/401/lab-assignments/08-09-vanilla-rest-server/lab-nicholasc/lib/router.js:48:89)\n    at process._tickCallback (internal/process/next_tick.js:109:7)","level":"info","timestamp":"2017-12-08T05:43:44.825Z"}
