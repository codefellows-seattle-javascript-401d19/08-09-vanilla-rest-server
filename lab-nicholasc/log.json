{"level":"info","message":"adding a POST url and callbacck","timestamp":"2017-12-07T02:25:06.977Z"}
{"level":"info","message":"/api/notes","timestamp":"2017-12-07T02:25:06.979Z"}
{"level":"info","message":"(request, response) => {\n  //here, i know that request has been pre-parsed- request parser in router took care of it\n  if(!request.body){\n    sendStatus(response, 400, 'body not found');\n    return;\n  }\n  if(!request.title){\n    sendStatus(response, 400, 'title not found');\n    return;\n  }\n  if(!request.content){\n    sendStatus(response, 400, 'content not found');\n    return;\n  }\n\n  let note = new Note(request.body.title, requst.body.content);\n  notes.push(note);\n  sendJSON(response, 200, notes);\n}","timestamp":"2017-12-07T02:25:06.979Z"}
{"level":"error","message":"__SERVER_ERROR__ PORT variable is  not configured","timestamp":"2017-12-07T02:25:06.980Z"}
{"level":"info","message":"adding a POST url and callbacck","timestamp":"2017-12-07T02:25:44.564Z"}
{"level":"info","message":"/api/notes","timestamp":"2017-12-07T02:25:44.566Z"}
{"level":"info","message":"(request, response) => {\n  //here, i know that request has been pre-parsed- request parser in router took care of it\n  if(!request.body){\n    sendStatus(response, 400, 'body not found');\n    return;\n  }\n  if(!request.title){\n    sendStatus(response, 400, 'title not found');\n    return;\n  }\n  if(!request.content){\n    sendStatus(response, 400, 'content not found');\n    return;\n  }\n\n  let note = new Note(request.body.title, requst.body.content);\n  notes.push(note);\n  sendJSON(response, 200, notes);\n}","timestamp":"2017-12-07T02:25:44.566Z"}
{"level":"error","message":"__SERVER_ERROR__ PORT variable is  not configured","timestamp":"2017-12-07T02:25:44.566Z"}
{"level":"info","message":"adding a POST url and callbacck","timestamp":"2017-12-07T02:28:12.845Z"}
{"level":"info","message":"/api/notes","timestamp":"2017-12-07T02:28:12.846Z"}
{"level":"info","message":"(request, response) => {\n  //here, i know that request has been pre-parsed- request parser in router took care of it\n  if(!request.body){\n    sendStatus(response, 400, 'body not found');\n    return;\n  }\n  if(!request.title){\n    sendStatus(response, 400, 'title not found');\n    return;\n  }\n  if(!request.content){\n    sendStatus(response, 400, 'content not found');\n    return;\n  }\n\n  let note = new Note(request.body.title, requst.body.content);\n  notes.push(note);\n  sendJSON(response, 200, notes);\n}","timestamp":"2017-12-07T02:28:12.846Z"}
{"level":"error","message":"__SERVER_ERROR__ PORT variable is  not configured","timestamp":"2017-12-07T02:28:12.847Z"}
{"level":"info","message":"adding a POST url and callbacck","timestamp":"2017-12-07T02:31:50.922Z"}
{"level":"info","message":"/api/notes","timestamp":"2017-12-07T02:31:50.924Z"}
{"level":"info","message":"(request, response) => {\n  //here, i know that request has been pre-parsed- request parser in router took care of it\n  if(!request.body){\n    sendStatus(response, 400, 'body not found');\n    return;\n  }\n  if(!request.title){\n    sendStatus(response, 400, 'title not found');\n    return;\n  }\n  if(!request.content){\n    sendStatus(response, 400, 'content not found');\n    return;\n  }\n\n  let note = new Note(request.body.title, request.body.content);\n  notes.push(note);\n  sendJSON(response, 200, notes);\n}","timestamp":"2017-12-07T02:31:50.924Z"}
{"level":"error","message":"__SERVER_ERROR__ PORT variable is  not configured","timestamp":"2017-12-07T02:31:50.924Z"}
{"level":"info","message":"adding a POST url and callbacck","timestamp":"2017-12-07T02:32:53.633Z"}
{"level":"info","message":"/api/notes","timestamp":"2017-12-07T02:32:53.635Z"}
{"level":"info","message":"(request, response) => {\n  //here, i know that request has been pre-parsed- request parser in router took care of it\n  if(!request.body){\n    sendStatus(response, 400, 'body not found');\n    return;\n  }\n  if(!request.title){\n    sendStatus(response, 400, 'title not found');\n    return;\n  }\n  if(!request.content){\n    sendStatus(response, 400, 'content not found');\n    return;\n  }\n\n  let note = new Note(request.body.title, request.body.content);\n  notes.push(note);\n  sendJSON(response, 200, notes);\n}","timestamp":"2017-12-07T02:32:53.636Z"}
{"level":"error","message":"__SERVER_ERROR__ PORT variable is  not configured, undefined","timestamp":"2017-12-07T02:32:53.637Z"} 
{"level":"info","message":"adding a POST url and callbacck","timestamp":"2017-12-07T02:33:36.071Z"}
{"level":"info","message":"/api/notes","timestamp":"2017-12-07T02:33:36.073Z"}
{"level":"info","message":"(request, response) => {\n  //here, i know that request has been pre-parsed- request parser in router took care of it\n  if(!request.body){\n    sendStatus(response, 400, 'body not found');\n    return;\n  }\n  if(!request.title){\n    sendStatus(response, 400, 'title not found');\n    return;\n  }\n  if(!request.content){\n    sendStatus(response, 400, 'content not found');\n    return;\n  }\n\n  let note = new Note(request.body.title, request.body.content);\n  notes.push(note);\n  sendJSON(response, 200, notes);\n}","timestamp":"2017-12-07T02:33:36.073Z"}
{"level":"error","message":"__SERVER_ERROR__ PORT variable is  not configured, undefined","timestamp":"2017-12-07T02:33:36.074Z"}
{"level":"info","message":"adding a POST url and callbacck","timestamp":"2017-12-07T02:34:08.217Z"}
{"level":"info","message":"/api/notes","timestamp":"2017-12-07T02:34:08.218Z"}
{"level":"info","message":"(request, response) => {\n  //here, i know that request has been pre-parsed- request parser in router took care of it\n  if(!request.body){\n    sendStatus(response, 400, 'body not found');\n    return;\n  }\n  if(!request.title){\n    sendStatus(response, 400, 'title not found');\n    return;\n  }\n  if(!request.content){\n    sendStatus(response, 400, 'content not found');\n    return;\n  }\n\n  let note = new Note(request.body.title, request.body.content);\n  notes.push(note);\n  sendJSON(response, 200, notes);\n}","timestamp":"2017-12-07T02:34:08.219Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T02:34:08.225Z"}
{"level":"info","message":"adding a POST url and callbacck","timestamp":"2017-12-07T02:37:37.294Z"}
{"level":"info","message":"/api/notes","timestamp":"2017-12-07T02:37:37.296Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[2]++;cov_yvt6rhqjy.s[16]++;\n  //here, i know that request has been pre-parsed- request parser in router took care of it\n  if (!request.body) {/* istanbul ignore next */cov_yvt6rhqjy.b[0][0]++;cov_yvt6rhqjy.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[0][1]++;}cov_yvt6rhqjy.s[19]++;\n  if (!request.title) {/* istanbul ignore next */cov_yvt6rhqjy.b[1][0]++;cov_yvt6rhqjy.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[1][1]++;}cov_yvt6rhqjy.s[22]++;\n  if (!request.content) {/* istanbul ignore next */cov_yvt6rhqjy.b[2][0]++;cov_yvt6rhqjy.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[2][1]++;}\n\n  let note = /* istanbul ignore next */(cov_yvt6rhqjy.s[25]++, new Note(request.body.title, request.body.content)); /* istanbul ignore next */cov_yvt6rhqjy.s[26]++;\n  notes.push(note); /* istanbul ignore next */cov_yvt6rhqjy.s[27]++;\n  sendJSON(response, 200, notes);\n}","timestamp":"2017-12-07T02:37:37.297Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T02:37:37.349Z"}
{"level":"info","message":"adding a POST url and callbacck","timestamp":"2017-12-07T02:41:17.314Z"}
{"level":"info","message":"/api/notes","timestamp":"2017-12-07T02:41:17.315Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[2]++;cov_yvt6rhqjy.s[16]++;\n  //here, i know that request has been pre-parsed- request parser in router took care of it\n  if (!request.body) {/* istanbul ignore next */cov_yvt6rhqjy.b[0][0]++;cov_yvt6rhqjy.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[0][1]++;}cov_yvt6rhqjy.s[19]++;\n  if (!request.title) {/* istanbul ignore next */cov_yvt6rhqjy.b[1][0]++;cov_yvt6rhqjy.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[1][1]++;}cov_yvt6rhqjy.s[22]++;\n  if (!request.content) {/* istanbul ignore next */cov_yvt6rhqjy.b[2][0]++;cov_yvt6rhqjy.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[2][1]++;}\n\n  let note = /* istanbul ignore next */(cov_yvt6rhqjy.s[25]++, new Note(request.body.title, request.body.content)); /* istanbul ignore next */cov_yvt6rhqjy.s[26]++;\n  notes.push(note); /* istanbul ignore next */cov_yvt6rhqjy.s[27]++;\n  sendJSON(response, 200, notes);\n}","timestamp":"2017-12-07T02:41:17.315Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T02:41:17.367Z"}
{"level":"info","message":"adding a POST url and callbacck","timestamp":"2017-12-07T02:42:32.452Z"}
{"level":"info","message":"/api/notes","timestamp":"2017-12-07T02:42:32.453Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[2]++;cov_yvt6rhqjy.s[16]++;\n  //here, i know that request has been pre-parsed- request parser in router took care of it\n  if (!request.body) {/* istanbul ignore next */cov_yvt6rhqjy.b[0][0]++;cov_yvt6rhqjy.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[0][1]++;}cov_yvt6rhqjy.s[19]++;\n  if (!request.title) {/* istanbul ignore next */cov_yvt6rhqjy.b[1][0]++;cov_yvt6rhqjy.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[1][1]++;}cov_yvt6rhqjy.s[22]++;\n  if (!request.content) {/* istanbul ignore next */cov_yvt6rhqjy.b[2][0]++;cov_yvt6rhqjy.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[2][1]++;}\n\n  let note = /* istanbul ignore next */(cov_yvt6rhqjy.s[25]++, new Note(request.body.title, request.body.content)); /* istanbul ignore next */cov_yvt6rhqjy.s[26]++;\n  notes.push(note); /* istanbul ignore next */cov_yvt6rhqjy.s[27]++;\n  sendJSON(response, 200, notes);\n}","timestamp":"2017-12-07T02:42:32.453Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T02:42:32.498Z"}
{"level":"info","message":"adding a POST url and callbacck","timestamp":"2017-12-07T02:42:47.085Z"}
{"level":"info","message":"/api/notes","timestamp":"2017-12-07T02:42:47.086Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[2]++;cov_yvt6rhqjy.s[16]++;\n  //here, i know that request has been pre-parsed- request parser in router took care of it\n  if (!request.body) {/* istanbul ignore next */cov_yvt6rhqjy.b[0][0]++;cov_yvt6rhqjy.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[0][1]++;}cov_yvt6rhqjy.s[19]++;\n  if (!request.title) {/* istanbul ignore next */cov_yvt6rhqjy.b[1][0]++;cov_yvt6rhqjy.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[1][1]++;}cov_yvt6rhqjy.s[22]++;\n  if (!request.content) {/* istanbul ignore next */cov_yvt6rhqjy.b[2][0]++;cov_yvt6rhqjy.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[2][1]++;}\n\n  let note = /* istanbul ignore next */(cov_yvt6rhqjy.s[25]++, new Note(request.body.title, request.body.content)); /* istanbul ignore next */cov_yvt6rhqjy.s[26]++;\n  notes.push(note); /* istanbul ignore next */cov_yvt6rhqjy.s[27]++;\n  sendJSON(response, 200, notes);\n}","timestamp":"2017-12-07T02:42:47.086Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T02:42:47.131Z"}
{"level":"info","message":"adding a POST url and callbacck","timestamp":"2017-12-07T02:46:16.431Z"}
{"level":"info","message":"/api/notes","timestamp":"2017-12-07T02:46:16.432Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[2]++;cov_yvt6rhqjy.s[16]++;\n  //here, i know that request has been pre-parsed- request parser in router took care of it\n  console.log('note-router.js line 29'); /* istanbul ignore next */cov_yvt6rhqjy.s[17]++;\n  if (!request.body) {/* istanbul ignore next */cov_yvt6rhqjy.b[0][0]++;cov_yvt6rhqjy.s[18]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[0][1]++;}cov_yvt6rhqjy.s[20]++;\n  if (!request.title) {/* istanbul ignore next */cov_yvt6rhqjy.b[1][0]++;cov_yvt6rhqjy.s[21]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[1][1]++;}cov_yvt6rhqjy.s[23]++;\n  if (!request.content) {/* istanbul ignore next */cov_yvt6rhqjy.b[2][0]++;cov_yvt6rhqjy.s[24]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[2][1]++;}\n\n  let note = /* istanbul ignore next */(cov_yvt6rhqjy.s[26]++, new Note(request.body.title, request.body.content)); /* istanbul ignore next */cov_yvt6rhqjy.s[27]++;\n  notes.push(note); /* istanbul ignore next */cov_yvt6rhqjy.s[28]++;\n  sendJSON(response, 200, notes);\n}","timestamp":"2017-12-07T02:46:16.432Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T02:46:16.480Z"}
{"level":"info","message":"adding a POST url and callbacck","timestamp":"2017-12-07T02:50:42.745Z"}
{"level":"info","message":"/api/notes","timestamp":"2017-12-07T02:50:42.746Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[2]++;cov_yvt6rhqjy.s[16]++;\n  //here, i know that request has been pre-parsed- request parser in router took care of it\n  console.log('note-router.js line 29'); /* istanbul ignore next */cov_yvt6rhqjy.s[17]++;\n  if (!request.body) {/* istanbul ignore next */cov_yvt6rhqjy.b[0][0]++;cov_yvt6rhqjy.s[18]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[0][1]++;}\n  // if(!request.body.title){\n  //   sendStatus(response, 400, 'title not found');\n  //   return;\n  // }\n  // if(!request.body.content){\n  //   sendStatus(response, 400, 'content not found');\n  //   return;\n  // }\n\n  let note = /* istanbul ignore next */(cov_yvt6rhqjy.s[20]++, new Note(request.body.title, request.body.content)); /* istanbul ignore next */cov_yvt6rhqjy.s[21]++;\n  notes.push(note); /* istanbul ignore next */cov_yvt6rhqjy.s[22]++;\n  sendJSON(response, 200, notes);\n}","timestamp":"2017-12-07T02:50:42.746Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T02:50:42.793Z"}
{"level":"info","message":"adding a POST url and callbacck","timestamp":"2017-12-07T02:54:05.802Z"}
{"level":"info","message":"/api/notes","timestamp":"2017-12-07T02:54:05.803Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[2]++;cov_yvt6rhqjy.s[16]++;\n  //here, i know that request has been pre-parsed- request parser in router took care of it\n  console.log('note-router.js line 29'); /* istanbul ignore next */cov_yvt6rhqjy.s[17]++;\n  if (!request.body) {/* istanbul ignore next */cov_yvt6rhqjy.b[0][0]++;cov_yvt6rhqjy.s[18]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[0][1]++;}\n  // if(!request.body.title){\n  //   sendStatus(response, 400, 'title not found');\n  //   return;\n  // }\n  // if(!request.body.content){\n  //   sendStatus(response, 400, 'content not found');\n  //   return;\n  // }\n\n  let note = /* istanbul ignore next */(cov_yvt6rhqjy.s[20]++, new Note(request.body.title, request.body.content)); /* istanbul ignore next */cov_yvt6rhqjy.s[21]++;\n  notes.push(note); /* istanbul ignore next */cov_yvt6rhqjy.s[22]++;\n  sendJSON(response, 200, notes);\n}","timestamp":"2017-12-07T02:54:05.804Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T02:54:05.848Z"}
{"level":"info","message":"adding a POST url and callbacck","timestamp":"2017-12-07T02:54:24.036Z"}
{"level":"info","message":"/api/notes","timestamp":"2017-12-07T02:54:24.036Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[2]++;cov_yvt6rhqjy.s[16]++;\n  //here, i know that request has been pre-parsed- request parser in router took care of it\n  console.log('note-router.js line 29'); /* istanbul ignore next */cov_yvt6rhqjy.s[17]++;\n  if (!request.body) {/* istanbul ignore next */cov_yvt6rhqjy.b[0][0]++;cov_yvt6rhqjy.s[18]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[0][1]++;}\n  // if(!request.body.title){\n  //   sendStatus(response, 400, 'title not found');\n  //   return;\n  // }\n  // if(!request.body.content){\n  //   sendStatus(response, 400, 'content not found');\n  //   return;\n  // }\n\n  let note = /* istanbul ignore next */(cov_yvt6rhqjy.s[20]++, new Note(request.body.title, request.body.content)); /* istanbul ignore next */cov_yvt6rhqjy.s[21]++;\n  notes.push(note); /* istanbul ignore next */cov_yvt6rhqjy.s[22]++;\n  sendJSON(response, 200, notes);\n}","timestamp":"2017-12-07T02:54:24.037Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T02:54:24.086Z"}
{"level":"info","message":"adding a POST url and callbacck","timestamp":"2017-12-07T02:56:41.757Z"}
{"level":"info","message":"/api/notes","timestamp":"2017-12-07T02:56:41.758Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[2]++;cov_yvt6rhqjy.s[16]++;\n  //here, i know that request has been pre-parsed- request parser in router took care of it\n  console.log('note-router.js line 29'); /* istanbul ignore next */cov_yvt6rhqjy.s[17]++;\n  if (!request.body) {/* istanbul ignore next */cov_yvt6rhqjy.b[0][0]++;cov_yvt6rhqjy.s[18]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[0][1]++;}\n  // if(!request.body.title){\n  //   sendStatus(response, 400, 'title not found');\n  //   return;\n  // }\n  // if(!request.body.content){\n  //   sendStatus(response, 400, 'content not found');\n  //   return;\n  // }\n\n  let note = /* istanbul ignore next */(cov_yvt6rhqjy.s[20]++, new Note(request.body.title, request.body.content)); /* istanbul ignore next */cov_yvt6rhqjy.s[21]++;\n  notes.push(note); /* istanbul ignore next */cov_yvt6rhqjy.s[22]++;\n  sendJSON(response, 200, notes);\n}","timestamp":"2017-12-07T02:56:41.758Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T02:56:41.808Z"}
{"level":"info","message":"adding a POST url and callbacck","timestamp":"2017-12-07T02:57:20.914Z"}
{"level":"info","message":"/api/notes","timestamp":"2017-12-07T02:57:20.915Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[2]++;cov_yvt6rhqjy.s[16]++;\n  //here, i know that request has been pre-parsed- request parser in router took care of it\n  console.log('note-router.js line 29'); /* istanbul ignore next */cov_yvt6rhqjy.s[17]++;\n  if (!request.body) {/* istanbul ignore next */cov_yvt6rhqjy.b[0][0]++;cov_yvt6rhqjy.s[18]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[0][1]++;}\n  // if(!request.body.title){\n  //   sendStatus(response, 400, 'title not found');\n  //   return;\n  // }\n  // if(!request.body.content){\n  //   sendStatus(response, 400, 'content not found');\n  //   return;\n  // }\n\n  let note = /* istanbul ignore next */(cov_yvt6rhqjy.s[20]++, new Note(request.body.title, request.body.content)); /* istanbul ignore next */cov_yvt6rhqjy.s[21]++;\n  notes.push(note); /* istanbul ignore next */cov_yvt6rhqjy.s[22]++;\n  sendJSON(response, 200, notes);\n}","timestamp":"2017-12-07T02:57:20.915Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T02:57:20.963Z"}
{"level":"info","message":"adding a POST url and callbacck","timestamp":"2017-12-07T02:58:02.763Z"}
{"level":"info","message":"/api/notes","timestamp":"2017-12-07T02:58:02.764Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[2]++;cov_yvt6rhqjy.s[16]++;\n  //here, i know that request has been pre-parsed- request parser in router took care of it\n  console.log('note-router.js line 29'); /* istanbul ignore next */cov_yvt6rhqjy.s[17]++;\n  if (!request.body) {/* istanbul ignore next */cov_yvt6rhqjy.b[0][0]++;cov_yvt6rhqjy.s[18]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[0][1]++;}\n  // if(!request.body.title){\n  //   sendStatus(response, 400, 'title not found');\n  //   return;\n  // }\n  // if(!request.body.content){\n  //   sendStatus(response, 400, 'content not found');\n  //   return;\n  // }\n\n  let note = /* istanbul ignore next */(cov_yvt6rhqjy.s[20]++, new Note(request.body.title, request.body.content)); /* istanbul ignore next */cov_yvt6rhqjy.s[21]++;\n  notes.push(note); /* istanbul ignore next */cov_yvt6rhqjy.s[22]++;\n  sendJSON(response, 200, notes);\n}","timestamp":"2017-12-07T02:58:02.764Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T02:58:02.814Z"}
{"level":"info","message":"adding a POST url and callbacck","timestamp":"2017-12-07T03:00:22.527Z"}
{"level":"info","message":"/api/notes","timestamp":"2017-12-07T03:00:22.528Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[2]++;cov_yvt6rhqjy.s[16]++;\n  //here, i know that request has been pre-parsed- request parser in router took care of it\n  console.log('note-router.js line 29'); /* istanbul ignore next */cov_yvt6rhqjy.s[17]++;\n  if (!request.body) {/* istanbul ignore next */cov_yvt6rhqjy.b[0][0]++;cov_yvt6rhqjy.s[18]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[0][1]++;}\n  // if(!request.body.title){\n  //   sendStatus(response, 400, 'title not found');\n  //   return;\n  // }\n  // if(!request.body.content){\n  //   sendStatus(response, 400, 'content not found');\n  //   return;\n  // }\n\n  let note = /* istanbul ignore next */(cov_yvt6rhqjy.s[20]++, new Note(request.body.title, request.body.content)); /* istanbul ignore next */cov_yvt6rhqjy.s[21]++;\n  notes.push(note); /* istanbul ignore next */cov_yvt6rhqjy.s[22]++;\n  sendJSON(response, 200, notes);\n}","timestamp":"2017-12-07T03:00:22.528Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T03:00:22.572Z"}
{"level":"info","message":"adding a POST url and callbacck","timestamp":"2017-12-07T03:00:42.239Z"}
{"level":"info","message":"/api/notes","timestamp":"2017-12-07T03:00:42.240Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[2]++;cov_yvt6rhqjy.s[16]++;\n  //here, i know that request has been pre-parsed- request parser in router took care of it\n  console.log('note-router.js line 29'); /* istanbul ignore next */cov_yvt6rhqjy.s[17]++;\n  if (!request.body) {/* istanbul ignore next */cov_yvt6rhqjy.b[0][0]++;cov_yvt6rhqjy.s[18]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[0][1]++;}\n  // if(!request.body.title){\n  //   sendStatus(response, 400, 'title not found');\n  //   return;\n  // }\n  // if(!request.body.content){\n  //   sendStatus(response, 400, 'content not found');\n  //   return;\n  // }\n\n  let note = /* istanbul ignore next */(cov_yvt6rhqjy.s[20]++, new Note(request.body.title, request.body.content)); /* istanbul ignore next */cov_yvt6rhqjy.s[21]++;\n  notes.push(note); /* istanbul ignore next */cov_yvt6rhqjy.s[22]++;\n  sendJSON(response, 200, notes);\n}","timestamp":"2017-12-07T03:00:42.240Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T03:00:42.283Z"}
{"level":"info","message":"adding a POST url and callbacck","timestamp":"2017-12-07T03:07:13.380Z"}
{"level":"info","message":"/api/notes","timestamp":"2017-12-07T03:07:13.381Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[2]++;cov_yvt6rhqjy.s[16]++;\n  //here, i know that request has been pre-parsed- request parser in router took care of it\n  console.log('note-router.js line 29'); /* istanbul ignore next */cov_yvt6rhqjy.s[17]++;\n  if (!request.body) {/* istanbul ignore next */cov_yvt6rhqjy.b[0][0]++;cov_yvt6rhqjy.s[18]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[0][1]++;}\n  // if(!request.body.title){\n  //   sendStatus(response, 400, 'title not found');\n  //   return;\n  // }\n  // if(!request.body.content){\n  //   sendStatus(response, 400, 'content not found');\n  //   return;\n  // }\n\n  let note = /* istanbul ignore next */(cov_yvt6rhqjy.s[20]++, new Note(request.body.title, request.body.content)); /* istanbul ignore next */cov_yvt6rhqjy.s[21]++;\n  notes.push(note); /* istanbul ignore next */cov_yvt6rhqjy.s[22]++;\n  sendJSON(response, 200, notes);\n}","timestamp":"2017-12-07T03:07:13.381Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T03:07:13.425Z"}
{"level":"info","message":"adding a POST url and callbacck","timestamp":"2017-12-07T03:08:52.276Z"}
{"level":"info","message":"/api/notes","timestamp":"2017-12-07T03:08:52.277Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[2]++;cov_yvt6rhqjy.s[16]++;\n  //here, i know that request has been pre-parsed- request parser in router took care of it\n  console.log('note-router.js line 29'); /* istanbul ignore next */cov_yvt6rhqjy.s[17]++;\n  if (!request.body) {/* istanbul ignore next */cov_yvt6rhqjy.b[0][0]++;cov_yvt6rhqjy.s[18]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[0][1]++;}\n  // if(!request.body.title){\n  //   sendStatus(response, 400, 'title not found');\n  //   return;\n  // }\n  // if(!request.body.content){\n  //   sendStatus(response, 400, 'content not found');\n  //   return;\n  // }\n\n  let note = /* istanbul ignore next */(cov_yvt6rhqjy.s[20]++, new Note(request.body.title, request.body.content)); /* istanbul ignore next */cov_yvt6rhqjy.s[21]++;\n  notes.push(note); /* istanbul ignore next */cov_yvt6rhqjy.s[22]++;\n  sendJSON(response, 200, notes);\n}","timestamp":"2017-12-07T03:08:52.277Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T03:08:52.319Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T03:08:52.333Z"}
{"level":"info","message":"log the features here","timestamp":"2017-12-07T03:08:52.333Z"}
{"level":"info","message":"__REQUEST_ERROR","timestamp":"2017-12-07T03:08:52.346Z"}
{"message":"Cannot read property 'indexOf' of undefined","stack":"TypeError: Cannot read property 'indexOf' of undefined\n    at IncomingMessage.request.on.error (/home/ncarignan/cf/401/lab-assignments/08-09-vanilla-rest-server/lab-nicholasc/lib/request-parser.js:30:44)\n    at emitNone (events.js:86:13)\n    at IncomingMessage.emit (events.js:185:7)\n    at endReadableNT (_stream_readable.js:974:12)\n    at _combinedTickCallback (internal/process/next_tick.js:80:11)\n    at process._tickCallback (internal/process/next_tick.js:104:9)","level":"info","timestamp":"2017-12-07T03:08:52.346Z"}
{"level":"info","message":"adding a POST url and callbacck","timestamp":"2017-12-07T03:09:48.195Z"}
{"level":"info","message":"/api/notes","timestamp":"2017-12-07T03:09:48.195Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[2]++;cov_yvt6rhqjy.s[16]++;\n  //here, i know that request has been pre-parsed- request parser in router took care of it\n  console.log('note-router.js line 29'); /* istanbul ignore next */cov_yvt6rhqjy.s[17]++;\n  if (!request.body) {/* istanbul ignore next */cov_yvt6rhqjy.b[0][0]++;cov_yvt6rhqjy.s[18]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[0][1]++;}\n  // if(!request.body.title){\n  //   sendStatus(response, 400, 'title not found');\n  //   return;\n  // }\n  // if(!request.body.content){\n  //   sendStatus(response, 400, 'content not found');\n  //   return;\n  // }\n\n  let note = /* istanbul ignore next */(cov_yvt6rhqjy.s[20]++, new Note(request.body.title, request.body.content)); /* istanbul ignore next */cov_yvt6rhqjy.s[21]++;\n  notes.push(note); /* istanbul ignore next */cov_yvt6rhqjy.s[22]++;\n  sendJSON(response, 200, notes);\n}","timestamp":"2017-12-07T03:09:48.196Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T03:09:48.242Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T03:09:48.256Z"}
{"level":"info","message":"log the features here","timestamp":"2017-12-07T03:09:48.256Z"}
{"level":"info","message":"__REQUEST_ERROR","timestamp":"2017-12-07T03:09:48.258Z"}
{"message":"Cannot read property 'indexOf' of undefined","stack":"TypeError: Cannot read property 'indexOf' of undefined\n    at IncomingMessage.request.on.error (/home/ncarignan/cf/401/lab-assignments/08-09-vanilla-rest-server/lab-nicholasc/lib/request-parser.js:30:44)\n    at emitNone (events.js:86:13)\n    at IncomingMessage.emit (events.js:185:7)\n    at endReadableNT (_stream_readable.js:974:12)\n    at _combinedTickCallback (internal/process/next_tick.js:80:11)\n    at process._tickCallback (internal/process/next_tick.js:104:9)","level":"info","timestamp":"2017-12-07T03:09:48.258Z"}
{"level":"info","message":"adding a POST url and callbacck","timestamp":"2017-12-07T03:10:04.817Z"}
{"level":"info","message":"/api/notes","timestamp":"2017-12-07T03:10:04.818Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[2]++;cov_yvt6rhqjy.s[16]++;\n  //here, i know that request has been pre-parsed- request parser in router took care of it\n  console.log('note-router.js line 29'); /* istanbul ignore next */cov_yvt6rhqjy.s[17]++;\n  if (!request.body) {/* istanbul ignore next */cov_yvt6rhqjy.b[0][0]++;cov_yvt6rhqjy.s[18]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[0][1]++;}\n  // if(!request.body.title){\n  //   sendStatus(response, 400, 'title not found');\n  //   return;\n  // }\n  // if(!request.body.content){\n  //   sendStatus(response, 400, 'content not found');\n  //   return;\n  // }\n\n  let note = /* istanbul ignore next */(cov_yvt6rhqjy.s[20]++, new Note(request.body.title, request.body.content)); /* istanbul ignore next */cov_yvt6rhqjy.s[21]++;\n  notes.push(note); /* istanbul ignore next */cov_yvt6rhqjy.s[22]++;\n  sendJSON(response, 200, notes);\n}","timestamp":"2017-12-07T03:10:04.819Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T03:10:04.868Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T03:10:04.884Z"}
{"level":"info","message":"log the features here","timestamp":"2017-12-07T03:10:04.884Z"}
{"level":"info","message":"__REQUEST_ERROR","timestamp":"2017-12-07T03:10:04.900Z"}
{"message":"Cannot read property 'indexOf' of undefined","stack":"TypeError: Cannot read property 'indexOf' of undefined\n    at IncomingMessage.request.on.error (/home/ncarignan/cf/401/lab-assignments/08-09-vanilla-rest-server/lab-nicholasc/lib/request-parser.js:30:44)\n    at emitNone (events.js:86:13)\n    at IncomingMessage.emit (events.js:185:7)\n    at endReadableNT (_stream_readable.js:974:12)\n    at _combinedTickCallback (internal/process/next_tick.js:80:11)\n    at process._tickCallback (internal/process/next_tick.js:104:9)","level":"info","timestamp":"2017-12-07T03:10:04.900Z"}
