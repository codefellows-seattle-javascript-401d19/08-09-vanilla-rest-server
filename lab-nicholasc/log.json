{"level":"info","message":"adding a POST url and callbacck","timestamp":"2017-12-07T03:46:44.638Z"}
{"level":"info","message":"/api/notes","timestamp":"2017-12-07T03:46:44.639Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[2]++;cov_yvt6rhqjy.s[16]++;\n  console.log('posting'); /* istanbul ignore next */cov_yvt6rhqjy.s[17]++;\n  if (!request.body) {/* istanbul ignore next */cov_yvt6rhqjy.b[0][0]++;cov_yvt6rhqjy.s[18]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[0][1]++;}cov_yvt6rhqjy.s[20]++;\n  if (!request.body.title) {/* istanbul ignore next */cov_yvt6rhqjy.b[1][0]++;cov_yvt6rhqjy.s[21]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[1][1]++;}cov_yvt6rhqjy.s[23]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_yvt6rhqjy.b[2][0]++;cov_yvt6rhqjy.s[24]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[2][1]++;}\n\n  let note = /* istanbul ignore next */(cov_yvt6rhqjy.s[26]++, new Note(request.body.title, request.body.content)); /* istanbul ignore next */cov_yvt6rhqjy.s[27]++;\n  notes.push(note); /* istanbul ignore next */cov_yvt6rhqjy.s[28]++;\n  sendJSON(response, 200, notes);\n}","timestamp":"2017-12-07T03:46:44.639Z"}
{"level":"info","message":"adding a GET url and callbacck","timestamp":"2017-12-07T03:46:44.639Z"}
{"level":"info","message":"/api/notes","timestamp":"2017-12-07T03:46:44.639Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[3]++;cov_yvt6rhqjy.s[30]++;\n  console.log('getting all'); /* istanbul ignore next */cov_yvt6rhqjy.s[31]++;\n  sendJSON(response, 200, notes);\n}","timestamp":"2017-12-07T03:46:44.640Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T03:46:44.700Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T03:46:44.717Z"}
{"level":"info","message":"log the features here","timestamp":"2017-12-07T03:46:44.717Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T03:46:44.718Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[2]++;cov_yvt6rhqjy.s[16]++;\n  console.log('posting'); /* istanbul ignore next */cov_yvt6rhqjy.s[17]++;\n  if (!request.body) {/* istanbul ignore next */cov_yvt6rhqjy.b[0][0]++;cov_yvt6rhqjy.s[18]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[0][1]++;}cov_yvt6rhqjy.s[20]++;\n  if (!request.body.title) {/* istanbul ignore next */cov_yvt6rhqjy.b[1][0]++;cov_yvt6rhqjy.s[21]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[1][1]++;}cov_yvt6rhqjy.s[23]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_yvt6rhqjy.b[2][0]++;cov_yvt6rhqjy.s[24]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[2][1]++;}\n\n  let note = /* istanbul ignore next */(cov_yvt6rhqjy.s[26]++, new Note(request.body.title, request.body.content)); /* istanbul ignore next */cov_yvt6rhqjy.s[27]++;\n  notes.push(note); /* istanbul ignore next */cov_yvt6rhqjy.s[28]++;\n  sendJSON(response, 200, notes);\n}","timestamp":"2017-12-07T03:46:44.718Z"}
{"level":"info","message":"responding with a status code of 200 and the following data","timestamp":"2017-12-07T03:46:44.719Z"}
[{"id":"3e71dff0-db01-11e7-8885-318d6be979ff","timestamp":"2017-12-07T03:46:44.719Z","title":"cats","content":"Gregor and the hound"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T03:46:44.733Z"}
{"level":"info","message":"log the features here","timestamp":"2017-12-07T03:46:44.733Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T03:46:44.733Z"}
{"level":"info","message":"__REQUEST_ERROR","timestamp":"2017-12-07T03:46:44.734Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/ncarignan/cf/401/lab-assignments/08-09-vanilla-rest-server/lab-nicholasc/lib/router.js:48:36)\n    at process._tickCallback (internal/process/next_tick.js:109:7)","level":"info","timestamp":"2017-12-07T03:46:44.734Z"}
{"level":"info","message":"adding a POST url and callbacck","timestamp":"2017-12-07T03:51:00.032Z"}
{"level":"info","message":"/api/notes","timestamp":"2017-12-07T03:51:00.033Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[2]++;cov_yvt6rhqjy.s[16]++;\n  console.log('posting'); /* istanbul ignore next */cov_yvt6rhqjy.s[17]++;\n  if (!request.body) {/* istanbul ignore next */cov_yvt6rhqjy.b[0][0]++;cov_yvt6rhqjy.s[18]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[0][1]++;}cov_yvt6rhqjy.s[20]++;\n  if (!request.body.title) {/* istanbul ignore next */cov_yvt6rhqjy.b[1][0]++;cov_yvt6rhqjy.s[21]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[1][1]++;}cov_yvt6rhqjy.s[23]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_yvt6rhqjy.b[2][0]++;cov_yvt6rhqjy.s[24]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[2][1]++;}\n\n  let note = /* istanbul ignore next */(cov_yvt6rhqjy.s[26]++, new Note(request.body.title, request.body.content)); /* istanbul ignore next */cov_yvt6rhqjy.s[27]++;\n  notes.push(note); /* istanbul ignore next */cov_yvt6rhqjy.s[28]++;\n  sendJSON(response, 200, notes);\n}","timestamp":"2017-12-07T03:51:00.033Z"}
{"level":"info","message":"adding a GET url and callbacck","timestamp":"2017-12-07T03:51:00.033Z"}
{"level":"info","message":"/api/notes","timestamp":"2017-12-07T03:51:00.033Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[3]++;cov_yvt6rhqjy.s[30]++;\n  console.log('getting all'); /* istanbul ignore next */cov_yvt6rhqjy.s[31]++;\n  sendJSON(response, 200, notes);\n}","timestamp":"2017-12-07T03:51:00.033Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T03:51:00.083Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T03:51:00.098Z"}
{"level":"info","message":"log the features here","timestamp":"2017-12-07T03:51:00.098Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T03:51:00.112Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[2]++;cov_yvt6rhqjy.s[16]++;\n  console.log('posting'); /* istanbul ignore next */cov_yvt6rhqjy.s[17]++;\n  if (!request.body) {/* istanbul ignore next */cov_yvt6rhqjy.b[0][0]++;cov_yvt6rhqjy.s[18]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[0][1]++;}cov_yvt6rhqjy.s[20]++;\n  if (!request.body.title) {/* istanbul ignore next */cov_yvt6rhqjy.b[1][0]++;cov_yvt6rhqjy.s[21]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[1][1]++;}cov_yvt6rhqjy.s[23]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_yvt6rhqjy.b[2][0]++;cov_yvt6rhqjy.s[24]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[2][1]++;}\n\n  let note = /* istanbul ignore next */(cov_yvt6rhqjy.s[26]++, new Note(request.body.title, request.body.content)); /* istanbul ignore next */cov_yvt6rhqjy.s[27]++;\n  notes.push(note); /* istanbul ignore next */cov_yvt6rhqjy.s[28]++;\n  sendJSON(response, 200, notes);\n}","timestamp":"2017-12-07T03:51:00.112Z"}
{"level":"info","message":"responding with a status code of 200 and the following data","timestamp":"2017-12-07T03:51:00.113Z"}
[{"id":"d6abe810-db01-11e7-9259-6b6c3cbda7e3","timestamp":"2017-12-07T03:51:00.113Z","title":"cats","content":"Gregor and the hound"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T03:51:00.125Z"}
{"level":"info","message":"log the features here","timestamp":"2017-12-07T03:51:00.125Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T03:51:00.135Z"}
{"level":"info","message":"__REQUEST_ERROR","timestamp":"2017-12-07T03:51:00.135Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/ncarignan/cf/401/lab-assignments/08-09-vanilla-rest-server/lab-nicholasc/lib/router.js:49:36)\n    at process._tickCallback (internal/process/next_tick.js:109:7)","level":"info","timestamp":"2017-12-07T03:51:00.135Z"}
{"level":"info","message":"adding a POST url and callbacck","timestamp":"2017-12-07T03:51:15.600Z"}
{"level":"info","message":"/api/notes","timestamp":"2017-12-07T03:51:15.602Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[2]++;cov_yvt6rhqjy.s[16]++;\n  console.log('posting'); /* istanbul ignore next */cov_yvt6rhqjy.s[17]++;\n  if (!request.body) {/* istanbul ignore next */cov_yvt6rhqjy.b[0][0]++;cov_yvt6rhqjy.s[18]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[0][1]++;}cov_yvt6rhqjy.s[20]++;\n  if (!request.body.title) {/* istanbul ignore next */cov_yvt6rhqjy.b[1][0]++;cov_yvt6rhqjy.s[21]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[1][1]++;}cov_yvt6rhqjy.s[23]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_yvt6rhqjy.b[2][0]++;cov_yvt6rhqjy.s[24]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[2][1]++;}\n\n  let note = /* istanbul ignore next */(cov_yvt6rhqjy.s[26]++, new Note(request.body.title, request.body.content)); /* istanbul ignore next */cov_yvt6rhqjy.s[27]++;\n  notes.push(note); /* istanbul ignore next */cov_yvt6rhqjy.s[28]++;\n  sendJSON(response, 200, notes);\n}","timestamp":"2017-12-07T03:51:15.602Z"}
{"level":"info","message":"adding a GET url and callbacck","timestamp":"2017-12-07T03:51:15.602Z"}
{"level":"info","message":"/api/notes","timestamp":"2017-12-07T03:51:15.602Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[3]++;cov_yvt6rhqjy.s[30]++;\n  console.log('getting all'); /* istanbul ignore next */cov_yvt6rhqjy.s[31]++;\n  sendJSON(response, 200, notes);\n}","timestamp":"2017-12-07T03:51:15.602Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T03:51:15.649Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T03:51:15.664Z"}
{"level":"info","message":"log the features here","timestamp":"2017-12-07T03:51:15.664Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T03:51:15.666Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[2]++;cov_yvt6rhqjy.s[16]++;\n  console.log('posting'); /* istanbul ignore next */cov_yvt6rhqjy.s[17]++;\n  if (!request.body) {/* istanbul ignore next */cov_yvt6rhqjy.b[0][0]++;cov_yvt6rhqjy.s[18]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[0][1]++;}cov_yvt6rhqjy.s[20]++;\n  if (!request.body.title) {/* istanbul ignore next */cov_yvt6rhqjy.b[1][0]++;cov_yvt6rhqjy.s[21]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[1][1]++;}cov_yvt6rhqjy.s[23]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_yvt6rhqjy.b[2][0]++;cov_yvt6rhqjy.s[24]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[2][1]++;}\n\n  let note = /* istanbul ignore next */(cov_yvt6rhqjy.s[26]++, new Note(request.body.title, request.body.content)); /* istanbul ignore next */cov_yvt6rhqjy.s[27]++;\n  notes.push(note); /* istanbul ignore next */cov_yvt6rhqjy.s[28]++;\n  sendJSON(response, 200, notes);\n}","timestamp":"2017-12-07T03:51:15.666Z"}
{"level":"info","message":"responding with a status code of 200 and the following data","timestamp":"2017-12-07T03:51:15.666Z"}
[{"id":"dff11b20-db01-11e7-b153-c74c2b6cb6a1","timestamp":"2017-12-07T03:51:15.666Z","title":"cats","content":"Gregor and the hound"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T03:51:15.678Z"}
{"level":"info","message":"log the features here","timestamp":"2017-12-07T03:51:15.678Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T03:51:15.678Z"}
{"level":"info","message":"__REQUEST_ERROR","timestamp":"2017-12-07T03:51:15.679Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/ncarignan/cf/401/lab-assignments/08-09-vanilla-rest-server/lab-nicholasc/lib/router.js:49:36)\n    at process._tickCallback (internal/process/next_tick.js:109:7)","level":"info","timestamp":"2017-12-07T03:51:15.679Z"}
{"level":"info","message":"adding a POST url and callbacck","timestamp":"2017-12-07T03:51:43.744Z"}
{"level":"info","message":"/api/notes","timestamp":"2017-12-07T03:51:43.745Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[2]++;cov_yvt6rhqjy.s[16]++;\n  console.log('posting'); /* istanbul ignore next */cov_yvt6rhqjy.s[17]++;\n  if (!request.body) {/* istanbul ignore next */cov_yvt6rhqjy.b[0][0]++;cov_yvt6rhqjy.s[18]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[0][1]++;}cov_yvt6rhqjy.s[20]++;\n  if (!request.body.title) {/* istanbul ignore next */cov_yvt6rhqjy.b[1][0]++;cov_yvt6rhqjy.s[21]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[1][1]++;}cov_yvt6rhqjy.s[23]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_yvt6rhqjy.b[2][0]++;cov_yvt6rhqjy.s[24]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[2][1]++;}\n\n  let note = /* istanbul ignore next */(cov_yvt6rhqjy.s[26]++, new Note(request.body.title, request.body.content)); /* istanbul ignore next */cov_yvt6rhqjy.s[27]++;\n  notes.push(note); /* istanbul ignore next */cov_yvt6rhqjy.s[28]++;\n  sendJSON(response, 200, notes);\n}","timestamp":"2017-12-07T03:51:43.745Z"}
{"level":"info","message":"adding a GET url and callbacck","timestamp":"2017-12-07T03:51:43.745Z"}
{"level":"info","message":"/api/notes","timestamp":"2017-12-07T03:51:43.745Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[3]++;cov_yvt6rhqjy.s[30]++;\n  console.log('getting all'); /* istanbul ignore next */cov_yvt6rhqjy.s[31]++;\n  sendJSON(response, 200, notes);\n}","timestamp":"2017-12-07T03:51:43.745Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T03:51:43.795Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T03:51:43.809Z"}
{"level":"info","message":"log the features here","timestamp":"2017-12-07T03:51:43.810Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T03:51:43.811Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[2]++;cov_yvt6rhqjy.s[16]++;\n  console.log('posting'); /* istanbul ignore next */cov_yvt6rhqjy.s[17]++;\n  if (!request.body) {/* istanbul ignore next */cov_yvt6rhqjy.b[0][0]++;cov_yvt6rhqjy.s[18]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[0][1]++;}cov_yvt6rhqjy.s[20]++;\n  if (!request.body.title) {/* istanbul ignore next */cov_yvt6rhqjy.b[1][0]++;cov_yvt6rhqjy.s[21]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[1][1]++;}cov_yvt6rhqjy.s[23]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_yvt6rhqjy.b[2][0]++;cov_yvt6rhqjy.s[24]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[2][1]++;}\n\n  let note = /* istanbul ignore next */(cov_yvt6rhqjy.s[26]++, new Note(request.body.title, request.body.content)); /* istanbul ignore next */cov_yvt6rhqjy.s[27]++;\n  notes.push(note); /* istanbul ignore next */cov_yvt6rhqjy.s[28]++;\n  sendJSON(response, 200, notes);\n}","timestamp":"2017-12-07T03:51:43.811Z"}
{"level":"info","message":"responding with a status code of 200 and the following data","timestamp":"2017-12-07T03:51:43.812Z"}
[{"id":"f0b7b130-db01-11e7-aa6c-f59d64044e8f","timestamp":"2017-12-07T03:51:43.812Z","title":"cats","content":"Gregor and the hound"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T03:51:43.823Z"}
{"level":"info","message":"log the features here","timestamp":"2017-12-07T03:51:43.823Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T03:51:43.823Z"}
{"level":"info","message":"__REQUEST_ERROR","timestamp":"2017-12-07T03:51:43.824Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/ncarignan/cf/401/lab-assignments/08-09-vanilla-rest-server/lab-nicholasc/lib/router.js:50:36)\n    at process._tickCallback (internal/process/next_tick.js:109:7)","level":"info","timestamp":"2017-12-07T03:51:43.824Z"}
{"level":"info","message":"adding a POST url and callbacck","timestamp":"2017-12-07T03:52:09.412Z"}
{"level":"info","message":"/api/notes","timestamp":"2017-12-07T03:52:09.413Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[2]++;cov_yvt6rhqjy.s[16]++;\n  console.log('posting'); /* istanbul ignore next */cov_yvt6rhqjy.s[17]++;\n  if (!request.body) {/* istanbul ignore next */cov_yvt6rhqjy.b[0][0]++;cov_yvt6rhqjy.s[18]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[0][1]++;}cov_yvt6rhqjy.s[20]++;\n  if (!request.body.title) {/* istanbul ignore next */cov_yvt6rhqjy.b[1][0]++;cov_yvt6rhqjy.s[21]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[1][1]++;}cov_yvt6rhqjy.s[23]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_yvt6rhqjy.b[2][0]++;cov_yvt6rhqjy.s[24]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[2][1]++;}\n\n  let note = /* istanbul ignore next */(cov_yvt6rhqjy.s[26]++, new Note(request.body.title, request.body.content)); /* istanbul ignore next */cov_yvt6rhqjy.s[27]++;\n  notes.push(note); /* istanbul ignore next */cov_yvt6rhqjy.s[28]++;\n  sendJSON(response, 200, notes);\n}","timestamp":"2017-12-07T03:52:09.413Z"}
{"level":"info","message":"adding a GET url and callbacck","timestamp":"2017-12-07T03:52:09.413Z"}
{"level":"info","message":"/api/notes","timestamp":"2017-12-07T03:52:09.413Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[3]++;cov_yvt6rhqjy.s[30]++;\n  console.log('getting all'); /* istanbul ignore next */cov_yvt6rhqjy.s[31]++;\n  sendJSON(response, 200, notes);\n}","timestamp":"2017-12-07T03:52:09.413Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T03:52:09.462Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T03:52:09.478Z"}
{"level":"info","message":"log the features here","timestamp":"2017-12-07T03:52:09.478Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T03:52:09.480Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[2]++;cov_yvt6rhqjy.s[16]++;\n  console.log('posting'); /* istanbul ignore next */cov_yvt6rhqjy.s[17]++;\n  if (!request.body) {/* istanbul ignore next */cov_yvt6rhqjy.b[0][0]++;cov_yvt6rhqjy.s[18]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[0][1]++;}cov_yvt6rhqjy.s[20]++;\n  if (!request.body.title) {/* istanbul ignore next */cov_yvt6rhqjy.b[1][0]++;cov_yvt6rhqjy.s[21]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[1][1]++;}cov_yvt6rhqjy.s[23]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_yvt6rhqjy.b[2][0]++;cov_yvt6rhqjy.s[24]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[2][1]++;}\n\n  let note = /* istanbul ignore next */(cov_yvt6rhqjy.s[26]++, new Note(request.body.title, request.body.content)); /* istanbul ignore next */cov_yvt6rhqjy.s[27]++;\n  notes.push(note); /* istanbul ignore next */cov_yvt6rhqjy.s[28]++;\n  sendJSON(response, 200, notes);\n}","timestamp":"2017-12-07T03:52:09.480Z"}
{"level":"info","message":"responding with a status code of 200 and the following data","timestamp":"2017-12-07T03:52:09.480Z"}
[{"id":"00047880-db02-11e7-b6b0-aff4788929a7","timestamp":"2017-12-07T03:52:09.480Z","title":"cats","content":"Gregor and the hound"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T03:52:09.491Z"}
{"level":"info","message":"log the features here","timestamp":"2017-12-07T03:52:09.491Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T03:52:09.492Z"}
{"level":"info","message":"__REQUEST_ERROR","timestamp":"2017-12-07T03:52:09.492Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/ncarignan/cf/401/lab-assignments/08-09-vanilla-rest-server/lab-nicholasc/lib/router.js:51:36)\n    at process._tickCallback (internal/process/next_tick.js:109:7)","level":"info","timestamp":"2017-12-07T03:52:09.492Z"}
{"level":"info","message":"adding a POST url and callbacck","timestamp":"2017-12-07T03:52:41.914Z"}
{"level":"info","message":"/api/notes","timestamp":"2017-12-07T03:52:41.915Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[2]++;cov_yvt6rhqjy.s[16]++;\n  console.log('posting'); /* istanbul ignore next */cov_yvt6rhqjy.s[17]++;\n  if (!request.body) {/* istanbul ignore next */cov_yvt6rhqjy.b[0][0]++;cov_yvt6rhqjy.s[18]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[0][1]++;}cov_yvt6rhqjy.s[20]++;\n  if (!request.body.title) {/* istanbul ignore next */cov_yvt6rhqjy.b[1][0]++;cov_yvt6rhqjy.s[21]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[1][1]++;}cov_yvt6rhqjy.s[23]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_yvt6rhqjy.b[2][0]++;cov_yvt6rhqjy.s[24]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[2][1]++;}\n\n  let note = /* istanbul ignore next */(cov_yvt6rhqjy.s[26]++, new Note(request.body.title, request.body.content)); /* istanbul ignore next */cov_yvt6rhqjy.s[27]++;\n  notes.push(note); /* istanbul ignore next */cov_yvt6rhqjy.s[28]++;\n  sendJSON(response, 200, notes);\n}","timestamp":"2017-12-07T03:52:41.916Z"}
{"level":"info","message":"adding a GET url and callbacck","timestamp":"2017-12-07T03:52:41.916Z"}
{"level":"info","message":"/api/notes","timestamp":"2017-12-07T03:52:41.916Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[3]++;cov_yvt6rhqjy.s[30]++;\n  console.log('getting all'); /* istanbul ignore next */cov_yvt6rhqjy.s[31]++;\n  sendJSON(response, 200, notes);\n}","timestamp":"2017-12-07T03:52:41.916Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T03:52:41.968Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T03:52:41.983Z"}
{"level":"info","message":"log the features here","timestamp":"2017-12-07T03:52:41.983Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T03:52:41.985Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[2]++;cov_yvt6rhqjy.s[16]++;\n  console.log('posting'); /* istanbul ignore next */cov_yvt6rhqjy.s[17]++;\n  if (!request.body) {/* istanbul ignore next */cov_yvt6rhqjy.b[0][0]++;cov_yvt6rhqjy.s[18]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[0][1]++;}cov_yvt6rhqjy.s[20]++;\n  if (!request.body.title) {/* istanbul ignore next */cov_yvt6rhqjy.b[1][0]++;cov_yvt6rhqjy.s[21]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[1][1]++;}cov_yvt6rhqjy.s[23]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_yvt6rhqjy.b[2][0]++;cov_yvt6rhqjy.s[24]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[2][1]++;}\n\n  let note = /* istanbul ignore next */(cov_yvt6rhqjy.s[26]++, new Note(request.body.title, request.body.content)); /* istanbul ignore next */cov_yvt6rhqjy.s[27]++;\n  notes.push(note); /* istanbul ignore next */cov_yvt6rhqjy.s[28]++;\n  sendJSON(response, 200, notes);\n}","timestamp":"2017-12-07T03:52:41.985Z"}
{"level":"info","message":"responding with a status code of 200 and the following data","timestamp":"2017-12-07T03:52:41.986Z"}
[{"id":"13647e20-db02-11e7-ae7d-7dfe9ac708f0","timestamp":"2017-12-07T03:52:41.986Z","title":"cats","content":"Gregor and the hound"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T03:52:41.997Z"}
{"level":"info","message":"log the features here","timestamp":"2017-12-07T03:52:41.997Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T03:52:41.998Z"}
{"level":"info","message":"__REQUEST_ERROR","timestamp":"2017-12-07T03:52:41.998Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/ncarignan/cf/401/lab-assignments/08-09-vanilla-rest-server/lab-nicholasc/lib/router.js:51:36)\n    at process._tickCallback (internal/process/next_tick.js:109:7)","level":"info","timestamp":"2017-12-07T03:52:41.998Z"}
{"level":"info","message":"adding a POST url and callbacck","timestamp":"2017-12-07T03:57:36.338Z"}
{"level":"info","message":"/api/notes","timestamp":"2017-12-07T03:57:36.339Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[2]++;cov_yvt6rhqjy.s[16]++;\n  console.log('posting'); /* istanbul ignore next */cov_yvt6rhqjy.s[17]++;\n  if (!request.body) {/* istanbul ignore next */cov_yvt6rhqjy.b[0][0]++;cov_yvt6rhqjy.s[18]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[0][1]++;}cov_yvt6rhqjy.s[20]++;\n  if (!request.body.title) {/* istanbul ignore next */cov_yvt6rhqjy.b[1][0]++;cov_yvt6rhqjy.s[21]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[1][1]++;}cov_yvt6rhqjy.s[23]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_yvt6rhqjy.b[2][0]++;cov_yvt6rhqjy.s[24]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[2][1]++;}\n\n  let note = /* istanbul ignore next */(cov_yvt6rhqjy.s[26]++, new Note(request.body.title, request.body.content)); /* istanbul ignore next */cov_yvt6rhqjy.s[27]++;\n  notes.push(note); /* istanbul ignore next */cov_yvt6rhqjy.s[28]++;\n  sendJSON(response, 200, notes);\n}","timestamp":"2017-12-07T03:57:36.339Z"}
{"level":"info","message":"adding a GET url and callbacck","timestamp":"2017-12-07T03:57:36.339Z"}
{"level":"info","message":"/api/notes","timestamp":"2017-12-07T03:57:36.339Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[3]++;cov_yvt6rhqjy.s[30]++;\n  console.log('getting all'); /* istanbul ignore next */cov_yvt6rhqjy.s[31]++;\n  sendJSON(response, 200, notes);\n}","timestamp":"2017-12-07T03:57:36.339Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T03:57:36.382Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T03:57:36.397Z"}
{"level":"info","message":"log the features here","timestamp":"2017-12-07T03:57:36.397Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T03:57:36.399Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[2]++;cov_yvt6rhqjy.s[16]++;\n  console.log('posting'); /* istanbul ignore next */cov_yvt6rhqjy.s[17]++;\n  if (!request.body) {/* istanbul ignore next */cov_yvt6rhqjy.b[0][0]++;cov_yvt6rhqjy.s[18]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[0][1]++;}cov_yvt6rhqjy.s[20]++;\n  if (!request.body.title) {/* istanbul ignore next */cov_yvt6rhqjy.b[1][0]++;cov_yvt6rhqjy.s[21]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[1][1]++;}cov_yvt6rhqjy.s[23]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_yvt6rhqjy.b[2][0]++;cov_yvt6rhqjy.s[24]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[2][1]++;}\n\n  let note = /* istanbul ignore next */(cov_yvt6rhqjy.s[26]++, new Note(request.body.title, request.body.content)); /* istanbul ignore next */cov_yvt6rhqjy.s[27]++;\n  notes.push(note); /* istanbul ignore next */cov_yvt6rhqjy.s[28]++;\n  sendJSON(response, 200, notes);\n}","timestamp":"2017-12-07T03:57:36.399Z"}
{"level":"info","message":"responding with a status code of 200 and the following data","timestamp":"2017-12-07T03:57:36.400Z"}
[{"id":"c2e059f0-db02-11e7-b364-230dec15b239","timestamp":"2017-12-07T03:57:36.399Z","title":"cats","content":"Gregor and the hound"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T03:57:36.411Z"}
{"level":"info","message":"log the features here","timestamp":"2017-12-07T03:57:36.411Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T03:57:36.412Z"}
{"level":"info","message":"__REQUEST_ERROR","timestamp":"2017-12-07T03:57:36.412Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/ncarignan/cf/401/lab-assignments/08-09-vanilla-rest-server/lab-nicholasc/lib/router.js:51:36)\n    at process._tickCallback (internal/process/next_tick.js:109:7)","level":"info","timestamp":"2017-12-07T03:57:36.412Z"}
{"level":"info","message":"adding a POST url and callbacck","timestamp":"2017-12-07T04:00:30.807Z"}
{"level":"info","message":"/api/notes","timestamp":"2017-12-07T04:00:30.808Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[2]++;cov_yvt6rhqjy.s[16]++;\n  console.log('posting'); /* istanbul ignore next */cov_yvt6rhqjy.s[17]++;\n  if (!request.body) {/* istanbul ignore next */cov_yvt6rhqjy.b[0][0]++;cov_yvt6rhqjy.s[18]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[0][1]++;}cov_yvt6rhqjy.s[20]++;\n  if (!request.body.title) {/* istanbul ignore next */cov_yvt6rhqjy.b[1][0]++;cov_yvt6rhqjy.s[21]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[1][1]++;}cov_yvt6rhqjy.s[23]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_yvt6rhqjy.b[2][0]++;cov_yvt6rhqjy.s[24]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[2][1]++;}\n\n  let note = /* istanbul ignore next */(cov_yvt6rhqjy.s[26]++, new Note(request.body.title, request.body.content)); /* istanbul ignore next */cov_yvt6rhqjy.s[27]++;\n  notes.push(note); /* istanbul ignore next */cov_yvt6rhqjy.s[28]++;\n  sendJSON(response, 200, notes);\n}","timestamp":"2017-12-07T04:00:30.808Z"}
{"level":"info","message":"adding a GET url and callbacck","timestamp":"2017-12-07T04:00:30.809Z"}
{"level":"info","message":"/api/notes","timestamp":"2017-12-07T04:00:30.809Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[3]++;cov_yvt6rhqjy.s[30]++;\n  console.log('getting all'); /* istanbul ignore next */cov_yvt6rhqjy.s[31]++;\n  console.log(notes); /* istanbul ignore next */cov_yvt6rhqjy.s[32]++;\n  sendJSON(response, 200, notes);\n}","timestamp":"2017-12-07T04:00:30.809Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T04:00:30.850Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T04:00:30.864Z"}
{"level":"info","message":"log the features here","timestamp":"2017-12-07T04:00:30.864Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T04:00:30.867Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[2]++;cov_yvt6rhqjy.s[16]++;\n  console.log('posting'); /* istanbul ignore next */cov_yvt6rhqjy.s[17]++;\n  if (!request.body) {/* istanbul ignore next */cov_yvt6rhqjy.b[0][0]++;cov_yvt6rhqjy.s[18]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[0][1]++;}cov_yvt6rhqjy.s[20]++;\n  if (!request.body.title) {/* istanbul ignore next */cov_yvt6rhqjy.b[1][0]++;cov_yvt6rhqjy.s[21]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[1][1]++;}cov_yvt6rhqjy.s[23]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_yvt6rhqjy.b[2][0]++;cov_yvt6rhqjy.s[24]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[2][1]++;}\n\n  let note = /* istanbul ignore next */(cov_yvt6rhqjy.s[26]++, new Note(request.body.title, request.body.content)); /* istanbul ignore next */cov_yvt6rhqjy.s[27]++;\n  notes.push(note); /* istanbul ignore next */cov_yvt6rhqjy.s[28]++;\n  sendJSON(response, 200, notes);\n}","timestamp":"2017-12-07T04:00:30.867Z"}
{"level":"info","message":"responding with a status code of 200 and the following data","timestamp":"2017-12-07T04:00:30.868Z"}
[{"id":"2ade3540-db03-11e7-a45a-99294c2907d3","timestamp":"2017-12-07T04:00:30.868Z","title":"cats","content":"Gregor and the hound"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T04:00:30.878Z"}
{"level":"info","message":"log the features here","timestamp":"2017-12-07T04:00:30.879Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T04:00:30.879Z"}
{"level":"info","message":"__REQUEST_ERROR","timestamp":"2017-12-07T04:00:30.880Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/ncarignan/cf/401/lab-assignments/08-09-vanilla-rest-server/lab-nicholasc/lib/router.js:51:36)\n    at process._tickCallback (internal/process/next_tick.js:109:7)","level":"info","timestamp":"2017-12-07T04:00:30.880Z"}
{"level":"info","message":"adding a POST url and callbacck","timestamp":"2017-12-07T04:01:08.470Z"}
{"level":"info","message":"/api/notes","timestamp":"2017-12-07T04:01:08.472Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[2]++;cov_yvt6rhqjy.s[16]++;\n  console.log('posting'); /* istanbul ignore next */cov_yvt6rhqjy.s[17]++;\n  if (!request.body) {/* istanbul ignore next */cov_yvt6rhqjy.b[0][0]++;cov_yvt6rhqjy.s[18]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[0][1]++;}cov_yvt6rhqjy.s[20]++;\n  if (!request.body.title) {/* istanbul ignore next */cov_yvt6rhqjy.b[1][0]++;cov_yvt6rhqjy.s[21]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[1][1]++;}cov_yvt6rhqjy.s[23]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_yvt6rhqjy.b[2][0]++;cov_yvt6rhqjy.s[24]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[2][1]++;}\n\n  let note = /* istanbul ignore next */(cov_yvt6rhqjy.s[26]++, new Note(request.body.title, request.body.content)); /* istanbul ignore next */cov_yvt6rhqjy.s[27]++;\n  notes.push(note); /* istanbul ignore next */cov_yvt6rhqjy.s[28]++;\n  sendJSON(response, 200, notes);\n}","timestamp":"2017-12-07T04:01:08.472Z"}
{"level":"info","message":"adding a GET url and callbacck","timestamp":"2017-12-07T04:01:08.472Z"}
{"level":"info","message":"/","timestamp":"2017-12-07T04:01:08.473Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[3]++;cov_yvt6rhqjy.s[30]++;\n  console.log('getting all'); /* istanbul ignore next */cov_yvt6rhqjy.s[31]++;\n  console.log(notes); /* istanbul ignore next */cov_yvt6rhqjy.s[32]++;\n  sendJSON(response, 200, notes);\n}","timestamp":"2017-12-07T04:01:08.473Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T04:01:08.528Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T04:01:08.543Z"}
{"level":"info","message":"log the features here","timestamp":"2017-12-07T04:01:08.543Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T04:01:08.545Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[2]++;cov_yvt6rhqjy.s[16]++;\n  console.log('posting'); /* istanbul ignore next */cov_yvt6rhqjy.s[17]++;\n  if (!request.body) {/* istanbul ignore next */cov_yvt6rhqjy.b[0][0]++;cov_yvt6rhqjy.s[18]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[0][1]++;}cov_yvt6rhqjy.s[20]++;\n  if (!request.body.title) {/* istanbul ignore next */cov_yvt6rhqjy.b[1][0]++;cov_yvt6rhqjy.s[21]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[1][1]++;}cov_yvt6rhqjy.s[23]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_yvt6rhqjy.b[2][0]++;cov_yvt6rhqjy.s[24]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[2][1]++;}\n\n  let note = /* istanbul ignore next */(cov_yvt6rhqjy.s[26]++, new Note(request.body.title, request.body.content)); /* istanbul ignore next */cov_yvt6rhqjy.s[27]++;\n  notes.push(note); /* istanbul ignore next */cov_yvt6rhqjy.s[28]++;\n  sendJSON(response, 200, notes);\n}","timestamp":"2017-12-07T04:01:08.545Z"}
{"level":"info","message":"responding with a status code of 200 and the following data","timestamp":"2017-12-07T04:01:08.546Z"}
[{"id":"41534310-db03-11e7-92af-c55634c01a74","timestamp":"2017-12-07T04:01:08.546Z","title":"cats","content":"Gregor and the hound"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T04:01:08.557Z"}
{"level":"info","message":"log the features here","timestamp":"2017-12-07T04:01:08.557Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T04:01:08.558Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[3]++;cov_yvt6rhqjy.s[30]++;\n  console.log('getting all'); /* istanbul ignore next */cov_yvt6rhqjy.s[31]++;\n  console.log(notes); /* istanbul ignore next */cov_yvt6rhqjy.s[32]++;\n  sendJSON(response, 200, notes);\n}","timestamp":"2017-12-07T04:01:08.558Z"}
{"level":"info","message":"responding with a status code of 200 and the following data","timestamp":"2017-12-07T04:01:08.560Z"}
[{"id":"41534310-db03-11e7-92af-c55634c01a74","timestamp":"2017-12-07T04:01:08.546Z","title":"cats","content":"Gregor and the hound"}]
