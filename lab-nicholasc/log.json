{"level":"info","message":"adding a POST url and callbacck","timestamp":"2017-12-08T05:46:28.197Z"}
{"level":"info","message":"/api/notes","timestamp":"2017-12-08T05:46:28.199Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[2]++;cov_yvt6rhqjy.s[16]++;\n  //TODO: run console.trace(); track what happens\n  if (!request.body) {/* istanbul ignore next */cov_yvt6rhqjy.b[0][0]++;cov_yvt6rhqjy.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[0][1]++;}\n  // checking if values are present- instead we should check if values match type\n  // if typeof\n  cov_yvt6rhqjy.s[19]++;if (typeof request.body.title !== 'string') {/* istanbul ignore next */cov_yvt6rhqjy.b[1][0]++;cov_yvt6rhqjy.s[20]++;\n    sendStatus(response, 400, 'title must be a string'); /* istanbul ignore next */cov_yvt6rhqjy.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[1][1]++;}cov_yvt6rhqjy.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_yvt6rhqjy.b[2][0]++;cov_yvt6rhqjy.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[2][1]++;}\n\n  let note = /* istanbul ignore next */(cov_yvt6rhqjy.s[25]++, new Note(request.body.title, request.body.content)); /* istanbul ignore next */cov_yvt6rhqjy.s[26]++;\n  storage.addItem(note).\n  then(() => {/* istanbul ignore next */cov_yvt6rhqjy.f[3]++;cov_yvt6rhqjy.s[27]++;\n    sendJSON(response, 200, note); /* istanbul ignore next */cov_yvt6rhqjy.s[28]++;\n    return;\n  }).\n  catch(error => {/* istanbul ignore next */cov_yvt6rhqjy.f[4]++;cov_yvt6rhqjy.s[29]++;\n    sendStatus(response, 500, error); /* istanbul ignore next */cov_yvt6rhqjy.s[30]++;\n    return;\n  });\n}","timestamp":"2017-12-08T05:46:28.199Z"}
{"level":"info","message":"adding a GET url and callbacck","timestamp":"2017-12-08T05:46:28.199Z"}
{"level":"info","message":"/api/notes","timestamp":"2017-12-08T05:46:28.199Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[5]++;cov_yvt6rhqjy.s[32]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_yvt6rhqjy.b[3][0]++;cov_yvt6rhqjy.s[33]++;\n    storage.fetchItem(request.url.query.id).\n    then(note => {/* istanbul ignore next */cov_yvt6rhqjy.f[6]++;cov_yvt6rhqjy.s[34]++;\n      sendJSON(response, 200, note); /* istanbul ignore next */cov_yvt6rhqjy.s[35]++;\n      return;\n    }).\n    catch(error => {/* istanbul ignore next */cov_yvt6rhqjy.f[7]++;cov_yvt6rhqjy.s[36]++;\n      sendStatus(response, 500, error); /* istanbul ignore next */cov_yvt6rhqjy.s[37]++;\n      return;\n    });\n  } else {/* istanbul ignore next */cov_yvt6rhqjy.b[3][1]++;cov_yvt6rhqjy.s[38]++;\n    storage.fetchAll().\n    then(notes => {/* istanbul ignore next */cov_yvt6rhqjy.f[8]++;cov_yvt6rhqjy.s[39]++;\n      sendJSON(response, 200, notes); /* istanbul ignore next */cov_yvt6rhqjy.s[40]++;\n      return;\n    }).\n    catch(error => {/* istanbul ignore next */cov_yvt6rhqjy.f[9]++;cov_yvt6rhqjy.s[41]++;\n      sendStatus(response, 500, error); /* istanbul ignore next */cov_yvt6rhqjy.s[42]++;\n      return;\n    });\n  }\n}","timestamp":"2017-12-08T05:46:28.199Z"}
{"level":"info","message":"adding a DELETE url and callbacck","timestamp":"2017-12-08T05:46:28.199Z"}
{"level":"info","message":"/api/notes","timestamp":"2017-12-08T05:46:28.199Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[10]++;cov_yvt6rhqjy.s[44]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_yvt6rhqjy.b[4][0]++;cov_yvt6rhqjy.s[45]++;\n    storage.delete(request.url.query.id).\n    then(() => {/* istanbul ignore next */cov_yvt6rhqjy.f[11]++;cov_yvt6rhqjy.s[46]++;\n      sendStatus(response, 204, 'successfully deleted'); /* istanbul ignore next */cov_yvt6rhqjy.s[47]++;\n      return;\n    }).\n    catch(error => {/* istanbul ignore next */cov_yvt6rhqjy.f[12]++;cov_yvt6rhqjy.s[48]++;\n      sendStatus(response, 500, error); /* istanbul ignore next */cov_yvt6rhqjy.s[49]++;\n      return;\n    });\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[4][1]++;}cov_yvt6rhqjy.s[50]++;\n  sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[51]++;\n  return;\n}","timestamp":"2017-12-08T05:46:28.199Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-08T05:46:28.240Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T05:46:28.255Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T05:46:28.256Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[2]++;cov_yvt6rhqjy.s[16]++;\n  //TODO: run console.trace(); track what happens\n  if (!request.body) {/* istanbul ignore next */cov_yvt6rhqjy.b[0][0]++;cov_yvt6rhqjy.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[0][1]++;}\n  // checking if values are present- instead we should check if values match type\n  // if typeof\n  cov_yvt6rhqjy.s[19]++;if (typeof request.body.title !== 'string') {/* istanbul ignore next */cov_yvt6rhqjy.b[1][0]++;cov_yvt6rhqjy.s[20]++;\n    sendStatus(response, 400, 'title must be a string'); /* istanbul ignore next */cov_yvt6rhqjy.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[1][1]++;}cov_yvt6rhqjy.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_yvt6rhqjy.b[2][0]++;cov_yvt6rhqjy.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[2][1]++;}\n\n  let note = /* istanbul ignore next */(cov_yvt6rhqjy.s[25]++, new Note(request.body.title, request.body.content)); /* istanbul ignore next */cov_yvt6rhqjy.s[26]++;\n  storage.addItem(note).\n  then(() => {/* istanbul ignore next */cov_yvt6rhqjy.f[3]++;cov_yvt6rhqjy.s[27]++;\n    sendJSON(response, 200, note); /* istanbul ignore next */cov_yvt6rhqjy.s[28]++;\n    return;\n  }).\n  catch(error => {/* istanbul ignore next */cov_yvt6rhqjy.f[4]++;cov_yvt6rhqjy.s[29]++;\n    sendStatus(response, 500, error); /* istanbul ignore next */cov_yvt6rhqjy.s[30]++;\n    return;\n  });\n}","timestamp":"2017-12-08T05:46:28.256Z"}
{"level":"info","message":"responding with a status code of 200 and the following data","timestamp":"2017-12-08T05:46:28.260Z"}
{"id":"22948910-dbdb-11e7-8857-431a3d1bd7b1","timestamp":"2017-12-08T05:46:28.260Z","title":"food that sounds yummy","content":"eggs and steak","level":"info","message":""}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T05:46:28.272Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T05:46:28.272Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[5]++;cov_yvt6rhqjy.s[32]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_yvt6rhqjy.b[3][0]++;cov_yvt6rhqjy.s[33]++;\n    storage.fetchItem(request.url.query.id).\n    then(note => {/* istanbul ignore next */cov_yvt6rhqjy.f[6]++;cov_yvt6rhqjy.s[34]++;\n      sendJSON(response, 200, note); /* istanbul ignore next */cov_yvt6rhqjy.s[35]++;\n      return;\n    }).\n    catch(error => {/* istanbul ignore next */cov_yvt6rhqjy.f[7]++;cov_yvt6rhqjy.s[36]++;\n      sendStatus(response, 500, error); /* istanbul ignore next */cov_yvt6rhqjy.s[37]++;\n      return;\n    });\n  } else {/* istanbul ignore next */cov_yvt6rhqjy.b[3][1]++;cov_yvt6rhqjy.s[38]++;\n    storage.fetchAll().\n    then(notes => {/* istanbul ignore next */cov_yvt6rhqjy.f[8]++;cov_yvt6rhqjy.s[39]++;\n      sendJSON(response, 200, notes); /* istanbul ignore next */cov_yvt6rhqjy.s[40]++;\n      return;\n    }).\n    catch(error => {/* istanbul ignore next */cov_yvt6rhqjy.f[9]++;cov_yvt6rhqjy.s[41]++;\n      sendStatus(response, 500, error); /* istanbul ignore next */cov_yvt6rhqjy.s[42]++;\n      return;\n    });\n  }\n}","timestamp":"2017-12-08T05:46:28.272Z"}
{"level":"info","message":"responding with a status code of 200 and the following data","timestamp":"2017-12-08T05:46:28.273Z"}
[{"id":"ab9bf380-dbd9-11e7-b6a7-8f46d9f8761d","timestamp":"2017-12-08T05:35:59.160Z","title":"food that sounds yummy","content":"eggs and steak"},{"id":"e2c44830-dbd9-11e7-bfe4-1d554c4e6923","timestamp":"2017-12-08T05:37:31.699Z","title":"food that sounds yummy","content":"eggs and steak"},{"id":"23941430-dbda-11e7-aa57-3d8910f94ca5","timestamp":"2017-12-08T05:39:20.435Z","title":"food that sounds yummy","content":"eggs and steak"},{"id":"298b54c0-dbda-11e7-ae5d-6dd9671a7f44","timestamp":"2017-12-08T05:39:30.445Z","title":"food that sounds yummy","content":"eggs and steak"},{"id":"3b19a7a0-dbda-11e7-bd10-03c34b77f060","timestamp":"2017-12-08T05:39:59.898Z","title":"food that sounds yummy","content":"eggs and steak"},{"id":"4a98c990-dbda-11e7-902a-233bcd24deae","timestamp":"2017-12-08T05:40:25.898Z","title":"food that sounds yummy","content":"eggs and steak"},{"id":"58119430-dbda-11e7-a198-e3caf5ab958f","timestamp":"2017-12-08T05:40:48.499Z","title":"food that sounds yummy","content":"eggs and steak"},{"id":"6761b6e0-dbda-11e7-93e4-533474af1c5b","timestamp":"2017-12-08T05:41:14.190Z","title":"food that sounds yummy","content":"eggs and steak"},{"id":"6cb4a120-dbda-11e7-8ae5-2947f3ca84f7","timestamp":"2017-12-08T05:41:23.122Z","title":"food that sounds yummy","content":"eggs and steak"},{"id":"723c2ff0-dbda-11e7-be3b-03e71f98a3d9","timestamp":"2017-12-08T05:41:32.399Z","title":"food that sounds yummy","content":"eggs and steak"},{"id":"81233090-dbda-11e7-8580-e5c399b06ec6","timestamp":"2017-12-08T05:41:57.401Z","title":"food that sounds yummy","content":"eggs and steak"},{"id":"973a66f0-dbda-11e7-b86f-a924f17df39d","timestamp":"2017-12-08T05:42:34.464Z","title":"food that sounds yummy","content":"eggs and steak"},{"id":"c126abe0-dbda-11e7-8d97-d96ad9197099","timestamp":"2017-12-08T05:43:44.799Z","title":"food that sounds yummy","content":"eggs and steak"},{"id":"22948910-dbdb-11e7-8857-431a3d1bd7b1","timestamp":"2017-12-08T05:46:28.257Z","title":"food that sounds yummy","content":"eggs and steak"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T05:46:28.278Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T05:46:28.278Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[5]++;cov_yvt6rhqjy.s[32]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_yvt6rhqjy.b[3][0]++;cov_yvt6rhqjy.s[33]++;\n    storage.fetchItem(request.url.query.id).\n    then(note => {/* istanbul ignore next */cov_yvt6rhqjy.f[6]++;cov_yvt6rhqjy.s[34]++;\n      sendJSON(response, 200, note); /* istanbul ignore next */cov_yvt6rhqjy.s[35]++;\n      return;\n    }).\n    catch(error => {/* istanbul ignore next */cov_yvt6rhqjy.f[7]++;cov_yvt6rhqjy.s[36]++;\n      sendStatus(response, 500, error); /* istanbul ignore next */cov_yvt6rhqjy.s[37]++;\n      return;\n    });\n  } else {/* istanbul ignore next */cov_yvt6rhqjy.b[3][1]++;cov_yvt6rhqjy.s[38]++;\n    storage.fetchAll().\n    then(notes => {/* istanbul ignore next */cov_yvt6rhqjy.f[8]++;cov_yvt6rhqjy.s[39]++;\n      sendJSON(response, 200, notes); /* istanbul ignore next */cov_yvt6rhqjy.s[40]++;\n      return;\n    }).\n    catch(error => {/* istanbul ignore next */cov_yvt6rhqjy.f[9]++;cov_yvt6rhqjy.s[41]++;\n      sendStatus(response, 500, error); /* istanbul ignore next */cov_yvt6rhqjy.s[42]++;\n      return;\n    });\n  }\n}","timestamp":"2017-12-08T05:46:28.279Z"}
{"level":"info","message":"responding with a status code of 200 and the following data","timestamp":"2017-12-08T05:46:28.279Z"}
{"id":"ab9bf380-dbd9-11e7-b6a7-8f46d9f8761d","timestamp":"2017-12-08T05:46:28.280Z","title":"food that sounds yummy","content":"eggs and steak","level":"info","message":""}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T05:46:28.283Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T05:46:28.283Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[10]++;cov_yvt6rhqjy.s[44]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_yvt6rhqjy.b[4][0]++;cov_yvt6rhqjy.s[45]++;\n    storage.delete(request.url.query.id).\n    then(() => {/* istanbul ignore next */cov_yvt6rhqjy.f[11]++;cov_yvt6rhqjy.s[46]++;\n      sendStatus(response, 204, 'successfully deleted'); /* istanbul ignore next */cov_yvt6rhqjy.s[47]++;\n      return;\n    }).\n    catch(error => {/* istanbul ignore next */cov_yvt6rhqjy.f[12]++;cov_yvt6rhqjy.s[48]++;\n      sendStatus(response, 500, error); /* istanbul ignore next */cov_yvt6rhqjy.s[49]++;\n      return;\n    });\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[4][1]++;}cov_yvt6rhqjy.s[50]++;\n  sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[51]++;\n  return;\n}","timestamp":"2017-12-08T05:46:28.283Z"}
{"level":"info","message":"__REQUEST_ERROR","timestamp":"2017-12-08T05:46:28.284Z"}
{"message":"storage.delete is not a function","stack":"TypeError: storage.delete is not a function\n    at Object.<anonymous>.router.delete (/home/ncarignan/cf/401/lab-assignments/08-09-vanilla-rest-server/lab-nicholasc/route/note-router.js:81:19)\n    at requestParser.parse.then.request (/home/ncarignan/cf/401/lab-assignments/08-09-vanilla-rest-server/lab-nicholasc/lib/router.js:48:89)\n    at process._tickCallback (internal/process/next_tick.js:109:7)","level":"info","timestamp":"2017-12-08T05:46:28.284Z"}
{"level":"info","message":"adding a POST url and callbacck","timestamp":"2017-12-08T05:46:50.589Z"}
{"level":"info","message":"/api/notes","timestamp":"2017-12-08T05:46:50.590Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[2]++;cov_yvt6rhqjy.s[16]++;\n  //TODO: run console.trace(); track what happens\n  if (!request.body) {/* istanbul ignore next */cov_yvt6rhqjy.b[0][0]++;cov_yvt6rhqjy.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[0][1]++;}\n  // checking if values are present- instead we should check if values match type\n  // if typeof\n  cov_yvt6rhqjy.s[19]++;if (typeof request.body.title !== 'string') {/* istanbul ignore next */cov_yvt6rhqjy.b[1][0]++;cov_yvt6rhqjy.s[20]++;\n    sendStatus(response, 400, 'title must be a string'); /* istanbul ignore next */cov_yvt6rhqjy.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[1][1]++;}cov_yvt6rhqjy.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_yvt6rhqjy.b[2][0]++;cov_yvt6rhqjy.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[2][1]++;}\n\n  let note = /* istanbul ignore next */(cov_yvt6rhqjy.s[25]++, new Note(request.body.title, request.body.content)); /* istanbul ignore next */cov_yvt6rhqjy.s[26]++;\n  storage.addItem(note).\n  then(() => {/* istanbul ignore next */cov_yvt6rhqjy.f[3]++;cov_yvt6rhqjy.s[27]++;\n    sendJSON(response, 200, note); /* istanbul ignore next */cov_yvt6rhqjy.s[28]++;\n    return;\n  }).\n  catch(error => {/* istanbul ignore next */cov_yvt6rhqjy.f[4]++;cov_yvt6rhqjy.s[29]++;\n    sendStatus(response, 500, error); /* istanbul ignore next */cov_yvt6rhqjy.s[30]++;\n    return;\n  });\n}","timestamp":"2017-12-08T05:46:50.590Z"}
{"level":"info","message":"adding a GET url and callbacck","timestamp":"2017-12-08T05:46:50.590Z"}
{"level":"info","message":"/api/notes","timestamp":"2017-12-08T05:46:50.590Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[5]++;cov_yvt6rhqjy.s[32]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_yvt6rhqjy.b[3][0]++;cov_yvt6rhqjy.s[33]++;\n    storage.fetchItem(request.url.query.id).\n    then(note => {/* istanbul ignore next */cov_yvt6rhqjy.f[6]++;cov_yvt6rhqjy.s[34]++;\n      sendJSON(response, 200, note); /* istanbul ignore next */cov_yvt6rhqjy.s[35]++;\n      return;\n    }).\n    catch(error => {/* istanbul ignore next */cov_yvt6rhqjy.f[7]++;cov_yvt6rhqjy.s[36]++;\n      sendStatus(response, 500, error); /* istanbul ignore next */cov_yvt6rhqjy.s[37]++;\n      return;\n    });\n  } else {/* istanbul ignore next */cov_yvt6rhqjy.b[3][1]++;cov_yvt6rhqjy.s[38]++;\n    storage.fetchAll().\n    then(notes => {/* istanbul ignore next */cov_yvt6rhqjy.f[8]++;cov_yvt6rhqjy.s[39]++;\n      sendJSON(response, 200, notes); /* istanbul ignore next */cov_yvt6rhqjy.s[40]++;\n      return;\n    }).\n    catch(error => {/* istanbul ignore next */cov_yvt6rhqjy.f[9]++;cov_yvt6rhqjy.s[41]++;\n      sendStatus(response, 500, error); /* istanbul ignore next */cov_yvt6rhqjy.s[42]++;\n      return;\n    });\n  }\n}","timestamp":"2017-12-08T05:46:50.590Z"}
{"level":"info","message":"adding a DELETE url and callbacck","timestamp":"2017-12-08T05:46:50.590Z"}
{"level":"info","message":"/api/notes","timestamp":"2017-12-08T05:46:50.590Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[10]++;cov_yvt6rhqjy.s[44]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_yvt6rhqjy.b[4][0]++;cov_yvt6rhqjy.s[45]++;\n    storage.deleteItem(request.url.query.id).\n    then(() => {/* istanbul ignore next */cov_yvt6rhqjy.f[11]++;cov_yvt6rhqjy.s[46]++;\n      sendStatus(response, 204, 'successfully deleted'); /* istanbul ignore next */cov_yvt6rhqjy.s[47]++;\n      return;\n    }).\n    catch(error => {/* istanbul ignore next */cov_yvt6rhqjy.f[12]++;cov_yvt6rhqjy.s[48]++;\n      sendStatus(response, 500, error); /* istanbul ignore next */cov_yvt6rhqjy.s[49]++;\n      return;\n    });\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[4][1]++;}cov_yvt6rhqjy.s[50]++;\n  sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[51]++;\n  return;\n}","timestamp":"2017-12-08T05:46:50.590Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-08T05:46:50.646Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T05:46:50.663Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T05:46:50.664Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[2]++;cov_yvt6rhqjy.s[16]++;\n  //TODO: run console.trace(); track what happens\n  if (!request.body) {/* istanbul ignore next */cov_yvt6rhqjy.b[0][0]++;cov_yvt6rhqjy.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[0][1]++;}\n  // checking if values are present- instead we should check if values match type\n  // if typeof\n  cov_yvt6rhqjy.s[19]++;if (typeof request.body.title !== 'string') {/* istanbul ignore next */cov_yvt6rhqjy.b[1][0]++;cov_yvt6rhqjy.s[20]++;\n    sendStatus(response, 400, 'title must be a string'); /* istanbul ignore next */cov_yvt6rhqjy.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[1][1]++;}cov_yvt6rhqjy.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_yvt6rhqjy.b[2][0]++;cov_yvt6rhqjy.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[2][1]++;}\n\n  let note = /* istanbul ignore next */(cov_yvt6rhqjy.s[25]++, new Note(request.body.title, request.body.content)); /* istanbul ignore next */cov_yvt6rhqjy.s[26]++;\n  storage.addItem(note).\n  then(() => {/* istanbul ignore next */cov_yvt6rhqjy.f[3]++;cov_yvt6rhqjy.s[27]++;\n    sendJSON(response, 200, note); /* istanbul ignore next */cov_yvt6rhqjy.s[28]++;\n    return;\n  }).\n  catch(error => {/* istanbul ignore next */cov_yvt6rhqjy.f[4]++;cov_yvt6rhqjy.s[29]++;\n    sendStatus(response, 500, error); /* istanbul ignore next */cov_yvt6rhqjy.s[30]++;\n    return;\n  });\n}","timestamp":"2017-12-08T05:46:50.664Z"}
{"level":"info","message":"responding with a status code of 200 and the following data","timestamp":"2017-12-08T05:46:50.668Z"}
{"id":"2fefb990-dbdb-11e7-8095-91fa293993d2","timestamp":"2017-12-08T05:46:50.669Z","title":"food that sounds yummy","content":"eggs and steak","level":"info","message":""}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T05:46:50.681Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T05:46:50.681Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[5]++;cov_yvt6rhqjy.s[32]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_yvt6rhqjy.b[3][0]++;cov_yvt6rhqjy.s[33]++;\n    storage.fetchItem(request.url.query.id).\n    then(note => {/* istanbul ignore next */cov_yvt6rhqjy.f[6]++;cov_yvt6rhqjy.s[34]++;\n      sendJSON(response, 200, note); /* istanbul ignore next */cov_yvt6rhqjy.s[35]++;\n      return;\n    }).\n    catch(error => {/* istanbul ignore next */cov_yvt6rhqjy.f[7]++;cov_yvt6rhqjy.s[36]++;\n      sendStatus(response, 500, error); /* istanbul ignore next */cov_yvt6rhqjy.s[37]++;\n      return;\n    });\n  } else {/* istanbul ignore next */cov_yvt6rhqjy.b[3][1]++;cov_yvt6rhqjy.s[38]++;\n    storage.fetchAll().\n    then(notes => {/* istanbul ignore next */cov_yvt6rhqjy.f[8]++;cov_yvt6rhqjy.s[39]++;\n      sendJSON(response, 200, notes); /* istanbul ignore next */cov_yvt6rhqjy.s[40]++;\n      return;\n    }).\n    catch(error => {/* istanbul ignore next */cov_yvt6rhqjy.f[9]++;cov_yvt6rhqjy.s[41]++;\n      sendStatus(response, 500, error); /* istanbul ignore next */cov_yvt6rhqjy.s[42]++;\n      return;\n    });\n  }\n}","timestamp":"2017-12-08T05:46:50.681Z"}
{"level":"info","message":"responding with a status code of 200 and the following data","timestamp":"2017-12-08T05:46:50.682Z"}
[{"id":"ab9bf380-dbd9-11e7-b6a7-8f46d9f8761d","timestamp":"2017-12-08T05:35:59.160Z","title":"food that sounds yummy","content":"eggs and steak"},{"id":"e2c44830-dbd9-11e7-bfe4-1d554c4e6923","timestamp":"2017-12-08T05:37:31.699Z","title":"food that sounds yummy","content":"eggs and steak"},{"id":"23941430-dbda-11e7-aa57-3d8910f94ca5","timestamp":"2017-12-08T05:39:20.435Z","title":"food that sounds yummy","content":"eggs and steak"},{"id":"298b54c0-dbda-11e7-ae5d-6dd9671a7f44","timestamp":"2017-12-08T05:39:30.445Z","title":"food that sounds yummy","content":"eggs and steak"},{"id":"3b19a7a0-dbda-11e7-bd10-03c34b77f060","timestamp":"2017-12-08T05:39:59.898Z","title":"food that sounds yummy","content":"eggs and steak"},{"id":"4a98c990-dbda-11e7-902a-233bcd24deae","timestamp":"2017-12-08T05:40:25.898Z","title":"food that sounds yummy","content":"eggs and steak"},{"id":"58119430-dbda-11e7-a198-e3caf5ab958f","timestamp":"2017-12-08T05:40:48.499Z","title":"food that sounds yummy","content":"eggs and steak"},{"id":"6761b6e0-dbda-11e7-93e4-533474af1c5b","timestamp":"2017-12-08T05:41:14.190Z","title":"food that sounds yummy","content":"eggs and steak"},{"id":"6cb4a120-dbda-11e7-8ae5-2947f3ca84f7","timestamp":"2017-12-08T05:41:23.122Z","title":"food that sounds yummy","content":"eggs and steak"},{"id":"723c2ff0-dbda-11e7-be3b-03e71f98a3d9","timestamp":"2017-12-08T05:41:32.399Z","title":"food that sounds yummy","content":"eggs and steak"},{"id":"81233090-dbda-11e7-8580-e5c399b06ec6","timestamp":"2017-12-08T05:41:57.401Z","title":"food that sounds yummy","content":"eggs and steak"},{"id":"973a66f0-dbda-11e7-b86f-a924f17df39d","timestamp":"2017-12-08T05:42:34.464Z","title":"food that sounds yummy","content":"eggs and steak"},{"id":"c126abe0-dbda-11e7-8d97-d96ad9197099","timestamp":"2017-12-08T05:43:44.799Z","title":"food that sounds yummy","content":"eggs and steak"},{"id":"22948910-dbdb-11e7-8857-431a3d1bd7b1","timestamp":"2017-12-08T05:46:28.257Z","title":"food that sounds yummy","content":"eggs and steak"},{"id":"2fefb990-dbdb-11e7-8095-91fa293993d2","timestamp":"2017-12-08T05:46:50.665Z","title":"food that sounds yummy","content":"eggs and steak"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T05:46:50.688Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T05:46:50.688Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[5]++;cov_yvt6rhqjy.s[32]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_yvt6rhqjy.b[3][0]++;cov_yvt6rhqjy.s[33]++;\n    storage.fetchItem(request.url.query.id).\n    then(note => {/* istanbul ignore next */cov_yvt6rhqjy.f[6]++;cov_yvt6rhqjy.s[34]++;\n      sendJSON(response, 200, note); /* istanbul ignore next */cov_yvt6rhqjy.s[35]++;\n      return;\n    }).\n    catch(error => {/* istanbul ignore next */cov_yvt6rhqjy.f[7]++;cov_yvt6rhqjy.s[36]++;\n      sendStatus(response, 500, error); /* istanbul ignore next */cov_yvt6rhqjy.s[37]++;\n      return;\n    });\n  } else {/* istanbul ignore next */cov_yvt6rhqjy.b[3][1]++;cov_yvt6rhqjy.s[38]++;\n    storage.fetchAll().\n    then(notes => {/* istanbul ignore next */cov_yvt6rhqjy.f[8]++;cov_yvt6rhqjy.s[39]++;\n      sendJSON(response, 200, notes); /* istanbul ignore next */cov_yvt6rhqjy.s[40]++;\n      return;\n    }).\n    catch(error => {/* istanbul ignore next */cov_yvt6rhqjy.f[9]++;cov_yvt6rhqjy.s[41]++;\n      sendStatus(response, 500, error); /* istanbul ignore next */cov_yvt6rhqjy.s[42]++;\n      return;\n    });\n  }\n}","timestamp":"2017-12-08T05:46:50.689Z"}
{"level":"info","message":"responding with a status code of 200 and the following data","timestamp":"2017-12-08T05:46:50.689Z"}
{"id":"ab9bf380-dbd9-11e7-b6a7-8f46d9f8761d","timestamp":"2017-12-08T05:46:50.689Z","title":"food that sounds yummy","content":"eggs and steak","level":"info","message":""}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T05:46:50.692Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T05:46:50.692Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[10]++;cov_yvt6rhqjy.s[44]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_yvt6rhqjy.b[4][0]++;cov_yvt6rhqjy.s[45]++;\n    storage.deleteItem(request.url.query.id).\n    then(() => {/* istanbul ignore next */cov_yvt6rhqjy.f[11]++;cov_yvt6rhqjy.s[46]++;\n      sendStatus(response, 204, 'successfully deleted'); /* istanbul ignore next */cov_yvt6rhqjy.s[47]++;\n      return;\n    }).\n    catch(error => {/* istanbul ignore next */cov_yvt6rhqjy.f[12]++;cov_yvt6rhqjy.s[48]++;\n      sendStatus(response, 500, error); /* istanbul ignore next */cov_yvt6rhqjy.s[49]++;\n      return;\n    });\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[4][1]++;}cov_yvt6rhqjy.s[50]++;\n  sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[51]++;\n  return;\n}","timestamp":"2017-12-08T05:46:50.693Z"}
{"level":"info","message":"responding with a status code of 404 due to id not found","timestamp":"2017-12-08T05:46:50.693Z"}
{"level":"info","message":"responding with a status code of 204 due to successfully deleted","timestamp":"2017-12-08T05:46:50.912Z"}
{"level":"info","message":"adding a POST url and callbacck","timestamp":"2017-12-08T05:47:46.928Z"}
{"level":"info","message":"/api/notes","timestamp":"2017-12-08T05:47:46.929Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[2]++;cov_yvt6rhqjy.s[16]++;\n  //TODO: run console.trace(); track what happens\n  if (!request.body) {/* istanbul ignore next */cov_yvt6rhqjy.b[0][0]++;cov_yvt6rhqjy.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[0][1]++;}\n  // checking if values are present- instead we should check if values match type\n  // if typeof\n  cov_yvt6rhqjy.s[19]++;if (typeof request.body.title !== 'string') {/* istanbul ignore next */cov_yvt6rhqjy.b[1][0]++;cov_yvt6rhqjy.s[20]++;\n    sendStatus(response, 400, 'title must be a string'); /* istanbul ignore next */cov_yvt6rhqjy.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[1][1]++;}cov_yvt6rhqjy.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_yvt6rhqjy.b[2][0]++;cov_yvt6rhqjy.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[2][1]++;}\n\n  let note = /* istanbul ignore next */(cov_yvt6rhqjy.s[25]++, new Note(request.body.title, request.body.content)); /* istanbul ignore next */cov_yvt6rhqjy.s[26]++;\n  storage.addItem(note).\n  then(() => {/* istanbul ignore next */cov_yvt6rhqjy.f[3]++;cov_yvt6rhqjy.s[27]++;\n    sendJSON(response, 200, note); /* istanbul ignore next */cov_yvt6rhqjy.s[28]++;\n    return;\n  }).\n  catch(error => {/* istanbul ignore next */cov_yvt6rhqjy.f[4]++;cov_yvt6rhqjy.s[29]++;\n    sendStatus(response, 500, error); /* istanbul ignore next */cov_yvt6rhqjy.s[30]++;\n    return;\n  });\n}","timestamp":"2017-12-08T05:47:46.929Z"}
{"level":"info","message":"adding a GET url and callbacck","timestamp":"2017-12-08T05:47:46.930Z"}
{"level":"info","message":"/api/notes","timestamp":"2017-12-08T05:47:46.930Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[5]++;cov_yvt6rhqjy.s[32]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_yvt6rhqjy.b[3][0]++;cov_yvt6rhqjy.s[33]++;\n    storage.fetchItem(request.url.query.id).\n    then(note => {/* istanbul ignore next */cov_yvt6rhqjy.f[6]++;cov_yvt6rhqjy.s[34]++;\n      sendJSON(response, 200, note); /* istanbul ignore next */cov_yvt6rhqjy.s[35]++;\n      return;\n    }).\n    catch(error => {/* istanbul ignore next */cov_yvt6rhqjy.f[7]++;cov_yvt6rhqjy.s[36]++;\n      sendStatus(response, 500, error); /* istanbul ignore next */cov_yvt6rhqjy.s[37]++;\n      return;\n    });\n  } else {/* istanbul ignore next */cov_yvt6rhqjy.b[3][1]++;cov_yvt6rhqjy.s[38]++;\n    storage.fetchAll().\n    then(notes => {/* istanbul ignore next */cov_yvt6rhqjy.f[8]++;cov_yvt6rhqjy.s[39]++;\n      sendJSON(response, 200, notes); /* istanbul ignore next */cov_yvt6rhqjy.s[40]++;\n      return;\n    }).\n    catch(error => {/* istanbul ignore next */cov_yvt6rhqjy.f[9]++;cov_yvt6rhqjy.s[41]++;\n      sendStatus(response, 500, error); /* istanbul ignore next */cov_yvt6rhqjy.s[42]++;\n      return;\n    });\n  }\n}","timestamp":"2017-12-08T05:47:46.930Z"}
{"level":"info","message":"adding a DELETE url and callbacck","timestamp":"2017-12-08T05:47:46.930Z"}
{"level":"info","message":"/api/notes","timestamp":"2017-12-08T05:47:46.930Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[10]++;cov_yvt6rhqjy.s[44]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_yvt6rhqjy.b[4][0]++;cov_yvt6rhqjy.s[45]++;\n    storage.deleteItem(request.url.query.id).\n    then(() => {/* istanbul ignore next */cov_yvt6rhqjy.f[11]++;cov_yvt6rhqjy.s[46]++;\n      sendStatus(response, 204, 'successfully deleted'); /* istanbul ignore next */cov_yvt6rhqjy.s[47]++;\n      return;\n    }).\n    catch(error => {/* istanbul ignore next */cov_yvt6rhqjy.f[12]++;cov_yvt6rhqjy.s[48]++;\n      sendStatus(response, 500, error); /* istanbul ignore next */cov_yvt6rhqjy.s[49]++;\n      return;\n    });\n  } else {/* istanbul ignore next */cov_yvt6rhqjy.b[4][1]++;cov_yvt6rhqjy.s[50]++;\n    sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[51]++;\n    return;\n  }\n}","timestamp":"2017-12-08T05:47:46.930Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-08T05:47:46.982Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T05:47:46.998Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T05:47:46.999Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[2]++;cov_yvt6rhqjy.s[16]++;\n  //TODO: run console.trace(); track what happens\n  if (!request.body) {/* istanbul ignore next */cov_yvt6rhqjy.b[0][0]++;cov_yvt6rhqjy.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[0][1]++;}\n  // checking if values are present- instead we should check if values match type\n  // if typeof\n  cov_yvt6rhqjy.s[19]++;if (typeof request.body.title !== 'string') {/* istanbul ignore next */cov_yvt6rhqjy.b[1][0]++;cov_yvt6rhqjy.s[20]++;\n    sendStatus(response, 400, 'title must be a string'); /* istanbul ignore next */cov_yvt6rhqjy.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[1][1]++;}cov_yvt6rhqjy.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_yvt6rhqjy.b[2][0]++;cov_yvt6rhqjy.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[2][1]++;}\n\n  let note = /* istanbul ignore next */(cov_yvt6rhqjy.s[25]++, new Note(request.body.title, request.body.content)); /* istanbul ignore next */cov_yvt6rhqjy.s[26]++;\n  storage.addItem(note).\n  then(() => {/* istanbul ignore next */cov_yvt6rhqjy.f[3]++;cov_yvt6rhqjy.s[27]++;\n    sendJSON(response, 200, note); /* istanbul ignore next */cov_yvt6rhqjy.s[28]++;\n    return;\n  }).\n  catch(error => {/* istanbul ignore next */cov_yvt6rhqjy.f[4]++;cov_yvt6rhqjy.s[29]++;\n    sendStatus(response, 500, error); /* istanbul ignore next */cov_yvt6rhqjy.s[30]++;\n    return;\n  });\n}","timestamp":"2017-12-08T05:47:47.000Z"}
{"level":"info","message":"responding with a status code of 200 and the following data","timestamp":"2017-12-08T05:47:47.003Z"}
{"id":"5183c380-dbdb-11e7-afe9-8929c580a10f","timestamp":"2017-12-08T05:47:47.004Z","title":"food that sounds yummy","content":"eggs and steak","level":"info","message":""}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T05:47:47.017Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T05:47:47.017Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[5]++;cov_yvt6rhqjy.s[32]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_yvt6rhqjy.b[3][0]++;cov_yvt6rhqjy.s[33]++;\n    storage.fetchItem(request.url.query.id).\n    then(note => {/* istanbul ignore next */cov_yvt6rhqjy.f[6]++;cov_yvt6rhqjy.s[34]++;\n      sendJSON(response, 200, note); /* istanbul ignore next */cov_yvt6rhqjy.s[35]++;\n      return;\n    }).\n    catch(error => {/* istanbul ignore next */cov_yvt6rhqjy.f[7]++;cov_yvt6rhqjy.s[36]++;\n      sendStatus(response, 500, error); /* istanbul ignore next */cov_yvt6rhqjy.s[37]++;\n      return;\n    });\n  } else {/* istanbul ignore next */cov_yvt6rhqjy.b[3][1]++;cov_yvt6rhqjy.s[38]++;\n    storage.fetchAll().\n    then(notes => {/* istanbul ignore next */cov_yvt6rhqjy.f[8]++;cov_yvt6rhqjy.s[39]++;\n      sendJSON(response, 200, notes); /* istanbul ignore next */cov_yvt6rhqjy.s[40]++;\n      return;\n    }).\n    catch(error => {/* istanbul ignore next */cov_yvt6rhqjy.f[9]++;cov_yvt6rhqjy.s[41]++;\n      sendStatus(response, 500, error); /* istanbul ignore next */cov_yvt6rhqjy.s[42]++;\n      return;\n    });\n  }\n}","timestamp":"2017-12-08T05:47:47.017Z"}
{"level":"info","message":"responding with a status code of 200 and the following data","timestamp":"2017-12-08T05:47:47.018Z"}
[{"id":"e2c44830-dbd9-11e7-bfe4-1d554c4e6923","timestamp":"2017-12-08T05:37:31.699Z","title":"food that sounds yummy","content":"eggs and steak"},{"id":"23941430-dbda-11e7-aa57-3d8910f94ca5","timestamp":"2017-12-08T05:39:20.435Z","title":"food that sounds yummy","content":"eggs and steak"},{"id":"298b54c0-dbda-11e7-ae5d-6dd9671a7f44","timestamp":"2017-12-08T05:39:30.445Z","title":"food that sounds yummy","content":"eggs and steak"},{"id":"3b19a7a0-dbda-11e7-bd10-03c34b77f060","timestamp":"2017-12-08T05:39:59.898Z","title":"food that sounds yummy","content":"eggs and steak"},{"id":"4a98c990-dbda-11e7-902a-233bcd24deae","timestamp":"2017-12-08T05:40:25.898Z","title":"food that sounds yummy","content":"eggs and steak"},{"id":"58119430-dbda-11e7-a198-e3caf5ab958f","timestamp":"2017-12-08T05:40:48.499Z","title":"food that sounds yummy","content":"eggs and steak"},{"id":"6761b6e0-dbda-11e7-93e4-533474af1c5b","timestamp":"2017-12-08T05:41:14.190Z","title":"food that sounds yummy","content":"eggs and steak"},{"id":"6cb4a120-dbda-11e7-8ae5-2947f3ca84f7","timestamp":"2017-12-08T05:41:23.122Z","title":"food that sounds yummy","content":"eggs and steak"},{"id":"723c2ff0-dbda-11e7-be3b-03e71f98a3d9","timestamp":"2017-12-08T05:41:32.399Z","title":"food that sounds yummy","content":"eggs and steak"},{"id":"81233090-dbda-11e7-8580-e5c399b06ec6","timestamp":"2017-12-08T05:41:57.401Z","title":"food that sounds yummy","content":"eggs and steak"},{"id":"973a66f0-dbda-11e7-b86f-a924f17df39d","timestamp":"2017-12-08T05:42:34.464Z","title":"food that sounds yummy","content":"eggs and steak"},{"id":"c126abe0-dbda-11e7-8d97-d96ad9197099","timestamp":"2017-12-08T05:43:44.799Z","title":"food that sounds yummy","content":"eggs and steak"},{"id":"22948910-dbdb-11e7-8857-431a3d1bd7b1","timestamp":"2017-12-08T05:46:28.257Z","title":"food that sounds yummy","content":"eggs and steak"},{"id":"2fefb990-dbdb-11e7-8095-91fa293993d2","timestamp":"2017-12-08T05:46:50.665Z","title":"food that sounds yummy","content":"eggs and steak"},{"id":"5183c380-dbdb-11e7-afe9-8929c580a10f","timestamp":"2017-12-08T05:47:47.000Z","title":"food that sounds yummy","content":"eggs and steak"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T05:47:47.025Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T05:47:47.026Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[5]++;cov_yvt6rhqjy.s[32]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_yvt6rhqjy.b[3][0]++;cov_yvt6rhqjy.s[33]++;\n    storage.fetchItem(request.url.query.id).\n    then(note => {/* istanbul ignore next */cov_yvt6rhqjy.f[6]++;cov_yvt6rhqjy.s[34]++;\n      sendJSON(response, 200, note); /* istanbul ignore next */cov_yvt6rhqjy.s[35]++;\n      return;\n    }).\n    catch(error => {/* istanbul ignore next */cov_yvt6rhqjy.f[7]++;cov_yvt6rhqjy.s[36]++;\n      sendStatus(response, 500, error); /* istanbul ignore next */cov_yvt6rhqjy.s[37]++;\n      return;\n    });\n  } else {/* istanbul ignore next */cov_yvt6rhqjy.b[3][1]++;cov_yvt6rhqjy.s[38]++;\n    storage.fetchAll().\n    then(notes => {/* istanbul ignore next */cov_yvt6rhqjy.f[8]++;cov_yvt6rhqjy.s[39]++;\n      sendJSON(response, 200, notes); /* istanbul ignore next */cov_yvt6rhqjy.s[40]++;\n      return;\n    }).\n    catch(error => {/* istanbul ignore next */cov_yvt6rhqjy.f[9]++;cov_yvt6rhqjy.s[41]++;\n      sendStatus(response, 500, error); /* istanbul ignore next */cov_yvt6rhqjy.s[42]++;\n      return;\n    });\n  }\n}","timestamp":"2017-12-08T05:47:47.026Z"}
{"level":"info","message":"responding with a status code of 200 and the following data","timestamp":"2017-12-08T05:47:47.026Z"}
{"id":"e2c44830-dbd9-11e7-bfe4-1d554c4e6923","timestamp":"2017-12-08T05:47:47.027Z","title":"food that sounds yummy","content":"eggs and steak","level":"info","message":""}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T05:47:47.029Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T05:47:47.029Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[10]++;cov_yvt6rhqjy.s[44]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_yvt6rhqjy.b[4][0]++;cov_yvt6rhqjy.s[45]++;\n    storage.deleteItem(request.url.query.id).\n    then(() => {/* istanbul ignore next */cov_yvt6rhqjy.f[11]++;cov_yvt6rhqjy.s[46]++;\n      sendStatus(response, 204, 'successfully deleted'); /* istanbul ignore next */cov_yvt6rhqjy.s[47]++;\n      return;\n    }).\n    catch(error => {/* istanbul ignore next */cov_yvt6rhqjy.f[12]++;cov_yvt6rhqjy.s[48]++;\n      sendStatus(response, 500, error); /* istanbul ignore next */cov_yvt6rhqjy.s[49]++;\n      return;\n    });\n  } else {/* istanbul ignore next */cov_yvt6rhqjy.b[4][1]++;cov_yvt6rhqjy.s[50]++;\n    sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[51]++;\n    return;\n  }\n}","timestamp":"2017-12-08T05:47:47.030Z"}
{"level":"info","message":"responding with a status code of 204 due to successfully deleted","timestamp":"2017-12-08T05:47:47.031Z"}
{"level":"info","message":"adding a POST url and callbacck","timestamp":"2017-12-08T05:49:44.529Z"}
{"level":"info","message":"/api/notes","timestamp":"2017-12-08T05:49:44.530Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[2]++;cov_yvt6rhqjy.s[16]++;\n  //TODO: run console.trace(); track what happens\n  if (!request.body) {/* istanbul ignore next */cov_yvt6rhqjy.b[0][0]++;cov_yvt6rhqjy.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[0][1]++;}\n  // checking if values are present- instead we should check if values match type\n  // if typeof\n  cov_yvt6rhqjy.s[19]++;if (typeof request.body.title !== 'string') {/* istanbul ignore next */cov_yvt6rhqjy.b[1][0]++;cov_yvt6rhqjy.s[20]++;\n    sendStatus(response, 400, 'title must be a string'); /* istanbul ignore next */cov_yvt6rhqjy.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[1][1]++;}cov_yvt6rhqjy.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_yvt6rhqjy.b[2][0]++;cov_yvt6rhqjy.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[2][1]++;}\n\n  let note = /* istanbul ignore next */(cov_yvt6rhqjy.s[25]++, new Note(request.body.title, request.body.content)); /* istanbul ignore next */cov_yvt6rhqjy.s[26]++;\n  storage.addItem(note).\n  then(() => {/* istanbul ignore next */cov_yvt6rhqjy.f[3]++;cov_yvt6rhqjy.s[27]++;\n    sendJSON(response, 200, note); /* istanbul ignore next */cov_yvt6rhqjy.s[28]++;\n    return;\n  }).\n  catch(error => {/* istanbul ignore next */cov_yvt6rhqjy.f[4]++;cov_yvt6rhqjy.s[29]++;\n    sendStatus(response, 500, error); /* istanbul ignore next */cov_yvt6rhqjy.s[30]++;\n    return;\n  });\n}","timestamp":"2017-12-08T05:49:44.530Z"}
{"level":"info","message":"adding a GET url and callbacck","timestamp":"2017-12-08T05:49:44.531Z"}
{"level":"info","message":"/api/notes","timestamp":"2017-12-08T05:49:44.531Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[5]++;cov_yvt6rhqjy.s[32]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_yvt6rhqjy.b[3][0]++;cov_yvt6rhqjy.s[33]++;\n    storage.fetchItem(request.url.query.id).\n    then(note => {/* istanbul ignore next */cov_yvt6rhqjy.f[6]++;cov_yvt6rhqjy.s[34]++;\n      sendJSON(response, 200, note); /* istanbul ignore next */cov_yvt6rhqjy.s[35]++;\n      return;\n    }).\n    catch(error => {/* istanbul ignore next */cov_yvt6rhqjy.f[7]++;cov_yvt6rhqjy.s[36]++;\n      sendStatus(response, 500, error); /* istanbul ignore next */cov_yvt6rhqjy.s[37]++;\n      return;\n    });\n  } else {/* istanbul ignore next */cov_yvt6rhqjy.b[3][1]++;cov_yvt6rhqjy.s[38]++;\n    storage.fetchAll().\n    then(notes => {/* istanbul ignore next */cov_yvt6rhqjy.f[8]++;cov_yvt6rhqjy.s[39]++;\n      sendJSON(response, 200, notes); /* istanbul ignore next */cov_yvt6rhqjy.s[40]++;\n      return;\n    }).\n    catch(error => {/* istanbul ignore next */cov_yvt6rhqjy.f[9]++;cov_yvt6rhqjy.s[41]++;\n      sendStatus(response, 500, error); /* istanbul ignore next */cov_yvt6rhqjy.s[42]++;\n      return;\n    });\n  }\n}","timestamp":"2017-12-08T05:49:44.531Z"}
{"level":"info","message":"adding a DELETE url and callbacck","timestamp":"2017-12-08T05:49:44.531Z"}
{"level":"info","message":"/api/notes","timestamp":"2017-12-08T05:49:44.531Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[10]++;cov_yvt6rhqjy.s[44]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_yvt6rhqjy.b[4][0]++;cov_yvt6rhqjy.s[45]++;\n    storage.deleteItem(request.url.query.id).\n    then(() => {/* istanbul ignore next */cov_yvt6rhqjy.f[11]++;cov_yvt6rhqjy.s[46]++;\n      sendStatus(response, 204, 'successfully deleted'); /* istanbul ignore next */cov_yvt6rhqjy.s[47]++;\n      return;\n    }).\n    catch(error => {/* istanbul ignore next */cov_yvt6rhqjy.f[12]++;cov_yvt6rhqjy.s[48]++;\n      sendStatus(response, 500, error); /* istanbul ignore next */cov_yvt6rhqjy.s[49]++;\n      return;\n    });\n  } else {/* istanbul ignore next */cov_yvt6rhqjy.b[4][1]++;cov_yvt6rhqjy.s[50]++;\n    sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[51]++;\n    return;\n  }\n}","timestamp":"2017-12-08T05:49:44.531Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-08T05:49:44.572Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T05:49:44.587Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T05:49:44.588Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[2]++;cov_yvt6rhqjy.s[16]++;\n  //TODO: run console.trace(); track what happens\n  if (!request.body) {/* istanbul ignore next */cov_yvt6rhqjy.b[0][0]++;cov_yvt6rhqjy.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[0][1]++;}\n  // checking if values are present- instead we should check if values match type\n  // if typeof\n  cov_yvt6rhqjy.s[19]++;if (typeof request.body.title !== 'string') {/* istanbul ignore next */cov_yvt6rhqjy.b[1][0]++;cov_yvt6rhqjy.s[20]++;\n    sendStatus(response, 400, 'title must be a string'); /* istanbul ignore next */cov_yvt6rhqjy.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[1][1]++;}cov_yvt6rhqjy.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_yvt6rhqjy.b[2][0]++;cov_yvt6rhqjy.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[2][1]++;}\n\n  let note = /* istanbul ignore next */(cov_yvt6rhqjy.s[25]++, new Note(request.body.title, request.body.content)); /* istanbul ignore next */cov_yvt6rhqjy.s[26]++;\n  storage.addItem(note).\n  then(() => {/* istanbul ignore next */cov_yvt6rhqjy.f[3]++;cov_yvt6rhqjy.s[27]++;\n    sendJSON(response, 200, note); /* istanbul ignore next */cov_yvt6rhqjy.s[28]++;\n    return;\n  }).\n  catch(error => {/* istanbul ignore next */cov_yvt6rhqjy.f[4]++;cov_yvt6rhqjy.s[29]++;\n    sendStatus(response, 500, error); /* istanbul ignore next */cov_yvt6rhqjy.s[30]++;\n    return;\n  });\n}","timestamp":"2017-12-08T05:49:44.588Z"}
{"level":"info","message":"responding with a status code of 200 and the following data","timestamp":"2017-12-08T05:49:44.592Z"}
{"id":"979a44c0-dbdb-11e7-bbaa-3fc9f76bedde","timestamp":"2017-12-08T05:49:44.592Z","title":"food that sounds yummy","content":"eggs and steak","level":"info","message":""}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T05:49:44.605Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T05:49:44.605Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[5]++;cov_yvt6rhqjy.s[32]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_yvt6rhqjy.b[3][0]++;cov_yvt6rhqjy.s[33]++;\n    storage.fetchItem(request.url.query.id).\n    then(note => {/* istanbul ignore next */cov_yvt6rhqjy.f[6]++;cov_yvt6rhqjy.s[34]++;\n      sendJSON(response, 200, note); /* istanbul ignore next */cov_yvt6rhqjy.s[35]++;\n      return;\n    }).\n    catch(error => {/* istanbul ignore next */cov_yvt6rhqjy.f[7]++;cov_yvt6rhqjy.s[36]++;\n      sendStatus(response, 500, error); /* istanbul ignore next */cov_yvt6rhqjy.s[37]++;\n      return;\n    });\n  } else {/* istanbul ignore next */cov_yvt6rhqjy.b[3][1]++;cov_yvt6rhqjy.s[38]++;\n    storage.fetchAll().\n    then(notes => {/* istanbul ignore next */cov_yvt6rhqjy.f[8]++;cov_yvt6rhqjy.s[39]++;\n      sendJSON(response, 200, notes); /* istanbul ignore next */cov_yvt6rhqjy.s[40]++;\n      return;\n    }).\n    catch(error => {/* istanbul ignore next */cov_yvt6rhqjy.f[9]++;cov_yvt6rhqjy.s[41]++;\n      sendStatus(response, 500, error); /* istanbul ignore next */cov_yvt6rhqjy.s[42]++;\n      return;\n    });\n  }\n}","timestamp":"2017-12-08T05:49:44.605Z"}
{"level":"info","message":"responding with a status code of 200 and the following data","timestamp":"2017-12-08T05:49:44.606Z"}
[{"id":"23941430-dbda-11e7-aa57-3d8910f94ca5","timestamp":"2017-12-08T05:39:20.435Z","title":"food that sounds yummy","content":"eggs and steak"},{"id":"298b54c0-dbda-11e7-ae5d-6dd9671a7f44","timestamp":"2017-12-08T05:39:30.445Z","title":"food that sounds yummy","content":"eggs and steak"},{"id":"3b19a7a0-dbda-11e7-bd10-03c34b77f060","timestamp":"2017-12-08T05:39:59.898Z","title":"food that sounds yummy","content":"eggs and steak"},{"id":"4a98c990-dbda-11e7-902a-233bcd24deae","timestamp":"2017-12-08T05:40:25.898Z","title":"food that sounds yummy","content":"eggs and steak"},{"id":"58119430-dbda-11e7-a198-e3caf5ab958f","timestamp":"2017-12-08T05:40:48.499Z","title":"food that sounds yummy","content":"eggs and steak"},{"id":"6761b6e0-dbda-11e7-93e4-533474af1c5b","timestamp":"2017-12-08T05:41:14.190Z","title":"food that sounds yummy","content":"eggs and steak"},{"id":"6cb4a120-dbda-11e7-8ae5-2947f3ca84f7","timestamp":"2017-12-08T05:41:23.122Z","title":"food that sounds yummy","content":"eggs and steak"},{"id":"723c2ff0-dbda-11e7-be3b-03e71f98a3d9","timestamp":"2017-12-08T05:41:32.399Z","title":"food that sounds yummy","content":"eggs and steak"},{"id":"81233090-dbda-11e7-8580-e5c399b06ec6","timestamp":"2017-12-08T05:41:57.401Z","title":"food that sounds yummy","content":"eggs and steak"},{"id":"973a66f0-dbda-11e7-b86f-a924f17df39d","timestamp":"2017-12-08T05:42:34.464Z","title":"food that sounds yummy","content":"eggs and steak"},{"id":"c126abe0-dbda-11e7-8d97-d96ad9197099","timestamp":"2017-12-08T05:43:44.799Z","title":"food that sounds yummy","content":"eggs and steak"},{"id":"22948910-dbdb-11e7-8857-431a3d1bd7b1","timestamp":"2017-12-08T05:46:28.257Z","title":"food that sounds yummy","content":"eggs and steak"},{"id":"2fefb990-dbdb-11e7-8095-91fa293993d2","timestamp":"2017-12-08T05:46:50.665Z","title":"food that sounds yummy","content":"eggs and steak"},{"id":"5183c380-dbdb-11e7-afe9-8929c580a10f","timestamp":"2017-12-08T05:47:47.000Z","title":"food that sounds yummy","content":"eggs and steak"},{"id":"979a44c0-dbdb-11e7-bbaa-3fc9f76bedde","timestamp":"2017-12-08T05:49:44.588Z","title":"food that sounds yummy","content":"eggs and steak"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T05:49:44.611Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T05:49:44.611Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[5]++;cov_yvt6rhqjy.s[32]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_yvt6rhqjy.b[3][0]++;cov_yvt6rhqjy.s[33]++;\n    storage.fetchItem(request.url.query.id).\n    then(note => {/* istanbul ignore next */cov_yvt6rhqjy.f[6]++;cov_yvt6rhqjy.s[34]++;\n      sendJSON(response, 200, note); /* istanbul ignore next */cov_yvt6rhqjy.s[35]++;\n      return;\n    }).\n    catch(error => {/* istanbul ignore next */cov_yvt6rhqjy.f[7]++;cov_yvt6rhqjy.s[36]++;\n      sendStatus(response, 500, error); /* istanbul ignore next */cov_yvt6rhqjy.s[37]++;\n      return;\n    });\n  } else {/* istanbul ignore next */cov_yvt6rhqjy.b[3][1]++;cov_yvt6rhqjy.s[38]++;\n    storage.fetchAll().\n    then(notes => {/* istanbul ignore next */cov_yvt6rhqjy.f[8]++;cov_yvt6rhqjy.s[39]++;\n      sendJSON(response, 200, notes); /* istanbul ignore next */cov_yvt6rhqjy.s[40]++;\n      return;\n    }).\n    catch(error => {/* istanbul ignore next */cov_yvt6rhqjy.f[9]++;cov_yvt6rhqjy.s[41]++;\n      sendStatus(response, 500, error); /* istanbul ignore next */cov_yvt6rhqjy.s[42]++;\n      return;\n    });\n  }\n}","timestamp":"2017-12-08T05:49:44.611Z"}
{"level":"info","message":"responding with a status code of 200 and the following data","timestamp":"2017-12-08T05:49:44.612Z"}
{"id":"23941430-dbda-11e7-aa57-3d8910f94ca5","timestamp":"2017-12-08T05:49:44.612Z","title":"food that sounds yummy","content":"eggs and steak","level":"info","message":""}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T05:49:44.616Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T05:49:44.616Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[10]++;cov_yvt6rhqjy.s[44]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_yvt6rhqjy.b[4][0]++;cov_yvt6rhqjy.s[45]++;\n    storage.deleteItem(request.url.query.id).\n    then(() => {/* istanbul ignore next */cov_yvt6rhqjy.f[11]++;cov_yvt6rhqjy.s[46]++;\n      sendStatus(response, 204, 'successfully deleted'); /* istanbul ignore next */cov_yvt6rhqjy.s[47]++;\n      return;\n    }).\n    catch(error => {/* istanbul ignore next */cov_yvt6rhqjy.f[12]++;cov_yvt6rhqjy.s[48]++;\n      sendStatus(response, 500, error); /* istanbul ignore next */cov_yvt6rhqjy.s[49]++;\n      return;\n    });\n  } else {/* istanbul ignore next */cov_yvt6rhqjy.b[4][1]++;cov_yvt6rhqjy.s[50]++;\n    sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[51]++;\n    return;\n  }\n}","timestamp":"2017-12-08T05:49:44.616Z"}
{"level":"info","message":"responding with a status code of 204 due to successfully deleted","timestamp":"2017-12-08T05:49:44.617Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T05:49:44.620Z"}
{"level":"info","message":"__REQUEST_ERROR","timestamp":"2017-12-08T05:49:44.620Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at Object.parse (native)\n    at IncomingMessage.request.on.error (/home/ncarignan/cf/401/lab-assignments/08-09-vanilla-rest-server/lab-nicholasc/lib/request-parser.js:28:31)\n    at emitNone (events.js:86:13)\n    at IncomingMessage.emit (events.js:185:7)\n    at endReadableNT (_stream_readable.js:974:12)\n    at _combinedTickCallback (internal/process/next_tick.js:80:11)\n    at process._tickCallback (internal/process/next_tick.js:104:9)","level":"info","timestamp":"2017-12-08T05:49:44.620Z"}
{"level":"info","message":"adding a POST url and callbacck","timestamp":"2017-12-08T06:07:53.977Z"}
{"level":"info","message":"/api/notes","timestamp":"2017-12-08T06:07:53.978Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[2]++;cov_yvt6rhqjy.s[16]++;\n  //TODO: run console.trace(); track what happens\n  if (!request.body) {/* istanbul ignore next */cov_yvt6rhqjy.b[0][0]++;cov_yvt6rhqjy.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[0][1]++;}\n  // checking if values are present- instead we should check if values match type\n  // if typeof\n  cov_yvt6rhqjy.s[19]++;if (typeof request.body.title !== 'string') {/* istanbul ignore next */cov_yvt6rhqjy.b[1][0]++;cov_yvt6rhqjy.s[20]++;\n    sendStatus(response, 400, 'title must be a string'); /* istanbul ignore next */cov_yvt6rhqjy.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[1][1]++;}cov_yvt6rhqjy.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_yvt6rhqjy.b[2][0]++;cov_yvt6rhqjy.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[2][1]++;}\n\n  let note = /* istanbul ignore next */(cov_yvt6rhqjy.s[25]++, new Note(request.body.title, request.body.content)); /* istanbul ignore next */cov_yvt6rhqjy.s[26]++;\n  storage.addItem(note).\n  then(() => {/* istanbul ignore next */cov_yvt6rhqjy.f[3]++;cov_yvt6rhqjy.s[27]++;\n    sendJSON(response, 200, note); /* istanbul ignore next */cov_yvt6rhqjy.s[28]++;\n    return;\n  }).\n  catch(error => {/* istanbul ignore next */cov_yvt6rhqjy.f[4]++;cov_yvt6rhqjy.s[29]++;\n    sendStatus(response, 500, error); /* istanbul ignore next */cov_yvt6rhqjy.s[30]++;\n    return;\n  });\n}","timestamp":"2017-12-08T06:07:53.978Z"}
{"level":"info","message":"adding a GET url and callbacck","timestamp":"2017-12-08T06:07:53.979Z"}
{"level":"info","message":"/api/notes","timestamp":"2017-12-08T06:07:53.979Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[5]++;cov_yvt6rhqjy.s[32]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_yvt6rhqjy.b[3][0]++;cov_yvt6rhqjy.s[33]++;\n    storage.fetchItem(request.url.query.id).\n    then(note => {/* istanbul ignore next */cov_yvt6rhqjy.f[6]++;cov_yvt6rhqjy.s[34]++;\n      sendJSON(response, 200, note); /* istanbul ignore next */cov_yvt6rhqjy.s[35]++;\n      return;\n    }).\n    catch(error => {/* istanbul ignore next */cov_yvt6rhqjy.f[7]++;cov_yvt6rhqjy.s[36]++;\n      sendStatus(response, 500, error); /* istanbul ignore next */cov_yvt6rhqjy.s[37]++;\n      return;\n    });\n  } else {/* istanbul ignore next */cov_yvt6rhqjy.b[3][1]++;cov_yvt6rhqjy.s[38]++;\n    storage.fetchAll().\n    then(notes => {/* istanbul ignore next */cov_yvt6rhqjy.f[8]++;cov_yvt6rhqjy.s[39]++;\n      sendJSON(response, 200, notes); /* istanbul ignore next */cov_yvt6rhqjy.s[40]++;\n      return;\n    }).\n    catch(error => {/* istanbul ignore next */cov_yvt6rhqjy.f[9]++;cov_yvt6rhqjy.s[41]++;\n      sendStatus(response, 500, error); /* istanbul ignore next */cov_yvt6rhqjy.s[42]++;\n      return;\n    });\n  }\n}","timestamp":"2017-12-08T06:07:53.979Z"}
{"level":"info","message":"adding a DELETE url and callbacck","timestamp":"2017-12-08T06:07:53.979Z"}
{"level":"info","message":"/api/notes","timestamp":"2017-12-08T06:07:53.979Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[10]++;cov_yvt6rhqjy.s[44]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_yvt6rhqjy.b[4][0]++;cov_yvt6rhqjy.s[45]++;\n    storage.deleteItem(request.url.query.id).\n    then(() => {/* istanbul ignore next */cov_yvt6rhqjy.f[11]++;cov_yvt6rhqjy.s[46]++;\n      sendStatus(response, 204, 'successfully deleted'); /* istanbul ignore next */cov_yvt6rhqjy.s[47]++;\n      return;\n    }).\n    catch(error => {/* istanbul ignore next */cov_yvt6rhqjy.f[12]++;cov_yvt6rhqjy.s[48]++;\n      sendStatus(response, 500, error); /* istanbul ignore next */cov_yvt6rhqjy.s[49]++;\n      return;\n    });\n  } else {/* istanbul ignore next */cov_yvt6rhqjy.b[4][1]++;cov_yvt6rhqjy.s[50]++;\n    sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[51]++;\n    return;\n  }\n}","timestamp":"2017-12-08T06:07:53.979Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-08T06:07:54.027Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T06:07:54.042Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T06:07:54.044Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[2]++;cov_yvt6rhqjy.s[16]++;\n  //TODO: run console.trace(); track what happens\n  if (!request.body) {/* istanbul ignore next */cov_yvt6rhqjy.b[0][0]++;cov_yvt6rhqjy.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[0][1]++;}\n  // checking if values are present- instead we should check if values match type\n  // if typeof\n  cov_yvt6rhqjy.s[19]++;if (typeof request.body.title !== 'string') {/* istanbul ignore next */cov_yvt6rhqjy.b[1][0]++;cov_yvt6rhqjy.s[20]++;\n    sendStatus(response, 400, 'title must be a string'); /* istanbul ignore next */cov_yvt6rhqjy.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[1][1]++;}cov_yvt6rhqjy.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_yvt6rhqjy.b[2][0]++;cov_yvt6rhqjy.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[2][1]++;}\n\n  let note = /* istanbul ignore next */(cov_yvt6rhqjy.s[25]++, new Note(request.body.title, request.body.content)); /* istanbul ignore next */cov_yvt6rhqjy.s[26]++;\n  storage.addItem(note).\n  then(() => {/* istanbul ignore next */cov_yvt6rhqjy.f[3]++;cov_yvt6rhqjy.s[27]++;\n    sendJSON(response, 200, note); /* istanbul ignore next */cov_yvt6rhqjy.s[28]++;\n    return;\n  }).\n  catch(error => {/* istanbul ignore next */cov_yvt6rhqjy.f[4]++;cov_yvt6rhqjy.s[29]++;\n    sendStatus(response, 500, error); /* istanbul ignore next */cov_yvt6rhqjy.s[30]++;\n    return;\n  });\n}","timestamp":"2017-12-08T06:07:54.044Z"}
{"level":"info","message":"responding with a status code of 200 and the following data","timestamp":"2017-12-08T06:07:54.048Z"}
{"id":"20f80fc0-dbde-11e7-9e4c-7f19df5f8fee","timestamp":"2017-12-08T06:07:54.048Z","title":"food that sounds yummy","content":"eggs and steak","level":"info","message":""}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T06:07:54.060Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T06:07:54.060Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[5]++;cov_yvt6rhqjy.s[32]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_yvt6rhqjy.b[3][0]++;cov_yvt6rhqjy.s[33]++;\n    storage.fetchItem(request.url.query.id).\n    then(note => {/* istanbul ignore next */cov_yvt6rhqjy.f[6]++;cov_yvt6rhqjy.s[34]++;\n      sendJSON(response, 200, note); /* istanbul ignore next */cov_yvt6rhqjy.s[35]++;\n      return;\n    }).\n    catch(error => {/* istanbul ignore next */cov_yvt6rhqjy.f[7]++;cov_yvt6rhqjy.s[36]++;\n      sendStatus(response, 500, error); /* istanbul ignore next */cov_yvt6rhqjy.s[37]++;\n      return;\n    });\n  } else {/* istanbul ignore next */cov_yvt6rhqjy.b[3][1]++;cov_yvt6rhqjy.s[38]++;\n    storage.fetchAll().\n    then(notes => {/* istanbul ignore next */cov_yvt6rhqjy.f[8]++;cov_yvt6rhqjy.s[39]++;\n      sendJSON(response, 200, notes); /* istanbul ignore next */cov_yvt6rhqjy.s[40]++;\n      return;\n    }).\n    catch(error => {/* istanbul ignore next */cov_yvt6rhqjy.f[9]++;cov_yvt6rhqjy.s[41]++;\n      sendStatus(response, 500, error); /* istanbul ignore next */cov_yvt6rhqjy.s[42]++;\n      return;\n    });\n  }\n}","timestamp":"2017-12-08T06:07:54.060Z"}
{"level":"info","message":"responding with a status code of 200 and the following data","timestamp":"2017-12-08T06:07:54.061Z"}
[{"id":"298b54c0-dbda-11e7-ae5d-6dd9671a7f44","timestamp":"2017-12-08T05:39:30.445Z","title":"food that sounds yummy","content":"eggs and steak"},{"id":"3b19a7a0-dbda-11e7-bd10-03c34b77f060","timestamp":"2017-12-08T05:39:59.898Z","title":"food that sounds yummy","content":"eggs and steak"},{"id":"4a98c990-dbda-11e7-902a-233bcd24deae","timestamp":"2017-12-08T05:40:25.898Z","title":"food that sounds yummy","content":"eggs and steak"},{"id":"58119430-dbda-11e7-a198-e3caf5ab958f","timestamp":"2017-12-08T05:40:48.499Z","title":"food that sounds yummy","content":"eggs and steak"},{"id":"6761b6e0-dbda-11e7-93e4-533474af1c5b","timestamp":"2017-12-08T05:41:14.190Z","title":"food that sounds yummy","content":"eggs and steak"},{"id":"6cb4a120-dbda-11e7-8ae5-2947f3ca84f7","timestamp":"2017-12-08T05:41:23.122Z","title":"food that sounds yummy","content":"eggs and steak"},{"id":"723c2ff0-dbda-11e7-be3b-03e71f98a3d9","timestamp":"2017-12-08T05:41:32.399Z","title":"food that sounds yummy","content":"eggs and steak"},{"id":"81233090-dbda-11e7-8580-e5c399b06ec6","timestamp":"2017-12-08T05:41:57.401Z","title":"food that sounds yummy","content":"eggs and steak"},{"id":"973a66f0-dbda-11e7-b86f-a924f17df39d","timestamp":"2017-12-08T05:42:34.464Z","title":"food that sounds yummy","content":"eggs and steak"},{"id":"c126abe0-dbda-11e7-8d97-d96ad9197099","timestamp":"2017-12-08T05:43:44.799Z","title":"food that sounds yummy","content":"eggs and steak"},{"id":"22948910-dbdb-11e7-8857-431a3d1bd7b1","timestamp":"2017-12-08T05:46:28.257Z","title":"food that sounds yummy","content":"eggs and steak"},{"id":"2fefb990-dbdb-11e7-8095-91fa293993d2","timestamp":"2017-12-08T05:46:50.665Z","title":"food that sounds yummy","content":"eggs and steak"},{"id":"5183c380-dbdb-11e7-afe9-8929c580a10f","timestamp":"2017-12-08T05:47:47.000Z","title":"food that sounds yummy","content":"eggs and steak"},{"id":"979a44c0-dbdb-11e7-bbaa-3fc9f76bedde","timestamp":"2017-12-08T05:49:44.588Z","title":"food that sounds yummy","content":"eggs and steak"},{"id":"20f80fc0-dbde-11e7-9e4c-7f19df5f8fee","timestamp":"2017-12-08T06:07:54.044Z","title":"food that sounds yummy","content":"eggs and steak"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T06:07:54.066Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T06:07:54.067Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[5]++;cov_yvt6rhqjy.s[32]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_yvt6rhqjy.b[3][0]++;cov_yvt6rhqjy.s[33]++;\n    storage.fetchItem(request.url.query.id).\n    then(note => {/* istanbul ignore next */cov_yvt6rhqjy.f[6]++;cov_yvt6rhqjy.s[34]++;\n      sendJSON(response, 200, note); /* istanbul ignore next */cov_yvt6rhqjy.s[35]++;\n      return;\n    }).\n    catch(error => {/* istanbul ignore next */cov_yvt6rhqjy.f[7]++;cov_yvt6rhqjy.s[36]++;\n      sendStatus(response, 500, error); /* istanbul ignore next */cov_yvt6rhqjy.s[37]++;\n      return;\n    });\n  } else {/* istanbul ignore next */cov_yvt6rhqjy.b[3][1]++;cov_yvt6rhqjy.s[38]++;\n    storage.fetchAll().\n    then(notes => {/* istanbul ignore next */cov_yvt6rhqjy.f[8]++;cov_yvt6rhqjy.s[39]++;\n      sendJSON(response, 200, notes); /* istanbul ignore next */cov_yvt6rhqjy.s[40]++;\n      return;\n    }).\n    catch(error => {/* istanbul ignore next */cov_yvt6rhqjy.f[9]++;cov_yvt6rhqjy.s[41]++;\n      sendStatus(response, 500, error); /* istanbul ignore next */cov_yvt6rhqjy.s[42]++;\n      return;\n    });\n  }\n}","timestamp":"2017-12-08T06:07:54.067Z"}
{"level":"info","message":"responding with a status code of 200 and the following data","timestamp":"2017-12-08T06:07:54.068Z"}
{"id":"298b54c0-dbda-11e7-ae5d-6dd9671a7f44","timestamp":"2017-12-08T06:07:54.068Z","title":"food that sounds yummy","content":"eggs and steak","level":"info","message":""}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T06:07:54.071Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T06:07:54.071Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[10]++;cov_yvt6rhqjy.s[44]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_yvt6rhqjy.b[4][0]++;cov_yvt6rhqjy.s[45]++;\n    storage.deleteItem(request.url.query.id).\n    then(() => {/* istanbul ignore next */cov_yvt6rhqjy.f[11]++;cov_yvt6rhqjy.s[46]++;\n      sendStatus(response, 204, 'successfully deleted'); /* istanbul ignore next */cov_yvt6rhqjy.s[47]++;\n      return;\n    }).\n    catch(error => {/* istanbul ignore next */cov_yvt6rhqjy.f[12]++;cov_yvt6rhqjy.s[48]++;\n      sendStatus(response, 500, error); /* istanbul ignore next */cov_yvt6rhqjy.s[49]++;\n      return;\n    });\n  } else {/* istanbul ignore next */cov_yvt6rhqjy.b[4][1]++;cov_yvt6rhqjy.s[50]++;\n    sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[51]++;\n    return;\n  }\n}","timestamp":"2017-12-08T06:07:54.071Z"}
{"level":"info","message":"responding with a status code of 204 due to successfully deleted","timestamp":"2017-12-08T06:07:54.073Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T06:07:54.075Z"}
{"level":"info","message":"__REQUEST_ERROR","timestamp":"2017-12-08T06:07:54.076Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at Object.parse (native)\n    at IncomingMessage.request.on.error (/home/ncarignan/cf/401/lab-assignments/08-09-vanilla-rest-server/lab-nicholasc/lib/request-parser.js:28:31)\n    at emitNone (events.js:86:13)\n    at IncomingMessage.emit (events.js:185:7)\n    at endReadableNT (_stream_readable.js:974:12)\n    at _combinedTickCallback (internal/process/next_tick.js:80:11)\n    at process._tickCallback (internal/process/next_tick.js:104:9)","level":"info","timestamp":"2017-12-08T06:07:54.076Z"}
{"level":"info","message":"adding a POST url and callbacck","timestamp":"2017-12-08T06:20:39.107Z"}
{"level":"info","message":"/api/notes","timestamp":"2017-12-08T06:20:39.108Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[2]++;cov_yvt6rhqjy.s[16]++;\n  //TODO: run console.trace(); track what happens\n  if (!request.body) {/* istanbul ignore next */cov_yvt6rhqjy.b[0][0]++;cov_yvt6rhqjy.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[0][1]++;}\n  // checking if values are present- instead we should check if values match type\n  // if typeof\n  cov_yvt6rhqjy.s[19]++;if (typeof request.body.title !== 'string') {/* istanbul ignore next */cov_yvt6rhqjy.b[1][0]++;cov_yvt6rhqjy.s[20]++;\n    sendStatus(response, 400, 'title must be a string'); /* istanbul ignore next */cov_yvt6rhqjy.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[1][1]++;}cov_yvt6rhqjy.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_yvt6rhqjy.b[2][0]++;cov_yvt6rhqjy.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[2][1]++;}\n\n  let note = /* istanbul ignore next */(cov_yvt6rhqjy.s[25]++, new Note(request.body.title, request.body.content)); /* istanbul ignore next */cov_yvt6rhqjy.s[26]++;\n  storage.addItem(note).\n  then(() => {/* istanbul ignore next */cov_yvt6rhqjy.f[3]++;cov_yvt6rhqjy.s[27]++;\n    sendJSON(response, 200, note); /* istanbul ignore next */cov_yvt6rhqjy.s[28]++;\n    return;\n  }).\n  catch(error => {/* istanbul ignore next */cov_yvt6rhqjy.f[4]++;cov_yvt6rhqjy.s[29]++;\n    sendStatus(response, 500, error); /* istanbul ignore next */cov_yvt6rhqjy.s[30]++;\n    return;\n  });\n}","timestamp":"2017-12-08T06:20:39.108Z"}
{"level":"info","message":"adding a GET url and callbacck","timestamp":"2017-12-08T06:20:39.108Z"}
{"level":"info","message":"/api/notes","timestamp":"2017-12-08T06:20:39.108Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[5]++;cov_yvt6rhqjy.s[32]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_yvt6rhqjy.b[3][0]++;cov_yvt6rhqjy.s[33]++;\n    storage.fetchItem(request.url.query.id).\n    then(note => {/* istanbul ignore next */cov_yvt6rhqjy.f[6]++;cov_yvt6rhqjy.s[34]++;\n      sendJSON(response, 200, note); /* istanbul ignore next */cov_yvt6rhqjy.s[35]++;\n      return;\n    }).\n    catch(error => {/* istanbul ignore next */cov_yvt6rhqjy.f[7]++;cov_yvt6rhqjy.s[36]++;\n      sendStatus(response, 500, error); /* istanbul ignore next */cov_yvt6rhqjy.s[37]++;\n      return;\n    });\n  } else {/* istanbul ignore next */cov_yvt6rhqjy.b[3][1]++;cov_yvt6rhqjy.s[38]++;\n    storage.fetchAll().\n    then(notes => {/* istanbul ignore next */cov_yvt6rhqjy.f[8]++;cov_yvt6rhqjy.s[39]++;\n      sendJSON(response, 200, notes); /* istanbul ignore next */cov_yvt6rhqjy.s[40]++;\n      return;\n    }).\n    catch(error => {/* istanbul ignore next */cov_yvt6rhqjy.f[9]++;cov_yvt6rhqjy.s[41]++;\n      sendStatus(response, 500, error); /* istanbul ignore next */cov_yvt6rhqjy.s[42]++;\n      return;\n    });\n  }\n}","timestamp":"2017-12-08T06:20:39.108Z"}
{"level":"info","message":"adding a DELETE url and callbacck","timestamp":"2017-12-08T06:20:39.108Z"}
{"level":"info","message":"/api/notes","timestamp":"2017-12-08T06:20:39.108Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[10]++;cov_yvt6rhqjy.s[44]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_yvt6rhqjy.b[4][0]++;cov_yvt6rhqjy.s[45]++;\n    storage.deleteItem(request.url.query.id).\n    then(() => {/* istanbul ignore next */cov_yvt6rhqjy.f[11]++;cov_yvt6rhqjy.s[46]++;\n      sendStatus(response, 204, 'successfully deleted'); /* istanbul ignore next */cov_yvt6rhqjy.s[47]++;\n      return;\n    }).\n    catch(error => {/* istanbul ignore next */cov_yvt6rhqjy.f[12]++;cov_yvt6rhqjy.s[48]++;\n      sendStatus(response, 500, error); /* istanbul ignore next */cov_yvt6rhqjy.s[49]++;\n      return;\n    });\n  } else {/* istanbul ignore next */cov_yvt6rhqjy.b[4][1]++;cov_yvt6rhqjy.s[50]++;\n    sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[51]++;\n    return;\n  }\n}","timestamp":"2017-12-08T06:20:39.108Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-08T06:20:39.150Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T06:20:39.165Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T06:20:39.166Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[2]++;cov_yvt6rhqjy.s[16]++;\n  //TODO: run console.trace(); track what happens\n  if (!request.body) {/* istanbul ignore next */cov_yvt6rhqjy.b[0][0]++;cov_yvt6rhqjy.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[0][1]++;}\n  // checking if values are present- instead we should check if values match type\n  // if typeof\n  cov_yvt6rhqjy.s[19]++;if (typeof request.body.title !== 'string') {/* istanbul ignore next */cov_yvt6rhqjy.b[1][0]++;cov_yvt6rhqjy.s[20]++;\n    sendStatus(response, 400, 'title must be a string'); /* istanbul ignore next */cov_yvt6rhqjy.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[1][1]++;}cov_yvt6rhqjy.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_yvt6rhqjy.b[2][0]++;cov_yvt6rhqjy.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[2][1]++;}\n\n  let note = /* istanbul ignore next */(cov_yvt6rhqjy.s[25]++, new Note(request.body.title, request.body.content)); /* istanbul ignore next */cov_yvt6rhqjy.s[26]++;\n  storage.addItem(note).\n  then(() => {/* istanbul ignore next */cov_yvt6rhqjy.f[3]++;cov_yvt6rhqjy.s[27]++;\n    sendJSON(response, 200, note); /* istanbul ignore next */cov_yvt6rhqjy.s[28]++;\n    return;\n  }).\n  catch(error => {/* istanbul ignore next */cov_yvt6rhqjy.f[4]++;cov_yvt6rhqjy.s[29]++;\n    sendStatus(response, 500, error); /* istanbul ignore next */cov_yvt6rhqjy.s[30]++;\n    return;\n  });\n}","timestamp":"2017-12-08T06:20:39.166Z"}
{"level":"info","message":"responding with a status code of 200 and the following data","timestamp":"2017-12-08T06:20:39.169Z"}
{"id":"e90469e0-dbdf-11e7-a781-2b29fee42532","timestamp":"2017-12-08T06:20:39.170Z","title":"food that sounds yummy","content":"eggs and steak","level":"info","message":""}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T06:20:39.180Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T06:20:39.181Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[5]++;cov_yvt6rhqjy.s[32]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_yvt6rhqjy.b[3][0]++;cov_yvt6rhqjy.s[33]++;\n    storage.fetchItem(request.url.query.id).\n    then(note => {/* istanbul ignore next */cov_yvt6rhqjy.f[6]++;cov_yvt6rhqjy.s[34]++;\n      sendJSON(response, 200, note); /* istanbul ignore next */cov_yvt6rhqjy.s[35]++;\n      return;\n    }).\n    catch(error => {/* istanbul ignore next */cov_yvt6rhqjy.f[7]++;cov_yvt6rhqjy.s[36]++;\n      sendStatus(response, 500, error); /* istanbul ignore next */cov_yvt6rhqjy.s[37]++;\n      return;\n    });\n  } else {/* istanbul ignore next */cov_yvt6rhqjy.b[3][1]++;cov_yvt6rhqjy.s[38]++;\n    storage.fetchAll().\n    then(notes => {/* istanbul ignore next */cov_yvt6rhqjy.f[8]++;cov_yvt6rhqjy.s[39]++;\n      sendJSON(response, 200, notes); /* istanbul ignore next */cov_yvt6rhqjy.s[40]++;\n      return;\n    }).\n    catch(error => {/* istanbul ignore next */cov_yvt6rhqjy.f[9]++;cov_yvt6rhqjy.s[41]++;\n      sendStatus(response, 500, error); /* istanbul ignore next */cov_yvt6rhqjy.s[42]++;\n      return;\n    });\n  }\n}","timestamp":"2017-12-08T06:20:39.181Z"}
{"level":"info","message":"responding with a status code of 200 and the following data","timestamp":"2017-12-08T06:20:39.181Z"}
[{"id":"3b19a7a0-dbda-11e7-bd10-03c34b77f060","timestamp":"2017-12-08T05:39:59.898Z","title":"food that sounds yummy","content":"eggs and steak"},{"id":"4a98c990-dbda-11e7-902a-233bcd24deae","timestamp":"2017-12-08T05:40:25.898Z","title":"food that sounds yummy","content":"eggs and steak"},{"id":"58119430-dbda-11e7-a198-e3caf5ab958f","timestamp":"2017-12-08T05:40:48.499Z","title":"food that sounds yummy","content":"eggs and steak"},{"id":"6761b6e0-dbda-11e7-93e4-533474af1c5b","timestamp":"2017-12-08T05:41:14.190Z","title":"food that sounds yummy","content":"eggs and steak"},{"id":"6cb4a120-dbda-11e7-8ae5-2947f3ca84f7","timestamp":"2017-12-08T05:41:23.122Z","title":"food that sounds yummy","content":"eggs and steak"},{"id":"723c2ff0-dbda-11e7-be3b-03e71f98a3d9","timestamp":"2017-12-08T05:41:32.399Z","title":"food that sounds yummy","content":"eggs and steak"},{"id":"81233090-dbda-11e7-8580-e5c399b06ec6","timestamp":"2017-12-08T05:41:57.401Z","title":"food that sounds yummy","content":"eggs and steak"},{"id":"973a66f0-dbda-11e7-b86f-a924f17df39d","timestamp":"2017-12-08T05:42:34.464Z","title":"food that sounds yummy","content":"eggs and steak"},{"id":"c126abe0-dbda-11e7-8d97-d96ad9197099","timestamp":"2017-12-08T05:43:44.799Z","title":"food that sounds yummy","content":"eggs and steak"},{"id":"22948910-dbdb-11e7-8857-431a3d1bd7b1","timestamp":"2017-12-08T05:46:28.257Z","title":"food that sounds yummy","content":"eggs and steak"},{"id":"2fefb990-dbdb-11e7-8095-91fa293993d2","timestamp":"2017-12-08T05:46:50.665Z","title":"food that sounds yummy","content":"eggs and steak"},{"id":"5183c380-dbdb-11e7-afe9-8929c580a10f","timestamp":"2017-12-08T05:47:47.000Z","title":"food that sounds yummy","content":"eggs and steak"},{"id":"979a44c0-dbdb-11e7-bbaa-3fc9f76bedde","timestamp":"2017-12-08T05:49:44.588Z","title":"food that sounds yummy","content":"eggs and steak"},{"id":"20f80fc0-dbde-11e7-9e4c-7f19df5f8fee","timestamp":"2017-12-08T06:07:54.044Z","title":"food that sounds yummy","content":"eggs and steak"},{"id":"e90469e0-dbdf-11e7-a781-2b29fee42532","timestamp":"2017-12-08T06:20:39.166Z","title":"food that sounds yummy","content":"eggs and steak"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T06:20:39.186Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T06:20:39.187Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[5]++;cov_yvt6rhqjy.s[32]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_yvt6rhqjy.b[3][0]++;cov_yvt6rhqjy.s[33]++;\n    storage.fetchItem(request.url.query.id).\n    then(note => {/* istanbul ignore next */cov_yvt6rhqjy.f[6]++;cov_yvt6rhqjy.s[34]++;\n      sendJSON(response, 200, note); /* istanbul ignore next */cov_yvt6rhqjy.s[35]++;\n      return;\n    }).\n    catch(error => {/* istanbul ignore next */cov_yvt6rhqjy.f[7]++;cov_yvt6rhqjy.s[36]++;\n      sendStatus(response, 500, error); /* istanbul ignore next */cov_yvt6rhqjy.s[37]++;\n      return;\n    });\n  } else {/* istanbul ignore next */cov_yvt6rhqjy.b[3][1]++;cov_yvt6rhqjy.s[38]++;\n    storage.fetchAll().\n    then(notes => {/* istanbul ignore next */cov_yvt6rhqjy.f[8]++;cov_yvt6rhqjy.s[39]++;\n      sendJSON(response, 200, notes); /* istanbul ignore next */cov_yvt6rhqjy.s[40]++;\n      return;\n    }).\n    catch(error => {/* istanbul ignore next */cov_yvt6rhqjy.f[9]++;cov_yvt6rhqjy.s[41]++;\n      sendStatus(response, 500, error); /* istanbul ignore next */cov_yvt6rhqjy.s[42]++;\n      return;\n    });\n  }\n}","timestamp":"2017-12-08T06:20:39.187Z"}
{"level":"info","message":"responding with a status code of 200 and the following data","timestamp":"2017-12-08T06:20:39.188Z"}
{"id":"3b19a7a0-dbda-11e7-bd10-03c34b77f060","timestamp":"2017-12-08T06:20:39.188Z","title":"food that sounds yummy","content":"eggs and steak","level":"info","message":""}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T06:20:39.190Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T06:20:39.190Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[10]++;cov_yvt6rhqjy.s[44]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_yvt6rhqjy.b[4][0]++;cov_yvt6rhqjy.s[45]++;\n    storage.deleteItem(request.url.query.id).\n    then(() => {/* istanbul ignore next */cov_yvt6rhqjy.f[11]++;cov_yvt6rhqjy.s[46]++;\n      sendStatus(response, 204, 'successfully deleted'); /* istanbul ignore next */cov_yvt6rhqjy.s[47]++;\n      return;\n    }).\n    catch(error => {/* istanbul ignore next */cov_yvt6rhqjy.f[12]++;cov_yvt6rhqjy.s[48]++;\n      sendStatus(response, 500, error); /* istanbul ignore next */cov_yvt6rhqjy.s[49]++;\n      return;\n    });\n  } else {/* istanbul ignore next */cov_yvt6rhqjy.b[4][1]++;cov_yvt6rhqjy.s[50]++;\n    sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[51]++;\n    return;\n  }\n}","timestamp":"2017-12-08T06:20:39.191Z"}
{"level":"info","message":"responding with a status code of 204 due to successfully deleted","timestamp":"2017-12-08T06:20:39.191Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T06:20:39.193Z"}
{"level":"info","message":"__REQUEST_ERROR","timestamp":"2017-12-08T06:20:39.194Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at Object.parse (native)\n    at IncomingMessage.request.on.error (/home/ncarignan/cf/401/lab-assignments/08-09-vanilla-rest-server/lab-nicholasc/lib/request-parser.js:28:31)\n    at emitNone (events.js:86:13)\n    at IncomingMessage.emit (events.js:185:7)\n    at endReadableNT (_stream_readable.js:974:12)\n    at _combinedTickCallback (internal/process/next_tick.js:80:11)\n    at process._tickCallback (internal/process/next_tick.js:104:9)","level":"info","timestamp":"2017-12-08T06:20:39.194Z"}
{"level":"info","message":"adding a POST url and callbacck","timestamp":"2017-12-08T06:22:59.344Z"}
{"level":"info","message":"/api/notes","timestamp":"2017-12-08T06:22:59.345Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[2]++;cov_yvt6rhqjy.s[16]++;\n  //TODO: run console.trace(); track what happens\n  if (!request.body) {/* istanbul ignore next */cov_yvt6rhqjy.b[0][0]++;cov_yvt6rhqjy.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[0][1]++;}\n  // checking if values are present- instead we should check if values match type\n  // if typeof\n  cov_yvt6rhqjy.s[19]++;if (typeof request.body.title !== 'string') {/* istanbul ignore next */cov_yvt6rhqjy.b[1][0]++;cov_yvt6rhqjy.s[20]++;\n    sendStatus(response, 400, 'title must be a string'); /* istanbul ignore next */cov_yvt6rhqjy.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[1][1]++;}cov_yvt6rhqjy.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_yvt6rhqjy.b[2][0]++;cov_yvt6rhqjy.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[2][1]++;}\n\n  let note = /* istanbul ignore next */(cov_yvt6rhqjy.s[25]++, new Note(request.body.title, request.body.content)); /* istanbul ignore next */cov_yvt6rhqjy.s[26]++;\n  storage.addItem(note).\n  then(() => {/* istanbul ignore next */cov_yvt6rhqjy.f[3]++;cov_yvt6rhqjy.s[27]++;\n    sendJSON(response, 200, note); /* istanbul ignore next */cov_yvt6rhqjy.s[28]++;\n    return;\n  }).\n  catch(error => {/* istanbul ignore next */cov_yvt6rhqjy.f[4]++;cov_yvt6rhqjy.s[29]++;\n    sendStatus(response, 500, error); /* istanbul ignore next */cov_yvt6rhqjy.s[30]++;\n    return;\n  });\n}","timestamp":"2017-12-08T06:22:59.345Z"}
{"level":"info","message":"adding a GET url and callbacck","timestamp":"2017-12-08T06:22:59.345Z"}
{"level":"info","message":"/api/notes","timestamp":"2017-12-08T06:22:59.345Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[5]++;cov_yvt6rhqjy.s[32]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_yvt6rhqjy.b[3][0]++;cov_yvt6rhqjy.s[33]++;\n    storage.fetchItem(request.url.query.id).\n    then(note => {/* istanbul ignore next */cov_yvt6rhqjy.f[6]++;cov_yvt6rhqjy.s[34]++;\n      sendJSON(response, 200, note); /* istanbul ignore next */cov_yvt6rhqjy.s[35]++;\n      return;\n    }).\n    catch(error => {/* istanbul ignore next */cov_yvt6rhqjy.f[7]++;cov_yvt6rhqjy.s[36]++;\n      sendStatus(response, 500, error); /* istanbul ignore next */cov_yvt6rhqjy.s[37]++;\n      return;\n    });\n  } else {/* istanbul ignore next */cov_yvt6rhqjy.b[3][1]++;cov_yvt6rhqjy.s[38]++;\n    storage.fetchAll().\n    then(notes => {/* istanbul ignore next */cov_yvt6rhqjy.f[8]++;cov_yvt6rhqjy.s[39]++;\n      sendJSON(response, 200, notes); /* istanbul ignore next */cov_yvt6rhqjy.s[40]++;\n      return;\n    }).\n    catch(error => {/* istanbul ignore next */cov_yvt6rhqjy.f[9]++;cov_yvt6rhqjy.s[41]++;\n      sendStatus(response, 500, error); /* istanbul ignore next */cov_yvt6rhqjy.s[42]++;\n      return;\n    });\n  }\n}","timestamp":"2017-12-08T06:22:59.345Z"}
{"level":"info","message":"adding a DELETE url and callbacck","timestamp":"2017-12-08T06:22:59.345Z"}
{"level":"info","message":"/api/notes","timestamp":"2017-12-08T06:22:59.345Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[10]++;cov_yvt6rhqjy.s[44]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_yvt6rhqjy.b[4][0]++;cov_yvt6rhqjy.s[45]++;\n    storage.deleteItem(request.url.query.id).\n    then(() => {/* istanbul ignore next */cov_yvt6rhqjy.f[11]++;cov_yvt6rhqjy.s[46]++;\n      sendStatus(response, 204, 'successfully deleted'); /* istanbul ignore next */cov_yvt6rhqjy.s[47]++;\n      return;\n    }).\n    catch(error => {/* istanbul ignore next */cov_yvt6rhqjy.f[12]++;cov_yvt6rhqjy.s[48]++;\n      sendStatus(response, 500, error); /* istanbul ignore next */cov_yvt6rhqjy.s[49]++;\n      return;\n    });\n  } else {/* istanbul ignore next */cov_yvt6rhqjy.b[4][1]++;cov_yvt6rhqjy.s[50]++;\n    sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[51]++;\n    return;\n  }\n}","timestamp":"2017-12-08T06:22:59.345Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-08T06:22:59.389Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T06:22:59.405Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T06:22:59.406Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[2]++;cov_yvt6rhqjy.s[16]++;\n  //TODO: run console.trace(); track what happens\n  if (!request.body) {/* istanbul ignore next */cov_yvt6rhqjy.b[0][0]++;cov_yvt6rhqjy.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[0][1]++;}\n  // checking if values are present- instead we should check if values match type\n  // if typeof\n  cov_yvt6rhqjy.s[19]++;if (typeof request.body.title !== 'string') {/* istanbul ignore next */cov_yvt6rhqjy.b[1][0]++;cov_yvt6rhqjy.s[20]++;\n    sendStatus(response, 400, 'title must be a string'); /* istanbul ignore next */cov_yvt6rhqjy.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[1][1]++;}cov_yvt6rhqjy.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_yvt6rhqjy.b[2][0]++;cov_yvt6rhqjy.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[2][1]++;}\n\n  let note = /* istanbul ignore next */(cov_yvt6rhqjy.s[25]++, new Note(request.body.title, request.body.content)); /* istanbul ignore next */cov_yvt6rhqjy.s[26]++;\n  storage.addItem(note).\n  then(() => {/* istanbul ignore next */cov_yvt6rhqjy.f[3]++;cov_yvt6rhqjy.s[27]++;\n    sendJSON(response, 200, note); /* istanbul ignore next */cov_yvt6rhqjy.s[28]++;\n    return;\n  }).\n  catch(error => {/* istanbul ignore next */cov_yvt6rhqjy.f[4]++;cov_yvt6rhqjy.s[29]++;\n    sendStatus(response, 500, error); /* istanbul ignore next */cov_yvt6rhqjy.s[30]++;\n    return;\n  });\n}","timestamp":"2017-12-08T06:22:59.406Z"}
{"level":"info","message":"responding with a status code of 200 and the following data","timestamp":"2017-12-08T06:22:59.409Z"}
{"id":"3c9b56e0-dbe0-11e7-8f66-5de5c390db3a","timestamp":"2017-12-08T06:22:59.410Z","title":"food that sounds yummy","content":"eggs and steak","level":"info","message":""}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T06:22:59.420Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T06:22:59.420Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[5]++;cov_yvt6rhqjy.s[32]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_yvt6rhqjy.b[3][0]++;cov_yvt6rhqjy.s[33]++;\n    storage.fetchItem(request.url.query.id).\n    then(note => {/* istanbul ignore next */cov_yvt6rhqjy.f[6]++;cov_yvt6rhqjy.s[34]++;\n      sendJSON(response, 200, note); /* istanbul ignore next */cov_yvt6rhqjy.s[35]++;\n      return;\n    }).\n    catch(error => {/* istanbul ignore next */cov_yvt6rhqjy.f[7]++;cov_yvt6rhqjy.s[36]++;\n      sendStatus(response, 500, error); /* istanbul ignore next */cov_yvt6rhqjy.s[37]++;\n      return;\n    });\n  } else {/* istanbul ignore next */cov_yvt6rhqjy.b[3][1]++;cov_yvt6rhqjy.s[38]++;\n    storage.fetchAll().\n    then(notes => {/* istanbul ignore next */cov_yvt6rhqjy.f[8]++;cov_yvt6rhqjy.s[39]++;\n      sendJSON(response, 200, notes); /* istanbul ignore next */cov_yvt6rhqjy.s[40]++;\n      return;\n    }).\n    catch(error => {/* istanbul ignore next */cov_yvt6rhqjy.f[9]++;cov_yvt6rhqjy.s[41]++;\n      sendStatus(response, 500, error); /* istanbul ignore next */cov_yvt6rhqjy.s[42]++;\n      return;\n    });\n  }\n}","timestamp":"2017-12-08T06:22:59.420Z"}
{"level":"info","message":"responding with a status code of 200 and the following data","timestamp":"2017-12-08T06:22:59.421Z"}
[{"id":"4a98c990-dbda-11e7-902a-233bcd24deae","timestamp":"2017-12-08T05:40:25.898Z","title":"food that sounds yummy","content":"eggs and steak"},{"id":"58119430-dbda-11e7-a198-e3caf5ab958f","timestamp":"2017-12-08T05:40:48.499Z","title":"food that sounds yummy","content":"eggs and steak"},{"id":"6761b6e0-dbda-11e7-93e4-533474af1c5b","timestamp":"2017-12-08T05:41:14.190Z","title":"food that sounds yummy","content":"eggs and steak"},{"id":"6cb4a120-dbda-11e7-8ae5-2947f3ca84f7","timestamp":"2017-12-08T05:41:23.122Z","title":"food that sounds yummy","content":"eggs and steak"},{"id":"723c2ff0-dbda-11e7-be3b-03e71f98a3d9","timestamp":"2017-12-08T05:41:32.399Z","title":"food that sounds yummy","content":"eggs and steak"},{"id":"81233090-dbda-11e7-8580-e5c399b06ec6","timestamp":"2017-12-08T05:41:57.401Z","title":"food that sounds yummy","content":"eggs and steak"},{"id":"973a66f0-dbda-11e7-b86f-a924f17df39d","timestamp":"2017-12-08T05:42:34.464Z","title":"food that sounds yummy","content":"eggs and steak"},{"id":"c126abe0-dbda-11e7-8d97-d96ad9197099","timestamp":"2017-12-08T05:43:44.799Z","title":"food that sounds yummy","content":"eggs and steak"},{"id":"22948910-dbdb-11e7-8857-431a3d1bd7b1","timestamp":"2017-12-08T05:46:28.257Z","title":"food that sounds yummy","content":"eggs and steak"},{"id":"2fefb990-dbdb-11e7-8095-91fa293993d2","timestamp":"2017-12-08T05:46:50.665Z","title":"food that sounds yummy","content":"eggs and steak"},{"id":"5183c380-dbdb-11e7-afe9-8929c580a10f","timestamp":"2017-12-08T05:47:47.000Z","title":"food that sounds yummy","content":"eggs and steak"},{"id":"979a44c0-dbdb-11e7-bbaa-3fc9f76bedde","timestamp":"2017-12-08T05:49:44.588Z","title":"food that sounds yummy","content":"eggs and steak"},{"id":"20f80fc0-dbde-11e7-9e4c-7f19df5f8fee","timestamp":"2017-12-08T06:07:54.044Z","title":"food that sounds yummy","content":"eggs and steak"},{"id":"e90469e0-dbdf-11e7-a781-2b29fee42532","timestamp":"2017-12-08T06:20:39.166Z","title":"food that sounds yummy","content":"eggs and steak"},{"id":"3c9b56e0-dbe0-11e7-8f66-5de5c390db3a","timestamp":"2017-12-08T06:22:59.407Z","title":"food that sounds yummy","content":"eggs and steak"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T06:22:59.425Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T06:22:59.426Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[5]++;cov_yvt6rhqjy.s[32]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_yvt6rhqjy.b[3][0]++;cov_yvt6rhqjy.s[33]++;\n    storage.fetchItem(request.url.query.id).\n    then(note => {/* istanbul ignore next */cov_yvt6rhqjy.f[6]++;cov_yvt6rhqjy.s[34]++;\n      sendJSON(response, 200, note); /* istanbul ignore next */cov_yvt6rhqjy.s[35]++;\n      return;\n    }).\n    catch(error => {/* istanbul ignore next */cov_yvt6rhqjy.f[7]++;cov_yvt6rhqjy.s[36]++;\n      sendStatus(response, 500, error); /* istanbul ignore next */cov_yvt6rhqjy.s[37]++;\n      return;\n    });\n  } else {/* istanbul ignore next */cov_yvt6rhqjy.b[3][1]++;cov_yvt6rhqjy.s[38]++;\n    storage.fetchAll().\n    then(notes => {/* istanbul ignore next */cov_yvt6rhqjy.f[8]++;cov_yvt6rhqjy.s[39]++;\n      sendJSON(response, 200, notes); /* istanbul ignore next */cov_yvt6rhqjy.s[40]++;\n      return;\n    }).\n    catch(error => {/* istanbul ignore next */cov_yvt6rhqjy.f[9]++;cov_yvt6rhqjy.s[41]++;\n      sendStatus(response, 500, error); /* istanbul ignore next */cov_yvt6rhqjy.s[42]++;\n      return;\n    });\n  }\n}","timestamp":"2017-12-08T06:22:59.426Z"}
{"level":"info","message":"responding with a status code of 200 and the following data","timestamp":"2017-12-08T06:22:59.426Z"}
{"id":"4a98c990-dbda-11e7-902a-233bcd24deae","timestamp":"2017-12-08T06:22:59.427Z","title":"food that sounds yummy","content":"eggs and steak","level":"info","message":""}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T06:22:59.429Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T06:22:59.429Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[10]++;cov_yvt6rhqjy.s[44]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_yvt6rhqjy.b[4][0]++;cov_yvt6rhqjy.s[45]++;\n    storage.deleteItem(request.url.query.id).\n    then(() => {/* istanbul ignore next */cov_yvt6rhqjy.f[11]++;cov_yvt6rhqjy.s[46]++;\n      sendStatus(response, 204, 'successfully deleted'); /* istanbul ignore next */cov_yvt6rhqjy.s[47]++;\n      return;\n    }).\n    catch(error => {/* istanbul ignore next */cov_yvt6rhqjy.f[12]++;cov_yvt6rhqjy.s[48]++;\n      sendStatus(response, 500, error); /* istanbul ignore next */cov_yvt6rhqjy.s[49]++;\n      return;\n    });\n  } else {/* istanbul ignore next */cov_yvt6rhqjy.b[4][1]++;cov_yvt6rhqjy.s[50]++;\n    sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[51]++;\n    return;\n  }\n}","timestamp":"2017-12-08T06:22:59.429Z"}
{"level":"info","message":"responding with a status code of 204 due to successfully deleted","timestamp":"2017-12-08T06:22:59.430Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T06:22:59.432Z"}
{"level":"info","message":"__REQUEST_ERROR","timestamp":"2017-12-08T06:22:59.433Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at Object.parse (native)\n    at IncomingMessage.request.on.error (/home/ncarignan/cf/401/lab-assignments/08-09-vanilla-rest-server/lab-nicholasc/lib/request-parser.js:28:31)\n    at emitNone (events.js:86:13)\n    at IncomingMessage.emit (events.js:185:7)\n    at endReadableNT (_stream_readable.js:974:12)\n    at _combinedTickCallback (internal/process/next_tick.js:80:11)\n    at process._tickCallback (internal/process/next_tick.js:104:9)","level":"info","timestamp":"2017-12-08T06:22:59.433Z"}
{"level":"info","message":"adding a POST url and callbacck","timestamp":"2017-12-08T06:23:11.166Z"}
{"level":"info","message":"/api/notes","timestamp":"2017-12-08T06:23:11.167Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[2]++;cov_yvt6rhqjy.s[16]++;\n  //TODO: run console.trace(); track what happens\n  if (!request.body) {/* istanbul ignore next */cov_yvt6rhqjy.b[0][0]++;cov_yvt6rhqjy.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[0][1]++;}\n  // checking if values are present- instead we should check if values match type\n  // if typeof\n  cov_yvt6rhqjy.s[19]++;if (typeof request.body.title !== 'string') {/* istanbul ignore next */cov_yvt6rhqjy.b[1][0]++;cov_yvt6rhqjy.s[20]++;\n    sendStatus(response, 400, 'title must be a string'); /* istanbul ignore next */cov_yvt6rhqjy.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[1][1]++;}cov_yvt6rhqjy.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_yvt6rhqjy.b[2][0]++;cov_yvt6rhqjy.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[2][1]++;}\n\n  let note = /* istanbul ignore next */(cov_yvt6rhqjy.s[25]++, new Note(request.body.title, request.body.content)); /* istanbul ignore next */cov_yvt6rhqjy.s[26]++;\n  storage.addItem(note).\n  then(() => {/* istanbul ignore next */cov_yvt6rhqjy.f[3]++;cov_yvt6rhqjy.s[27]++;\n    sendJSON(response, 200, note); /* istanbul ignore next */cov_yvt6rhqjy.s[28]++;\n    return;\n  }).\n  catch(error => {/* istanbul ignore next */cov_yvt6rhqjy.f[4]++;cov_yvt6rhqjy.s[29]++;\n    sendStatus(response, 500, error); /* istanbul ignore next */cov_yvt6rhqjy.s[30]++;\n    return;\n  });\n}","timestamp":"2017-12-08T06:23:11.167Z"}
{"level":"info","message":"adding a GET url and callbacck","timestamp":"2017-12-08T06:23:11.167Z"}
{"level":"info","message":"/api/notes","timestamp":"2017-12-08T06:23:11.167Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[5]++;cov_yvt6rhqjy.s[32]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_yvt6rhqjy.b[3][0]++;cov_yvt6rhqjy.s[33]++;\n    storage.fetchItem(request.url.query.id).\n    then(note => {/* istanbul ignore next */cov_yvt6rhqjy.f[6]++;cov_yvt6rhqjy.s[34]++;\n      sendJSON(response, 200, note); /* istanbul ignore next */cov_yvt6rhqjy.s[35]++;\n      return;\n    }).\n    catch(error => {/* istanbul ignore next */cov_yvt6rhqjy.f[7]++;cov_yvt6rhqjy.s[36]++;\n      sendStatus(response, 500, error); /* istanbul ignore next */cov_yvt6rhqjy.s[37]++;\n      return;\n    });\n  } else {/* istanbul ignore next */cov_yvt6rhqjy.b[3][1]++;cov_yvt6rhqjy.s[38]++;\n    storage.fetchAll().\n    then(notes => {/* istanbul ignore next */cov_yvt6rhqjy.f[8]++;cov_yvt6rhqjy.s[39]++;\n      sendJSON(response, 200, notes); /* istanbul ignore next */cov_yvt6rhqjy.s[40]++;\n      return;\n    }).\n    catch(error => {/* istanbul ignore next */cov_yvt6rhqjy.f[9]++;cov_yvt6rhqjy.s[41]++;\n      sendStatus(response, 500, error); /* istanbul ignore next */cov_yvt6rhqjy.s[42]++;\n      return;\n    });\n  }\n}","timestamp":"2017-12-08T06:23:11.167Z"}
{"level":"info","message":"adding a DELETE url and callbacck","timestamp":"2017-12-08T06:23:11.168Z"}
{"level":"info","message":"/api/notes","timestamp":"2017-12-08T06:23:11.168Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[10]++;cov_yvt6rhqjy.s[44]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_yvt6rhqjy.b[4][0]++;cov_yvt6rhqjy.s[45]++;\n    storage.deleteItem(request.url.query.id).\n    then(() => {/* istanbul ignore next */cov_yvt6rhqjy.f[11]++;cov_yvt6rhqjy.s[46]++;\n      sendStatus(response, 204, 'successfully deleted'); /* istanbul ignore next */cov_yvt6rhqjy.s[47]++;\n      return;\n    }).\n    catch(error => {/* istanbul ignore next */cov_yvt6rhqjy.f[12]++;cov_yvt6rhqjy.s[48]++;\n      sendStatus(response, 500, error); /* istanbul ignore next */cov_yvt6rhqjy.s[49]++;\n      return;\n    });\n  } else {/* istanbul ignore next */cov_yvt6rhqjy.b[4][1]++;cov_yvt6rhqjy.s[50]++;\n    sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[51]++;\n    return;\n  }\n}","timestamp":"2017-12-08T06:23:11.168Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-08T06:23:11.211Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T06:23:11.226Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T06:23:11.227Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[2]++;cov_yvt6rhqjy.s[16]++;\n  //TODO: run console.trace(); track what happens\n  if (!request.body) {/* istanbul ignore next */cov_yvt6rhqjy.b[0][0]++;cov_yvt6rhqjy.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[0][1]++;}\n  // checking if values are present- instead we should check if values match type\n  // if typeof\n  cov_yvt6rhqjy.s[19]++;if (typeof request.body.title !== 'string') {/* istanbul ignore next */cov_yvt6rhqjy.b[1][0]++;cov_yvt6rhqjy.s[20]++;\n    sendStatus(response, 400, 'title must be a string'); /* istanbul ignore next */cov_yvt6rhqjy.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[1][1]++;}cov_yvt6rhqjy.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_yvt6rhqjy.b[2][0]++;cov_yvt6rhqjy.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[2][1]++;}\n\n  let note = /* istanbul ignore next */(cov_yvt6rhqjy.s[25]++, new Note(request.body.title, request.body.content)); /* istanbul ignore next */cov_yvt6rhqjy.s[26]++;\n  storage.addItem(note).\n  then(() => {/* istanbul ignore next */cov_yvt6rhqjy.f[3]++;cov_yvt6rhqjy.s[27]++;\n    sendJSON(response, 200, note); /* istanbul ignore next */cov_yvt6rhqjy.s[28]++;\n    return;\n  }).\n  catch(error => {/* istanbul ignore next */cov_yvt6rhqjy.f[4]++;cov_yvt6rhqjy.s[29]++;\n    sendStatus(response, 500, error); /* istanbul ignore next */cov_yvt6rhqjy.s[30]++;\n    return;\n  });\n}","timestamp":"2017-12-08T06:23:11.227Z"}
{"level":"info","message":"responding with a status code of 200 and the following data","timestamp":"2017-12-08T06:23:11.231Z"}
{"id":"43a714b0-dbe0-11e7-8808-b3e3eebff5d4","timestamp":"2017-12-08T06:23:11.231Z","title":"food that sounds yummy","content":"eggs and steak","level":"info","message":""}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T06:23:11.243Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T06:23:11.243Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[5]++;cov_yvt6rhqjy.s[32]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_yvt6rhqjy.b[3][0]++;cov_yvt6rhqjy.s[33]++;\n    storage.fetchItem(request.url.query.id).\n    then(note => {/* istanbul ignore next */cov_yvt6rhqjy.f[6]++;cov_yvt6rhqjy.s[34]++;\n      sendJSON(response, 200, note); /* istanbul ignore next */cov_yvt6rhqjy.s[35]++;\n      return;\n    }).\n    catch(error => {/* istanbul ignore next */cov_yvt6rhqjy.f[7]++;cov_yvt6rhqjy.s[36]++;\n      sendStatus(response, 500, error); /* istanbul ignore next */cov_yvt6rhqjy.s[37]++;\n      return;\n    });\n  } else {/* istanbul ignore next */cov_yvt6rhqjy.b[3][1]++;cov_yvt6rhqjy.s[38]++;\n    storage.fetchAll().\n    then(notes => {/* istanbul ignore next */cov_yvt6rhqjy.f[8]++;cov_yvt6rhqjy.s[39]++;\n      sendJSON(response, 200, notes); /* istanbul ignore next */cov_yvt6rhqjy.s[40]++;\n      return;\n    }).\n    catch(error => {/* istanbul ignore next */cov_yvt6rhqjy.f[9]++;cov_yvt6rhqjy.s[41]++;\n      sendStatus(response, 500, error); /* istanbul ignore next */cov_yvt6rhqjy.s[42]++;\n      return;\n    });\n  }\n}","timestamp":"2017-12-08T06:23:11.244Z"}
{"level":"info","message":"responding with a status code of 200 and the following data","timestamp":"2017-12-08T06:23:11.244Z"}
[{"id":"58119430-dbda-11e7-a198-e3caf5ab958f","timestamp":"2017-12-08T05:40:48.499Z","title":"food that sounds yummy","content":"eggs and steak"},{"id":"6761b6e0-dbda-11e7-93e4-533474af1c5b","timestamp":"2017-12-08T05:41:14.190Z","title":"food that sounds yummy","content":"eggs and steak"},{"id":"6cb4a120-dbda-11e7-8ae5-2947f3ca84f7","timestamp":"2017-12-08T05:41:23.122Z","title":"food that sounds yummy","content":"eggs and steak"},{"id":"723c2ff0-dbda-11e7-be3b-03e71f98a3d9","timestamp":"2017-12-08T05:41:32.399Z","title":"food that sounds yummy","content":"eggs and steak"},{"id":"81233090-dbda-11e7-8580-e5c399b06ec6","timestamp":"2017-12-08T05:41:57.401Z","title":"food that sounds yummy","content":"eggs and steak"},{"id":"973a66f0-dbda-11e7-b86f-a924f17df39d","timestamp":"2017-12-08T05:42:34.464Z","title":"food that sounds yummy","content":"eggs and steak"},{"id":"c126abe0-dbda-11e7-8d97-d96ad9197099","timestamp":"2017-12-08T05:43:44.799Z","title":"food that sounds yummy","content":"eggs and steak"},{"id":"22948910-dbdb-11e7-8857-431a3d1bd7b1","timestamp":"2017-12-08T05:46:28.257Z","title":"food that sounds yummy","content":"eggs and steak"},{"id":"2fefb990-dbdb-11e7-8095-91fa293993d2","timestamp":"2017-12-08T05:46:50.665Z","title":"food that sounds yummy","content":"eggs and steak"},{"id":"5183c380-dbdb-11e7-afe9-8929c580a10f","timestamp":"2017-12-08T05:47:47.000Z","title":"food that sounds yummy","content":"eggs and steak"},{"id":"979a44c0-dbdb-11e7-bbaa-3fc9f76bedde","timestamp":"2017-12-08T05:49:44.588Z","title":"food that sounds yummy","content":"eggs and steak"},{"id":"20f80fc0-dbde-11e7-9e4c-7f19df5f8fee","timestamp":"2017-12-08T06:07:54.044Z","title":"food that sounds yummy","content":"eggs and steak"},{"id":"e90469e0-dbdf-11e7-a781-2b29fee42532","timestamp":"2017-12-08T06:20:39.166Z","title":"food that sounds yummy","content":"eggs and steak"},{"id":"3c9b56e0-dbe0-11e7-8f66-5de5c390db3a","timestamp":"2017-12-08T06:22:59.407Z","title":"food that sounds yummy","content":"eggs and steak"},{"id":"43a714b0-dbe0-11e7-8808-b3e3eebff5d4","timestamp":"2017-12-08T06:23:11.227Z","title":"food that sounds yummy","content":"eggs and steak"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T06:23:11.249Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T06:23:11.250Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[5]++;cov_yvt6rhqjy.s[32]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_yvt6rhqjy.b[3][0]++;cov_yvt6rhqjy.s[33]++;\n    storage.fetchItem(request.url.query.id).\n    then(note => {/* istanbul ignore next */cov_yvt6rhqjy.f[6]++;cov_yvt6rhqjy.s[34]++;\n      sendJSON(response, 200, note); /* istanbul ignore next */cov_yvt6rhqjy.s[35]++;\n      return;\n    }).\n    catch(error => {/* istanbul ignore next */cov_yvt6rhqjy.f[7]++;cov_yvt6rhqjy.s[36]++;\n      sendStatus(response, 500, error); /* istanbul ignore next */cov_yvt6rhqjy.s[37]++;\n      return;\n    });\n  } else {/* istanbul ignore next */cov_yvt6rhqjy.b[3][1]++;cov_yvt6rhqjy.s[38]++;\n    storage.fetchAll().\n    then(notes => {/* istanbul ignore next */cov_yvt6rhqjy.f[8]++;cov_yvt6rhqjy.s[39]++;\n      sendJSON(response, 200, notes); /* istanbul ignore next */cov_yvt6rhqjy.s[40]++;\n      return;\n    }).\n    catch(error => {/* istanbul ignore next */cov_yvt6rhqjy.f[9]++;cov_yvt6rhqjy.s[41]++;\n      sendStatus(response, 500, error); /* istanbul ignore next */cov_yvt6rhqjy.s[42]++;\n      return;\n    });\n  }\n}","timestamp":"2017-12-08T06:23:11.250Z"}
{"level":"info","message":"responding with a status code of 200 and the following data","timestamp":"2017-12-08T06:23:11.251Z"}
{"id":"58119430-dbda-11e7-a198-e3caf5ab958f","timestamp":"2017-12-08T06:23:11.251Z","title":"food that sounds yummy","content":"eggs and steak","level":"info","message":""}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T06:23:11.254Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T06:23:11.254Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[10]++;cov_yvt6rhqjy.s[44]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_yvt6rhqjy.b[4][0]++;cov_yvt6rhqjy.s[45]++;\n    storage.deleteItem(request.url.query.id).\n    then(() => {/* istanbul ignore next */cov_yvt6rhqjy.f[11]++;cov_yvt6rhqjy.s[46]++;\n      sendStatus(response, 204, 'successfully deleted'); /* istanbul ignore next */cov_yvt6rhqjy.s[47]++;\n      return;\n    }).\n    catch(error => {/* istanbul ignore next */cov_yvt6rhqjy.f[12]++;cov_yvt6rhqjy.s[48]++;\n      sendStatus(response, 500, error); /* istanbul ignore next */cov_yvt6rhqjy.s[49]++;\n      return;\n    });\n  } else {/* istanbul ignore next */cov_yvt6rhqjy.b[4][1]++;cov_yvt6rhqjy.s[50]++;\n    sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[51]++;\n    return;\n  }\n}","timestamp":"2017-12-08T06:23:11.254Z"}
{"level":"info","message":"responding with a status code of 204 due to successfully deleted","timestamp":"2017-12-08T06:23:11.255Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T06:23:11.257Z"}
{"level":"info","message":"__REQUEST_ERROR","timestamp":"2017-12-08T06:23:11.258Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at Object.parse (native)\n    at IncomingMessage.request.on.error (/home/ncarignan/cf/401/lab-assignments/08-09-vanilla-rest-server/lab-nicholasc/lib/request-parser.js:28:31)\n    at emitNone (events.js:86:13)\n    at IncomingMessage.emit (events.js:185:7)\n    at endReadableNT (_stream_readable.js:974:12)\n    at _combinedTickCallback (internal/process/next_tick.js:80:11)\n    at process._tickCallback (internal/process/next_tick.js:104:9)","level":"info","timestamp":"2017-12-08T06:23:11.258Z"}
{"level":"info","message":"adding a POST url and callbacck","timestamp":"2017-12-08T06:23:22.526Z"}
{"level":"info","message":"/api/notes","timestamp":"2017-12-08T06:23:22.527Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[2]++;cov_yvt6rhqjy.s[16]++;\n  //TODO: run console.trace(); track what happens\n  if (!request.body) {/* istanbul ignore next */cov_yvt6rhqjy.b[0][0]++;cov_yvt6rhqjy.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[0][1]++;}\n  // checking if values are present- instead we should check if values match type\n  // if typeof\n  cov_yvt6rhqjy.s[19]++;if (typeof request.body.title !== 'string') {/* istanbul ignore next */cov_yvt6rhqjy.b[1][0]++;cov_yvt6rhqjy.s[20]++;\n    sendStatus(response, 400, 'title must be a string'); /* istanbul ignore next */cov_yvt6rhqjy.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[1][1]++;}cov_yvt6rhqjy.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_yvt6rhqjy.b[2][0]++;cov_yvt6rhqjy.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[2][1]++;}\n\n  let note = /* istanbul ignore next */(cov_yvt6rhqjy.s[25]++, new Note(request.body.title, request.body.content)); /* istanbul ignore next */cov_yvt6rhqjy.s[26]++;\n  storage.addItem(note).\n  then(() => {/* istanbul ignore next */cov_yvt6rhqjy.f[3]++;cov_yvt6rhqjy.s[27]++;\n    sendJSON(response, 200, note); /* istanbul ignore next */cov_yvt6rhqjy.s[28]++;\n    return;\n  }).\n  catch(error => {/* istanbul ignore next */cov_yvt6rhqjy.f[4]++;cov_yvt6rhqjy.s[29]++;\n    sendStatus(response, 500, error); /* istanbul ignore next */cov_yvt6rhqjy.s[30]++;\n    return;\n  });\n}","timestamp":"2017-12-08T06:23:22.527Z"}
{"level":"info","message":"adding a GET url and callbacck","timestamp":"2017-12-08T06:23:22.527Z"}
{"level":"info","message":"/api/notes","timestamp":"2017-12-08T06:23:22.527Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[5]++;cov_yvt6rhqjy.s[32]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_yvt6rhqjy.b[3][0]++;cov_yvt6rhqjy.s[33]++;\n    storage.fetchItem(request.url.query.id).\n    then(note => {/* istanbul ignore next */cov_yvt6rhqjy.f[6]++;cov_yvt6rhqjy.s[34]++;\n      sendJSON(response, 200, note); /* istanbul ignore next */cov_yvt6rhqjy.s[35]++;\n      return;\n    }).\n    catch(error => {/* istanbul ignore next */cov_yvt6rhqjy.f[7]++;cov_yvt6rhqjy.s[36]++;\n      sendStatus(response, 500, error); /* istanbul ignore next */cov_yvt6rhqjy.s[37]++;\n      return;\n    });\n  } else {/* istanbul ignore next */cov_yvt6rhqjy.b[3][1]++;cov_yvt6rhqjy.s[38]++;\n    storage.fetchAll().\n    then(notes => {/* istanbul ignore next */cov_yvt6rhqjy.f[8]++;cov_yvt6rhqjy.s[39]++;\n      sendJSON(response, 200, notes); /* istanbul ignore next */cov_yvt6rhqjy.s[40]++;\n      return;\n    }).\n    catch(error => {/* istanbul ignore next */cov_yvt6rhqjy.f[9]++;cov_yvt6rhqjy.s[41]++;\n      sendStatus(response, 500, error); /* istanbul ignore next */cov_yvt6rhqjy.s[42]++;\n      return;\n    });\n  }\n}","timestamp":"2017-12-08T06:23:22.527Z"}
{"level":"info","message":"adding a DELETE url and callbacck","timestamp":"2017-12-08T06:23:22.527Z"}
{"level":"info","message":"/api/notes","timestamp":"2017-12-08T06:23:22.527Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[10]++;cov_yvt6rhqjy.s[44]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_yvt6rhqjy.b[4][0]++;cov_yvt6rhqjy.s[45]++;\n    storage.deleteItem(request.url.query.id).\n    then(() => {/* istanbul ignore next */cov_yvt6rhqjy.f[11]++;cov_yvt6rhqjy.s[46]++;\n      sendStatus(response, 204, 'successfully deleted'); /* istanbul ignore next */cov_yvt6rhqjy.s[47]++;\n      return;\n    }).\n    catch(error => {/* istanbul ignore next */cov_yvt6rhqjy.f[12]++;cov_yvt6rhqjy.s[48]++;\n      sendStatus(response, 500, error); /* istanbul ignore next */cov_yvt6rhqjy.s[49]++;\n      return;\n    });\n  } else {/* istanbul ignore next */cov_yvt6rhqjy.b[4][1]++;cov_yvt6rhqjy.s[50]++;\n    sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[51]++;\n    return;\n  }\n}","timestamp":"2017-12-08T06:23:22.527Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-08T06:23:22.579Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T06:23:22.594Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T06:23:22.596Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[2]++;cov_yvt6rhqjy.s[16]++;\n  //TODO: run console.trace(); track what happens\n  if (!request.body) {/* istanbul ignore next */cov_yvt6rhqjy.b[0][0]++;cov_yvt6rhqjy.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[0][1]++;}\n  // checking if values are present- instead we should check if values match type\n  // if typeof\n  cov_yvt6rhqjy.s[19]++;if (typeof request.body.title !== 'string') {/* istanbul ignore next */cov_yvt6rhqjy.b[1][0]++;cov_yvt6rhqjy.s[20]++;\n    sendStatus(response, 400, 'title must be a string'); /* istanbul ignore next */cov_yvt6rhqjy.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[1][1]++;}cov_yvt6rhqjy.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_yvt6rhqjy.b[2][0]++;cov_yvt6rhqjy.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_yvt6rhqjy.b[2][1]++;}\n\n  let note = /* istanbul ignore next */(cov_yvt6rhqjy.s[25]++, new Note(request.body.title, request.body.content)); /* istanbul ignore next */cov_yvt6rhqjy.s[26]++;\n  storage.addItem(note).\n  then(() => {/* istanbul ignore next */cov_yvt6rhqjy.f[3]++;cov_yvt6rhqjy.s[27]++;\n    sendJSON(response, 200, note); /* istanbul ignore next */cov_yvt6rhqjy.s[28]++;\n    return;\n  }).\n  catch(error => {/* istanbul ignore next */cov_yvt6rhqjy.f[4]++;cov_yvt6rhqjy.s[29]++;\n    sendStatus(response, 500, error); /* istanbul ignore next */cov_yvt6rhqjy.s[30]++;\n    return;\n  });\n}","timestamp":"2017-12-08T06:23:22.596Z"}
{"level":"info","message":"responding with a status code of 200 and the following data","timestamp":"2017-12-08T06:23:22.599Z"}
{"id":"4a6dda40-dbe0-11e7-b778-5da4c08eec10","timestamp":"2017-12-08T06:23:22.599Z","title":"food that sounds yummy","content":"eggs and steak","level":"info","message":""}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T06:23:22.610Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T06:23:22.610Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[5]++;cov_yvt6rhqjy.s[32]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_yvt6rhqjy.b[3][0]++;cov_yvt6rhqjy.s[33]++;\n    storage.fetchItem(request.url.query.id).\n    then(note => {/* istanbul ignore next */cov_yvt6rhqjy.f[6]++;cov_yvt6rhqjy.s[34]++;\n      sendJSON(response, 200, note); /* istanbul ignore next */cov_yvt6rhqjy.s[35]++;\n      return;\n    }).\n    catch(error => {/* istanbul ignore next */cov_yvt6rhqjy.f[7]++;cov_yvt6rhqjy.s[36]++;\n      sendStatus(response, 500, error); /* istanbul ignore next */cov_yvt6rhqjy.s[37]++;\n      return;\n    });\n  } else {/* istanbul ignore next */cov_yvt6rhqjy.b[3][1]++;cov_yvt6rhqjy.s[38]++;\n    storage.fetchAll().\n    then(notes => {/* istanbul ignore next */cov_yvt6rhqjy.f[8]++;cov_yvt6rhqjy.s[39]++;\n      sendJSON(response, 200, notes); /* istanbul ignore next */cov_yvt6rhqjy.s[40]++;\n      return;\n    }).\n    catch(error => {/* istanbul ignore next */cov_yvt6rhqjy.f[9]++;cov_yvt6rhqjy.s[41]++;\n      sendStatus(response, 500, error); /* istanbul ignore next */cov_yvt6rhqjy.s[42]++;\n      return;\n    });\n  }\n}","timestamp":"2017-12-08T06:23:22.610Z"}
{"level":"info","message":"responding with a status code of 200 and the following data","timestamp":"2017-12-08T06:23:22.611Z"}
[{"id":"6761b6e0-dbda-11e7-93e4-533474af1c5b","timestamp":"2017-12-08T05:41:14.190Z","title":"food that sounds yummy","content":"eggs and steak"},{"id":"6cb4a120-dbda-11e7-8ae5-2947f3ca84f7","timestamp":"2017-12-08T05:41:23.122Z","title":"food that sounds yummy","content":"eggs and steak"},{"id":"723c2ff0-dbda-11e7-be3b-03e71f98a3d9","timestamp":"2017-12-08T05:41:32.399Z","title":"food that sounds yummy","content":"eggs and steak"},{"id":"81233090-dbda-11e7-8580-e5c399b06ec6","timestamp":"2017-12-08T05:41:57.401Z","title":"food that sounds yummy","content":"eggs and steak"},{"id":"973a66f0-dbda-11e7-b86f-a924f17df39d","timestamp":"2017-12-08T05:42:34.464Z","title":"food that sounds yummy","content":"eggs and steak"},{"id":"c126abe0-dbda-11e7-8d97-d96ad9197099","timestamp":"2017-12-08T05:43:44.799Z","title":"food that sounds yummy","content":"eggs and steak"},{"id":"22948910-dbdb-11e7-8857-431a3d1bd7b1","timestamp":"2017-12-08T05:46:28.257Z","title":"food that sounds yummy","content":"eggs and steak"},{"id":"2fefb990-dbdb-11e7-8095-91fa293993d2","timestamp":"2017-12-08T05:46:50.665Z","title":"food that sounds yummy","content":"eggs and steak"},{"id":"5183c380-dbdb-11e7-afe9-8929c580a10f","timestamp":"2017-12-08T05:47:47.000Z","title":"food that sounds yummy","content":"eggs and steak"},{"id":"979a44c0-dbdb-11e7-bbaa-3fc9f76bedde","timestamp":"2017-12-08T05:49:44.588Z","title":"food that sounds yummy","content":"eggs and steak"},{"id":"20f80fc0-dbde-11e7-9e4c-7f19df5f8fee","timestamp":"2017-12-08T06:07:54.044Z","title":"food that sounds yummy","content":"eggs and steak"},{"id":"e90469e0-dbdf-11e7-a781-2b29fee42532","timestamp":"2017-12-08T06:20:39.166Z","title":"food that sounds yummy","content":"eggs and steak"},{"id":"3c9b56e0-dbe0-11e7-8f66-5de5c390db3a","timestamp":"2017-12-08T06:22:59.407Z","title":"food that sounds yummy","content":"eggs and steak"},{"id":"43a714b0-dbe0-11e7-8808-b3e3eebff5d4","timestamp":"2017-12-08T06:23:11.227Z","title":"food that sounds yummy","content":"eggs and steak"},{"id":"4a6dda40-dbe0-11e7-b778-5da4c08eec10","timestamp":"2017-12-08T06:23:22.596Z","title":"food that sounds yummy","content":"eggs and steak"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T06:23:22.616Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T06:23:22.616Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[5]++;cov_yvt6rhqjy.s[32]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_yvt6rhqjy.b[3][0]++;cov_yvt6rhqjy.s[33]++;\n    storage.fetchItem(request.url.query.id).\n    then(note => {/* istanbul ignore next */cov_yvt6rhqjy.f[6]++;cov_yvt6rhqjy.s[34]++;\n      sendJSON(response, 200, note); /* istanbul ignore next */cov_yvt6rhqjy.s[35]++;\n      return;\n    }).\n    catch(error => {/* istanbul ignore next */cov_yvt6rhqjy.f[7]++;cov_yvt6rhqjy.s[36]++;\n      sendStatus(response, 500, error); /* istanbul ignore next */cov_yvt6rhqjy.s[37]++;\n      return;\n    });\n  } else {/* istanbul ignore next */cov_yvt6rhqjy.b[3][1]++;cov_yvt6rhqjy.s[38]++;\n    storage.fetchAll().\n    then(notes => {/* istanbul ignore next */cov_yvt6rhqjy.f[8]++;cov_yvt6rhqjy.s[39]++;\n      sendJSON(response, 200, notes); /* istanbul ignore next */cov_yvt6rhqjy.s[40]++;\n      return;\n    }).\n    catch(error => {/* istanbul ignore next */cov_yvt6rhqjy.f[9]++;cov_yvt6rhqjy.s[41]++;\n      sendStatus(response, 500, error); /* istanbul ignore next */cov_yvt6rhqjy.s[42]++;\n      return;\n    });\n  }\n}","timestamp":"2017-12-08T06:23:22.616Z"}
{"level":"info","message":"responding with a status code of 200 and the following data","timestamp":"2017-12-08T06:23:22.617Z"}
{"id":"6761b6e0-dbda-11e7-93e4-533474af1c5b","timestamp":"2017-12-08T06:23:22.617Z","title":"food that sounds yummy","content":"eggs and steak","level":"info","message":""}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T06:23:22.619Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T06:23:22.620Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_yvt6rhqjy.f[10]++;cov_yvt6rhqjy.s[44]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_yvt6rhqjy.b[4][0]++;cov_yvt6rhqjy.s[45]++;\n    storage.deleteItem(request.url.query.id).\n    then(() => {/* istanbul ignore next */cov_yvt6rhqjy.f[11]++;cov_yvt6rhqjy.s[46]++;\n      sendStatus(response, 204, 'successfully deleted'); /* istanbul ignore next */cov_yvt6rhqjy.s[47]++;\n      return;\n    }).\n    catch(error => {/* istanbul ignore next */cov_yvt6rhqjy.f[12]++;cov_yvt6rhqjy.s[48]++;\n      sendStatus(response, 500, error); /* istanbul ignore next */cov_yvt6rhqjy.s[49]++;\n      return;\n    });\n  } else {/* istanbul ignore next */cov_yvt6rhqjy.b[4][1]++;cov_yvt6rhqjy.s[50]++;\n    sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_yvt6rhqjy.s[51]++;\n    return;\n  }\n}","timestamp":"2017-12-08T06:23:22.620Z"}
{"level":"info","message":"responding with a status code of 204 due to successfully deleted","timestamp":"2017-12-08T06:23:22.621Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T06:23:22.623Z"}
{"level":"info","message":"__REQUEST_ERROR","timestamp":"2017-12-08T06:23:22.624Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at Object.parse (native)\n    at IncomingMessage.request.on.error (/home/ncarignan/cf/401/lab-assignments/08-09-vanilla-rest-server/lab-nicholasc/lib/request-parser.js:28:31)\n    at emitNone (events.js:86:13)\n    at IncomingMessage.emit (events.js:185:7)\n    at endReadableNT (_stream_readable.js:974:12)\n    at _combinedTickCallback (internal/process/next_tick.js:80:11)\n    at process._tickCallback (internal/process/next_tick.js:104:9)","level":"info","timestamp":"2017-12-08T06:23:22.624Z"}
