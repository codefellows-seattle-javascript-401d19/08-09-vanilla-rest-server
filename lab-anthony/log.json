{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T04:56:15.634Z"}
{"level":"info","message":"/api/beers","timestamp":"2017-12-07T04:56:15.637Z"}
{"level":"info","message":"(request, response) => {\n  if(!request.body){\n    sendStatus(response, 400, 'body not found');\n    return;\n  }\n  if(!request.body.brewery){\n    sendStatus(response, 400, 'brewery not found');\n    return;\n  }\n  if(!request.body.beerName){\n    sendStatus(response, 400, 'beer name not found');\n    return;\n  }\n  if(!request.body.beerType){\n    sendStatus(response, 400, 'beer type not found');\n    return;\n  }\n  let beer = new Beer(request.body.brewery, request.body.beerName, request.body.beerType);\n  beers.push(beer);\n  sendJSON(response, 200, beer);\n}","timestamp":"2017-12-07T04:56:15.638Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2017-12-07T04:56:15.656Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T04:56:52.796Z"}
{"level":"info","message":"/api/beers","timestamp":"2017-12-07T04:56:52.798Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[2]++;cov_1aebqmmulz.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_1aebqmmulz.b[0][0]++;cov_1aebqmmulz.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_1aebqmmulz.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[0][1]++;}cov_1aebqmmulz.s[19]++;\n  if (!request.body.brewery) {/* istanbul ignore next */cov_1aebqmmulz.b[1][0]++;cov_1aebqmmulz.s[20]++;\n    sendStatus(response, 400, 'brewery not found'); /* istanbul ignore next */cov_1aebqmmulz.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[1][1]++;}cov_1aebqmmulz.s[22]++;\n  if (!request.body.beerName) {/* istanbul ignore next */cov_1aebqmmulz.b[2][0]++;cov_1aebqmmulz.s[23]++;\n    sendStatus(response, 400, 'beer name not found'); /* istanbul ignore next */cov_1aebqmmulz.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[2][1]++;}cov_1aebqmmulz.s[25]++;\n  if (!request.body.beerType) {/* istanbul ignore next */cov_1aebqmmulz.b[3][0]++;cov_1aebqmmulz.s[26]++;\n    sendStatus(response, 400, 'beer type not found'); /* istanbul ignore next */cov_1aebqmmulz.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[3][1]++;}\n  let beer = /* istanbul ignore next */(cov_1aebqmmulz.s[28]++, new Beer(request.body.brewery, request.body.beerName, request.body.beerType)); /* istanbul ignore next */cov_1aebqmmulz.s[29]++;\n  beers.push(beer); /* istanbul ignore next */cov_1aebqmmulz.s[30]++;\n  sendJSON(response, 200, beer);\n}","timestamp":"2017-12-07T04:56:52.798Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T04:56:57.957Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T04:56:57.962Z"}
{"level":"info","message":"(request, response) => {\n  if(!request.body){\n    sendStatus(response, 400, 'body not found');\n    return;\n  }\n  if(!request.body.brewery){\n    sendStatus(response, 400, 'brewery not found');\n    return;\n  }\n  if(!request.body.beerName){\n    sendStatus(response, 400, 'beer name not found');\n    return;\n  }\n  if(!request.body.beerType){\n    sendStatus(response, 400, 'beer type not found');\n    return;\n  }\n  let beer = new Beer(request.body.brewery, request.body.beerName, request.body.beerType);\n  beers.push(beer);\n  sendJSON(response, 200, beer);\n}","timestamp":"2017-12-07T04:56:57.962Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T04:56:57.963Z"}
{"id":"0dbbe3b0-db0b-11e7-ad04-77164040c6cb","timestamp":"2017-12-07T04:56:57.964Z","brewery":"Rainier Beer","beerName":"Rainier","beerType":"lager","level":"info","message":""}
{"level":"error","message":"__SERVER_ERROR__ server is already off","timestamp":"2017-12-07T04:56:57.987Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T04:59:49.316Z"}
{"level":"info","message":"/api/beers","timestamp":"2017-12-07T04:59:49.318Z"}
{"level":"info","message":"(request, response) => {\n  if(!request.body){\n    sendStatus(response, 400, 'body not found');\n    return;\n  }\n  if(!request.body.brewery){\n    sendStatus(response, 400, 'brewery not found');\n    return;\n  }\n  if(!request.body.beerName){\n    sendStatus(response, 400, 'beer name not found');\n    return;\n  }\n  if(!request.body.beerType){\n    sendStatus(response, 400, 'beer type not found');\n    return;\n  }\n  let beer = new Beer(request.body.brewery, request.body.beerName, request.body.beerType);\n  beers.push(beer);\n  sendJSON(response, 200, beer);\n}","timestamp":"2017-12-07T04:59:49.319Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2017-12-07T04:59:49.333Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T04:59:56.804Z"}
{"level":"info","message":"/api/beers","timestamp":"2017-12-07T04:59:56.806Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[2]++;cov_1aebqmmulz.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_1aebqmmulz.b[0][0]++;cov_1aebqmmulz.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_1aebqmmulz.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[0][1]++;}cov_1aebqmmulz.s[19]++;\n  if (!request.body.brewery) {/* istanbul ignore next */cov_1aebqmmulz.b[1][0]++;cov_1aebqmmulz.s[20]++;\n    sendStatus(response, 400, 'brewery not found'); /* istanbul ignore next */cov_1aebqmmulz.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[1][1]++;}cov_1aebqmmulz.s[22]++;\n  if (!request.body.beerName) {/* istanbul ignore next */cov_1aebqmmulz.b[2][0]++;cov_1aebqmmulz.s[23]++;\n    sendStatus(response, 400, 'beer name not found'); /* istanbul ignore next */cov_1aebqmmulz.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[2][1]++;}cov_1aebqmmulz.s[25]++;\n  if (!request.body.beerType) {/* istanbul ignore next */cov_1aebqmmulz.b[3][0]++;cov_1aebqmmulz.s[26]++;\n    sendStatus(response, 400, 'beer type not found'); /* istanbul ignore next */cov_1aebqmmulz.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[3][1]++;}\n  let beer = /* istanbul ignore next */(cov_1aebqmmulz.s[28]++, new Beer(request.body.brewery, request.body.beerName, request.body.beerType)); /* istanbul ignore next */cov_1aebqmmulz.s[29]++;\n  beers.push(beer); /* istanbul ignore next */cov_1aebqmmulz.s[30]++;\n  sendJSON(response, 200, beer);\n}","timestamp":"2017-12-07T04:59:56.806Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:00:02.009Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:00:02.014Z"}
{"level":"info","message":"(request, response) => {\n  if(!request.body){\n    sendStatus(response, 400, 'body not found');\n    return;\n  }\n  if(!request.body.brewery){\n    sendStatus(response, 400, 'brewery not found');\n    return;\n  }\n  if(!request.body.beerName){\n    sendStatus(response, 400, 'beer name not found');\n    return;\n  }\n  if(!request.body.beerType){\n    sendStatus(response, 400, 'beer type not found');\n    return;\n  }\n  let beer = new Beer(request.body.brewery, request.body.beerName, request.body.beerType);\n  beers.push(beer);\n  sendJSON(response, 200, beer);\n}","timestamp":"2017-12-07T05:00:02.015Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:00:02.015Z"}
{"id":"7b6ffef0-db0b-11e7-aa9a-29d1de77fc5b","timestamp":"2017-12-07T05:00:02.016Z","brewery":"Rainier Beer","beerName":"Rainier","beerType":"lager","level":"info","message":""}
{"level":"error","message":"__SERVER_ERROR__ server is already off","timestamp":"2017-12-07T05:00:02.037Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T05:03:25.302Z"}
{"level":"info","message":"/api/beers","timestamp":"2017-12-07T05:03:25.304Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[2]++;cov_1aebqmmulz.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_1aebqmmulz.b[0][0]++;cov_1aebqmmulz.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_1aebqmmulz.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[0][1]++;}cov_1aebqmmulz.s[19]++;\n  if (!request.body.brewery) {/* istanbul ignore next */cov_1aebqmmulz.b[1][0]++;cov_1aebqmmulz.s[20]++;\n    sendStatus(response, 400, 'brewery not found'); /* istanbul ignore next */cov_1aebqmmulz.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[1][1]++;}cov_1aebqmmulz.s[22]++;\n  if (!request.body.beerName) {/* istanbul ignore next */cov_1aebqmmulz.b[2][0]++;cov_1aebqmmulz.s[23]++;\n    sendStatus(response, 400, 'beer name not found'); /* istanbul ignore next */cov_1aebqmmulz.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[2][1]++;}cov_1aebqmmulz.s[25]++;\n  if (!request.body.beerType) {/* istanbul ignore next */cov_1aebqmmulz.b[3][0]++;cov_1aebqmmulz.s[26]++;\n    sendStatus(response, 400, 'beer type not found'); /* istanbul ignore next */cov_1aebqmmulz.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[3][1]++;}\n  let beer = /* istanbul ignore next */(cov_1aebqmmulz.s[28]++, new Beer(request.body.brewery, request.body.beerName, request.body.beerType)); /* istanbul ignore next */cov_1aebqmmulz.s[29]++;\n  beers.push(beer); /* istanbul ignore next */cov_1aebqmmulz.s[30]++;\n  sendJSON(response, 200, beer);\n}","timestamp":"2017-12-07T05:03:25.305Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:03:30.563Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:03:30.565Z"}
{"level":"info","message":"(request, response) => {\n  if(!request.body){\n    sendStatus(response, 400, 'body not found');\n    return;\n  }\n  if(!request.body.brewery){\n    sendStatus(response, 400, 'brewery not found');\n    return;\n  }\n  if(!request.body.beerName){\n    sendStatus(response, 400, 'beer name not found');\n    return;\n  }\n  if(!request.body.beerType){\n    sendStatus(response, 400, 'beer type not found');\n    return;\n  }\n  let beer = new Beer(request.body.brewery, request.body.beerName, request.body.beerType);\n  beers.push(beer);\n  sendJSON(response, 200, beer);\n}","timestamp":"2017-12-07T05:03:30.565Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:03:30.565Z"}
{"id":"f7be3350-db0b-11e7-aa9a-29d1de77fc5b","timestamp":"2017-12-07T05:03:30.565Z","brewery":"Rainier Beer","beerName":"Rainier","beerType":"lager","level":"info","message":""}
{"level":"error","message":"__SERVER_ERROR__ server is already off","timestamp":"2017-12-07T05:03:30.592Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T05:26:11.894Z"}
{"level":"info","message":"/api/beers","timestamp":"2017-12-07T05:26:11.895Z"}
{"level":"info","message":"(request, response) => {\n  if(!request.body){\n    sendStatus(response, 400, 'body not found');\n    return;\n  }\n  if(!request.body.brewery){\n    sendStatus(response, 400, 'brewery not found');\n    return;\n  }\n  if(!request.body.beerName){\n    sendStatus(response, 400, 'beer name not found');\n    return;\n  }\n  if(!request.body.beerType){\n    sendStatus(response, 400, 'beer type not found');\n    return;\n  }\n  let beer = new Beer(request.body.brewery, request.body.beerName, request.body.beerType);\n  beers.push(beer);\n  sendJSON(response, 200, beer);\n}","timestamp":"2017-12-07T05:26:11.895Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2017-12-07T05:26:11.902Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T05:27:12.402Z"}
{"level":"info","message":"/api/beers","timestamp":"2017-12-07T05:27:12.403Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[2]++;cov_1aebqmmulz.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_1aebqmmulz.b[0][0]++;cov_1aebqmmulz.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_1aebqmmulz.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[0][1]++;}cov_1aebqmmulz.s[19]++;\n  if (!request.body.brewery) {/* istanbul ignore next */cov_1aebqmmulz.b[1][0]++;cov_1aebqmmulz.s[20]++;\n    sendStatus(response, 400, 'brewery not found'); /* istanbul ignore next */cov_1aebqmmulz.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[1][1]++;}cov_1aebqmmulz.s[22]++;\n  if (!request.body.beerName) {/* istanbul ignore next */cov_1aebqmmulz.b[2][0]++;cov_1aebqmmulz.s[23]++;\n    sendStatus(response, 400, 'beer name not found'); /* istanbul ignore next */cov_1aebqmmulz.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[2][1]++;}cov_1aebqmmulz.s[25]++;\n  if (!request.body.beerType) {/* istanbul ignore next */cov_1aebqmmulz.b[3][0]++;cov_1aebqmmulz.s[26]++;\n    sendStatus(response, 400, 'beer type not found'); /* istanbul ignore next */cov_1aebqmmulz.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[3][1]++;}\n  let beer = /* istanbul ignore next */(cov_1aebqmmulz.s[28]++, new Beer(request.body.brewery, request.body.beerName, request.body.beerType)); /* istanbul ignore next */cov_1aebqmmulz.s[29]++;\n  beers.push(beer); /* istanbul ignore next */cov_1aebqmmulz.s[30]++;\n  sendJSON(response, 200, beer);\n}","timestamp":"2017-12-07T05:27:12.403Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:27:17.480Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:27:17.482Z"}
{"level":"info","message":"(request, response) => {\n  if(!request.body){\n    sendStatus(response, 400, 'body not found');\n    return;\n  }\n  if(!request.body.brewery){\n    sendStatus(response, 400, 'brewery not found');\n    return;\n  }\n  if(!request.body.beerName){\n    sendStatus(response, 400, 'beer name not found');\n    return;\n  }\n  if(!request.body.beerType){\n    sendStatus(response, 400, 'beer type not found');\n    return;\n  }\n  let beer = new Beer(request.body.brewery, request.body.beerName, request.body.beerType);\n  beers.push(beer);\n  sendJSON(response, 200, beer);\n}","timestamp":"2017-12-07T05:27:17.482Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:27:17.482Z"}
{"id":"4a4074a0-db0f-11e7-a19b-8156cb40e894","timestamp":"2017-12-07T05:27:17.483Z","brewery":"Rainier Beer","beerName":"Rainier","beerType":"lager","level":"info","message":""}
{"level":"error","message":"__SERVER_ERROR__ server is already off","timestamp":"2017-12-07T05:27:17.492Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T05:32:37.398Z"}
{"level":"info","message":"/api/beers","timestamp":"2017-12-07T05:32:37.399Z"}
{"level":"info","message":"(request, response) => {\n  if(!request.body){\n    sendStatus(response, 400, 'body not found');\n    return;\n  }\n  if(!request.body.brewery){\n    sendStatus(response, 400, 'brewery not found');\n    return;\n  }\n  if(!request.body.beerName){\n    sendStatus(response, 400, 'beer name not found');\n    return;\n  }\n  if(!request.body.beerType){\n    sendStatus(response, 400, 'beer type not found');\n    return;\n  }\n  let beer = new Beer(request.body.brewery, request.body.beerName, request.body.beerType);\n  beers.push(beer);\n  sendJSON(response, 200, beer);\n}","timestamp":"2017-12-07T05:32:37.399Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2017-12-07T05:32:37.405Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T05:32:43.628Z"}
{"level":"info","message":"/api/beers","timestamp":"2017-12-07T05:32:43.629Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[2]++;cov_1aebqmmulz.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_1aebqmmulz.b[0][0]++;cov_1aebqmmulz.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_1aebqmmulz.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[0][1]++;}cov_1aebqmmulz.s[19]++;\n  if (!request.body.brewery) {/* istanbul ignore next */cov_1aebqmmulz.b[1][0]++;cov_1aebqmmulz.s[20]++;\n    sendStatus(response, 400, 'brewery not found'); /* istanbul ignore next */cov_1aebqmmulz.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[1][1]++;}cov_1aebqmmulz.s[22]++;\n  if (!request.body.beerName) {/* istanbul ignore next */cov_1aebqmmulz.b[2][0]++;cov_1aebqmmulz.s[23]++;\n    sendStatus(response, 400, 'beer name not found'); /* istanbul ignore next */cov_1aebqmmulz.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[2][1]++;}cov_1aebqmmulz.s[25]++;\n  if (!request.body.beerType) {/* istanbul ignore next */cov_1aebqmmulz.b[3][0]++;cov_1aebqmmulz.s[26]++;\n    sendStatus(response, 400, 'beer type not found'); /* istanbul ignore next */cov_1aebqmmulz.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[3][1]++;}\n  let beer = /* istanbul ignore next */(cov_1aebqmmulz.s[28]++, new Beer(request.body.brewery, request.body.beerName, request.body.beerType)); /* istanbul ignore next */cov_1aebqmmulz.s[29]++;\n  beers.push(beer); /* istanbul ignore next */cov_1aebqmmulz.s[30]++;\n  sendJSON(response, 200, beer);\n}","timestamp":"2017-12-07T05:32:43.629Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:32:48.691Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:32:48.693Z"}
{"level":"info","message":"(request, response) => {\n  if(!request.body){\n    sendStatus(response, 400, 'body not found');\n    return;\n  }\n  if(!request.body.brewery){\n    sendStatus(response, 400, 'brewery not found');\n    return;\n  }\n  if(!request.body.beerName){\n    sendStatus(response, 400, 'beer name not found');\n    return;\n  }\n  if(!request.body.beerType){\n    sendStatus(response, 400, 'beer type not found');\n    return;\n  }\n  let beer = new Beer(request.body.brewery, request.body.beerName, request.body.beerType);\n  beers.push(beer);\n  sendJSON(response, 200, beer);\n}","timestamp":"2017-12-07T05:32:48.693Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:32:48.694Z"}
{"id":"0fab6560-db10-11e7-9600-adabdba65933","timestamp":"2017-12-07T05:32:48.694Z","brewery":"Rainier Beer","beerName":"Rainier","beerType":"lager","level":"info","message":""}
{"level":"error","message":"__SERVER_ERROR__ server is already off","timestamp":"2017-12-07T05:32:48.703Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T05:41:51.392Z"}
{"level":"info","message":"/api/beers","timestamp":"2017-12-07T05:41:51.393Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[2]++;cov_1aebqmmulz.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_1aebqmmulz.b[0][0]++;cov_1aebqmmulz.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_1aebqmmulz.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[0][1]++;}cov_1aebqmmulz.s[19]++;\n  if (!request.body.brewery) {/* istanbul ignore next */cov_1aebqmmulz.b[1][0]++;cov_1aebqmmulz.s[20]++;\n    sendStatus(response, 400, 'brewery not found'); /* istanbul ignore next */cov_1aebqmmulz.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[1][1]++;}cov_1aebqmmulz.s[22]++;\n  if (!request.body.beerName) {/* istanbul ignore next */cov_1aebqmmulz.b[2][0]++;cov_1aebqmmulz.s[23]++;\n    sendStatus(response, 400, 'beer name not found'); /* istanbul ignore next */cov_1aebqmmulz.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[2][1]++;}cov_1aebqmmulz.s[25]++;\n  if (!request.body.beerType) {/* istanbul ignore next */cov_1aebqmmulz.b[3][0]++;cov_1aebqmmulz.s[26]++;\n    sendStatus(response, 400, 'beer type not found'); /* istanbul ignore next */cov_1aebqmmulz.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[3][1]++;}\n  let beer = /* istanbul ignore next */(cov_1aebqmmulz.s[28]++, new Beer(request.body.brewery, request.body.beerName, request.body.beerType)); /* istanbul ignore next */cov_1aebqmmulz.s[29]++;\n  beers.push(beer); /* istanbul ignore next */cov_1aebqmmulz.s[30]++;\n  sendJSON(response, 200, beer);\n}","timestamp":"2017-12-07T05:41:51.393Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2017-12-07T05:41:51.441Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:41:51.455Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:41:51.457Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[2]++;cov_1aebqmmulz.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_1aebqmmulz.b[0][0]++;cov_1aebqmmulz.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_1aebqmmulz.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[0][1]++;}cov_1aebqmmulz.s[19]++;\n  if (!request.body.brewery) {/* istanbul ignore next */cov_1aebqmmulz.b[1][0]++;cov_1aebqmmulz.s[20]++;\n    sendStatus(response, 400, 'brewery not found'); /* istanbul ignore next */cov_1aebqmmulz.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[1][1]++;}cov_1aebqmmulz.s[22]++;\n  if (!request.body.beerName) {/* istanbul ignore next */cov_1aebqmmulz.b[2][0]++;cov_1aebqmmulz.s[23]++;\n    sendStatus(response, 400, 'beer name not found'); /* istanbul ignore next */cov_1aebqmmulz.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[2][1]++;}cov_1aebqmmulz.s[25]++;\n  if (!request.body.beerType) {/* istanbul ignore next */cov_1aebqmmulz.b[3][0]++;cov_1aebqmmulz.s[26]++;\n    sendStatus(response, 400, 'beer type not found'); /* istanbul ignore next */cov_1aebqmmulz.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[3][1]++;}\n  let beer = /* istanbul ignore next */(cov_1aebqmmulz.s[28]++, new Beer(request.body.brewery, request.body.beerName, request.body.beerType)); /* istanbul ignore next */cov_1aebqmmulz.s[29]++;\n  beers.push(beer); /* istanbul ignore next */cov_1aebqmmulz.s[30]++;\n  sendJSON(response, 200, beer);\n}","timestamp":"2017-12-07T05:41:51.457Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:41:51.457Z"}
{"id":"532e7510-db11-11e7-bbaa-6ff04cb8f2e3","timestamp":"2017-12-07T05:41:51.457Z","brewery":"Rainier Beer","beerName":"Rainier","beerType":"lager","level":"info","message":""}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T18:25:14.918Z"}
{"level":"info","message":"/api/beers","timestamp":"2017-12-07T18:25:14.919Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[2]++;cov_1aebqmmulz.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_1aebqmmulz.b[0][0]++;cov_1aebqmmulz.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_1aebqmmulz.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[0][1]++;}cov_1aebqmmulz.s[19]++;\n  if (!request.body.brewery) {/* istanbul ignore next */cov_1aebqmmulz.b[1][0]++;cov_1aebqmmulz.s[20]++;\n    sendStatus(response, 400, 'brewery not found'); /* istanbul ignore next */cov_1aebqmmulz.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[1][1]++;}cov_1aebqmmulz.s[22]++;\n  if (!request.body.beerName) {/* istanbul ignore next */cov_1aebqmmulz.b[2][0]++;cov_1aebqmmulz.s[23]++;\n    sendStatus(response, 400, 'beer name not found'); /* istanbul ignore next */cov_1aebqmmulz.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[2][1]++;}cov_1aebqmmulz.s[25]++;\n  if (!request.body.beerType) {/* istanbul ignore next */cov_1aebqmmulz.b[3][0]++;cov_1aebqmmulz.s[26]++;\n    sendStatus(response, 400, 'beer type not found'); /* istanbul ignore next */cov_1aebqmmulz.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[3][1]++;}\n  let beer = /* istanbul ignore next */(cov_1aebqmmulz.s[28]++, new Beer(request.body.brewery, request.body.beerName, request.body.beerType)); /* istanbul ignore next */cov_1aebqmmulz.s[29]++;\n  beers.push(beer); /* istanbul ignore next */cov_1aebqmmulz.s[30]++;\n  sendJSON(response, 200, beer);\n}","timestamp":"2017-12-07T18:25:14.919Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2017-12-07T18:25:14.984Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T18:25:15.002Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T18:25:15.004Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[2]++;cov_1aebqmmulz.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_1aebqmmulz.b[0][0]++;cov_1aebqmmulz.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_1aebqmmulz.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[0][1]++;}cov_1aebqmmulz.s[19]++;\n  if (!request.body.brewery) {/* istanbul ignore next */cov_1aebqmmulz.b[1][0]++;cov_1aebqmmulz.s[20]++;\n    sendStatus(response, 400, 'brewery not found'); /* istanbul ignore next */cov_1aebqmmulz.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[1][1]++;}cov_1aebqmmulz.s[22]++;\n  if (!request.body.beerName) {/* istanbul ignore next */cov_1aebqmmulz.b[2][0]++;cov_1aebqmmulz.s[23]++;\n    sendStatus(response, 400, 'beer name not found'); /* istanbul ignore next */cov_1aebqmmulz.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[2][1]++;}cov_1aebqmmulz.s[25]++;\n  if (!request.body.beerType) {/* istanbul ignore next */cov_1aebqmmulz.b[3][0]++;cov_1aebqmmulz.s[26]++;\n    sendStatus(response, 400, 'beer type not found'); /* istanbul ignore next */cov_1aebqmmulz.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[3][1]++;}\n  let beer = /* istanbul ignore next */(cov_1aebqmmulz.s[28]++, new Beer(request.body.brewery, request.body.beerName, request.body.beerType)); /* istanbul ignore next */cov_1aebqmmulz.s[29]++;\n  beers.push(beer); /* istanbul ignore next */cov_1aebqmmulz.s[30]++;\n  sendJSON(response, 200, beer);\n}","timestamp":"2017-12-07T18:25:15.004Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T18:25:15.004Z"}
{"id":"f83913c0-db7b-11e7-85ee-11d884e6f707","timestamp":"2017-12-07T18:25:15.005Z","brewery":"Rainier Beer","beerName":"Rainier","beerType":"lager","level":"info","message":""}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T23:06:53.694Z"}
{"level":"info","message":"/api/beers","timestamp":"2017-12-07T23:06:53.695Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[2]++;cov_1aebqmmulz.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_1aebqmmulz.b[0][0]++;cov_1aebqmmulz.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_1aebqmmulz.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[0][1]++;}cov_1aebqmmulz.s[19]++;\n  if (!request.body.brewery) {/* istanbul ignore next */cov_1aebqmmulz.b[1][0]++;cov_1aebqmmulz.s[20]++;\n    sendStatus(response, 400, 'brewery not found'); /* istanbul ignore next */cov_1aebqmmulz.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[1][1]++;}cov_1aebqmmulz.s[22]++;\n  if (!request.body.beerName) {/* istanbul ignore next */cov_1aebqmmulz.b[2][0]++;cov_1aebqmmulz.s[23]++;\n    sendStatus(response, 400, 'beer name not found'); /* istanbul ignore next */cov_1aebqmmulz.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[2][1]++;}cov_1aebqmmulz.s[25]++;\n  if (!request.body.beerType) {/* istanbul ignore next */cov_1aebqmmulz.b[3][0]++;cov_1aebqmmulz.s[26]++;\n    sendStatus(response, 400, 'beer type not found'); /* istanbul ignore next */cov_1aebqmmulz.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[3][1]++;}\n  let beer = /* istanbul ignore next */(cov_1aebqmmulz.s[28]++, new Beer(request.body.brewery, request.body.beerName, request.body.beerType)); /* istanbul ignore next */cov_1aebqmmulz.s[29]++;\n  beers.push(beer); /* istanbul ignore next */cov_1aebqmmulz.s[30]++;\n  sendJSON(response, 200, beer);\n}","timestamp":"2017-12-07T23:06:53.695Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T23:06:53.695Z"}
{"level":"info","message":"/api/beers","timestamp":"2017-12-07T23:06:53.695Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[3]++;cov_1aebqmmulz.s[32]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_1aebqmmulz.b[4][0]++;\n    let findBeerById = /* istanbul ignore next */(cov_1aebqmmulz.s[33]++, beers.find(beer => {/* istanbul ignore next */cov_1aebqmmulz.f[4]++;cov_1aebqmmulz.s[34]++;return beer.id === request.url.query.id;})); /* istanbul ignore next */cov_1aebqmmulz.s[35]++;\n    if (findBeerById) {/* istanbul ignore next */cov_1aebqmmulz.b[5][0]++;cov_1aebqmmulz.s[36]++;\n      sendJSON(response, 200, findBeerById); /* istanbul ignore next */cov_1aebqmmulz.s[37]++;\n      return;\n    } else {/* istanbul ignore next */cov_1aebqmmulz.b[5][1]++;cov_1aebqmmulz.s[38]++;\n      sendStatus(response, 400, 'beer not found'); /* istanbul ignore next */cov_1aebqmmulz.s[39]++;\n      return;\n    }\n  } else {/* istanbul ignore next */cov_1aebqmmulz.b[4][1]++;cov_1aebqmmulz.s[40]++;\n    sendJSON(response, 200, beers); /* istanbul ignore next */cov_1aebqmmulz.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-07T23:06:53.695Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-07T23:06:53.695Z"}
{"level":"info","message":"/api/beers","timestamp":"2017-12-07T23:06:53.695Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[5]++;cov_1aebqmmulz.s[43]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_1aebqmmulz.b[6][0]++;\n    let filterBeerById = /* istanbul ignore next */(cov_1aebqmmulz.s[44]++, beers.filter(beer => {/* istanbul ignore next */cov_1aebqmmulz.f[6]++;cov_1aebqmmulz.s[45]++;return beer.id === request.url.query.id;})); /* istanbul ignore next */cov_1aebqmmulz.s[46]++;\n    if (filterBeerById) {/* istanbul ignore next */cov_1aebqmmulz.b[7][0]++;cov_1aebqmmulz.s[47]++;\n      sendJSON(response, 200, filterBeerById); /* istanbul ignore next */cov_1aebqmmulz.s[48]++;\n      return;\n    } else {/* istanbul ignore next */cov_1aebqmmulz.b[7][1]++;cov_1aebqmmulz.s[49]++;\n      sendStatus(response, 400, 'beer not found'); /* istanbul ignore next */cov_1aebqmmulz.s[50]++;\n      return;\n    }\n  } else {/* istanbul ignore next */cov_1aebqmmulz.b[6][1]++;cov_1aebqmmulz.s[51]++;\n    sendJSON(response, 200, beers); /* istanbul ignore next */cov_1aebqmmulz.s[52]++;\n    return;\n  }\n}","timestamp":"2017-12-07T23:06:53.695Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2017-12-07T23:06:53.755Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:06:53.771Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:06:53.773Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[2]++;cov_1aebqmmulz.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_1aebqmmulz.b[0][0]++;cov_1aebqmmulz.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_1aebqmmulz.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[0][1]++;}cov_1aebqmmulz.s[19]++;\n  if (!request.body.brewery) {/* istanbul ignore next */cov_1aebqmmulz.b[1][0]++;cov_1aebqmmulz.s[20]++;\n    sendStatus(response, 400, 'brewery not found'); /* istanbul ignore next */cov_1aebqmmulz.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[1][1]++;}cov_1aebqmmulz.s[22]++;\n  if (!request.body.beerName) {/* istanbul ignore next */cov_1aebqmmulz.b[2][0]++;cov_1aebqmmulz.s[23]++;\n    sendStatus(response, 400, 'beer name not found'); /* istanbul ignore next */cov_1aebqmmulz.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[2][1]++;}cov_1aebqmmulz.s[25]++;\n  if (!request.body.beerType) {/* istanbul ignore next */cov_1aebqmmulz.b[3][0]++;cov_1aebqmmulz.s[26]++;\n    sendStatus(response, 400, 'beer type not found'); /* istanbul ignore next */cov_1aebqmmulz.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[3][1]++;}\n  let beer = /* istanbul ignore next */(cov_1aebqmmulz.s[28]++, new Beer(request.body.brewery, request.body.beerName, request.body.beerType)); /* istanbul ignore next */cov_1aebqmmulz.s[29]++;\n  beers.push(beer); /* istanbul ignore next */cov_1aebqmmulz.s[30]++;\n  sendJSON(response, 200, beer);\n}","timestamp":"2017-12-07T23:06:53.773Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T23:06:53.773Z"}
{"id":"50ac97d0-dba3-11e7-8613-0b40d8490d11","timestamp":"2017-12-07T23:06:53.773Z","brewery":"Rainier Beer","beerName":"Rainier","beerType":"lager","level":"info","message":""}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:06:53.783Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:06:53.783Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[3]++;cov_1aebqmmulz.s[32]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_1aebqmmulz.b[4][0]++;\n    let findBeerById = /* istanbul ignore next */(cov_1aebqmmulz.s[33]++, beers.find(beer => {/* istanbul ignore next */cov_1aebqmmulz.f[4]++;cov_1aebqmmulz.s[34]++;return beer.id === request.url.query.id;})); /* istanbul ignore next */cov_1aebqmmulz.s[35]++;\n    if (findBeerById) {/* istanbul ignore next */cov_1aebqmmulz.b[5][0]++;cov_1aebqmmulz.s[36]++;\n      sendJSON(response, 200, findBeerById); /* istanbul ignore next */cov_1aebqmmulz.s[37]++;\n      return;\n    } else {/* istanbul ignore next */cov_1aebqmmulz.b[5][1]++;cov_1aebqmmulz.s[38]++;\n      sendStatus(response, 400, 'beer not found'); /* istanbul ignore next */cov_1aebqmmulz.s[39]++;\n      return;\n    }\n  } else {/* istanbul ignore next */cov_1aebqmmulz.b[4][1]++;cov_1aebqmmulz.s[40]++;\n    sendJSON(response, 200, beers); /* istanbul ignore next */cov_1aebqmmulz.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-07T23:06:53.783Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T23:06:53.783Z"}
[{"id":"50ac97d0-dba3-11e7-8613-0b40d8490d11","timestamp":"2017-12-07T23:06:53.773Z","brewery":"Rainier Beer","beerName":"Rainier","beerType":"lager"}]
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T23:09:17.996Z"}
{"level":"info","message":"/api/beers","timestamp":"2017-12-07T23:09:17.997Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[2]++;cov_1aebqmmulz.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_1aebqmmulz.b[0][0]++;cov_1aebqmmulz.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_1aebqmmulz.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[0][1]++;}cov_1aebqmmulz.s[19]++;\n  if (!request.body.brewery) {/* istanbul ignore next */cov_1aebqmmulz.b[1][0]++;cov_1aebqmmulz.s[20]++;\n    sendStatus(response, 400, 'brewery not found'); /* istanbul ignore next */cov_1aebqmmulz.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[1][1]++;}cov_1aebqmmulz.s[22]++;\n  if (!request.body.beerName) {/* istanbul ignore next */cov_1aebqmmulz.b[2][0]++;cov_1aebqmmulz.s[23]++;\n    sendStatus(response, 400, 'beer name not found'); /* istanbul ignore next */cov_1aebqmmulz.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[2][1]++;}cov_1aebqmmulz.s[25]++;\n  if (!request.body.beerType) {/* istanbul ignore next */cov_1aebqmmulz.b[3][0]++;cov_1aebqmmulz.s[26]++;\n    sendStatus(response, 400, 'beer type not found'); /* istanbul ignore next */cov_1aebqmmulz.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[3][1]++;}\n  let beer = /* istanbul ignore next */(cov_1aebqmmulz.s[28]++, new Beer(request.body.brewery, request.body.beerName, request.body.beerType)); /* istanbul ignore next */cov_1aebqmmulz.s[29]++;\n  beers.push(beer); /* istanbul ignore next */cov_1aebqmmulz.s[30]++;\n  sendJSON(response, 200, beer);\n}","timestamp":"2017-12-07T23:09:17.997Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T23:09:17.997Z"}
{"level":"info","message":"/api/beers","timestamp":"2017-12-07T23:09:17.997Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[3]++;cov_1aebqmmulz.s[32]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_1aebqmmulz.b[4][0]++;\n    let findBeerById = /* istanbul ignore next */(cov_1aebqmmulz.s[33]++, beers.find(beer => {/* istanbul ignore next */cov_1aebqmmulz.f[4]++;cov_1aebqmmulz.s[34]++;return beer.id === request.url.query.id;})); /* istanbul ignore next */cov_1aebqmmulz.s[35]++;\n    if (findBeerById) {/* istanbul ignore next */cov_1aebqmmulz.b[5][0]++;cov_1aebqmmulz.s[36]++;\n      sendJSON(response, 200, findBeerById); /* istanbul ignore next */cov_1aebqmmulz.s[37]++;\n      return;\n    } else {/* istanbul ignore next */cov_1aebqmmulz.b[5][1]++;cov_1aebqmmulz.s[38]++;\n      sendStatus(response, 400, 'beer not found'); /* istanbul ignore next */cov_1aebqmmulz.s[39]++;\n      return;\n    }\n  } else {/* istanbul ignore next */cov_1aebqmmulz.b[4][1]++;cov_1aebqmmulz.s[40]++;\n    sendJSON(response, 200, beers); /* istanbul ignore next */cov_1aebqmmulz.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-07T23:09:17.997Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-07T23:09:17.997Z"}
{"level":"info","message":"/api/beers","timestamp":"2017-12-07T23:09:17.997Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[5]++;cov_1aebqmmulz.s[43]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_1aebqmmulz.b[6][0]++;\n    let filterBeerById = /* istanbul ignore next */(cov_1aebqmmulz.s[44]++, beers.filter(beer => {/* istanbul ignore next */cov_1aebqmmulz.f[6]++;cov_1aebqmmulz.s[45]++;return beer.id === request.url.query.id;})); /* istanbul ignore next */cov_1aebqmmulz.s[46]++;\n    if (filterBeerById) {/* istanbul ignore next */cov_1aebqmmulz.b[7][0]++;cov_1aebqmmulz.s[47]++;\n      sendJSON(response, 200, filterBeerById); /* istanbul ignore next */cov_1aebqmmulz.s[48]++;\n      return;\n    } else {/* istanbul ignore next */cov_1aebqmmulz.b[7][1]++;cov_1aebqmmulz.s[49]++;\n      sendStatus(response, 400, 'beer not found'); /* istanbul ignore next */cov_1aebqmmulz.s[50]++;\n      return;\n    }\n  } else {/* istanbul ignore next */cov_1aebqmmulz.b[6][1]++;cov_1aebqmmulz.s[51]++;\n    sendJSON(response, 200, beers); /* istanbul ignore next */cov_1aebqmmulz.s[52]++;\n    return;\n  }\n}","timestamp":"2017-12-07T23:09:17.997Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2017-12-07T23:09:18.060Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:09:18.075Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:09:18.077Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[2]++;cov_1aebqmmulz.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_1aebqmmulz.b[0][0]++;cov_1aebqmmulz.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_1aebqmmulz.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[0][1]++;}cov_1aebqmmulz.s[19]++;\n  if (!request.body.brewery) {/* istanbul ignore next */cov_1aebqmmulz.b[1][0]++;cov_1aebqmmulz.s[20]++;\n    sendStatus(response, 400, 'brewery not found'); /* istanbul ignore next */cov_1aebqmmulz.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[1][1]++;}cov_1aebqmmulz.s[22]++;\n  if (!request.body.beerName) {/* istanbul ignore next */cov_1aebqmmulz.b[2][0]++;cov_1aebqmmulz.s[23]++;\n    sendStatus(response, 400, 'beer name not found'); /* istanbul ignore next */cov_1aebqmmulz.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[2][1]++;}cov_1aebqmmulz.s[25]++;\n  if (!request.body.beerType) {/* istanbul ignore next */cov_1aebqmmulz.b[3][0]++;cov_1aebqmmulz.s[26]++;\n    sendStatus(response, 400, 'beer type not found'); /* istanbul ignore next */cov_1aebqmmulz.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[3][1]++;}\n  let beer = /* istanbul ignore next */(cov_1aebqmmulz.s[28]++, new Beer(request.body.brewery, request.body.beerName, request.body.beerType)); /* istanbul ignore next */cov_1aebqmmulz.s[29]++;\n  beers.push(beer); /* istanbul ignore next */cov_1aebqmmulz.s[30]++;\n  sendJSON(response, 200, beer);\n}","timestamp":"2017-12-07T23:09:18.077Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T23:09:18.077Z"}
{"id":"a6afa2d0-dba3-11e7-a15f-4fa6697c7066","timestamp":"2017-12-07T23:09:18.077Z","brewery":"Rainier Beer","beerName":"Rainier","beerType":"lager","level":"info","message":""}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:09:18.087Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:09:18.087Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[3]++;cov_1aebqmmulz.s[32]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_1aebqmmulz.b[4][0]++;\n    let findBeerById = /* istanbul ignore next */(cov_1aebqmmulz.s[33]++, beers.find(beer => {/* istanbul ignore next */cov_1aebqmmulz.f[4]++;cov_1aebqmmulz.s[34]++;return beer.id === request.url.query.id;})); /* istanbul ignore next */cov_1aebqmmulz.s[35]++;\n    if (findBeerById) {/* istanbul ignore next */cov_1aebqmmulz.b[5][0]++;cov_1aebqmmulz.s[36]++;\n      sendJSON(response, 200, findBeerById); /* istanbul ignore next */cov_1aebqmmulz.s[37]++;\n      return;\n    } else {/* istanbul ignore next */cov_1aebqmmulz.b[5][1]++;cov_1aebqmmulz.s[38]++;\n      sendStatus(response, 400, 'beer not found'); /* istanbul ignore next */cov_1aebqmmulz.s[39]++;\n      return;\n    }\n  } else {/* istanbul ignore next */cov_1aebqmmulz.b[4][1]++;cov_1aebqmmulz.s[40]++;\n    sendJSON(response, 200, beers); /* istanbul ignore next */cov_1aebqmmulz.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-07T23:09:18.087Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T23:09:18.087Z"}
[{"id":"a6afa2d0-dba3-11e7-a15f-4fa6697c7066","timestamp":"2017-12-07T23:09:18.077Z","brewery":"Rainier Beer","beerName":"Rainier","beerType":"lager"}]
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T23:11:29.375Z"}
{"level":"info","message":"/api/beers","timestamp":"2017-12-07T23:11:29.376Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[2]++;cov_1aebqmmulz.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_1aebqmmulz.b[0][0]++;cov_1aebqmmulz.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_1aebqmmulz.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[0][1]++;}cov_1aebqmmulz.s[19]++;\n  if (!request.body.brewery) {/* istanbul ignore next */cov_1aebqmmulz.b[1][0]++;cov_1aebqmmulz.s[20]++;\n    sendStatus(response, 400, 'brewery not found'); /* istanbul ignore next */cov_1aebqmmulz.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[1][1]++;}cov_1aebqmmulz.s[22]++;\n  if (!request.body.beerName) {/* istanbul ignore next */cov_1aebqmmulz.b[2][0]++;cov_1aebqmmulz.s[23]++;\n    sendStatus(response, 400, 'beer name not found'); /* istanbul ignore next */cov_1aebqmmulz.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[2][1]++;}cov_1aebqmmulz.s[25]++;\n  if (!request.body.beerType) {/* istanbul ignore next */cov_1aebqmmulz.b[3][0]++;cov_1aebqmmulz.s[26]++;\n    sendStatus(response, 400, 'beer type not found'); /* istanbul ignore next */cov_1aebqmmulz.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[3][1]++;}\n  let beer = /* istanbul ignore next */(cov_1aebqmmulz.s[28]++, new Beer(request.body.brewery, request.body.beerName, request.body.beerType)); /* istanbul ignore next */cov_1aebqmmulz.s[29]++;\n  beers.push(beer); /* istanbul ignore next */cov_1aebqmmulz.s[30]++;\n  sendJSON(response, 200, beer);\n}","timestamp":"2017-12-07T23:11:29.376Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T23:11:29.376Z"}
{"level":"info","message":"/api/beers","timestamp":"2017-12-07T23:11:29.376Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[3]++;cov_1aebqmmulz.s[32]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_1aebqmmulz.b[4][0]++;\n    let findBeerById = /* istanbul ignore next */(cov_1aebqmmulz.s[33]++, beers.find(beer => {/* istanbul ignore next */cov_1aebqmmulz.f[4]++;cov_1aebqmmulz.s[34]++;return beer.id === request.url.query.id;})); /* istanbul ignore next */cov_1aebqmmulz.s[35]++;\n    if (findBeerById) {/* istanbul ignore next */cov_1aebqmmulz.b[5][0]++;cov_1aebqmmulz.s[36]++;\n      sendJSON(response, 200, findBeerById); /* istanbul ignore next */cov_1aebqmmulz.s[37]++;\n      return;\n    } else {/* istanbul ignore next */cov_1aebqmmulz.b[5][1]++;cov_1aebqmmulz.s[38]++;\n      sendStatus(response, 400, 'beer not found'); /* istanbul ignore next */cov_1aebqmmulz.s[39]++;\n      return;\n    }\n  } else {/* istanbul ignore next */cov_1aebqmmulz.b[4][1]++;cov_1aebqmmulz.s[40]++;\n    sendJSON(response, 200, beers); /* istanbul ignore next */cov_1aebqmmulz.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-07T23:11:29.376Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-07T23:11:29.376Z"}
{"level":"info","message":"/api/beers","timestamp":"2017-12-07T23:11:29.376Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[5]++;cov_1aebqmmulz.s[43]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_1aebqmmulz.b[6][0]++;\n    let filterBeerById = /* istanbul ignore next */(cov_1aebqmmulz.s[44]++, beers.filter(beer => {/* istanbul ignore next */cov_1aebqmmulz.f[6]++;cov_1aebqmmulz.s[45]++;return beer.id === request.url.query.id;})); /* istanbul ignore next */cov_1aebqmmulz.s[46]++;\n    if (filterBeerById) {/* istanbul ignore next */cov_1aebqmmulz.b[7][0]++;cov_1aebqmmulz.s[47]++;\n      sendJSON(response, 200, filterBeerById); /* istanbul ignore next */cov_1aebqmmulz.s[48]++;\n      return;\n    } else {/* istanbul ignore next */cov_1aebqmmulz.b[7][1]++;cov_1aebqmmulz.s[49]++;\n      sendStatus(response, 400, 'beer not found'); /* istanbul ignore next */cov_1aebqmmulz.s[50]++;\n      return;\n    }\n  } else {/* istanbul ignore next */cov_1aebqmmulz.b[6][1]++;cov_1aebqmmulz.s[51]++;\n    sendJSON(response, 200, beers); /* istanbul ignore next */cov_1aebqmmulz.s[52]++;\n    return;\n  }\n}","timestamp":"2017-12-07T23:11:29.376Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2017-12-07T23:11:29.428Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:11:29.443Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:11:29.444Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[2]++;cov_1aebqmmulz.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_1aebqmmulz.b[0][0]++;cov_1aebqmmulz.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_1aebqmmulz.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[0][1]++;}cov_1aebqmmulz.s[19]++;\n  if (!request.body.brewery) {/* istanbul ignore next */cov_1aebqmmulz.b[1][0]++;cov_1aebqmmulz.s[20]++;\n    sendStatus(response, 400, 'brewery not found'); /* istanbul ignore next */cov_1aebqmmulz.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[1][1]++;}cov_1aebqmmulz.s[22]++;\n  if (!request.body.beerName) {/* istanbul ignore next */cov_1aebqmmulz.b[2][0]++;cov_1aebqmmulz.s[23]++;\n    sendStatus(response, 400, 'beer name not found'); /* istanbul ignore next */cov_1aebqmmulz.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[2][1]++;}cov_1aebqmmulz.s[25]++;\n  if (!request.body.beerType) {/* istanbul ignore next */cov_1aebqmmulz.b[3][0]++;cov_1aebqmmulz.s[26]++;\n    sendStatus(response, 400, 'beer type not found'); /* istanbul ignore next */cov_1aebqmmulz.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[3][1]++;}\n  let beer = /* istanbul ignore next */(cov_1aebqmmulz.s[28]++, new Beer(request.body.brewery, request.body.beerName, request.body.beerType)); /* istanbul ignore next */cov_1aebqmmulz.s[29]++;\n  beers.push(beer); /* istanbul ignore next */cov_1aebqmmulz.s[30]++;\n  sendJSON(response, 200, beer);\n}","timestamp":"2017-12-07T23:11:29.444Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T23:11:29.445Z"}
{"id":"f4fccd50-dba3-11e7-a215-ef3a9bbe467b","timestamp":"2017-12-07T23:11:29.445Z","brewery":"Rainier Beer","beerName":"Rainier","beerType":"lager","level":"info","message":""}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:11:29.455Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:11:29.455Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[3]++;cov_1aebqmmulz.s[32]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_1aebqmmulz.b[4][0]++;\n    let findBeerById = /* istanbul ignore next */(cov_1aebqmmulz.s[33]++, beers.find(beer => {/* istanbul ignore next */cov_1aebqmmulz.f[4]++;cov_1aebqmmulz.s[34]++;return beer.id === request.url.query.id;})); /* istanbul ignore next */cov_1aebqmmulz.s[35]++;\n    if (findBeerById) {/* istanbul ignore next */cov_1aebqmmulz.b[5][0]++;cov_1aebqmmulz.s[36]++;\n      sendJSON(response, 200, findBeerById); /* istanbul ignore next */cov_1aebqmmulz.s[37]++;\n      return;\n    } else {/* istanbul ignore next */cov_1aebqmmulz.b[5][1]++;cov_1aebqmmulz.s[38]++;\n      sendStatus(response, 400, 'beer not found'); /* istanbul ignore next */cov_1aebqmmulz.s[39]++;\n      return;\n    }\n  } else {/* istanbul ignore next */cov_1aebqmmulz.b[4][1]++;cov_1aebqmmulz.s[40]++;\n    sendJSON(response, 200, beers); /* istanbul ignore next */cov_1aebqmmulz.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-07T23:11:29.455Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T23:11:29.455Z"}
[{"id":"f4fccd50-dba3-11e7-a215-ef3a9bbe467b","timestamp":"2017-12-07T23:11:29.445Z","brewery":"Rainier Beer","beerName":"Rainier","beerType":"lager"}]
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T23:12:36.653Z"}
{"level":"info","message":"/api/beers","timestamp":"2017-12-07T23:12:36.654Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[2]++;cov_1aebqmmulz.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_1aebqmmulz.b[0][0]++;cov_1aebqmmulz.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_1aebqmmulz.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[0][1]++;}cov_1aebqmmulz.s[19]++;\n  if (!request.body.brewery) {/* istanbul ignore next */cov_1aebqmmulz.b[1][0]++;cov_1aebqmmulz.s[20]++;\n    sendStatus(response, 400, 'brewery not found'); /* istanbul ignore next */cov_1aebqmmulz.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[1][1]++;}cov_1aebqmmulz.s[22]++;\n  if (!request.body.beerName) {/* istanbul ignore next */cov_1aebqmmulz.b[2][0]++;cov_1aebqmmulz.s[23]++;\n    sendStatus(response, 400, 'beer name not found'); /* istanbul ignore next */cov_1aebqmmulz.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[2][1]++;}cov_1aebqmmulz.s[25]++;\n  if (!request.body.beerType) {/* istanbul ignore next */cov_1aebqmmulz.b[3][0]++;cov_1aebqmmulz.s[26]++;\n    sendStatus(response, 400, 'beer type not found'); /* istanbul ignore next */cov_1aebqmmulz.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[3][1]++;}\n  let beer = /* istanbul ignore next */(cov_1aebqmmulz.s[28]++, new Beer(request.body.brewery, request.body.beerName, request.body.beerType)); /* istanbul ignore next */cov_1aebqmmulz.s[29]++;\n  beers.push(beer); /* istanbul ignore next */cov_1aebqmmulz.s[30]++;\n  sendJSON(response, 200, beer);\n}","timestamp":"2017-12-07T23:12:36.654Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T23:12:36.654Z"}
{"level":"info","message":"/api/beers","timestamp":"2017-12-07T23:12:36.654Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[3]++;cov_1aebqmmulz.s[32]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_1aebqmmulz.b[4][0]++;\n    let findBeerById = /* istanbul ignore next */(cov_1aebqmmulz.s[33]++, beers.find(beer => {/* istanbul ignore next */cov_1aebqmmulz.f[4]++;cov_1aebqmmulz.s[34]++;return beer.id === request.url.query.id;})); /* istanbul ignore next */cov_1aebqmmulz.s[35]++;\n    if (findBeerById) {/* istanbul ignore next */cov_1aebqmmulz.b[5][0]++;cov_1aebqmmulz.s[36]++;\n      sendJSON(response, 200, findBeerById); /* istanbul ignore next */cov_1aebqmmulz.s[37]++;\n      return;\n    } else {/* istanbul ignore next */cov_1aebqmmulz.b[5][1]++;cov_1aebqmmulz.s[38]++;\n      sendStatus(response, 400, 'beer not found'); /* istanbul ignore next */cov_1aebqmmulz.s[39]++;\n      return;\n    }\n  } else {/* istanbul ignore next */cov_1aebqmmulz.b[4][1]++;cov_1aebqmmulz.s[40]++;\n    sendJSON(response, 200, beers); /* istanbul ignore next */cov_1aebqmmulz.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-07T23:12:36.654Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-07T23:12:36.654Z"}
{"level":"info","message":"/api/beers","timestamp":"2017-12-07T23:12:36.654Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[5]++;cov_1aebqmmulz.s[43]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_1aebqmmulz.b[6][0]++;\n    let filterBeerById = /* istanbul ignore next */(cov_1aebqmmulz.s[44]++, beers.filter(beer => {/* istanbul ignore next */cov_1aebqmmulz.f[6]++;cov_1aebqmmulz.s[45]++;return beer.id === request.url.query.id;})); /* istanbul ignore next */cov_1aebqmmulz.s[46]++;\n    if (filterBeerById) {/* istanbul ignore next */cov_1aebqmmulz.b[7][0]++;cov_1aebqmmulz.s[47]++;\n      sendJSON(response, 200, filterBeerById); /* istanbul ignore next */cov_1aebqmmulz.s[48]++;\n      return;\n    } else {/* istanbul ignore next */cov_1aebqmmulz.b[7][1]++;cov_1aebqmmulz.s[49]++;\n      sendStatus(response, 400, 'beer not found'); /* istanbul ignore next */cov_1aebqmmulz.s[50]++;\n      return;\n    }\n  } else {/* istanbul ignore next */cov_1aebqmmulz.b[6][1]++;cov_1aebqmmulz.s[51]++;\n    sendJSON(response, 200, beers); /* istanbul ignore next */cov_1aebqmmulz.s[52]++;\n    return;\n  }\n}","timestamp":"2017-12-07T23:12:36.654Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2017-12-07T23:12:36.714Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:12:36.729Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:12:36.731Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[2]++;cov_1aebqmmulz.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_1aebqmmulz.b[0][0]++;cov_1aebqmmulz.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_1aebqmmulz.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[0][1]++;}cov_1aebqmmulz.s[19]++;\n  if (!request.body.brewery) {/* istanbul ignore next */cov_1aebqmmulz.b[1][0]++;cov_1aebqmmulz.s[20]++;\n    sendStatus(response, 400, 'brewery not found'); /* istanbul ignore next */cov_1aebqmmulz.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[1][1]++;}cov_1aebqmmulz.s[22]++;\n  if (!request.body.beerName) {/* istanbul ignore next */cov_1aebqmmulz.b[2][0]++;cov_1aebqmmulz.s[23]++;\n    sendStatus(response, 400, 'beer name not found'); /* istanbul ignore next */cov_1aebqmmulz.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[2][1]++;}cov_1aebqmmulz.s[25]++;\n  if (!request.body.beerType) {/* istanbul ignore next */cov_1aebqmmulz.b[3][0]++;cov_1aebqmmulz.s[26]++;\n    sendStatus(response, 400, 'beer type not found'); /* istanbul ignore next */cov_1aebqmmulz.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[3][1]++;}\n  let beer = /* istanbul ignore next */(cov_1aebqmmulz.s[28]++, new Beer(request.body.brewery, request.body.beerName, request.body.beerType)); /* istanbul ignore next */cov_1aebqmmulz.s[29]++;\n  beers.push(beer); /* istanbul ignore next */cov_1aebqmmulz.s[30]++;\n  sendJSON(response, 200, beer);\n}","timestamp":"2017-12-07T23:12:36.731Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T23:12:36.731Z"}
{"id":"1d17d4b0-dba4-11e7-94da-095391088592","timestamp":"2017-12-07T23:12:36.731Z","brewery":"Rainier Beer","beerName":"Rainier","beerType":"lager","level":"info","message":""}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:12:36.741Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:12:36.741Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[3]++;cov_1aebqmmulz.s[32]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_1aebqmmulz.b[4][0]++;\n    let findBeerById = /* istanbul ignore next */(cov_1aebqmmulz.s[33]++, beers.find(beer => {/* istanbul ignore next */cov_1aebqmmulz.f[4]++;cov_1aebqmmulz.s[34]++;return beer.id === request.url.query.id;})); /* istanbul ignore next */cov_1aebqmmulz.s[35]++;\n    if (findBeerById) {/* istanbul ignore next */cov_1aebqmmulz.b[5][0]++;cov_1aebqmmulz.s[36]++;\n      sendJSON(response, 200, findBeerById); /* istanbul ignore next */cov_1aebqmmulz.s[37]++;\n      return;\n    } else {/* istanbul ignore next */cov_1aebqmmulz.b[5][1]++;cov_1aebqmmulz.s[38]++;\n      sendStatus(response, 400, 'beer not found'); /* istanbul ignore next */cov_1aebqmmulz.s[39]++;\n      return;\n    }\n  } else {/* istanbul ignore next */cov_1aebqmmulz.b[4][1]++;cov_1aebqmmulz.s[40]++;\n    sendJSON(response, 200, beers); /* istanbul ignore next */cov_1aebqmmulz.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-07T23:12:36.741Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T23:12:36.741Z"}
[{"id":"1d17d4b0-dba4-11e7-94da-095391088592","timestamp":"2017-12-07T23:12:36.731Z","brewery":"Rainier Beer","beerName":"Rainier","beerType":"lager"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:12:36.747Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:12:36.747Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[3]++;cov_1aebqmmulz.s[32]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_1aebqmmulz.b[4][0]++;\n    let findBeerById = /* istanbul ignore next */(cov_1aebqmmulz.s[33]++, beers.find(beer => {/* istanbul ignore next */cov_1aebqmmulz.f[4]++;cov_1aebqmmulz.s[34]++;return beer.id === request.url.query.id;})); /* istanbul ignore next */cov_1aebqmmulz.s[35]++;\n    if (findBeerById) {/* istanbul ignore next */cov_1aebqmmulz.b[5][0]++;cov_1aebqmmulz.s[36]++;\n      sendJSON(response, 200, findBeerById); /* istanbul ignore next */cov_1aebqmmulz.s[37]++;\n      return;\n    } else {/* istanbul ignore next */cov_1aebqmmulz.b[5][1]++;cov_1aebqmmulz.s[38]++;\n      sendStatus(response, 400, 'beer not found'); /* istanbul ignore next */cov_1aebqmmulz.s[39]++;\n      return;\n    }\n  } else {/* istanbul ignore next */cov_1aebqmmulz.b[4][1]++;cov_1aebqmmulz.s[40]++;\n    sendJSON(response, 200, beers); /* istanbul ignore next */cov_1aebqmmulz.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-07T23:12:36.747Z"}
{"level":"info","message":"Responding with a 400 code due to beer not found","timestamp":"2017-12-07T23:12:36.748Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T23:13:25.014Z"}
{"level":"info","message":"/api/beers","timestamp":"2017-12-07T23:13:25.015Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[2]++;cov_1aebqmmulz.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_1aebqmmulz.b[0][0]++;cov_1aebqmmulz.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_1aebqmmulz.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[0][1]++;}cov_1aebqmmulz.s[19]++;\n  if (!request.body.brewery) {/* istanbul ignore next */cov_1aebqmmulz.b[1][0]++;cov_1aebqmmulz.s[20]++;\n    sendStatus(response, 400, 'brewery not found'); /* istanbul ignore next */cov_1aebqmmulz.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[1][1]++;}cov_1aebqmmulz.s[22]++;\n  if (!request.body.beerName) {/* istanbul ignore next */cov_1aebqmmulz.b[2][0]++;cov_1aebqmmulz.s[23]++;\n    sendStatus(response, 400, 'beer name not found'); /* istanbul ignore next */cov_1aebqmmulz.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[2][1]++;}cov_1aebqmmulz.s[25]++;\n  if (!request.body.beerType) {/* istanbul ignore next */cov_1aebqmmulz.b[3][0]++;cov_1aebqmmulz.s[26]++;\n    sendStatus(response, 400, 'beer type not found'); /* istanbul ignore next */cov_1aebqmmulz.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[3][1]++;}\n  let beer = /* istanbul ignore next */(cov_1aebqmmulz.s[28]++, new Beer(request.body.brewery, request.body.beerName, request.body.beerType)); /* istanbul ignore next */cov_1aebqmmulz.s[29]++;\n  beers.push(beer); /* istanbul ignore next */cov_1aebqmmulz.s[30]++;\n  sendJSON(response, 200, beer);\n}","timestamp":"2017-12-07T23:13:25.015Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T23:13:25.015Z"}
{"level":"info","message":"/api/beers","timestamp":"2017-12-07T23:13:25.015Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[3]++;cov_1aebqmmulz.s[32]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_1aebqmmulz.b[4][0]++;\n    let findBeerById = /* istanbul ignore next */(cov_1aebqmmulz.s[33]++, beers.find(beer => {/* istanbul ignore next */cov_1aebqmmulz.f[4]++;cov_1aebqmmulz.s[34]++;return beer.id === request.url.query.id;})); /* istanbul ignore next */cov_1aebqmmulz.s[35]++;\n    if (findBeerById) {/* istanbul ignore next */cov_1aebqmmulz.b[5][0]++;cov_1aebqmmulz.s[36]++;\n      sendJSON(response, 200, findBeerById); /* istanbul ignore next */cov_1aebqmmulz.s[37]++;\n      return;\n    } else {/* istanbul ignore next */cov_1aebqmmulz.b[5][1]++;cov_1aebqmmulz.s[38]++;\n      sendStatus(response, 400, 'beer not found'); /* istanbul ignore next */cov_1aebqmmulz.s[39]++;\n      return;\n    }\n  } else {/* istanbul ignore next */cov_1aebqmmulz.b[4][1]++;cov_1aebqmmulz.s[40]++;\n    sendJSON(response, 200, beers); /* istanbul ignore next */cov_1aebqmmulz.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-07T23:13:25.015Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-07T23:13:25.015Z"}
{"level":"info","message":"/api/beers","timestamp":"2017-12-07T23:13:25.015Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[5]++;cov_1aebqmmulz.s[43]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_1aebqmmulz.b[6][0]++;\n    let filterBeerById = /* istanbul ignore next */(cov_1aebqmmulz.s[44]++, beers.filter(beer => {/* istanbul ignore next */cov_1aebqmmulz.f[6]++;cov_1aebqmmulz.s[45]++;return beer.id === request.url.query.id;})); /* istanbul ignore next */cov_1aebqmmulz.s[46]++;\n    if (filterBeerById) {/* istanbul ignore next */cov_1aebqmmulz.b[7][0]++;cov_1aebqmmulz.s[47]++;\n      sendJSON(response, 200, filterBeerById); /* istanbul ignore next */cov_1aebqmmulz.s[48]++;\n      return;\n    } else {/* istanbul ignore next */cov_1aebqmmulz.b[7][1]++;cov_1aebqmmulz.s[49]++;\n      sendStatus(response, 400, 'beer not found'); /* istanbul ignore next */cov_1aebqmmulz.s[50]++;\n      return;\n    }\n  } else {/* istanbul ignore next */cov_1aebqmmulz.b[6][1]++;cov_1aebqmmulz.s[51]++;\n    sendJSON(response, 200, beers); /* istanbul ignore next */cov_1aebqmmulz.s[52]++;\n    return;\n  }\n}","timestamp":"2017-12-07T23:13:25.015Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2017-12-07T23:13:25.076Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:13:25.092Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:13:25.093Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[2]++;cov_1aebqmmulz.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_1aebqmmulz.b[0][0]++;cov_1aebqmmulz.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_1aebqmmulz.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[0][1]++;}cov_1aebqmmulz.s[19]++;\n  if (!request.body.brewery) {/* istanbul ignore next */cov_1aebqmmulz.b[1][0]++;cov_1aebqmmulz.s[20]++;\n    sendStatus(response, 400, 'brewery not found'); /* istanbul ignore next */cov_1aebqmmulz.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[1][1]++;}cov_1aebqmmulz.s[22]++;\n  if (!request.body.beerName) {/* istanbul ignore next */cov_1aebqmmulz.b[2][0]++;cov_1aebqmmulz.s[23]++;\n    sendStatus(response, 400, 'beer name not found'); /* istanbul ignore next */cov_1aebqmmulz.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[2][1]++;}cov_1aebqmmulz.s[25]++;\n  if (!request.body.beerType) {/* istanbul ignore next */cov_1aebqmmulz.b[3][0]++;cov_1aebqmmulz.s[26]++;\n    sendStatus(response, 400, 'beer type not found'); /* istanbul ignore next */cov_1aebqmmulz.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[3][1]++;}\n  let beer = /* istanbul ignore next */(cov_1aebqmmulz.s[28]++, new Beer(request.body.brewery, request.body.beerName, request.body.beerType)); /* istanbul ignore next */cov_1aebqmmulz.s[29]++;\n  beers.push(beer); /* istanbul ignore next */cov_1aebqmmulz.s[30]++;\n  sendJSON(response, 200, beer);\n}","timestamp":"2017-12-07T23:13:25.093Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T23:13:25.094Z"}
{"id":"39eb7060-dba4-11e7-9725-237b85494152","timestamp":"2017-12-07T23:13:25.094Z","brewery":"Rainier Beer","beerName":"Rainier","beerType":"lager","level":"info","message":""}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:13:25.103Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:13:25.104Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[3]++;cov_1aebqmmulz.s[32]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_1aebqmmulz.b[4][0]++;\n    let findBeerById = /* istanbul ignore next */(cov_1aebqmmulz.s[33]++, beers.find(beer => {/* istanbul ignore next */cov_1aebqmmulz.f[4]++;cov_1aebqmmulz.s[34]++;return beer.id === request.url.query.id;})); /* istanbul ignore next */cov_1aebqmmulz.s[35]++;\n    if (findBeerById) {/* istanbul ignore next */cov_1aebqmmulz.b[5][0]++;cov_1aebqmmulz.s[36]++;\n      sendJSON(response, 200, findBeerById); /* istanbul ignore next */cov_1aebqmmulz.s[37]++;\n      return;\n    } else {/* istanbul ignore next */cov_1aebqmmulz.b[5][1]++;cov_1aebqmmulz.s[38]++;\n      sendStatus(response, 400, 'beer not found'); /* istanbul ignore next */cov_1aebqmmulz.s[39]++;\n      return;\n    }\n  } else {/* istanbul ignore next */cov_1aebqmmulz.b[4][1]++;cov_1aebqmmulz.s[40]++;\n    sendJSON(response, 200, beers); /* istanbul ignore next */cov_1aebqmmulz.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-07T23:13:25.104Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T23:13:25.104Z"}
[{"id":"39eb7060-dba4-11e7-9725-237b85494152","timestamp":"2017-12-07T23:13:25.094Z","brewery":"Rainier Beer","beerName":"Rainier","beerType":"lager"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:13:25.107Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:13:25.108Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[3]++;cov_1aebqmmulz.s[32]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_1aebqmmulz.b[4][0]++;\n    let findBeerById = /* istanbul ignore next */(cov_1aebqmmulz.s[33]++, beers.find(beer => {/* istanbul ignore next */cov_1aebqmmulz.f[4]++;cov_1aebqmmulz.s[34]++;return beer.id === request.url.query.id;})); /* istanbul ignore next */cov_1aebqmmulz.s[35]++;\n    if (findBeerById) {/* istanbul ignore next */cov_1aebqmmulz.b[5][0]++;cov_1aebqmmulz.s[36]++;\n      sendJSON(response, 200, findBeerById); /* istanbul ignore next */cov_1aebqmmulz.s[37]++;\n      return;\n    } else {/* istanbul ignore next */cov_1aebqmmulz.b[5][1]++;cov_1aebqmmulz.s[38]++;\n      sendStatus(response, 400, 'beer not found'); /* istanbul ignore next */cov_1aebqmmulz.s[39]++;\n      return;\n    }\n  } else {/* istanbul ignore next */cov_1aebqmmulz.b[4][1]++;cov_1aebqmmulz.s[40]++;\n    sendJSON(response, 200, beers); /* istanbul ignore next */cov_1aebqmmulz.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-07T23:13:25.108Z"}
{"level":"info","message":"Responding with a 400 code due to beer not found","timestamp":"2017-12-07T23:13:25.108Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T23:27:12.745Z"}
{"level":"info","message":"/api/beers","timestamp":"2017-12-07T23:27:12.745Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[2]++;cov_1aebqmmulz.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_1aebqmmulz.b[0][0]++;cov_1aebqmmulz.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_1aebqmmulz.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[0][1]++;}cov_1aebqmmulz.s[19]++;\n  if (!request.body.brewery) {/* istanbul ignore next */cov_1aebqmmulz.b[1][0]++;cov_1aebqmmulz.s[20]++;\n    sendStatus(response, 400, 'brewery not found'); /* istanbul ignore next */cov_1aebqmmulz.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[1][1]++;}cov_1aebqmmulz.s[22]++;\n  if (!request.body.beerName) {/* istanbul ignore next */cov_1aebqmmulz.b[2][0]++;cov_1aebqmmulz.s[23]++;\n    sendStatus(response, 400, 'beer name not found'); /* istanbul ignore next */cov_1aebqmmulz.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[2][1]++;}cov_1aebqmmulz.s[25]++;\n  if (!request.body.beerType) {/* istanbul ignore next */cov_1aebqmmulz.b[3][0]++;cov_1aebqmmulz.s[26]++;\n    sendStatus(response, 400, 'beer type not found'); /* istanbul ignore next */cov_1aebqmmulz.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[3][1]++;}\n  let beer = /* istanbul ignore next */(cov_1aebqmmulz.s[28]++, new Beer(request.body.brewery, request.body.beerName, request.body.beerType)); /* istanbul ignore next */cov_1aebqmmulz.s[29]++;\n  beers.push(beer); /* istanbul ignore next */cov_1aebqmmulz.s[30]++;\n  sendJSON(response, 200, beer);\n}","timestamp":"2017-12-07T23:27:12.746Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T23:27:12.746Z"}
{"level":"info","message":"/api/beers","timestamp":"2017-12-07T23:27:12.746Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[3]++;cov_1aebqmmulz.s[32]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_1aebqmmulz.b[4][0]++;\n    let findBeerById = /* istanbul ignore next */(cov_1aebqmmulz.s[33]++, beers.find(beer => {/* istanbul ignore next */cov_1aebqmmulz.f[4]++;cov_1aebqmmulz.s[34]++;return beer.id === request.url.query.id;})); /* istanbul ignore next */cov_1aebqmmulz.s[35]++;\n    if (findBeerById) {/* istanbul ignore next */cov_1aebqmmulz.b[5][0]++;cov_1aebqmmulz.s[36]++;\n      sendJSON(response, 200, findBeerById); /* istanbul ignore next */cov_1aebqmmulz.s[37]++;\n      return;\n    } else {/* istanbul ignore next */cov_1aebqmmulz.b[5][1]++;cov_1aebqmmulz.s[38]++;\n      sendStatus(response, 400, 'beer not found'); /* istanbul ignore next */cov_1aebqmmulz.s[39]++;\n      return;\n    }\n  } else {/* istanbul ignore next */cov_1aebqmmulz.b[4][1]++;cov_1aebqmmulz.s[40]++;\n    sendJSON(response, 200, beers); /* istanbul ignore next */cov_1aebqmmulz.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-07T23:27:12.746Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-07T23:27:12.746Z"}
{"level":"info","message":"/api/beers","timestamp":"2017-12-07T23:27:12.746Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[5]++;cov_1aebqmmulz.s[43]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_1aebqmmulz.b[6][0]++;\n    let filterBeerById = /* istanbul ignore next */(cov_1aebqmmulz.s[44]++, beers.filter(beer => {/* istanbul ignore next */cov_1aebqmmulz.f[6]++;cov_1aebqmmulz.s[45]++;return beer.id === request.url.query.id;})); /* istanbul ignore next */cov_1aebqmmulz.s[46]++;\n    if (filterBeerById) {/* istanbul ignore next */cov_1aebqmmulz.b[7][0]++;cov_1aebqmmulz.s[47]++;\n      sendJSON(response, 200, filterBeerById); /* istanbul ignore next */cov_1aebqmmulz.s[48]++;\n      return;\n    } else {/* istanbul ignore next */cov_1aebqmmulz.b[7][1]++;cov_1aebqmmulz.s[49]++;\n      sendStatus(response, 400, 'beer not found'); /* istanbul ignore next */cov_1aebqmmulz.s[50]++;\n      return;\n    }\n  } else {/* istanbul ignore next */cov_1aebqmmulz.b[6][1]++;cov_1aebqmmulz.s[51]++;\n    sendJSON(response, 200, beers); /* istanbul ignore next */cov_1aebqmmulz.s[52]++;\n    return;\n  }\n}","timestamp":"2017-12-07T23:27:12.746Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2017-12-07T23:27:12.806Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:27:12.822Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:27:12.823Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[2]++;cov_1aebqmmulz.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_1aebqmmulz.b[0][0]++;cov_1aebqmmulz.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_1aebqmmulz.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[0][1]++;}cov_1aebqmmulz.s[19]++;\n  if (!request.body.brewery) {/* istanbul ignore next */cov_1aebqmmulz.b[1][0]++;cov_1aebqmmulz.s[20]++;\n    sendStatus(response, 400, 'brewery not found'); /* istanbul ignore next */cov_1aebqmmulz.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[1][1]++;}cov_1aebqmmulz.s[22]++;\n  if (!request.body.beerName) {/* istanbul ignore next */cov_1aebqmmulz.b[2][0]++;cov_1aebqmmulz.s[23]++;\n    sendStatus(response, 400, 'beer name not found'); /* istanbul ignore next */cov_1aebqmmulz.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[2][1]++;}cov_1aebqmmulz.s[25]++;\n  if (!request.body.beerType) {/* istanbul ignore next */cov_1aebqmmulz.b[3][0]++;cov_1aebqmmulz.s[26]++;\n    sendStatus(response, 400, 'beer type not found'); /* istanbul ignore next */cov_1aebqmmulz.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[3][1]++;}\n  let beer = /* istanbul ignore next */(cov_1aebqmmulz.s[28]++, new Beer(request.body.brewery, request.body.beerName, request.body.beerType)); /* istanbul ignore next */cov_1aebqmmulz.s[29]++;\n  beers.push(beer); /* istanbul ignore next */cov_1aebqmmulz.s[30]++;\n  sendJSON(response, 200, beer);\n}","timestamp":"2017-12-07T23:27:12.823Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T23:27:12.824Z"}
{"id":"2748dc70-dba6-11e7-a772-391ef5d53939","timestamp":"2017-12-07T23:27:12.824Z","brewery":"Rainier Beer","beerName":"Rainier","beerType":"lager","level":"info","message":""}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:27:12.833Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:27:12.833Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[3]++;cov_1aebqmmulz.s[32]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_1aebqmmulz.b[4][0]++;\n    let findBeerById = /* istanbul ignore next */(cov_1aebqmmulz.s[33]++, beers.find(beer => {/* istanbul ignore next */cov_1aebqmmulz.f[4]++;cov_1aebqmmulz.s[34]++;return beer.id === request.url.query.id;})); /* istanbul ignore next */cov_1aebqmmulz.s[35]++;\n    if (findBeerById) {/* istanbul ignore next */cov_1aebqmmulz.b[5][0]++;cov_1aebqmmulz.s[36]++;\n      sendJSON(response, 200, findBeerById); /* istanbul ignore next */cov_1aebqmmulz.s[37]++;\n      return;\n    } else {/* istanbul ignore next */cov_1aebqmmulz.b[5][1]++;cov_1aebqmmulz.s[38]++;\n      sendStatus(response, 400, 'beer not found'); /* istanbul ignore next */cov_1aebqmmulz.s[39]++;\n      return;\n    }\n  } else {/* istanbul ignore next */cov_1aebqmmulz.b[4][1]++;cov_1aebqmmulz.s[40]++;\n    sendJSON(response, 200, beers); /* istanbul ignore next */cov_1aebqmmulz.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-07T23:27:12.833Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T23:27:12.834Z"}
[{"id":"2748dc70-dba6-11e7-a772-391ef5d53939","timestamp":"2017-12-07T23:27:12.823Z","brewery":"Rainier Beer","beerName":"Rainier","beerType":"lager"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:27:12.840Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:27:12.840Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[2]++;cov_1aebqmmulz.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_1aebqmmulz.b[0][0]++;cov_1aebqmmulz.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_1aebqmmulz.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[0][1]++;}cov_1aebqmmulz.s[19]++;\n  if (!request.body.brewery) {/* istanbul ignore next */cov_1aebqmmulz.b[1][0]++;cov_1aebqmmulz.s[20]++;\n    sendStatus(response, 400, 'brewery not found'); /* istanbul ignore next */cov_1aebqmmulz.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[1][1]++;}cov_1aebqmmulz.s[22]++;\n  if (!request.body.beerName) {/* istanbul ignore next */cov_1aebqmmulz.b[2][0]++;cov_1aebqmmulz.s[23]++;\n    sendStatus(response, 400, 'beer name not found'); /* istanbul ignore next */cov_1aebqmmulz.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[2][1]++;}cov_1aebqmmulz.s[25]++;\n  if (!request.body.beerType) {/* istanbul ignore next */cov_1aebqmmulz.b[3][0]++;cov_1aebqmmulz.s[26]++;\n    sendStatus(response, 400, 'beer type not found'); /* istanbul ignore next */cov_1aebqmmulz.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[3][1]++;}\n  let beer = /* istanbul ignore next */(cov_1aebqmmulz.s[28]++, new Beer(request.body.brewery, request.body.beerName, request.body.beerType)); /* istanbul ignore next */cov_1aebqmmulz.s[29]++;\n  beers.push(beer); /* istanbul ignore next */cov_1aebqmmulz.s[30]++;\n  sendJSON(response, 200, beer);\n}","timestamp":"2017-12-07T23:27:12.840Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T23:27:12.840Z"}
{"id":"274b7480-dba6-11e7-a772-391ef5d53939","timestamp":"2017-12-07T23:27:12.840Z","brewery":"Lagunitas","beerName":"daytime ale","beerType":"session ale","level":"info","message":""}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:27:12.842Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:27:12.843Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[3]++;cov_1aebqmmulz.s[32]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_1aebqmmulz.b[4][0]++;\n    let findBeerById = /* istanbul ignore next */(cov_1aebqmmulz.s[33]++, beers.find(beer => {/* istanbul ignore next */cov_1aebqmmulz.f[4]++;cov_1aebqmmulz.s[34]++;return beer.id === request.url.query.id;})); /* istanbul ignore next */cov_1aebqmmulz.s[35]++;\n    if (findBeerById) {/* istanbul ignore next */cov_1aebqmmulz.b[5][0]++;cov_1aebqmmulz.s[36]++;\n      sendJSON(response, 200, findBeerById); /* istanbul ignore next */cov_1aebqmmulz.s[37]++;\n      return;\n    } else {/* istanbul ignore next */cov_1aebqmmulz.b[5][1]++;cov_1aebqmmulz.s[38]++;\n      sendStatus(response, 400, 'beer not found'); /* istanbul ignore next */cov_1aebqmmulz.s[39]++;\n      return;\n    }\n  } else {/* istanbul ignore next */cov_1aebqmmulz.b[4][1]++;cov_1aebqmmulz.s[40]++;\n    sendJSON(response, 200, beers); /* istanbul ignore next */cov_1aebqmmulz.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-07T23:27:12.843Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T23:27:12.843Z"}
[{"id":"2748dc70-dba6-11e7-a772-391ef5d53939","timestamp":"2017-12-07T23:27:12.823Z","brewery":"Rainier Beer","beerName":"Rainier","beerType":"lager"},{"id":"274b7480-dba6-11e7-a772-391ef5d53939","timestamp":"2017-12-07T23:27:12.840Z","brewery":"Lagunitas","beerName":"daytime ale","beerType":"session ale"}]
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T23:29:24.485Z"}
{"level":"info","message":"/api/beers","timestamp":"2017-12-07T23:29:24.486Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[2]++;cov_1aebqmmulz.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_1aebqmmulz.b[0][0]++;cov_1aebqmmulz.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_1aebqmmulz.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[0][1]++;}cov_1aebqmmulz.s[19]++;\n  if (!request.body.brewery) {/* istanbul ignore next */cov_1aebqmmulz.b[1][0]++;cov_1aebqmmulz.s[20]++;\n    sendStatus(response, 400, 'brewery not found'); /* istanbul ignore next */cov_1aebqmmulz.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[1][1]++;}cov_1aebqmmulz.s[22]++;\n  if (!request.body.beerName) {/* istanbul ignore next */cov_1aebqmmulz.b[2][0]++;cov_1aebqmmulz.s[23]++;\n    sendStatus(response, 400, 'beer name not found'); /* istanbul ignore next */cov_1aebqmmulz.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[2][1]++;}cov_1aebqmmulz.s[25]++;\n  if (!request.body.beerType) {/* istanbul ignore next */cov_1aebqmmulz.b[3][0]++;cov_1aebqmmulz.s[26]++;\n    sendStatus(response, 400, 'beer type not found'); /* istanbul ignore next */cov_1aebqmmulz.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[3][1]++;}\n  let beer = /* istanbul ignore next */(cov_1aebqmmulz.s[28]++, new Beer(request.body.brewery, request.body.beerName, request.body.beerType)); /* istanbul ignore next */cov_1aebqmmulz.s[29]++;\n  beers.push(beer); /* istanbul ignore next */cov_1aebqmmulz.s[30]++;\n  sendJSON(response, 200, beer);\n}","timestamp":"2017-12-07T23:29:24.486Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T23:29:24.486Z"}
{"level":"info","message":"/api/beers","timestamp":"2017-12-07T23:29:24.486Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[3]++;cov_1aebqmmulz.s[32]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_1aebqmmulz.b[4][0]++;\n    let findBeerById = /* istanbul ignore next */(cov_1aebqmmulz.s[33]++, beers.find(beer => {/* istanbul ignore next */cov_1aebqmmulz.f[4]++;cov_1aebqmmulz.s[34]++;return beer.id === request.url.query.id;})); /* istanbul ignore next */cov_1aebqmmulz.s[35]++;\n    if (findBeerById) {/* istanbul ignore next */cov_1aebqmmulz.b[5][0]++;cov_1aebqmmulz.s[36]++;\n      sendJSON(response, 200, findBeerById); /* istanbul ignore next */cov_1aebqmmulz.s[37]++;\n      return;\n    } else {/* istanbul ignore next */cov_1aebqmmulz.b[5][1]++;cov_1aebqmmulz.s[38]++;\n      sendStatus(response, 400, 'beer not found'); /* istanbul ignore next */cov_1aebqmmulz.s[39]++;\n      return;\n    }\n  } else {/* istanbul ignore next */cov_1aebqmmulz.b[4][1]++;cov_1aebqmmulz.s[40]++;\n    sendJSON(response, 200, beers); /* istanbul ignore next */cov_1aebqmmulz.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-07T23:29:24.486Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-07T23:29:24.486Z"}
{"level":"info","message":"/api/beers","timestamp":"2017-12-07T23:29:24.486Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[5]++;cov_1aebqmmulz.s[43]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_1aebqmmulz.b[6][0]++;\n    let filterBeerById = /* istanbul ignore next */(cov_1aebqmmulz.s[44]++, beers.filter(beer => {/* istanbul ignore next */cov_1aebqmmulz.f[6]++;cov_1aebqmmulz.s[45]++;return beer.id === request.url.query.id;})); /* istanbul ignore next */cov_1aebqmmulz.s[46]++;\n    if (filterBeerById) {/* istanbul ignore next */cov_1aebqmmulz.b[7][0]++;cov_1aebqmmulz.s[47]++;\n      sendJSON(response, 200, filterBeerById); /* istanbul ignore next */cov_1aebqmmulz.s[48]++;\n      return;\n    } else {/* istanbul ignore next */cov_1aebqmmulz.b[7][1]++;cov_1aebqmmulz.s[49]++;\n      sendStatus(response, 400, 'beer not found'); /* istanbul ignore next */cov_1aebqmmulz.s[50]++;\n      return;\n    }\n  } else {/* istanbul ignore next */cov_1aebqmmulz.b[6][1]++;cov_1aebqmmulz.s[51]++;\n    sendJSON(response, 200, beers); /* istanbul ignore next */cov_1aebqmmulz.s[52]++;\n    return;\n  }\n}","timestamp":"2017-12-07T23:29:24.486Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2017-12-07T23:29:24.544Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:29:24.560Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:29:24.561Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[2]++;cov_1aebqmmulz.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_1aebqmmulz.b[0][0]++;cov_1aebqmmulz.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_1aebqmmulz.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[0][1]++;}cov_1aebqmmulz.s[19]++;\n  if (!request.body.brewery) {/* istanbul ignore next */cov_1aebqmmulz.b[1][0]++;cov_1aebqmmulz.s[20]++;\n    sendStatus(response, 400, 'brewery not found'); /* istanbul ignore next */cov_1aebqmmulz.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[1][1]++;}cov_1aebqmmulz.s[22]++;\n  if (!request.body.beerName) {/* istanbul ignore next */cov_1aebqmmulz.b[2][0]++;cov_1aebqmmulz.s[23]++;\n    sendStatus(response, 400, 'beer name not found'); /* istanbul ignore next */cov_1aebqmmulz.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[2][1]++;}cov_1aebqmmulz.s[25]++;\n  if (!request.body.beerType) {/* istanbul ignore next */cov_1aebqmmulz.b[3][0]++;cov_1aebqmmulz.s[26]++;\n    sendStatus(response, 400, 'beer type not found'); /* istanbul ignore next */cov_1aebqmmulz.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[3][1]++;}\n  let beer = /* istanbul ignore next */(cov_1aebqmmulz.s[28]++, new Beer(request.body.brewery, request.body.beerName, request.body.beerType)); /* istanbul ignore next */cov_1aebqmmulz.s[29]++;\n  beers.push(beer); /* istanbul ignore next */cov_1aebqmmulz.s[30]++;\n  sendJSON(response, 200, beer);\n}","timestamp":"2017-12-07T23:29:24.561Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T23:29:24.561Z"}
{"id":"75ce7c10-dba6-11e7-be1c-23e0b7d39b88","timestamp":"2017-12-07T23:29:24.561Z","brewery":"Rainier Beer","beerName":"Rainier","beerType":"lager","level":"info","message":""}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:29:24.571Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:29:24.571Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[3]++;cov_1aebqmmulz.s[32]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_1aebqmmulz.b[4][0]++;\n    let findBeerById = /* istanbul ignore next */(cov_1aebqmmulz.s[33]++, beers.find(beer => {/* istanbul ignore next */cov_1aebqmmulz.f[4]++;cov_1aebqmmulz.s[34]++;return beer.id === request.url.query.id;})); /* istanbul ignore next */cov_1aebqmmulz.s[35]++;\n    if (findBeerById) {/* istanbul ignore next */cov_1aebqmmulz.b[5][0]++;cov_1aebqmmulz.s[36]++;\n      sendJSON(response, 200, findBeerById); /* istanbul ignore next */cov_1aebqmmulz.s[37]++;\n      return;\n    } else {/* istanbul ignore next */cov_1aebqmmulz.b[5][1]++;cov_1aebqmmulz.s[38]++;\n      sendStatus(response, 400, 'beer not found'); /* istanbul ignore next */cov_1aebqmmulz.s[39]++;\n      return;\n    }\n  } else {/* istanbul ignore next */cov_1aebqmmulz.b[4][1]++;cov_1aebqmmulz.s[40]++;\n    sendJSON(response, 200, beers); /* istanbul ignore next */cov_1aebqmmulz.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-07T23:29:24.571Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T23:29:24.571Z"}
[{"id":"75ce7c10-dba6-11e7-be1c-23e0b7d39b88","timestamp":"2017-12-07T23:29:24.561Z","brewery":"Rainier Beer","beerName":"Rainier","beerType":"lager"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:29:24.577Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:29:24.577Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[2]++;cov_1aebqmmulz.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_1aebqmmulz.b[0][0]++;cov_1aebqmmulz.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_1aebqmmulz.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[0][1]++;}cov_1aebqmmulz.s[19]++;\n  if (!request.body.brewery) {/* istanbul ignore next */cov_1aebqmmulz.b[1][0]++;cov_1aebqmmulz.s[20]++;\n    sendStatus(response, 400, 'brewery not found'); /* istanbul ignore next */cov_1aebqmmulz.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[1][1]++;}cov_1aebqmmulz.s[22]++;\n  if (!request.body.beerName) {/* istanbul ignore next */cov_1aebqmmulz.b[2][0]++;cov_1aebqmmulz.s[23]++;\n    sendStatus(response, 400, 'beer name not found'); /* istanbul ignore next */cov_1aebqmmulz.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[2][1]++;}cov_1aebqmmulz.s[25]++;\n  if (!request.body.beerType) {/* istanbul ignore next */cov_1aebqmmulz.b[3][0]++;cov_1aebqmmulz.s[26]++;\n    sendStatus(response, 400, 'beer type not found'); /* istanbul ignore next */cov_1aebqmmulz.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[3][1]++;}\n  let beer = /* istanbul ignore next */(cov_1aebqmmulz.s[28]++, new Beer(request.body.brewery, request.body.beerName, request.body.beerType)); /* istanbul ignore next */cov_1aebqmmulz.s[29]++;\n  beers.push(beer); /* istanbul ignore next */cov_1aebqmmulz.s[30]++;\n  sendJSON(response, 200, beer);\n}","timestamp":"2017-12-07T23:29:24.577Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T23:29:24.577Z"}
{"id":"75d0ed10-dba6-11e7-be1c-23e0b7d39b88","timestamp":"2017-12-07T23:29:24.577Z","brewery":"Lagunitas","beerName":"daytime ale","beerType":"session ale","level":"info","message":""}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:29:24.581Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:29:24.581Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[3]++;cov_1aebqmmulz.s[32]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_1aebqmmulz.b[4][0]++;\n    let findBeerById = /* istanbul ignore next */(cov_1aebqmmulz.s[33]++, beers.find(beer => {/* istanbul ignore next */cov_1aebqmmulz.f[4]++;cov_1aebqmmulz.s[34]++;return beer.id === request.url.query.id;})); /* istanbul ignore next */cov_1aebqmmulz.s[35]++;\n    if (findBeerById) {/* istanbul ignore next */cov_1aebqmmulz.b[5][0]++;cov_1aebqmmulz.s[36]++;\n      sendJSON(response, 200, findBeerById); /* istanbul ignore next */cov_1aebqmmulz.s[37]++;\n      return;\n    } else {/* istanbul ignore next */cov_1aebqmmulz.b[5][1]++;cov_1aebqmmulz.s[38]++;\n      sendStatus(response, 400, 'beer not found'); /* istanbul ignore next */cov_1aebqmmulz.s[39]++;\n      return;\n    }\n  } else {/* istanbul ignore next */cov_1aebqmmulz.b[4][1]++;cov_1aebqmmulz.s[40]++;\n    sendJSON(response, 200, beers); /* istanbul ignore next */cov_1aebqmmulz.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-07T23:29:24.581Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T23:29:24.581Z"}
[{"id":"75ce7c10-dba6-11e7-be1c-23e0b7d39b88","timestamp":"2017-12-07T23:29:24.561Z","brewery":"Rainier Beer","beerName":"Rainier","beerType":"lager"},{"id":"75d0ed10-dba6-11e7-be1c-23e0b7d39b88","timestamp":"2017-12-07T23:29:24.577Z","brewery":"Lagunitas","beerName":"daytime ale","beerType":"session ale"}]
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T23:31:19.963Z"}
{"level":"info","message":"/api/beers","timestamp":"2017-12-07T23:31:19.964Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[2]++;cov_1aebqmmulz.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_1aebqmmulz.b[0][0]++;cov_1aebqmmulz.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_1aebqmmulz.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[0][1]++;}cov_1aebqmmulz.s[19]++;\n  if (!request.body.brewery) {/* istanbul ignore next */cov_1aebqmmulz.b[1][0]++;cov_1aebqmmulz.s[20]++;\n    sendStatus(response, 400, 'brewery not found'); /* istanbul ignore next */cov_1aebqmmulz.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[1][1]++;}cov_1aebqmmulz.s[22]++;\n  if (!request.body.beerName) {/* istanbul ignore next */cov_1aebqmmulz.b[2][0]++;cov_1aebqmmulz.s[23]++;\n    sendStatus(response, 400, 'beer name not found'); /* istanbul ignore next */cov_1aebqmmulz.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[2][1]++;}cov_1aebqmmulz.s[25]++;\n  if (!request.body.beerType) {/* istanbul ignore next */cov_1aebqmmulz.b[3][0]++;cov_1aebqmmulz.s[26]++;\n    sendStatus(response, 400, 'beer type not found'); /* istanbul ignore next */cov_1aebqmmulz.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[3][1]++;}\n  let beer = /* istanbul ignore next */(cov_1aebqmmulz.s[28]++, new Beer(request.body.brewery, request.body.beerName, request.body.beerType)); /* istanbul ignore next */cov_1aebqmmulz.s[29]++;\n  beers.push(beer); /* istanbul ignore next */cov_1aebqmmulz.s[30]++;\n  sendJSON(response, 200, beer);\n}","timestamp":"2017-12-07T23:31:19.964Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T23:31:19.964Z"}
{"level":"info","message":"/api/beers","timestamp":"2017-12-07T23:31:19.964Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[3]++;cov_1aebqmmulz.s[32]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_1aebqmmulz.b[4][0]++;\n    let findBeerById = /* istanbul ignore next */(cov_1aebqmmulz.s[33]++, beers.find(beer => {/* istanbul ignore next */cov_1aebqmmulz.f[4]++;cov_1aebqmmulz.s[34]++;return beer.id === request.url.query.id;})); /* istanbul ignore next */cov_1aebqmmulz.s[35]++;\n    if (findBeerById) {/* istanbul ignore next */cov_1aebqmmulz.b[5][0]++;cov_1aebqmmulz.s[36]++;\n      sendJSON(response, 200, findBeerById); /* istanbul ignore next */cov_1aebqmmulz.s[37]++;\n      return;\n    } else {/* istanbul ignore next */cov_1aebqmmulz.b[5][1]++;cov_1aebqmmulz.s[38]++;\n      sendStatus(response, 400, 'beer not found'); /* istanbul ignore next */cov_1aebqmmulz.s[39]++;\n      return;\n    }\n  } else {/* istanbul ignore next */cov_1aebqmmulz.b[4][1]++;cov_1aebqmmulz.s[40]++;\n    sendJSON(response, 200, beers); /* istanbul ignore next */cov_1aebqmmulz.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-07T23:31:19.964Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-07T23:31:19.964Z"}
{"level":"info","message":"/api/beers","timestamp":"2017-12-07T23:31:19.964Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[5]++;cov_1aebqmmulz.s[43]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_1aebqmmulz.b[6][0]++;\n    let filterBeerById = /* istanbul ignore next */(cov_1aebqmmulz.s[44]++, beers.filter(beer => {/* istanbul ignore next */cov_1aebqmmulz.f[6]++;cov_1aebqmmulz.s[45]++;return beer.id === request.url.query.id;})); /* istanbul ignore next */cov_1aebqmmulz.s[46]++;\n    if (filterBeerById) {/* istanbul ignore next */cov_1aebqmmulz.b[7][0]++;cov_1aebqmmulz.s[47]++;\n      sendJSON(response, 200, filterBeerById); /* istanbul ignore next */cov_1aebqmmulz.s[48]++;\n      return;\n    } else {/* istanbul ignore next */cov_1aebqmmulz.b[7][1]++;cov_1aebqmmulz.s[49]++;\n      sendStatus(response, 400, 'beer not found'); /* istanbul ignore next */cov_1aebqmmulz.s[50]++;\n      return;\n    }\n  } else {/* istanbul ignore next */cov_1aebqmmulz.b[6][1]++;cov_1aebqmmulz.s[51]++;\n    sendJSON(response, 200, beers); /* istanbul ignore next */cov_1aebqmmulz.s[52]++;\n    return;\n  }\n}","timestamp":"2017-12-07T23:31:19.964Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2017-12-07T23:31:20.025Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:31:20.043Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:31:20.044Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[2]++;cov_1aebqmmulz.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_1aebqmmulz.b[0][0]++;cov_1aebqmmulz.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_1aebqmmulz.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[0][1]++;}cov_1aebqmmulz.s[19]++;\n  if (!request.body.brewery) {/* istanbul ignore next */cov_1aebqmmulz.b[1][0]++;cov_1aebqmmulz.s[20]++;\n    sendStatus(response, 400, 'brewery not found'); /* istanbul ignore next */cov_1aebqmmulz.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[1][1]++;}cov_1aebqmmulz.s[22]++;\n  if (!request.body.beerName) {/* istanbul ignore next */cov_1aebqmmulz.b[2][0]++;cov_1aebqmmulz.s[23]++;\n    sendStatus(response, 400, 'beer name not found'); /* istanbul ignore next */cov_1aebqmmulz.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[2][1]++;}cov_1aebqmmulz.s[25]++;\n  if (!request.body.beerType) {/* istanbul ignore next */cov_1aebqmmulz.b[3][0]++;cov_1aebqmmulz.s[26]++;\n    sendStatus(response, 400, 'beer type not found'); /* istanbul ignore next */cov_1aebqmmulz.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[3][1]++;}\n  let beer = /* istanbul ignore next */(cov_1aebqmmulz.s[28]++, new Beer(request.body.brewery, request.body.beerName, request.body.beerType)); /* istanbul ignore next */cov_1aebqmmulz.s[29]++;\n  beers.push(beer); /* istanbul ignore next */cov_1aebqmmulz.s[30]++;\n  sendJSON(response, 200, beer);\n}","timestamp":"2017-12-07T23:31:20.044Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T23:31:20.045Z"}
{"id":"baa3cac0-dba6-11e7-bd69-0db376d83ac9","timestamp":"2017-12-07T23:31:20.045Z","brewery":"Rainier Beer","beerName":"Rainier","beerType":"lager","level":"info","message":""}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:31:20.054Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:31:20.054Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[3]++;cov_1aebqmmulz.s[32]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_1aebqmmulz.b[4][0]++;\n    let findBeerById = /* istanbul ignore next */(cov_1aebqmmulz.s[33]++, beers.find(beer => {/* istanbul ignore next */cov_1aebqmmulz.f[4]++;cov_1aebqmmulz.s[34]++;return beer.id === request.url.query.id;})); /* istanbul ignore next */cov_1aebqmmulz.s[35]++;\n    if (findBeerById) {/* istanbul ignore next */cov_1aebqmmulz.b[5][0]++;cov_1aebqmmulz.s[36]++;\n      sendJSON(response, 200, findBeerById); /* istanbul ignore next */cov_1aebqmmulz.s[37]++;\n      return;\n    } else {/* istanbul ignore next */cov_1aebqmmulz.b[5][1]++;cov_1aebqmmulz.s[38]++;\n      sendStatus(response, 400, 'beer not found'); /* istanbul ignore next */cov_1aebqmmulz.s[39]++;\n      return;\n    }\n  } else {/* istanbul ignore next */cov_1aebqmmulz.b[4][1]++;cov_1aebqmmulz.s[40]++;\n    sendJSON(response, 200, beers); /* istanbul ignore next */cov_1aebqmmulz.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-07T23:31:20.054Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T23:31:20.054Z"}
[{"id":"baa3cac0-dba6-11e7-bd69-0db376d83ac9","timestamp":"2017-12-07T23:31:20.044Z","brewery":"Rainier Beer","beerName":"Rainier","beerType":"lager"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:31:20.060Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:31:20.060Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[2]++;cov_1aebqmmulz.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_1aebqmmulz.b[0][0]++;cov_1aebqmmulz.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_1aebqmmulz.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[0][1]++;}cov_1aebqmmulz.s[19]++;\n  if (!request.body.brewery) {/* istanbul ignore next */cov_1aebqmmulz.b[1][0]++;cov_1aebqmmulz.s[20]++;\n    sendStatus(response, 400, 'brewery not found'); /* istanbul ignore next */cov_1aebqmmulz.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[1][1]++;}cov_1aebqmmulz.s[22]++;\n  if (!request.body.beerName) {/* istanbul ignore next */cov_1aebqmmulz.b[2][0]++;cov_1aebqmmulz.s[23]++;\n    sendStatus(response, 400, 'beer name not found'); /* istanbul ignore next */cov_1aebqmmulz.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[2][1]++;}cov_1aebqmmulz.s[25]++;\n  if (!request.body.beerType) {/* istanbul ignore next */cov_1aebqmmulz.b[3][0]++;cov_1aebqmmulz.s[26]++;\n    sendStatus(response, 400, 'beer type not found'); /* istanbul ignore next */cov_1aebqmmulz.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[3][1]++;}\n  let beer = /* istanbul ignore next */(cov_1aebqmmulz.s[28]++, new Beer(request.body.brewery, request.body.beerName, request.body.beerType)); /* istanbul ignore next */cov_1aebqmmulz.s[29]++;\n  beers.push(beer); /* istanbul ignore next */cov_1aebqmmulz.s[30]++;\n  sendJSON(response, 200, beer);\n}","timestamp":"2017-12-07T23:31:20.060Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T23:31:20.061Z"}
{"id":"baa662d0-dba6-11e7-bd69-0db376d83ac9","timestamp":"2017-12-07T23:31:20.061Z","brewery":"Lagunitas","beerName":"daytime ale","beerType":"session ale","level":"info","message":""}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T23:37:09.851Z"}
{"level":"info","message":"/api/beers","timestamp":"2017-12-07T23:37:09.852Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[2]++;cov_1aebqmmulz.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_1aebqmmulz.b[0][0]++;cov_1aebqmmulz.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_1aebqmmulz.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[0][1]++;}cov_1aebqmmulz.s[19]++;\n  if (!request.body.brewery) {/* istanbul ignore next */cov_1aebqmmulz.b[1][0]++;cov_1aebqmmulz.s[20]++;\n    sendStatus(response, 400, 'brewery not found'); /* istanbul ignore next */cov_1aebqmmulz.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[1][1]++;}cov_1aebqmmulz.s[22]++;\n  if (!request.body.beerName) {/* istanbul ignore next */cov_1aebqmmulz.b[2][0]++;cov_1aebqmmulz.s[23]++;\n    sendStatus(response, 400, 'beer name not found'); /* istanbul ignore next */cov_1aebqmmulz.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[2][1]++;}cov_1aebqmmulz.s[25]++;\n  if (!request.body.beerType) {/* istanbul ignore next */cov_1aebqmmulz.b[3][0]++;cov_1aebqmmulz.s[26]++;\n    sendStatus(response, 400, 'beer type not found'); /* istanbul ignore next */cov_1aebqmmulz.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[3][1]++;}\n  let beer = /* istanbul ignore next */(cov_1aebqmmulz.s[28]++, new Beer(request.body.brewery, request.body.beerName, request.body.beerType)); /* istanbul ignore next */cov_1aebqmmulz.s[29]++;\n  beers.push(beer); /* istanbul ignore next */cov_1aebqmmulz.s[30]++;\n  sendJSON(response, 200, beer);\n}","timestamp":"2017-12-07T23:37:09.852Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T23:37:09.852Z"}
{"level":"info","message":"/api/beers","timestamp":"2017-12-07T23:37:09.852Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[3]++;cov_1aebqmmulz.s[32]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_1aebqmmulz.b[4][0]++;\n    let findBeerById = /* istanbul ignore next */(cov_1aebqmmulz.s[33]++, beers.find(beer => {/* istanbul ignore next */cov_1aebqmmulz.f[4]++;cov_1aebqmmulz.s[34]++;return beer.id === request.url.query.id;})); /* istanbul ignore next */cov_1aebqmmulz.s[35]++;\n    if (findBeerById) {/* istanbul ignore next */cov_1aebqmmulz.b[5][0]++;cov_1aebqmmulz.s[36]++;\n      sendJSON(response, 200, findBeerById); /* istanbul ignore next */cov_1aebqmmulz.s[37]++;\n      return;\n    } else {/* istanbul ignore next */cov_1aebqmmulz.b[5][1]++;cov_1aebqmmulz.s[38]++;\n      sendStatus(response, 400, 'beer not found'); /* istanbul ignore next */cov_1aebqmmulz.s[39]++;\n      return;\n    }\n  } else {/* istanbul ignore next */cov_1aebqmmulz.b[4][1]++;cov_1aebqmmulz.s[40]++;\n    sendJSON(response, 200, beers); /* istanbul ignore next */cov_1aebqmmulz.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-07T23:37:09.852Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-07T23:37:09.852Z"}
{"level":"info","message":"/api/beers","timestamp":"2017-12-07T23:37:09.852Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[5]++;cov_1aebqmmulz.s[43]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_1aebqmmulz.b[6][0]++;\n    let filterBeerById = /* istanbul ignore next */(cov_1aebqmmulz.s[44]++, beers.filter(beer => {/* istanbul ignore next */cov_1aebqmmulz.f[6]++;cov_1aebqmmulz.s[45]++;return beer.id === request.url.query.id;})); /* istanbul ignore next */cov_1aebqmmulz.s[46]++;\n    if (filterBeerById) {/* istanbul ignore next */cov_1aebqmmulz.b[7][0]++;cov_1aebqmmulz.s[47]++;\n      sendJSON(response, 200, filterBeerById); /* istanbul ignore next */cov_1aebqmmulz.s[48]++;\n      return;\n    } else {/* istanbul ignore next */cov_1aebqmmulz.b[7][1]++;cov_1aebqmmulz.s[49]++;\n      sendStatus(response, 400, 'beer not found'); /* istanbul ignore next */cov_1aebqmmulz.s[50]++;\n      return;\n    }\n  } else {/* istanbul ignore next */cov_1aebqmmulz.b[6][1]++;cov_1aebqmmulz.s[51]++;\n    sendJSON(response, 200, beers); /* istanbul ignore next */cov_1aebqmmulz.s[52]++;\n    return;\n  }\n}","timestamp":"2017-12-07T23:37:09.852Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2017-12-07T23:37:09.912Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:37:09.929Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:37:09.930Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[2]++;cov_1aebqmmulz.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_1aebqmmulz.b[0][0]++;cov_1aebqmmulz.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_1aebqmmulz.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[0][1]++;}cov_1aebqmmulz.s[19]++;\n  if (!request.body.brewery) {/* istanbul ignore next */cov_1aebqmmulz.b[1][0]++;cov_1aebqmmulz.s[20]++;\n    sendStatus(response, 400, 'brewery not found'); /* istanbul ignore next */cov_1aebqmmulz.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[1][1]++;}cov_1aebqmmulz.s[22]++;\n  if (!request.body.beerName) {/* istanbul ignore next */cov_1aebqmmulz.b[2][0]++;cov_1aebqmmulz.s[23]++;\n    sendStatus(response, 400, 'beer name not found'); /* istanbul ignore next */cov_1aebqmmulz.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[2][1]++;}cov_1aebqmmulz.s[25]++;\n  if (!request.body.beerType) {/* istanbul ignore next */cov_1aebqmmulz.b[3][0]++;cov_1aebqmmulz.s[26]++;\n    sendStatus(response, 400, 'beer type not found'); /* istanbul ignore next */cov_1aebqmmulz.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[3][1]++;}\n  let beer = /* istanbul ignore next */(cov_1aebqmmulz.s[28]++, new Beer(request.body.brewery, request.body.beerName, request.body.beerType)); /* istanbul ignore next */cov_1aebqmmulz.s[29]++;\n  beers.push(beer); /* istanbul ignore next */cov_1aebqmmulz.s[30]++;\n  sendJSON(response, 200, beer);\n}","timestamp":"2017-12-07T23:37:09.930Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T23:37:09.931Z"}
{"id":"8b3028a0-dba7-11e7-9fd1-655f4a05b7bc","timestamp":"2017-12-07T23:37:09.931Z","brewery":"Rainier Beer","beerName":"Rainier","beerType":"lager","level":"info","message":""}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:37:09.940Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:37:09.940Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[3]++;cov_1aebqmmulz.s[32]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_1aebqmmulz.b[4][0]++;\n    let findBeerById = /* istanbul ignore next */(cov_1aebqmmulz.s[33]++, beers.find(beer => {/* istanbul ignore next */cov_1aebqmmulz.f[4]++;cov_1aebqmmulz.s[34]++;return beer.id === request.url.query.id;})); /* istanbul ignore next */cov_1aebqmmulz.s[35]++;\n    if (findBeerById) {/* istanbul ignore next */cov_1aebqmmulz.b[5][0]++;cov_1aebqmmulz.s[36]++;\n      sendJSON(response, 200, findBeerById); /* istanbul ignore next */cov_1aebqmmulz.s[37]++;\n      return;\n    } else {/* istanbul ignore next */cov_1aebqmmulz.b[5][1]++;cov_1aebqmmulz.s[38]++;\n      sendStatus(response, 400, 'beer not found'); /* istanbul ignore next */cov_1aebqmmulz.s[39]++;\n      return;\n    }\n  } else {/* istanbul ignore next */cov_1aebqmmulz.b[4][1]++;cov_1aebqmmulz.s[40]++;\n    sendJSON(response, 200, beers); /* istanbul ignore next */cov_1aebqmmulz.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-07T23:37:09.940Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T23:37:09.940Z"}
[{"id":"8b3028a0-dba7-11e7-9fd1-655f4a05b7bc","timestamp":"2017-12-07T23:37:09.931Z","brewery":"Rainier Beer","beerName":"Rainier","beerType":"lager"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:37:09.945Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:37:09.946Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[2]++;cov_1aebqmmulz.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_1aebqmmulz.b[0][0]++;cov_1aebqmmulz.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_1aebqmmulz.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[0][1]++;}cov_1aebqmmulz.s[19]++;\n  if (!request.body.brewery) {/* istanbul ignore next */cov_1aebqmmulz.b[1][0]++;cov_1aebqmmulz.s[20]++;\n    sendStatus(response, 400, 'brewery not found'); /* istanbul ignore next */cov_1aebqmmulz.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[1][1]++;}cov_1aebqmmulz.s[22]++;\n  if (!request.body.beerName) {/* istanbul ignore next */cov_1aebqmmulz.b[2][0]++;cov_1aebqmmulz.s[23]++;\n    sendStatus(response, 400, 'beer name not found'); /* istanbul ignore next */cov_1aebqmmulz.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[2][1]++;}cov_1aebqmmulz.s[25]++;\n  if (!request.body.beerType) {/* istanbul ignore next */cov_1aebqmmulz.b[3][0]++;cov_1aebqmmulz.s[26]++;\n    sendStatus(response, 400, 'beer type not found'); /* istanbul ignore next */cov_1aebqmmulz.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[3][1]++;}\n  let beer = /* istanbul ignore next */(cov_1aebqmmulz.s[28]++, new Beer(request.body.brewery, request.body.beerName, request.body.beerType)); /* istanbul ignore next */cov_1aebqmmulz.s[29]++;\n  beers.push(beer); /* istanbul ignore next */cov_1aebqmmulz.s[30]++;\n  sendJSON(response, 200, beer);\n}","timestamp":"2017-12-07T23:37:09.946Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T23:37:09.946Z"}
{"id":"8b3299a0-dba7-11e7-9fd1-655f4a05b7bc","timestamp":"2017-12-07T23:37:09.946Z","brewery":"Lagunitas","beerName":"daytime ale","beerType":"session ale","level":"info","message":""}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:37:09.949Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:37:09.949Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[3]++;cov_1aebqmmulz.s[32]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_1aebqmmulz.b[4][0]++;\n    let findBeerById = /* istanbul ignore next */(cov_1aebqmmulz.s[33]++, beers.find(beer => {/* istanbul ignore next */cov_1aebqmmulz.f[4]++;cov_1aebqmmulz.s[34]++;return beer.id === request.url.query.id;})); /* istanbul ignore next */cov_1aebqmmulz.s[35]++;\n    if (findBeerById) {/* istanbul ignore next */cov_1aebqmmulz.b[5][0]++;cov_1aebqmmulz.s[36]++;\n      sendJSON(response, 200, findBeerById); /* istanbul ignore next */cov_1aebqmmulz.s[37]++;\n      return;\n    } else {/* istanbul ignore next */cov_1aebqmmulz.b[5][1]++;cov_1aebqmmulz.s[38]++;\n      sendStatus(response, 400, 'beer not found'); /* istanbul ignore next */cov_1aebqmmulz.s[39]++;\n      return;\n    }\n  } else {/* istanbul ignore next */cov_1aebqmmulz.b[4][1]++;cov_1aebqmmulz.s[40]++;\n    sendJSON(response, 200, beers); /* istanbul ignore next */cov_1aebqmmulz.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-07T23:37:09.949Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T23:37:09.949Z"}
[{"id":"8b3028a0-dba7-11e7-9fd1-655f4a05b7bc","timestamp":"2017-12-07T23:37:09.931Z","brewery":"Rainier Beer","beerName":"Rainier","beerType":"lager"},{"id":"8b3299a0-dba7-11e7-9fd1-655f4a05b7bc","timestamp":"2017-12-07T23:37:09.946Z","brewery":"Lagunitas","beerName":"daytime ale","beerType":"session ale"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:37:09.952Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:37:09.952Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[3]++;cov_1aebqmmulz.s[32]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_1aebqmmulz.b[4][0]++;\n    let findBeerById = /* istanbul ignore next */(cov_1aebqmmulz.s[33]++, beers.find(beer => {/* istanbul ignore next */cov_1aebqmmulz.f[4]++;cov_1aebqmmulz.s[34]++;return beer.id === request.url.query.id;})); /* istanbul ignore next */cov_1aebqmmulz.s[35]++;\n    if (findBeerById) {/* istanbul ignore next */cov_1aebqmmulz.b[5][0]++;cov_1aebqmmulz.s[36]++;\n      sendJSON(response, 200, findBeerById); /* istanbul ignore next */cov_1aebqmmulz.s[37]++;\n      return;\n    } else {/* istanbul ignore next */cov_1aebqmmulz.b[5][1]++;cov_1aebqmmulz.s[38]++;\n      sendStatus(response, 400, 'beer not found'); /* istanbul ignore next */cov_1aebqmmulz.s[39]++;\n      return;\n    }\n  } else {/* istanbul ignore next */cov_1aebqmmulz.b[4][1]++;cov_1aebqmmulz.s[40]++;\n    sendJSON(response, 200, beers); /* istanbul ignore next */cov_1aebqmmulz.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-07T23:37:09.952Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T23:37:09.952Z"}
[{"id":"8b3028a0-dba7-11e7-9fd1-655f4a05b7bc","timestamp":"2017-12-07T23:37:09.931Z","brewery":"Rainier Beer","beerName":"Rainier","beerType":"lager"},{"id":"8b3299a0-dba7-11e7-9fd1-655f4a05b7bc","timestamp":"2017-12-07T23:37:09.946Z","brewery":"Lagunitas","beerName":"daytime ale","beerType":"session ale"}]
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T23:40:05.907Z"}
{"level":"info","message":"/api/beers","timestamp":"2017-12-07T23:40:05.908Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[2]++;cov_1aebqmmulz.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_1aebqmmulz.b[0][0]++;cov_1aebqmmulz.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_1aebqmmulz.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[0][1]++;}cov_1aebqmmulz.s[19]++;\n  if (!request.body.brewery) {/* istanbul ignore next */cov_1aebqmmulz.b[1][0]++;cov_1aebqmmulz.s[20]++;\n    sendStatus(response, 400, 'brewery not found'); /* istanbul ignore next */cov_1aebqmmulz.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[1][1]++;}cov_1aebqmmulz.s[22]++;\n  if (!request.body.beerName) {/* istanbul ignore next */cov_1aebqmmulz.b[2][0]++;cov_1aebqmmulz.s[23]++;\n    sendStatus(response, 400, 'beer name not found'); /* istanbul ignore next */cov_1aebqmmulz.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[2][1]++;}cov_1aebqmmulz.s[25]++;\n  if (!request.body.beerType) {/* istanbul ignore next */cov_1aebqmmulz.b[3][0]++;cov_1aebqmmulz.s[26]++;\n    sendStatus(response, 400, 'beer type not found'); /* istanbul ignore next */cov_1aebqmmulz.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[3][1]++;}\n  let beer = /* istanbul ignore next */(cov_1aebqmmulz.s[28]++, new Beer(request.body.brewery, request.body.beerName, request.body.beerType)); /* istanbul ignore next */cov_1aebqmmulz.s[29]++;\n  beers.push(beer); /* istanbul ignore next */cov_1aebqmmulz.s[30]++;\n  sendJSON(response, 200, beer);\n}","timestamp":"2017-12-07T23:40:05.908Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T23:40:05.908Z"}
{"level":"info","message":"/api/beers","timestamp":"2017-12-07T23:40:05.908Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[3]++;cov_1aebqmmulz.s[32]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_1aebqmmulz.b[4][0]++;\n    let findBeerById = /* istanbul ignore next */(cov_1aebqmmulz.s[33]++, beers.find(beer => {/* istanbul ignore next */cov_1aebqmmulz.f[4]++;cov_1aebqmmulz.s[34]++;return beer.id === request.url.query.id;})); /* istanbul ignore next */cov_1aebqmmulz.s[35]++;\n    if (findBeerById) {/* istanbul ignore next */cov_1aebqmmulz.b[5][0]++;cov_1aebqmmulz.s[36]++;\n      sendJSON(response, 200, findBeerById); /* istanbul ignore next */cov_1aebqmmulz.s[37]++;\n      return;\n    } else {/* istanbul ignore next */cov_1aebqmmulz.b[5][1]++;cov_1aebqmmulz.s[38]++;\n      sendStatus(response, 400, 'beer not found'); /* istanbul ignore next */cov_1aebqmmulz.s[39]++;\n      return;\n    }\n  } else {/* istanbul ignore next */cov_1aebqmmulz.b[4][1]++;cov_1aebqmmulz.s[40]++;\n    sendJSON(response, 200, beers); /* istanbul ignore next */cov_1aebqmmulz.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-07T23:40:05.908Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-07T23:40:05.908Z"}
{"level":"info","message":"/api/beers","timestamp":"2017-12-07T23:40:05.908Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[5]++;cov_1aebqmmulz.s[43]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_1aebqmmulz.b[6][0]++;\n    let filterBeerById = /* istanbul ignore next */(cov_1aebqmmulz.s[44]++, beers.filter(beer => {/* istanbul ignore next */cov_1aebqmmulz.f[6]++;cov_1aebqmmulz.s[45]++;return beer.id === request.url.query.id;})); /* istanbul ignore next */cov_1aebqmmulz.s[46]++;\n    if (filterBeerById) {/* istanbul ignore next */cov_1aebqmmulz.b[7][0]++;cov_1aebqmmulz.s[47]++;\n      sendJSON(response, 200, filterBeerById); /* istanbul ignore next */cov_1aebqmmulz.s[48]++;\n      return;\n    } else {/* istanbul ignore next */cov_1aebqmmulz.b[7][1]++;cov_1aebqmmulz.s[49]++;\n      sendStatus(response, 400, 'beer not found'); /* istanbul ignore next */cov_1aebqmmulz.s[50]++;\n      return;\n    }\n  } else {/* istanbul ignore next */cov_1aebqmmulz.b[6][1]++;cov_1aebqmmulz.s[51]++;\n    sendJSON(response, 200, beers); /* istanbul ignore next */cov_1aebqmmulz.s[52]++;\n    return;\n  }\n}","timestamp":"2017-12-07T23:40:05.908Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2017-12-07T23:40:05.982Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:40:05.999Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:40:06.000Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[2]++;cov_1aebqmmulz.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_1aebqmmulz.b[0][0]++;cov_1aebqmmulz.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_1aebqmmulz.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[0][1]++;}cov_1aebqmmulz.s[19]++;\n  if (!request.body.brewery) {/* istanbul ignore next */cov_1aebqmmulz.b[1][0]++;cov_1aebqmmulz.s[20]++;\n    sendStatus(response, 400, 'brewery not found'); /* istanbul ignore next */cov_1aebqmmulz.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[1][1]++;}cov_1aebqmmulz.s[22]++;\n  if (!request.body.beerName) {/* istanbul ignore next */cov_1aebqmmulz.b[2][0]++;cov_1aebqmmulz.s[23]++;\n    sendStatus(response, 400, 'beer name not found'); /* istanbul ignore next */cov_1aebqmmulz.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[2][1]++;}cov_1aebqmmulz.s[25]++;\n  if (!request.body.beerType) {/* istanbul ignore next */cov_1aebqmmulz.b[3][0]++;cov_1aebqmmulz.s[26]++;\n    sendStatus(response, 400, 'beer type not found'); /* istanbul ignore next */cov_1aebqmmulz.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[3][1]++;}\n  let beer = /* istanbul ignore next */(cov_1aebqmmulz.s[28]++, new Beer(request.body.brewery, request.body.beerName, request.body.beerType)); /* istanbul ignore next */cov_1aebqmmulz.s[29]++;\n  beers.push(beer); /* istanbul ignore next */cov_1aebqmmulz.s[30]++;\n  sendJSON(response, 200, beer);\n}","timestamp":"2017-12-07T23:40:06.000Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T23:40:06.000Z"}
{"id":"f4224f00-dba7-11e7-9461-fb41fbfaddfe","timestamp":"2017-12-07T23:40:06.001Z","brewery":"Rainier Beer","beerName":"Rainier","beerType":"lager","level":"info","message":""}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:40:06.010Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:40:06.010Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[3]++;cov_1aebqmmulz.s[32]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_1aebqmmulz.b[4][0]++;\n    let findBeerById = /* istanbul ignore next */(cov_1aebqmmulz.s[33]++, beers.find(beer => {/* istanbul ignore next */cov_1aebqmmulz.f[4]++;cov_1aebqmmulz.s[34]++;return beer.id === request.url.query.id;})); /* istanbul ignore next */cov_1aebqmmulz.s[35]++;\n    if (findBeerById) {/* istanbul ignore next */cov_1aebqmmulz.b[5][0]++;cov_1aebqmmulz.s[36]++;\n      sendJSON(response, 200, findBeerById); /* istanbul ignore next */cov_1aebqmmulz.s[37]++;\n      return;\n    } else {/* istanbul ignore next */cov_1aebqmmulz.b[5][1]++;cov_1aebqmmulz.s[38]++;\n      sendStatus(response, 400, 'beer not found'); /* istanbul ignore next */cov_1aebqmmulz.s[39]++;\n      return;\n    }\n  } else {/* istanbul ignore next */cov_1aebqmmulz.b[4][1]++;cov_1aebqmmulz.s[40]++;\n    sendJSON(response, 200, beers); /* istanbul ignore next */cov_1aebqmmulz.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-07T23:40:06.010Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T23:40:06.010Z"}
[{"id":"f4224f00-dba7-11e7-9461-fb41fbfaddfe","timestamp":"2017-12-07T23:40:06.000Z","brewery":"Rainier Beer","beerName":"Rainier","beerType":"lager"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:40:06.016Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:40:06.016Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[2]++;cov_1aebqmmulz.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_1aebqmmulz.b[0][0]++;cov_1aebqmmulz.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_1aebqmmulz.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[0][1]++;}cov_1aebqmmulz.s[19]++;\n  if (!request.body.brewery) {/* istanbul ignore next */cov_1aebqmmulz.b[1][0]++;cov_1aebqmmulz.s[20]++;\n    sendStatus(response, 400, 'brewery not found'); /* istanbul ignore next */cov_1aebqmmulz.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[1][1]++;}cov_1aebqmmulz.s[22]++;\n  if (!request.body.beerName) {/* istanbul ignore next */cov_1aebqmmulz.b[2][0]++;cov_1aebqmmulz.s[23]++;\n    sendStatus(response, 400, 'beer name not found'); /* istanbul ignore next */cov_1aebqmmulz.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[2][1]++;}cov_1aebqmmulz.s[25]++;\n  if (!request.body.beerType) {/* istanbul ignore next */cov_1aebqmmulz.b[3][0]++;cov_1aebqmmulz.s[26]++;\n    sendStatus(response, 400, 'beer type not found'); /* istanbul ignore next */cov_1aebqmmulz.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[3][1]++;}\n  let beer = /* istanbul ignore next */(cov_1aebqmmulz.s[28]++, new Beer(request.body.brewery, request.body.beerName, request.body.beerType)); /* istanbul ignore next */cov_1aebqmmulz.s[29]++;\n  beers.push(beer); /* istanbul ignore next */cov_1aebqmmulz.s[30]++;\n  sendJSON(response, 200, beer);\n}","timestamp":"2017-12-07T23:40:06.016Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T23:40:06.016Z"}
{"id":"f424c000-dba7-11e7-9461-fb41fbfaddfe","timestamp":"2017-12-07T23:40:06.016Z","brewery":"Lagunitas","beerName":"daytime ale","beerType":"session ale","level":"info","message":""}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:40:06.019Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:40:06.020Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[3]++;cov_1aebqmmulz.s[32]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_1aebqmmulz.b[4][0]++;\n    let findBeerById = /* istanbul ignore next */(cov_1aebqmmulz.s[33]++, beers.find(beer => {/* istanbul ignore next */cov_1aebqmmulz.f[4]++;cov_1aebqmmulz.s[34]++;return beer.id === request.url.query.id;})); /* istanbul ignore next */cov_1aebqmmulz.s[35]++;\n    if (findBeerById) {/* istanbul ignore next */cov_1aebqmmulz.b[5][0]++;cov_1aebqmmulz.s[36]++;\n      sendJSON(response, 200, findBeerById); /* istanbul ignore next */cov_1aebqmmulz.s[37]++;\n      return;\n    } else {/* istanbul ignore next */cov_1aebqmmulz.b[5][1]++;cov_1aebqmmulz.s[38]++;\n      sendStatus(response, 400, 'beer not found'); /* istanbul ignore next */cov_1aebqmmulz.s[39]++;\n      return;\n    }\n  } else {/* istanbul ignore next */cov_1aebqmmulz.b[4][1]++;cov_1aebqmmulz.s[40]++;\n    sendJSON(response, 200, beers); /* istanbul ignore next */cov_1aebqmmulz.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-07T23:40:06.020Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T23:40:06.020Z"}
[{"id":"f4224f00-dba7-11e7-9461-fb41fbfaddfe","timestamp":"2017-12-07T23:40:06.000Z","brewery":"Rainier Beer","beerName":"Rainier","beerType":"lager"},{"id":"f424c000-dba7-11e7-9461-fb41fbfaddfe","timestamp":"2017-12-07T23:40:06.016Z","brewery":"Lagunitas","beerName":"daytime ale","beerType":"session ale"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:40:06.023Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:40:06.023Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[3]++;cov_1aebqmmulz.s[32]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_1aebqmmulz.b[4][0]++;\n    let findBeerById = /* istanbul ignore next */(cov_1aebqmmulz.s[33]++, beers.find(beer => {/* istanbul ignore next */cov_1aebqmmulz.f[4]++;cov_1aebqmmulz.s[34]++;return beer.id === request.url.query.id;})); /* istanbul ignore next */cov_1aebqmmulz.s[35]++;\n    if (findBeerById) {/* istanbul ignore next */cov_1aebqmmulz.b[5][0]++;cov_1aebqmmulz.s[36]++;\n      sendJSON(response, 200, findBeerById); /* istanbul ignore next */cov_1aebqmmulz.s[37]++;\n      return;\n    } else {/* istanbul ignore next */cov_1aebqmmulz.b[5][1]++;cov_1aebqmmulz.s[38]++;\n      sendStatus(response, 400, 'beer not found'); /* istanbul ignore next */cov_1aebqmmulz.s[39]++;\n      return;\n    }\n  } else {/* istanbul ignore next */cov_1aebqmmulz.b[4][1]++;cov_1aebqmmulz.s[40]++;\n    sendJSON(response, 200, beers); /* istanbul ignore next */cov_1aebqmmulz.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-07T23:40:06.023Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T23:40:06.023Z"}
[{"id":"f4224f00-dba7-11e7-9461-fb41fbfaddfe","timestamp":"2017-12-07T23:40:06.000Z","brewery":"Rainier Beer","beerName":"Rainier","beerType":"lager"},{"id":"f424c000-dba7-11e7-9461-fb41fbfaddfe","timestamp":"2017-12-07T23:40:06.016Z","brewery":"Lagunitas","beerName":"daytime ale","beerType":"session ale"}]
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T23:40:54.817Z"}
{"level":"info","message":"/api/beers","timestamp":"2017-12-07T23:40:54.818Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[2]++;cov_1aebqmmulz.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_1aebqmmulz.b[0][0]++;cov_1aebqmmulz.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_1aebqmmulz.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[0][1]++;}cov_1aebqmmulz.s[19]++;\n  if (!request.body.brewery) {/* istanbul ignore next */cov_1aebqmmulz.b[1][0]++;cov_1aebqmmulz.s[20]++;\n    sendStatus(response, 400, 'brewery not found'); /* istanbul ignore next */cov_1aebqmmulz.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[1][1]++;}cov_1aebqmmulz.s[22]++;\n  if (!request.body.beerName) {/* istanbul ignore next */cov_1aebqmmulz.b[2][0]++;cov_1aebqmmulz.s[23]++;\n    sendStatus(response, 400, 'beer name not found'); /* istanbul ignore next */cov_1aebqmmulz.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[2][1]++;}cov_1aebqmmulz.s[25]++;\n  if (!request.body.beerType) {/* istanbul ignore next */cov_1aebqmmulz.b[3][0]++;cov_1aebqmmulz.s[26]++;\n    sendStatus(response, 400, 'beer type not found'); /* istanbul ignore next */cov_1aebqmmulz.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[3][1]++;}\n  let beer = /* istanbul ignore next */(cov_1aebqmmulz.s[28]++, new Beer(request.body.brewery, request.body.beerName, request.body.beerType)); /* istanbul ignore next */cov_1aebqmmulz.s[29]++;\n  beers.push(beer); /* istanbul ignore next */cov_1aebqmmulz.s[30]++;\n  sendJSON(response, 200, beer);\n}","timestamp":"2017-12-07T23:40:54.818Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T23:40:54.818Z"}
{"level":"info","message":"/api/beers","timestamp":"2017-12-07T23:40:54.818Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[3]++;cov_1aebqmmulz.s[32]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_1aebqmmulz.b[4][0]++;\n    let findBeerById = /* istanbul ignore next */(cov_1aebqmmulz.s[33]++, beers.find(beer => {/* istanbul ignore next */cov_1aebqmmulz.f[4]++;cov_1aebqmmulz.s[34]++;return beer.id === request.url.query.id;})); /* istanbul ignore next */cov_1aebqmmulz.s[35]++;\n    if (findBeerById) {/* istanbul ignore next */cov_1aebqmmulz.b[5][0]++;cov_1aebqmmulz.s[36]++;\n      sendJSON(response, 200, findBeerById); /* istanbul ignore next */cov_1aebqmmulz.s[37]++;\n      return;\n    } else {/* istanbul ignore next */cov_1aebqmmulz.b[5][1]++;cov_1aebqmmulz.s[38]++;\n      sendStatus(response, 400, 'beer not found'); /* istanbul ignore next */cov_1aebqmmulz.s[39]++;\n      return;\n    }\n  } else {/* istanbul ignore next */cov_1aebqmmulz.b[4][1]++;cov_1aebqmmulz.s[40]++;\n    sendJSON(response, 200, beers); /* istanbul ignore next */cov_1aebqmmulz.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-07T23:40:54.818Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-07T23:40:54.818Z"}
{"level":"info","message":"/api/beers","timestamp":"2017-12-07T23:40:54.818Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[5]++;cov_1aebqmmulz.s[43]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_1aebqmmulz.b[6][0]++;\n    let filterBeerById = /* istanbul ignore next */(cov_1aebqmmulz.s[44]++, beers.filter(beer => {/* istanbul ignore next */cov_1aebqmmulz.f[6]++;cov_1aebqmmulz.s[45]++;return beer.id === request.url.query.id;})); /* istanbul ignore next */cov_1aebqmmulz.s[46]++;\n    if (filterBeerById) {/* istanbul ignore next */cov_1aebqmmulz.b[7][0]++;cov_1aebqmmulz.s[47]++;\n      sendJSON(response, 200, filterBeerById); /* istanbul ignore next */cov_1aebqmmulz.s[48]++;\n      return;\n    } else {/* istanbul ignore next */cov_1aebqmmulz.b[7][1]++;cov_1aebqmmulz.s[49]++;\n      sendStatus(response, 400, 'beer not found'); /* istanbul ignore next */cov_1aebqmmulz.s[50]++;\n      return;\n    }\n  } else {/* istanbul ignore next */cov_1aebqmmulz.b[6][1]++;cov_1aebqmmulz.s[51]++;\n    sendJSON(response, 200, beers); /* istanbul ignore next */cov_1aebqmmulz.s[52]++;\n    return;\n  }\n}","timestamp":"2017-12-07T23:40:54.818Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2017-12-07T23:40:54.878Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:40:54.895Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:40:54.897Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[2]++;cov_1aebqmmulz.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_1aebqmmulz.b[0][0]++;cov_1aebqmmulz.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_1aebqmmulz.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[0][1]++;}cov_1aebqmmulz.s[19]++;\n  if (!request.body.brewery) {/* istanbul ignore next */cov_1aebqmmulz.b[1][0]++;cov_1aebqmmulz.s[20]++;\n    sendStatus(response, 400, 'brewery not found'); /* istanbul ignore next */cov_1aebqmmulz.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[1][1]++;}cov_1aebqmmulz.s[22]++;\n  if (!request.body.beerName) {/* istanbul ignore next */cov_1aebqmmulz.b[2][0]++;cov_1aebqmmulz.s[23]++;\n    sendStatus(response, 400, 'beer name not found'); /* istanbul ignore next */cov_1aebqmmulz.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[2][1]++;}cov_1aebqmmulz.s[25]++;\n  if (!request.body.beerType) {/* istanbul ignore next */cov_1aebqmmulz.b[3][0]++;cov_1aebqmmulz.s[26]++;\n    sendStatus(response, 400, 'beer type not found'); /* istanbul ignore next */cov_1aebqmmulz.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[3][1]++;}\n  let beer = /* istanbul ignore next */(cov_1aebqmmulz.s[28]++, new Beer(request.body.brewery, request.body.beerName, request.body.beerType)); /* istanbul ignore next */cov_1aebqmmulz.s[29]++;\n  beers.push(beer); /* istanbul ignore next */cov_1aebqmmulz.s[30]++;\n  sendJSON(response, 200, beer);\n}","timestamp":"2017-12-07T23:40:54.897Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T23:40:54.898Z"}
{"id":"11476610-dba8-11e7-aa5f-35f2eee2926d","timestamp":"2017-12-07T23:40:54.898Z","brewery":"Rainier Beer","beerName":"Rainier","beerType":"lager","level":"info","message":""}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:40:54.908Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:40:54.909Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[3]++;cov_1aebqmmulz.s[32]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_1aebqmmulz.b[4][0]++;\n    let findBeerById = /* istanbul ignore next */(cov_1aebqmmulz.s[33]++, beers.find(beer => {/* istanbul ignore next */cov_1aebqmmulz.f[4]++;cov_1aebqmmulz.s[34]++;return beer.id === request.url.query.id;})); /* istanbul ignore next */cov_1aebqmmulz.s[35]++;\n    if (findBeerById) {/* istanbul ignore next */cov_1aebqmmulz.b[5][0]++;cov_1aebqmmulz.s[36]++;\n      sendJSON(response, 200, findBeerById); /* istanbul ignore next */cov_1aebqmmulz.s[37]++;\n      return;\n    } else {/* istanbul ignore next */cov_1aebqmmulz.b[5][1]++;cov_1aebqmmulz.s[38]++;\n      sendStatus(response, 400, 'beer not found'); /* istanbul ignore next */cov_1aebqmmulz.s[39]++;\n      return;\n    }\n  } else {/* istanbul ignore next */cov_1aebqmmulz.b[4][1]++;cov_1aebqmmulz.s[40]++;\n    sendJSON(response, 200, beers); /* istanbul ignore next */cov_1aebqmmulz.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-07T23:40:54.909Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T23:40:54.909Z"}
[{"id":"11476610-dba8-11e7-aa5f-35f2eee2926d","timestamp":"2017-12-07T23:40:54.898Z","brewery":"Rainier Beer","beerName":"Rainier","beerType":"lager"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:40:54.914Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:40:54.914Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[2]++;cov_1aebqmmulz.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_1aebqmmulz.b[0][0]++;cov_1aebqmmulz.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_1aebqmmulz.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[0][1]++;}cov_1aebqmmulz.s[19]++;\n  if (!request.body.brewery) {/* istanbul ignore next */cov_1aebqmmulz.b[1][0]++;cov_1aebqmmulz.s[20]++;\n    sendStatus(response, 400, 'brewery not found'); /* istanbul ignore next */cov_1aebqmmulz.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[1][1]++;}cov_1aebqmmulz.s[22]++;\n  if (!request.body.beerName) {/* istanbul ignore next */cov_1aebqmmulz.b[2][0]++;cov_1aebqmmulz.s[23]++;\n    sendStatus(response, 400, 'beer name not found'); /* istanbul ignore next */cov_1aebqmmulz.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[2][1]++;}cov_1aebqmmulz.s[25]++;\n  if (!request.body.beerType) {/* istanbul ignore next */cov_1aebqmmulz.b[3][0]++;cov_1aebqmmulz.s[26]++;\n    sendStatus(response, 400, 'beer type not found'); /* istanbul ignore next */cov_1aebqmmulz.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[3][1]++;}\n  let beer = /* istanbul ignore next */(cov_1aebqmmulz.s[28]++, new Beer(request.body.brewery, request.body.beerName, request.body.beerType)); /* istanbul ignore next */cov_1aebqmmulz.s[29]++;\n  beers.push(beer); /* istanbul ignore next */cov_1aebqmmulz.s[30]++;\n  sendJSON(response, 200, beer);\n}","timestamp":"2017-12-07T23:40:54.914Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T23:40:54.915Z"}
{"id":"1149fe20-dba8-11e7-aa5f-35f2eee2926d","timestamp":"2017-12-07T23:40:54.915Z","brewery":"Lagunitas","beerName":"daytime ale","beerType":"session ale","level":"info","message":""}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:40:54.917Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:40:54.917Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[3]++;cov_1aebqmmulz.s[32]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_1aebqmmulz.b[4][0]++;\n    let findBeerById = /* istanbul ignore next */(cov_1aebqmmulz.s[33]++, beers.find(beer => {/* istanbul ignore next */cov_1aebqmmulz.f[4]++;cov_1aebqmmulz.s[34]++;return beer.id === request.url.query.id;})); /* istanbul ignore next */cov_1aebqmmulz.s[35]++;\n    if (findBeerById) {/* istanbul ignore next */cov_1aebqmmulz.b[5][0]++;cov_1aebqmmulz.s[36]++;\n      sendJSON(response, 200, findBeerById); /* istanbul ignore next */cov_1aebqmmulz.s[37]++;\n      return;\n    } else {/* istanbul ignore next */cov_1aebqmmulz.b[5][1]++;cov_1aebqmmulz.s[38]++;\n      sendStatus(response, 400, 'beer not found'); /* istanbul ignore next */cov_1aebqmmulz.s[39]++;\n      return;\n    }\n  } else {/* istanbul ignore next */cov_1aebqmmulz.b[4][1]++;cov_1aebqmmulz.s[40]++;\n    sendJSON(response, 200, beers); /* istanbul ignore next */cov_1aebqmmulz.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-07T23:40:54.917Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T23:40:54.917Z"}
[{"id":"11476610-dba8-11e7-aa5f-35f2eee2926d","timestamp":"2017-12-07T23:40:54.898Z","brewery":"Rainier Beer","beerName":"Rainier","beerType":"lager"},{"id":"1149fe20-dba8-11e7-aa5f-35f2eee2926d","timestamp":"2017-12-07T23:40:54.914Z","brewery":"Lagunitas","beerName":"daytime ale","beerType":"session ale"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:40:54.920Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:40:54.920Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[3]++;cov_1aebqmmulz.s[32]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_1aebqmmulz.b[4][0]++;\n    let findBeerById = /* istanbul ignore next */(cov_1aebqmmulz.s[33]++, beers.find(beer => {/* istanbul ignore next */cov_1aebqmmulz.f[4]++;cov_1aebqmmulz.s[34]++;return beer.id === request.url.query.id;})); /* istanbul ignore next */cov_1aebqmmulz.s[35]++;\n    if (findBeerById) {/* istanbul ignore next */cov_1aebqmmulz.b[5][0]++;cov_1aebqmmulz.s[36]++;\n      sendJSON(response, 200, findBeerById); /* istanbul ignore next */cov_1aebqmmulz.s[37]++;\n      return;\n    } else {/* istanbul ignore next */cov_1aebqmmulz.b[5][1]++;cov_1aebqmmulz.s[38]++;\n      sendStatus(response, 400, 'beer not found'); /* istanbul ignore next */cov_1aebqmmulz.s[39]++;\n      return;\n    }\n  } else {/* istanbul ignore next */cov_1aebqmmulz.b[4][1]++;cov_1aebqmmulz.s[40]++;\n    sendJSON(response, 200, beers); /* istanbul ignore next */cov_1aebqmmulz.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-07T23:40:54.920Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T23:40:54.920Z"}
[{"id":"11476610-dba8-11e7-aa5f-35f2eee2926d","timestamp":"2017-12-07T23:40:54.898Z","brewery":"Rainier Beer","beerName":"Rainier","beerType":"lager"},{"id":"1149fe20-dba8-11e7-aa5f-35f2eee2926d","timestamp":"2017-12-07T23:40:54.914Z","brewery":"Lagunitas","beerName":"daytime ale","beerType":"session ale"}]
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T23:41:40.248Z"}
{"level":"info","message":"/api/beers","timestamp":"2017-12-07T23:41:40.249Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[2]++;cov_1aebqmmulz.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_1aebqmmulz.b[0][0]++;cov_1aebqmmulz.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_1aebqmmulz.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[0][1]++;}cov_1aebqmmulz.s[19]++;\n  if (!request.body.brewery) {/* istanbul ignore next */cov_1aebqmmulz.b[1][0]++;cov_1aebqmmulz.s[20]++;\n    sendStatus(response, 400, 'brewery not found'); /* istanbul ignore next */cov_1aebqmmulz.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[1][1]++;}cov_1aebqmmulz.s[22]++;\n  if (!request.body.beerName) {/* istanbul ignore next */cov_1aebqmmulz.b[2][0]++;cov_1aebqmmulz.s[23]++;\n    sendStatus(response, 400, 'beer name not found'); /* istanbul ignore next */cov_1aebqmmulz.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[2][1]++;}cov_1aebqmmulz.s[25]++;\n  if (!request.body.beerType) {/* istanbul ignore next */cov_1aebqmmulz.b[3][0]++;cov_1aebqmmulz.s[26]++;\n    sendStatus(response, 400, 'beer type not found'); /* istanbul ignore next */cov_1aebqmmulz.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[3][1]++;}\n  let beer = /* istanbul ignore next */(cov_1aebqmmulz.s[28]++, new Beer(request.body.brewery, request.body.beerName, request.body.beerType)); /* istanbul ignore next */cov_1aebqmmulz.s[29]++;\n  beers.push(beer); /* istanbul ignore next */cov_1aebqmmulz.s[30]++;\n  sendJSON(response, 200, beer);\n}","timestamp":"2017-12-07T23:41:40.249Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T23:41:40.249Z"}
{"level":"info","message":"/api/beers","timestamp":"2017-12-07T23:41:40.249Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[3]++;cov_1aebqmmulz.s[32]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_1aebqmmulz.b[4][0]++;\n    let findBeerById = /* istanbul ignore next */(cov_1aebqmmulz.s[33]++, beers.find(beer => {/* istanbul ignore next */cov_1aebqmmulz.f[4]++;cov_1aebqmmulz.s[34]++;return beer.id === request.url.query.id;})); /* istanbul ignore next */cov_1aebqmmulz.s[35]++;\n    if (findBeerById) {/* istanbul ignore next */cov_1aebqmmulz.b[5][0]++;cov_1aebqmmulz.s[36]++;\n      sendJSON(response, 200, findBeerById); /* istanbul ignore next */cov_1aebqmmulz.s[37]++;\n      return;\n    } else {/* istanbul ignore next */cov_1aebqmmulz.b[5][1]++;cov_1aebqmmulz.s[38]++;\n      sendStatus(response, 400, 'beer not found'); /* istanbul ignore next */cov_1aebqmmulz.s[39]++;\n      return;\n    }\n  } else {/* istanbul ignore next */cov_1aebqmmulz.b[4][1]++;cov_1aebqmmulz.s[40]++;\n    sendJSON(response, 200, beers); /* istanbul ignore next */cov_1aebqmmulz.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-07T23:41:40.249Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-07T23:41:40.249Z"}
{"level":"info","message":"/api/beers","timestamp":"2017-12-07T23:41:40.249Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[5]++;cov_1aebqmmulz.s[43]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_1aebqmmulz.b[6][0]++;\n    let filterBeerById = /* istanbul ignore next */(cov_1aebqmmulz.s[44]++, beers.filter(beer => {/* istanbul ignore next */cov_1aebqmmulz.f[6]++;cov_1aebqmmulz.s[45]++;return beer.id === request.url.query.id;})); /* istanbul ignore next */cov_1aebqmmulz.s[46]++;\n    if (filterBeerById) {/* istanbul ignore next */cov_1aebqmmulz.b[7][0]++;cov_1aebqmmulz.s[47]++;\n      sendJSON(response, 200, filterBeerById); /* istanbul ignore next */cov_1aebqmmulz.s[48]++;\n      return;\n    } else {/* istanbul ignore next */cov_1aebqmmulz.b[7][1]++;cov_1aebqmmulz.s[49]++;\n      sendStatus(response, 400, 'beer not found'); /* istanbul ignore next */cov_1aebqmmulz.s[50]++;\n      return;\n    }\n  } else {/* istanbul ignore next */cov_1aebqmmulz.b[6][1]++;cov_1aebqmmulz.s[51]++;\n    sendJSON(response, 200, beers); /* istanbul ignore next */cov_1aebqmmulz.s[52]++;\n    return;\n  }\n}","timestamp":"2017-12-07T23:41:40.249Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2017-12-07T23:41:40.297Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:41:40.312Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:41:40.313Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[2]++;cov_1aebqmmulz.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_1aebqmmulz.b[0][0]++;cov_1aebqmmulz.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_1aebqmmulz.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[0][1]++;}cov_1aebqmmulz.s[19]++;\n  if (!request.body.brewery) {/* istanbul ignore next */cov_1aebqmmulz.b[1][0]++;cov_1aebqmmulz.s[20]++;\n    sendStatus(response, 400, 'brewery not found'); /* istanbul ignore next */cov_1aebqmmulz.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[1][1]++;}cov_1aebqmmulz.s[22]++;\n  if (!request.body.beerName) {/* istanbul ignore next */cov_1aebqmmulz.b[2][0]++;cov_1aebqmmulz.s[23]++;\n    sendStatus(response, 400, 'beer name not found'); /* istanbul ignore next */cov_1aebqmmulz.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[2][1]++;}cov_1aebqmmulz.s[25]++;\n  if (!request.body.beerType) {/* istanbul ignore next */cov_1aebqmmulz.b[3][0]++;cov_1aebqmmulz.s[26]++;\n    sendStatus(response, 400, 'beer type not found'); /* istanbul ignore next */cov_1aebqmmulz.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[3][1]++;}\n  let beer = /* istanbul ignore next */(cov_1aebqmmulz.s[28]++, new Beer(request.body.brewery, request.body.beerName, request.body.beerType)); /* istanbul ignore next */cov_1aebqmmulz.s[29]++;\n  beers.push(beer); /* istanbul ignore next */cov_1aebqmmulz.s[30]++;\n  sendJSON(response, 200, beer);\n}","timestamp":"2017-12-07T23:41:40.313Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T23:41:40.314Z"}
{"id":"2c597ba0-dba8-11e7-a54e-ed4b3fab73e0","timestamp":"2017-12-07T23:41:40.314Z","brewery":"Rainier Beer","beerName":"Rainier","beerType":"lager","level":"info","message":""}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:41:40.323Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:41:40.324Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[3]++;cov_1aebqmmulz.s[32]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_1aebqmmulz.b[4][0]++;\n    let findBeerById = /* istanbul ignore next */(cov_1aebqmmulz.s[33]++, beers.find(beer => {/* istanbul ignore next */cov_1aebqmmulz.f[4]++;cov_1aebqmmulz.s[34]++;return beer.id === request.url.query.id;})); /* istanbul ignore next */cov_1aebqmmulz.s[35]++;\n    if (findBeerById) {/* istanbul ignore next */cov_1aebqmmulz.b[5][0]++;cov_1aebqmmulz.s[36]++;\n      sendJSON(response, 200, findBeerById); /* istanbul ignore next */cov_1aebqmmulz.s[37]++;\n      return;\n    } else {/* istanbul ignore next */cov_1aebqmmulz.b[5][1]++;cov_1aebqmmulz.s[38]++;\n      sendStatus(response, 400, 'beer not found'); /* istanbul ignore next */cov_1aebqmmulz.s[39]++;\n      return;\n    }\n  } else {/* istanbul ignore next */cov_1aebqmmulz.b[4][1]++;cov_1aebqmmulz.s[40]++;\n    sendJSON(response, 200, beers); /* istanbul ignore next */cov_1aebqmmulz.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-07T23:41:40.324Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T23:41:40.324Z"}
[{"id":"2c597ba0-dba8-11e7-a54e-ed4b3fab73e0","timestamp":"2017-12-07T23:41:40.314Z","brewery":"Rainier Beer","beerName":"Rainier","beerType":"lager"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:41:40.327Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:41:40.327Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[2]++;cov_1aebqmmulz.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_1aebqmmulz.b[0][0]++;cov_1aebqmmulz.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_1aebqmmulz.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[0][1]++;}cov_1aebqmmulz.s[19]++;\n  if (!request.body.brewery) {/* istanbul ignore next */cov_1aebqmmulz.b[1][0]++;cov_1aebqmmulz.s[20]++;\n    sendStatus(response, 400, 'brewery not found'); /* istanbul ignore next */cov_1aebqmmulz.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[1][1]++;}cov_1aebqmmulz.s[22]++;\n  if (!request.body.beerName) {/* istanbul ignore next */cov_1aebqmmulz.b[2][0]++;cov_1aebqmmulz.s[23]++;\n    sendStatus(response, 400, 'beer name not found'); /* istanbul ignore next */cov_1aebqmmulz.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[2][1]++;}cov_1aebqmmulz.s[25]++;\n  if (!request.body.beerType) {/* istanbul ignore next */cov_1aebqmmulz.b[3][0]++;cov_1aebqmmulz.s[26]++;\n    sendStatus(response, 400, 'beer type not found'); /* istanbul ignore next */cov_1aebqmmulz.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[3][1]++;}\n  let beer = /* istanbul ignore next */(cov_1aebqmmulz.s[28]++, new Beer(request.body.brewery, request.body.beerName, request.body.beerType)); /* istanbul ignore next */cov_1aebqmmulz.s[29]++;\n  beers.push(beer); /* istanbul ignore next */cov_1aebqmmulz.s[30]++;\n  sendJSON(response, 200, beer);\n}","timestamp":"2017-12-07T23:41:40.327Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T23:41:40.328Z"}
{"id":"2c5b7770-dba8-11e7-a54e-ed4b3fab73e0","timestamp":"2017-12-07T23:41:40.328Z","brewery":"Lagunitas","beerName":"daytime ale","beerType":"session ale","level":"info","message":""}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:41:40.330Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:41:40.331Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[3]++;cov_1aebqmmulz.s[32]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_1aebqmmulz.b[4][0]++;\n    let findBeerById = /* istanbul ignore next */(cov_1aebqmmulz.s[33]++, beers.find(beer => {/* istanbul ignore next */cov_1aebqmmulz.f[4]++;cov_1aebqmmulz.s[34]++;return beer.id === request.url.query.id;})); /* istanbul ignore next */cov_1aebqmmulz.s[35]++;\n    if (findBeerById) {/* istanbul ignore next */cov_1aebqmmulz.b[5][0]++;cov_1aebqmmulz.s[36]++;\n      sendJSON(response, 200, findBeerById); /* istanbul ignore next */cov_1aebqmmulz.s[37]++;\n      return;\n    } else {/* istanbul ignore next */cov_1aebqmmulz.b[5][1]++;cov_1aebqmmulz.s[38]++;\n      sendStatus(response, 400, 'beer not found'); /* istanbul ignore next */cov_1aebqmmulz.s[39]++;\n      return;\n    }\n  } else {/* istanbul ignore next */cov_1aebqmmulz.b[4][1]++;cov_1aebqmmulz.s[40]++;\n    sendJSON(response, 200, beers); /* istanbul ignore next */cov_1aebqmmulz.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-07T23:41:40.331Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T23:41:40.331Z"}
[{"id":"2c597ba0-dba8-11e7-a54e-ed4b3fab73e0","timestamp":"2017-12-07T23:41:40.314Z","brewery":"Rainier Beer","beerName":"Rainier","beerType":"lager"},{"id":"2c5b7770-dba8-11e7-a54e-ed4b3fab73e0","timestamp":"2017-12-07T23:41:40.327Z","brewery":"Lagunitas","beerName":"daytime ale","beerType":"session ale"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:41:40.333Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:41:40.334Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[3]++;cov_1aebqmmulz.s[32]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_1aebqmmulz.b[4][0]++;\n    let findBeerById = /* istanbul ignore next */(cov_1aebqmmulz.s[33]++, beers.find(beer => {/* istanbul ignore next */cov_1aebqmmulz.f[4]++;cov_1aebqmmulz.s[34]++;return beer.id === request.url.query.id;})); /* istanbul ignore next */cov_1aebqmmulz.s[35]++;\n    if (findBeerById) {/* istanbul ignore next */cov_1aebqmmulz.b[5][0]++;cov_1aebqmmulz.s[36]++;\n      sendJSON(response, 200, findBeerById); /* istanbul ignore next */cov_1aebqmmulz.s[37]++;\n      return;\n    } else {/* istanbul ignore next */cov_1aebqmmulz.b[5][1]++;cov_1aebqmmulz.s[38]++;\n      sendStatus(response, 400, 'beer not found'); /* istanbul ignore next */cov_1aebqmmulz.s[39]++;\n      return;\n    }\n  } else {/* istanbul ignore next */cov_1aebqmmulz.b[4][1]++;cov_1aebqmmulz.s[40]++;\n    sendJSON(response, 200, beers); /* istanbul ignore next */cov_1aebqmmulz.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-07T23:41:40.334Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T23:41:40.334Z"}
[{"id":"2c597ba0-dba8-11e7-a54e-ed4b3fab73e0","timestamp":"2017-12-07T23:41:40.314Z","brewery":"Rainier Beer","beerName":"Rainier","beerType":"lager"},{"id":"2c5b7770-dba8-11e7-a54e-ed4b3fab73e0","timestamp":"2017-12-07T23:41:40.327Z","brewery":"Lagunitas","beerName":"daytime ale","beerType":"session ale"}]
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T23:42:28.375Z"}
{"level":"info","message":"/api/beers","timestamp":"2017-12-07T23:42:28.375Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[2]++;cov_1aebqmmulz.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_1aebqmmulz.b[0][0]++;cov_1aebqmmulz.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_1aebqmmulz.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[0][1]++;}cov_1aebqmmulz.s[19]++;\n  if (!request.body.brewery) {/* istanbul ignore next */cov_1aebqmmulz.b[1][0]++;cov_1aebqmmulz.s[20]++;\n    sendStatus(response, 400, 'brewery not found'); /* istanbul ignore next */cov_1aebqmmulz.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[1][1]++;}cov_1aebqmmulz.s[22]++;\n  if (!request.body.beerName) {/* istanbul ignore next */cov_1aebqmmulz.b[2][0]++;cov_1aebqmmulz.s[23]++;\n    sendStatus(response, 400, 'beer name not found'); /* istanbul ignore next */cov_1aebqmmulz.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[2][1]++;}cov_1aebqmmulz.s[25]++;\n  if (!request.body.beerType) {/* istanbul ignore next */cov_1aebqmmulz.b[3][0]++;cov_1aebqmmulz.s[26]++;\n    sendStatus(response, 400, 'beer type not found'); /* istanbul ignore next */cov_1aebqmmulz.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[3][1]++;}\n  let beer = /* istanbul ignore next */(cov_1aebqmmulz.s[28]++, new Beer(request.body.brewery, request.body.beerName, request.body.beerType)); /* istanbul ignore next */cov_1aebqmmulz.s[29]++;\n  beers.push(beer); /* istanbul ignore next */cov_1aebqmmulz.s[30]++;\n  sendJSON(response, 200, beer);\n}","timestamp":"2017-12-07T23:42:28.375Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T23:42:28.375Z"}
{"level":"info","message":"/api/beers","timestamp":"2017-12-07T23:42:28.375Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[3]++;cov_1aebqmmulz.s[32]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_1aebqmmulz.b[4][0]++;\n    let findBeerById = /* istanbul ignore next */(cov_1aebqmmulz.s[33]++, beers.find(beer => {/* istanbul ignore next */cov_1aebqmmulz.f[4]++;cov_1aebqmmulz.s[34]++;return beer.id === request.url.query.id;})); /* istanbul ignore next */cov_1aebqmmulz.s[35]++;\n    if (findBeerById) {/* istanbul ignore next */cov_1aebqmmulz.b[5][0]++;cov_1aebqmmulz.s[36]++;\n      sendJSON(response, 200, findBeerById); /* istanbul ignore next */cov_1aebqmmulz.s[37]++;\n      return;\n    } else {/* istanbul ignore next */cov_1aebqmmulz.b[5][1]++;cov_1aebqmmulz.s[38]++;\n      sendStatus(response, 400, 'beer not found'); /* istanbul ignore next */cov_1aebqmmulz.s[39]++;\n      return;\n    }\n  } else {/* istanbul ignore next */cov_1aebqmmulz.b[4][1]++;cov_1aebqmmulz.s[40]++;\n    sendJSON(response, 200, beers); /* istanbul ignore next */cov_1aebqmmulz.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-07T23:42:28.376Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-07T23:42:28.376Z"}
{"level":"info","message":"/api/beers","timestamp":"2017-12-07T23:42:28.376Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[5]++;cov_1aebqmmulz.s[43]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_1aebqmmulz.b[6][0]++;\n    let filterBeerById = /* istanbul ignore next */(cov_1aebqmmulz.s[44]++, beers.filter(beer => {/* istanbul ignore next */cov_1aebqmmulz.f[6]++;cov_1aebqmmulz.s[45]++;return beer.id === request.url.query.id;})); /* istanbul ignore next */cov_1aebqmmulz.s[46]++;\n    if (filterBeerById) {/* istanbul ignore next */cov_1aebqmmulz.b[7][0]++;cov_1aebqmmulz.s[47]++;\n      sendJSON(response, 200, filterBeerById); /* istanbul ignore next */cov_1aebqmmulz.s[48]++;\n      return;\n    } else {/* istanbul ignore next */cov_1aebqmmulz.b[7][1]++;cov_1aebqmmulz.s[49]++;\n      sendStatus(response, 400, 'beer not found'); /* istanbul ignore next */cov_1aebqmmulz.s[50]++;\n      return;\n    }\n  } else {/* istanbul ignore next */cov_1aebqmmulz.b[6][1]++;cov_1aebqmmulz.s[51]++;\n    sendJSON(response, 200, beers); /* istanbul ignore next */cov_1aebqmmulz.s[52]++;\n    return;\n  }\n}","timestamp":"2017-12-07T23:42:28.376Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2017-12-07T23:42:28.424Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:42:28.441Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:42:28.442Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[2]++;cov_1aebqmmulz.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_1aebqmmulz.b[0][0]++;cov_1aebqmmulz.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_1aebqmmulz.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[0][1]++;}cov_1aebqmmulz.s[19]++;\n  if (!request.body.brewery) {/* istanbul ignore next */cov_1aebqmmulz.b[1][0]++;cov_1aebqmmulz.s[20]++;\n    sendStatus(response, 400, 'brewery not found'); /* istanbul ignore next */cov_1aebqmmulz.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[1][1]++;}cov_1aebqmmulz.s[22]++;\n  if (!request.body.beerName) {/* istanbul ignore next */cov_1aebqmmulz.b[2][0]++;cov_1aebqmmulz.s[23]++;\n    sendStatus(response, 400, 'beer name not found'); /* istanbul ignore next */cov_1aebqmmulz.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[2][1]++;}cov_1aebqmmulz.s[25]++;\n  if (!request.body.beerType) {/* istanbul ignore next */cov_1aebqmmulz.b[3][0]++;cov_1aebqmmulz.s[26]++;\n    sendStatus(response, 400, 'beer type not found'); /* istanbul ignore next */cov_1aebqmmulz.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[3][1]++;}\n  let beer = /* istanbul ignore next */(cov_1aebqmmulz.s[28]++, new Beer(request.body.brewery, request.body.beerName, request.body.beerType)); /* istanbul ignore next */cov_1aebqmmulz.s[29]++;\n  beers.push(beer); /* istanbul ignore next */cov_1aebqmmulz.s[30]++;\n  sendJSON(response, 200, beer);\n}","timestamp":"2017-12-07T23:42:28.442Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T23:42:28.443Z"}
{"id":"490962b0-dba8-11e7-82a6-574331b78139","timestamp":"2017-12-07T23:42:28.443Z","brewery":"Rainier Beer","beerName":"Rainier","beerType":"lager","level":"info","message":""}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:42:28.453Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:42:28.453Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[3]++;cov_1aebqmmulz.s[32]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_1aebqmmulz.b[4][0]++;\n    let findBeerById = /* istanbul ignore next */(cov_1aebqmmulz.s[33]++, beers.find(beer => {/* istanbul ignore next */cov_1aebqmmulz.f[4]++;cov_1aebqmmulz.s[34]++;return beer.id === request.url.query.id;})); /* istanbul ignore next */cov_1aebqmmulz.s[35]++;\n    if (findBeerById) {/* istanbul ignore next */cov_1aebqmmulz.b[5][0]++;cov_1aebqmmulz.s[36]++;\n      sendJSON(response, 200, findBeerById); /* istanbul ignore next */cov_1aebqmmulz.s[37]++;\n      return;\n    } else {/* istanbul ignore next */cov_1aebqmmulz.b[5][1]++;cov_1aebqmmulz.s[38]++;\n      sendStatus(response, 400, 'beer not found'); /* istanbul ignore next */cov_1aebqmmulz.s[39]++;\n      return;\n    }\n  } else {/* istanbul ignore next */cov_1aebqmmulz.b[4][1]++;cov_1aebqmmulz.s[40]++;\n    sendJSON(response, 200, beers); /* istanbul ignore next */cov_1aebqmmulz.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-07T23:42:28.453Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T23:42:28.454Z"}
[{"id":"490962b0-dba8-11e7-82a6-574331b78139","timestamp":"2017-12-07T23:42:28.443Z","brewery":"Rainier Beer","beerName":"Rainier","beerType":"lager"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:42:28.457Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:42:28.458Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[2]++;cov_1aebqmmulz.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_1aebqmmulz.b[0][0]++;cov_1aebqmmulz.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_1aebqmmulz.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[0][1]++;}cov_1aebqmmulz.s[19]++;\n  if (!request.body.brewery) {/* istanbul ignore next */cov_1aebqmmulz.b[1][0]++;cov_1aebqmmulz.s[20]++;\n    sendStatus(response, 400, 'brewery not found'); /* istanbul ignore next */cov_1aebqmmulz.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[1][1]++;}cov_1aebqmmulz.s[22]++;\n  if (!request.body.beerName) {/* istanbul ignore next */cov_1aebqmmulz.b[2][0]++;cov_1aebqmmulz.s[23]++;\n    sendStatus(response, 400, 'beer name not found'); /* istanbul ignore next */cov_1aebqmmulz.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[2][1]++;}cov_1aebqmmulz.s[25]++;\n  if (!request.body.beerType) {/* istanbul ignore next */cov_1aebqmmulz.b[3][0]++;cov_1aebqmmulz.s[26]++;\n    sendStatus(response, 400, 'beer type not found'); /* istanbul ignore next */cov_1aebqmmulz.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[3][1]++;}\n  let beer = /* istanbul ignore next */(cov_1aebqmmulz.s[28]++, new Beer(request.body.brewery, request.body.beerName, request.body.beerType)); /* istanbul ignore next */cov_1aebqmmulz.s[29]++;\n  beers.push(beer); /* istanbul ignore next */cov_1aebqmmulz.s[30]++;\n  sendJSON(response, 200, beer);\n}","timestamp":"2017-12-07T23:42:28.458Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T23:42:28.458Z"}
{"id":"490baca0-dba8-11e7-82a6-574331b78139","timestamp":"2017-12-07T23:42:28.458Z","brewery":"Lagunitas","beerName":"daytime ale","beerType":"session ale","level":"info","message":""}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:42:28.460Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:42:28.461Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[3]++;cov_1aebqmmulz.s[32]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_1aebqmmulz.b[4][0]++;\n    let findBeerById = /* istanbul ignore next */(cov_1aebqmmulz.s[33]++, beers.find(beer => {/* istanbul ignore next */cov_1aebqmmulz.f[4]++;cov_1aebqmmulz.s[34]++;return beer.id === request.url.query.id;})); /* istanbul ignore next */cov_1aebqmmulz.s[35]++;\n    if (findBeerById) {/* istanbul ignore next */cov_1aebqmmulz.b[5][0]++;cov_1aebqmmulz.s[36]++;\n      sendJSON(response, 200, findBeerById); /* istanbul ignore next */cov_1aebqmmulz.s[37]++;\n      return;\n    } else {/* istanbul ignore next */cov_1aebqmmulz.b[5][1]++;cov_1aebqmmulz.s[38]++;\n      sendStatus(response, 400, 'beer not found'); /* istanbul ignore next */cov_1aebqmmulz.s[39]++;\n      return;\n    }\n  } else {/* istanbul ignore next */cov_1aebqmmulz.b[4][1]++;cov_1aebqmmulz.s[40]++;\n    sendJSON(response, 200, beers); /* istanbul ignore next */cov_1aebqmmulz.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-07T23:42:28.461Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T23:42:28.461Z"}
[{"id":"490962b0-dba8-11e7-82a6-574331b78139","timestamp":"2017-12-07T23:42:28.443Z","brewery":"Rainier Beer","beerName":"Rainier","beerType":"lager"},{"id":"490baca0-dba8-11e7-82a6-574331b78139","timestamp":"2017-12-07T23:42:28.458Z","brewery":"Lagunitas","beerName":"daytime ale","beerType":"session ale"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:42:28.466Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:42:28.466Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[3]++;cov_1aebqmmulz.s[32]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_1aebqmmulz.b[4][0]++;\n    let findBeerById = /* istanbul ignore next */(cov_1aebqmmulz.s[33]++, beers.find(beer => {/* istanbul ignore next */cov_1aebqmmulz.f[4]++;cov_1aebqmmulz.s[34]++;return beer.id === request.url.query.id;})); /* istanbul ignore next */cov_1aebqmmulz.s[35]++;\n    if (findBeerById) {/* istanbul ignore next */cov_1aebqmmulz.b[5][0]++;cov_1aebqmmulz.s[36]++;\n      sendJSON(response, 200, findBeerById); /* istanbul ignore next */cov_1aebqmmulz.s[37]++;\n      return;\n    } else {/* istanbul ignore next */cov_1aebqmmulz.b[5][1]++;cov_1aebqmmulz.s[38]++;\n      sendStatus(response, 400, 'beer not found'); /* istanbul ignore next */cov_1aebqmmulz.s[39]++;\n      return;\n    }\n  } else {/* istanbul ignore next */cov_1aebqmmulz.b[4][1]++;cov_1aebqmmulz.s[40]++;\n    sendJSON(response, 200, beers); /* istanbul ignore next */cov_1aebqmmulz.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-07T23:42:28.466Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T23:42:28.467Z"}
[{"id":"490962b0-dba8-11e7-82a6-574331b78139","timestamp":"2017-12-07T23:42:28.443Z","brewery":"Rainier Beer","beerName":"Rainier","beerType":"lager"},{"id":"490baca0-dba8-11e7-82a6-574331b78139","timestamp":"2017-12-07T23:42:28.458Z","brewery":"Lagunitas","beerName":"daytime ale","beerType":"session ale"}]
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T23:43:22.535Z"}
{"level":"info","message":"/api/beers","timestamp":"2017-12-07T23:43:22.536Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[2]++;cov_1aebqmmulz.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_1aebqmmulz.b[0][0]++;cov_1aebqmmulz.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_1aebqmmulz.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[0][1]++;}cov_1aebqmmulz.s[19]++;\n  if (!request.body.brewery) {/* istanbul ignore next */cov_1aebqmmulz.b[1][0]++;cov_1aebqmmulz.s[20]++;\n    sendStatus(response, 400, 'brewery not found'); /* istanbul ignore next */cov_1aebqmmulz.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[1][1]++;}cov_1aebqmmulz.s[22]++;\n  if (!request.body.beerName) {/* istanbul ignore next */cov_1aebqmmulz.b[2][0]++;cov_1aebqmmulz.s[23]++;\n    sendStatus(response, 400, 'beer name not found'); /* istanbul ignore next */cov_1aebqmmulz.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[2][1]++;}cov_1aebqmmulz.s[25]++;\n  if (!request.body.beerType) {/* istanbul ignore next */cov_1aebqmmulz.b[3][0]++;cov_1aebqmmulz.s[26]++;\n    sendStatus(response, 400, 'beer type not found'); /* istanbul ignore next */cov_1aebqmmulz.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[3][1]++;}\n  let beer = /* istanbul ignore next */(cov_1aebqmmulz.s[28]++, new Beer(request.body.brewery, request.body.beerName, request.body.beerType)); /* istanbul ignore next */cov_1aebqmmulz.s[29]++;\n  beers.push(beer); /* istanbul ignore next */cov_1aebqmmulz.s[30]++;\n  sendJSON(response, 200, beer);\n}","timestamp":"2017-12-07T23:43:22.536Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T23:43:22.536Z"}
{"level":"info","message":"/api/beers","timestamp":"2017-12-07T23:43:22.536Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[3]++;cov_1aebqmmulz.s[32]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_1aebqmmulz.b[4][0]++;\n    let findBeerById = /* istanbul ignore next */(cov_1aebqmmulz.s[33]++, beers.find(beer => {/* istanbul ignore next */cov_1aebqmmulz.f[4]++;cov_1aebqmmulz.s[34]++;return beer.id === request.url.query.id;})); /* istanbul ignore next */cov_1aebqmmulz.s[35]++;\n    if (findBeerById) {/* istanbul ignore next */cov_1aebqmmulz.b[5][0]++;cov_1aebqmmulz.s[36]++;\n      sendJSON(response, 200, findBeerById); /* istanbul ignore next */cov_1aebqmmulz.s[37]++;\n      return;\n    } else {/* istanbul ignore next */cov_1aebqmmulz.b[5][1]++;cov_1aebqmmulz.s[38]++;\n      sendStatus(response, 400, 'beer not found'); /* istanbul ignore next */cov_1aebqmmulz.s[39]++;\n      return;\n    }\n  } else {/* istanbul ignore next */cov_1aebqmmulz.b[4][1]++;cov_1aebqmmulz.s[40]++;\n    sendJSON(response, 200, beers); /* istanbul ignore next */cov_1aebqmmulz.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-07T23:43:22.536Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-07T23:43:22.536Z"}
{"level":"info","message":"/api/beers","timestamp":"2017-12-07T23:43:22.536Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[5]++;cov_1aebqmmulz.s[43]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_1aebqmmulz.b[6][0]++;\n    let filterBeerById = /* istanbul ignore next */(cov_1aebqmmulz.s[44]++, beers.filter(beer => {/* istanbul ignore next */cov_1aebqmmulz.f[6]++;cov_1aebqmmulz.s[45]++;return beer.id === request.url.query.id;})); /* istanbul ignore next */cov_1aebqmmulz.s[46]++;\n    if (filterBeerById) {/* istanbul ignore next */cov_1aebqmmulz.b[7][0]++;cov_1aebqmmulz.s[47]++;\n      sendJSON(response, 200, filterBeerById); /* istanbul ignore next */cov_1aebqmmulz.s[48]++;\n      return;\n    } else {/* istanbul ignore next */cov_1aebqmmulz.b[7][1]++;cov_1aebqmmulz.s[49]++;\n      sendStatus(response, 400, 'beer not found'); /* istanbul ignore next */cov_1aebqmmulz.s[50]++;\n      return;\n    }\n  } else {/* istanbul ignore next */cov_1aebqmmulz.b[6][1]++;cov_1aebqmmulz.s[51]++;\n    sendJSON(response, 200, beers); /* istanbul ignore next */cov_1aebqmmulz.s[52]++;\n    return;\n  }\n}","timestamp":"2017-12-07T23:43:22.536Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2017-12-07T23:43:22.597Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:43:22.613Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:43:22.614Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[2]++;cov_1aebqmmulz.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_1aebqmmulz.b[0][0]++;cov_1aebqmmulz.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_1aebqmmulz.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[0][1]++;}cov_1aebqmmulz.s[19]++;\n  if (!request.body.brewery) {/* istanbul ignore next */cov_1aebqmmulz.b[1][0]++;cov_1aebqmmulz.s[20]++;\n    sendStatus(response, 400, 'brewery not found'); /* istanbul ignore next */cov_1aebqmmulz.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[1][1]++;}cov_1aebqmmulz.s[22]++;\n  if (!request.body.beerName) {/* istanbul ignore next */cov_1aebqmmulz.b[2][0]++;cov_1aebqmmulz.s[23]++;\n    sendStatus(response, 400, 'beer name not found'); /* istanbul ignore next */cov_1aebqmmulz.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[2][1]++;}cov_1aebqmmulz.s[25]++;\n  if (!request.body.beerType) {/* istanbul ignore next */cov_1aebqmmulz.b[3][0]++;cov_1aebqmmulz.s[26]++;\n    sendStatus(response, 400, 'beer type not found'); /* istanbul ignore next */cov_1aebqmmulz.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[3][1]++;}\n  let beer = /* istanbul ignore next */(cov_1aebqmmulz.s[28]++, new Beer(request.body.brewery, request.body.beerName, request.body.beerType)); /* istanbul ignore next */cov_1aebqmmulz.s[29]++;\n  beers.push(beer); /* istanbul ignore next */cov_1aebqmmulz.s[30]++;\n  sendJSON(response, 200, beer);\n}","timestamp":"2017-12-07T23:43:22.614Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T23:43:22.615Z"}
{"id":"69536070-dba8-11e7-9114-07fcbe9d672a","timestamp":"2017-12-07T23:43:22.615Z","brewery":"Rainier Beer","beerName":"Rainier","beerType":"lager","level":"info","message":""}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:43:22.625Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:43:22.625Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[3]++;cov_1aebqmmulz.s[32]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_1aebqmmulz.b[4][0]++;\n    let findBeerById = /* istanbul ignore next */(cov_1aebqmmulz.s[33]++, beers.find(beer => {/* istanbul ignore next */cov_1aebqmmulz.f[4]++;cov_1aebqmmulz.s[34]++;return beer.id === request.url.query.id;})); /* istanbul ignore next */cov_1aebqmmulz.s[35]++;\n    if (findBeerById) {/* istanbul ignore next */cov_1aebqmmulz.b[5][0]++;cov_1aebqmmulz.s[36]++;\n      sendJSON(response, 200, findBeerById); /* istanbul ignore next */cov_1aebqmmulz.s[37]++;\n      return;\n    } else {/* istanbul ignore next */cov_1aebqmmulz.b[5][1]++;cov_1aebqmmulz.s[38]++;\n      sendStatus(response, 400, 'beer not found'); /* istanbul ignore next */cov_1aebqmmulz.s[39]++;\n      return;\n    }\n  } else {/* istanbul ignore next */cov_1aebqmmulz.b[4][1]++;cov_1aebqmmulz.s[40]++;\n    sendJSON(response, 200, beers); /* istanbul ignore next */cov_1aebqmmulz.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-07T23:43:22.625Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T23:43:22.625Z"}
[{"id":"69536070-dba8-11e7-9114-07fcbe9d672a","timestamp":"2017-12-07T23:43:22.615Z","brewery":"Rainier Beer","beerName":"Rainier","beerType":"lager"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:43:22.629Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:43:22.629Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[2]++;cov_1aebqmmulz.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_1aebqmmulz.b[0][0]++;cov_1aebqmmulz.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_1aebqmmulz.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[0][1]++;}cov_1aebqmmulz.s[19]++;\n  if (!request.body.brewery) {/* istanbul ignore next */cov_1aebqmmulz.b[1][0]++;cov_1aebqmmulz.s[20]++;\n    sendStatus(response, 400, 'brewery not found'); /* istanbul ignore next */cov_1aebqmmulz.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[1][1]++;}cov_1aebqmmulz.s[22]++;\n  if (!request.body.beerName) {/* istanbul ignore next */cov_1aebqmmulz.b[2][0]++;cov_1aebqmmulz.s[23]++;\n    sendStatus(response, 400, 'beer name not found'); /* istanbul ignore next */cov_1aebqmmulz.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[2][1]++;}cov_1aebqmmulz.s[25]++;\n  if (!request.body.beerType) {/* istanbul ignore next */cov_1aebqmmulz.b[3][0]++;cov_1aebqmmulz.s[26]++;\n    sendStatus(response, 400, 'beer type not found'); /* istanbul ignore next */cov_1aebqmmulz.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[3][1]++;}\n  let beer = /* istanbul ignore next */(cov_1aebqmmulz.s[28]++, new Beer(request.body.brewery, request.body.beerName, request.body.beerType)); /* istanbul ignore next */cov_1aebqmmulz.s[29]++;\n  beers.push(beer); /* istanbul ignore next */cov_1aebqmmulz.s[30]++;\n  sendJSON(response, 200, beer);\n}","timestamp":"2017-12-07T23:43:22.630Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T23:43:22.630Z"}
{"id":"6955aa60-dba8-11e7-9114-07fcbe9d672a","timestamp":"2017-12-07T23:43:22.630Z","brewery":"Lagunitas","beerName":"daytime ale","beerType":"session ale","level":"info","message":""}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:43:22.632Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:43:22.634Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[3]++;cov_1aebqmmulz.s[32]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_1aebqmmulz.b[4][0]++;\n    let findBeerById = /* istanbul ignore next */(cov_1aebqmmulz.s[33]++, beers.find(beer => {/* istanbul ignore next */cov_1aebqmmulz.f[4]++;cov_1aebqmmulz.s[34]++;return beer.id === request.url.query.id;})); /* istanbul ignore next */cov_1aebqmmulz.s[35]++;\n    if (findBeerById) {/* istanbul ignore next */cov_1aebqmmulz.b[5][0]++;cov_1aebqmmulz.s[36]++;\n      sendJSON(response, 200, findBeerById); /* istanbul ignore next */cov_1aebqmmulz.s[37]++;\n      return;\n    } else {/* istanbul ignore next */cov_1aebqmmulz.b[5][1]++;cov_1aebqmmulz.s[38]++;\n      sendStatus(response, 400, 'beer not found'); /* istanbul ignore next */cov_1aebqmmulz.s[39]++;\n      return;\n    }\n  } else {/* istanbul ignore next */cov_1aebqmmulz.b[4][1]++;cov_1aebqmmulz.s[40]++;\n    sendJSON(response, 200, beers); /* istanbul ignore next */cov_1aebqmmulz.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-07T23:43:22.634Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T23:43:22.634Z"}
[{"id":"69536070-dba8-11e7-9114-07fcbe9d672a","timestamp":"2017-12-07T23:43:22.615Z","brewery":"Rainier Beer","beerName":"Rainier","beerType":"lager"},{"id":"6955aa60-dba8-11e7-9114-07fcbe9d672a","timestamp":"2017-12-07T23:43:22.630Z","brewery":"Lagunitas","beerName":"daytime ale","beerType":"session ale"}]
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T23:44:03.927Z"}
{"level":"info","message":"/api/beers","timestamp":"2017-12-07T23:44:03.928Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[2]++;cov_1aebqmmulz.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_1aebqmmulz.b[0][0]++;cov_1aebqmmulz.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_1aebqmmulz.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[0][1]++;}cov_1aebqmmulz.s[19]++;\n  if (!request.body.brewery) {/* istanbul ignore next */cov_1aebqmmulz.b[1][0]++;cov_1aebqmmulz.s[20]++;\n    sendStatus(response, 400, 'brewery not found'); /* istanbul ignore next */cov_1aebqmmulz.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[1][1]++;}cov_1aebqmmulz.s[22]++;\n  if (!request.body.beerName) {/* istanbul ignore next */cov_1aebqmmulz.b[2][0]++;cov_1aebqmmulz.s[23]++;\n    sendStatus(response, 400, 'beer name not found'); /* istanbul ignore next */cov_1aebqmmulz.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[2][1]++;}cov_1aebqmmulz.s[25]++;\n  if (!request.body.beerType) {/* istanbul ignore next */cov_1aebqmmulz.b[3][0]++;cov_1aebqmmulz.s[26]++;\n    sendStatus(response, 400, 'beer type not found'); /* istanbul ignore next */cov_1aebqmmulz.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[3][1]++;}\n  let beer = /* istanbul ignore next */(cov_1aebqmmulz.s[28]++, new Beer(request.body.brewery, request.body.beerName, request.body.beerType)); /* istanbul ignore next */cov_1aebqmmulz.s[29]++;\n  beers.push(beer); /* istanbul ignore next */cov_1aebqmmulz.s[30]++;\n  sendJSON(response, 200, beer);\n}","timestamp":"2017-12-07T23:44:03.928Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T23:44:03.928Z"}
{"level":"info","message":"/api/beers","timestamp":"2017-12-07T23:44:03.928Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[3]++;cov_1aebqmmulz.s[32]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_1aebqmmulz.b[4][0]++;\n    let findBeerById = /* istanbul ignore next */(cov_1aebqmmulz.s[33]++, beers.find(beer => {/* istanbul ignore next */cov_1aebqmmulz.f[4]++;cov_1aebqmmulz.s[34]++;return beer.id === request.url.query.id;})); /* istanbul ignore next */cov_1aebqmmulz.s[35]++;\n    if (findBeerById) {/* istanbul ignore next */cov_1aebqmmulz.b[5][0]++;cov_1aebqmmulz.s[36]++;\n      sendJSON(response, 200, findBeerById); /* istanbul ignore next */cov_1aebqmmulz.s[37]++;\n      return;\n    } else {/* istanbul ignore next */cov_1aebqmmulz.b[5][1]++;cov_1aebqmmulz.s[38]++;\n      sendStatus(response, 400, 'beer not found'); /* istanbul ignore next */cov_1aebqmmulz.s[39]++;\n      return;\n    }\n  } else {/* istanbul ignore next */cov_1aebqmmulz.b[4][1]++;cov_1aebqmmulz.s[40]++;\n    sendJSON(response, 200, beers); /* istanbul ignore next */cov_1aebqmmulz.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-07T23:44:03.928Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-07T23:44:03.928Z"}
{"level":"info","message":"/api/beers","timestamp":"2017-12-07T23:44:03.928Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[5]++;cov_1aebqmmulz.s[43]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_1aebqmmulz.b[6][0]++;\n    let filterBeerById = /* istanbul ignore next */(cov_1aebqmmulz.s[44]++, beers.filter(beer => {/* istanbul ignore next */cov_1aebqmmulz.f[6]++;cov_1aebqmmulz.s[45]++;return beer.id === request.url.query.id;})); /* istanbul ignore next */cov_1aebqmmulz.s[46]++;\n    if (filterBeerById) {/* istanbul ignore next */cov_1aebqmmulz.b[7][0]++;cov_1aebqmmulz.s[47]++;\n      sendJSON(response, 200, filterBeerById); /* istanbul ignore next */cov_1aebqmmulz.s[48]++;\n      return;\n    } else {/* istanbul ignore next */cov_1aebqmmulz.b[7][1]++;cov_1aebqmmulz.s[49]++;\n      sendStatus(response, 400, 'beer not found'); /* istanbul ignore next */cov_1aebqmmulz.s[50]++;\n      return;\n    }\n  } else {/* istanbul ignore next */cov_1aebqmmulz.b[6][1]++;cov_1aebqmmulz.s[51]++;\n    sendJSON(response, 200, beers); /* istanbul ignore next */cov_1aebqmmulz.s[52]++;\n    return;\n  }\n}","timestamp":"2017-12-07T23:44:03.928Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2017-12-07T23:44:03.975Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:44:03.990Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:44:03.991Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[2]++;cov_1aebqmmulz.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_1aebqmmulz.b[0][0]++;cov_1aebqmmulz.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_1aebqmmulz.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[0][1]++;}cov_1aebqmmulz.s[19]++;\n  if (!request.body.brewery) {/* istanbul ignore next */cov_1aebqmmulz.b[1][0]++;cov_1aebqmmulz.s[20]++;\n    sendStatus(response, 400, 'brewery not found'); /* istanbul ignore next */cov_1aebqmmulz.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[1][1]++;}cov_1aebqmmulz.s[22]++;\n  if (!request.body.beerName) {/* istanbul ignore next */cov_1aebqmmulz.b[2][0]++;cov_1aebqmmulz.s[23]++;\n    sendStatus(response, 400, 'beer name not found'); /* istanbul ignore next */cov_1aebqmmulz.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[2][1]++;}cov_1aebqmmulz.s[25]++;\n  if (!request.body.beerType) {/* istanbul ignore next */cov_1aebqmmulz.b[3][0]++;cov_1aebqmmulz.s[26]++;\n    sendStatus(response, 400, 'beer type not found'); /* istanbul ignore next */cov_1aebqmmulz.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[3][1]++;}\n  let beer = /* istanbul ignore next */(cov_1aebqmmulz.s[28]++, new Beer(request.body.brewery, request.body.beerName, request.body.beerType)); /* istanbul ignore next */cov_1aebqmmulz.s[29]++;\n  beers.push(beer); /* istanbul ignore next */cov_1aebqmmulz.s[30]++;\n  sendJSON(response, 200, beer);\n}","timestamp":"2017-12-07T23:44:03.991Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T23:44:03.992Z"}
{"id":"81fd0180-dba8-11e7-b101-f37bb47516ef","timestamp":"2017-12-07T23:44:03.992Z","brewery":"Rainier Beer","beerName":"Rainier","beerType":"lager","level":"info","message":""}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:44:04.001Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:44:04.002Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[3]++;cov_1aebqmmulz.s[32]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_1aebqmmulz.b[4][0]++;\n    let findBeerById = /* istanbul ignore next */(cov_1aebqmmulz.s[33]++, beers.find(beer => {/* istanbul ignore next */cov_1aebqmmulz.f[4]++;cov_1aebqmmulz.s[34]++;return beer.id === request.url.query.id;})); /* istanbul ignore next */cov_1aebqmmulz.s[35]++;\n    if (findBeerById) {/* istanbul ignore next */cov_1aebqmmulz.b[5][0]++;cov_1aebqmmulz.s[36]++;\n      sendJSON(response, 200, findBeerById); /* istanbul ignore next */cov_1aebqmmulz.s[37]++;\n      return;\n    } else {/* istanbul ignore next */cov_1aebqmmulz.b[5][1]++;cov_1aebqmmulz.s[38]++;\n      sendStatus(response, 400, 'beer not found'); /* istanbul ignore next */cov_1aebqmmulz.s[39]++;\n      return;\n    }\n  } else {/* istanbul ignore next */cov_1aebqmmulz.b[4][1]++;cov_1aebqmmulz.s[40]++;\n    sendJSON(response, 200, beers); /* istanbul ignore next */cov_1aebqmmulz.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-07T23:44:04.002Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T23:44:04.002Z"}
[{"id":"81fd0180-dba8-11e7-b101-f37bb47516ef","timestamp":"2017-12-07T23:44:03.992Z","brewery":"Rainier Beer","beerName":"Rainier","beerType":"lager"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:44:04.006Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:44:04.007Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[2]++;cov_1aebqmmulz.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_1aebqmmulz.b[0][0]++;cov_1aebqmmulz.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_1aebqmmulz.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[0][1]++;}cov_1aebqmmulz.s[19]++;\n  if (!request.body.brewery) {/* istanbul ignore next */cov_1aebqmmulz.b[1][0]++;cov_1aebqmmulz.s[20]++;\n    sendStatus(response, 400, 'brewery not found'); /* istanbul ignore next */cov_1aebqmmulz.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[1][1]++;}cov_1aebqmmulz.s[22]++;\n  if (!request.body.beerName) {/* istanbul ignore next */cov_1aebqmmulz.b[2][0]++;cov_1aebqmmulz.s[23]++;\n    sendStatus(response, 400, 'beer name not found'); /* istanbul ignore next */cov_1aebqmmulz.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[2][1]++;}cov_1aebqmmulz.s[25]++;\n  if (!request.body.beerType) {/* istanbul ignore next */cov_1aebqmmulz.b[3][0]++;cov_1aebqmmulz.s[26]++;\n    sendStatus(response, 400, 'beer type not found'); /* istanbul ignore next */cov_1aebqmmulz.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[3][1]++;}\n  let beer = /* istanbul ignore next */(cov_1aebqmmulz.s[28]++, new Beer(request.body.brewery, request.body.beerName, request.body.beerType)); /* istanbul ignore next */cov_1aebqmmulz.s[29]++;\n  beers.push(beer); /* istanbul ignore next */cov_1aebqmmulz.s[30]++;\n  sendJSON(response, 200, beer);\n}","timestamp":"2017-12-07T23:44:04.007Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T23:44:04.007Z"}
{"id":"81ff4b70-dba8-11e7-b101-f37bb47516ef","timestamp":"2017-12-07T23:44:04.007Z","brewery":"Lagunitas","beerName":"daytime ale","beerType":"session ale","level":"info","message":""}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:44:04.009Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:44:04.010Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[3]++;cov_1aebqmmulz.s[32]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_1aebqmmulz.b[4][0]++;\n    let findBeerById = /* istanbul ignore next */(cov_1aebqmmulz.s[33]++, beers.find(beer => {/* istanbul ignore next */cov_1aebqmmulz.f[4]++;cov_1aebqmmulz.s[34]++;return beer.id === request.url.query.id;})); /* istanbul ignore next */cov_1aebqmmulz.s[35]++;\n    if (findBeerById) {/* istanbul ignore next */cov_1aebqmmulz.b[5][0]++;cov_1aebqmmulz.s[36]++;\n      sendJSON(response, 200, findBeerById); /* istanbul ignore next */cov_1aebqmmulz.s[37]++;\n      return;\n    } else {/* istanbul ignore next */cov_1aebqmmulz.b[5][1]++;cov_1aebqmmulz.s[38]++;\n      sendStatus(response, 400, 'beer not found'); /* istanbul ignore next */cov_1aebqmmulz.s[39]++;\n      return;\n    }\n  } else {/* istanbul ignore next */cov_1aebqmmulz.b[4][1]++;cov_1aebqmmulz.s[40]++;\n    sendJSON(response, 200, beers); /* istanbul ignore next */cov_1aebqmmulz.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-07T23:44:04.010Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T23:44:04.010Z"}
{"id":"81ff4b70-dba8-11e7-b101-f37bb47516ef","timestamp":"2017-12-07T23:44:04.010Z","brewery":"Lagunitas","beerName":"daytime ale","beerType":"session ale","level":"info","message":""}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T23:44:53.534Z"}
{"level":"info","message":"/api/beers","timestamp":"2017-12-07T23:44:53.535Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[2]++;cov_1aebqmmulz.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_1aebqmmulz.b[0][0]++;cov_1aebqmmulz.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_1aebqmmulz.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[0][1]++;}cov_1aebqmmulz.s[19]++;\n  if (!request.body.brewery) {/* istanbul ignore next */cov_1aebqmmulz.b[1][0]++;cov_1aebqmmulz.s[20]++;\n    sendStatus(response, 400, 'brewery not found'); /* istanbul ignore next */cov_1aebqmmulz.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[1][1]++;}cov_1aebqmmulz.s[22]++;\n  if (!request.body.beerName) {/* istanbul ignore next */cov_1aebqmmulz.b[2][0]++;cov_1aebqmmulz.s[23]++;\n    sendStatus(response, 400, 'beer name not found'); /* istanbul ignore next */cov_1aebqmmulz.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[2][1]++;}cov_1aebqmmulz.s[25]++;\n  if (!request.body.beerType) {/* istanbul ignore next */cov_1aebqmmulz.b[3][0]++;cov_1aebqmmulz.s[26]++;\n    sendStatus(response, 400, 'beer type not found'); /* istanbul ignore next */cov_1aebqmmulz.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[3][1]++;}\n  let beer = /* istanbul ignore next */(cov_1aebqmmulz.s[28]++, new Beer(request.body.brewery, request.body.beerName, request.body.beerType)); /* istanbul ignore next */cov_1aebqmmulz.s[29]++;\n  beers.push(beer); /* istanbul ignore next */cov_1aebqmmulz.s[30]++;\n  sendJSON(response, 200, beer);\n}","timestamp":"2017-12-07T23:44:53.535Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T23:44:53.535Z"}
{"level":"info","message":"/api/beers","timestamp":"2017-12-07T23:44:53.535Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[3]++;cov_1aebqmmulz.s[32]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_1aebqmmulz.b[4][0]++;\n    let findBeerById = /* istanbul ignore next */(cov_1aebqmmulz.s[33]++, beers.find(beer => {/* istanbul ignore next */cov_1aebqmmulz.f[4]++;cov_1aebqmmulz.s[34]++;return beer.id === request.url.query.id;})); /* istanbul ignore next */cov_1aebqmmulz.s[35]++;\n    if (findBeerById) {/* istanbul ignore next */cov_1aebqmmulz.b[5][0]++;cov_1aebqmmulz.s[36]++;\n      sendJSON(response, 200, findBeerById); /* istanbul ignore next */cov_1aebqmmulz.s[37]++;\n      return;\n    } else {/* istanbul ignore next */cov_1aebqmmulz.b[5][1]++;cov_1aebqmmulz.s[38]++;\n      sendStatus(response, 400, 'beer not found'); /* istanbul ignore next */cov_1aebqmmulz.s[39]++;\n      return;\n    }\n  } else {/* istanbul ignore next */cov_1aebqmmulz.b[4][1]++;cov_1aebqmmulz.s[40]++;\n    sendJSON(response, 200, beers); /* istanbul ignore next */cov_1aebqmmulz.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-07T23:44:53.535Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-07T23:44:53.535Z"}
{"level":"info","message":"/api/beers","timestamp":"2017-12-07T23:44:53.535Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[5]++;cov_1aebqmmulz.s[43]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_1aebqmmulz.b[6][0]++;\n    let filterBeerById = /* istanbul ignore next */(cov_1aebqmmulz.s[44]++, beers.filter(beer => {/* istanbul ignore next */cov_1aebqmmulz.f[6]++;cov_1aebqmmulz.s[45]++;return beer.id === request.url.query.id;})); /* istanbul ignore next */cov_1aebqmmulz.s[46]++;\n    if (filterBeerById) {/* istanbul ignore next */cov_1aebqmmulz.b[7][0]++;cov_1aebqmmulz.s[47]++;\n      sendJSON(response, 200, filterBeerById); /* istanbul ignore next */cov_1aebqmmulz.s[48]++;\n      return;\n    } else {/* istanbul ignore next */cov_1aebqmmulz.b[7][1]++;cov_1aebqmmulz.s[49]++;\n      sendStatus(response, 400, 'beer not found'); /* istanbul ignore next */cov_1aebqmmulz.s[50]++;\n      return;\n    }\n  } else {/* istanbul ignore next */cov_1aebqmmulz.b[6][1]++;cov_1aebqmmulz.s[51]++;\n    sendJSON(response, 200, beers); /* istanbul ignore next */cov_1aebqmmulz.s[52]++;\n    return;\n  }\n}","timestamp":"2017-12-07T23:44:53.535Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2017-12-07T23:44:53.584Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:44:53.599Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:44:53.600Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[2]++;cov_1aebqmmulz.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_1aebqmmulz.b[0][0]++;cov_1aebqmmulz.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_1aebqmmulz.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[0][1]++;}cov_1aebqmmulz.s[19]++;\n  if (!request.body.brewery) {/* istanbul ignore next */cov_1aebqmmulz.b[1][0]++;cov_1aebqmmulz.s[20]++;\n    sendStatus(response, 400, 'brewery not found'); /* istanbul ignore next */cov_1aebqmmulz.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[1][1]++;}cov_1aebqmmulz.s[22]++;\n  if (!request.body.beerName) {/* istanbul ignore next */cov_1aebqmmulz.b[2][0]++;cov_1aebqmmulz.s[23]++;\n    sendStatus(response, 400, 'beer name not found'); /* istanbul ignore next */cov_1aebqmmulz.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[2][1]++;}cov_1aebqmmulz.s[25]++;\n  if (!request.body.beerType) {/* istanbul ignore next */cov_1aebqmmulz.b[3][0]++;cov_1aebqmmulz.s[26]++;\n    sendStatus(response, 400, 'beer type not found'); /* istanbul ignore next */cov_1aebqmmulz.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[3][1]++;}\n  let beer = /* istanbul ignore next */(cov_1aebqmmulz.s[28]++, new Beer(request.body.brewery, request.body.beerName, request.body.beerType)); /* istanbul ignore next */cov_1aebqmmulz.s[29]++;\n  beers.push(beer); /* istanbul ignore next */cov_1aebqmmulz.s[30]++;\n  sendJSON(response, 200, beer);\n}","timestamp":"2017-12-07T23:44:53.600Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T23:44:53.600Z"}
{"id":"9f8e9600-dba8-11e7-a5a7-5b55c80e6381","timestamp":"2017-12-07T23:44:53.600Z","brewery":"Rainier Beer","beerName":"Rainier","beerType":"lager","level":"info","message":""}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:44:53.610Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:44:53.610Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[3]++;cov_1aebqmmulz.s[32]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_1aebqmmulz.b[4][0]++;\n    let findBeerById = /* istanbul ignore next */(cov_1aebqmmulz.s[33]++, beers.find(beer => {/* istanbul ignore next */cov_1aebqmmulz.f[4]++;cov_1aebqmmulz.s[34]++;return beer.id === request.url.query.id;})); /* istanbul ignore next */cov_1aebqmmulz.s[35]++;\n    if (findBeerById) {/* istanbul ignore next */cov_1aebqmmulz.b[5][0]++;cov_1aebqmmulz.s[36]++;\n      sendJSON(response, 200, findBeerById); /* istanbul ignore next */cov_1aebqmmulz.s[37]++;\n      return;\n    } else {/* istanbul ignore next */cov_1aebqmmulz.b[5][1]++;cov_1aebqmmulz.s[38]++;\n      sendStatus(response, 400, 'beer not found'); /* istanbul ignore next */cov_1aebqmmulz.s[39]++;\n      return;\n    }\n  } else {/* istanbul ignore next */cov_1aebqmmulz.b[4][1]++;cov_1aebqmmulz.s[40]++;\n    sendJSON(response, 200, beers); /* istanbul ignore next */cov_1aebqmmulz.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-07T23:44:53.610Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T23:44:53.610Z"}
[{"id":"9f8e9600-dba8-11e7-a5a7-5b55c80e6381","timestamp":"2017-12-07T23:44:53.600Z","brewery":"Rainier Beer","beerName":"Rainier","beerType":"lager"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:44:53.614Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:44:53.614Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[2]++;cov_1aebqmmulz.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_1aebqmmulz.b[0][0]++;cov_1aebqmmulz.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_1aebqmmulz.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[0][1]++;}cov_1aebqmmulz.s[19]++;\n  if (!request.body.brewery) {/* istanbul ignore next */cov_1aebqmmulz.b[1][0]++;cov_1aebqmmulz.s[20]++;\n    sendStatus(response, 400, 'brewery not found'); /* istanbul ignore next */cov_1aebqmmulz.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[1][1]++;}cov_1aebqmmulz.s[22]++;\n  if (!request.body.beerName) {/* istanbul ignore next */cov_1aebqmmulz.b[2][0]++;cov_1aebqmmulz.s[23]++;\n    sendStatus(response, 400, 'beer name not found'); /* istanbul ignore next */cov_1aebqmmulz.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[2][1]++;}cov_1aebqmmulz.s[25]++;\n  if (!request.body.beerType) {/* istanbul ignore next */cov_1aebqmmulz.b[3][0]++;cov_1aebqmmulz.s[26]++;\n    sendStatus(response, 400, 'beer type not found'); /* istanbul ignore next */cov_1aebqmmulz.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[3][1]++;}\n  let beer = /* istanbul ignore next */(cov_1aebqmmulz.s[28]++, new Beer(request.body.brewery, request.body.beerName, request.body.beerType)); /* istanbul ignore next */cov_1aebqmmulz.s[29]++;\n  beers.push(beer); /* istanbul ignore next */cov_1aebqmmulz.s[30]++;\n  sendJSON(response, 200, beer);\n}","timestamp":"2017-12-07T23:44:53.615Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T23:44:53.615Z"}
{"id":"9f90dff0-dba8-11e7-a5a7-5b55c80e6381","timestamp":"2017-12-07T23:44:53.615Z","brewery":"Lagunitas","beerName":"daytime ale","beerType":"session ale","level":"info","message":""}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:44:53.617Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:44:53.618Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[3]++;cov_1aebqmmulz.s[32]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_1aebqmmulz.b[4][0]++;\n    let findBeerById = /* istanbul ignore next */(cov_1aebqmmulz.s[33]++, beers.find(beer => {/* istanbul ignore next */cov_1aebqmmulz.f[4]++;cov_1aebqmmulz.s[34]++;return beer.id === request.url.query.id;})); /* istanbul ignore next */cov_1aebqmmulz.s[35]++;\n    if (findBeerById) {/* istanbul ignore next */cov_1aebqmmulz.b[5][0]++;cov_1aebqmmulz.s[36]++;\n      sendJSON(response, 200, findBeerById); /* istanbul ignore next */cov_1aebqmmulz.s[37]++;\n      return;\n    } else {/* istanbul ignore next */cov_1aebqmmulz.b[5][1]++;cov_1aebqmmulz.s[38]++;\n      sendStatus(response, 400, 'beer not found'); /* istanbul ignore next */cov_1aebqmmulz.s[39]++;\n      return;\n    }\n  } else {/* istanbul ignore next */cov_1aebqmmulz.b[4][1]++;cov_1aebqmmulz.s[40]++;\n    sendJSON(response, 200, beers); /* istanbul ignore next */cov_1aebqmmulz.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-07T23:44:53.618Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T23:44:53.618Z"}
{"id":"9f90dff0-dba8-11e7-a5a7-5b55c80e6381","timestamp":"2017-12-07T23:44:53.618Z","brewery":"Lagunitas","beerName":"daytime ale","beerType":"session ale","level":"info","message":""}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:44:53.622Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:44:53.622Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[3]++;cov_1aebqmmulz.s[32]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_1aebqmmulz.b[4][0]++;\n    let findBeerById = /* istanbul ignore next */(cov_1aebqmmulz.s[33]++, beers.find(beer => {/* istanbul ignore next */cov_1aebqmmulz.f[4]++;cov_1aebqmmulz.s[34]++;return beer.id === request.url.query.id;})); /* istanbul ignore next */cov_1aebqmmulz.s[35]++;\n    if (findBeerById) {/* istanbul ignore next */cov_1aebqmmulz.b[5][0]++;cov_1aebqmmulz.s[36]++;\n      sendJSON(response, 200, findBeerById); /* istanbul ignore next */cov_1aebqmmulz.s[37]++;\n      return;\n    } else {/* istanbul ignore next */cov_1aebqmmulz.b[5][1]++;cov_1aebqmmulz.s[38]++;\n      sendStatus(response, 400, 'beer not found'); /* istanbul ignore next */cov_1aebqmmulz.s[39]++;\n      return;\n    }\n  } else {/* istanbul ignore next */cov_1aebqmmulz.b[4][1]++;cov_1aebqmmulz.s[40]++;\n    sendJSON(response, 200, beers); /* istanbul ignore next */cov_1aebqmmulz.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-07T23:44:53.622Z"}
{"level":"info","message":"Responding with a 400 code due to beer not found","timestamp":"2017-12-07T23:44:53.622Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T23:46:53.606Z"}
{"level":"info","message":"/api/beers","timestamp":"2017-12-07T23:46:53.607Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[2]++;cov_1aebqmmulz.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_1aebqmmulz.b[0][0]++;cov_1aebqmmulz.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_1aebqmmulz.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[0][1]++;}cov_1aebqmmulz.s[19]++;\n  if (!request.body.brewery) {/* istanbul ignore next */cov_1aebqmmulz.b[1][0]++;cov_1aebqmmulz.s[20]++;\n    sendStatus(response, 400, 'brewery not found'); /* istanbul ignore next */cov_1aebqmmulz.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[1][1]++;}cov_1aebqmmulz.s[22]++;\n  if (!request.body.beerName) {/* istanbul ignore next */cov_1aebqmmulz.b[2][0]++;cov_1aebqmmulz.s[23]++;\n    sendStatus(response, 400, 'beer name not found'); /* istanbul ignore next */cov_1aebqmmulz.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[2][1]++;}cov_1aebqmmulz.s[25]++;\n  if (!request.body.beerType) {/* istanbul ignore next */cov_1aebqmmulz.b[3][0]++;cov_1aebqmmulz.s[26]++;\n    sendStatus(response, 400, 'beer type not found'); /* istanbul ignore next */cov_1aebqmmulz.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[3][1]++;}\n  let beer = /* istanbul ignore next */(cov_1aebqmmulz.s[28]++, new Beer(request.body.brewery, request.body.beerName, request.body.beerType)); /* istanbul ignore next */cov_1aebqmmulz.s[29]++;\n  beers.push(beer); /* istanbul ignore next */cov_1aebqmmulz.s[30]++;\n  sendJSON(response, 200, beer);\n}","timestamp":"2017-12-07T23:46:53.607Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T23:46:53.607Z"}
{"level":"info","message":"/api/beers","timestamp":"2017-12-07T23:46:53.607Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[3]++;cov_1aebqmmulz.s[32]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_1aebqmmulz.b[4][0]++;\n    let findBeerById = /* istanbul ignore next */(cov_1aebqmmulz.s[33]++, beers.find(beer => {/* istanbul ignore next */cov_1aebqmmulz.f[4]++;cov_1aebqmmulz.s[34]++;return beer.id === request.url.query.id;})); /* istanbul ignore next */cov_1aebqmmulz.s[35]++;\n    if (findBeerById) {/* istanbul ignore next */cov_1aebqmmulz.b[5][0]++;cov_1aebqmmulz.s[36]++;\n      sendJSON(response, 200, findBeerById); /* istanbul ignore next */cov_1aebqmmulz.s[37]++;\n      return;\n    } else {/* istanbul ignore next */cov_1aebqmmulz.b[5][1]++;cov_1aebqmmulz.s[38]++;\n      sendStatus(response, 400, 'beer not found'); /* istanbul ignore next */cov_1aebqmmulz.s[39]++;\n      return;\n    }\n  } else {/* istanbul ignore next */cov_1aebqmmulz.b[4][1]++;cov_1aebqmmulz.s[40]++;\n    sendJSON(response, 200, beers); /* istanbul ignore next */cov_1aebqmmulz.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-07T23:46:53.607Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-07T23:46:53.607Z"}
{"level":"info","message":"/api/beers","timestamp":"2017-12-07T23:46:53.607Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[5]++;cov_1aebqmmulz.s[43]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_1aebqmmulz.b[6][0]++;\n    let filterBeerById = /* istanbul ignore next */(cov_1aebqmmulz.s[44]++, beers.filter(beer => {/* istanbul ignore next */cov_1aebqmmulz.f[6]++;cov_1aebqmmulz.s[45]++;return beer.id === request.url.query.id;})); /* istanbul ignore next */cov_1aebqmmulz.s[46]++;\n    if (filterBeerById) {/* istanbul ignore next */cov_1aebqmmulz.b[7][0]++;cov_1aebqmmulz.s[47]++;\n      sendJSON(response, 200, filterBeerById); /* istanbul ignore next */cov_1aebqmmulz.s[48]++;\n      return;\n    } else {/* istanbul ignore next */cov_1aebqmmulz.b[7][1]++;cov_1aebqmmulz.s[49]++;\n      sendStatus(response, 400, 'beer not found'); /* istanbul ignore next */cov_1aebqmmulz.s[50]++;\n      return;\n    }\n  } else {/* istanbul ignore next */cov_1aebqmmulz.b[6][1]++;cov_1aebqmmulz.s[51]++;\n    sendJSON(response, 200, beers); /* istanbul ignore next */cov_1aebqmmulz.s[52]++;\n    return;\n  }\n}","timestamp":"2017-12-07T23:46:53.607Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2017-12-07T23:46:53.668Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:46:53.685Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:46:53.686Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[2]++;cov_1aebqmmulz.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_1aebqmmulz.b[0][0]++;cov_1aebqmmulz.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_1aebqmmulz.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[0][1]++;}cov_1aebqmmulz.s[19]++;\n  if (!request.body.brewery) {/* istanbul ignore next */cov_1aebqmmulz.b[1][0]++;cov_1aebqmmulz.s[20]++;\n    sendStatus(response, 400, 'brewery not found'); /* istanbul ignore next */cov_1aebqmmulz.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[1][1]++;}cov_1aebqmmulz.s[22]++;\n  if (!request.body.beerName) {/* istanbul ignore next */cov_1aebqmmulz.b[2][0]++;cov_1aebqmmulz.s[23]++;\n    sendStatus(response, 400, 'beer name not found'); /* istanbul ignore next */cov_1aebqmmulz.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[2][1]++;}cov_1aebqmmulz.s[25]++;\n  if (!request.body.beerType) {/* istanbul ignore next */cov_1aebqmmulz.b[3][0]++;cov_1aebqmmulz.s[26]++;\n    sendStatus(response, 400, 'beer type not found'); /* istanbul ignore next */cov_1aebqmmulz.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[3][1]++;}\n  let beer = /* istanbul ignore next */(cov_1aebqmmulz.s[28]++, new Beer(request.body.brewery, request.body.beerName, request.body.beerType)); /* istanbul ignore next */cov_1aebqmmulz.s[29]++;\n  beers.push(beer); /* istanbul ignore next */cov_1aebqmmulz.s[30]++;\n  sendJSON(response, 200, beer);\n}","timestamp":"2017-12-07T23:46:53.686Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T23:46:53.687Z"}
{"id":"e7226870-dba8-11e7-98cc-ef664019fbe2","timestamp":"2017-12-07T23:46:53.687Z","brewery":"Rainier Beer","beerName":"Rainier","beerType":"lager","level":"info","message":""}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:46:53.696Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:46:53.697Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[3]++;cov_1aebqmmulz.s[32]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_1aebqmmulz.b[4][0]++;\n    let findBeerById = /* istanbul ignore next */(cov_1aebqmmulz.s[33]++, beers.find(beer => {/* istanbul ignore next */cov_1aebqmmulz.f[4]++;cov_1aebqmmulz.s[34]++;return beer.id === request.url.query.id;})); /* istanbul ignore next */cov_1aebqmmulz.s[35]++;\n    if (findBeerById) {/* istanbul ignore next */cov_1aebqmmulz.b[5][0]++;cov_1aebqmmulz.s[36]++;\n      sendJSON(response, 200, findBeerById); /* istanbul ignore next */cov_1aebqmmulz.s[37]++;\n      return;\n    } else {/* istanbul ignore next */cov_1aebqmmulz.b[5][1]++;cov_1aebqmmulz.s[38]++;\n      sendStatus(response, 400, 'beer not found'); /* istanbul ignore next */cov_1aebqmmulz.s[39]++;\n      return;\n    }\n  } else {/* istanbul ignore next */cov_1aebqmmulz.b[4][1]++;cov_1aebqmmulz.s[40]++;\n    sendJSON(response, 200, beers); /* istanbul ignore next */cov_1aebqmmulz.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-07T23:46:53.697Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T23:46:53.697Z"}
[{"id":"e7226870-dba8-11e7-98cc-ef664019fbe2","timestamp":"2017-12-07T23:46:53.687Z","brewery":"Rainier Beer","beerName":"Rainier","beerType":"lager"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:46:53.700Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:46:53.701Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[2]++;cov_1aebqmmulz.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_1aebqmmulz.b[0][0]++;cov_1aebqmmulz.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_1aebqmmulz.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[0][1]++;}cov_1aebqmmulz.s[19]++;\n  if (!request.body.brewery) {/* istanbul ignore next */cov_1aebqmmulz.b[1][0]++;cov_1aebqmmulz.s[20]++;\n    sendStatus(response, 400, 'brewery not found'); /* istanbul ignore next */cov_1aebqmmulz.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[1][1]++;}cov_1aebqmmulz.s[22]++;\n  if (!request.body.beerName) {/* istanbul ignore next */cov_1aebqmmulz.b[2][0]++;cov_1aebqmmulz.s[23]++;\n    sendStatus(response, 400, 'beer name not found'); /* istanbul ignore next */cov_1aebqmmulz.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[2][1]++;}cov_1aebqmmulz.s[25]++;\n  if (!request.body.beerType) {/* istanbul ignore next */cov_1aebqmmulz.b[3][0]++;cov_1aebqmmulz.s[26]++;\n    sendStatus(response, 400, 'beer type not found'); /* istanbul ignore next */cov_1aebqmmulz.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[3][1]++;}\n  let beer = /* istanbul ignore next */(cov_1aebqmmulz.s[28]++, new Beer(request.body.brewery, request.body.beerName, request.body.beerType)); /* istanbul ignore next */cov_1aebqmmulz.s[29]++;\n  beers.push(beer); /* istanbul ignore next */cov_1aebqmmulz.s[30]++;\n  sendJSON(response, 200, beer);\n}","timestamp":"2017-12-07T23:46:53.701Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T23:46:53.701Z"}
{"id":"e7248b50-dba8-11e7-98cc-ef664019fbe2","timestamp":"2017-12-07T23:46:53.701Z","brewery":"Lagunitas","beerName":"daytime ale","beerType":"session ale","level":"info","message":""}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:46:53.704Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:46:53.704Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[3]++;cov_1aebqmmulz.s[32]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_1aebqmmulz.b[4][0]++;\n    let findBeerById = /* istanbul ignore next */(cov_1aebqmmulz.s[33]++, beers.find(beer => {/* istanbul ignore next */cov_1aebqmmulz.f[4]++;cov_1aebqmmulz.s[34]++;return beer.id === request.url.query.id;})); /* istanbul ignore next */cov_1aebqmmulz.s[35]++;\n    if (findBeerById) {/* istanbul ignore next */cov_1aebqmmulz.b[5][0]++;cov_1aebqmmulz.s[36]++;\n      sendJSON(response, 200, findBeerById); /* istanbul ignore next */cov_1aebqmmulz.s[37]++;\n      return;\n    } else {/* istanbul ignore next */cov_1aebqmmulz.b[5][1]++;cov_1aebqmmulz.s[38]++;\n      sendStatus(response, 400, 'beer not found'); /* istanbul ignore next */cov_1aebqmmulz.s[39]++;\n      return;\n    }\n  } else {/* istanbul ignore next */cov_1aebqmmulz.b[4][1]++;cov_1aebqmmulz.s[40]++;\n    sendJSON(response, 200, beers); /* istanbul ignore next */cov_1aebqmmulz.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-07T23:46:53.704Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T23:46:53.705Z"}
{"id":"e7248b50-dba8-11e7-98cc-ef664019fbe2","timestamp":"2017-12-07T23:46:53.705Z","brewery":"Lagunitas","beerName":"daytime ale","beerType":"session ale","level":"info","message":""}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:46:53.707Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:46:53.707Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[3]++;cov_1aebqmmulz.s[32]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_1aebqmmulz.b[4][0]++;\n    let findBeerById = /* istanbul ignore next */(cov_1aebqmmulz.s[33]++, beers.find(beer => {/* istanbul ignore next */cov_1aebqmmulz.f[4]++;cov_1aebqmmulz.s[34]++;return beer.id === request.url.query.id;})); /* istanbul ignore next */cov_1aebqmmulz.s[35]++;\n    if (findBeerById) {/* istanbul ignore next */cov_1aebqmmulz.b[5][0]++;cov_1aebqmmulz.s[36]++;\n      sendJSON(response, 200, findBeerById); /* istanbul ignore next */cov_1aebqmmulz.s[37]++;\n      return;\n    } else {/* istanbul ignore next */cov_1aebqmmulz.b[5][1]++;cov_1aebqmmulz.s[38]++;\n      sendStatus(response, 400, 'beer not found'); /* istanbul ignore next */cov_1aebqmmulz.s[39]++;\n      return;\n    }\n  } else {/* istanbul ignore next */cov_1aebqmmulz.b[4][1]++;cov_1aebqmmulz.s[40]++;\n    sendJSON(response, 200, beers); /* istanbul ignore next */cov_1aebqmmulz.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-07T23:46:53.708Z"}
{"level":"info","message":"Responding with a 400 code due to beer not found","timestamp":"2017-12-07T23:46:53.708Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T23:55:53.181Z"}
{"level":"info","message":"/api/beers","timestamp":"2017-12-07T23:55:53.182Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[2]++;cov_1aebqmmulz.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_1aebqmmulz.b[0][0]++;cov_1aebqmmulz.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_1aebqmmulz.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[0][1]++;}cov_1aebqmmulz.s[19]++;\n  if (!request.body.brewery) {/* istanbul ignore next */cov_1aebqmmulz.b[1][0]++;cov_1aebqmmulz.s[20]++;\n    sendStatus(response, 400, 'brewery not found'); /* istanbul ignore next */cov_1aebqmmulz.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[1][1]++;}cov_1aebqmmulz.s[22]++;\n  if (!request.body.beerName) {/* istanbul ignore next */cov_1aebqmmulz.b[2][0]++;cov_1aebqmmulz.s[23]++;\n    sendStatus(response, 400, 'beer name not found'); /* istanbul ignore next */cov_1aebqmmulz.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[2][1]++;}cov_1aebqmmulz.s[25]++;\n  if (!request.body.beerType) {/* istanbul ignore next */cov_1aebqmmulz.b[3][0]++;cov_1aebqmmulz.s[26]++;\n    sendStatus(response, 400, 'beer type not found'); /* istanbul ignore next */cov_1aebqmmulz.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[3][1]++;}\n  let beer = /* istanbul ignore next */(cov_1aebqmmulz.s[28]++, new Beer(request.body.brewery, request.body.beerName, request.body.beerType)); /* istanbul ignore next */cov_1aebqmmulz.s[29]++;\n  beers.push(beer); /* istanbul ignore next */cov_1aebqmmulz.s[30]++;\n  sendJSON(response, 200, beer);\n}","timestamp":"2017-12-07T23:55:53.182Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T23:55:53.182Z"}
{"level":"info","message":"/api/beers","timestamp":"2017-12-07T23:55:53.182Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[3]++;cov_1aebqmmulz.s[32]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_1aebqmmulz.b[4][0]++;\n    let findBeerById = /* istanbul ignore next */(cov_1aebqmmulz.s[33]++, beers.find(beer => {/* istanbul ignore next */cov_1aebqmmulz.f[4]++;cov_1aebqmmulz.s[34]++;return beer.id === request.url.query.id;})); /* istanbul ignore next */cov_1aebqmmulz.s[35]++;\n    if (findBeerById) {/* istanbul ignore next */cov_1aebqmmulz.b[5][0]++;cov_1aebqmmulz.s[36]++;\n      sendJSON(response, 200, findBeerById); /* istanbul ignore next */cov_1aebqmmulz.s[37]++;\n      return;\n    } else {/* istanbul ignore next */cov_1aebqmmulz.b[5][1]++;cov_1aebqmmulz.s[38]++;\n      sendStatus(response, 400, 'beer not found'); /* istanbul ignore next */cov_1aebqmmulz.s[39]++;\n      return;\n    }\n  } else {/* istanbul ignore next */cov_1aebqmmulz.b[4][1]++;cov_1aebqmmulz.s[40]++;\n    sendJSON(response, 200, beers); /* istanbul ignore next */cov_1aebqmmulz.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-07T23:55:53.182Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-07T23:55:53.182Z"}
{"level":"info","message":"/api/beers","timestamp":"2017-12-07T23:55:53.182Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[5]++;cov_1aebqmmulz.s[43]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_1aebqmmulz.b[6][0]++;\n    let filterBeerById = /* istanbul ignore next */(cov_1aebqmmulz.s[44]++, beers.filter(beer => {/* istanbul ignore next */cov_1aebqmmulz.f[6]++;cov_1aebqmmulz.s[45]++;return beer.id === request.url.query.id;})); /* istanbul ignore next */cov_1aebqmmulz.s[46]++;\n    if (filterBeerById) {/* istanbul ignore next */cov_1aebqmmulz.b[7][0]++;cov_1aebqmmulz.s[47]++;\n      beers = filterBeerById; /* istanbul ignore next */cov_1aebqmmulz.s[48]++;\n      sendJSON(response, 200, filterBeerById); /* istanbul ignore next */cov_1aebqmmulz.s[49]++;\n      return;\n    } else {/* istanbul ignore next */cov_1aebqmmulz.b[7][1]++;cov_1aebqmmulz.s[50]++;\n      sendStatus(response, 400, 'beer not found'); /* istanbul ignore next */cov_1aebqmmulz.s[51]++;\n      return;\n    }\n  } else {/* istanbul ignore next */cov_1aebqmmulz.b[6][1]++;cov_1aebqmmulz.s[52]++;\n    sendJSON(response, 200, beers); /* istanbul ignore next */cov_1aebqmmulz.s[53]++;\n    return;\n  }\n}","timestamp":"2017-12-07T23:55:53.182Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2017-12-07T23:55:53.239Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:55:53.254Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:55:53.255Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[2]++;cov_1aebqmmulz.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_1aebqmmulz.b[0][0]++;cov_1aebqmmulz.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_1aebqmmulz.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[0][1]++;}cov_1aebqmmulz.s[19]++;\n  if (!request.body.brewery) {/* istanbul ignore next */cov_1aebqmmulz.b[1][0]++;cov_1aebqmmulz.s[20]++;\n    sendStatus(response, 400, 'brewery not found'); /* istanbul ignore next */cov_1aebqmmulz.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[1][1]++;}cov_1aebqmmulz.s[22]++;\n  if (!request.body.beerName) {/* istanbul ignore next */cov_1aebqmmulz.b[2][0]++;cov_1aebqmmulz.s[23]++;\n    sendStatus(response, 400, 'beer name not found'); /* istanbul ignore next */cov_1aebqmmulz.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[2][1]++;}cov_1aebqmmulz.s[25]++;\n  if (!request.body.beerType) {/* istanbul ignore next */cov_1aebqmmulz.b[3][0]++;cov_1aebqmmulz.s[26]++;\n    sendStatus(response, 400, 'beer type not found'); /* istanbul ignore next */cov_1aebqmmulz.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[3][1]++;}\n  let beer = /* istanbul ignore next */(cov_1aebqmmulz.s[28]++, new Beer(request.body.brewery, request.body.beerName, request.body.beerType)); /* istanbul ignore next */cov_1aebqmmulz.s[29]++;\n  beers.push(beer); /* istanbul ignore next */cov_1aebqmmulz.s[30]++;\n  sendJSON(response, 200, beer);\n}","timestamp":"2017-12-07T23:55:53.255Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T23:55:53.255Z"}
{"id":"28bdf370-dbaa-11e7-8429-4dbdc645a6a7","timestamp":"2017-12-07T23:55:53.255Z","brewery":"Rainier Beer","beerName":"Rainier","beerType":"lager","level":"info","message":""}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:55:53.265Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:55:53.265Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[3]++;cov_1aebqmmulz.s[32]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_1aebqmmulz.b[4][0]++;\n    let findBeerById = /* istanbul ignore next */(cov_1aebqmmulz.s[33]++, beers.find(beer => {/* istanbul ignore next */cov_1aebqmmulz.f[4]++;cov_1aebqmmulz.s[34]++;return beer.id === request.url.query.id;})); /* istanbul ignore next */cov_1aebqmmulz.s[35]++;\n    if (findBeerById) {/* istanbul ignore next */cov_1aebqmmulz.b[5][0]++;cov_1aebqmmulz.s[36]++;\n      sendJSON(response, 200, findBeerById); /* istanbul ignore next */cov_1aebqmmulz.s[37]++;\n      return;\n    } else {/* istanbul ignore next */cov_1aebqmmulz.b[5][1]++;cov_1aebqmmulz.s[38]++;\n      sendStatus(response, 400, 'beer not found'); /* istanbul ignore next */cov_1aebqmmulz.s[39]++;\n      return;\n    }\n  } else {/* istanbul ignore next */cov_1aebqmmulz.b[4][1]++;cov_1aebqmmulz.s[40]++;\n    sendJSON(response, 200, beers); /* istanbul ignore next */cov_1aebqmmulz.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-07T23:55:53.265Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T23:55:53.265Z"}
[{"id":"28bdf370-dbaa-11e7-8429-4dbdc645a6a7","timestamp":"2017-12-07T23:55:53.255Z","brewery":"Rainier Beer","beerName":"Rainier","beerType":"lager"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:55:53.269Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:55:53.269Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[2]++;cov_1aebqmmulz.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_1aebqmmulz.b[0][0]++;cov_1aebqmmulz.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_1aebqmmulz.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[0][1]++;}cov_1aebqmmulz.s[19]++;\n  if (!request.body.brewery) {/* istanbul ignore next */cov_1aebqmmulz.b[1][0]++;cov_1aebqmmulz.s[20]++;\n    sendStatus(response, 400, 'brewery not found'); /* istanbul ignore next */cov_1aebqmmulz.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[1][1]++;}cov_1aebqmmulz.s[22]++;\n  if (!request.body.beerName) {/* istanbul ignore next */cov_1aebqmmulz.b[2][0]++;cov_1aebqmmulz.s[23]++;\n    sendStatus(response, 400, 'beer name not found'); /* istanbul ignore next */cov_1aebqmmulz.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[2][1]++;}cov_1aebqmmulz.s[25]++;\n  if (!request.body.beerType) {/* istanbul ignore next */cov_1aebqmmulz.b[3][0]++;cov_1aebqmmulz.s[26]++;\n    sendStatus(response, 400, 'beer type not found'); /* istanbul ignore next */cov_1aebqmmulz.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[3][1]++;}\n  let beer = /* istanbul ignore next */(cov_1aebqmmulz.s[28]++, new Beer(request.body.brewery, request.body.beerName, request.body.beerType)); /* istanbul ignore next */cov_1aebqmmulz.s[29]++;\n  beers.push(beer); /* istanbul ignore next */cov_1aebqmmulz.s[30]++;\n  sendJSON(response, 200, beer);\n}","timestamp":"2017-12-07T23:55:53.269Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T23:55:53.269Z"}
{"id":"28c01650-dbaa-11e7-8429-4dbdc645a6a7","timestamp":"2017-12-07T23:55:53.269Z","brewery":"Lagunitas","beerName":"daytime ale","beerType":"session ale","level":"info","message":""}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:55:53.272Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:55:53.272Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[3]++;cov_1aebqmmulz.s[32]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_1aebqmmulz.b[4][0]++;\n    let findBeerById = /* istanbul ignore next */(cov_1aebqmmulz.s[33]++, beers.find(beer => {/* istanbul ignore next */cov_1aebqmmulz.f[4]++;cov_1aebqmmulz.s[34]++;return beer.id === request.url.query.id;})); /* istanbul ignore next */cov_1aebqmmulz.s[35]++;\n    if (findBeerById) {/* istanbul ignore next */cov_1aebqmmulz.b[5][0]++;cov_1aebqmmulz.s[36]++;\n      sendJSON(response, 200, findBeerById); /* istanbul ignore next */cov_1aebqmmulz.s[37]++;\n      return;\n    } else {/* istanbul ignore next */cov_1aebqmmulz.b[5][1]++;cov_1aebqmmulz.s[38]++;\n      sendStatus(response, 400, 'beer not found'); /* istanbul ignore next */cov_1aebqmmulz.s[39]++;\n      return;\n    }\n  } else {/* istanbul ignore next */cov_1aebqmmulz.b[4][1]++;cov_1aebqmmulz.s[40]++;\n    sendJSON(response, 200, beers); /* istanbul ignore next */cov_1aebqmmulz.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-07T23:55:53.272Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T23:55:53.273Z"}
{"id":"28c01650-dbaa-11e7-8429-4dbdc645a6a7","timestamp":"2017-12-07T23:55:53.273Z","brewery":"Lagunitas","beerName":"daytime ale","beerType":"session ale","level":"info","message":""}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:55:53.275Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:55:53.275Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[3]++;cov_1aebqmmulz.s[32]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_1aebqmmulz.b[4][0]++;\n    let findBeerById = /* istanbul ignore next */(cov_1aebqmmulz.s[33]++, beers.find(beer => {/* istanbul ignore next */cov_1aebqmmulz.f[4]++;cov_1aebqmmulz.s[34]++;return beer.id === request.url.query.id;})); /* istanbul ignore next */cov_1aebqmmulz.s[35]++;\n    if (findBeerById) {/* istanbul ignore next */cov_1aebqmmulz.b[5][0]++;cov_1aebqmmulz.s[36]++;\n      sendJSON(response, 200, findBeerById); /* istanbul ignore next */cov_1aebqmmulz.s[37]++;\n      return;\n    } else {/* istanbul ignore next */cov_1aebqmmulz.b[5][1]++;cov_1aebqmmulz.s[38]++;\n      sendStatus(response, 400, 'beer not found'); /* istanbul ignore next */cov_1aebqmmulz.s[39]++;\n      return;\n    }\n  } else {/* istanbul ignore next */cov_1aebqmmulz.b[4][1]++;cov_1aebqmmulz.s[40]++;\n    sendJSON(response, 200, beers); /* istanbul ignore next */cov_1aebqmmulz.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-07T23:55:53.275Z"}
{"level":"info","message":"Responding with a 400 code due to beer not found","timestamp":"2017-12-07T23:55:53.275Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:55:53.280Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:55:53.280Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[2]++;cov_1aebqmmulz.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_1aebqmmulz.b[0][0]++;cov_1aebqmmulz.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_1aebqmmulz.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[0][1]++;}cov_1aebqmmulz.s[19]++;\n  if (!request.body.brewery) {/* istanbul ignore next */cov_1aebqmmulz.b[1][0]++;cov_1aebqmmulz.s[20]++;\n    sendStatus(response, 400, 'brewery not found'); /* istanbul ignore next */cov_1aebqmmulz.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[1][1]++;}cov_1aebqmmulz.s[22]++;\n  if (!request.body.beerName) {/* istanbul ignore next */cov_1aebqmmulz.b[2][0]++;cov_1aebqmmulz.s[23]++;\n    sendStatus(response, 400, 'beer name not found'); /* istanbul ignore next */cov_1aebqmmulz.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[2][1]++;}cov_1aebqmmulz.s[25]++;\n  if (!request.body.beerType) {/* istanbul ignore next */cov_1aebqmmulz.b[3][0]++;cov_1aebqmmulz.s[26]++;\n    sendStatus(response, 400, 'beer type not found'); /* istanbul ignore next */cov_1aebqmmulz.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[3][1]++;}\n  let beer = /* istanbul ignore next */(cov_1aebqmmulz.s[28]++, new Beer(request.body.brewery, request.body.beerName, request.body.beerType)); /* istanbul ignore next */cov_1aebqmmulz.s[29]++;\n  beers.push(beer); /* istanbul ignore next */cov_1aebqmmulz.s[30]++;\n  sendJSON(response, 200, beer);\n}","timestamp":"2017-12-07T23:55:53.280Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T23:55:53.280Z"}
{"id":"28c1c400-dbaa-11e7-8429-4dbdc645a6a7","timestamp":"2017-12-07T23:55:53.280Z","brewery":"Lagunitas","beerName":"daytime ale","beerType":"session ale","level":"info","message":""}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:55:53.282Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:55:53.282Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[3]++;cov_1aebqmmulz.s[32]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_1aebqmmulz.b[4][0]++;\n    let findBeerById = /* istanbul ignore next */(cov_1aebqmmulz.s[33]++, beers.find(beer => {/* istanbul ignore next */cov_1aebqmmulz.f[4]++;cov_1aebqmmulz.s[34]++;return beer.id === request.url.query.id;})); /* istanbul ignore next */cov_1aebqmmulz.s[35]++;\n    if (findBeerById) {/* istanbul ignore next */cov_1aebqmmulz.b[5][0]++;cov_1aebqmmulz.s[36]++;\n      sendJSON(response, 200, findBeerById); /* istanbul ignore next */cov_1aebqmmulz.s[37]++;\n      return;\n    } else {/* istanbul ignore next */cov_1aebqmmulz.b[5][1]++;cov_1aebqmmulz.s[38]++;\n      sendStatus(response, 400, 'beer not found'); /* istanbul ignore next */cov_1aebqmmulz.s[39]++;\n      return;\n    }\n  } else {/* istanbul ignore next */cov_1aebqmmulz.b[4][1]++;cov_1aebqmmulz.s[40]++;\n    sendJSON(response, 200, beers); /* istanbul ignore next */cov_1aebqmmulz.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-07T23:55:53.282Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T23:55:53.282Z"}
{"id":"28c1c400-dbaa-11e7-8429-4dbdc645a6a7","timestamp":"2017-12-07T23:55:53.282Z","brewery":"Lagunitas","beerName":"daytime ale","beerType":"session ale","level":"info","message":""}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T23:56:55.687Z"}
{"level":"info","message":"/api/beers","timestamp":"2017-12-07T23:56:55.687Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[2]++;cov_1aebqmmulz.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_1aebqmmulz.b[0][0]++;cov_1aebqmmulz.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_1aebqmmulz.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[0][1]++;}cov_1aebqmmulz.s[19]++;\n  if (!request.body.brewery) {/* istanbul ignore next */cov_1aebqmmulz.b[1][0]++;cov_1aebqmmulz.s[20]++;\n    sendStatus(response, 400, 'brewery not found'); /* istanbul ignore next */cov_1aebqmmulz.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[1][1]++;}cov_1aebqmmulz.s[22]++;\n  if (!request.body.beerName) {/* istanbul ignore next */cov_1aebqmmulz.b[2][0]++;cov_1aebqmmulz.s[23]++;\n    sendStatus(response, 400, 'beer name not found'); /* istanbul ignore next */cov_1aebqmmulz.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[2][1]++;}cov_1aebqmmulz.s[25]++;\n  if (!request.body.beerType) {/* istanbul ignore next */cov_1aebqmmulz.b[3][0]++;cov_1aebqmmulz.s[26]++;\n    sendStatus(response, 400, 'beer type not found'); /* istanbul ignore next */cov_1aebqmmulz.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[3][1]++;}\n  let beer = /* istanbul ignore next */(cov_1aebqmmulz.s[28]++, new Beer(request.body.brewery, request.body.beerName, request.body.beerType)); /* istanbul ignore next */cov_1aebqmmulz.s[29]++;\n  beers.push(beer); /* istanbul ignore next */cov_1aebqmmulz.s[30]++;\n  sendJSON(response, 200, beer);\n}","timestamp":"2017-12-07T23:56:55.687Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T23:56:55.688Z"}
{"level":"info","message":"/api/beers","timestamp":"2017-12-07T23:56:55.688Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[3]++;cov_1aebqmmulz.s[32]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_1aebqmmulz.b[4][0]++;\n    let findBeerById = /* istanbul ignore next */(cov_1aebqmmulz.s[33]++, beers.find(beer => {/* istanbul ignore next */cov_1aebqmmulz.f[4]++;cov_1aebqmmulz.s[34]++;return beer.id === request.url.query.id;})); /* istanbul ignore next */cov_1aebqmmulz.s[35]++;\n    if (findBeerById) {/* istanbul ignore next */cov_1aebqmmulz.b[5][0]++;cov_1aebqmmulz.s[36]++;\n      sendJSON(response, 200, findBeerById); /* istanbul ignore next */cov_1aebqmmulz.s[37]++;\n      return;\n    } else {/* istanbul ignore next */cov_1aebqmmulz.b[5][1]++;cov_1aebqmmulz.s[38]++;\n      sendStatus(response, 400, 'beer not found'); /* istanbul ignore next */cov_1aebqmmulz.s[39]++;\n      return;\n    }\n  } else {/* istanbul ignore next */cov_1aebqmmulz.b[4][1]++;cov_1aebqmmulz.s[40]++;\n    sendJSON(response, 200, beers); /* istanbul ignore next */cov_1aebqmmulz.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-07T23:56:55.688Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-07T23:56:55.688Z"}
{"level":"info","message":"/api/beers","timestamp":"2017-12-07T23:56:55.688Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[5]++;cov_1aebqmmulz.s[43]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_1aebqmmulz.b[6][0]++;\n    let filterBeerById = /* istanbul ignore next */(cov_1aebqmmulz.s[44]++, beers.filter(beer => {/* istanbul ignore next */cov_1aebqmmulz.f[6]++;cov_1aebqmmulz.s[45]++;return beer.id === request.url.query.id;})); /* istanbul ignore next */cov_1aebqmmulz.s[46]++;\n    if (filterBeerById) {/* istanbul ignore next */cov_1aebqmmulz.b[7][0]++;cov_1aebqmmulz.s[47]++;\n      beers = filterBeerById; /* istanbul ignore next */cov_1aebqmmulz.s[48]++;\n      sendJSON(response, 200, filterBeerById); /* istanbul ignore next */cov_1aebqmmulz.s[49]++;\n      return;\n    } else {/* istanbul ignore next */cov_1aebqmmulz.b[7][1]++;cov_1aebqmmulz.s[50]++;\n      sendStatus(response, 400, 'beer not found'); /* istanbul ignore next */cov_1aebqmmulz.s[51]++;\n      return;\n    }\n  } else {/* istanbul ignore next */cov_1aebqmmulz.b[6][1]++;cov_1aebqmmulz.s[52]++;\n    sendJSON(response, 200, beers); /* istanbul ignore next */cov_1aebqmmulz.s[53]++;\n    return;\n  }\n}","timestamp":"2017-12-07T23:56:55.688Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2017-12-07T23:56:55.735Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:56:55.750Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:56:55.751Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[2]++;cov_1aebqmmulz.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_1aebqmmulz.b[0][0]++;cov_1aebqmmulz.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_1aebqmmulz.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[0][1]++;}cov_1aebqmmulz.s[19]++;\n  if (!request.body.brewery) {/* istanbul ignore next */cov_1aebqmmulz.b[1][0]++;cov_1aebqmmulz.s[20]++;\n    sendStatus(response, 400, 'brewery not found'); /* istanbul ignore next */cov_1aebqmmulz.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[1][1]++;}cov_1aebqmmulz.s[22]++;\n  if (!request.body.beerName) {/* istanbul ignore next */cov_1aebqmmulz.b[2][0]++;cov_1aebqmmulz.s[23]++;\n    sendStatus(response, 400, 'beer name not found'); /* istanbul ignore next */cov_1aebqmmulz.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[2][1]++;}cov_1aebqmmulz.s[25]++;\n  if (!request.body.beerType) {/* istanbul ignore next */cov_1aebqmmulz.b[3][0]++;cov_1aebqmmulz.s[26]++;\n    sendStatus(response, 400, 'beer type not found'); /* istanbul ignore next */cov_1aebqmmulz.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[3][1]++;}\n  let beer = /* istanbul ignore next */(cov_1aebqmmulz.s[28]++, new Beer(request.body.brewery, request.body.beerName, request.body.beerType)); /* istanbul ignore next */cov_1aebqmmulz.s[29]++;\n  beers.push(beer); /* istanbul ignore next */cov_1aebqmmulz.s[30]++;\n  sendJSON(response, 200, beer);\n}","timestamp":"2017-12-07T23:56:55.751Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T23:56:55.752Z"}
{"id":"4dfe3c80-dbaa-11e7-90f6-33b7d51baf2a","timestamp":"2017-12-07T23:56:55.752Z","brewery":"Rainier Beer","beerName":"Rainier","beerType":"lager","level":"info","message":""}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:56:55.761Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:56:55.761Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[3]++;cov_1aebqmmulz.s[32]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_1aebqmmulz.b[4][0]++;\n    let findBeerById = /* istanbul ignore next */(cov_1aebqmmulz.s[33]++, beers.find(beer => {/* istanbul ignore next */cov_1aebqmmulz.f[4]++;cov_1aebqmmulz.s[34]++;return beer.id === request.url.query.id;})); /* istanbul ignore next */cov_1aebqmmulz.s[35]++;\n    if (findBeerById) {/* istanbul ignore next */cov_1aebqmmulz.b[5][0]++;cov_1aebqmmulz.s[36]++;\n      sendJSON(response, 200, findBeerById); /* istanbul ignore next */cov_1aebqmmulz.s[37]++;\n      return;\n    } else {/* istanbul ignore next */cov_1aebqmmulz.b[5][1]++;cov_1aebqmmulz.s[38]++;\n      sendStatus(response, 400, 'beer not found'); /* istanbul ignore next */cov_1aebqmmulz.s[39]++;\n      return;\n    }\n  } else {/* istanbul ignore next */cov_1aebqmmulz.b[4][1]++;cov_1aebqmmulz.s[40]++;\n    sendJSON(response, 200, beers); /* istanbul ignore next */cov_1aebqmmulz.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-07T23:56:55.761Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T23:56:55.762Z"}
[{"id":"4dfe3c80-dbaa-11e7-90f6-33b7d51baf2a","timestamp":"2017-12-07T23:56:55.752Z","brewery":"Rainier Beer","beerName":"Rainier","beerType":"lager"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:56:55.765Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:56:55.765Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[2]++;cov_1aebqmmulz.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_1aebqmmulz.b[0][0]++;cov_1aebqmmulz.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_1aebqmmulz.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[0][1]++;}cov_1aebqmmulz.s[19]++;\n  if (!request.body.brewery) {/* istanbul ignore next */cov_1aebqmmulz.b[1][0]++;cov_1aebqmmulz.s[20]++;\n    sendStatus(response, 400, 'brewery not found'); /* istanbul ignore next */cov_1aebqmmulz.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[1][1]++;}cov_1aebqmmulz.s[22]++;\n  if (!request.body.beerName) {/* istanbul ignore next */cov_1aebqmmulz.b[2][0]++;cov_1aebqmmulz.s[23]++;\n    sendStatus(response, 400, 'beer name not found'); /* istanbul ignore next */cov_1aebqmmulz.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[2][1]++;}cov_1aebqmmulz.s[25]++;\n  if (!request.body.beerType) {/* istanbul ignore next */cov_1aebqmmulz.b[3][0]++;cov_1aebqmmulz.s[26]++;\n    sendStatus(response, 400, 'beer type not found'); /* istanbul ignore next */cov_1aebqmmulz.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[3][1]++;}\n  let beer = /* istanbul ignore next */(cov_1aebqmmulz.s[28]++, new Beer(request.body.brewery, request.body.beerName, request.body.beerType)); /* istanbul ignore next */cov_1aebqmmulz.s[29]++;\n  beers.push(beer); /* istanbul ignore next */cov_1aebqmmulz.s[30]++;\n  sendJSON(response, 200, beer);\n}","timestamp":"2017-12-07T23:56:55.765Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T23:56:55.765Z"}
{"id":"4e003850-dbaa-11e7-90f6-33b7d51baf2a","timestamp":"2017-12-07T23:56:55.765Z","brewery":"Lagunitas","beerName":"daytime ale","beerType":"session ale","level":"info","message":""}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:56:55.768Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:56:55.769Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[3]++;cov_1aebqmmulz.s[32]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_1aebqmmulz.b[4][0]++;\n    let findBeerById = /* istanbul ignore next */(cov_1aebqmmulz.s[33]++, beers.find(beer => {/* istanbul ignore next */cov_1aebqmmulz.f[4]++;cov_1aebqmmulz.s[34]++;return beer.id === request.url.query.id;})); /* istanbul ignore next */cov_1aebqmmulz.s[35]++;\n    if (findBeerById) {/* istanbul ignore next */cov_1aebqmmulz.b[5][0]++;cov_1aebqmmulz.s[36]++;\n      sendJSON(response, 200, findBeerById); /* istanbul ignore next */cov_1aebqmmulz.s[37]++;\n      return;\n    } else {/* istanbul ignore next */cov_1aebqmmulz.b[5][1]++;cov_1aebqmmulz.s[38]++;\n      sendStatus(response, 400, 'beer not found'); /* istanbul ignore next */cov_1aebqmmulz.s[39]++;\n      return;\n    }\n  } else {/* istanbul ignore next */cov_1aebqmmulz.b[4][1]++;cov_1aebqmmulz.s[40]++;\n    sendJSON(response, 200, beers); /* istanbul ignore next */cov_1aebqmmulz.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-07T23:56:55.769Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T23:56:55.770Z"}
{"id":"4e003850-dbaa-11e7-90f6-33b7d51baf2a","timestamp":"2017-12-07T23:56:55.770Z","brewery":"Lagunitas","beerName":"daytime ale","beerType":"session ale","level":"info","message":""}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:56:55.772Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:56:55.772Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[3]++;cov_1aebqmmulz.s[32]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_1aebqmmulz.b[4][0]++;\n    let findBeerById = /* istanbul ignore next */(cov_1aebqmmulz.s[33]++, beers.find(beer => {/* istanbul ignore next */cov_1aebqmmulz.f[4]++;cov_1aebqmmulz.s[34]++;return beer.id === request.url.query.id;})); /* istanbul ignore next */cov_1aebqmmulz.s[35]++;\n    if (findBeerById) {/* istanbul ignore next */cov_1aebqmmulz.b[5][0]++;cov_1aebqmmulz.s[36]++;\n      sendJSON(response, 200, findBeerById); /* istanbul ignore next */cov_1aebqmmulz.s[37]++;\n      return;\n    } else {/* istanbul ignore next */cov_1aebqmmulz.b[5][1]++;cov_1aebqmmulz.s[38]++;\n      sendStatus(response, 400, 'beer not found'); /* istanbul ignore next */cov_1aebqmmulz.s[39]++;\n      return;\n    }\n  } else {/* istanbul ignore next */cov_1aebqmmulz.b[4][1]++;cov_1aebqmmulz.s[40]++;\n    sendJSON(response, 200, beers); /* istanbul ignore next */cov_1aebqmmulz.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-07T23:56:55.772Z"}
{"level":"info","message":"Responding with a 400 code due to beer not found","timestamp":"2017-12-07T23:56:55.772Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:56:55.776Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:56:55.776Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[2]++;cov_1aebqmmulz.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_1aebqmmulz.b[0][0]++;cov_1aebqmmulz.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_1aebqmmulz.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[0][1]++;}cov_1aebqmmulz.s[19]++;\n  if (!request.body.brewery) {/* istanbul ignore next */cov_1aebqmmulz.b[1][0]++;cov_1aebqmmulz.s[20]++;\n    sendStatus(response, 400, 'brewery not found'); /* istanbul ignore next */cov_1aebqmmulz.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[1][1]++;}cov_1aebqmmulz.s[22]++;\n  if (!request.body.beerName) {/* istanbul ignore next */cov_1aebqmmulz.b[2][0]++;cov_1aebqmmulz.s[23]++;\n    sendStatus(response, 400, 'beer name not found'); /* istanbul ignore next */cov_1aebqmmulz.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[2][1]++;}cov_1aebqmmulz.s[25]++;\n  if (!request.body.beerType) {/* istanbul ignore next */cov_1aebqmmulz.b[3][0]++;cov_1aebqmmulz.s[26]++;\n    sendStatus(response, 400, 'beer type not found'); /* istanbul ignore next */cov_1aebqmmulz.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[3][1]++;}\n  let beer = /* istanbul ignore next */(cov_1aebqmmulz.s[28]++, new Beer(request.body.brewery, request.body.beerName, request.body.beerType)); /* istanbul ignore next */cov_1aebqmmulz.s[29]++;\n  beers.push(beer); /* istanbul ignore next */cov_1aebqmmulz.s[30]++;\n  sendJSON(response, 200, beer);\n}","timestamp":"2017-12-07T23:56:55.776Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T23:56:55.776Z"}
{"id":"4e01e600-dbaa-11e7-90f6-33b7d51baf2a","timestamp":"2017-12-07T23:56:55.776Z","brewery":"Lagunitas","beerName":"daytime ale","beerType":"session ale","level":"info","message":""}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:56:55.780Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:56:55.780Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[5]++;cov_1aebqmmulz.s[43]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_1aebqmmulz.b[6][0]++;\n    let filterBeerById = /* istanbul ignore next */(cov_1aebqmmulz.s[44]++, beers.filter(beer => {/* istanbul ignore next */cov_1aebqmmulz.f[6]++;cov_1aebqmmulz.s[45]++;return beer.id === request.url.query.id;})); /* istanbul ignore next */cov_1aebqmmulz.s[46]++;\n    if (filterBeerById) {/* istanbul ignore next */cov_1aebqmmulz.b[7][0]++;cov_1aebqmmulz.s[47]++;\n      beers = filterBeerById; /* istanbul ignore next */cov_1aebqmmulz.s[48]++;\n      sendJSON(response, 200, filterBeerById); /* istanbul ignore next */cov_1aebqmmulz.s[49]++;\n      return;\n    } else {/* istanbul ignore next */cov_1aebqmmulz.b[7][1]++;cov_1aebqmmulz.s[50]++;\n      sendStatus(response, 400, 'beer not found'); /* istanbul ignore next */cov_1aebqmmulz.s[51]++;\n      return;\n    }\n  } else {/* istanbul ignore next */cov_1aebqmmulz.b[6][1]++;cov_1aebqmmulz.s[52]++;\n    sendJSON(response, 200, beers); /* istanbul ignore next */cov_1aebqmmulz.s[53]++;\n    return;\n  }\n}","timestamp":"2017-12-07T23:56:55.780Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T23:56:55.780Z"}
[{"id":"4e01e600-dbaa-11e7-90f6-33b7d51baf2a","timestamp":"2017-12-07T23:56:55.776Z","brewery":"Lagunitas","beerName":"daytime ale","beerType":"session ale"}]
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T23:59:06.154Z"}
{"level":"info","message":"/api/beers","timestamp":"2017-12-07T23:59:06.155Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[2]++;cov_1aebqmmulz.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_1aebqmmulz.b[0][0]++;cov_1aebqmmulz.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_1aebqmmulz.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[0][1]++;}cov_1aebqmmulz.s[19]++;\n  if (!request.body.brewery) {/* istanbul ignore next */cov_1aebqmmulz.b[1][0]++;cov_1aebqmmulz.s[20]++;\n    sendStatus(response, 400, 'brewery not found'); /* istanbul ignore next */cov_1aebqmmulz.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[1][1]++;}cov_1aebqmmulz.s[22]++;\n  if (!request.body.beerName) {/* istanbul ignore next */cov_1aebqmmulz.b[2][0]++;cov_1aebqmmulz.s[23]++;\n    sendStatus(response, 400, 'beer name not found'); /* istanbul ignore next */cov_1aebqmmulz.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[2][1]++;}cov_1aebqmmulz.s[25]++;\n  if (!request.body.beerType) {/* istanbul ignore next */cov_1aebqmmulz.b[3][0]++;cov_1aebqmmulz.s[26]++;\n    sendStatus(response, 400, 'beer type not found'); /* istanbul ignore next */cov_1aebqmmulz.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[3][1]++;}\n  let beer = /* istanbul ignore next */(cov_1aebqmmulz.s[28]++, new Beer(request.body.brewery, request.body.beerName, request.body.beerType)); /* istanbul ignore next */cov_1aebqmmulz.s[29]++;\n  beers.push(beer); /* istanbul ignore next */cov_1aebqmmulz.s[30]++;\n  sendJSON(response, 200, beer);\n}","timestamp":"2017-12-07T23:59:06.155Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T23:59:06.155Z"}
{"level":"info","message":"/api/beers","timestamp":"2017-12-07T23:59:06.155Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[3]++;cov_1aebqmmulz.s[32]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_1aebqmmulz.b[4][0]++;\n    let findBeerById = /* istanbul ignore next */(cov_1aebqmmulz.s[33]++, beers.find(beer => {/* istanbul ignore next */cov_1aebqmmulz.f[4]++;cov_1aebqmmulz.s[34]++;return beer.id === request.url.query.id;})); /* istanbul ignore next */cov_1aebqmmulz.s[35]++;\n    if (findBeerById) {/* istanbul ignore next */cov_1aebqmmulz.b[5][0]++;cov_1aebqmmulz.s[36]++;\n      sendJSON(response, 200, findBeerById); /* istanbul ignore next */cov_1aebqmmulz.s[37]++;\n      return;\n    } else {/* istanbul ignore next */cov_1aebqmmulz.b[5][1]++;cov_1aebqmmulz.s[38]++;\n      sendStatus(response, 400, 'beer not found'); /* istanbul ignore next */cov_1aebqmmulz.s[39]++;\n      return;\n    }\n  } else {/* istanbul ignore next */cov_1aebqmmulz.b[4][1]++;cov_1aebqmmulz.s[40]++;\n    sendJSON(response, 200, beers); /* istanbul ignore next */cov_1aebqmmulz.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-07T23:59:06.155Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-07T23:59:06.155Z"}
{"level":"info","message":"/api/beers","timestamp":"2017-12-07T23:59:06.155Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[5]++;cov_1aebqmmulz.s[43]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_1aebqmmulz.b[6][0]++;\n    let filterBeerById = /* istanbul ignore next */(cov_1aebqmmulz.s[44]++, beers.filter(beer => {/* istanbul ignore next */cov_1aebqmmulz.f[6]++;cov_1aebqmmulz.s[45]++;return beer.id === request.url.query.id;})); /* istanbul ignore next */cov_1aebqmmulz.s[46]++;\n    if (filterBeerById) {/* istanbul ignore next */cov_1aebqmmulz.b[7][0]++;cov_1aebqmmulz.s[47]++;\n      beers = filterBeerById; /* istanbul ignore next */cov_1aebqmmulz.s[48]++;\n      sendJSON(response, 200, filterBeerById); /* istanbul ignore next */cov_1aebqmmulz.s[49]++;\n      return;\n    } else {/* istanbul ignore next */cov_1aebqmmulz.b[7][1]++;cov_1aebqmmulz.s[50]++;\n      sendStatus(response, 400, 'beer not found'); /* istanbul ignore next */cov_1aebqmmulz.s[51]++;\n      return;\n    }\n  } else {/* istanbul ignore next */cov_1aebqmmulz.b[6][1]++;cov_1aebqmmulz.s[52]++;\n    sendJSON(response, 200, beers); /* istanbul ignore next */cov_1aebqmmulz.s[53]++;\n    return;\n  }\n}","timestamp":"2017-12-07T23:59:06.155Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2017-12-07T23:59:06.203Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:59:06.218Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:59:06.219Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[2]++;cov_1aebqmmulz.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_1aebqmmulz.b[0][0]++;cov_1aebqmmulz.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_1aebqmmulz.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[0][1]++;}cov_1aebqmmulz.s[19]++;\n  if (!request.body.brewery) {/* istanbul ignore next */cov_1aebqmmulz.b[1][0]++;cov_1aebqmmulz.s[20]++;\n    sendStatus(response, 400, 'brewery not found'); /* istanbul ignore next */cov_1aebqmmulz.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[1][1]++;}cov_1aebqmmulz.s[22]++;\n  if (!request.body.beerName) {/* istanbul ignore next */cov_1aebqmmulz.b[2][0]++;cov_1aebqmmulz.s[23]++;\n    sendStatus(response, 400, 'beer name not found'); /* istanbul ignore next */cov_1aebqmmulz.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[2][1]++;}cov_1aebqmmulz.s[25]++;\n  if (!request.body.beerType) {/* istanbul ignore next */cov_1aebqmmulz.b[3][0]++;cov_1aebqmmulz.s[26]++;\n    sendStatus(response, 400, 'beer type not found'); /* istanbul ignore next */cov_1aebqmmulz.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[3][1]++;}\n  let beer = /* istanbul ignore next */(cov_1aebqmmulz.s[28]++, new Beer(request.body.brewery, request.body.beerName, request.body.beerType)); /* istanbul ignore next */cov_1aebqmmulz.s[29]++;\n  beers.push(beer); /* istanbul ignore next */cov_1aebqmmulz.s[30]++;\n  sendJSON(response, 200, beer);\n}","timestamp":"2017-12-07T23:59:06.219Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T23:59:06.220Z"}
{"id":"9bc212c0-dbaa-11e7-860d-05af1bd24b5b","timestamp":"2017-12-07T23:59:06.220Z","brewery":"Rainier Beer","beerName":"Rainier","beerType":"lager","level":"info","message":""}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:59:06.229Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:59:06.230Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[3]++;cov_1aebqmmulz.s[32]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_1aebqmmulz.b[4][0]++;\n    let findBeerById = /* istanbul ignore next */(cov_1aebqmmulz.s[33]++, beers.find(beer => {/* istanbul ignore next */cov_1aebqmmulz.f[4]++;cov_1aebqmmulz.s[34]++;return beer.id === request.url.query.id;})); /* istanbul ignore next */cov_1aebqmmulz.s[35]++;\n    if (findBeerById) {/* istanbul ignore next */cov_1aebqmmulz.b[5][0]++;cov_1aebqmmulz.s[36]++;\n      sendJSON(response, 200, findBeerById); /* istanbul ignore next */cov_1aebqmmulz.s[37]++;\n      return;\n    } else {/* istanbul ignore next */cov_1aebqmmulz.b[5][1]++;cov_1aebqmmulz.s[38]++;\n      sendStatus(response, 400, 'beer not found'); /* istanbul ignore next */cov_1aebqmmulz.s[39]++;\n      return;\n    }\n  } else {/* istanbul ignore next */cov_1aebqmmulz.b[4][1]++;cov_1aebqmmulz.s[40]++;\n    sendJSON(response, 200, beers); /* istanbul ignore next */cov_1aebqmmulz.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-07T23:59:06.230Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T23:59:06.230Z"}
[{"id":"9bc212c0-dbaa-11e7-860d-05af1bd24b5b","timestamp":"2017-12-07T23:59:06.220Z","brewery":"Rainier Beer","beerName":"Rainier","beerType":"lager"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:59:06.233Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:59:06.234Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[2]++;cov_1aebqmmulz.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_1aebqmmulz.b[0][0]++;cov_1aebqmmulz.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_1aebqmmulz.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[0][1]++;}cov_1aebqmmulz.s[19]++;\n  if (!request.body.brewery) {/* istanbul ignore next */cov_1aebqmmulz.b[1][0]++;cov_1aebqmmulz.s[20]++;\n    sendStatus(response, 400, 'brewery not found'); /* istanbul ignore next */cov_1aebqmmulz.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[1][1]++;}cov_1aebqmmulz.s[22]++;\n  if (!request.body.beerName) {/* istanbul ignore next */cov_1aebqmmulz.b[2][0]++;cov_1aebqmmulz.s[23]++;\n    sendStatus(response, 400, 'beer name not found'); /* istanbul ignore next */cov_1aebqmmulz.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[2][1]++;}cov_1aebqmmulz.s[25]++;\n  if (!request.body.beerType) {/* istanbul ignore next */cov_1aebqmmulz.b[3][0]++;cov_1aebqmmulz.s[26]++;\n    sendStatus(response, 400, 'beer type not found'); /* istanbul ignore next */cov_1aebqmmulz.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[3][1]++;}\n  let beer = /* istanbul ignore next */(cov_1aebqmmulz.s[28]++, new Beer(request.body.brewery, request.body.beerName, request.body.beerType)); /* istanbul ignore next */cov_1aebqmmulz.s[29]++;\n  beers.push(beer); /* istanbul ignore next */cov_1aebqmmulz.s[30]++;\n  sendJSON(response, 200, beer);\n}","timestamp":"2017-12-07T23:59:06.234Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T23:59:06.234Z"}
{"id":"9bc435a0-dbaa-11e7-860d-05af1bd24b5b","timestamp":"2017-12-07T23:59:06.234Z","brewery":"Lagunitas","beerName":"daytime ale","beerType":"session ale","level":"info","message":""}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:59:06.237Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:59:06.237Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[3]++;cov_1aebqmmulz.s[32]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_1aebqmmulz.b[4][0]++;\n    let findBeerById = /* istanbul ignore next */(cov_1aebqmmulz.s[33]++, beers.find(beer => {/* istanbul ignore next */cov_1aebqmmulz.f[4]++;cov_1aebqmmulz.s[34]++;return beer.id === request.url.query.id;})); /* istanbul ignore next */cov_1aebqmmulz.s[35]++;\n    if (findBeerById) {/* istanbul ignore next */cov_1aebqmmulz.b[5][0]++;cov_1aebqmmulz.s[36]++;\n      sendJSON(response, 200, findBeerById); /* istanbul ignore next */cov_1aebqmmulz.s[37]++;\n      return;\n    } else {/* istanbul ignore next */cov_1aebqmmulz.b[5][1]++;cov_1aebqmmulz.s[38]++;\n      sendStatus(response, 400, 'beer not found'); /* istanbul ignore next */cov_1aebqmmulz.s[39]++;\n      return;\n    }\n  } else {/* istanbul ignore next */cov_1aebqmmulz.b[4][1]++;cov_1aebqmmulz.s[40]++;\n    sendJSON(response, 200, beers); /* istanbul ignore next */cov_1aebqmmulz.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-07T23:59:06.237Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T23:59:06.237Z"}
{"id":"9bc435a0-dbaa-11e7-860d-05af1bd24b5b","timestamp":"2017-12-07T23:59:06.237Z","brewery":"Lagunitas","beerName":"daytime ale","beerType":"session ale","level":"info","message":""}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:59:06.240Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:59:06.240Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[3]++;cov_1aebqmmulz.s[32]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_1aebqmmulz.b[4][0]++;\n    let findBeerById = /* istanbul ignore next */(cov_1aebqmmulz.s[33]++, beers.find(beer => {/* istanbul ignore next */cov_1aebqmmulz.f[4]++;cov_1aebqmmulz.s[34]++;return beer.id === request.url.query.id;})); /* istanbul ignore next */cov_1aebqmmulz.s[35]++;\n    if (findBeerById) {/* istanbul ignore next */cov_1aebqmmulz.b[5][0]++;cov_1aebqmmulz.s[36]++;\n      sendJSON(response, 200, findBeerById); /* istanbul ignore next */cov_1aebqmmulz.s[37]++;\n      return;\n    } else {/* istanbul ignore next */cov_1aebqmmulz.b[5][1]++;cov_1aebqmmulz.s[38]++;\n      sendStatus(response, 400, 'beer not found'); /* istanbul ignore next */cov_1aebqmmulz.s[39]++;\n      return;\n    }\n  } else {/* istanbul ignore next */cov_1aebqmmulz.b[4][1]++;cov_1aebqmmulz.s[40]++;\n    sendJSON(response, 200, beers); /* istanbul ignore next */cov_1aebqmmulz.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-07T23:59:06.240Z"}
{"level":"info","message":"Responding with a 400 code due to beer not found","timestamp":"2017-12-07T23:59:06.240Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:59:06.243Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:59:06.243Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[2]++;cov_1aebqmmulz.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_1aebqmmulz.b[0][0]++;cov_1aebqmmulz.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_1aebqmmulz.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[0][1]++;}cov_1aebqmmulz.s[19]++;\n  if (!request.body.brewery) {/* istanbul ignore next */cov_1aebqmmulz.b[1][0]++;cov_1aebqmmulz.s[20]++;\n    sendStatus(response, 400, 'brewery not found'); /* istanbul ignore next */cov_1aebqmmulz.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[1][1]++;}cov_1aebqmmulz.s[22]++;\n  if (!request.body.beerName) {/* istanbul ignore next */cov_1aebqmmulz.b[2][0]++;cov_1aebqmmulz.s[23]++;\n    sendStatus(response, 400, 'beer name not found'); /* istanbul ignore next */cov_1aebqmmulz.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[2][1]++;}cov_1aebqmmulz.s[25]++;\n  if (!request.body.beerType) {/* istanbul ignore next */cov_1aebqmmulz.b[3][0]++;cov_1aebqmmulz.s[26]++;\n    sendStatus(response, 400, 'beer type not found'); /* istanbul ignore next */cov_1aebqmmulz.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[3][1]++;}\n  let beer = /* istanbul ignore next */(cov_1aebqmmulz.s[28]++, new Beer(request.body.brewery, request.body.beerName, request.body.beerType)); /* istanbul ignore next */cov_1aebqmmulz.s[29]++;\n  beers.push(beer); /* istanbul ignore next */cov_1aebqmmulz.s[30]++;\n  sendJSON(response, 200, beer);\n}","timestamp":"2017-12-07T23:59:06.243Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T23:59:06.243Z"}
{"id":"9bc59530-dbaa-11e7-860d-05af1bd24b5b","timestamp":"2017-12-07T23:59:06.243Z","brewery":"Lagunitas","beerName":"daytime ale","beerType":"session ale","level":"info","message":""}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:59:06.248Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:59:06.248Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[5]++;cov_1aebqmmulz.s[43]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_1aebqmmulz.b[6][0]++;\n    let filterBeerById = /* istanbul ignore next */(cov_1aebqmmulz.s[44]++, beers.filter(beer => {/* istanbul ignore next */cov_1aebqmmulz.f[6]++;cov_1aebqmmulz.s[45]++;return beer.id === request.url.query.id;})); /* istanbul ignore next */cov_1aebqmmulz.s[46]++;\n    if (filterBeerById) {/* istanbul ignore next */cov_1aebqmmulz.b[7][0]++;cov_1aebqmmulz.s[47]++;\n      beers = filterBeerById; /* istanbul ignore next */cov_1aebqmmulz.s[48]++;\n      sendJSON(response, 200, filterBeerById); /* istanbul ignore next */cov_1aebqmmulz.s[49]++;\n      return;\n    } else {/* istanbul ignore next */cov_1aebqmmulz.b[7][1]++;cov_1aebqmmulz.s[50]++;\n      sendStatus(response, 400, 'beer not found'); /* istanbul ignore next */cov_1aebqmmulz.s[51]++;\n      return;\n    }\n  } else {/* istanbul ignore next */cov_1aebqmmulz.b[6][1]++;cov_1aebqmmulz.s[52]++;\n    sendJSON(response, 200, beers); /* istanbul ignore next */cov_1aebqmmulz.s[53]++;\n    return;\n  }\n}","timestamp":"2017-12-07T23:59:06.248Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T23:59:06.248Z"}
[{"id":"9bc59530-dbaa-11e7-860d-05af1bd24b5b","timestamp":"2017-12-07T23:59:06.243Z","brewery":"Lagunitas","beerName":"daytime ale","beerType":"session ale"}]
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T23:59:49.324Z"}
{"level":"info","message":"/api/beers","timestamp":"2017-12-07T23:59:49.324Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[2]++;cov_1aebqmmulz.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_1aebqmmulz.b[0][0]++;cov_1aebqmmulz.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_1aebqmmulz.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[0][1]++;}cov_1aebqmmulz.s[19]++;\n  if (!request.body.brewery) {/* istanbul ignore next */cov_1aebqmmulz.b[1][0]++;cov_1aebqmmulz.s[20]++;\n    sendStatus(response, 400, 'brewery not found'); /* istanbul ignore next */cov_1aebqmmulz.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[1][1]++;}cov_1aebqmmulz.s[22]++;\n  if (!request.body.beerName) {/* istanbul ignore next */cov_1aebqmmulz.b[2][0]++;cov_1aebqmmulz.s[23]++;\n    sendStatus(response, 400, 'beer name not found'); /* istanbul ignore next */cov_1aebqmmulz.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[2][1]++;}cov_1aebqmmulz.s[25]++;\n  if (!request.body.beerType) {/* istanbul ignore next */cov_1aebqmmulz.b[3][0]++;cov_1aebqmmulz.s[26]++;\n    sendStatus(response, 400, 'beer type not found'); /* istanbul ignore next */cov_1aebqmmulz.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[3][1]++;}\n  let beer = /* istanbul ignore next */(cov_1aebqmmulz.s[28]++, new Beer(request.body.brewery, request.body.beerName, request.body.beerType)); /* istanbul ignore next */cov_1aebqmmulz.s[29]++;\n  beers.push(beer); /* istanbul ignore next */cov_1aebqmmulz.s[30]++;\n  sendJSON(response, 200, beer);\n}","timestamp":"2017-12-07T23:59:49.324Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T23:59:49.324Z"}
{"level":"info","message":"/api/beers","timestamp":"2017-12-07T23:59:49.325Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[3]++;cov_1aebqmmulz.s[32]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_1aebqmmulz.b[4][0]++;\n    let findBeerById = /* istanbul ignore next */(cov_1aebqmmulz.s[33]++, beers.find(beer => {/* istanbul ignore next */cov_1aebqmmulz.f[4]++;cov_1aebqmmulz.s[34]++;return beer.id === request.url.query.id;})); /* istanbul ignore next */cov_1aebqmmulz.s[35]++;\n    if (findBeerById) {/* istanbul ignore next */cov_1aebqmmulz.b[5][0]++;cov_1aebqmmulz.s[36]++;\n      sendJSON(response, 200, findBeerById); /* istanbul ignore next */cov_1aebqmmulz.s[37]++;\n      return;\n    } else {/* istanbul ignore next */cov_1aebqmmulz.b[5][1]++;cov_1aebqmmulz.s[38]++;\n      sendStatus(response, 400, 'beer not found'); /* istanbul ignore next */cov_1aebqmmulz.s[39]++;\n      return;\n    }\n  } else {/* istanbul ignore next */cov_1aebqmmulz.b[4][1]++;cov_1aebqmmulz.s[40]++;\n    sendJSON(response, 200, beers); /* istanbul ignore next */cov_1aebqmmulz.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-07T23:59:49.325Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-07T23:59:49.325Z"}
{"level":"info","message":"/api/beers","timestamp":"2017-12-07T23:59:49.325Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[5]++;cov_1aebqmmulz.s[43]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_1aebqmmulz.b[6][0]++;\n    let filterBeerById = /* istanbul ignore next */(cov_1aebqmmulz.s[44]++, beers.filter(beer => {/* istanbul ignore next */cov_1aebqmmulz.f[6]++;cov_1aebqmmulz.s[45]++;return beer.id === request.url.query.id;})); /* istanbul ignore next */cov_1aebqmmulz.s[46]++;\n    if (filterBeerById) {/* istanbul ignore next */cov_1aebqmmulz.b[7][0]++;cov_1aebqmmulz.s[47]++;\n      beers = filterBeerById; /* istanbul ignore next */cov_1aebqmmulz.s[48]++;\n      sendJSON(response, 200, filterBeerById); /* istanbul ignore next */cov_1aebqmmulz.s[49]++;\n      return;\n    } else {/* istanbul ignore next */cov_1aebqmmulz.b[7][1]++;cov_1aebqmmulz.s[50]++;\n      sendStatus(response, 400, 'beer not found'); /* istanbul ignore next */cov_1aebqmmulz.s[51]++;\n      return;\n    }\n  } else {/* istanbul ignore next */cov_1aebqmmulz.b[6][1]++;cov_1aebqmmulz.s[52]++;\n    sendJSON(response, 200, beers); /* istanbul ignore next */cov_1aebqmmulz.s[53]++;\n    return;\n  }\n}","timestamp":"2017-12-07T23:59:49.325Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2017-12-07T23:59:49.376Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:59:49.392Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:59:49.393Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[2]++;cov_1aebqmmulz.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_1aebqmmulz.b[0][0]++;cov_1aebqmmulz.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_1aebqmmulz.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[0][1]++;}cov_1aebqmmulz.s[19]++;\n  if (!request.body.brewery) {/* istanbul ignore next */cov_1aebqmmulz.b[1][0]++;cov_1aebqmmulz.s[20]++;\n    sendStatus(response, 400, 'brewery not found'); /* istanbul ignore next */cov_1aebqmmulz.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[1][1]++;}cov_1aebqmmulz.s[22]++;\n  if (!request.body.beerName) {/* istanbul ignore next */cov_1aebqmmulz.b[2][0]++;cov_1aebqmmulz.s[23]++;\n    sendStatus(response, 400, 'beer name not found'); /* istanbul ignore next */cov_1aebqmmulz.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[2][1]++;}cov_1aebqmmulz.s[25]++;\n  if (!request.body.beerType) {/* istanbul ignore next */cov_1aebqmmulz.b[3][0]++;cov_1aebqmmulz.s[26]++;\n    sendStatus(response, 400, 'beer type not found'); /* istanbul ignore next */cov_1aebqmmulz.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[3][1]++;}\n  let beer = /* istanbul ignore next */(cov_1aebqmmulz.s[28]++, new Beer(request.body.brewery, request.body.beerName, request.body.beerType)); /* istanbul ignore next */cov_1aebqmmulz.s[29]++;\n  beers.push(beer); /* istanbul ignore next */cov_1aebqmmulz.s[30]++;\n  sendJSON(response, 200, beer);\n}","timestamp":"2017-12-07T23:59:49.393Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T23:59:49.393Z"}
{"id":"b57dc010-dbaa-11e7-be16-fb757dc9196a","timestamp":"2017-12-07T23:59:49.393Z","brewery":"Rainier Beer","beerName":"Rainier","beerType":"lager","level":"info","message":""}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:59:49.403Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:59:49.403Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[3]++;cov_1aebqmmulz.s[32]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_1aebqmmulz.b[4][0]++;\n    let findBeerById = /* istanbul ignore next */(cov_1aebqmmulz.s[33]++, beers.find(beer => {/* istanbul ignore next */cov_1aebqmmulz.f[4]++;cov_1aebqmmulz.s[34]++;return beer.id === request.url.query.id;})); /* istanbul ignore next */cov_1aebqmmulz.s[35]++;\n    if (findBeerById) {/* istanbul ignore next */cov_1aebqmmulz.b[5][0]++;cov_1aebqmmulz.s[36]++;\n      sendJSON(response, 200, findBeerById); /* istanbul ignore next */cov_1aebqmmulz.s[37]++;\n      return;\n    } else {/* istanbul ignore next */cov_1aebqmmulz.b[5][1]++;cov_1aebqmmulz.s[38]++;\n      sendStatus(response, 400, 'beer not found'); /* istanbul ignore next */cov_1aebqmmulz.s[39]++;\n      return;\n    }\n  } else {/* istanbul ignore next */cov_1aebqmmulz.b[4][1]++;cov_1aebqmmulz.s[40]++;\n    sendJSON(response, 200, beers); /* istanbul ignore next */cov_1aebqmmulz.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-07T23:59:49.404Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T23:59:49.404Z"}
[{"id":"b57dc010-dbaa-11e7-be16-fb757dc9196a","timestamp":"2017-12-07T23:59:49.393Z","brewery":"Rainier Beer","beerName":"Rainier","beerType":"lager"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:59:49.408Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:59:49.409Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[2]++;cov_1aebqmmulz.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_1aebqmmulz.b[0][0]++;cov_1aebqmmulz.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_1aebqmmulz.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[0][1]++;}cov_1aebqmmulz.s[19]++;\n  if (!request.body.brewery) {/* istanbul ignore next */cov_1aebqmmulz.b[1][0]++;cov_1aebqmmulz.s[20]++;\n    sendStatus(response, 400, 'brewery not found'); /* istanbul ignore next */cov_1aebqmmulz.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[1][1]++;}cov_1aebqmmulz.s[22]++;\n  if (!request.body.beerName) {/* istanbul ignore next */cov_1aebqmmulz.b[2][0]++;cov_1aebqmmulz.s[23]++;\n    sendStatus(response, 400, 'beer name not found'); /* istanbul ignore next */cov_1aebqmmulz.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[2][1]++;}cov_1aebqmmulz.s[25]++;\n  if (!request.body.beerType) {/* istanbul ignore next */cov_1aebqmmulz.b[3][0]++;cov_1aebqmmulz.s[26]++;\n    sendStatus(response, 400, 'beer type not found'); /* istanbul ignore next */cov_1aebqmmulz.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[3][1]++;}\n  let beer = /* istanbul ignore next */(cov_1aebqmmulz.s[28]++, new Beer(request.body.brewery, request.body.beerName, request.body.beerType)); /* istanbul ignore next */cov_1aebqmmulz.s[29]++;\n  beers.push(beer); /* istanbul ignore next */cov_1aebqmmulz.s[30]++;\n  sendJSON(response, 200, beer);\n}","timestamp":"2017-12-07T23:59:49.409Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T23:59:49.409Z"}
{"id":"b5803110-dbaa-11e7-be16-fb757dc9196a","timestamp":"2017-12-07T23:59:49.409Z","brewery":"Lagunitas","beerName":"daytime ale","beerType":"session ale","level":"info","message":""}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:59:49.412Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:59:49.413Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[3]++;cov_1aebqmmulz.s[32]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_1aebqmmulz.b[4][0]++;\n    let findBeerById = /* istanbul ignore next */(cov_1aebqmmulz.s[33]++, beers.find(beer => {/* istanbul ignore next */cov_1aebqmmulz.f[4]++;cov_1aebqmmulz.s[34]++;return beer.id === request.url.query.id;})); /* istanbul ignore next */cov_1aebqmmulz.s[35]++;\n    if (findBeerById) {/* istanbul ignore next */cov_1aebqmmulz.b[5][0]++;cov_1aebqmmulz.s[36]++;\n      sendJSON(response, 200, findBeerById); /* istanbul ignore next */cov_1aebqmmulz.s[37]++;\n      return;\n    } else {/* istanbul ignore next */cov_1aebqmmulz.b[5][1]++;cov_1aebqmmulz.s[38]++;\n      sendStatus(response, 400, 'beer not found'); /* istanbul ignore next */cov_1aebqmmulz.s[39]++;\n      return;\n    }\n  } else {/* istanbul ignore next */cov_1aebqmmulz.b[4][1]++;cov_1aebqmmulz.s[40]++;\n    sendJSON(response, 200, beers); /* istanbul ignore next */cov_1aebqmmulz.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-07T23:59:49.413Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T23:59:49.414Z"}
{"id":"b5803110-dbaa-11e7-be16-fb757dc9196a","timestamp":"2017-12-07T23:59:49.414Z","brewery":"Lagunitas","beerName":"daytime ale","beerType":"session ale","level":"info","message":""}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:59:49.416Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:59:49.416Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[3]++;cov_1aebqmmulz.s[32]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_1aebqmmulz.b[4][0]++;\n    let findBeerById = /* istanbul ignore next */(cov_1aebqmmulz.s[33]++, beers.find(beer => {/* istanbul ignore next */cov_1aebqmmulz.f[4]++;cov_1aebqmmulz.s[34]++;return beer.id === request.url.query.id;})); /* istanbul ignore next */cov_1aebqmmulz.s[35]++;\n    if (findBeerById) {/* istanbul ignore next */cov_1aebqmmulz.b[5][0]++;cov_1aebqmmulz.s[36]++;\n      sendJSON(response, 200, findBeerById); /* istanbul ignore next */cov_1aebqmmulz.s[37]++;\n      return;\n    } else {/* istanbul ignore next */cov_1aebqmmulz.b[5][1]++;cov_1aebqmmulz.s[38]++;\n      sendStatus(response, 400, 'beer not found'); /* istanbul ignore next */cov_1aebqmmulz.s[39]++;\n      return;\n    }\n  } else {/* istanbul ignore next */cov_1aebqmmulz.b[4][1]++;cov_1aebqmmulz.s[40]++;\n    sendJSON(response, 200, beers); /* istanbul ignore next */cov_1aebqmmulz.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-07T23:59:49.416Z"}
{"level":"info","message":"Responding with a 400 code due to beer not found","timestamp":"2017-12-07T23:59:49.417Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:59:49.419Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:59:49.419Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[2]++;cov_1aebqmmulz.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_1aebqmmulz.b[0][0]++;cov_1aebqmmulz.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_1aebqmmulz.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[0][1]++;}cov_1aebqmmulz.s[19]++;\n  if (!request.body.brewery) {/* istanbul ignore next */cov_1aebqmmulz.b[1][0]++;cov_1aebqmmulz.s[20]++;\n    sendStatus(response, 400, 'brewery not found'); /* istanbul ignore next */cov_1aebqmmulz.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[1][1]++;}cov_1aebqmmulz.s[22]++;\n  if (!request.body.beerName) {/* istanbul ignore next */cov_1aebqmmulz.b[2][0]++;cov_1aebqmmulz.s[23]++;\n    sendStatus(response, 400, 'beer name not found'); /* istanbul ignore next */cov_1aebqmmulz.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[2][1]++;}cov_1aebqmmulz.s[25]++;\n  if (!request.body.beerType) {/* istanbul ignore next */cov_1aebqmmulz.b[3][0]++;cov_1aebqmmulz.s[26]++;\n    sendStatus(response, 400, 'beer type not found'); /* istanbul ignore next */cov_1aebqmmulz.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[3][1]++;}\n  let beer = /* istanbul ignore next */(cov_1aebqmmulz.s[28]++, new Beer(request.body.brewery, request.body.beerName, request.body.beerType)); /* istanbul ignore next */cov_1aebqmmulz.s[29]++;\n  beers.push(beer); /* istanbul ignore next */cov_1aebqmmulz.s[30]++;\n  sendJSON(response, 200, beer);\n}","timestamp":"2017-12-07T23:59:49.419Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T23:59:49.419Z"}
{"id":"b581b7b0-dbaa-11e7-be16-fb757dc9196a","timestamp":"2017-12-07T23:59:49.419Z","brewery":"Rainier Beer","beerName":"Rainier","beerType":"lager","level":"info","message":""}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:59:49.424Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:59:49.424Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[5]++;cov_1aebqmmulz.s[43]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_1aebqmmulz.b[6][0]++;\n    let filterBeerById = /* istanbul ignore next */(cov_1aebqmmulz.s[44]++, beers.filter(beer => {/* istanbul ignore next */cov_1aebqmmulz.f[6]++;cov_1aebqmmulz.s[45]++;return beer.id === request.url.query.id;})); /* istanbul ignore next */cov_1aebqmmulz.s[46]++;\n    if (filterBeerById) {/* istanbul ignore next */cov_1aebqmmulz.b[7][0]++;cov_1aebqmmulz.s[47]++;\n      beers = filterBeerById; /* istanbul ignore next */cov_1aebqmmulz.s[48]++;\n      sendJSON(response, 200, filterBeerById); /* istanbul ignore next */cov_1aebqmmulz.s[49]++;\n      return;\n    } else {/* istanbul ignore next */cov_1aebqmmulz.b[7][1]++;cov_1aebqmmulz.s[50]++;\n      sendStatus(response, 400, 'beer not found'); /* istanbul ignore next */cov_1aebqmmulz.s[51]++;\n      return;\n    }\n  } else {/* istanbul ignore next */cov_1aebqmmulz.b[6][1]++;cov_1aebqmmulz.s[52]++;\n    sendJSON(response, 200, beers); /* istanbul ignore next */cov_1aebqmmulz.s[53]++;\n    return;\n  }\n}","timestamp":"2017-12-07T23:59:49.424Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T23:59:49.424Z"}
[{"id":"b581b7b0-dbaa-11e7-be16-fb757dc9196a","timestamp":"2017-12-07T23:59:49.419Z","brewery":"Rainier Beer","beerName":"Rainier","beerType":"lager"}]
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-08T00:00:20.694Z"}
{"level":"info","message":"/api/beers","timestamp":"2017-12-08T00:00:20.695Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[2]++;cov_1aebqmmulz.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_1aebqmmulz.b[0][0]++;cov_1aebqmmulz.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_1aebqmmulz.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[0][1]++;}cov_1aebqmmulz.s[19]++;\n  if (!request.body.brewery) {/* istanbul ignore next */cov_1aebqmmulz.b[1][0]++;cov_1aebqmmulz.s[20]++;\n    sendStatus(response, 400, 'brewery not found'); /* istanbul ignore next */cov_1aebqmmulz.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[1][1]++;}cov_1aebqmmulz.s[22]++;\n  if (!request.body.beerName) {/* istanbul ignore next */cov_1aebqmmulz.b[2][0]++;cov_1aebqmmulz.s[23]++;\n    sendStatus(response, 400, 'beer name not found'); /* istanbul ignore next */cov_1aebqmmulz.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[2][1]++;}cov_1aebqmmulz.s[25]++;\n  if (!request.body.beerType) {/* istanbul ignore next */cov_1aebqmmulz.b[3][0]++;cov_1aebqmmulz.s[26]++;\n    sendStatus(response, 400, 'beer type not found'); /* istanbul ignore next */cov_1aebqmmulz.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[3][1]++;}\n  let beer = /* istanbul ignore next */(cov_1aebqmmulz.s[28]++, new Beer(request.body.brewery, request.body.beerName, request.body.beerType)); /* istanbul ignore next */cov_1aebqmmulz.s[29]++;\n  beers.push(beer); /* istanbul ignore next */cov_1aebqmmulz.s[30]++;\n  sendJSON(response, 200, beer);\n}","timestamp":"2017-12-08T00:00:20.695Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-08T00:00:20.695Z"}
{"level":"info","message":"/api/beers","timestamp":"2017-12-08T00:00:20.695Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[3]++;cov_1aebqmmulz.s[32]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_1aebqmmulz.b[4][0]++;\n    let findBeerById = /* istanbul ignore next */(cov_1aebqmmulz.s[33]++, beers.find(beer => {/* istanbul ignore next */cov_1aebqmmulz.f[4]++;cov_1aebqmmulz.s[34]++;return beer.id === request.url.query.id;})); /* istanbul ignore next */cov_1aebqmmulz.s[35]++;\n    if (findBeerById) {/* istanbul ignore next */cov_1aebqmmulz.b[5][0]++;cov_1aebqmmulz.s[36]++;\n      sendJSON(response, 200, findBeerById); /* istanbul ignore next */cov_1aebqmmulz.s[37]++;\n      return;\n    } else {/* istanbul ignore next */cov_1aebqmmulz.b[5][1]++;cov_1aebqmmulz.s[38]++;\n      sendStatus(response, 400, 'beer not found'); /* istanbul ignore next */cov_1aebqmmulz.s[39]++;\n      return;\n    }\n  } else {/* istanbul ignore next */cov_1aebqmmulz.b[4][1]++;cov_1aebqmmulz.s[40]++;\n    sendJSON(response, 200, beers); /* istanbul ignore next */cov_1aebqmmulz.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-08T00:00:20.695Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-08T00:00:20.695Z"}
{"level":"info","message":"/api/beers","timestamp":"2017-12-08T00:00:20.695Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[5]++;cov_1aebqmmulz.s[43]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_1aebqmmulz.b[6][0]++;\n    let filterBeerById = /* istanbul ignore next */(cov_1aebqmmulz.s[44]++, beers.filter(beer => {/* istanbul ignore next */cov_1aebqmmulz.f[6]++;cov_1aebqmmulz.s[45]++;return beer.id === request.url.query.id;})); /* istanbul ignore next */cov_1aebqmmulz.s[46]++;\n    if (filterBeerById) {/* istanbul ignore next */cov_1aebqmmulz.b[7][0]++;cov_1aebqmmulz.s[47]++;\n      beers = filterBeerById; /* istanbul ignore next */cov_1aebqmmulz.s[48]++;\n      sendJSON(response, 200, filterBeerById); /* istanbul ignore next */cov_1aebqmmulz.s[49]++;\n      return;\n    } else {/* istanbul ignore next */cov_1aebqmmulz.b[7][1]++;cov_1aebqmmulz.s[50]++;\n      sendStatus(response, 400, 'beer not found'); /* istanbul ignore next */cov_1aebqmmulz.s[51]++;\n      return;\n    }\n  } else {/* istanbul ignore next */cov_1aebqmmulz.b[6][1]++;cov_1aebqmmulz.s[52]++;\n    sendJSON(response, 200, beers); /* istanbul ignore next */cov_1aebqmmulz.s[53]++;\n    return;\n  }\n}","timestamp":"2017-12-08T00:00:20.695Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2017-12-08T00:00:20.747Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:00:20.763Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T00:00:20.764Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[2]++;cov_1aebqmmulz.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_1aebqmmulz.b[0][0]++;cov_1aebqmmulz.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_1aebqmmulz.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[0][1]++;}cov_1aebqmmulz.s[19]++;\n  if (!request.body.brewery) {/* istanbul ignore next */cov_1aebqmmulz.b[1][0]++;cov_1aebqmmulz.s[20]++;\n    sendStatus(response, 400, 'brewery not found'); /* istanbul ignore next */cov_1aebqmmulz.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[1][1]++;}cov_1aebqmmulz.s[22]++;\n  if (!request.body.beerName) {/* istanbul ignore next */cov_1aebqmmulz.b[2][0]++;cov_1aebqmmulz.s[23]++;\n    sendStatus(response, 400, 'beer name not found'); /* istanbul ignore next */cov_1aebqmmulz.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[2][1]++;}cov_1aebqmmulz.s[25]++;\n  if (!request.body.beerType) {/* istanbul ignore next */cov_1aebqmmulz.b[3][0]++;cov_1aebqmmulz.s[26]++;\n    sendStatus(response, 400, 'beer type not found'); /* istanbul ignore next */cov_1aebqmmulz.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[3][1]++;}\n  let beer = /* istanbul ignore next */(cov_1aebqmmulz.s[28]++, new Beer(request.body.brewery, request.body.beerName, request.body.beerType)); /* istanbul ignore next */cov_1aebqmmulz.s[29]++;\n  beers.push(beer); /* istanbul ignore next */cov_1aebqmmulz.s[30]++;\n  sendJSON(response, 200, beer);\n}","timestamp":"2017-12-08T00:00:20.764Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T00:00:20.765Z"}
{"id":"c830bcd0-dbaa-11e7-a319-15bc630f3f80","timestamp":"2017-12-08T00:00:20.765Z","brewery":"Rainier Beer","beerName":"Rainier","beerType":"lager","level":"info","message":""}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:00:20.774Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T00:00:20.775Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[3]++;cov_1aebqmmulz.s[32]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_1aebqmmulz.b[4][0]++;\n    let findBeerById = /* istanbul ignore next */(cov_1aebqmmulz.s[33]++, beers.find(beer => {/* istanbul ignore next */cov_1aebqmmulz.f[4]++;cov_1aebqmmulz.s[34]++;return beer.id === request.url.query.id;})); /* istanbul ignore next */cov_1aebqmmulz.s[35]++;\n    if (findBeerById) {/* istanbul ignore next */cov_1aebqmmulz.b[5][0]++;cov_1aebqmmulz.s[36]++;\n      sendJSON(response, 200, findBeerById); /* istanbul ignore next */cov_1aebqmmulz.s[37]++;\n      return;\n    } else {/* istanbul ignore next */cov_1aebqmmulz.b[5][1]++;cov_1aebqmmulz.s[38]++;\n      sendStatus(response, 400, 'beer not found'); /* istanbul ignore next */cov_1aebqmmulz.s[39]++;\n      return;\n    }\n  } else {/* istanbul ignore next */cov_1aebqmmulz.b[4][1]++;cov_1aebqmmulz.s[40]++;\n    sendJSON(response, 200, beers); /* istanbul ignore next */cov_1aebqmmulz.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-08T00:00:20.775Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T00:00:20.775Z"}
[{"id":"c830bcd0-dbaa-11e7-a319-15bc630f3f80","timestamp":"2017-12-08T00:00:20.765Z","brewery":"Rainier Beer","beerName":"Rainier","beerType":"lager"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:00:20.779Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T00:00:20.779Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[2]++;cov_1aebqmmulz.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_1aebqmmulz.b[0][0]++;cov_1aebqmmulz.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_1aebqmmulz.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[0][1]++;}cov_1aebqmmulz.s[19]++;\n  if (!request.body.brewery) {/* istanbul ignore next */cov_1aebqmmulz.b[1][0]++;cov_1aebqmmulz.s[20]++;\n    sendStatus(response, 400, 'brewery not found'); /* istanbul ignore next */cov_1aebqmmulz.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[1][1]++;}cov_1aebqmmulz.s[22]++;\n  if (!request.body.beerName) {/* istanbul ignore next */cov_1aebqmmulz.b[2][0]++;cov_1aebqmmulz.s[23]++;\n    sendStatus(response, 400, 'beer name not found'); /* istanbul ignore next */cov_1aebqmmulz.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[2][1]++;}cov_1aebqmmulz.s[25]++;\n  if (!request.body.beerType) {/* istanbul ignore next */cov_1aebqmmulz.b[3][0]++;cov_1aebqmmulz.s[26]++;\n    sendStatus(response, 400, 'beer type not found'); /* istanbul ignore next */cov_1aebqmmulz.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[3][1]++;}\n  let beer = /* istanbul ignore next */(cov_1aebqmmulz.s[28]++, new Beer(request.body.brewery, request.body.beerName, request.body.beerType)); /* istanbul ignore next */cov_1aebqmmulz.s[29]++;\n  beers.push(beer); /* istanbul ignore next */cov_1aebqmmulz.s[30]++;\n  sendJSON(response, 200, beer);\n}","timestamp":"2017-12-08T00:00:20.779Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T00:00:20.779Z"}
{"id":"c832dfb0-dbaa-11e7-a319-15bc630f3f80","timestamp":"2017-12-08T00:00:20.780Z","brewery":"Lagunitas","beerName":"daytime ale","beerType":"session ale","level":"info","message":""}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:00:20.784Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T00:00:20.785Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[3]++;cov_1aebqmmulz.s[32]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_1aebqmmulz.b[4][0]++;\n    let findBeerById = /* istanbul ignore next */(cov_1aebqmmulz.s[33]++, beers.find(beer => {/* istanbul ignore next */cov_1aebqmmulz.f[4]++;cov_1aebqmmulz.s[34]++;return beer.id === request.url.query.id;})); /* istanbul ignore next */cov_1aebqmmulz.s[35]++;\n    if (findBeerById) {/* istanbul ignore next */cov_1aebqmmulz.b[5][0]++;cov_1aebqmmulz.s[36]++;\n      sendJSON(response, 200, findBeerById); /* istanbul ignore next */cov_1aebqmmulz.s[37]++;\n      return;\n    } else {/* istanbul ignore next */cov_1aebqmmulz.b[5][1]++;cov_1aebqmmulz.s[38]++;\n      sendStatus(response, 400, 'beer not found'); /* istanbul ignore next */cov_1aebqmmulz.s[39]++;\n      return;\n    }\n  } else {/* istanbul ignore next */cov_1aebqmmulz.b[4][1]++;cov_1aebqmmulz.s[40]++;\n    sendJSON(response, 200, beers); /* istanbul ignore next */cov_1aebqmmulz.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-08T00:00:20.785Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T00:00:20.785Z"}
{"id":"c832dfb0-dbaa-11e7-a319-15bc630f3f80","timestamp":"2017-12-08T00:00:20.785Z","brewery":"Lagunitas","beerName":"daytime ale","beerType":"session ale","level":"info","message":""}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:00:20.787Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T00:00:20.788Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[3]++;cov_1aebqmmulz.s[32]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_1aebqmmulz.b[4][0]++;\n    let findBeerById = /* istanbul ignore next */(cov_1aebqmmulz.s[33]++, beers.find(beer => {/* istanbul ignore next */cov_1aebqmmulz.f[4]++;cov_1aebqmmulz.s[34]++;return beer.id === request.url.query.id;})); /* istanbul ignore next */cov_1aebqmmulz.s[35]++;\n    if (findBeerById) {/* istanbul ignore next */cov_1aebqmmulz.b[5][0]++;cov_1aebqmmulz.s[36]++;\n      sendJSON(response, 200, findBeerById); /* istanbul ignore next */cov_1aebqmmulz.s[37]++;\n      return;\n    } else {/* istanbul ignore next */cov_1aebqmmulz.b[5][1]++;cov_1aebqmmulz.s[38]++;\n      sendStatus(response, 400, 'beer not found'); /* istanbul ignore next */cov_1aebqmmulz.s[39]++;\n      return;\n    }\n  } else {/* istanbul ignore next */cov_1aebqmmulz.b[4][1]++;cov_1aebqmmulz.s[40]++;\n    sendJSON(response, 200, beers); /* istanbul ignore next */cov_1aebqmmulz.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-08T00:00:20.788Z"}
{"level":"info","message":"Responding with a 400 code due to beer not found","timestamp":"2017-12-08T00:00:20.788Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:00:20.790Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T00:00:20.790Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[2]++;cov_1aebqmmulz.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_1aebqmmulz.b[0][0]++;cov_1aebqmmulz.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_1aebqmmulz.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[0][1]++;}cov_1aebqmmulz.s[19]++;\n  if (!request.body.brewery) {/* istanbul ignore next */cov_1aebqmmulz.b[1][0]++;cov_1aebqmmulz.s[20]++;\n    sendStatus(response, 400, 'brewery not found'); /* istanbul ignore next */cov_1aebqmmulz.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[1][1]++;}cov_1aebqmmulz.s[22]++;\n  if (!request.body.beerName) {/* istanbul ignore next */cov_1aebqmmulz.b[2][0]++;cov_1aebqmmulz.s[23]++;\n    sendStatus(response, 400, 'beer name not found'); /* istanbul ignore next */cov_1aebqmmulz.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[2][1]++;}cov_1aebqmmulz.s[25]++;\n  if (!request.body.beerType) {/* istanbul ignore next */cov_1aebqmmulz.b[3][0]++;cov_1aebqmmulz.s[26]++;\n    sendStatus(response, 400, 'beer type not found'); /* istanbul ignore next */cov_1aebqmmulz.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[3][1]++;}\n  let beer = /* istanbul ignore next */(cov_1aebqmmulz.s[28]++, new Beer(request.body.brewery, request.body.beerName, request.body.beerType)); /* istanbul ignore next */cov_1aebqmmulz.s[29]++;\n  beers.push(beer); /* istanbul ignore next */cov_1aebqmmulz.s[30]++;\n  sendJSON(response, 200, beer);\n}","timestamp":"2017-12-08T00:00:20.790Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T00:00:20.790Z"}
{"id":"c8348d60-dbaa-11e7-a319-15bc630f3f80","timestamp":"2017-12-08T00:00:20.791Z","brewery":"Rainier Beer","beerName":"Rainier","beerType":"lager","level":"info","message":""}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:00:20.794Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T00:00:20.794Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[5]++;cov_1aebqmmulz.s[43]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_1aebqmmulz.b[6][0]++;\n    let filterBeerById = /* istanbul ignore next */(cov_1aebqmmulz.s[44]++, beers.filter(beer => {/* istanbul ignore next */cov_1aebqmmulz.f[6]++;cov_1aebqmmulz.s[45]++;return beer.id === request.url.query.id;})); /* istanbul ignore next */cov_1aebqmmulz.s[46]++;\n    if (filterBeerById) {/* istanbul ignore next */cov_1aebqmmulz.b[7][0]++;cov_1aebqmmulz.s[47]++;\n      beers = filterBeerById; /* istanbul ignore next */cov_1aebqmmulz.s[48]++;\n      sendJSON(response, 200, filterBeerById); /* istanbul ignore next */cov_1aebqmmulz.s[49]++;\n      return;\n    } else {/* istanbul ignore next */cov_1aebqmmulz.b[7][1]++;cov_1aebqmmulz.s[50]++;\n      sendStatus(response, 400, 'beer not found'); /* istanbul ignore next */cov_1aebqmmulz.s[51]++;\n      return;\n    }\n  } else {/* istanbul ignore next */cov_1aebqmmulz.b[6][1]++;cov_1aebqmmulz.s[52]++;\n    sendJSON(response, 200, beers); /* istanbul ignore next */cov_1aebqmmulz.s[53]++;\n    return;\n  }\n}","timestamp":"2017-12-08T00:00:20.794Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T00:00:20.795Z"}
[{"id":"c8348d60-dbaa-11e7-a319-15bc630f3f80","timestamp":"2017-12-08T00:00:20.790Z","brewery":"Rainier Beer","beerName":"Rainier","beerType":"lager"}]
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-08T00:00:44.522Z"}
{"level":"info","message":"/api/beers","timestamp":"2017-12-08T00:00:44.522Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[2]++;cov_1aebqmmulz.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_1aebqmmulz.b[0][0]++;cov_1aebqmmulz.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_1aebqmmulz.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[0][1]++;}cov_1aebqmmulz.s[19]++;\n  if (!request.body.brewery) {/* istanbul ignore next */cov_1aebqmmulz.b[1][0]++;cov_1aebqmmulz.s[20]++;\n    sendStatus(response, 400, 'brewery not found'); /* istanbul ignore next */cov_1aebqmmulz.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[1][1]++;}cov_1aebqmmulz.s[22]++;\n  if (!request.body.beerName) {/* istanbul ignore next */cov_1aebqmmulz.b[2][0]++;cov_1aebqmmulz.s[23]++;\n    sendStatus(response, 400, 'beer name not found'); /* istanbul ignore next */cov_1aebqmmulz.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[2][1]++;}cov_1aebqmmulz.s[25]++;\n  if (!request.body.beerType) {/* istanbul ignore next */cov_1aebqmmulz.b[3][0]++;cov_1aebqmmulz.s[26]++;\n    sendStatus(response, 400, 'beer type not found'); /* istanbul ignore next */cov_1aebqmmulz.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[3][1]++;}\n  let beer = /* istanbul ignore next */(cov_1aebqmmulz.s[28]++, new Beer(request.body.brewery, request.body.beerName, request.body.beerType)); /* istanbul ignore next */cov_1aebqmmulz.s[29]++;\n  beers.push(beer); /* istanbul ignore next */cov_1aebqmmulz.s[30]++;\n  sendJSON(response, 200, beer);\n}","timestamp":"2017-12-08T00:00:44.522Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-08T00:00:44.522Z"}
{"level":"info","message":"/api/beers","timestamp":"2017-12-08T00:00:44.522Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[3]++;cov_1aebqmmulz.s[32]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_1aebqmmulz.b[4][0]++;\n    let findBeerById = /* istanbul ignore next */(cov_1aebqmmulz.s[33]++, beers.find(beer => {/* istanbul ignore next */cov_1aebqmmulz.f[4]++;cov_1aebqmmulz.s[34]++;return beer.id === request.url.query.id;})); /* istanbul ignore next */cov_1aebqmmulz.s[35]++;\n    if (findBeerById) {/* istanbul ignore next */cov_1aebqmmulz.b[5][0]++;cov_1aebqmmulz.s[36]++;\n      sendJSON(response, 200, findBeerById); /* istanbul ignore next */cov_1aebqmmulz.s[37]++;\n      return;\n    } else {/* istanbul ignore next */cov_1aebqmmulz.b[5][1]++;cov_1aebqmmulz.s[38]++;\n      sendStatus(response, 400, 'beer not found'); /* istanbul ignore next */cov_1aebqmmulz.s[39]++;\n      return;\n    }\n  } else {/* istanbul ignore next */cov_1aebqmmulz.b[4][1]++;cov_1aebqmmulz.s[40]++;\n    sendJSON(response, 200, beers); /* istanbul ignore next */cov_1aebqmmulz.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-08T00:00:44.522Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-08T00:00:44.522Z"}
{"level":"info","message":"/api/beers","timestamp":"2017-12-08T00:00:44.522Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[5]++;cov_1aebqmmulz.s[43]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_1aebqmmulz.b[6][0]++;\n    let filterBeerById = /* istanbul ignore next */(cov_1aebqmmulz.s[44]++, beers.filter(beer => {/* istanbul ignore next */cov_1aebqmmulz.f[6]++;cov_1aebqmmulz.s[45]++;return beer.id === request.url.query.id;})); /* istanbul ignore next */cov_1aebqmmulz.s[46]++;\n    if (filterBeerById) {/* istanbul ignore next */cov_1aebqmmulz.b[7][0]++;cov_1aebqmmulz.s[47]++;\n      beers = filterBeerById; /* istanbul ignore next */cov_1aebqmmulz.s[48]++;\n      sendJSON(response, 200, filterBeerById); /* istanbul ignore next */cov_1aebqmmulz.s[49]++;\n      return;\n    } else {/* istanbul ignore next */cov_1aebqmmulz.b[7][1]++;cov_1aebqmmulz.s[50]++;\n      sendStatus(response, 400, 'beer not found'); /* istanbul ignore next */cov_1aebqmmulz.s[51]++;\n      return;\n    }\n  } else {/* istanbul ignore next */cov_1aebqmmulz.b[6][1]++;cov_1aebqmmulz.s[52]++;\n    sendJSON(response, 200, beers); /* istanbul ignore next */cov_1aebqmmulz.s[53]++;\n    return;\n  }\n}","timestamp":"2017-12-08T00:00:44.523Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2017-12-08T00:00:44.572Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:00:44.588Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T00:00:44.589Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[2]++;cov_1aebqmmulz.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_1aebqmmulz.b[0][0]++;cov_1aebqmmulz.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_1aebqmmulz.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[0][1]++;}cov_1aebqmmulz.s[19]++;\n  if (!request.body.brewery) {/* istanbul ignore next */cov_1aebqmmulz.b[1][0]++;cov_1aebqmmulz.s[20]++;\n    sendStatus(response, 400, 'brewery not found'); /* istanbul ignore next */cov_1aebqmmulz.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[1][1]++;}cov_1aebqmmulz.s[22]++;\n  if (!request.body.beerName) {/* istanbul ignore next */cov_1aebqmmulz.b[2][0]++;cov_1aebqmmulz.s[23]++;\n    sendStatus(response, 400, 'beer name not found'); /* istanbul ignore next */cov_1aebqmmulz.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[2][1]++;}cov_1aebqmmulz.s[25]++;\n  if (!request.body.beerType) {/* istanbul ignore next */cov_1aebqmmulz.b[3][0]++;cov_1aebqmmulz.s[26]++;\n    sendStatus(response, 400, 'beer type not found'); /* istanbul ignore next */cov_1aebqmmulz.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[3][1]++;}\n  let beer = /* istanbul ignore next */(cov_1aebqmmulz.s[28]++, new Beer(request.body.brewery, request.body.beerName, request.body.beerType)); /* istanbul ignore next */cov_1aebqmmulz.s[29]++;\n  beers.push(beer); /* istanbul ignore next */cov_1aebqmmulz.s[30]++;\n  sendJSON(response, 200, beer);\n}","timestamp":"2017-12-08T00:00:44.589Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T00:00:44.590Z"}
{"id":"d66424e0-dbaa-11e7-abbd-efe34600fe39","timestamp":"2017-12-08T00:00:44.590Z","brewery":"Rainier Beer","beerName":"Rainier","beerType":"lager","level":"info","message":""}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:00:44.599Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T00:00:44.600Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[3]++;cov_1aebqmmulz.s[32]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_1aebqmmulz.b[4][0]++;\n    let findBeerById = /* istanbul ignore next */(cov_1aebqmmulz.s[33]++, beers.find(beer => {/* istanbul ignore next */cov_1aebqmmulz.f[4]++;cov_1aebqmmulz.s[34]++;return beer.id === request.url.query.id;})); /* istanbul ignore next */cov_1aebqmmulz.s[35]++;\n    if (findBeerById) {/* istanbul ignore next */cov_1aebqmmulz.b[5][0]++;cov_1aebqmmulz.s[36]++;\n      sendJSON(response, 200, findBeerById); /* istanbul ignore next */cov_1aebqmmulz.s[37]++;\n      return;\n    } else {/* istanbul ignore next */cov_1aebqmmulz.b[5][1]++;cov_1aebqmmulz.s[38]++;\n      sendStatus(response, 400, 'beer not found'); /* istanbul ignore next */cov_1aebqmmulz.s[39]++;\n      return;\n    }\n  } else {/* istanbul ignore next */cov_1aebqmmulz.b[4][1]++;cov_1aebqmmulz.s[40]++;\n    sendJSON(response, 200, beers); /* istanbul ignore next */cov_1aebqmmulz.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-08T00:00:44.600Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T00:00:44.600Z"}
[{"id":"d66424e0-dbaa-11e7-abbd-efe34600fe39","timestamp":"2017-12-08T00:00:44.590Z","brewery":"Rainier Beer","beerName":"Rainier","beerType":"lager"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:00:44.604Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T00:00:44.604Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[2]++;cov_1aebqmmulz.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_1aebqmmulz.b[0][0]++;cov_1aebqmmulz.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_1aebqmmulz.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[0][1]++;}cov_1aebqmmulz.s[19]++;\n  if (!request.body.brewery) {/* istanbul ignore next */cov_1aebqmmulz.b[1][0]++;cov_1aebqmmulz.s[20]++;\n    sendStatus(response, 400, 'brewery not found'); /* istanbul ignore next */cov_1aebqmmulz.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[1][1]++;}cov_1aebqmmulz.s[22]++;\n  if (!request.body.beerName) {/* istanbul ignore next */cov_1aebqmmulz.b[2][0]++;cov_1aebqmmulz.s[23]++;\n    sendStatus(response, 400, 'beer name not found'); /* istanbul ignore next */cov_1aebqmmulz.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[2][1]++;}cov_1aebqmmulz.s[25]++;\n  if (!request.body.beerType) {/* istanbul ignore next */cov_1aebqmmulz.b[3][0]++;cov_1aebqmmulz.s[26]++;\n    sendStatus(response, 400, 'beer type not found'); /* istanbul ignore next */cov_1aebqmmulz.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[3][1]++;}\n  let beer = /* istanbul ignore next */(cov_1aebqmmulz.s[28]++, new Beer(request.body.brewery, request.body.beerName, request.body.beerType)); /* istanbul ignore next */cov_1aebqmmulz.s[29]++;\n  beers.push(beer); /* istanbul ignore next */cov_1aebqmmulz.s[30]++;\n  sendJSON(response, 200, beer);\n}","timestamp":"2017-12-08T00:00:44.604Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T00:00:44.604Z"}
{"id":"d66647c0-dbaa-11e7-abbd-efe34600fe39","timestamp":"2017-12-08T00:00:44.604Z","brewery":"Lagunitas","beerName":"daytime ale","beerType":"session ale","level":"info","message":""}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:00:44.607Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T00:00:44.607Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[3]++;cov_1aebqmmulz.s[32]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_1aebqmmulz.b[4][0]++;\n    let findBeerById = /* istanbul ignore next */(cov_1aebqmmulz.s[33]++, beers.find(beer => {/* istanbul ignore next */cov_1aebqmmulz.f[4]++;cov_1aebqmmulz.s[34]++;return beer.id === request.url.query.id;})); /* istanbul ignore next */cov_1aebqmmulz.s[35]++;\n    if (findBeerById) {/* istanbul ignore next */cov_1aebqmmulz.b[5][0]++;cov_1aebqmmulz.s[36]++;\n      sendJSON(response, 200, findBeerById); /* istanbul ignore next */cov_1aebqmmulz.s[37]++;\n      return;\n    } else {/* istanbul ignore next */cov_1aebqmmulz.b[5][1]++;cov_1aebqmmulz.s[38]++;\n      sendStatus(response, 400, 'beer not found'); /* istanbul ignore next */cov_1aebqmmulz.s[39]++;\n      return;\n    }\n  } else {/* istanbul ignore next */cov_1aebqmmulz.b[4][1]++;cov_1aebqmmulz.s[40]++;\n    sendJSON(response, 200, beers); /* istanbul ignore next */cov_1aebqmmulz.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-08T00:00:44.607Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T00:00:44.608Z"}
{"id":"d66647c0-dbaa-11e7-abbd-efe34600fe39","timestamp":"2017-12-08T00:00:44.608Z","brewery":"Lagunitas","beerName":"daytime ale","beerType":"session ale","level":"info","message":""}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:00:44.610Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T00:00:44.610Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[3]++;cov_1aebqmmulz.s[32]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_1aebqmmulz.b[4][0]++;\n    let findBeerById = /* istanbul ignore next */(cov_1aebqmmulz.s[33]++, beers.find(beer => {/* istanbul ignore next */cov_1aebqmmulz.f[4]++;cov_1aebqmmulz.s[34]++;return beer.id === request.url.query.id;})); /* istanbul ignore next */cov_1aebqmmulz.s[35]++;\n    if (findBeerById) {/* istanbul ignore next */cov_1aebqmmulz.b[5][0]++;cov_1aebqmmulz.s[36]++;\n      sendJSON(response, 200, findBeerById); /* istanbul ignore next */cov_1aebqmmulz.s[37]++;\n      return;\n    } else {/* istanbul ignore next */cov_1aebqmmulz.b[5][1]++;cov_1aebqmmulz.s[38]++;\n      sendStatus(response, 400, 'beer not found'); /* istanbul ignore next */cov_1aebqmmulz.s[39]++;\n      return;\n    }\n  } else {/* istanbul ignore next */cov_1aebqmmulz.b[4][1]++;cov_1aebqmmulz.s[40]++;\n    sendJSON(response, 200, beers); /* istanbul ignore next */cov_1aebqmmulz.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-08T00:00:44.610Z"}
{"level":"info","message":"Responding with a 400 code due to beer not found","timestamp":"2017-12-08T00:00:44.611Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:00:44.613Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T00:00:44.613Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[2]++;cov_1aebqmmulz.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_1aebqmmulz.b[0][0]++;cov_1aebqmmulz.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_1aebqmmulz.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[0][1]++;}cov_1aebqmmulz.s[19]++;\n  if (!request.body.brewery) {/* istanbul ignore next */cov_1aebqmmulz.b[1][0]++;cov_1aebqmmulz.s[20]++;\n    sendStatus(response, 400, 'brewery not found'); /* istanbul ignore next */cov_1aebqmmulz.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[1][1]++;}cov_1aebqmmulz.s[22]++;\n  if (!request.body.beerName) {/* istanbul ignore next */cov_1aebqmmulz.b[2][0]++;cov_1aebqmmulz.s[23]++;\n    sendStatus(response, 400, 'beer name not found'); /* istanbul ignore next */cov_1aebqmmulz.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[2][1]++;}cov_1aebqmmulz.s[25]++;\n  if (!request.body.beerType) {/* istanbul ignore next */cov_1aebqmmulz.b[3][0]++;cov_1aebqmmulz.s[26]++;\n    sendStatus(response, 400, 'beer type not found'); /* istanbul ignore next */cov_1aebqmmulz.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[3][1]++;}\n  let beer = /* istanbul ignore next */(cov_1aebqmmulz.s[28]++, new Beer(request.body.brewery, request.body.beerName, request.body.beerType)); /* istanbul ignore next */cov_1aebqmmulz.s[29]++;\n  beers.push(beer); /* istanbul ignore next */cov_1aebqmmulz.s[30]++;\n  sendJSON(response, 200, beer);\n}","timestamp":"2017-12-08T00:00:44.613Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T00:00:44.613Z"}
{"id":"d667a750-dbaa-11e7-abbd-efe34600fe39","timestamp":"2017-12-08T00:00:44.613Z","brewery":"Rainier Beer","beerName":"Rainier","beerType":"lager","level":"info","message":""}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:00:44.618Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T00:00:44.618Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[5]++;cov_1aebqmmulz.s[43]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_1aebqmmulz.b[6][0]++;\n    let filterBeerById = /* istanbul ignore next */(cov_1aebqmmulz.s[44]++, beers.filter(beer => {/* istanbul ignore next */cov_1aebqmmulz.f[6]++;cov_1aebqmmulz.s[45]++;return beer.id === request.url.query.id;})); /* istanbul ignore next */cov_1aebqmmulz.s[46]++;\n    if (filterBeerById) {/* istanbul ignore next */cov_1aebqmmulz.b[7][0]++;cov_1aebqmmulz.s[47]++;\n      beers = filterBeerById; /* istanbul ignore next */cov_1aebqmmulz.s[48]++;\n      sendJSON(response, 200, filterBeerById); /* istanbul ignore next */cov_1aebqmmulz.s[49]++;\n      return;\n    } else {/* istanbul ignore next */cov_1aebqmmulz.b[7][1]++;cov_1aebqmmulz.s[50]++;\n      sendStatus(response, 400, 'beer not found'); /* istanbul ignore next */cov_1aebqmmulz.s[51]++;\n      return;\n    }\n  } else {/* istanbul ignore next */cov_1aebqmmulz.b[6][1]++;cov_1aebqmmulz.s[52]++;\n    sendJSON(response, 200, beers); /* istanbul ignore next */cov_1aebqmmulz.s[53]++;\n    return;\n  }\n}","timestamp":"2017-12-08T00:00:44.618Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T00:00:44.618Z"}
[{"id":"d667a750-dbaa-11e7-abbd-efe34600fe39","timestamp":"2017-12-08T00:00:44.613Z","brewery":"Rainier Beer","beerName":"Rainier","beerType":"lager"}]
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-08T00:01:10.660Z"}
{"level":"info","message":"/api/beers","timestamp":"2017-12-08T00:01:10.661Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[2]++;cov_1aebqmmulz.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_1aebqmmulz.b[0][0]++;cov_1aebqmmulz.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_1aebqmmulz.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[0][1]++;}cov_1aebqmmulz.s[19]++;\n  if (!request.body.brewery) {/* istanbul ignore next */cov_1aebqmmulz.b[1][0]++;cov_1aebqmmulz.s[20]++;\n    sendStatus(response, 400, 'brewery not found'); /* istanbul ignore next */cov_1aebqmmulz.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[1][1]++;}cov_1aebqmmulz.s[22]++;\n  if (!request.body.beerName) {/* istanbul ignore next */cov_1aebqmmulz.b[2][0]++;cov_1aebqmmulz.s[23]++;\n    sendStatus(response, 400, 'beer name not found'); /* istanbul ignore next */cov_1aebqmmulz.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[2][1]++;}cov_1aebqmmulz.s[25]++;\n  if (!request.body.beerType) {/* istanbul ignore next */cov_1aebqmmulz.b[3][0]++;cov_1aebqmmulz.s[26]++;\n    sendStatus(response, 400, 'beer type not found'); /* istanbul ignore next */cov_1aebqmmulz.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[3][1]++;}\n  let beer = /* istanbul ignore next */(cov_1aebqmmulz.s[28]++, new Beer(request.body.brewery, request.body.beerName, request.body.beerType)); /* istanbul ignore next */cov_1aebqmmulz.s[29]++;\n  beers.push(beer); /* istanbul ignore next */cov_1aebqmmulz.s[30]++;\n  sendJSON(response, 200, beer);\n}","timestamp":"2017-12-08T00:01:10.661Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-08T00:01:10.661Z"}
{"level":"info","message":"/api/beers","timestamp":"2017-12-08T00:01:10.661Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[3]++;cov_1aebqmmulz.s[32]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_1aebqmmulz.b[4][0]++;\n    let findBeerById = /* istanbul ignore next */(cov_1aebqmmulz.s[33]++, beers.find(beer => {/* istanbul ignore next */cov_1aebqmmulz.f[4]++;cov_1aebqmmulz.s[34]++;return beer.id === request.url.query.id;})); /* istanbul ignore next */cov_1aebqmmulz.s[35]++;\n    if (findBeerById) {/* istanbul ignore next */cov_1aebqmmulz.b[5][0]++;cov_1aebqmmulz.s[36]++;\n      sendJSON(response, 200, findBeerById); /* istanbul ignore next */cov_1aebqmmulz.s[37]++;\n      return;\n    } else {/* istanbul ignore next */cov_1aebqmmulz.b[5][1]++;cov_1aebqmmulz.s[38]++;\n      sendStatus(response, 400, 'beer not found'); /* istanbul ignore next */cov_1aebqmmulz.s[39]++;\n      return;\n    }\n  } else {/* istanbul ignore next */cov_1aebqmmulz.b[4][1]++;cov_1aebqmmulz.s[40]++;\n    sendJSON(response, 200, beers); /* istanbul ignore next */cov_1aebqmmulz.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-08T00:01:10.661Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-08T00:01:10.661Z"}
{"level":"info","message":"/api/beers","timestamp":"2017-12-08T00:01:10.661Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[5]++;cov_1aebqmmulz.s[43]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_1aebqmmulz.b[6][0]++;\n    let filterBeerById = /* istanbul ignore next */(cov_1aebqmmulz.s[44]++, beers.filter(beer => {/* istanbul ignore next */cov_1aebqmmulz.f[6]++;cov_1aebqmmulz.s[45]++;return beer.id === request.url.query.id;})); /* istanbul ignore next */cov_1aebqmmulz.s[46]++;\n    if (filterBeerById) {/* istanbul ignore next */cov_1aebqmmulz.b[7][0]++;cov_1aebqmmulz.s[47]++;\n      beers = filterBeerById; /* istanbul ignore next */cov_1aebqmmulz.s[48]++;\n      sendJSON(response, 200, filterBeerById); /* istanbul ignore next */cov_1aebqmmulz.s[49]++;\n      return;\n    } else {/* istanbul ignore next */cov_1aebqmmulz.b[7][1]++;cov_1aebqmmulz.s[50]++;\n      sendStatus(response, 400, 'beer not found'); /* istanbul ignore next */cov_1aebqmmulz.s[51]++;\n      return;\n    }\n  } else {/* istanbul ignore next */cov_1aebqmmulz.b[6][1]++;cov_1aebqmmulz.s[52]++;\n    sendJSON(response, 200, beers); /* istanbul ignore next */cov_1aebqmmulz.s[53]++;\n    return;\n  }\n}","timestamp":"2017-12-08T00:01:10.661Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2017-12-08T00:01:10.709Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:01:10.724Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T00:01:10.725Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[2]++;cov_1aebqmmulz.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_1aebqmmulz.b[0][0]++;cov_1aebqmmulz.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_1aebqmmulz.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[0][1]++;}cov_1aebqmmulz.s[19]++;\n  if (!request.body.brewery) {/* istanbul ignore next */cov_1aebqmmulz.b[1][0]++;cov_1aebqmmulz.s[20]++;\n    sendStatus(response, 400, 'brewery not found'); /* istanbul ignore next */cov_1aebqmmulz.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[1][1]++;}cov_1aebqmmulz.s[22]++;\n  if (!request.body.beerName) {/* istanbul ignore next */cov_1aebqmmulz.b[2][0]++;cov_1aebqmmulz.s[23]++;\n    sendStatus(response, 400, 'beer name not found'); /* istanbul ignore next */cov_1aebqmmulz.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[2][1]++;}cov_1aebqmmulz.s[25]++;\n  if (!request.body.beerType) {/* istanbul ignore next */cov_1aebqmmulz.b[3][0]++;cov_1aebqmmulz.s[26]++;\n    sendStatus(response, 400, 'beer type not found'); /* istanbul ignore next */cov_1aebqmmulz.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[3][1]++;}\n  let beer = /* istanbul ignore next */(cov_1aebqmmulz.s[28]++, new Beer(request.body.brewery, request.body.beerName, request.body.beerType)); /* istanbul ignore next */cov_1aebqmmulz.s[29]++;\n  beers.push(beer); /* istanbul ignore next */cov_1aebqmmulz.s[30]++;\n  sendJSON(response, 200, beer);\n}","timestamp":"2017-12-08T00:01:10.725Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T00:01:10.726Z"}
{"id":"e5f80750-dbaa-11e7-91ab-73e7c25a9dd2","timestamp":"2017-12-08T00:01:10.726Z","brewery":"Rainier Beer","beerName":"Rainier","beerType":"lager","level":"info","message":""}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:01:10.735Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T00:01:10.735Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[3]++;cov_1aebqmmulz.s[32]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_1aebqmmulz.b[4][0]++;\n    let findBeerById = /* istanbul ignore next */(cov_1aebqmmulz.s[33]++, beers.find(beer => {/* istanbul ignore next */cov_1aebqmmulz.f[4]++;cov_1aebqmmulz.s[34]++;return beer.id === request.url.query.id;})); /* istanbul ignore next */cov_1aebqmmulz.s[35]++;\n    if (findBeerById) {/* istanbul ignore next */cov_1aebqmmulz.b[5][0]++;cov_1aebqmmulz.s[36]++;\n      sendJSON(response, 200, findBeerById); /* istanbul ignore next */cov_1aebqmmulz.s[37]++;\n      return;\n    } else {/* istanbul ignore next */cov_1aebqmmulz.b[5][1]++;cov_1aebqmmulz.s[38]++;\n      sendStatus(response, 400, 'beer not found'); /* istanbul ignore next */cov_1aebqmmulz.s[39]++;\n      return;\n    }\n  } else {/* istanbul ignore next */cov_1aebqmmulz.b[4][1]++;cov_1aebqmmulz.s[40]++;\n    sendJSON(response, 200, beers); /* istanbul ignore next */cov_1aebqmmulz.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-08T00:01:10.735Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T00:01:10.735Z"}
[{"id":"e5f80750-dbaa-11e7-91ab-73e7c25a9dd2","timestamp":"2017-12-08T00:01:10.726Z","brewery":"Rainier Beer","beerName":"Rainier","beerType":"lager"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:01:10.738Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T00:01:10.739Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[2]++;cov_1aebqmmulz.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_1aebqmmulz.b[0][0]++;cov_1aebqmmulz.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_1aebqmmulz.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[0][1]++;}cov_1aebqmmulz.s[19]++;\n  if (!request.body.brewery) {/* istanbul ignore next */cov_1aebqmmulz.b[1][0]++;cov_1aebqmmulz.s[20]++;\n    sendStatus(response, 400, 'brewery not found'); /* istanbul ignore next */cov_1aebqmmulz.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[1][1]++;}cov_1aebqmmulz.s[22]++;\n  if (!request.body.beerName) {/* istanbul ignore next */cov_1aebqmmulz.b[2][0]++;cov_1aebqmmulz.s[23]++;\n    sendStatus(response, 400, 'beer name not found'); /* istanbul ignore next */cov_1aebqmmulz.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[2][1]++;}cov_1aebqmmulz.s[25]++;\n  if (!request.body.beerType) {/* istanbul ignore next */cov_1aebqmmulz.b[3][0]++;cov_1aebqmmulz.s[26]++;\n    sendStatus(response, 400, 'beer type not found'); /* istanbul ignore next */cov_1aebqmmulz.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[3][1]++;}\n  let beer = /* istanbul ignore next */(cov_1aebqmmulz.s[28]++, new Beer(request.body.brewery, request.body.beerName, request.body.beerType)); /* istanbul ignore next */cov_1aebqmmulz.s[29]++;\n  beers.push(beer); /* istanbul ignore next */cov_1aebqmmulz.s[30]++;\n  sendJSON(response, 200, beer);\n}","timestamp":"2017-12-08T00:01:10.739Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T00:01:10.739Z"}
{"id":"e5fa2a30-dbaa-11e7-91ab-73e7c25a9dd2","timestamp":"2017-12-08T00:01:10.739Z","brewery":"Lagunitas","beerName":"daytime ale","beerType":"session ale","level":"info","message":""}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:01:10.742Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T00:01:10.742Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[3]++;cov_1aebqmmulz.s[32]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_1aebqmmulz.b[4][0]++;\n    let findBeerById = /* istanbul ignore next */(cov_1aebqmmulz.s[33]++, beers.find(beer => {/* istanbul ignore next */cov_1aebqmmulz.f[4]++;cov_1aebqmmulz.s[34]++;return beer.id === request.url.query.id;})); /* istanbul ignore next */cov_1aebqmmulz.s[35]++;\n    if (findBeerById) {/* istanbul ignore next */cov_1aebqmmulz.b[5][0]++;cov_1aebqmmulz.s[36]++;\n      sendJSON(response, 200, findBeerById); /* istanbul ignore next */cov_1aebqmmulz.s[37]++;\n      return;\n    } else {/* istanbul ignore next */cov_1aebqmmulz.b[5][1]++;cov_1aebqmmulz.s[38]++;\n      sendStatus(response, 400, 'beer not found'); /* istanbul ignore next */cov_1aebqmmulz.s[39]++;\n      return;\n    }\n  } else {/* istanbul ignore next */cov_1aebqmmulz.b[4][1]++;cov_1aebqmmulz.s[40]++;\n    sendJSON(response, 200, beers); /* istanbul ignore next */cov_1aebqmmulz.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-08T00:01:10.743Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T00:01:10.743Z"}
{"id":"e5fa2a30-dbaa-11e7-91ab-73e7c25a9dd2","timestamp":"2017-12-08T00:01:10.743Z","brewery":"Lagunitas","beerName":"daytime ale","beerType":"session ale","level":"info","message":""}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:01:10.746Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T00:01:10.746Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[3]++;cov_1aebqmmulz.s[32]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_1aebqmmulz.b[4][0]++;\n    let findBeerById = /* istanbul ignore next */(cov_1aebqmmulz.s[33]++, beers.find(beer => {/* istanbul ignore next */cov_1aebqmmulz.f[4]++;cov_1aebqmmulz.s[34]++;return beer.id === request.url.query.id;})); /* istanbul ignore next */cov_1aebqmmulz.s[35]++;\n    if (findBeerById) {/* istanbul ignore next */cov_1aebqmmulz.b[5][0]++;cov_1aebqmmulz.s[36]++;\n      sendJSON(response, 200, findBeerById); /* istanbul ignore next */cov_1aebqmmulz.s[37]++;\n      return;\n    } else {/* istanbul ignore next */cov_1aebqmmulz.b[5][1]++;cov_1aebqmmulz.s[38]++;\n      sendStatus(response, 400, 'beer not found'); /* istanbul ignore next */cov_1aebqmmulz.s[39]++;\n      return;\n    }\n  } else {/* istanbul ignore next */cov_1aebqmmulz.b[4][1]++;cov_1aebqmmulz.s[40]++;\n    sendJSON(response, 200, beers); /* istanbul ignore next */cov_1aebqmmulz.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-08T00:01:10.746Z"}
{"level":"info","message":"Responding with a 400 code due to beer not found","timestamp":"2017-12-08T00:01:10.746Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:01:10.749Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T00:01:10.749Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[2]++;cov_1aebqmmulz.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_1aebqmmulz.b[0][0]++;cov_1aebqmmulz.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_1aebqmmulz.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[0][1]++;}cov_1aebqmmulz.s[19]++;\n  if (!request.body.brewery) {/* istanbul ignore next */cov_1aebqmmulz.b[1][0]++;cov_1aebqmmulz.s[20]++;\n    sendStatus(response, 400, 'brewery not found'); /* istanbul ignore next */cov_1aebqmmulz.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[1][1]++;}cov_1aebqmmulz.s[22]++;\n  if (!request.body.beerName) {/* istanbul ignore next */cov_1aebqmmulz.b[2][0]++;cov_1aebqmmulz.s[23]++;\n    sendStatus(response, 400, 'beer name not found'); /* istanbul ignore next */cov_1aebqmmulz.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[2][1]++;}cov_1aebqmmulz.s[25]++;\n  if (!request.body.beerType) {/* istanbul ignore next */cov_1aebqmmulz.b[3][0]++;cov_1aebqmmulz.s[26]++;\n    sendStatus(response, 400, 'beer type not found'); /* istanbul ignore next */cov_1aebqmmulz.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[3][1]++;}\n  let beer = /* istanbul ignore next */(cov_1aebqmmulz.s[28]++, new Beer(request.body.brewery, request.body.beerName, request.body.beerType)); /* istanbul ignore next */cov_1aebqmmulz.s[29]++;\n  beers.push(beer); /* istanbul ignore next */cov_1aebqmmulz.s[30]++;\n  sendJSON(response, 200, beer);\n}","timestamp":"2017-12-08T00:01:10.749Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T00:01:10.749Z"}
{"id":"e5fbb0d0-dbaa-11e7-91ab-73e7c25a9dd2","timestamp":"2017-12-08T00:01:10.749Z","brewery":"Lagunitas","beerName":"daytime ale","beerType":"session ale","level":"info","message":""}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:01:10.753Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T00:01:10.753Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[5]++;cov_1aebqmmulz.s[43]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_1aebqmmulz.b[6][0]++;\n    let filterBeerById = /* istanbul ignore next */(cov_1aebqmmulz.s[44]++, beers.filter(beer => {/* istanbul ignore next */cov_1aebqmmulz.f[6]++;cov_1aebqmmulz.s[45]++;return beer.id === request.url.query.id;})); /* istanbul ignore next */cov_1aebqmmulz.s[46]++;\n    if (filterBeerById) {/* istanbul ignore next */cov_1aebqmmulz.b[7][0]++;cov_1aebqmmulz.s[47]++;\n      beers = filterBeerById; /* istanbul ignore next */cov_1aebqmmulz.s[48]++;\n      sendJSON(response, 200, filterBeerById); /* istanbul ignore next */cov_1aebqmmulz.s[49]++;\n      return;\n    } else {/* istanbul ignore next */cov_1aebqmmulz.b[7][1]++;cov_1aebqmmulz.s[50]++;\n      sendStatus(response, 400, 'beer not found'); /* istanbul ignore next */cov_1aebqmmulz.s[51]++;\n      return;\n    }\n  } else {/* istanbul ignore next */cov_1aebqmmulz.b[6][1]++;cov_1aebqmmulz.s[52]++;\n    sendJSON(response, 200, beers); /* istanbul ignore next */cov_1aebqmmulz.s[53]++;\n    return;\n  }\n}","timestamp":"2017-12-08T00:01:10.753Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T00:01:10.753Z"}
[{"id":"e5fbb0d0-dbaa-11e7-91ab-73e7c25a9dd2","timestamp":"2017-12-08T00:01:10.749Z","brewery":"Lagunitas","beerName":"daytime ale","beerType":"session ale"}]
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-08T00:01:25.378Z"}
{"level":"info","message":"/api/beers","timestamp":"2017-12-08T00:01:25.379Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[2]++;cov_1aebqmmulz.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_1aebqmmulz.b[0][0]++;cov_1aebqmmulz.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_1aebqmmulz.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[0][1]++;}cov_1aebqmmulz.s[19]++;\n  if (!request.body.brewery) {/* istanbul ignore next */cov_1aebqmmulz.b[1][0]++;cov_1aebqmmulz.s[20]++;\n    sendStatus(response, 400, 'brewery not found'); /* istanbul ignore next */cov_1aebqmmulz.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[1][1]++;}cov_1aebqmmulz.s[22]++;\n  if (!request.body.beerName) {/* istanbul ignore next */cov_1aebqmmulz.b[2][0]++;cov_1aebqmmulz.s[23]++;\n    sendStatus(response, 400, 'beer name not found'); /* istanbul ignore next */cov_1aebqmmulz.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[2][1]++;}cov_1aebqmmulz.s[25]++;\n  if (!request.body.beerType) {/* istanbul ignore next */cov_1aebqmmulz.b[3][0]++;cov_1aebqmmulz.s[26]++;\n    sendStatus(response, 400, 'beer type not found'); /* istanbul ignore next */cov_1aebqmmulz.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[3][1]++;}\n  let beer = /* istanbul ignore next */(cov_1aebqmmulz.s[28]++, new Beer(request.body.brewery, request.body.beerName, request.body.beerType)); /* istanbul ignore next */cov_1aebqmmulz.s[29]++;\n  beers.push(beer); /* istanbul ignore next */cov_1aebqmmulz.s[30]++;\n  sendJSON(response, 200, beer);\n}","timestamp":"2017-12-08T00:01:25.379Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-08T00:01:25.379Z"}
{"level":"info","message":"/api/beers","timestamp":"2017-12-08T00:01:25.379Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[3]++;cov_1aebqmmulz.s[32]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_1aebqmmulz.b[4][0]++;\n    let findBeerById = /* istanbul ignore next */(cov_1aebqmmulz.s[33]++, beers.find(beer => {/* istanbul ignore next */cov_1aebqmmulz.f[4]++;cov_1aebqmmulz.s[34]++;return beer.id === request.url.query.id;})); /* istanbul ignore next */cov_1aebqmmulz.s[35]++;\n    if (findBeerById) {/* istanbul ignore next */cov_1aebqmmulz.b[5][0]++;cov_1aebqmmulz.s[36]++;\n      sendJSON(response, 200, findBeerById); /* istanbul ignore next */cov_1aebqmmulz.s[37]++;\n      return;\n    } else {/* istanbul ignore next */cov_1aebqmmulz.b[5][1]++;cov_1aebqmmulz.s[38]++;\n      sendStatus(response, 400, 'beer not found'); /* istanbul ignore next */cov_1aebqmmulz.s[39]++;\n      return;\n    }\n  } else {/* istanbul ignore next */cov_1aebqmmulz.b[4][1]++;cov_1aebqmmulz.s[40]++;\n    sendJSON(response, 200, beers); /* istanbul ignore next */cov_1aebqmmulz.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-08T00:01:25.379Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-08T00:01:25.379Z"}
{"level":"info","message":"/api/beers","timestamp":"2017-12-08T00:01:25.379Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[5]++;cov_1aebqmmulz.s[43]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_1aebqmmulz.b[6][0]++;\n    let filterBeerById = /* istanbul ignore next */(cov_1aebqmmulz.s[44]++, beers.filter(beer => {/* istanbul ignore next */cov_1aebqmmulz.f[6]++;cov_1aebqmmulz.s[45]++;return beer.id === request.url.query.id;})); /* istanbul ignore next */cov_1aebqmmulz.s[46]++;\n    if (filterBeerById) {/* istanbul ignore next */cov_1aebqmmulz.b[7][0]++;cov_1aebqmmulz.s[47]++;\n      beers = filterBeerById; /* istanbul ignore next */cov_1aebqmmulz.s[48]++;\n      sendJSON(response, 200, filterBeerById); /* istanbul ignore next */cov_1aebqmmulz.s[49]++;\n      return;\n    } else {/* istanbul ignore next */cov_1aebqmmulz.b[7][1]++;cov_1aebqmmulz.s[50]++;\n      sendStatus(response, 400, 'beer not found'); /* istanbul ignore next */cov_1aebqmmulz.s[51]++;\n      return;\n    }\n  } else {/* istanbul ignore next */cov_1aebqmmulz.b[6][1]++;cov_1aebqmmulz.s[52]++;\n    sendJSON(response, 200, beers); /* istanbul ignore next */cov_1aebqmmulz.s[53]++;\n    return;\n  }\n}","timestamp":"2017-12-08T00:01:25.379Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2017-12-08T00:01:25.427Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:01:25.442Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T00:01:25.443Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[2]++;cov_1aebqmmulz.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_1aebqmmulz.b[0][0]++;cov_1aebqmmulz.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_1aebqmmulz.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[0][1]++;}cov_1aebqmmulz.s[19]++;\n  if (!request.body.brewery) {/* istanbul ignore next */cov_1aebqmmulz.b[1][0]++;cov_1aebqmmulz.s[20]++;\n    sendStatus(response, 400, 'brewery not found'); /* istanbul ignore next */cov_1aebqmmulz.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[1][1]++;}cov_1aebqmmulz.s[22]++;\n  if (!request.body.beerName) {/* istanbul ignore next */cov_1aebqmmulz.b[2][0]++;cov_1aebqmmulz.s[23]++;\n    sendStatus(response, 400, 'beer name not found'); /* istanbul ignore next */cov_1aebqmmulz.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[2][1]++;}cov_1aebqmmulz.s[25]++;\n  if (!request.body.beerType) {/* istanbul ignore next */cov_1aebqmmulz.b[3][0]++;cov_1aebqmmulz.s[26]++;\n    sendStatus(response, 400, 'beer type not found'); /* istanbul ignore next */cov_1aebqmmulz.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[3][1]++;}\n  let beer = /* istanbul ignore next */(cov_1aebqmmulz.s[28]++, new Beer(request.body.brewery, request.body.beerName, request.body.beerType)); /* istanbul ignore next */cov_1aebqmmulz.s[29]++;\n  beers.push(beer); /* istanbul ignore next */cov_1aebqmmulz.s[30]++;\n  sendJSON(response, 200, beer);\n}","timestamp":"2017-12-08T00:01:25.443Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T00:01:25.444Z"}
{"id":"eebdf840-dbaa-11e7-a1cb-c7fa438fbfd0","timestamp":"2017-12-08T00:01:25.444Z","brewery":"Rainier Beer","beerName":"Rainier","beerType":"lager","level":"info","message":""}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:01:25.453Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T00:01:25.453Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[3]++;cov_1aebqmmulz.s[32]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_1aebqmmulz.b[4][0]++;\n    let findBeerById = /* istanbul ignore next */(cov_1aebqmmulz.s[33]++, beers.find(beer => {/* istanbul ignore next */cov_1aebqmmulz.f[4]++;cov_1aebqmmulz.s[34]++;return beer.id === request.url.query.id;})); /* istanbul ignore next */cov_1aebqmmulz.s[35]++;\n    if (findBeerById) {/* istanbul ignore next */cov_1aebqmmulz.b[5][0]++;cov_1aebqmmulz.s[36]++;\n      sendJSON(response, 200, findBeerById); /* istanbul ignore next */cov_1aebqmmulz.s[37]++;\n      return;\n    } else {/* istanbul ignore next */cov_1aebqmmulz.b[5][1]++;cov_1aebqmmulz.s[38]++;\n      sendStatus(response, 400, 'beer not found'); /* istanbul ignore next */cov_1aebqmmulz.s[39]++;\n      return;\n    }\n  } else {/* istanbul ignore next */cov_1aebqmmulz.b[4][1]++;cov_1aebqmmulz.s[40]++;\n    sendJSON(response, 200, beers); /* istanbul ignore next */cov_1aebqmmulz.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-08T00:01:25.453Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T00:01:25.453Z"}
[{"id":"eebdf840-dbaa-11e7-a1cb-c7fa438fbfd0","timestamp":"2017-12-08T00:01:25.444Z","brewery":"Rainier Beer","beerName":"Rainier","beerType":"lager"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:01:25.456Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T00:01:25.457Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[2]++;cov_1aebqmmulz.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_1aebqmmulz.b[0][0]++;cov_1aebqmmulz.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_1aebqmmulz.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[0][1]++;}cov_1aebqmmulz.s[19]++;\n  if (!request.body.brewery) {/* istanbul ignore next */cov_1aebqmmulz.b[1][0]++;cov_1aebqmmulz.s[20]++;\n    sendStatus(response, 400, 'brewery not found'); /* istanbul ignore next */cov_1aebqmmulz.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[1][1]++;}cov_1aebqmmulz.s[22]++;\n  if (!request.body.beerName) {/* istanbul ignore next */cov_1aebqmmulz.b[2][0]++;cov_1aebqmmulz.s[23]++;\n    sendStatus(response, 400, 'beer name not found'); /* istanbul ignore next */cov_1aebqmmulz.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[2][1]++;}cov_1aebqmmulz.s[25]++;\n  if (!request.body.beerType) {/* istanbul ignore next */cov_1aebqmmulz.b[3][0]++;cov_1aebqmmulz.s[26]++;\n    sendStatus(response, 400, 'beer type not found'); /* istanbul ignore next */cov_1aebqmmulz.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[3][1]++;}\n  let beer = /* istanbul ignore next */(cov_1aebqmmulz.s[28]++, new Beer(request.body.brewery, request.body.beerName, request.body.beerType)); /* istanbul ignore next */cov_1aebqmmulz.s[29]++;\n  beers.push(beer); /* istanbul ignore next */cov_1aebqmmulz.s[30]++;\n  sendJSON(response, 200, beer);\n}","timestamp":"2017-12-08T00:01:25.457Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T00:01:25.457Z"}
{"id":"eebff410-dbaa-11e7-a1cb-c7fa438fbfd0","timestamp":"2017-12-08T00:01:25.457Z","brewery":"Lagunitas","beerName":"daytime ale","beerType":"session ale","level":"info","message":""}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:01:25.460Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T00:01:25.461Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[3]++;cov_1aebqmmulz.s[32]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_1aebqmmulz.b[4][0]++;\n    let findBeerById = /* istanbul ignore next */(cov_1aebqmmulz.s[33]++, beers.find(beer => {/* istanbul ignore next */cov_1aebqmmulz.f[4]++;cov_1aebqmmulz.s[34]++;return beer.id === request.url.query.id;})); /* istanbul ignore next */cov_1aebqmmulz.s[35]++;\n    if (findBeerById) {/* istanbul ignore next */cov_1aebqmmulz.b[5][0]++;cov_1aebqmmulz.s[36]++;\n      sendJSON(response, 200, findBeerById); /* istanbul ignore next */cov_1aebqmmulz.s[37]++;\n      return;\n    } else {/* istanbul ignore next */cov_1aebqmmulz.b[5][1]++;cov_1aebqmmulz.s[38]++;\n      sendStatus(response, 400, 'beer not found'); /* istanbul ignore next */cov_1aebqmmulz.s[39]++;\n      return;\n    }\n  } else {/* istanbul ignore next */cov_1aebqmmulz.b[4][1]++;cov_1aebqmmulz.s[40]++;\n    sendJSON(response, 200, beers); /* istanbul ignore next */cov_1aebqmmulz.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-08T00:01:25.461Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T00:01:25.461Z"}
{"id":"eebff410-dbaa-11e7-a1cb-c7fa438fbfd0","timestamp":"2017-12-08T00:01:25.461Z","brewery":"Lagunitas","beerName":"daytime ale","beerType":"session ale","level":"info","message":""}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:01:25.464Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T00:01:25.464Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[3]++;cov_1aebqmmulz.s[32]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_1aebqmmulz.b[4][0]++;\n    let findBeerById = /* istanbul ignore next */(cov_1aebqmmulz.s[33]++, beers.find(beer => {/* istanbul ignore next */cov_1aebqmmulz.f[4]++;cov_1aebqmmulz.s[34]++;return beer.id === request.url.query.id;})); /* istanbul ignore next */cov_1aebqmmulz.s[35]++;\n    if (findBeerById) {/* istanbul ignore next */cov_1aebqmmulz.b[5][0]++;cov_1aebqmmulz.s[36]++;\n      sendJSON(response, 200, findBeerById); /* istanbul ignore next */cov_1aebqmmulz.s[37]++;\n      return;\n    } else {/* istanbul ignore next */cov_1aebqmmulz.b[5][1]++;cov_1aebqmmulz.s[38]++;\n      sendStatus(response, 400, 'beer not found'); /* istanbul ignore next */cov_1aebqmmulz.s[39]++;\n      return;\n    }\n  } else {/* istanbul ignore next */cov_1aebqmmulz.b[4][1]++;cov_1aebqmmulz.s[40]++;\n    sendJSON(response, 200, beers); /* istanbul ignore next */cov_1aebqmmulz.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-08T00:01:25.464Z"}
{"level":"info","message":"Responding with a 400 code due to beer not found","timestamp":"2017-12-08T00:01:25.464Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:01:25.466Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T00:01:25.466Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[2]++;cov_1aebqmmulz.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_1aebqmmulz.b[0][0]++;cov_1aebqmmulz.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_1aebqmmulz.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[0][1]++;}cov_1aebqmmulz.s[19]++;\n  if (!request.body.brewery) {/* istanbul ignore next */cov_1aebqmmulz.b[1][0]++;cov_1aebqmmulz.s[20]++;\n    sendStatus(response, 400, 'brewery not found'); /* istanbul ignore next */cov_1aebqmmulz.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[1][1]++;}cov_1aebqmmulz.s[22]++;\n  if (!request.body.beerName) {/* istanbul ignore next */cov_1aebqmmulz.b[2][0]++;cov_1aebqmmulz.s[23]++;\n    sendStatus(response, 400, 'beer name not found'); /* istanbul ignore next */cov_1aebqmmulz.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[2][1]++;}cov_1aebqmmulz.s[25]++;\n  if (!request.body.beerType) {/* istanbul ignore next */cov_1aebqmmulz.b[3][0]++;cov_1aebqmmulz.s[26]++;\n    sendStatus(response, 400, 'beer type not found'); /* istanbul ignore next */cov_1aebqmmulz.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[3][1]++;}\n  let beer = /* istanbul ignore next */(cov_1aebqmmulz.s[28]++, new Beer(request.body.brewery, request.body.beerName, request.body.beerType)); /* istanbul ignore next */cov_1aebqmmulz.s[29]++;\n  beers.push(beer); /* istanbul ignore next */cov_1aebqmmulz.s[30]++;\n  sendJSON(response, 200, beer);\n}","timestamp":"2017-12-08T00:01:25.466Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T00:01:25.466Z"}
{"id":"eec153a0-dbaa-11e7-a1cb-c7fa438fbfd0","timestamp":"2017-12-08T00:01:25.466Z","brewery":"Lagunitas","beerName":"daytime ale","beerType":"session ale","level":"info","message":""}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:01:25.468Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T00:01:25.468Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[5]++;cov_1aebqmmulz.s[43]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_1aebqmmulz.b[6][0]++;\n    let filterBeerById = /* istanbul ignore next */(cov_1aebqmmulz.s[44]++, beers.filter(beer => {/* istanbul ignore next */cov_1aebqmmulz.f[6]++;cov_1aebqmmulz.s[45]++;return beer.id === request.url.query.id;})); /* istanbul ignore next */cov_1aebqmmulz.s[46]++;\n    if (filterBeerById) {/* istanbul ignore next */cov_1aebqmmulz.b[7][0]++;cov_1aebqmmulz.s[47]++;\n      beers = filterBeerById; /* istanbul ignore next */cov_1aebqmmulz.s[48]++;\n      sendJSON(response, 200, filterBeerById); /* istanbul ignore next */cov_1aebqmmulz.s[49]++;\n      return;\n    } else {/* istanbul ignore next */cov_1aebqmmulz.b[7][1]++;cov_1aebqmmulz.s[50]++;\n      sendStatus(response, 400, 'beer not found'); /* istanbul ignore next */cov_1aebqmmulz.s[51]++;\n      return;\n    }\n  } else {/* istanbul ignore next */cov_1aebqmmulz.b[6][1]++;cov_1aebqmmulz.s[52]++;\n    sendJSON(response, 200, beers); /* istanbul ignore next */cov_1aebqmmulz.s[53]++;\n    return;\n  }\n}","timestamp":"2017-12-08T00:01:25.468Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T00:01:25.469Z"}
[{"id":"eec153a0-dbaa-11e7-a1cb-c7fa438fbfd0","timestamp":"2017-12-08T00:01:25.466Z","brewery":"Lagunitas","beerName":"daytime ale","beerType":"session ale"}]
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-08T00:02:32.924Z"}
{"level":"info","message":"/api/beers","timestamp":"2017-12-08T00:02:32.925Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[2]++;cov_1aebqmmulz.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_1aebqmmulz.b[0][0]++;cov_1aebqmmulz.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_1aebqmmulz.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[0][1]++;}cov_1aebqmmulz.s[19]++;\n  if (!request.body.brewery) {/* istanbul ignore next */cov_1aebqmmulz.b[1][0]++;cov_1aebqmmulz.s[20]++;\n    sendStatus(response, 400, 'brewery not found'); /* istanbul ignore next */cov_1aebqmmulz.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[1][1]++;}cov_1aebqmmulz.s[22]++;\n  if (!request.body.beerName) {/* istanbul ignore next */cov_1aebqmmulz.b[2][0]++;cov_1aebqmmulz.s[23]++;\n    sendStatus(response, 400, 'beer name not found'); /* istanbul ignore next */cov_1aebqmmulz.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[2][1]++;}cov_1aebqmmulz.s[25]++;\n  if (!request.body.beerType) {/* istanbul ignore next */cov_1aebqmmulz.b[3][0]++;cov_1aebqmmulz.s[26]++;\n    sendStatus(response, 400, 'beer type not found'); /* istanbul ignore next */cov_1aebqmmulz.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[3][1]++;}\n  let beer = /* istanbul ignore next */(cov_1aebqmmulz.s[28]++, new Beer(request.body.brewery, request.body.beerName, request.body.beerType)); /* istanbul ignore next */cov_1aebqmmulz.s[29]++;\n  beers.push(beer); /* istanbul ignore next */cov_1aebqmmulz.s[30]++;\n  sendJSON(response, 200, beer);\n}","timestamp":"2017-12-08T00:02:32.925Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-08T00:02:32.925Z"}
{"level":"info","message":"/api/beers","timestamp":"2017-12-08T00:02:32.925Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[3]++;cov_1aebqmmulz.s[32]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_1aebqmmulz.b[4][0]++;\n    let findBeerById = /* istanbul ignore next */(cov_1aebqmmulz.s[33]++, beers.find(beer => {/* istanbul ignore next */cov_1aebqmmulz.f[4]++;cov_1aebqmmulz.s[34]++;return beer.id === request.url.query.id;})); /* istanbul ignore next */cov_1aebqmmulz.s[35]++;\n    if (findBeerById) {/* istanbul ignore next */cov_1aebqmmulz.b[5][0]++;cov_1aebqmmulz.s[36]++;\n      sendJSON(response, 200, findBeerById); /* istanbul ignore next */cov_1aebqmmulz.s[37]++;\n      return;\n    } else {/* istanbul ignore next */cov_1aebqmmulz.b[5][1]++;cov_1aebqmmulz.s[38]++;\n      sendStatus(response, 400, 'beer not found'); /* istanbul ignore next */cov_1aebqmmulz.s[39]++;\n      return;\n    }\n  } else {/* istanbul ignore next */cov_1aebqmmulz.b[4][1]++;cov_1aebqmmulz.s[40]++;\n    sendJSON(response, 200, beers); /* istanbul ignore next */cov_1aebqmmulz.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-08T00:02:32.925Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-08T00:02:32.925Z"}
{"level":"info","message":"/api/beers","timestamp":"2017-12-08T00:02:32.925Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[5]++;cov_1aebqmmulz.s[43]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_1aebqmmulz.b[6][0]++;\n    let filterBeerById = /* istanbul ignore next */(cov_1aebqmmulz.s[44]++, beers.filter(beer => {/* istanbul ignore next */cov_1aebqmmulz.f[6]++;cov_1aebqmmulz.s[45]++;return beer.id === request.url.query.id;})); /* istanbul ignore next */cov_1aebqmmulz.s[46]++;\n    if (filterBeerById) {/* istanbul ignore next */cov_1aebqmmulz.b[7][0]++;cov_1aebqmmulz.s[47]++;\n      beers = filterBeerById; /* istanbul ignore next */cov_1aebqmmulz.s[48]++;\n      sendJSON(response, 200, beers); /* istanbul ignore next */cov_1aebqmmulz.s[49]++;\n      return;\n    } else {/* istanbul ignore next */cov_1aebqmmulz.b[7][1]++;cov_1aebqmmulz.s[50]++;\n      sendStatus(response, 400, 'beer not found'); /* istanbul ignore next */cov_1aebqmmulz.s[51]++;\n      return;\n    }\n  } else {/* istanbul ignore next */cov_1aebqmmulz.b[6][1]++;cov_1aebqmmulz.s[52]++;\n    sendJSON(response, 200, beers); /* istanbul ignore next */cov_1aebqmmulz.s[53]++;\n    return;\n  }\n}","timestamp":"2017-12-08T00:02:32.925Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2017-12-08T00:02:32.980Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:02:32.996Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T00:02:32.997Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[2]++;cov_1aebqmmulz.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_1aebqmmulz.b[0][0]++;cov_1aebqmmulz.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_1aebqmmulz.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[0][1]++;}cov_1aebqmmulz.s[19]++;\n  if (!request.body.brewery) {/* istanbul ignore next */cov_1aebqmmulz.b[1][0]++;cov_1aebqmmulz.s[20]++;\n    sendStatus(response, 400, 'brewery not found'); /* istanbul ignore next */cov_1aebqmmulz.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[1][1]++;}cov_1aebqmmulz.s[22]++;\n  if (!request.body.beerName) {/* istanbul ignore next */cov_1aebqmmulz.b[2][0]++;cov_1aebqmmulz.s[23]++;\n    sendStatus(response, 400, 'beer name not found'); /* istanbul ignore next */cov_1aebqmmulz.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[2][1]++;}cov_1aebqmmulz.s[25]++;\n  if (!request.body.beerType) {/* istanbul ignore next */cov_1aebqmmulz.b[3][0]++;cov_1aebqmmulz.s[26]++;\n    sendStatus(response, 400, 'beer type not found'); /* istanbul ignore next */cov_1aebqmmulz.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[3][1]++;}\n  let beer = /* istanbul ignore next */(cov_1aebqmmulz.s[28]++, new Beer(request.body.brewery, request.body.beerName, request.body.beerType)); /* istanbul ignore next */cov_1aebqmmulz.s[29]++;\n  beers.push(beer); /* istanbul ignore next */cov_1aebqmmulz.s[30]++;\n  sendJSON(response, 200, beer);\n}","timestamp":"2017-12-08T00:02:32.997Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T00:02:32.997Z"}
{"id":"1701bd50-dbab-11e7-b99e-a71206dafcb5","timestamp":"2017-12-08T00:02:32.997Z","brewery":"Rainier Beer","beerName":"Rainier","beerType":"lager","level":"info","message":""}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:02:33.007Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T00:02:33.007Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[3]++;cov_1aebqmmulz.s[32]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_1aebqmmulz.b[4][0]++;\n    let findBeerById = /* istanbul ignore next */(cov_1aebqmmulz.s[33]++, beers.find(beer => {/* istanbul ignore next */cov_1aebqmmulz.f[4]++;cov_1aebqmmulz.s[34]++;return beer.id === request.url.query.id;})); /* istanbul ignore next */cov_1aebqmmulz.s[35]++;\n    if (findBeerById) {/* istanbul ignore next */cov_1aebqmmulz.b[5][0]++;cov_1aebqmmulz.s[36]++;\n      sendJSON(response, 200, findBeerById); /* istanbul ignore next */cov_1aebqmmulz.s[37]++;\n      return;\n    } else {/* istanbul ignore next */cov_1aebqmmulz.b[5][1]++;cov_1aebqmmulz.s[38]++;\n      sendStatus(response, 400, 'beer not found'); /* istanbul ignore next */cov_1aebqmmulz.s[39]++;\n      return;\n    }\n  } else {/* istanbul ignore next */cov_1aebqmmulz.b[4][1]++;cov_1aebqmmulz.s[40]++;\n    sendJSON(response, 200, beers); /* istanbul ignore next */cov_1aebqmmulz.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-08T00:02:33.007Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T00:02:33.007Z"}
[{"id":"1701bd50-dbab-11e7-b99e-a71206dafcb5","timestamp":"2017-12-08T00:02:32.997Z","brewery":"Rainier Beer","beerName":"Rainier","beerType":"lager"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:02:33.011Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T00:02:33.011Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[2]++;cov_1aebqmmulz.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_1aebqmmulz.b[0][0]++;cov_1aebqmmulz.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_1aebqmmulz.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[0][1]++;}cov_1aebqmmulz.s[19]++;\n  if (!request.body.brewery) {/* istanbul ignore next */cov_1aebqmmulz.b[1][0]++;cov_1aebqmmulz.s[20]++;\n    sendStatus(response, 400, 'brewery not found'); /* istanbul ignore next */cov_1aebqmmulz.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[1][1]++;}cov_1aebqmmulz.s[22]++;\n  if (!request.body.beerName) {/* istanbul ignore next */cov_1aebqmmulz.b[2][0]++;cov_1aebqmmulz.s[23]++;\n    sendStatus(response, 400, 'beer name not found'); /* istanbul ignore next */cov_1aebqmmulz.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[2][1]++;}cov_1aebqmmulz.s[25]++;\n  if (!request.body.beerType) {/* istanbul ignore next */cov_1aebqmmulz.b[3][0]++;cov_1aebqmmulz.s[26]++;\n    sendStatus(response, 400, 'beer type not found'); /* istanbul ignore next */cov_1aebqmmulz.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[3][1]++;}\n  let beer = /* istanbul ignore next */(cov_1aebqmmulz.s[28]++, new Beer(request.body.brewery, request.body.beerName, request.body.beerType)); /* istanbul ignore next */cov_1aebqmmulz.s[29]++;\n  beers.push(beer); /* istanbul ignore next */cov_1aebqmmulz.s[30]++;\n  sendJSON(response, 200, beer);\n}","timestamp":"2017-12-08T00:02:33.011Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T00:02:33.012Z"}
{"id":"1703e030-dbab-11e7-b99e-a71206dafcb5","timestamp":"2017-12-08T00:02:33.012Z","brewery":"Lagunitas","beerName":"daytime ale","beerType":"session ale","level":"info","message":""}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:02:33.016Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T00:02:33.017Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[3]++;cov_1aebqmmulz.s[32]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_1aebqmmulz.b[4][0]++;\n    let findBeerById = /* istanbul ignore next */(cov_1aebqmmulz.s[33]++, beers.find(beer => {/* istanbul ignore next */cov_1aebqmmulz.f[4]++;cov_1aebqmmulz.s[34]++;return beer.id === request.url.query.id;})); /* istanbul ignore next */cov_1aebqmmulz.s[35]++;\n    if (findBeerById) {/* istanbul ignore next */cov_1aebqmmulz.b[5][0]++;cov_1aebqmmulz.s[36]++;\n      sendJSON(response, 200, findBeerById); /* istanbul ignore next */cov_1aebqmmulz.s[37]++;\n      return;\n    } else {/* istanbul ignore next */cov_1aebqmmulz.b[5][1]++;cov_1aebqmmulz.s[38]++;\n      sendStatus(response, 400, 'beer not found'); /* istanbul ignore next */cov_1aebqmmulz.s[39]++;\n      return;\n    }\n  } else {/* istanbul ignore next */cov_1aebqmmulz.b[4][1]++;cov_1aebqmmulz.s[40]++;\n    sendJSON(response, 200, beers); /* istanbul ignore next */cov_1aebqmmulz.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-08T00:02:33.017Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T00:02:33.017Z"}
{"id":"1703e030-dbab-11e7-b99e-a71206dafcb5","timestamp":"2017-12-08T00:02:33.017Z","brewery":"Lagunitas","beerName":"daytime ale","beerType":"session ale","level":"info","message":""}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:02:33.020Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T00:02:33.020Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[3]++;cov_1aebqmmulz.s[32]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_1aebqmmulz.b[4][0]++;\n    let findBeerById = /* istanbul ignore next */(cov_1aebqmmulz.s[33]++, beers.find(beer => {/* istanbul ignore next */cov_1aebqmmulz.f[4]++;cov_1aebqmmulz.s[34]++;return beer.id === request.url.query.id;})); /* istanbul ignore next */cov_1aebqmmulz.s[35]++;\n    if (findBeerById) {/* istanbul ignore next */cov_1aebqmmulz.b[5][0]++;cov_1aebqmmulz.s[36]++;\n      sendJSON(response, 200, findBeerById); /* istanbul ignore next */cov_1aebqmmulz.s[37]++;\n      return;\n    } else {/* istanbul ignore next */cov_1aebqmmulz.b[5][1]++;cov_1aebqmmulz.s[38]++;\n      sendStatus(response, 400, 'beer not found'); /* istanbul ignore next */cov_1aebqmmulz.s[39]++;\n      return;\n    }\n  } else {/* istanbul ignore next */cov_1aebqmmulz.b[4][1]++;cov_1aebqmmulz.s[40]++;\n    sendJSON(response, 200, beers); /* istanbul ignore next */cov_1aebqmmulz.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-08T00:02:33.020Z"}
{"level":"info","message":"Responding with a 400 code due to beer not found","timestamp":"2017-12-08T00:02:33.020Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:02:33.022Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T00:02:33.023Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[2]++;cov_1aebqmmulz.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_1aebqmmulz.b[0][0]++;cov_1aebqmmulz.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_1aebqmmulz.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[0][1]++;}cov_1aebqmmulz.s[19]++;\n  if (!request.body.brewery) {/* istanbul ignore next */cov_1aebqmmulz.b[1][0]++;cov_1aebqmmulz.s[20]++;\n    sendStatus(response, 400, 'brewery not found'); /* istanbul ignore next */cov_1aebqmmulz.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[1][1]++;}cov_1aebqmmulz.s[22]++;\n  if (!request.body.beerName) {/* istanbul ignore next */cov_1aebqmmulz.b[2][0]++;cov_1aebqmmulz.s[23]++;\n    sendStatus(response, 400, 'beer name not found'); /* istanbul ignore next */cov_1aebqmmulz.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[2][1]++;}cov_1aebqmmulz.s[25]++;\n  if (!request.body.beerType) {/* istanbul ignore next */cov_1aebqmmulz.b[3][0]++;cov_1aebqmmulz.s[26]++;\n    sendStatus(response, 400, 'beer type not found'); /* istanbul ignore next */cov_1aebqmmulz.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[3][1]++;}\n  let beer = /* istanbul ignore next */(cov_1aebqmmulz.s[28]++, new Beer(request.body.brewery, request.body.beerName, request.body.beerType)); /* istanbul ignore next */cov_1aebqmmulz.s[29]++;\n  beers.push(beer); /* istanbul ignore next */cov_1aebqmmulz.s[30]++;\n  sendJSON(response, 200, beer);\n}","timestamp":"2017-12-08T00:02:33.023Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T00:02:33.023Z"}
{"id":"1705b4f0-dbab-11e7-b99e-a71206dafcb5","timestamp":"2017-12-08T00:02:33.023Z","brewery":"Lagunitas","beerName":"daytime ale","beerType":"session ale","level":"info","message":""}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:02:33.025Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T00:02:33.025Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[5]++;cov_1aebqmmulz.s[43]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_1aebqmmulz.b[6][0]++;\n    let filterBeerById = /* istanbul ignore next */(cov_1aebqmmulz.s[44]++, beers.filter(beer => {/* istanbul ignore next */cov_1aebqmmulz.f[6]++;cov_1aebqmmulz.s[45]++;return beer.id === request.url.query.id;})); /* istanbul ignore next */cov_1aebqmmulz.s[46]++;\n    if (filterBeerById) {/* istanbul ignore next */cov_1aebqmmulz.b[7][0]++;cov_1aebqmmulz.s[47]++;\n      beers = filterBeerById; /* istanbul ignore next */cov_1aebqmmulz.s[48]++;\n      sendJSON(response, 200, beers); /* istanbul ignore next */cov_1aebqmmulz.s[49]++;\n      return;\n    } else {/* istanbul ignore next */cov_1aebqmmulz.b[7][1]++;cov_1aebqmmulz.s[50]++;\n      sendStatus(response, 400, 'beer not found'); /* istanbul ignore next */cov_1aebqmmulz.s[51]++;\n      return;\n    }\n  } else {/* istanbul ignore next */cov_1aebqmmulz.b[6][1]++;cov_1aebqmmulz.s[52]++;\n    sendJSON(response, 200, beers); /* istanbul ignore next */cov_1aebqmmulz.s[53]++;\n    return;\n  }\n}","timestamp":"2017-12-08T00:02:33.025Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T00:02:33.025Z"}
[{"id":"1705b4f0-dbab-11e7-b99e-a71206dafcb5","timestamp":"2017-12-08T00:02:33.023Z","brewery":"Lagunitas","beerName":"daytime ale","beerType":"session ale"}]
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-08T00:12:19.208Z"}
{"level":"info","message":"/api/beers","timestamp":"2017-12-08T00:12:19.209Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[2]++;cov_1aebqmmulz.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_1aebqmmulz.b[0][0]++;cov_1aebqmmulz.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_1aebqmmulz.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[0][1]++;}cov_1aebqmmulz.s[19]++;\n  if (!request.body.brewery) {/* istanbul ignore next */cov_1aebqmmulz.b[1][0]++;cov_1aebqmmulz.s[20]++;\n    sendStatus(response, 400, 'brewery not found'); /* istanbul ignore next */cov_1aebqmmulz.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[1][1]++;}cov_1aebqmmulz.s[22]++;\n  if (!request.body.beerName) {/* istanbul ignore next */cov_1aebqmmulz.b[2][0]++;cov_1aebqmmulz.s[23]++;\n    sendStatus(response, 400, 'beer name not found'); /* istanbul ignore next */cov_1aebqmmulz.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[2][1]++;}cov_1aebqmmulz.s[25]++;\n  if (!request.body.beerType) {/* istanbul ignore next */cov_1aebqmmulz.b[3][0]++;cov_1aebqmmulz.s[26]++;\n    sendStatus(response, 400, 'beer type not found'); /* istanbul ignore next */cov_1aebqmmulz.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[3][1]++;}\n  let beer = /* istanbul ignore next */(cov_1aebqmmulz.s[28]++, new Beer(request.body.brewery, request.body.beerName, request.body.beerType)); /* istanbul ignore next */cov_1aebqmmulz.s[29]++;\n  beers.push(beer); /* istanbul ignore next */cov_1aebqmmulz.s[30]++;\n  sendJSON(response, 200, beer);\n}","timestamp":"2017-12-08T00:12:19.209Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-08T00:12:19.209Z"}
{"level":"info","message":"/api/beers","timestamp":"2017-12-08T00:12:19.209Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[3]++;cov_1aebqmmulz.s[32]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_1aebqmmulz.b[4][0]++;\n    let findBeerById = /* istanbul ignore next */(cov_1aebqmmulz.s[33]++, beers.find(beer => {/* istanbul ignore next */cov_1aebqmmulz.f[4]++;cov_1aebqmmulz.s[34]++;return beer.id === request.url.query.id;})); /* istanbul ignore next */cov_1aebqmmulz.s[35]++;\n    if (findBeerById) {/* istanbul ignore next */cov_1aebqmmulz.b[5][0]++;cov_1aebqmmulz.s[36]++;\n      sendJSON(response, 200, findBeerById); /* istanbul ignore next */cov_1aebqmmulz.s[37]++;\n      return;\n    } else {/* istanbul ignore next */cov_1aebqmmulz.b[5][1]++;cov_1aebqmmulz.s[38]++;\n      sendStatus(response, 400, 'beer not found'); /* istanbul ignore next */cov_1aebqmmulz.s[39]++;\n      return;\n    }\n  } else {/* istanbul ignore next */cov_1aebqmmulz.b[4][1]++;cov_1aebqmmulz.s[40]++;\n    sendJSON(response, 200, beers); /* istanbul ignore next */cov_1aebqmmulz.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-08T00:12:19.209Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-08T00:12:19.209Z"}
{"level":"info","message":"/api/beers","timestamp":"2017-12-08T00:12:19.209Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[5]++;cov_1aebqmmulz.s[43]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_1aebqmmulz.b[6][0]++;\n    let filterBeerById = /* istanbul ignore next */(cov_1aebqmmulz.s[44]++, beers.filter(beer => {/* istanbul ignore next */cov_1aebqmmulz.f[6]++;cov_1aebqmmulz.s[45]++;return beer.id !== request.url.query.id;})); /* istanbul ignore next */cov_1aebqmmulz.s[46]++;\n    if (filterBeerById) {/* istanbul ignore next */cov_1aebqmmulz.b[7][0]++;cov_1aebqmmulz.s[47]++;\n      beers = filterBeerById; /* istanbul ignore next */cov_1aebqmmulz.s[48]++;\n      sendJSON(response, 200, beers); /* istanbul ignore next */cov_1aebqmmulz.s[49]++;\n      return;\n    } else {/* istanbul ignore next */cov_1aebqmmulz.b[7][1]++;cov_1aebqmmulz.s[50]++;\n      sendStatus(response, 400, 'beer not found'); /* istanbul ignore next */cov_1aebqmmulz.s[51]++;\n      return;\n    }\n  } else {/* istanbul ignore next */cov_1aebqmmulz.b[6][1]++;cov_1aebqmmulz.s[52]++;\n    sendJSON(response, 200, beers); /* istanbul ignore next */cov_1aebqmmulz.s[53]++;\n    return;\n  }\n}","timestamp":"2017-12-08T00:12:19.209Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2017-12-08T00:12:19.270Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:12:19.289Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T00:12:19.290Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[2]++;cov_1aebqmmulz.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_1aebqmmulz.b[0][0]++;cov_1aebqmmulz.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_1aebqmmulz.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[0][1]++;}cov_1aebqmmulz.s[19]++;\n  if (!request.body.brewery) {/* istanbul ignore next */cov_1aebqmmulz.b[1][0]++;cov_1aebqmmulz.s[20]++;\n    sendStatus(response, 400, 'brewery not found'); /* istanbul ignore next */cov_1aebqmmulz.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[1][1]++;}cov_1aebqmmulz.s[22]++;\n  if (!request.body.beerName) {/* istanbul ignore next */cov_1aebqmmulz.b[2][0]++;cov_1aebqmmulz.s[23]++;\n    sendStatus(response, 400, 'beer name not found'); /* istanbul ignore next */cov_1aebqmmulz.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[2][1]++;}cov_1aebqmmulz.s[25]++;\n  if (!request.body.beerType) {/* istanbul ignore next */cov_1aebqmmulz.b[3][0]++;cov_1aebqmmulz.s[26]++;\n    sendStatus(response, 400, 'beer type not found'); /* istanbul ignore next */cov_1aebqmmulz.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[3][1]++;}\n  let beer = /* istanbul ignore next */(cov_1aebqmmulz.s[28]++, new Beer(request.body.brewery, request.body.beerName, request.body.beerType)); /* istanbul ignore next */cov_1aebqmmulz.s[29]++;\n  beers.push(beer); /* istanbul ignore next */cov_1aebqmmulz.s[30]++;\n  sendJSON(response, 200, beer);\n}","timestamp":"2017-12-08T00:12:19.290Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T00:12:19.291Z"}
{"id":"74771ab0-dbac-11e7-9219-6b638179515b","timestamp":"2017-12-08T00:12:19.291Z","brewery":"Rainier Beer","beerName":"Rainier","beerType":"lager","level":"info","message":""}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:12:19.300Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T00:12:19.301Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[3]++;cov_1aebqmmulz.s[32]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_1aebqmmulz.b[4][0]++;\n    let findBeerById = /* istanbul ignore next */(cov_1aebqmmulz.s[33]++, beers.find(beer => {/* istanbul ignore next */cov_1aebqmmulz.f[4]++;cov_1aebqmmulz.s[34]++;return beer.id === request.url.query.id;})); /* istanbul ignore next */cov_1aebqmmulz.s[35]++;\n    if (findBeerById) {/* istanbul ignore next */cov_1aebqmmulz.b[5][0]++;cov_1aebqmmulz.s[36]++;\n      sendJSON(response, 200, findBeerById); /* istanbul ignore next */cov_1aebqmmulz.s[37]++;\n      return;\n    } else {/* istanbul ignore next */cov_1aebqmmulz.b[5][1]++;cov_1aebqmmulz.s[38]++;\n      sendStatus(response, 400, 'beer not found'); /* istanbul ignore next */cov_1aebqmmulz.s[39]++;\n      return;\n    }\n  } else {/* istanbul ignore next */cov_1aebqmmulz.b[4][1]++;cov_1aebqmmulz.s[40]++;\n    sendJSON(response, 200, beers); /* istanbul ignore next */cov_1aebqmmulz.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-08T00:12:19.301Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T00:12:19.301Z"}
[{"id":"74771ab0-dbac-11e7-9219-6b638179515b","timestamp":"2017-12-08T00:12:19.291Z","brewery":"Rainier Beer","beerName":"Rainier","beerType":"lager"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:12:19.304Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T00:12:19.304Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[2]++;cov_1aebqmmulz.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_1aebqmmulz.b[0][0]++;cov_1aebqmmulz.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_1aebqmmulz.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[0][1]++;}cov_1aebqmmulz.s[19]++;\n  if (!request.body.brewery) {/* istanbul ignore next */cov_1aebqmmulz.b[1][0]++;cov_1aebqmmulz.s[20]++;\n    sendStatus(response, 400, 'brewery not found'); /* istanbul ignore next */cov_1aebqmmulz.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[1][1]++;}cov_1aebqmmulz.s[22]++;\n  if (!request.body.beerName) {/* istanbul ignore next */cov_1aebqmmulz.b[2][0]++;cov_1aebqmmulz.s[23]++;\n    sendStatus(response, 400, 'beer name not found'); /* istanbul ignore next */cov_1aebqmmulz.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[2][1]++;}cov_1aebqmmulz.s[25]++;\n  if (!request.body.beerType) {/* istanbul ignore next */cov_1aebqmmulz.b[3][0]++;cov_1aebqmmulz.s[26]++;\n    sendStatus(response, 400, 'beer type not found'); /* istanbul ignore next */cov_1aebqmmulz.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[3][1]++;}\n  let beer = /* istanbul ignore next */(cov_1aebqmmulz.s[28]++, new Beer(request.body.brewery, request.body.beerName, request.body.beerType)); /* istanbul ignore next */cov_1aebqmmulz.s[29]++;\n  beers.push(beer); /* istanbul ignore next */cov_1aebqmmulz.s[30]++;\n  sendJSON(response, 200, beer);\n}","timestamp":"2017-12-08T00:12:19.304Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T00:12:19.305Z"}
{"id":"74793d90-dbac-11e7-9219-6b638179515b","timestamp":"2017-12-08T00:12:19.305Z","brewery":"Lagunitas","beerName":"daytime ale","beerType":"session ale","level":"info","message":""}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:12:19.308Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T00:12:19.308Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[3]++;cov_1aebqmmulz.s[32]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_1aebqmmulz.b[4][0]++;\n    let findBeerById = /* istanbul ignore next */(cov_1aebqmmulz.s[33]++, beers.find(beer => {/* istanbul ignore next */cov_1aebqmmulz.f[4]++;cov_1aebqmmulz.s[34]++;return beer.id === request.url.query.id;})); /* istanbul ignore next */cov_1aebqmmulz.s[35]++;\n    if (findBeerById) {/* istanbul ignore next */cov_1aebqmmulz.b[5][0]++;cov_1aebqmmulz.s[36]++;\n      sendJSON(response, 200, findBeerById); /* istanbul ignore next */cov_1aebqmmulz.s[37]++;\n      return;\n    } else {/* istanbul ignore next */cov_1aebqmmulz.b[5][1]++;cov_1aebqmmulz.s[38]++;\n      sendStatus(response, 400, 'beer not found'); /* istanbul ignore next */cov_1aebqmmulz.s[39]++;\n      return;\n    }\n  } else {/* istanbul ignore next */cov_1aebqmmulz.b[4][1]++;cov_1aebqmmulz.s[40]++;\n    sendJSON(response, 200, beers); /* istanbul ignore next */cov_1aebqmmulz.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-08T00:12:19.308Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T00:12:19.309Z"}
{"id":"74793d90-dbac-11e7-9219-6b638179515b","timestamp":"2017-12-08T00:12:19.309Z","brewery":"Lagunitas","beerName":"daytime ale","beerType":"session ale","level":"info","message":""}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:12:19.312Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T00:12:19.312Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[3]++;cov_1aebqmmulz.s[32]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_1aebqmmulz.b[4][0]++;\n    let findBeerById = /* istanbul ignore next */(cov_1aebqmmulz.s[33]++, beers.find(beer => {/* istanbul ignore next */cov_1aebqmmulz.f[4]++;cov_1aebqmmulz.s[34]++;return beer.id === request.url.query.id;})); /* istanbul ignore next */cov_1aebqmmulz.s[35]++;\n    if (findBeerById) {/* istanbul ignore next */cov_1aebqmmulz.b[5][0]++;cov_1aebqmmulz.s[36]++;\n      sendJSON(response, 200, findBeerById); /* istanbul ignore next */cov_1aebqmmulz.s[37]++;\n      return;\n    } else {/* istanbul ignore next */cov_1aebqmmulz.b[5][1]++;cov_1aebqmmulz.s[38]++;\n      sendStatus(response, 400, 'beer not found'); /* istanbul ignore next */cov_1aebqmmulz.s[39]++;\n      return;\n    }\n  } else {/* istanbul ignore next */cov_1aebqmmulz.b[4][1]++;cov_1aebqmmulz.s[40]++;\n    sendJSON(response, 200, beers); /* istanbul ignore next */cov_1aebqmmulz.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-08T00:12:19.312Z"}
{"level":"info","message":"Responding with a 400 code due to beer not found","timestamp":"2017-12-08T00:12:19.312Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:12:19.315Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T00:12:19.315Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[2]++;cov_1aebqmmulz.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_1aebqmmulz.b[0][0]++;cov_1aebqmmulz.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_1aebqmmulz.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[0][1]++;}cov_1aebqmmulz.s[19]++;\n  if (!request.body.brewery) {/* istanbul ignore next */cov_1aebqmmulz.b[1][0]++;cov_1aebqmmulz.s[20]++;\n    sendStatus(response, 400, 'brewery not found'); /* istanbul ignore next */cov_1aebqmmulz.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[1][1]++;}cov_1aebqmmulz.s[22]++;\n  if (!request.body.beerName) {/* istanbul ignore next */cov_1aebqmmulz.b[2][0]++;cov_1aebqmmulz.s[23]++;\n    sendStatus(response, 400, 'beer name not found'); /* istanbul ignore next */cov_1aebqmmulz.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[2][1]++;}cov_1aebqmmulz.s[25]++;\n  if (!request.body.beerType) {/* istanbul ignore next */cov_1aebqmmulz.b[3][0]++;cov_1aebqmmulz.s[26]++;\n    sendStatus(response, 400, 'beer type not found'); /* istanbul ignore next */cov_1aebqmmulz.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[3][1]++;}\n  let beer = /* istanbul ignore next */(cov_1aebqmmulz.s[28]++, new Beer(request.body.brewery, request.body.beerName, request.body.beerType)); /* istanbul ignore next */cov_1aebqmmulz.s[29]++;\n  beers.push(beer); /* istanbul ignore next */cov_1aebqmmulz.s[30]++;\n  sendJSON(response, 200, beer);\n}","timestamp":"2017-12-08T00:12:19.315Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T00:12:19.315Z"}
{"id":"747ac430-dbac-11e7-9219-6b638179515b","timestamp":"2017-12-08T00:12:19.315Z","brewery":"Lagunitas","beerName":"daytime ale","beerType":"session ale","level":"info","message":""}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:12:19.317Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T00:12:19.317Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[5]++;cov_1aebqmmulz.s[43]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_1aebqmmulz.b[6][0]++;\n    let filterBeerById = /* istanbul ignore next */(cov_1aebqmmulz.s[44]++, beers.filter(beer => {/* istanbul ignore next */cov_1aebqmmulz.f[6]++;cov_1aebqmmulz.s[45]++;return beer.id !== request.url.query.id;})); /* istanbul ignore next */cov_1aebqmmulz.s[46]++;\n    if (filterBeerById) {/* istanbul ignore next */cov_1aebqmmulz.b[7][0]++;cov_1aebqmmulz.s[47]++;\n      beers = filterBeerById; /* istanbul ignore next */cov_1aebqmmulz.s[48]++;\n      sendJSON(response, 200, beers); /* istanbul ignore next */cov_1aebqmmulz.s[49]++;\n      return;\n    } else {/* istanbul ignore next */cov_1aebqmmulz.b[7][1]++;cov_1aebqmmulz.s[50]++;\n      sendStatus(response, 400, 'beer not found'); /* istanbul ignore next */cov_1aebqmmulz.s[51]++;\n      return;\n    }\n  } else {/* istanbul ignore next */cov_1aebqmmulz.b[6][1]++;cov_1aebqmmulz.s[52]++;\n    sendJSON(response, 200, beers); /* istanbul ignore next */cov_1aebqmmulz.s[53]++;\n    return;\n  }\n}","timestamp":"2017-12-08T00:12:19.317Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T00:12:19.317Z"}
[{"id":"74771ab0-dbac-11e7-9219-6b638179515b","timestamp":"2017-12-08T00:12:19.291Z","brewery":"Rainier Beer","beerName":"Rainier","beerType":"lager"},{"id":"74793d90-dbac-11e7-9219-6b638179515b","timestamp":"2017-12-08T00:12:19.305Z","brewery":"Lagunitas","beerName":"daytime ale","beerType":"session ale"}]
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-08T00:13:28.347Z"}
{"level":"info","message":"/api/beers","timestamp":"2017-12-08T00:13:28.347Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[2]++;cov_1aebqmmulz.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_1aebqmmulz.b[0][0]++;cov_1aebqmmulz.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_1aebqmmulz.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[0][1]++;}cov_1aebqmmulz.s[19]++;\n  if (!request.body.brewery) {/* istanbul ignore next */cov_1aebqmmulz.b[1][0]++;cov_1aebqmmulz.s[20]++;\n    sendStatus(response, 400, 'brewery not found'); /* istanbul ignore next */cov_1aebqmmulz.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[1][1]++;}cov_1aebqmmulz.s[22]++;\n  if (!request.body.beerName) {/* istanbul ignore next */cov_1aebqmmulz.b[2][0]++;cov_1aebqmmulz.s[23]++;\n    sendStatus(response, 400, 'beer name not found'); /* istanbul ignore next */cov_1aebqmmulz.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[2][1]++;}cov_1aebqmmulz.s[25]++;\n  if (!request.body.beerType) {/* istanbul ignore next */cov_1aebqmmulz.b[3][0]++;cov_1aebqmmulz.s[26]++;\n    sendStatus(response, 400, 'beer type not found'); /* istanbul ignore next */cov_1aebqmmulz.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[3][1]++;}\n  let beer = /* istanbul ignore next */(cov_1aebqmmulz.s[28]++, new Beer(request.body.brewery, request.body.beerName, request.body.beerType)); /* istanbul ignore next */cov_1aebqmmulz.s[29]++;\n  beers.push(beer); /* istanbul ignore next */cov_1aebqmmulz.s[30]++;\n  sendJSON(response, 200, beer);\n}","timestamp":"2017-12-08T00:13:28.348Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-08T00:13:28.348Z"}
{"level":"info","message":"/api/beers","timestamp":"2017-12-08T00:13:28.348Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[3]++;cov_1aebqmmulz.s[32]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_1aebqmmulz.b[4][0]++;\n    let findBeerById = /* istanbul ignore next */(cov_1aebqmmulz.s[33]++, beers.find(beer => {/* istanbul ignore next */cov_1aebqmmulz.f[4]++;cov_1aebqmmulz.s[34]++;return beer.id === request.url.query.id;})); /* istanbul ignore next */cov_1aebqmmulz.s[35]++;\n    if (findBeerById) {/* istanbul ignore next */cov_1aebqmmulz.b[5][0]++;cov_1aebqmmulz.s[36]++;\n      sendJSON(response, 200, findBeerById); /* istanbul ignore next */cov_1aebqmmulz.s[37]++;\n      return;\n    } else {/* istanbul ignore next */cov_1aebqmmulz.b[5][1]++;cov_1aebqmmulz.s[38]++;\n      sendStatus(response, 400, 'beer not found'); /* istanbul ignore next */cov_1aebqmmulz.s[39]++;\n      return;\n    }\n  } else {/* istanbul ignore next */cov_1aebqmmulz.b[4][1]++;cov_1aebqmmulz.s[40]++;\n    sendJSON(response, 200, beers); /* istanbul ignore next */cov_1aebqmmulz.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-08T00:13:28.348Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-08T00:13:28.348Z"}
{"level":"info","message":"/api/beers","timestamp":"2017-12-08T00:13:28.348Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[5]++;cov_1aebqmmulz.s[43]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_1aebqmmulz.b[6][0]++;\n    let filterBeerById = /* istanbul ignore next */(cov_1aebqmmulz.s[44]++, beers.filter(beer => {/* istanbul ignore next */cov_1aebqmmulz.f[6]++;cov_1aebqmmulz.s[45]++;return beer.id !== request.url.query.id;})); /* istanbul ignore next */cov_1aebqmmulz.s[46]++;\n    if (filterBeerById) {/* istanbul ignore next */cov_1aebqmmulz.b[7][0]++;cov_1aebqmmulz.s[47]++;\n      beers = filterBeerById; /* istanbul ignore next */cov_1aebqmmulz.s[48]++;\n      sendJSON(response, 200, beers); /* istanbul ignore next */cov_1aebqmmulz.s[49]++;\n      return;\n    } else {/* istanbul ignore next */cov_1aebqmmulz.b[7][1]++;cov_1aebqmmulz.s[50]++;\n      sendStatus(response, 400, 'beer not found'); /* istanbul ignore next */cov_1aebqmmulz.s[51]++;\n      return;\n    }\n  } else {/* istanbul ignore next */cov_1aebqmmulz.b[6][1]++;cov_1aebqmmulz.s[52]++;\n    sendJSON(response, 200, beers); /* istanbul ignore next */cov_1aebqmmulz.s[53]++;\n    return;\n  }\n}","timestamp":"2017-12-08T00:13:28.348Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2017-12-08T00:13:28.395Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:13:28.410Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T00:13:28.411Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[2]++;cov_1aebqmmulz.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_1aebqmmulz.b[0][0]++;cov_1aebqmmulz.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_1aebqmmulz.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[0][1]++;}cov_1aebqmmulz.s[19]++;\n  if (!request.body.brewery) {/* istanbul ignore next */cov_1aebqmmulz.b[1][0]++;cov_1aebqmmulz.s[20]++;\n    sendStatus(response, 400, 'brewery not found'); /* istanbul ignore next */cov_1aebqmmulz.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[1][1]++;}cov_1aebqmmulz.s[22]++;\n  if (!request.body.beerName) {/* istanbul ignore next */cov_1aebqmmulz.b[2][0]++;cov_1aebqmmulz.s[23]++;\n    sendStatus(response, 400, 'beer name not found'); /* istanbul ignore next */cov_1aebqmmulz.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[2][1]++;}cov_1aebqmmulz.s[25]++;\n  if (!request.body.beerType) {/* istanbul ignore next */cov_1aebqmmulz.b[3][0]++;cov_1aebqmmulz.s[26]++;\n    sendStatus(response, 400, 'beer type not found'); /* istanbul ignore next */cov_1aebqmmulz.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[3][1]++;}\n  let beer = /* istanbul ignore next */(cov_1aebqmmulz.s[28]++, new Beer(request.body.brewery, request.body.beerName, request.body.beerType)); /* istanbul ignore next */cov_1aebqmmulz.s[29]++;\n  beers.push(beer); /* istanbul ignore next */cov_1aebqmmulz.s[30]++;\n  sendJSON(response, 200, beer);\n}","timestamp":"2017-12-08T00:13:28.411Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T00:13:28.412Z"}
{"id":"9daa21c0-dbac-11e7-899b-35308fbce482","timestamp":"2017-12-08T00:13:28.412Z","brewery":"Rainier Beer","beerName":"Rainier","beerType":"lager","level":"info","message":""}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:13:28.422Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T00:13:28.422Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[3]++;cov_1aebqmmulz.s[32]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_1aebqmmulz.b[4][0]++;\n    let findBeerById = /* istanbul ignore next */(cov_1aebqmmulz.s[33]++, beers.find(beer => {/* istanbul ignore next */cov_1aebqmmulz.f[4]++;cov_1aebqmmulz.s[34]++;return beer.id === request.url.query.id;})); /* istanbul ignore next */cov_1aebqmmulz.s[35]++;\n    if (findBeerById) {/* istanbul ignore next */cov_1aebqmmulz.b[5][0]++;cov_1aebqmmulz.s[36]++;\n      sendJSON(response, 200, findBeerById); /* istanbul ignore next */cov_1aebqmmulz.s[37]++;\n      return;\n    } else {/* istanbul ignore next */cov_1aebqmmulz.b[5][1]++;cov_1aebqmmulz.s[38]++;\n      sendStatus(response, 400, 'beer not found'); /* istanbul ignore next */cov_1aebqmmulz.s[39]++;\n      return;\n    }\n  } else {/* istanbul ignore next */cov_1aebqmmulz.b[4][1]++;cov_1aebqmmulz.s[40]++;\n    sendJSON(response, 200, beers); /* istanbul ignore next */cov_1aebqmmulz.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-08T00:13:28.422Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T00:13:28.422Z"}
[{"id":"9daa21c0-dbac-11e7-899b-35308fbce482","timestamp":"2017-12-08T00:13:28.412Z","brewery":"Rainier Beer","beerName":"Rainier","beerType":"lager"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:13:28.426Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T00:13:28.426Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[2]++;cov_1aebqmmulz.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_1aebqmmulz.b[0][0]++;cov_1aebqmmulz.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_1aebqmmulz.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[0][1]++;}cov_1aebqmmulz.s[19]++;\n  if (!request.body.brewery) {/* istanbul ignore next */cov_1aebqmmulz.b[1][0]++;cov_1aebqmmulz.s[20]++;\n    sendStatus(response, 400, 'brewery not found'); /* istanbul ignore next */cov_1aebqmmulz.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[1][1]++;}cov_1aebqmmulz.s[22]++;\n  if (!request.body.beerName) {/* istanbul ignore next */cov_1aebqmmulz.b[2][0]++;cov_1aebqmmulz.s[23]++;\n    sendStatus(response, 400, 'beer name not found'); /* istanbul ignore next */cov_1aebqmmulz.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[2][1]++;}cov_1aebqmmulz.s[25]++;\n  if (!request.body.beerType) {/* istanbul ignore next */cov_1aebqmmulz.b[3][0]++;cov_1aebqmmulz.s[26]++;\n    sendStatus(response, 400, 'beer type not found'); /* istanbul ignore next */cov_1aebqmmulz.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[3][1]++;}\n  let beer = /* istanbul ignore next */(cov_1aebqmmulz.s[28]++, new Beer(request.body.brewery, request.body.beerName, request.body.beerType)); /* istanbul ignore next */cov_1aebqmmulz.s[29]++;\n  beers.push(beer); /* istanbul ignore next */cov_1aebqmmulz.s[30]++;\n  sendJSON(response, 200, beer);\n}","timestamp":"2017-12-08T00:13:28.426Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T00:13:28.426Z"}
{"id":"9dac44a0-dbac-11e7-899b-35308fbce482","timestamp":"2017-12-08T00:13:28.427Z","brewery":"Lagunitas","beerName":"daytime ale","beerType":"session ale","level":"info","message":""}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:13:28.430Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T00:13:28.430Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[3]++;cov_1aebqmmulz.s[32]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_1aebqmmulz.b[4][0]++;\n    let findBeerById = /* istanbul ignore next */(cov_1aebqmmulz.s[33]++, beers.find(beer => {/* istanbul ignore next */cov_1aebqmmulz.f[4]++;cov_1aebqmmulz.s[34]++;return beer.id === request.url.query.id;})); /* istanbul ignore next */cov_1aebqmmulz.s[35]++;\n    if (findBeerById) {/* istanbul ignore next */cov_1aebqmmulz.b[5][0]++;cov_1aebqmmulz.s[36]++;\n      sendJSON(response, 200, findBeerById); /* istanbul ignore next */cov_1aebqmmulz.s[37]++;\n      return;\n    } else {/* istanbul ignore next */cov_1aebqmmulz.b[5][1]++;cov_1aebqmmulz.s[38]++;\n      sendStatus(response, 400, 'beer not found'); /* istanbul ignore next */cov_1aebqmmulz.s[39]++;\n      return;\n    }\n  } else {/* istanbul ignore next */cov_1aebqmmulz.b[4][1]++;cov_1aebqmmulz.s[40]++;\n    sendJSON(response, 200, beers); /* istanbul ignore next */cov_1aebqmmulz.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-08T00:13:28.430Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T00:13:28.430Z"}
{"id":"9dac44a0-dbac-11e7-899b-35308fbce482","timestamp":"2017-12-08T00:13:28.431Z","brewery":"Lagunitas","beerName":"daytime ale","beerType":"session ale","level":"info","message":""}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:13:28.433Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T00:13:28.433Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[3]++;cov_1aebqmmulz.s[32]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_1aebqmmulz.b[4][0]++;\n    let findBeerById = /* istanbul ignore next */(cov_1aebqmmulz.s[33]++, beers.find(beer => {/* istanbul ignore next */cov_1aebqmmulz.f[4]++;cov_1aebqmmulz.s[34]++;return beer.id === request.url.query.id;})); /* istanbul ignore next */cov_1aebqmmulz.s[35]++;\n    if (findBeerById) {/* istanbul ignore next */cov_1aebqmmulz.b[5][0]++;cov_1aebqmmulz.s[36]++;\n      sendJSON(response, 200, findBeerById); /* istanbul ignore next */cov_1aebqmmulz.s[37]++;\n      return;\n    } else {/* istanbul ignore next */cov_1aebqmmulz.b[5][1]++;cov_1aebqmmulz.s[38]++;\n      sendStatus(response, 400, 'beer not found'); /* istanbul ignore next */cov_1aebqmmulz.s[39]++;\n      return;\n    }\n  } else {/* istanbul ignore next */cov_1aebqmmulz.b[4][1]++;cov_1aebqmmulz.s[40]++;\n    sendJSON(response, 200, beers); /* istanbul ignore next */cov_1aebqmmulz.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-08T00:13:28.433Z"}
{"level":"info","message":"Responding with a 400 code due to beer not found","timestamp":"2017-12-08T00:13:28.433Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:13:28.436Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T00:13:28.436Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[2]++;cov_1aebqmmulz.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_1aebqmmulz.b[0][0]++;cov_1aebqmmulz.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_1aebqmmulz.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[0][1]++;}cov_1aebqmmulz.s[19]++;\n  if (!request.body.brewery) {/* istanbul ignore next */cov_1aebqmmulz.b[1][0]++;cov_1aebqmmulz.s[20]++;\n    sendStatus(response, 400, 'brewery not found'); /* istanbul ignore next */cov_1aebqmmulz.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[1][1]++;}cov_1aebqmmulz.s[22]++;\n  if (!request.body.beerName) {/* istanbul ignore next */cov_1aebqmmulz.b[2][0]++;cov_1aebqmmulz.s[23]++;\n    sendStatus(response, 400, 'beer name not found'); /* istanbul ignore next */cov_1aebqmmulz.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[2][1]++;}cov_1aebqmmulz.s[25]++;\n  if (!request.body.beerType) {/* istanbul ignore next */cov_1aebqmmulz.b[3][0]++;cov_1aebqmmulz.s[26]++;\n    sendStatus(response, 400, 'beer type not found'); /* istanbul ignore next */cov_1aebqmmulz.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[3][1]++;}\n  let beer = /* istanbul ignore next */(cov_1aebqmmulz.s[28]++, new Beer(request.body.brewery, request.body.beerName, request.body.beerType)); /* istanbul ignore next */cov_1aebqmmulz.s[29]++;\n  beers.push(beer); /* istanbul ignore next */cov_1aebqmmulz.s[30]++;\n  sendJSON(response, 200, beer);\n}","timestamp":"2017-12-08T00:13:28.436Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T00:13:28.436Z"}
{"id":"9dadcb40-dbac-11e7-899b-35308fbce482","timestamp":"2017-12-08T00:13:28.436Z","brewery":"Lagunitas","beerName":"daytime ale","beerType":"session ale","level":"info","message":""}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:13:28.441Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T00:13:28.441Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[5]++;cov_1aebqmmulz.s[43]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_1aebqmmulz.b[6][0]++;\n    let filterBeerById = /* istanbul ignore next */(cov_1aebqmmulz.s[44]++, beers.filter(beer => {/* istanbul ignore next */cov_1aebqmmulz.f[6]++;cov_1aebqmmulz.s[45]++;return beer.id !== request.url.query.id;})); /* istanbul ignore next */cov_1aebqmmulz.s[46]++;\n    if (filterBeerById) {/* istanbul ignore next */cov_1aebqmmulz.b[7][0]++;cov_1aebqmmulz.s[47]++;\n      beers = filterBeerById; /* istanbul ignore next */cov_1aebqmmulz.s[48]++;\n      sendJSON(response, 200, beers); /* istanbul ignore next */cov_1aebqmmulz.s[49]++;\n      return;\n    } else {/* istanbul ignore next */cov_1aebqmmulz.b[7][1]++;cov_1aebqmmulz.s[50]++;\n      sendStatus(response, 400, 'beer not found'); /* istanbul ignore next */cov_1aebqmmulz.s[51]++;\n      return;\n    }\n  } else {/* istanbul ignore next */cov_1aebqmmulz.b[6][1]++;cov_1aebqmmulz.s[52]++;\n    sendJSON(response, 200, beers); /* istanbul ignore next */cov_1aebqmmulz.s[53]++;\n    return;\n  }\n}","timestamp":"2017-12-08T00:13:28.441Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T00:13:28.441Z"}
[{"id":"9daa21c0-dbac-11e7-899b-35308fbce482","timestamp":"2017-12-08T00:13:28.412Z","brewery":"Rainier Beer","beerName":"Rainier","beerType":"lager"},{"id":"9dac44a0-dbac-11e7-899b-35308fbce482","timestamp":"2017-12-08T00:13:28.426Z","brewery":"Lagunitas","beerName":"daytime ale","beerType":"session ale"}]
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-08T00:18:13.702Z"}
{"level":"info","message":"/api/beers","timestamp":"2017-12-08T00:18:13.703Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[2]++;cov_1aebqmmulz.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_1aebqmmulz.b[0][0]++;cov_1aebqmmulz.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_1aebqmmulz.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[0][1]++;}cov_1aebqmmulz.s[19]++;\n  if (!request.body.brewery) {/* istanbul ignore next */cov_1aebqmmulz.b[1][0]++;cov_1aebqmmulz.s[20]++;\n    sendStatus(response, 400, 'brewery not found'); /* istanbul ignore next */cov_1aebqmmulz.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[1][1]++;}cov_1aebqmmulz.s[22]++;\n  if (!request.body.beerName) {/* istanbul ignore next */cov_1aebqmmulz.b[2][0]++;cov_1aebqmmulz.s[23]++;\n    sendStatus(response, 400, 'beer name not found'); /* istanbul ignore next */cov_1aebqmmulz.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[2][1]++;}cov_1aebqmmulz.s[25]++;\n  if (!request.body.beerType) {/* istanbul ignore next */cov_1aebqmmulz.b[3][0]++;cov_1aebqmmulz.s[26]++;\n    sendStatus(response, 400, 'beer type not found'); /* istanbul ignore next */cov_1aebqmmulz.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[3][1]++;}\n  let beer = /* istanbul ignore next */(cov_1aebqmmulz.s[28]++, new Beer(request.body.brewery, request.body.beerName, request.body.beerType)); /* istanbul ignore next */cov_1aebqmmulz.s[29]++;\n  beers.push(beer); /* istanbul ignore next */cov_1aebqmmulz.s[30]++;\n  sendJSON(response, 200, beer);\n}","timestamp":"2017-12-08T00:18:13.703Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-08T00:18:13.703Z"}
{"level":"info","message":"/api/beers","timestamp":"2017-12-08T00:18:13.703Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[3]++;cov_1aebqmmulz.s[32]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_1aebqmmulz.b[4][0]++;\n    let findBeerById = /* istanbul ignore next */(cov_1aebqmmulz.s[33]++, beers.find(beer => {/* istanbul ignore next */cov_1aebqmmulz.f[4]++;cov_1aebqmmulz.s[34]++;return beer.id === request.url.query.id;})); /* istanbul ignore next */cov_1aebqmmulz.s[35]++;\n    if (findBeerById) {/* istanbul ignore next */cov_1aebqmmulz.b[5][0]++;cov_1aebqmmulz.s[36]++;\n      sendJSON(response, 200, findBeerById); /* istanbul ignore next */cov_1aebqmmulz.s[37]++;\n      return;\n    } else {/* istanbul ignore next */cov_1aebqmmulz.b[5][1]++;cov_1aebqmmulz.s[38]++;\n      sendStatus(response, 400, 'beer not found'); /* istanbul ignore next */cov_1aebqmmulz.s[39]++;\n      return;\n    }\n  } else {/* istanbul ignore next */cov_1aebqmmulz.b[4][1]++;cov_1aebqmmulz.s[40]++;\n    sendJSON(response, 200, beers); /* istanbul ignore next */cov_1aebqmmulz.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-08T00:18:13.703Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-08T00:18:13.703Z"}
{"level":"info","message":"/api/beers","timestamp":"2017-12-08T00:18:13.703Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[5]++;cov_1aebqmmulz.s[43]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_1aebqmmulz.b[6][0]++;\n    let filterBeerById = /* istanbul ignore next */(cov_1aebqmmulz.s[44]++, beers.filter(beer => {/* istanbul ignore next */cov_1aebqmmulz.f[6]++;cov_1aebqmmulz.s[45]++;return beer.id !== request.url.query.id;})); /* istanbul ignore next */cov_1aebqmmulz.s[46]++;\n    if (filterBeerById) {/* istanbul ignore next */cov_1aebqmmulz.b[7][0]++;cov_1aebqmmulz.s[47]++;\n      beers = filterBeerById; /* istanbul ignore next */cov_1aebqmmulz.s[48]++;\n      sendJSON(response, 200, beers); /* istanbul ignore next */cov_1aebqmmulz.s[49]++;\n      return;\n    } else {/* istanbul ignore next */cov_1aebqmmulz.b[7][1]++;cov_1aebqmmulz.s[50]++;\n      sendStatus(response, 400, 'beer not found'); /* istanbul ignore next */cov_1aebqmmulz.s[51]++;\n      return;\n    }\n  } else {/* istanbul ignore next */cov_1aebqmmulz.b[6][1]++;cov_1aebqmmulz.s[52]++;\n    sendJSON(response, 200, beers); /* istanbul ignore next */cov_1aebqmmulz.s[53]++;\n    return;\n  }\n}","timestamp":"2017-12-08T00:18:13.703Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2017-12-08T00:18:13.763Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:18:13.781Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T00:18:13.783Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[2]++;cov_1aebqmmulz.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_1aebqmmulz.b[0][0]++;cov_1aebqmmulz.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_1aebqmmulz.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[0][1]++;}cov_1aebqmmulz.s[19]++;\n  if (!request.body.brewery) {/* istanbul ignore next */cov_1aebqmmulz.b[1][0]++;cov_1aebqmmulz.s[20]++;\n    sendStatus(response, 400, 'brewery not found'); /* istanbul ignore next */cov_1aebqmmulz.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[1][1]++;}cov_1aebqmmulz.s[22]++;\n  if (!request.body.beerName) {/* istanbul ignore next */cov_1aebqmmulz.b[2][0]++;cov_1aebqmmulz.s[23]++;\n    sendStatus(response, 400, 'beer name not found'); /* istanbul ignore next */cov_1aebqmmulz.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[2][1]++;}cov_1aebqmmulz.s[25]++;\n  if (!request.body.beerType) {/* istanbul ignore next */cov_1aebqmmulz.b[3][0]++;cov_1aebqmmulz.s[26]++;\n    sendStatus(response, 400, 'beer type not found'); /* istanbul ignore next */cov_1aebqmmulz.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[3][1]++;}\n  let beer = /* istanbul ignore next */(cov_1aebqmmulz.s[28]++, new Beer(request.body.brewery, request.body.beerName, request.body.beerType)); /* istanbul ignore next */cov_1aebqmmulz.s[29]++;\n  beers.push(beer); /* istanbul ignore next */cov_1aebqmmulz.s[30]++;\n  sendJSON(response, 200, beer);\n}","timestamp":"2017-12-08T00:18:13.783Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T00:18:13.783Z"}
{"id":"47c24a70-dbad-11e7-8112-71e468597590","timestamp":"2017-12-08T00:18:13.783Z","brewery":"Rainier Beer","beerName":"Rainier","beerType":"lager","level":"info","message":""}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:18:13.793Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T00:18:13.793Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[3]++;cov_1aebqmmulz.s[32]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_1aebqmmulz.b[4][0]++;\n    let findBeerById = /* istanbul ignore next */(cov_1aebqmmulz.s[33]++, beers.find(beer => {/* istanbul ignore next */cov_1aebqmmulz.f[4]++;cov_1aebqmmulz.s[34]++;return beer.id === request.url.query.id;})); /* istanbul ignore next */cov_1aebqmmulz.s[35]++;\n    if (findBeerById) {/* istanbul ignore next */cov_1aebqmmulz.b[5][0]++;cov_1aebqmmulz.s[36]++;\n      sendJSON(response, 200, findBeerById); /* istanbul ignore next */cov_1aebqmmulz.s[37]++;\n      return;\n    } else {/* istanbul ignore next */cov_1aebqmmulz.b[5][1]++;cov_1aebqmmulz.s[38]++;\n      sendStatus(response, 400, 'beer not found'); /* istanbul ignore next */cov_1aebqmmulz.s[39]++;\n      return;\n    }\n  } else {/* istanbul ignore next */cov_1aebqmmulz.b[4][1]++;cov_1aebqmmulz.s[40]++;\n    sendJSON(response, 200, beers); /* istanbul ignore next */cov_1aebqmmulz.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-08T00:18:13.793Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T00:18:13.793Z"}
[{"id":"47c24a70-dbad-11e7-8112-71e468597590","timestamp":"2017-12-08T00:18:13.783Z","brewery":"Rainier Beer","beerName":"Rainier","beerType":"lager"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:18:13.796Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T00:18:13.797Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[2]++;cov_1aebqmmulz.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_1aebqmmulz.b[0][0]++;cov_1aebqmmulz.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_1aebqmmulz.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[0][1]++;}cov_1aebqmmulz.s[19]++;\n  if (!request.body.brewery) {/* istanbul ignore next */cov_1aebqmmulz.b[1][0]++;cov_1aebqmmulz.s[20]++;\n    sendStatus(response, 400, 'brewery not found'); /* istanbul ignore next */cov_1aebqmmulz.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[1][1]++;}cov_1aebqmmulz.s[22]++;\n  if (!request.body.beerName) {/* istanbul ignore next */cov_1aebqmmulz.b[2][0]++;cov_1aebqmmulz.s[23]++;\n    sendStatus(response, 400, 'beer name not found'); /* istanbul ignore next */cov_1aebqmmulz.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[2][1]++;}cov_1aebqmmulz.s[25]++;\n  if (!request.body.beerType) {/* istanbul ignore next */cov_1aebqmmulz.b[3][0]++;cov_1aebqmmulz.s[26]++;\n    sendStatus(response, 400, 'beer type not found'); /* istanbul ignore next */cov_1aebqmmulz.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[3][1]++;}\n  let beer = /* istanbul ignore next */(cov_1aebqmmulz.s[28]++, new Beer(request.body.brewery, request.body.beerName, request.body.beerType)); /* istanbul ignore next */cov_1aebqmmulz.s[29]++;\n  beers.push(beer); /* istanbul ignore next */cov_1aebqmmulz.s[30]++;\n  sendJSON(response, 200, beer);\n}","timestamp":"2017-12-08T00:18:13.797Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T00:18:13.797Z"}
{"id":"47c46d50-dbad-11e7-8112-71e468597590","timestamp":"2017-12-08T00:18:13.797Z","brewery":"Lagunitas","beerName":"daytime ale","beerType":"session ale","level":"info","message":""}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:18:13.800Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T00:18:13.801Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[3]++;cov_1aebqmmulz.s[32]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_1aebqmmulz.b[4][0]++;\n    let findBeerById = /* istanbul ignore next */(cov_1aebqmmulz.s[33]++, beers.find(beer => {/* istanbul ignore next */cov_1aebqmmulz.f[4]++;cov_1aebqmmulz.s[34]++;return beer.id === request.url.query.id;})); /* istanbul ignore next */cov_1aebqmmulz.s[35]++;\n    if (findBeerById) {/* istanbul ignore next */cov_1aebqmmulz.b[5][0]++;cov_1aebqmmulz.s[36]++;\n      sendJSON(response, 200, findBeerById); /* istanbul ignore next */cov_1aebqmmulz.s[37]++;\n      return;\n    } else {/* istanbul ignore next */cov_1aebqmmulz.b[5][1]++;cov_1aebqmmulz.s[38]++;\n      sendStatus(response, 400, 'beer not found'); /* istanbul ignore next */cov_1aebqmmulz.s[39]++;\n      return;\n    }\n  } else {/* istanbul ignore next */cov_1aebqmmulz.b[4][1]++;cov_1aebqmmulz.s[40]++;\n    sendJSON(response, 200, beers); /* istanbul ignore next */cov_1aebqmmulz.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-08T00:18:13.801Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T00:18:13.801Z"}
{"id":"47c46d50-dbad-11e7-8112-71e468597590","timestamp":"2017-12-08T00:18:13.801Z","brewery":"Lagunitas","beerName":"daytime ale","beerType":"session ale","level":"info","message":""}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:18:13.804Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T00:18:13.805Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[3]++;cov_1aebqmmulz.s[32]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_1aebqmmulz.b[4][0]++;\n    let findBeerById = /* istanbul ignore next */(cov_1aebqmmulz.s[33]++, beers.find(beer => {/* istanbul ignore next */cov_1aebqmmulz.f[4]++;cov_1aebqmmulz.s[34]++;return beer.id === request.url.query.id;})); /* istanbul ignore next */cov_1aebqmmulz.s[35]++;\n    if (findBeerById) {/* istanbul ignore next */cov_1aebqmmulz.b[5][0]++;cov_1aebqmmulz.s[36]++;\n      sendJSON(response, 200, findBeerById); /* istanbul ignore next */cov_1aebqmmulz.s[37]++;\n      return;\n    } else {/* istanbul ignore next */cov_1aebqmmulz.b[5][1]++;cov_1aebqmmulz.s[38]++;\n      sendStatus(response, 400, 'beer not found'); /* istanbul ignore next */cov_1aebqmmulz.s[39]++;\n      return;\n    }\n  } else {/* istanbul ignore next */cov_1aebqmmulz.b[4][1]++;cov_1aebqmmulz.s[40]++;\n    sendJSON(response, 200, beers); /* istanbul ignore next */cov_1aebqmmulz.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-08T00:18:13.805Z"}
{"level":"info","message":"Responding with a 400 code due to beer not found","timestamp":"2017-12-08T00:18:13.805Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:18:13.807Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T00:18:13.807Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[2]++;cov_1aebqmmulz.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_1aebqmmulz.b[0][0]++;cov_1aebqmmulz.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_1aebqmmulz.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[0][1]++;}cov_1aebqmmulz.s[19]++;\n  if (!request.body.brewery) {/* istanbul ignore next */cov_1aebqmmulz.b[1][0]++;cov_1aebqmmulz.s[20]++;\n    sendStatus(response, 400, 'brewery not found'); /* istanbul ignore next */cov_1aebqmmulz.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[1][1]++;}cov_1aebqmmulz.s[22]++;\n  if (!request.body.beerName) {/* istanbul ignore next */cov_1aebqmmulz.b[2][0]++;cov_1aebqmmulz.s[23]++;\n    sendStatus(response, 400, 'beer name not found'); /* istanbul ignore next */cov_1aebqmmulz.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[2][1]++;}cov_1aebqmmulz.s[25]++;\n  if (!request.body.beerType) {/* istanbul ignore next */cov_1aebqmmulz.b[3][0]++;cov_1aebqmmulz.s[26]++;\n    sendStatus(response, 400, 'beer type not found'); /* istanbul ignore next */cov_1aebqmmulz.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[3][1]++;}\n  let beer = /* istanbul ignore next */(cov_1aebqmmulz.s[28]++, new Beer(request.body.brewery, request.body.beerName, request.body.beerType)); /* istanbul ignore next */cov_1aebqmmulz.s[29]++;\n  beers.push(beer); /* istanbul ignore next */cov_1aebqmmulz.s[30]++;\n  sendJSON(response, 200, beer);\n}","timestamp":"2017-12-08T00:18:13.807Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T00:18:13.808Z"}
{"id":"47c61b00-dbad-11e7-8112-71e468597590","timestamp":"2017-12-08T00:18:13.808Z","brewery":"Lagunitas","beerName":"daytime ale","beerType":"session ale","level":"info","message":""}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:18:13.809Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T00:18:13.810Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[5]++;cov_1aebqmmulz.s[43]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_1aebqmmulz.b[6][0]++;\n    let filterBeerById = /* istanbul ignore next */(cov_1aebqmmulz.s[44]++, beers.filter(beer => {/* istanbul ignore next */cov_1aebqmmulz.f[6]++;cov_1aebqmmulz.s[45]++;return beer.id !== request.url.query.id;})); /* istanbul ignore next */cov_1aebqmmulz.s[46]++;\n    if (filterBeerById) {/* istanbul ignore next */cov_1aebqmmulz.b[7][0]++;cov_1aebqmmulz.s[47]++;\n      beers = filterBeerById; /* istanbul ignore next */cov_1aebqmmulz.s[48]++;\n      sendJSON(response, 200, beers); /* istanbul ignore next */cov_1aebqmmulz.s[49]++;\n      return;\n    } else {/* istanbul ignore next */cov_1aebqmmulz.b[7][1]++;cov_1aebqmmulz.s[50]++;\n      sendStatus(response, 400, 'beer not found'); /* istanbul ignore next */cov_1aebqmmulz.s[51]++;\n      return;\n    }\n  } else {/* istanbul ignore next */cov_1aebqmmulz.b[6][1]++;cov_1aebqmmulz.s[52]++;\n    sendJSON(response, 200, beers); /* istanbul ignore next */cov_1aebqmmulz.s[53]++;\n    return;\n  }\n}","timestamp":"2017-12-08T00:18:13.810Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T00:18:13.810Z"}
[{"id":"47c24a70-dbad-11e7-8112-71e468597590","timestamp":"2017-12-08T00:18:13.783Z","brewery":"Rainier Beer","beerName":"Rainier","beerType":"lager"},{"id":"47c46d50-dbad-11e7-8112-71e468597590","timestamp":"2017-12-08T00:18:13.797Z","brewery":"Lagunitas","beerName":"daytime ale","beerType":"session ale"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:18:13.813Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T00:18:13.813Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[5]++;cov_1aebqmmulz.s[43]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_1aebqmmulz.b[6][0]++;\n    let filterBeerById = /* istanbul ignore next */(cov_1aebqmmulz.s[44]++, beers.filter(beer => {/* istanbul ignore next */cov_1aebqmmulz.f[6]++;cov_1aebqmmulz.s[45]++;return beer.id !== request.url.query.id;})); /* istanbul ignore next */cov_1aebqmmulz.s[46]++;\n    if (filterBeerById) {/* istanbul ignore next */cov_1aebqmmulz.b[7][0]++;cov_1aebqmmulz.s[47]++;\n      beers = filterBeerById; /* istanbul ignore next */cov_1aebqmmulz.s[48]++;\n      sendJSON(response, 200, beers); /* istanbul ignore next */cov_1aebqmmulz.s[49]++;\n      return;\n    } else {/* istanbul ignore next */cov_1aebqmmulz.b[7][1]++;cov_1aebqmmulz.s[50]++;\n      sendStatus(response, 400, 'beer not found'); /* istanbul ignore next */cov_1aebqmmulz.s[51]++;\n      return;\n    }\n  } else {/* istanbul ignore next */cov_1aebqmmulz.b[6][1]++;cov_1aebqmmulz.s[52]++;\n    sendJSON(response, 200, beers); /* istanbul ignore next */cov_1aebqmmulz.s[53]++;\n    return;\n  }\n}","timestamp":"2017-12-08T00:18:13.813Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T00:18:13.813Z"}
[{"id":"47c24a70-dbad-11e7-8112-71e468597590","timestamp":"2017-12-08T00:18:13.783Z","brewery":"Rainier Beer","beerName":"Rainier","beerType":"lager"},{"id":"47c46d50-dbad-11e7-8112-71e468597590","timestamp":"2017-12-08T00:18:13.797Z","brewery":"Lagunitas","beerName":"daytime ale","beerType":"session ale"}]
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-08T00:18:45.536Z"}
{"level":"info","message":"/api/beers","timestamp":"2017-12-08T00:18:45.537Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[2]++;cov_1aebqmmulz.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_1aebqmmulz.b[0][0]++;cov_1aebqmmulz.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_1aebqmmulz.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[0][1]++;}cov_1aebqmmulz.s[19]++;\n  if (!request.body.brewery) {/* istanbul ignore next */cov_1aebqmmulz.b[1][0]++;cov_1aebqmmulz.s[20]++;\n    sendStatus(response, 400, 'brewery not found'); /* istanbul ignore next */cov_1aebqmmulz.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[1][1]++;}cov_1aebqmmulz.s[22]++;\n  if (!request.body.beerName) {/* istanbul ignore next */cov_1aebqmmulz.b[2][0]++;cov_1aebqmmulz.s[23]++;\n    sendStatus(response, 400, 'beer name not found'); /* istanbul ignore next */cov_1aebqmmulz.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[2][1]++;}cov_1aebqmmulz.s[25]++;\n  if (!request.body.beerType) {/* istanbul ignore next */cov_1aebqmmulz.b[3][0]++;cov_1aebqmmulz.s[26]++;\n    sendStatus(response, 400, 'beer type not found'); /* istanbul ignore next */cov_1aebqmmulz.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[3][1]++;}\n  let beer = /* istanbul ignore next */(cov_1aebqmmulz.s[28]++, new Beer(request.body.brewery, request.body.beerName, request.body.beerType)); /* istanbul ignore next */cov_1aebqmmulz.s[29]++;\n  beers.push(beer); /* istanbul ignore next */cov_1aebqmmulz.s[30]++;\n  sendJSON(response, 200, beer);\n}","timestamp":"2017-12-08T00:18:45.537Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-08T00:18:45.537Z"}
{"level":"info","message":"/api/beers","timestamp":"2017-12-08T00:18:45.537Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[3]++;cov_1aebqmmulz.s[32]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_1aebqmmulz.b[4][0]++;\n    let findBeerById = /* istanbul ignore next */(cov_1aebqmmulz.s[33]++, beers.find(beer => {/* istanbul ignore next */cov_1aebqmmulz.f[4]++;cov_1aebqmmulz.s[34]++;return beer.id === request.url.query.id;})); /* istanbul ignore next */cov_1aebqmmulz.s[35]++;\n    if (findBeerById) {/* istanbul ignore next */cov_1aebqmmulz.b[5][0]++;cov_1aebqmmulz.s[36]++;\n      sendJSON(response, 200, findBeerById); /* istanbul ignore next */cov_1aebqmmulz.s[37]++;\n      return;\n    } else {/* istanbul ignore next */cov_1aebqmmulz.b[5][1]++;cov_1aebqmmulz.s[38]++;\n      sendStatus(response, 400, 'beer not found'); /* istanbul ignore next */cov_1aebqmmulz.s[39]++;\n      return;\n    }\n  } else {/* istanbul ignore next */cov_1aebqmmulz.b[4][1]++;cov_1aebqmmulz.s[40]++;\n    sendJSON(response, 200, beers); /* istanbul ignore next */cov_1aebqmmulz.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-08T00:18:45.537Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-08T00:18:45.537Z"}
{"level":"info","message":"/api/beers","timestamp":"2017-12-08T00:18:45.537Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[5]++;cov_1aebqmmulz.s[43]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_1aebqmmulz.b[6][0]++;\n    let filterBeerById = /* istanbul ignore next */(cov_1aebqmmulz.s[44]++, beers.filter(beer => {/* istanbul ignore next */cov_1aebqmmulz.f[6]++;cov_1aebqmmulz.s[45]++;return beer.id !== request.url.query.id;})); /* istanbul ignore next */cov_1aebqmmulz.s[46]++;\n    if (filterBeerById) {/* istanbul ignore next */cov_1aebqmmulz.b[7][0]++;cov_1aebqmmulz.s[47]++;\n      beers = filterBeerById; /* istanbul ignore next */cov_1aebqmmulz.s[48]++;\n      sendJSON(response, 200, beers); /* istanbul ignore next */cov_1aebqmmulz.s[49]++;\n      return;\n    } else {/* istanbul ignore next */cov_1aebqmmulz.b[7][1]++;cov_1aebqmmulz.s[50]++;\n      sendStatus(response, 400, 'beer not found'); /* istanbul ignore next */cov_1aebqmmulz.s[51]++;\n      return;\n    }\n  } else {/* istanbul ignore next */cov_1aebqmmulz.b[6][1]++;cov_1aebqmmulz.s[52]++;\n    sendJSON(response, 200, beers); /* istanbul ignore next */cov_1aebqmmulz.s[53]++;\n    return;\n  }\n}","timestamp":"2017-12-08T00:18:45.537Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2017-12-08T00:18:45.599Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:18:45.615Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T00:18:45.616Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[2]++;cov_1aebqmmulz.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_1aebqmmulz.b[0][0]++;cov_1aebqmmulz.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_1aebqmmulz.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[0][1]++;}cov_1aebqmmulz.s[19]++;\n  if (!request.body.brewery) {/* istanbul ignore next */cov_1aebqmmulz.b[1][0]++;cov_1aebqmmulz.s[20]++;\n    sendStatus(response, 400, 'brewery not found'); /* istanbul ignore next */cov_1aebqmmulz.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[1][1]++;}cov_1aebqmmulz.s[22]++;\n  if (!request.body.beerName) {/* istanbul ignore next */cov_1aebqmmulz.b[2][0]++;cov_1aebqmmulz.s[23]++;\n    sendStatus(response, 400, 'beer name not found'); /* istanbul ignore next */cov_1aebqmmulz.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[2][1]++;}cov_1aebqmmulz.s[25]++;\n  if (!request.body.beerType) {/* istanbul ignore next */cov_1aebqmmulz.b[3][0]++;cov_1aebqmmulz.s[26]++;\n    sendStatus(response, 400, 'beer type not found'); /* istanbul ignore next */cov_1aebqmmulz.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[3][1]++;}\n  let beer = /* istanbul ignore next */(cov_1aebqmmulz.s[28]++, new Beer(request.body.brewery, request.body.beerName, request.body.beerType)); /* istanbul ignore next */cov_1aebqmmulz.s[29]++;\n  beers.push(beer); /* istanbul ignore next */cov_1aebqmmulz.s[30]++;\n  sendJSON(response, 200, beer);\n}","timestamp":"2017-12-08T00:18:45.616Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T00:18:45.617Z"}
{"id":"5abbc610-dbad-11e7-813c-f548579f03c2","timestamp":"2017-12-08T00:18:45.617Z","brewery":"Rainier Beer","beerName":"Rainier","beerType":"lager","level":"info","message":""}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:18:45.626Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T00:18:45.627Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[3]++;cov_1aebqmmulz.s[32]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_1aebqmmulz.b[4][0]++;\n    let findBeerById = /* istanbul ignore next */(cov_1aebqmmulz.s[33]++, beers.find(beer => {/* istanbul ignore next */cov_1aebqmmulz.f[4]++;cov_1aebqmmulz.s[34]++;return beer.id === request.url.query.id;})); /* istanbul ignore next */cov_1aebqmmulz.s[35]++;\n    if (findBeerById) {/* istanbul ignore next */cov_1aebqmmulz.b[5][0]++;cov_1aebqmmulz.s[36]++;\n      sendJSON(response, 200, findBeerById); /* istanbul ignore next */cov_1aebqmmulz.s[37]++;\n      return;\n    } else {/* istanbul ignore next */cov_1aebqmmulz.b[5][1]++;cov_1aebqmmulz.s[38]++;\n      sendStatus(response, 400, 'beer not found'); /* istanbul ignore next */cov_1aebqmmulz.s[39]++;\n      return;\n    }\n  } else {/* istanbul ignore next */cov_1aebqmmulz.b[4][1]++;cov_1aebqmmulz.s[40]++;\n    sendJSON(response, 200, beers); /* istanbul ignore next */cov_1aebqmmulz.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-08T00:18:45.627Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T00:18:45.627Z"}
[{"id":"5abbc610-dbad-11e7-813c-f548579f03c2","timestamp":"2017-12-08T00:18:45.617Z","brewery":"Rainier Beer","beerName":"Rainier","beerType":"lager"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:18:45.630Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T00:18:45.630Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[2]++;cov_1aebqmmulz.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_1aebqmmulz.b[0][0]++;cov_1aebqmmulz.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_1aebqmmulz.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[0][1]++;}cov_1aebqmmulz.s[19]++;\n  if (!request.body.brewery) {/* istanbul ignore next */cov_1aebqmmulz.b[1][0]++;cov_1aebqmmulz.s[20]++;\n    sendStatus(response, 400, 'brewery not found'); /* istanbul ignore next */cov_1aebqmmulz.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[1][1]++;}cov_1aebqmmulz.s[22]++;\n  if (!request.body.beerName) {/* istanbul ignore next */cov_1aebqmmulz.b[2][0]++;cov_1aebqmmulz.s[23]++;\n    sendStatus(response, 400, 'beer name not found'); /* istanbul ignore next */cov_1aebqmmulz.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[2][1]++;}cov_1aebqmmulz.s[25]++;\n  if (!request.body.beerType) {/* istanbul ignore next */cov_1aebqmmulz.b[3][0]++;cov_1aebqmmulz.s[26]++;\n    sendStatus(response, 400, 'beer type not found'); /* istanbul ignore next */cov_1aebqmmulz.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[3][1]++;}\n  let beer = /* istanbul ignore next */(cov_1aebqmmulz.s[28]++, new Beer(request.body.brewery, request.body.beerName, request.body.beerType)); /* istanbul ignore next */cov_1aebqmmulz.s[29]++;\n  beers.push(beer); /* istanbul ignore next */cov_1aebqmmulz.s[30]++;\n  sendJSON(response, 200, beer);\n}","timestamp":"2017-12-08T00:18:45.631Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T00:18:45.631Z"}
{"id":"5abde8f0-dbad-11e7-813c-f548579f03c2","timestamp":"2017-12-08T00:18:45.631Z","brewery":"Lagunitas","beerName":"daytime ale","beerType":"session ale","level":"info","message":""}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:18:45.634Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T00:18:45.634Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[3]++;cov_1aebqmmulz.s[32]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_1aebqmmulz.b[4][0]++;\n    let findBeerById = /* istanbul ignore next */(cov_1aebqmmulz.s[33]++, beers.find(beer => {/* istanbul ignore next */cov_1aebqmmulz.f[4]++;cov_1aebqmmulz.s[34]++;return beer.id === request.url.query.id;})); /* istanbul ignore next */cov_1aebqmmulz.s[35]++;\n    if (findBeerById) {/* istanbul ignore next */cov_1aebqmmulz.b[5][0]++;cov_1aebqmmulz.s[36]++;\n      sendJSON(response, 200, findBeerById); /* istanbul ignore next */cov_1aebqmmulz.s[37]++;\n      return;\n    } else {/* istanbul ignore next */cov_1aebqmmulz.b[5][1]++;cov_1aebqmmulz.s[38]++;\n      sendStatus(response, 400, 'beer not found'); /* istanbul ignore next */cov_1aebqmmulz.s[39]++;\n      return;\n    }\n  } else {/* istanbul ignore next */cov_1aebqmmulz.b[4][1]++;cov_1aebqmmulz.s[40]++;\n    sendJSON(response, 200, beers); /* istanbul ignore next */cov_1aebqmmulz.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-08T00:18:45.634Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T00:18:45.634Z"}
{"id":"5abde8f0-dbad-11e7-813c-f548579f03c2","timestamp":"2017-12-08T00:18:45.634Z","brewery":"Lagunitas","beerName":"daytime ale","beerType":"session ale","level":"info","message":""}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:18:45.638Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T00:18:45.638Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[3]++;cov_1aebqmmulz.s[32]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_1aebqmmulz.b[4][0]++;\n    let findBeerById = /* istanbul ignore next */(cov_1aebqmmulz.s[33]++, beers.find(beer => {/* istanbul ignore next */cov_1aebqmmulz.f[4]++;cov_1aebqmmulz.s[34]++;return beer.id === request.url.query.id;})); /* istanbul ignore next */cov_1aebqmmulz.s[35]++;\n    if (findBeerById) {/* istanbul ignore next */cov_1aebqmmulz.b[5][0]++;cov_1aebqmmulz.s[36]++;\n      sendJSON(response, 200, findBeerById); /* istanbul ignore next */cov_1aebqmmulz.s[37]++;\n      return;\n    } else {/* istanbul ignore next */cov_1aebqmmulz.b[5][1]++;cov_1aebqmmulz.s[38]++;\n      sendStatus(response, 400, 'beer not found'); /* istanbul ignore next */cov_1aebqmmulz.s[39]++;\n      return;\n    }\n  } else {/* istanbul ignore next */cov_1aebqmmulz.b[4][1]++;cov_1aebqmmulz.s[40]++;\n    sendJSON(response, 200, beers); /* istanbul ignore next */cov_1aebqmmulz.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-08T00:18:45.638Z"}
{"level":"info","message":"Responding with a 400 code due to beer not found","timestamp":"2017-12-08T00:18:45.638Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:18:45.641Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T00:18:45.641Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[2]++;cov_1aebqmmulz.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_1aebqmmulz.b[0][0]++;cov_1aebqmmulz.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_1aebqmmulz.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[0][1]++;}cov_1aebqmmulz.s[19]++;\n  if (!request.body.brewery) {/* istanbul ignore next */cov_1aebqmmulz.b[1][0]++;cov_1aebqmmulz.s[20]++;\n    sendStatus(response, 400, 'brewery not found'); /* istanbul ignore next */cov_1aebqmmulz.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[1][1]++;}cov_1aebqmmulz.s[22]++;\n  if (!request.body.beerName) {/* istanbul ignore next */cov_1aebqmmulz.b[2][0]++;cov_1aebqmmulz.s[23]++;\n    sendStatus(response, 400, 'beer name not found'); /* istanbul ignore next */cov_1aebqmmulz.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[2][1]++;}cov_1aebqmmulz.s[25]++;\n  if (!request.body.beerType) {/* istanbul ignore next */cov_1aebqmmulz.b[3][0]++;cov_1aebqmmulz.s[26]++;\n    sendStatus(response, 400, 'beer type not found'); /* istanbul ignore next */cov_1aebqmmulz.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[3][1]++;}\n  let beer = /* istanbul ignore next */(cov_1aebqmmulz.s[28]++, new Beer(request.body.brewery, request.body.beerName, request.body.beerType)); /* istanbul ignore next */cov_1aebqmmulz.s[29]++;\n  beers.push(beer); /* istanbul ignore next */cov_1aebqmmulz.s[30]++;\n  sendJSON(response, 200, beer);\n}","timestamp":"2017-12-08T00:18:45.641Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T00:18:45.641Z"}
{"id":"5abf6f90-dbad-11e7-813c-f548579f03c2","timestamp":"2017-12-08T00:18:45.641Z","brewery":"Lagunitas","beerName":"daytime ale","beerType":"session ale","level":"info","message":""}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:18:45.643Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T00:18:45.643Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[5]++;cov_1aebqmmulz.s[43]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_1aebqmmulz.b[6][0]++;\n    let filterBeerById = /* istanbul ignore next */(cov_1aebqmmulz.s[44]++, beers.filter(beer => {/* istanbul ignore next */cov_1aebqmmulz.f[6]++;cov_1aebqmmulz.s[45]++;return beer.id !== request.url.query.id;})); /* istanbul ignore next */cov_1aebqmmulz.s[46]++;\n    if (filterBeerById) {/* istanbul ignore next */cov_1aebqmmulz.b[7][0]++;cov_1aebqmmulz.s[47]++;\n      beers = filterBeerById; /* istanbul ignore next */cov_1aebqmmulz.s[48]++;\n      sendJSON(response, 200, beers); /* istanbul ignore next */cov_1aebqmmulz.s[49]++;\n      return;\n    } else {/* istanbul ignore next */cov_1aebqmmulz.b[7][1]++;cov_1aebqmmulz.s[50]++;\n      sendStatus(response, 400, 'beer not found'); /* istanbul ignore next */cov_1aebqmmulz.s[51]++;\n      return;\n    }\n  } else {/* istanbul ignore next */cov_1aebqmmulz.b[6][1]++;cov_1aebqmmulz.s[52]++;\n    sendJSON(response, 200, beers); /* istanbul ignore next */cov_1aebqmmulz.s[53]++;\n    return;\n  }\n}","timestamp":"2017-12-08T00:18:45.643Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T00:18:45.643Z"}
[{"id":"5abbc610-dbad-11e7-813c-f548579f03c2","timestamp":"2017-12-08T00:18:45.617Z","brewery":"Rainier Beer","beerName":"Rainier","beerType":"lager"},{"id":"5abde8f0-dbad-11e7-813c-f548579f03c2","timestamp":"2017-12-08T00:18:45.631Z","brewery":"Lagunitas","beerName":"daytime ale","beerType":"session ale"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:18:45.646Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T00:18:45.646Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[5]++;cov_1aebqmmulz.s[43]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_1aebqmmulz.b[6][0]++;\n    let filterBeerById = /* istanbul ignore next */(cov_1aebqmmulz.s[44]++, beers.filter(beer => {/* istanbul ignore next */cov_1aebqmmulz.f[6]++;cov_1aebqmmulz.s[45]++;return beer.id !== request.url.query.id;})); /* istanbul ignore next */cov_1aebqmmulz.s[46]++;\n    if (filterBeerById) {/* istanbul ignore next */cov_1aebqmmulz.b[7][0]++;cov_1aebqmmulz.s[47]++;\n      beers = filterBeerById; /* istanbul ignore next */cov_1aebqmmulz.s[48]++;\n      sendJSON(response, 200, beers); /* istanbul ignore next */cov_1aebqmmulz.s[49]++;\n      return;\n    } else {/* istanbul ignore next */cov_1aebqmmulz.b[7][1]++;cov_1aebqmmulz.s[50]++;\n      sendStatus(response, 400, 'beer not found'); /* istanbul ignore next */cov_1aebqmmulz.s[51]++;\n      return;\n    }\n  } else {/* istanbul ignore next */cov_1aebqmmulz.b[6][1]++;cov_1aebqmmulz.s[52]++;\n    sendJSON(response, 200, beers); /* istanbul ignore next */cov_1aebqmmulz.s[53]++;\n    return;\n  }\n}","timestamp":"2017-12-08T00:18:45.646Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T00:18:45.646Z"}
[{"id":"5abbc610-dbad-11e7-813c-f548579f03c2","timestamp":"2017-12-08T00:18:45.617Z","brewery":"Rainier Beer","beerName":"Rainier","beerType":"lager"},{"id":"5abde8f0-dbad-11e7-813c-f548579f03c2","timestamp":"2017-12-08T00:18:45.631Z","brewery":"Lagunitas","beerName":"daytime ale","beerType":"session ale"}]
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-08T00:22:53.322Z"}
{"level":"info","message":"/api/beers","timestamp":"2017-12-08T00:22:53.322Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[2]++;cov_1aebqmmulz.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_1aebqmmulz.b[0][0]++;cov_1aebqmmulz.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_1aebqmmulz.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[0][1]++;}cov_1aebqmmulz.s[19]++;\n  if (!request.body.brewery) {/* istanbul ignore next */cov_1aebqmmulz.b[1][0]++;cov_1aebqmmulz.s[20]++;\n    sendStatus(response, 400, 'brewery not found'); /* istanbul ignore next */cov_1aebqmmulz.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[1][1]++;}cov_1aebqmmulz.s[22]++;\n  if (!request.body.beerName) {/* istanbul ignore next */cov_1aebqmmulz.b[2][0]++;cov_1aebqmmulz.s[23]++;\n    sendStatus(response, 400, 'beer name not found'); /* istanbul ignore next */cov_1aebqmmulz.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[2][1]++;}cov_1aebqmmulz.s[25]++;\n  if (!request.body.beerType) {/* istanbul ignore next */cov_1aebqmmulz.b[3][0]++;cov_1aebqmmulz.s[26]++;\n    sendStatus(response, 400, 'beer type not found'); /* istanbul ignore next */cov_1aebqmmulz.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[3][1]++;}\n  let beer = /* istanbul ignore next */(cov_1aebqmmulz.s[28]++, new Beer(request.body.brewery, request.body.beerName, request.body.beerType)); /* istanbul ignore next */cov_1aebqmmulz.s[29]++;\n  beers.push(beer); /* istanbul ignore next */cov_1aebqmmulz.s[30]++;\n  sendJSON(response, 200, beer);\n}","timestamp":"2017-12-08T00:22:53.323Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-08T00:22:53.323Z"}
{"level":"info","message":"/api/beers","timestamp":"2017-12-08T00:22:53.323Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[3]++;cov_1aebqmmulz.s[32]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_1aebqmmulz.b[4][0]++;\n    let findBeerById = /* istanbul ignore next */(cov_1aebqmmulz.s[33]++, beers.find(beer => {/* istanbul ignore next */cov_1aebqmmulz.f[4]++;cov_1aebqmmulz.s[34]++;return beer.id === request.url.query.id;})); /* istanbul ignore next */cov_1aebqmmulz.s[35]++;\n    if (findBeerById) {/* istanbul ignore next */cov_1aebqmmulz.b[5][0]++;cov_1aebqmmulz.s[36]++;\n      sendJSON(response, 200, findBeerById); /* istanbul ignore next */cov_1aebqmmulz.s[37]++;\n      return;\n    } else {/* istanbul ignore next */cov_1aebqmmulz.b[5][1]++;cov_1aebqmmulz.s[38]++;\n      sendStatus(response, 404, 'beer not found'); /* istanbul ignore next */cov_1aebqmmulz.s[39]++;\n      return;\n    }\n  } else {/* istanbul ignore next */cov_1aebqmmulz.b[4][1]++;cov_1aebqmmulz.s[40]++;\n    sendJSON(response, 200, beers); /* istanbul ignore next */cov_1aebqmmulz.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-08T00:22:53.323Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-08T00:22:53.323Z"}
{"level":"info","message":"/api/beers","timestamp":"2017-12-08T00:22:53.323Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[5]++;cov_1aebqmmulz.s[43]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_1aebqmmulz.b[6][0]++;\n    let filterBeerById = /* istanbul ignore next */(cov_1aebqmmulz.s[44]++, beers.filter(beer => {/* istanbul ignore next */cov_1aebqmmulz.f[6]++;cov_1aebqmmulz.s[45]++;return beer.id !== request.url.query.id;})); /* istanbul ignore next */cov_1aebqmmulz.s[46]++;\n    if (filterBeerById) {/* istanbul ignore next */cov_1aebqmmulz.b[7][0]++;cov_1aebqmmulz.s[47]++;\n      beers = filterBeerById; /* istanbul ignore next */cov_1aebqmmulz.s[48]++;\n      sendJSON(response, 200, beers); /* istanbul ignore next */cov_1aebqmmulz.s[49]++;\n      return;\n    } else {/* istanbul ignore next */cov_1aebqmmulz.b[7][1]++;cov_1aebqmmulz.s[50]++;\n      sendStatus(response, 400, 'beer not found'); /* istanbul ignore next */cov_1aebqmmulz.s[51]++;\n      return;\n    }\n  } else {/* istanbul ignore next */cov_1aebqmmulz.b[6][1]++;cov_1aebqmmulz.s[52]++;\n    sendJSON(response, 200, beers); /* istanbul ignore next */cov_1aebqmmulz.s[53]++;\n    return;\n  }\n}","timestamp":"2017-12-08T00:22:53.323Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2017-12-08T00:22:53.374Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:22:53.389Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T00:22:53.390Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[2]++;cov_1aebqmmulz.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_1aebqmmulz.b[0][0]++;cov_1aebqmmulz.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_1aebqmmulz.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[0][1]++;}cov_1aebqmmulz.s[19]++;\n  if (!request.body.brewery) {/* istanbul ignore next */cov_1aebqmmulz.b[1][0]++;cov_1aebqmmulz.s[20]++;\n    sendStatus(response, 400, 'brewery not found'); /* istanbul ignore next */cov_1aebqmmulz.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[1][1]++;}cov_1aebqmmulz.s[22]++;\n  if (!request.body.beerName) {/* istanbul ignore next */cov_1aebqmmulz.b[2][0]++;cov_1aebqmmulz.s[23]++;\n    sendStatus(response, 400, 'beer name not found'); /* istanbul ignore next */cov_1aebqmmulz.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[2][1]++;}cov_1aebqmmulz.s[25]++;\n  if (!request.body.beerType) {/* istanbul ignore next */cov_1aebqmmulz.b[3][0]++;cov_1aebqmmulz.s[26]++;\n    sendStatus(response, 400, 'beer type not found'); /* istanbul ignore next */cov_1aebqmmulz.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[3][1]++;}\n  let beer = /* istanbul ignore next */(cov_1aebqmmulz.s[28]++, new Beer(request.body.brewery, request.body.beerName, request.body.beerType)); /* istanbul ignore next */cov_1aebqmmulz.s[29]++;\n  beers.push(beer); /* istanbul ignore next */cov_1aebqmmulz.s[30]++;\n  sendJSON(response, 200, beer);\n}","timestamp":"2017-12-08T00:22:53.390Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T00:22:53.390Z"}
{"id":"ee6aeee0-dbad-11e7-aa23-5fc539f806d8","timestamp":"2017-12-08T00:22:53.390Z","brewery":"Rainier Beer","beerName":"Rainier","beerType":"lager","level":"info","message":""}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:22:53.400Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T00:22:53.400Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[2]++;cov_1aebqmmulz.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_1aebqmmulz.b[0][0]++;cov_1aebqmmulz.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_1aebqmmulz.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[0][1]++;}cov_1aebqmmulz.s[19]++;\n  if (!request.body.brewery) {/* istanbul ignore next */cov_1aebqmmulz.b[1][0]++;cov_1aebqmmulz.s[20]++;\n    sendStatus(response, 400, 'brewery not found'); /* istanbul ignore next */cov_1aebqmmulz.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[1][1]++;}cov_1aebqmmulz.s[22]++;\n  if (!request.body.beerName) {/* istanbul ignore next */cov_1aebqmmulz.b[2][0]++;cov_1aebqmmulz.s[23]++;\n    sendStatus(response, 400, 'beer name not found'); /* istanbul ignore next */cov_1aebqmmulz.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[2][1]++;}cov_1aebqmmulz.s[25]++;\n  if (!request.body.beerType) {/* istanbul ignore next */cov_1aebqmmulz.b[3][0]++;cov_1aebqmmulz.s[26]++;\n    sendStatus(response, 400, 'beer type not found'); /* istanbul ignore next */cov_1aebqmmulz.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[3][1]++;}\n  let beer = /* istanbul ignore next */(cov_1aebqmmulz.s[28]++, new Beer(request.body.brewery, request.body.beerName, request.body.beerType)); /* istanbul ignore next */cov_1aebqmmulz.s[29]++;\n  beers.push(beer); /* istanbul ignore next */cov_1aebqmmulz.s[30]++;\n  sendJSON(response, 200, beer);\n}","timestamp":"2017-12-08T00:22:53.400Z"}
{"level":"info","message":"Responding with a 400 code due to brewery not found","timestamp":"2017-12-08T00:22:53.401Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:22:53.404Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T00:22:53.404Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[3]++;cov_1aebqmmulz.s[32]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_1aebqmmulz.b[4][0]++;\n    let findBeerById = /* istanbul ignore next */(cov_1aebqmmulz.s[33]++, beers.find(beer => {/* istanbul ignore next */cov_1aebqmmulz.f[4]++;cov_1aebqmmulz.s[34]++;return beer.id === request.url.query.id;})); /* istanbul ignore next */cov_1aebqmmulz.s[35]++;\n    if (findBeerById) {/* istanbul ignore next */cov_1aebqmmulz.b[5][0]++;cov_1aebqmmulz.s[36]++;\n      sendJSON(response, 200, findBeerById); /* istanbul ignore next */cov_1aebqmmulz.s[37]++;\n      return;\n    } else {/* istanbul ignore next */cov_1aebqmmulz.b[5][1]++;cov_1aebqmmulz.s[38]++;\n      sendStatus(response, 404, 'beer not found'); /* istanbul ignore next */cov_1aebqmmulz.s[39]++;\n      return;\n    }\n  } else {/* istanbul ignore next */cov_1aebqmmulz.b[4][1]++;cov_1aebqmmulz.s[40]++;\n    sendJSON(response, 200, beers); /* istanbul ignore next */cov_1aebqmmulz.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-08T00:22:53.404Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T00:22:53.404Z"}
[{"id":"ee6aeee0-dbad-11e7-aa23-5fc539f806d8","timestamp":"2017-12-08T00:22:53.390Z","brewery":"Rainier Beer","beerName":"Rainier","beerType":"lager"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:22:53.408Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T00:22:53.408Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[2]++;cov_1aebqmmulz.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_1aebqmmulz.b[0][0]++;cov_1aebqmmulz.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_1aebqmmulz.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[0][1]++;}cov_1aebqmmulz.s[19]++;\n  if (!request.body.brewery) {/* istanbul ignore next */cov_1aebqmmulz.b[1][0]++;cov_1aebqmmulz.s[20]++;\n    sendStatus(response, 400, 'brewery not found'); /* istanbul ignore next */cov_1aebqmmulz.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[1][1]++;}cov_1aebqmmulz.s[22]++;\n  if (!request.body.beerName) {/* istanbul ignore next */cov_1aebqmmulz.b[2][0]++;cov_1aebqmmulz.s[23]++;\n    sendStatus(response, 400, 'beer name not found'); /* istanbul ignore next */cov_1aebqmmulz.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[2][1]++;}cov_1aebqmmulz.s[25]++;\n  if (!request.body.beerType) {/* istanbul ignore next */cov_1aebqmmulz.b[3][0]++;cov_1aebqmmulz.s[26]++;\n    sendStatus(response, 400, 'beer type not found'); /* istanbul ignore next */cov_1aebqmmulz.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[3][1]++;}\n  let beer = /* istanbul ignore next */(cov_1aebqmmulz.s[28]++, new Beer(request.body.brewery, request.body.beerName, request.body.beerType)); /* istanbul ignore next */cov_1aebqmmulz.s[29]++;\n  beers.push(beer); /* istanbul ignore next */cov_1aebqmmulz.s[30]++;\n  sendJSON(response, 200, beer);\n}","timestamp":"2017-12-08T00:22:53.408Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T00:22:53.408Z"}
{"id":"ee6dae00-dbad-11e7-aa23-5fc539f806d8","timestamp":"2017-12-08T00:22:53.408Z","brewery":"Lagunitas","beerName":"daytime ale","beerType":"session ale","level":"info","message":""}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:22:53.411Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T00:22:53.411Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[3]++;cov_1aebqmmulz.s[32]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_1aebqmmulz.b[4][0]++;\n    let findBeerById = /* istanbul ignore next */(cov_1aebqmmulz.s[33]++, beers.find(beer => {/* istanbul ignore next */cov_1aebqmmulz.f[4]++;cov_1aebqmmulz.s[34]++;return beer.id === request.url.query.id;})); /* istanbul ignore next */cov_1aebqmmulz.s[35]++;\n    if (findBeerById) {/* istanbul ignore next */cov_1aebqmmulz.b[5][0]++;cov_1aebqmmulz.s[36]++;\n      sendJSON(response, 200, findBeerById); /* istanbul ignore next */cov_1aebqmmulz.s[37]++;\n      return;\n    } else {/* istanbul ignore next */cov_1aebqmmulz.b[5][1]++;cov_1aebqmmulz.s[38]++;\n      sendStatus(response, 404, 'beer not found'); /* istanbul ignore next */cov_1aebqmmulz.s[39]++;\n      return;\n    }\n  } else {/* istanbul ignore next */cov_1aebqmmulz.b[4][1]++;cov_1aebqmmulz.s[40]++;\n    sendJSON(response, 200, beers); /* istanbul ignore next */cov_1aebqmmulz.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-08T00:22:53.411Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T00:22:53.412Z"}
{"id":"ee6dae00-dbad-11e7-aa23-5fc539f806d8","timestamp":"2017-12-08T00:22:53.412Z","brewery":"Lagunitas","beerName":"daytime ale","beerType":"session ale","level":"info","message":""}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:22:53.414Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T00:22:53.414Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[3]++;cov_1aebqmmulz.s[32]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_1aebqmmulz.b[4][0]++;\n    let findBeerById = /* istanbul ignore next */(cov_1aebqmmulz.s[33]++, beers.find(beer => {/* istanbul ignore next */cov_1aebqmmulz.f[4]++;cov_1aebqmmulz.s[34]++;return beer.id === request.url.query.id;})); /* istanbul ignore next */cov_1aebqmmulz.s[35]++;\n    if (findBeerById) {/* istanbul ignore next */cov_1aebqmmulz.b[5][0]++;cov_1aebqmmulz.s[36]++;\n      sendJSON(response, 200, findBeerById); /* istanbul ignore next */cov_1aebqmmulz.s[37]++;\n      return;\n    } else {/* istanbul ignore next */cov_1aebqmmulz.b[5][1]++;cov_1aebqmmulz.s[38]++;\n      sendStatus(response, 404, 'beer not found'); /* istanbul ignore next */cov_1aebqmmulz.s[39]++;\n      return;\n    }\n  } else {/* istanbul ignore next */cov_1aebqmmulz.b[4][1]++;cov_1aebqmmulz.s[40]++;\n    sendJSON(response, 200, beers); /* istanbul ignore next */cov_1aebqmmulz.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-08T00:22:53.414Z"}
{"level":"info","message":"Responding with a 404 code due to beer not found","timestamp":"2017-12-08T00:22:53.415Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:22:53.417Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T00:22:53.417Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[2]++;cov_1aebqmmulz.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_1aebqmmulz.b[0][0]++;cov_1aebqmmulz.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_1aebqmmulz.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[0][1]++;}cov_1aebqmmulz.s[19]++;\n  if (!request.body.brewery) {/* istanbul ignore next */cov_1aebqmmulz.b[1][0]++;cov_1aebqmmulz.s[20]++;\n    sendStatus(response, 400, 'brewery not found'); /* istanbul ignore next */cov_1aebqmmulz.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[1][1]++;}cov_1aebqmmulz.s[22]++;\n  if (!request.body.beerName) {/* istanbul ignore next */cov_1aebqmmulz.b[2][0]++;cov_1aebqmmulz.s[23]++;\n    sendStatus(response, 400, 'beer name not found'); /* istanbul ignore next */cov_1aebqmmulz.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[2][1]++;}cov_1aebqmmulz.s[25]++;\n  if (!request.body.beerType) {/* istanbul ignore next */cov_1aebqmmulz.b[3][0]++;cov_1aebqmmulz.s[26]++;\n    sendStatus(response, 400, 'beer type not found'); /* istanbul ignore next */cov_1aebqmmulz.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[3][1]++;}\n  let beer = /* istanbul ignore next */(cov_1aebqmmulz.s[28]++, new Beer(request.body.brewery, request.body.beerName, request.body.beerType)); /* istanbul ignore next */cov_1aebqmmulz.s[29]++;\n  beers.push(beer); /* istanbul ignore next */cov_1aebqmmulz.s[30]++;\n  sendJSON(response, 200, beer);\n}","timestamp":"2017-12-08T00:22:53.417Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T00:22:53.417Z"}
{"id":"ee6f0d90-dbad-11e7-aa23-5fc539f806d8","timestamp":"2017-12-08T00:22:53.417Z","brewery":"Lagunitas","beerName":"daytime ale","beerType":"session ale","level":"info","message":""}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:22:53.419Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T00:22:53.419Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[5]++;cov_1aebqmmulz.s[43]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_1aebqmmulz.b[6][0]++;\n    let filterBeerById = /* istanbul ignore next */(cov_1aebqmmulz.s[44]++, beers.filter(beer => {/* istanbul ignore next */cov_1aebqmmulz.f[6]++;cov_1aebqmmulz.s[45]++;return beer.id !== request.url.query.id;})); /* istanbul ignore next */cov_1aebqmmulz.s[46]++;\n    if (filterBeerById) {/* istanbul ignore next */cov_1aebqmmulz.b[7][0]++;cov_1aebqmmulz.s[47]++;\n      beers = filterBeerById; /* istanbul ignore next */cov_1aebqmmulz.s[48]++;\n      sendJSON(response, 200, beers); /* istanbul ignore next */cov_1aebqmmulz.s[49]++;\n      return;\n    } else {/* istanbul ignore next */cov_1aebqmmulz.b[7][1]++;cov_1aebqmmulz.s[50]++;\n      sendStatus(response, 400, 'beer not found'); /* istanbul ignore next */cov_1aebqmmulz.s[51]++;\n      return;\n    }\n  } else {/* istanbul ignore next */cov_1aebqmmulz.b[6][1]++;cov_1aebqmmulz.s[52]++;\n    sendJSON(response, 200, beers); /* istanbul ignore next */cov_1aebqmmulz.s[53]++;\n    return;\n  }\n}","timestamp":"2017-12-08T00:22:53.419Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T00:22:53.420Z"}
[{"id":"ee6aeee0-dbad-11e7-aa23-5fc539f806d8","timestamp":"2017-12-08T00:22:53.390Z","brewery":"Rainier Beer","beerName":"Rainier","beerType":"lager"},{"id":"ee6dae00-dbad-11e7-aa23-5fc539f806d8","timestamp":"2017-12-08T00:22:53.408Z","brewery":"Lagunitas","beerName":"daytime ale","beerType":"session ale"}]
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-08T00:24:05.730Z"}
{"level":"info","message":"/api/beers","timestamp":"2017-12-08T00:24:05.730Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[2]++;cov_1aebqmmulz.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_1aebqmmulz.b[0][0]++;cov_1aebqmmulz.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_1aebqmmulz.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[0][1]++;}cov_1aebqmmulz.s[19]++;\n  if (!request.body.brewery) {/* istanbul ignore next */cov_1aebqmmulz.b[1][0]++;cov_1aebqmmulz.s[20]++;\n    sendStatus(response, 400, 'brewery not found'); /* istanbul ignore next */cov_1aebqmmulz.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[1][1]++;}cov_1aebqmmulz.s[22]++;\n  if (!request.body.beerName) {/* istanbul ignore next */cov_1aebqmmulz.b[2][0]++;cov_1aebqmmulz.s[23]++;\n    sendStatus(response, 400, 'beer name not found'); /* istanbul ignore next */cov_1aebqmmulz.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[2][1]++;}cov_1aebqmmulz.s[25]++;\n  if (!request.body.beerType) {/* istanbul ignore next */cov_1aebqmmulz.b[3][0]++;cov_1aebqmmulz.s[26]++;\n    sendStatus(response, 400, 'beer type not found'); /* istanbul ignore next */cov_1aebqmmulz.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[3][1]++;}\n  let beer = /* istanbul ignore next */(cov_1aebqmmulz.s[28]++, new Beer(request.body.brewery, request.body.beerName, request.body.beerType)); /* istanbul ignore next */cov_1aebqmmulz.s[29]++;\n  beers.push(beer); /* istanbul ignore next */cov_1aebqmmulz.s[30]++;\n  sendJSON(response, 200, beer);\n}","timestamp":"2017-12-08T00:24:05.730Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-08T00:24:05.731Z"}
{"level":"info","message":"/api/beers","timestamp":"2017-12-08T00:24:05.731Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[3]++;cov_1aebqmmulz.s[32]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_1aebqmmulz.b[4][0]++;\n    let findBeerById = /* istanbul ignore next */(cov_1aebqmmulz.s[33]++, beers.find(beer => {/* istanbul ignore next */cov_1aebqmmulz.f[4]++;cov_1aebqmmulz.s[34]++;return beer.id === request.url.query.id;})); /* istanbul ignore next */cov_1aebqmmulz.s[35]++;\n    if (findBeerById) {/* istanbul ignore next */cov_1aebqmmulz.b[5][0]++;cov_1aebqmmulz.s[36]++;\n      sendJSON(response, 200, findBeerById); /* istanbul ignore next */cov_1aebqmmulz.s[37]++;\n      return;\n    } else {/* istanbul ignore next */cov_1aebqmmulz.b[5][1]++;cov_1aebqmmulz.s[38]++;\n      sendStatus(response, 404, 'beer not found'); /* istanbul ignore next */cov_1aebqmmulz.s[39]++;\n      return;\n    }\n  } else {/* istanbul ignore next */cov_1aebqmmulz.b[4][1]++;cov_1aebqmmulz.s[40]++;\n    sendJSON(response, 200, beers); /* istanbul ignore next */cov_1aebqmmulz.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-08T00:24:05.731Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-08T00:24:05.731Z"}
{"level":"info","message":"/api/beers","timestamp":"2017-12-08T00:24:05.731Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[5]++;cov_1aebqmmulz.s[43]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_1aebqmmulz.b[6][0]++;\n    let filterBeerById = /* istanbul ignore next */(cov_1aebqmmulz.s[44]++, beers.filter(beer => {/* istanbul ignore next */cov_1aebqmmulz.f[6]++;cov_1aebqmmulz.s[45]++;return beer.id !== request.url.query.id;})); /* istanbul ignore next */cov_1aebqmmulz.s[46]++;\n    if (filterBeerById) {/* istanbul ignore next */cov_1aebqmmulz.b[7][0]++;cov_1aebqmmulz.s[47]++;\n      beers = filterBeerById; /* istanbul ignore next */cov_1aebqmmulz.s[48]++;\n      sendJSON(response, 200, beers); /* istanbul ignore next */cov_1aebqmmulz.s[49]++;\n      return;\n    } else {/* istanbul ignore next */cov_1aebqmmulz.b[7][1]++;cov_1aebqmmulz.s[50]++;\n      sendStatus(response, 400, 'beer not found'); /* istanbul ignore next */cov_1aebqmmulz.s[51]++;\n      return;\n    }\n  } else {/* istanbul ignore next */cov_1aebqmmulz.b[6][1]++;cov_1aebqmmulz.s[52]++;\n    sendJSON(response, 200, beers); /* istanbul ignore next */cov_1aebqmmulz.s[53]++;\n    return;\n  }\n}","timestamp":"2017-12-08T00:24:05.731Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2017-12-08T00:24:05.781Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:24:05.796Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T00:24:05.798Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[2]++;cov_1aebqmmulz.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_1aebqmmulz.b[0][0]++;cov_1aebqmmulz.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_1aebqmmulz.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[0][1]++;}cov_1aebqmmulz.s[19]++;\n  if (!request.body.brewery) {/* istanbul ignore next */cov_1aebqmmulz.b[1][0]++;cov_1aebqmmulz.s[20]++;\n    sendStatus(response, 400, 'brewery not found'); /* istanbul ignore next */cov_1aebqmmulz.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[1][1]++;}cov_1aebqmmulz.s[22]++;\n  if (!request.body.beerName) {/* istanbul ignore next */cov_1aebqmmulz.b[2][0]++;cov_1aebqmmulz.s[23]++;\n    sendStatus(response, 400, 'beer name not found'); /* istanbul ignore next */cov_1aebqmmulz.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[2][1]++;}cov_1aebqmmulz.s[25]++;\n  if (!request.body.beerType) {/* istanbul ignore next */cov_1aebqmmulz.b[3][0]++;cov_1aebqmmulz.s[26]++;\n    sendStatus(response, 400, 'beer type not found'); /* istanbul ignore next */cov_1aebqmmulz.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[3][1]++;}\n  let beer = /* istanbul ignore next */(cov_1aebqmmulz.s[28]++, new Beer(request.body.brewery, request.body.beerName, request.body.beerType)); /* istanbul ignore next */cov_1aebqmmulz.s[29]++;\n  beers.push(beer); /* istanbul ignore next */cov_1aebqmmulz.s[30]++;\n  sendJSON(response, 200, beer);\n}","timestamp":"2017-12-08T00:24:05.798Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T00:24:05.798Z"}
{"id":"19938460-dbae-11e7-80b7-ffab429e840a","timestamp":"2017-12-08T00:24:05.798Z","brewery":"Rainier Beer","beerName":"Rainier","beerType":"lager","level":"info","message":""}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:24:05.808Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T00:24:05.808Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[2]++;cov_1aebqmmulz.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_1aebqmmulz.b[0][0]++;cov_1aebqmmulz.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_1aebqmmulz.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[0][1]++;}cov_1aebqmmulz.s[19]++;\n  if (!request.body.brewery) {/* istanbul ignore next */cov_1aebqmmulz.b[1][0]++;cov_1aebqmmulz.s[20]++;\n    sendStatus(response, 400, 'brewery not found'); /* istanbul ignore next */cov_1aebqmmulz.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[1][1]++;}cov_1aebqmmulz.s[22]++;\n  if (!request.body.beerName) {/* istanbul ignore next */cov_1aebqmmulz.b[2][0]++;cov_1aebqmmulz.s[23]++;\n    sendStatus(response, 400, 'beer name not found'); /* istanbul ignore next */cov_1aebqmmulz.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[2][1]++;}cov_1aebqmmulz.s[25]++;\n  if (!request.body.beerType) {/* istanbul ignore next */cov_1aebqmmulz.b[3][0]++;cov_1aebqmmulz.s[26]++;\n    sendStatus(response, 400, 'beer type not found'); /* istanbul ignore next */cov_1aebqmmulz.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[3][1]++;}\n  let beer = /* istanbul ignore next */(cov_1aebqmmulz.s[28]++, new Beer(request.body.brewery, request.body.beerName, request.body.beerType)); /* istanbul ignore next */cov_1aebqmmulz.s[29]++;\n  beers.push(beer); /* istanbul ignore next */cov_1aebqmmulz.s[30]++;\n  sendJSON(response, 200, beer);\n}","timestamp":"2017-12-08T00:24:05.808Z"}
{"level":"info","message":"Responding with a 400 code due to brewery not found","timestamp":"2017-12-08T00:24:05.808Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:24:05.812Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T00:24:05.813Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[3]++;cov_1aebqmmulz.s[32]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_1aebqmmulz.b[4][0]++;\n    let findBeerById = /* istanbul ignore next */(cov_1aebqmmulz.s[33]++, beers.find(beer => {/* istanbul ignore next */cov_1aebqmmulz.f[4]++;cov_1aebqmmulz.s[34]++;return beer.id === request.url.query.id;})); /* istanbul ignore next */cov_1aebqmmulz.s[35]++;\n    if (findBeerById) {/* istanbul ignore next */cov_1aebqmmulz.b[5][0]++;cov_1aebqmmulz.s[36]++;\n      sendJSON(response, 200, findBeerById); /* istanbul ignore next */cov_1aebqmmulz.s[37]++;\n      return;\n    } else {/* istanbul ignore next */cov_1aebqmmulz.b[5][1]++;cov_1aebqmmulz.s[38]++;\n      sendStatus(response, 404, 'beer not found'); /* istanbul ignore next */cov_1aebqmmulz.s[39]++;\n      return;\n    }\n  } else {/* istanbul ignore next */cov_1aebqmmulz.b[4][1]++;cov_1aebqmmulz.s[40]++;\n    sendJSON(response, 200, beers); /* istanbul ignore next */cov_1aebqmmulz.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-08T00:24:05.813Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T00:24:05.813Z"}
[{"id":"19938460-dbae-11e7-80b7-ffab429e840a","timestamp":"2017-12-08T00:24:05.798Z","brewery":"Rainier Beer","beerName":"Rainier","beerType":"lager"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:24:05.816Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T00:24:05.816Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[2]++;cov_1aebqmmulz.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_1aebqmmulz.b[0][0]++;cov_1aebqmmulz.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_1aebqmmulz.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[0][1]++;}cov_1aebqmmulz.s[19]++;\n  if (!request.body.brewery) {/* istanbul ignore next */cov_1aebqmmulz.b[1][0]++;cov_1aebqmmulz.s[20]++;\n    sendStatus(response, 400, 'brewery not found'); /* istanbul ignore next */cov_1aebqmmulz.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[1][1]++;}cov_1aebqmmulz.s[22]++;\n  if (!request.body.beerName) {/* istanbul ignore next */cov_1aebqmmulz.b[2][0]++;cov_1aebqmmulz.s[23]++;\n    sendStatus(response, 400, 'beer name not found'); /* istanbul ignore next */cov_1aebqmmulz.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[2][1]++;}cov_1aebqmmulz.s[25]++;\n  if (!request.body.beerType) {/* istanbul ignore next */cov_1aebqmmulz.b[3][0]++;cov_1aebqmmulz.s[26]++;\n    sendStatus(response, 400, 'beer type not found'); /* istanbul ignore next */cov_1aebqmmulz.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[3][1]++;}\n  let beer = /* istanbul ignore next */(cov_1aebqmmulz.s[28]++, new Beer(request.body.brewery, request.body.beerName, request.body.beerType)); /* istanbul ignore next */cov_1aebqmmulz.s[29]++;\n  beers.push(beer); /* istanbul ignore next */cov_1aebqmmulz.s[30]++;\n  sendJSON(response, 200, beer);\n}","timestamp":"2017-12-08T00:24:05.816Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T00:24:05.816Z"}
{"id":"19964380-dbae-11e7-80b7-ffab429e840a","timestamp":"2017-12-08T00:24:05.816Z","brewery":"Lagunitas","beerName":"daytime ale","beerType":"session ale","level":"info","message":""}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:24:05.818Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T00:24:05.819Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[3]++;cov_1aebqmmulz.s[32]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_1aebqmmulz.b[4][0]++;\n    let findBeerById = /* istanbul ignore next */(cov_1aebqmmulz.s[33]++, beers.find(beer => {/* istanbul ignore next */cov_1aebqmmulz.f[4]++;cov_1aebqmmulz.s[34]++;return beer.id === request.url.query.id;})); /* istanbul ignore next */cov_1aebqmmulz.s[35]++;\n    if (findBeerById) {/* istanbul ignore next */cov_1aebqmmulz.b[5][0]++;cov_1aebqmmulz.s[36]++;\n      sendJSON(response, 200, findBeerById); /* istanbul ignore next */cov_1aebqmmulz.s[37]++;\n      return;\n    } else {/* istanbul ignore next */cov_1aebqmmulz.b[5][1]++;cov_1aebqmmulz.s[38]++;\n      sendStatus(response, 404, 'beer not found'); /* istanbul ignore next */cov_1aebqmmulz.s[39]++;\n      return;\n    }\n  } else {/* istanbul ignore next */cov_1aebqmmulz.b[4][1]++;cov_1aebqmmulz.s[40]++;\n    sendJSON(response, 200, beers); /* istanbul ignore next */cov_1aebqmmulz.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-08T00:24:05.819Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T00:24:05.819Z"}
{"id":"19964380-dbae-11e7-80b7-ffab429e840a","timestamp":"2017-12-08T00:24:05.819Z","brewery":"Lagunitas","beerName":"daytime ale","beerType":"session ale","level":"info","message":""}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:24:05.821Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T00:24:05.822Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[3]++;cov_1aebqmmulz.s[32]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_1aebqmmulz.b[4][0]++;\n    let findBeerById = /* istanbul ignore next */(cov_1aebqmmulz.s[33]++, beers.find(beer => {/* istanbul ignore next */cov_1aebqmmulz.f[4]++;cov_1aebqmmulz.s[34]++;return beer.id === request.url.query.id;})); /* istanbul ignore next */cov_1aebqmmulz.s[35]++;\n    if (findBeerById) {/* istanbul ignore next */cov_1aebqmmulz.b[5][0]++;cov_1aebqmmulz.s[36]++;\n      sendJSON(response, 200, findBeerById); /* istanbul ignore next */cov_1aebqmmulz.s[37]++;\n      return;\n    } else {/* istanbul ignore next */cov_1aebqmmulz.b[5][1]++;cov_1aebqmmulz.s[38]++;\n      sendStatus(response, 404, 'beer not found'); /* istanbul ignore next */cov_1aebqmmulz.s[39]++;\n      return;\n    }\n  } else {/* istanbul ignore next */cov_1aebqmmulz.b[4][1]++;cov_1aebqmmulz.s[40]++;\n    sendJSON(response, 200, beers); /* istanbul ignore next */cov_1aebqmmulz.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-08T00:24:05.822Z"}
{"level":"info","message":"Responding with a 404 code due to beer not found","timestamp":"2017-12-08T00:24:05.822Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:24:05.824Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T00:24:05.824Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[2]++;cov_1aebqmmulz.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_1aebqmmulz.b[0][0]++;cov_1aebqmmulz.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_1aebqmmulz.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[0][1]++;}cov_1aebqmmulz.s[19]++;\n  if (!request.body.brewery) {/* istanbul ignore next */cov_1aebqmmulz.b[1][0]++;cov_1aebqmmulz.s[20]++;\n    sendStatus(response, 400, 'brewery not found'); /* istanbul ignore next */cov_1aebqmmulz.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[1][1]++;}cov_1aebqmmulz.s[22]++;\n  if (!request.body.beerName) {/* istanbul ignore next */cov_1aebqmmulz.b[2][0]++;cov_1aebqmmulz.s[23]++;\n    sendStatus(response, 400, 'beer name not found'); /* istanbul ignore next */cov_1aebqmmulz.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[2][1]++;}cov_1aebqmmulz.s[25]++;\n  if (!request.body.beerType) {/* istanbul ignore next */cov_1aebqmmulz.b[3][0]++;cov_1aebqmmulz.s[26]++;\n    sendStatus(response, 400, 'beer type not found'); /* istanbul ignore next */cov_1aebqmmulz.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[3][1]++;}\n  let beer = /* istanbul ignore next */(cov_1aebqmmulz.s[28]++, new Beer(request.body.brewery, request.body.beerName, request.body.beerType)); /* istanbul ignore next */cov_1aebqmmulz.s[29]++;\n  beers.push(beer); /* istanbul ignore next */cov_1aebqmmulz.s[30]++;\n  sendJSON(response, 200, beer);\n}","timestamp":"2017-12-08T00:24:05.824Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T00:24:05.824Z"}
{"id":"19977c00-dbae-11e7-80b7-ffab429e840a","timestamp":"2017-12-08T00:24:05.824Z","brewery":"Lagunitas","beerName":"daytime ale","beerType":"session ale","level":"info","message":""}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:24:05.827Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T00:24:05.827Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[5]++;cov_1aebqmmulz.s[43]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_1aebqmmulz.b[6][0]++;\n    let filterBeerById = /* istanbul ignore next */(cov_1aebqmmulz.s[44]++, beers.filter(beer => {/* istanbul ignore next */cov_1aebqmmulz.f[6]++;cov_1aebqmmulz.s[45]++;return beer.id !== request.url.query.id;})); /* istanbul ignore next */cov_1aebqmmulz.s[46]++;\n    if (filterBeerById) {/* istanbul ignore next */cov_1aebqmmulz.b[7][0]++;cov_1aebqmmulz.s[47]++;\n      beers = filterBeerById; /* istanbul ignore next */cov_1aebqmmulz.s[48]++;\n      sendJSON(response, 200, beers); /* istanbul ignore next */cov_1aebqmmulz.s[49]++;\n      return;\n    } else {/* istanbul ignore next */cov_1aebqmmulz.b[7][1]++;cov_1aebqmmulz.s[50]++;\n      sendStatus(response, 400, 'beer not found'); /* istanbul ignore next */cov_1aebqmmulz.s[51]++;\n      return;\n    }\n  } else {/* istanbul ignore next */cov_1aebqmmulz.b[6][1]++;cov_1aebqmmulz.s[52]++;\n    sendJSON(response, 200, beers); /* istanbul ignore next */cov_1aebqmmulz.s[53]++;\n    return;\n  }\n}","timestamp":"2017-12-08T00:24:05.827Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T00:24:05.828Z"}
[{"id":"19938460-dbae-11e7-80b7-ffab429e840a","timestamp":"2017-12-08T00:24:05.798Z","brewery":"Rainier Beer","beerName":"Rainier","beerType":"lager"},{"id":"19964380-dbae-11e7-80b7-ffab429e840a","timestamp":"2017-12-08T00:24:05.816Z","brewery":"Lagunitas","beerName":"daytime ale","beerType":"session ale"}]
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-08T00:24:32.064Z"}
{"level":"info","message":"/api/beers","timestamp":"2017-12-08T00:24:32.065Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[2]++;cov_1aebqmmulz.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_1aebqmmulz.b[0][0]++;cov_1aebqmmulz.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_1aebqmmulz.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[0][1]++;}cov_1aebqmmulz.s[19]++;\n  if (!request.body.brewery) {/* istanbul ignore next */cov_1aebqmmulz.b[1][0]++;cov_1aebqmmulz.s[20]++;\n    sendStatus(response, 400, 'brewery not found'); /* istanbul ignore next */cov_1aebqmmulz.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[1][1]++;}cov_1aebqmmulz.s[22]++;\n  if (!request.body.beerName) {/* istanbul ignore next */cov_1aebqmmulz.b[2][0]++;cov_1aebqmmulz.s[23]++;\n    sendStatus(response, 400, 'beer name not found'); /* istanbul ignore next */cov_1aebqmmulz.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[2][1]++;}cov_1aebqmmulz.s[25]++;\n  if (!request.body.beerType) {/* istanbul ignore next */cov_1aebqmmulz.b[3][0]++;cov_1aebqmmulz.s[26]++;\n    sendStatus(response, 400, 'beer type not found'); /* istanbul ignore next */cov_1aebqmmulz.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[3][1]++;}\n  let beer = /* istanbul ignore next */(cov_1aebqmmulz.s[28]++, new Beer(request.body.brewery, request.body.beerName, request.body.beerType)); /* istanbul ignore next */cov_1aebqmmulz.s[29]++;\n  beers.push(beer); /* istanbul ignore next */cov_1aebqmmulz.s[30]++;\n  sendJSON(response, 200, beer);\n}","timestamp":"2017-12-08T00:24:32.065Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-08T00:24:32.065Z"}
{"level":"info","message":"/api/beers","timestamp":"2017-12-08T00:24:32.065Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[3]++;cov_1aebqmmulz.s[32]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_1aebqmmulz.b[4][0]++;\n    let findBeerById = /* istanbul ignore next */(cov_1aebqmmulz.s[33]++, beers.find(beer => {/* istanbul ignore next */cov_1aebqmmulz.f[4]++;cov_1aebqmmulz.s[34]++;return beer.id === request.url.query.id;})); /* istanbul ignore next */cov_1aebqmmulz.s[35]++;\n    if (findBeerById) {/* istanbul ignore next */cov_1aebqmmulz.b[5][0]++;cov_1aebqmmulz.s[36]++;\n      sendJSON(response, 200, findBeerById); /* istanbul ignore next */cov_1aebqmmulz.s[37]++;\n      return;\n    } else {/* istanbul ignore next */cov_1aebqmmulz.b[5][1]++;cov_1aebqmmulz.s[38]++;\n      sendStatus(response, 404, 'beer not found'); /* istanbul ignore next */cov_1aebqmmulz.s[39]++;\n      return;\n    }\n  } else {/* istanbul ignore next */cov_1aebqmmulz.b[4][1]++;cov_1aebqmmulz.s[40]++;\n    sendJSON(response, 200, beers); /* istanbul ignore next */cov_1aebqmmulz.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-08T00:24:32.065Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-08T00:24:32.065Z"}
{"level":"info","message":"/api/beers","timestamp":"2017-12-08T00:24:32.065Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[5]++;cov_1aebqmmulz.s[43]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_1aebqmmulz.b[6][0]++;\n    let filterBeerById = /* istanbul ignore next */(cov_1aebqmmulz.s[44]++, beers.filter(beer => {/* istanbul ignore next */cov_1aebqmmulz.f[6]++;cov_1aebqmmulz.s[45]++;return beer.id !== request.url.query.id;})); /* istanbul ignore next */cov_1aebqmmulz.s[46]++;\n    if (filterBeerById) {/* istanbul ignore next */cov_1aebqmmulz.b[7][0]++;cov_1aebqmmulz.s[47]++;\n      beers = filterBeerById; /* istanbul ignore next */cov_1aebqmmulz.s[48]++;\n      sendJSON(response, 200, beers); /* istanbul ignore next */cov_1aebqmmulz.s[49]++;\n      return;\n    } else {/* istanbul ignore next */cov_1aebqmmulz.b[7][1]++;cov_1aebqmmulz.s[50]++;\n      sendStatus(response, 400, 'beer not found'); /* istanbul ignore next */cov_1aebqmmulz.s[51]++;\n      return;\n    }\n  } else {/* istanbul ignore next */cov_1aebqmmulz.b[6][1]++;cov_1aebqmmulz.s[52]++;\n    sendJSON(response, 200, beers); /* istanbul ignore next */cov_1aebqmmulz.s[53]++;\n    return;\n  }\n}","timestamp":"2017-12-08T00:24:32.065Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2017-12-08T00:24:32.113Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:24:32.128Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T00:24:32.129Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[2]++;cov_1aebqmmulz.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_1aebqmmulz.b[0][0]++;cov_1aebqmmulz.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_1aebqmmulz.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[0][1]++;}cov_1aebqmmulz.s[19]++;\n  if (!request.body.brewery) {/* istanbul ignore next */cov_1aebqmmulz.b[1][0]++;cov_1aebqmmulz.s[20]++;\n    sendStatus(response, 400, 'brewery not found'); /* istanbul ignore next */cov_1aebqmmulz.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[1][1]++;}cov_1aebqmmulz.s[22]++;\n  if (!request.body.beerName) {/* istanbul ignore next */cov_1aebqmmulz.b[2][0]++;cov_1aebqmmulz.s[23]++;\n    sendStatus(response, 400, 'beer name not found'); /* istanbul ignore next */cov_1aebqmmulz.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[2][1]++;}cov_1aebqmmulz.s[25]++;\n  if (!request.body.beerType) {/* istanbul ignore next */cov_1aebqmmulz.b[3][0]++;cov_1aebqmmulz.s[26]++;\n    sendStatus(response, 400, 'beer type not found'); /* istanbul ignore next */cov_1aebqmmulz.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[3][1]++;}\n  let beer = /* istanbul ignore next */(cov_1aebqmmulz.s[28]++, new Beer(request.body.brewery, request.body.beerName, request.body.beerType)); /* istanbul ignore next */cov_1aebqmmulz.s[29]++;\n  beers.push(beer); /* istanbul ignore next */cov_1aebqmmulz.s[30]++;\n  sendJSON(response, 200, beer);\n}","timestamp":"2017-12-08T00:24:32.129Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T00:24:32.130Z"}
{"id":"29457620-dbae-11e7-bc6c-7d7163bf7cb6","timestamp":"2017-12-08T00:24:32.130Z","brewery":"Rainier Beer","beerName":"Rainier","beerType":"lager","level":"info","message":""}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:24:32.139Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T00:24:32.140Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[2]++;cov_1aebqmmulz.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_1aebqmmulz.b[0][0]++;cov_1aebqmmulz.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_1aebqmmulz.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[0][1]++;}cov_1aebqmmulz.s[19]++;\n  if (!request.body.brewery) {/* istanbul ignore next */cov_1aebqmmulz.b[1][0]++;cov_1aebqmmulz.s[20]++;\n    sendStatus(response, 400, 'brewery not found'); /* istanbul ignore next */cov_1aebqmmulz.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[1][1]++;}cov_1aebqmmulz.s[22]++;\n  if (!request.body.beerName) {/* istanbul ignore next */cov_1aebqmmulz.b[2][0]++;cov_1aebqmmulz.s[23]++;\n    sendStatus(response, 400, 'beer name not found'); /* istanbul ignore next */cov_1aebqmmulz.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[2][1]++;}cov_1aebqmmulz.s[25]++;\n  if (!request.body.beerType) {/* istanbul ignore next */cov_1aebqmmulz.b[3][0]++;cov_1aebqmmulz.s[26]++;\n    sendStatus(response, 400, 'beer type not found'); /* istanbul ignore next */cov_1aebqmmulz.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[3][1]++;}\n  let beer = /* istanbul ignore next */(cov_1aebqmmulz.s[28]++, new Beer(request.body.brewery, request.body.beerName, request.body.beerType)); /* istanbul ignore next */cov_1aebqmmulz.s[29]++;\n  beers.push(beer); /* istanbul ignore next */cov_1aebqmmulz.s[30]++;\n  sendJSON(response, 200, beer);\n}","timestamp":"2017-12-08T00:24:32.140Z"}
{"level":"info","message":"Responding with a 400 code due to brewery not found","timestamp":"2017-12-08T00:24:32.140Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:24:32.143Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T00:24:32.143Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[3]++;cov_1aebqmmulz.s[32]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_1aebqmmulz.b[4][0]++;\n    let findBeerById = /* istanbul ignore next */(cov_1aebqmmulz.s[33]++, beers.find(beer => {/* istanbul ignore next */cov_1aebqmmulz.f[4]++;cov_1aebqmmulz.s[34]++;return beer.id === request.url.query.id;})); /* istanbul ignore next */cov_1aebqmmulz.s[35]++;\n    if (findBeerById) {/* istanbul ignore next */cov_1aebqmmulz.b[5][0]++;cov_1aebqmmulz.s[36]++;\n      sendJSON(response, 200, findBeerById); /* istanbul ignore next */cov_1aebqmmulz.s[37]++;\n      return;\n    } else {/* istanbul ignore next */cov_1aebqmmulz.b[5][1]++;cov_1aebqmmulz.s[38]++;\n      sendStatus(response, 404, 'beer not found'); /* istanbul ignore next */cov_1aebqmmulz.s[39]++;\n      return;\n    }\n  } else {/* istanbul ignore next */cov_1aebqmmulz.b[4][1]++;cov_1aebqmmulz.s[40]++;\n    sendJSON(response, 200, beers); /* istanbul ignore next */cov_1aebqmmulz.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-08T00:24:32.143Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T00:24:32.143Z"}
[{"id":"29457620-dbae-11e7-bc6c-7d7163bf7cb6","timestamp":"2017-12-08T00:24:32.130Z","brewery":"Rainier Beer","beerName":"Rainier","beerType":"lager"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:24:32.146Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T00:24:32.146Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[2]++;cov_1aebqmmulz.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_1aebqmmulz.b[0][0]++;cov_1aebqmmulz.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_1aebqmmulz.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[0][1]++;}cov_1aebqmmulz.s[19]++;\n  if (!request.body.brewery) {/* istanbul ignore next */cov_1aebqmmulz.b[1][0]++;cov_1aebqmmulz.s[20]++;\n    sendStatus(response, 400, 'brewery not found'); /* istanbul ignore next */cov_1aebqmmulz.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[1][1]++;}cov_1aebqmmulz.s[22]++;\n  if (!request.body.beerName) {/* istanbul ignore next */cov_1aebqmmulz.b[2][0]++;cov_1aebqmmulz.s[23]++;\n    sendStatus(response, 400, 'beer name not found'); /* istanbul ignore next */cov_1aebqmmulz.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[2][1]++;}cov_1aebqmmulz.s[25]++;\n  if (!request.body.beerType) {/* istanbul ignore next */cov_1aebqmmulz.b[3][0]++;cov_1aebqmmulz.s[26]++;\n    sendStatus(response, 400, 'beer type not found'); /* istanbul ignore next */cov_1aebqmmulz.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[3][1]++;}\n  let beer = /* istanbul ignore next */(cov_1aebqmmulz.s[28]++, new Beer(request.body.brewery, request.body.beerName, request.body.beerType)); /* istanbul ignore next */cov_1aebqmmulz.s[29]++;\n  beers.push(beer); /* istanbul ignore next */cov_1aebqmmulz.s[30]++;\n  sendJSON(response, 200, beer);\n}","timestamp":"2017-12-08T00:24:32.146Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T00:24:32.146Z"}
{"id":"2947e720-dbae-11e7-bc6c-7d7163bf7cb6","timestamp":"2017-12-08T00:24:32.146Z","brewery":"Lagunitas","beerName":"daytime ale","beerType":"session ale","level":"info","message":""}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:24:32.149Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T00:24:32.149Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[3]++;cov_1aebqmmulz.s[32]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_1aebqmmulz.b[4][0]++;\n    let findBeerById = /* istanbul ignore next */(cov_1aebqmmulz.s[33]++, beers.find(beer => {/* istanbul ignore next */cov_1aebqmmulz.f[4]++;cov_1aebqmmulz.s[34]++;return beer.id === request.url.query.id;})); /* istanbul ignore next */cov_1aebqmmulz.s[35]++;\n    if (findBeerById) {/* istanbul ignore next */cov_1aebqmmulz.b[5][0]++;cov_1aebqmmulz.s[36]++;\n      sendJSON(response, 200, findBeerById); /* istanbul ignore next */cov_1aebqmmulz.s[37]++;\n      return;\n    } else {/* istanbul ignore next */cov_1aebqmmulz.b[5][1]++;cov_1aebqmmulz.s[38]++;\n      sendStatus(response, 404, 'beer not found'); /* istanbul ignore next */cov_1aebqmmulz.s[39]++;\n      return;\n    }\n  } else {/* istanbul ignore next */cov_1aebqmmulz.b[4][1]++;cov_1aebqmmulz.s[40]++;\n    sendJSON(response, 200, beers); /* istanbul ignore next */cov_1aebqmmulz.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-08T00:24:32.149Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T00:24:32.149Z"}
{"id":"2947e720-dbae-11e7-bc6c-7d7163bf7cb6","timestamp":"2017-12-08T00:24:32.149Z","brewery":"Lagunitas","beerName":"daytime ale","beerType":"session ale","level":"info","message":""}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:24:32.152Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T00:24:32.152Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[3]++;cov_1aebqmmulz.s[32]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_1aebqmmulz.b[4][0]++;\n    let findBeerById = /* istanbul ignore next */(cov_1aebqmmulz.s[33]++, beers.find(beer => {/* istanbul ignore next */cov_1aebqmmulz.f[4]++;cov_1aebqmmulz.s[34]++;return beer.id === request.url.query.id;})); /* istanbul ignore next */cov_1aebqmmulz.s[35]++;\n    if (findBeerById) {/* istanbul ignore next */cov_1aebqmmulz.b[5][0]++;cov_1aebqmmulz.s[36]++;\n      sendJSON(response, 200, findBeerById); /* istanbul ignore next */cov_1aebqmmulz.s[37]++;\n      return;\n    } else {/* istanbul ignore next */cov_1aebqmmulz.b[5][1]++;cov_1aebqmmulz.s[38]++;\n      sendStatus(response, 404, 'beer not found'); /* istanbul ignore next */cov_1aebqmmulz.s[39]++;\n      return;\n    }\n  } else {/* istanbul ignore next */cov_1aebqmmulz.b[4][1]++;cov_1aebqmmulz.s[40]++;\n    sendJSON(response, 200, beers); /* istanbul ignore next */cov_1aebqmmulz.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-08T00:24:32.152Z"}
{"level":"info","message":"Responding with a 404 code due to beer not found","timestamp":"2017-12-08T00:24:32.152Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:24:32.154Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T00:24:32.154Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[2]++;cov_1aebqmmulz.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_1aebqmmulz.b[0][0]++;cov_1aebqmmulz.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_1aebqmmulz.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[0][1]++;}cov_1aebqmmulz.s[19]++;\n  if (!request.body.brewery) {/* istanbul ignore next */cov_1aebqmmulz.b[1][0]++;cov_1aebqmmulz.s[20]++;\n    sendStatus(response, 400, 'brewery not found'); /* istanbul ignore next */cov_1aebqmmulz.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[1][1]++;}cov_1aebqmmulz.s[22]++;\n  if (!request.body.beerName) {/* istanbul ignore next */cov_1aebqmmulz.b[2][0]++;cov_1aebqmmulz.s[23]++;\n    sendStatus(response, 400, 'beer name not found'); /* istanbul ignore next */cov_1aebqmmulz.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[2][1]++;}cov_1aebqmmulz.s[25]++;\n  if (!request.body.beerType) {/* istanbul ignore next */cov_1aebqmmulz.b[3][0]++;cov_1aebqmmulz.s[26]++;\n    sendStatus(response, 400, 'beer type not found'); /* istanbul ignore next */cov_1aebqmmulz.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[3][1]++;}\n  let beer = /* istanbul ignore next */(cov_1aebqmmulz.s[28]++, new Beer(request.body.brewery, request.body.beerName, request.body.beerType)); /* istanbul ignore next */cov_1aebqmmulz.s[29]++;\n  beers.push(beer); /* istanbul ignore next */cov_1aebqmmulz.s[30]++;\n  sendJSON(response, 200, beer);\n}","timestamp":"2017-12-08T00:24:32.154Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T00:24:32.154Z"}
{"id":"29491fa0-dbae-11e7-bc6c-7d7163bf7cb6","timestamp":"2017-12-08T00:24:32.154Z","brewery":"Lagunitas","beerName":"daytime ale","beerType":"session ale","level":"info","message":""}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:24:32.156Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T00:24:32.156Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[5]++;cov_1aebqmmulz.s[43]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_1aebqmmulz.b[6][0]++;\n    let filterBeerById = /* istanbul ignore next */(cov_1aebqmmulz.s[44]++, beers.filter(beer => {/* istanbul ignore next */cov_1aebqmmulz.f[6]++;cov_1aebqmmulz.s[45]++;return beer.id !== request.url.query.id;})); /* istanbul ignore next */cov_1aebqmmulz.s[46]++;\n    if (filterBeerById) {/* istanbul ignore next */cov_1aebqmmulz.b[7][0]++;cov_1aebqmmulz.s[47]++;\n      beers = filterBeerById; /* istanbul ignore next */cov_1aebqmmulz.s[48]++;\n      sendJSON(response, 200, beers); /* istanbul ignore next */cov_1aebqmmulz.s[49]++;\n      return;\n    } else {/* istanbul ignore next */cov_1aebqmmulz.b[7][1]++;cov_1aebqmmulz.s[50]++;\n      sendStatus(response, 400, 'beer not found'); /* istanbul ignore next */cov_1aebqmmulz.s[51]++;\n      return;\n    }\n  } else {/* istanbul ignore next */cov_1aebqmmulz.b[6][1]++;cov_1aebqmmulz.s[52]++;\n    sendJSON(response, 200, beers); /* istanbul ignore next */cov_1aebqmmulz.s[53]++;\n    return;\n  }\n}","timestamp":"2017-12-08T00:24:32.157Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T00:24:32.157Z"}
[{"id":"29457620-dbae-11e7-bc6c-7d7163bf7cb6","timestamp":"2017-12-08T00:24:32.130Z","brewery":"Rainier Beer","beerName":"Rainier","beerType":"lager"},{"id":"2947e720-dbae-11e7-bc6c-7d7163bf7cb6","timestamp":"2017-12-08T00:24:32.146Z","brewery":"Lagunitas","beerName":"daytime ale","beerType":"session ale"}]
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-08T00:25:51.842Z"}
{"level":"info","message":"/api/beers","timestamp":"2017-12-08T00:25:51.842Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[2]++;cov_1aebqmmulz.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_1aebqmmulz.b[0][0]++;cov_1aebqmmulz.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_1aebqmmulz.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[0][1]++;}cov_1aebqmmulz.s[19]++;\n  if (!request.body.brewery) {/* istanbul ignore next */cov_1aebqmmulz.b[1][0]++;cov_1aebqmmulz.s[20]++;\n    sendStatus(response, 400, 'brewery not found'); /* istanbul ignore next */cov_1aebqmmulz.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[1][1]++;}cov_1aebqmmulz.s[22]++;\n  if (!request.body.beerName) {/* istanbul ignore next */cov_1aebqmmulz.b[2][0]++;cov_1aebqmmulz.s[23]++;\n    sendStatus(response, 400, 'beer name not found'); /* istanbul ignore next */cov_1aebqmmulz.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[2][1]++;}cov_1aebqmmulz.s[25]++;\n  if (!request.body.beerType) {/* istanbul ignore next */cov_1aebqmmulz.b[3][0]++;cov_1aebqmmulz.s[26]++;\n    sendStatus(response, 400, 'beer type not found'); /* istanbul ignore next */cov_1aebqmmulz.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[3][1]++;}\n  let beer = /* istanbul ignore next */(cov_1aebqmmulz.s[28]++, new Beer(request.body.brewery, request.body.beerName, request.body.beerType)); /* istanbul ignore next */cov_1aebqmmulz.s[29]++;\n  beers.push(beer); /* istanbul ignore next */cov_1aebqmmulz.s[30]++;\n  sendJSON(response, 200, beer);\n}","timestamp":"2017-12-08T00:25:51.843Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-08T00:25:51.843Z"}
{"level":"info","message":"/api/beers","timestamp":"2017-12-08T00:25:51.843Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[3]++;cov_1aebqmmulz.s[32]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_1aebqmmulz.b[4][0]++;\n    let findBeerById = /* istanbul ignore next */(cov_1aebqmmulz.s[33]++, beers.find(beer => {/* istanbul ignore next */cov_1aebqmmulz.f[4]++;cov_1aebqmmulz.s[34]++;return beer.id === request.url.query.id;})); /* istanbul ignore next */cov_1aebqmmulz.s[35]++;\n    if (findBeerById) {/* istanbul ignore next */cov_1aebqmmulz.b[5][0]++;cov_1aebqmmulz.s[36]++;\n      sendJSON(response, 200, findBeerById); /* istanbul ignore next */cov_1aebqmmulz.s[37]++;\n      return;\n    } else {/* istanbul ignore next */cov_1aebqmmulz.b[5][1]++;cov_1aebqmmulz.s[38]++;\n      sendStatus(response, 404, 'beer not found'); /* istanbul ignore next */cov_1aebqmmulz.s[39]++;\n      return;\n    }\n  } else {/* istanbul ignore next */cov_1aebqmmulz.b[4][1]++;cov_1aebqmmulz.s[40]++;\n    sendJSON(response, 200, beers); /* istanbul ignore next */cov_1aebqmmulz.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-08T00:25:51.843Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-08T00:25:51.843Z"}
{"level":"info","message":"/api/beers","timestamp":"2017-12-08T00:25:51.843Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[5]++;cov_1aebqmmulz.s[43]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_1aebqmmulz.b[6][0]++;\n    let filterBeerById = /* istanbul ignore next */(cov_1aebqmmulz.s[44]++, beers.filter(beer => {/* istanbul ignore next */cov_1aebqmmulz.f[6]++;cov_1aebqmmulz.s[45]++;return beer.id !== request.url.query.id;})); /* istanbul ignore next */cov_1aebqmmulz.s[46]++;\n    if (filterBeerById) {/* istanbul ignore next */cov_1aebqmmulz.b[7][0]++;cov_1aebqmmulz.s[47]++;\n      beers = filterBeerById; /* istanbul ignore next */cov_1aebqmmulz.s[48]++;\n      sendJSON(response, 200, beers); /* istanbul ignore next */cov_1aebqmmulz.s[49]++;\n      return;\n    } else {/* istanbul ignore next */cov_1aebqmmulz.b[7][1]++;cov_1aebqmmulz.s[50]++;\n      sendStatus(response, 400, 'beer not found'); /* istanbul ignore next */cov_1aebqmmulz.s[51]++;\n      return;\n    }\n  } else {/* istanbul ignore next */cov_1aebqmmulz.b[6][1]++;cov_1aebqmmulz.s[52]++;\n    sendJSON(response, 200, beers); /* istanbul ignore next */cov_1aebqmmulz.s[53]++;\n    return;\n  }\n}","timestamp":"2017-12-08T00:25:51.843Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2017-12-08T00:25:51.892Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:25:51.906Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T00:25:51.908Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[2]++;cov_1aebqmmulz.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_1aebqmmulz.b[0][0]++;cov_1aebqmmulz.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_1aebqmmulz.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[0][1]++;}cov_1aebqmmulz.s[19]++;\n  if (!request.body.brewery) {/* istanbul ignore next */cov_1aebqmmulz.b[1][0]++;cov_1aebqmmulz.s[20]++;\n    sendStatus(response, 400, 'brewery not found'); /* istanbul ignore next */cov_1aebqmmulz.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[1][1]++;}cov_1aebqmmulz.s[22]++;\n  if (!request.body.beerName) {/* istanbul ignore next */cov_1aebqmmulz.b[2][0]++;cov_1aebqmmulz.s[23]++;\n    sendStatus(response, 400, 'beer name not found'); /* istanbul ignore next */cov_1aebqmmulz.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[2][1]++;}cov_1aebqmmulz.s[25]++;\n  if (!request.body.beerType) {/* istanbul ignore next */cov_1aebqmmulz.b[3][0]++;cov_1aebqmmulz.s[26]++;\n    sendStatus(response, 400, 'beer type not found'); /* istanbul ignore next */cov_1aebqmmulz.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[3][1]++;}\n  let beer = /* istanbul ignore next */(cov_1aebqmmulz.s[28]++, new Beer(request.body.brewery, request.body.beerName, request.body.beerType)); /* istanbul ignore next */cov_1aebqmmulz.s[29]++;\n  beers.push(beer); /* istanbul ignore next */cov_1aebqmmulz.s[30]++;\n  sendJSON(response, 200, beer);\n}","timestamp":"2017-12-08T00:25:51.908Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T00:25:51.908Z"}
{"id":"58d29e40-dbae-11e7-9650-395e24600689","timestamp":"2017-12-08T00:25:51.908Z","brewery":"Rainier Beer","beerName":"Rainier","beerType":"lager","level":"info","message":""}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:25:51.918Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T00:25:51.919Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[2]++;cov_1aebqmmulz.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_1aebqmmulz.b[0][0]++;cov_1aebqmmulz.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_1aebqmmulz.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[0][1]++;}cov_1aebqmmulz.s[19]++;\n  if (!request.body.brewery) {/* istanbul ignore next */cov_1aebqmmulz.b[1][0]++;cov_1aebqmmulz.s[20]++;\n    sendStatus(response, 400, 'brewery not found'); /* istanbul ignore next */cov_1aebqmmulz.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[1][1]++;}cov_1aebqmmulz.s[22]++;\n  if (!request.body.beerName) {/* istanbul ignore next */cov_1aebqmmulz.b[2][0]++;cov_1aebqmmulz.s[23]++;\n    sendStatus(response, 400, 'beer name not found'); /* istanbul ignore next */cov_1aebqmmulz.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[2][1]++;}cov_1aebqmmulz.s[25]++;\n  if (!request.body.beerType) {/* istanbul ignore next */cov_1aebqmmulz.b[3][0]++;cov_1aebqmmulz.s[26]++;\n    sendStatus(response, 400, 'beer type not found'); /* istanbul ignore next */cov_1aebqmmulz.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[3][1]++;}\n  let beer = /* istanbul ignore next */(cov_1aebqmmulz.s[28]++, new Beer(request.body.brewery, request.body.beerName, request.body.beerType)); /* istanbul ignore next */cov_1aebqmmulz.s[29]++;\n  beers.push(beer); /* istanbul ignore next */cov_1aebqmmulz.s[30]++;\n  sendJSON(response, 200, beer);\n}","timestamp":"2017-12-08T00:25:51.919Z"}
{"level":"info","message":"Responding with a 400 code due to brewery not found","timestamp":"2017-12-08T00:25:51.919Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:25:51.922Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T00:25:51.922Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[3]++;cov_1aebqmmulz.s[32]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_1aebqmmulz.b[4][0]++;\n    let findBeerById = /* istanbul ignore next */(cov_1aebqmmulz.s[33]++, beers.find(beer => {/* istanbul ignore next */cov_1aebqmmulz.f[4]++;cov_1aebqmmulz.s[34]++;return beer.id === request.url.query.id;})); /* istanbul ignore next */cov_1aebqmmulz.s[35]++;\n    if (findBeerById) {/* istanbul ignore next */cov_1aebqmmulz.b[5][0]++;cov_1aebqmmulz.s[36]++;\n      sendJSON(response, 200, findBeerById); /* istanbul ignore next */cov_1aebqmmulz.s[37]++;\n      return;\n    } else {/* istanbul ignore next */cov_1aebqmmulz.b[5][1]++;cov_1aebqmmulz.s[38]++;\n      sendStatus(response, 404, 'beer not found'); /* istanbul ignore next */cov_1aebqmmulz.s[39]++;\n      return;\n    }\n  } else {/* istanbul ignore next */cov_1aebqmmulz.b[4][1]++;cov_1aebqmmulz.s[40]++;\n    sendJSON(response, 200, beers); /* istanbul ignore next */cov_1aebqmmulz.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-08T00:25:51.922Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T00:25:51.922Z"}
[{"id":"58d29e40-dbae-11e7-9650-395e24600689","timestamp":"2017-12-08T00:25:51.908Z","brewery":"Rainier Beer","beerName":"Rainier","beerType":"lager"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:25:51.925Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T00:25:51.925Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[2]++;cov_1aebqmmulz.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_1aebqmmulz.b[0][0]++;cov_1aebqmmulz.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_1aebqmmulz.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[0][1]++;}cov_1aebqmmulz.s[19]++;\n  if (!request.body.brewery) {/* istanbul ignore next */cov_1aebqmmulz.b[1][0]++;cov_1aebqmmulz.s[20]++;\n    sendStatus(response, 400, 'brewery not found'); /* istanbul ignore next */cov_1aebqmmulz.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[1][1]++;}cov_1aebqmmulz.s[22]++;\n  if (!request.body.beerName) {/* istanbul ignore next */cov_1aebqmmulz.b[2][0]++;cov_1aebqmmulz.s[23]++;\n    sendStatus(response, 400, 'beer name not found'); /* istanbul ignore next */cov_1aebqmmulz.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[2][1]++;}cov_1aebqmmulz.s[25]++;\n  if (!request.body.beerType) {/* istanbul ignore next */cov_1aebqmmulz.b[3][0]++;cov_1aebqmmulz.s[26]++;\n    sendStatus(response, 400, 'beer type not found'); /* istanbul ignore next */cov_1aebqmmulz.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[3][1]++;}\n  let beer = /* istanbul ignore next */(cov_1aebqmmulz.s[28]++, new Beer(request.body.brewery, request.body.beerName, request.body.beerType)); /* istanbul ignore next */cov_1aebqmmulz.s[29]++;\n  beers.push(beer); /* istanbul ignore next */cov_1aebqmmulz.s[30]++;\n  sendJSON(response, 200, beer);\n}","timestamp":"2017-12-08T00:25:51.925Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T00:25:51.926Z"}
{"id":"58d53650-dbae-11e7-9650-395e24600689","timestamp":"2017-12-08T00:25:51.926Z","brewery":"Lagunitas","beerName":"daytime ale","beerType":"session ale","level":"info","message":""}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:25:51.928Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T00:25:51.928Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[3]++;cov_1aebqmmulz.s[32]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_1aebqmmulz.b[4][0]++;\n    let findBeerById = /* istanbul ignore next */(cov_1aebqmmulz.s[33]++, beers.find(beer => {/* istanbul ignore next */cov_1aebqmmulz.f[4]++;cov_1aebqmmulz.s[34]++;return beer.id === request.url.query.id;})); /* istanbul ignore next */cov_1aebqmmulz.s[35]++;\n    if (findBeerById) {/* istanbul ignore next */cov_1aebqmmulz.b[5][0]++;cov_1aebqmmulz.s[36]++;\n      sendJSON(response, 200, findBeerById); /* istanbul ignore next */cov_1aebqmmulz.s[37]++;\n      return;\n    } else {/* istanbul ignore next */cov_1aebqmmulz.b[5][1]++;cov_1aebqmmulz.s[38]++;\n      sendStatus(response, 404, 'beer not found'); /* istanbul ignore next */cov_1aebqmmulz.s[39]++;\n      return;\n    }\n  } else {/* istanbul ignore next */cov_1aebqmmulz.b[4][1]++;cov_1aebqmmulz.s[40]++;\n    sendJSON(response, 200, beers); /* istanbul ignore next */cov_1aebqmmulz.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-08T00:25:51.929Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T00:25:51.929Z"}
{"id":"58d53650-dbae-11e7-9650-395e24600689","timestamp":"2017-12-08T00:25:51.929Z","brewery":"Lagunitas","beerName":"daytime ale","beerType":"session ale","level":"info","message":""}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:25:51.932Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T00:25:51.932Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[3]++;cov_1aebqmmulz.s[32]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_1aebqmmulz.b[4][0]++;\n    let findBeerById = /* istanbul ignore next */(cov_1aebqmmulz.s[33]++, beers.find(beer => {/* istanbul ignore next */cov_1aebqmmulz.f[4]++;cov_1aebqmmulz.s[34]++;return beer.id === request.url.query.id;})); /* istanbul ignore next */cov_1aebqmmulz.s[35]++;\n    if (findBeerById) {/* istanbul ignore next */cov_1aebqmmulz.b[5][0]++;cov_1aebqmmulz.s[36]++;\n      sendJSON(response, 200, findBeerById); /* istanbul ignore next */cov_1aebqmmulz.s[37]++;\n      return;\n    } else {/* istanbul ignore next */cov_1aebqmmulz.b[5][1]++;cov_1aebqmmulz.s[38]++;\n      sendStatus(response, 404, 'beer not found'); /* istanbul ignore next */cov_1aebqmmulz.s[39]++;\n      return;\n    }\n  } else {/* istanbul ignore next */cov_1aebqmmulz.b[4][1]++;cov_1aebqmmulz.s[40]++;\n    sendJSON(response, 200, beers); /* istanbul ignore next */cov_1aebqmmulz.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-08T00:25:51.932Z"}
{"level":"info","message":"Responding with a 404 code due to beer not found","timestamp":"2017-12-08T00:25:51.933Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:25:51.935Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T00:25:51.935Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[2]++;cov_1aebqmmulz.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_1aebqmmulz.b[0][0]++;cov_1aebqmmulz.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_1aebqmmulz.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[0][1]++;}cov_1aebqmmulz.s[19]++;\n  if (!request.body.brewery) {/* istanbul ignore next */cov_1aebqmmulz.b[1][0]++;cov_1aebqmmulz.s[20]++;\n    sendStatus(response, 400, 'brewery not found'); /* istanbul ignore next */cov_1aebqmmulz.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[1][1]++;}cov_1aebqmmulz.s[22]++;\n  if (!request.body.beerName) {/* istanbul ignore next */cov_1aebqmmulz.b[2][0]++;cov_1aebqmmulz.s[23]++;\n    sendStatus(response, 400, 'beer name not found'); /* istanbul ignore next */cov_1aebqmmulz.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[2][1]++;}cov_1aebqmmulz.s[25]++;\n  if (!request.body.beerType) {/* istanbul ignore next */cov_1aebqmmulz.b[3][0]++;cov_1aebqmmulz.s[26]++;\n    sendStatus(response, 400, 'beer type not found'); /* istanbul ignore next */cov_1aebqmmulz.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[3][1]++;}\n  let beer = /* istanbul ignore next */(cov_1aebqmmulz.s[28]++, new Beer(request.body.brewery, request.body.beerName, request.body.beerType)); /* istanbul ignore next */cov_1aebqmmulz.s[29]++;\n  beers.push(beer); /* istanbul ignore next */cov_1aebqmmulz.s[30]++;\n  sendJSON(response, 200, beer);\n}","timestamp":"2017-12-08T00:25:51.935Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T00:25:51.935Z"}
{"id":"58d6bcf0-dbae-11e7-9650-395e24600689","timestamp":"2017-12-08T00:25:51.935Z","brewery":"Lagunitas","beerName":"daytime ale","beerType":"session ale","level":"info","message":""}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:25:51.937Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T00:25:51.937Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[5]++;cov_1aebqmmulz.s[43]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_1aebqmmulz.b[6][0]++;\n    let filterBeerById = /* istanbul ignore next */(cov_1aebqmmulz.s[44]++, beers.filter(beer => {/* istanbul ignore next */cov_1aebqmmulz.f[6]++;cov_1aebqmmulz.s[45]++;return beer.id !== request.url.query.id;})); /* istanbul ignore next */cov_1aebqmmulz.s[46]++;\n    if (filterBeerById) {/* istanbul ignore next */cov_1aebqmmulz.b[7][0]++;cov_1aebqmmulz.s[47]++;\n      beers = filterBeerById; /* istanbul ignore next */cov_1aebqmmulz.s[48]++;\n      sendJSON(response, 200, beers); /* istanbul ignore next */cov_1aebqmmulz.s[49]++;\n      return;\n    } else {/* istanbul ignore next */cov_1aebqmmulz.b[7][1]++;cov_1aebqmmulz.s[50]++;\n      sendStatus(response, 400, 'beer not found'); /* istanbul ignore next */cov_1aebqmmulz.s[51]++;\n      return;\n    }\n  } else {/* istanbul ignore next */cov_1aebqmmulz.b[6][1]++;cov_1aebqmmulz.s[52]++;\n    sendJSON(response, 200, beers); /* istanbul ignore next */cov_1aebqmmulz.s[53]++;\n    return;\n  }\n}","timestamp":"2017-12-08T00:25:51.937Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T00:25:51.938Z"}
[{"id":"58d29e40-dbae-11e7-9650-395e24600689","timestamp":"2017-12-08T00:25:51.908Z","brewery":"Rainier Beer","beerName":"Rainier","beerType":"lager"},{"id":"58d53650-dbae-11e7-9650-395e24600689","timestamp":"2017-12-08T00:25:51.925Z","brewery":"Lagunitas","beerName":"daytime ale","beerType":"session ale"}]
