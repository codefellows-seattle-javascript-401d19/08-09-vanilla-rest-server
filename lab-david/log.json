{"level":"info","message":"adding a POST url and callback","timestamp":"2017-12-08T00:53:34.968Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T00:53:34.968Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[6]++;cov_22s6dd2wjj.s[26]++;\n  if (!request.body) {/* istanbul ignore next */cov_22s6dd2wjj.b[1][0]++;cov_22s6dd2wjj.s[27]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[1][1]++;}cov_22s6dd2wjj.s[29]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_22s6dd2wjj.b[2][0]++;cov_22s6dd2wjj.s[30]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[2][1]++;}cov_22s6dd2wjj.s[32]++;\n  if (!request.body.state) {/* istanbul ignore next */cov_22s6dd2wjj.b[3][0]++;cov_22s6dd2wjj.s[33]++;\n    sendStatus(response, 400, 'state not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[3][1]++;}cov_22s6dd2wjj.s[35]++;\n  if (!request.body.hiking) {/* istanbul ignore next */cov_22s6dd2wjj.b[4][0]++;cov_22s6dd2wjj.s[36]++;\n    sendStatus(response, 400, 'hiking info not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[4][1]++;}cov_22s6dd2wjj.s[38]++;\n  if (!request.body.range) {/* istanbul ignore next */cov_22s6dd2wjj.b[5][0]++;cov_22s6dd2wjj.s[39]++;\n    sendStatus(response, 400, 'range name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[40]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[5][1]++;}\n  let mountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[41]++, new Mountain(\n  request.body.name,\n  request.body.state,\n  request.body.hiking,\n  request.body.range)); /* istanbul ignore next */cov_22s6dd2wjj.s[42]++;\n\n\n  mountains.push(mountain); /* istanbul ignore next */cov_22s6dd2wjj.s[43]++;\n  sendJSON(response, 200, mountain);\n}","timestamp":"2017-12-08T00:53:34.968Z"}
{"level":"info","message":"adding a GET url and callback","timestamp":"2017-12-08T00:53:34.969Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T00:53:34.969Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[7]++;cov_22s6dd2wjj.s[45]++;\n  if (!request.body) {/* istanbul ignore next */cov_22s6dd2wjj.b[6][0]++;cov_22s6dd2wjj.s[46]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[47]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[6][1]++;}cov_22s6dd2wjj.s[48]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_22s6dd2wjj.b[7][0]++;cov_22s6dd2wjj.s[49]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[50]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[7][1]++;}cov_22s6dd2wjj.s[51]++;\n  if (!request.body.state) {/* istanbul ignore next */cov_22s6dd2wjj.b[8][0]++;cov_22s6dd2wjj.s[52]++;\n    sendStatus(response, 400, 'state not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[53]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[8][1]++;}cov_22s6dd2wjj.s[54]++;\n  if (!request.body.hiking) {/* istanbul ignore next */cov_22s6dd2wjj.b[9][0]++;cov_22s6dd2wjj.s[55]++;\n    sendStatus(response, 400, 'hiking info not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[56]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[9][1]++;}cov_22s6dd2wjj.s[57]++;\n  if (!request.body.range) {/* istanbul ignore next */cov_22s6dd2wjj.b[10][0]++;cov_22s6dd2wjj.s[58]++;\n    sendStatus(response, 400, 'range name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[59]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[10][1]++;}\n  let id = /* istanbul ignore next */(cov_22s6dd2wjj.s[60]++, request.url.query.id); /* istanbul ignore next */cov_22s6dd2wjj.s[61]++;\n\n  if (id) {/* istanbul ignore next */cov_22s6dd2wjj.b[11][0]++;\n    let requestMountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[62]++, getMountainById(id)); /* istanbul ignore next */cov_22s6dd2wjj.s[63]++;\n    if (requestMountain)\n      {/* istanbul ignore next */cov_22s6dd2wjj.b[12][0]++;cov_22s6dd2wjj.s[64]++;sendJSON(request, 200, requestMountain);} else\n\n      {/* istanbul ignore next */cov_22s6dd2wjj.b[12][1]++;cov_22s6dd2wjj.s[65]++;sendStatus(response, 404, `no mountain found with the id of ${id}`);}\n  } else\n    {/* istanbul ignore next */cov_22s6dd2wjj.b[11][1]++;cov_22s6dd2wjj.s[66]++;sendJSON(response, 200, mountains);}\n}","timestamp":"2017-12-08T00:53:34.969Z"}
{"level":"info","message":"adding a DELETE url and callback","timestamp":"2017-12-08T00:53:34.969Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T00:53:34.969Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[8]++;\n  let id = /* istanbul ignore next */(cov_22s6dd2wjj.s[68]++, request.url.query.id); /* istanbul ignore next */cov_22s6dd2wjj.s[69]++;\n  if (id) {/* istanbul ignore next */cov_22s6dd2wjj.b[13][0]++;\n    let deletedMountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[70]++, deleteMountainById(id)); /* istanbul ignore next */cov_22s6dd2wjj.s[71]++;\n    if (deletedMountain) {/* istanbul ignore next */cov_22s6dd2wjj.b[14][0]++;cov_22s6dd2wjj.s[72]++;\n      logger.log('info', `Mountain deleted, responding with a 200 success code`); /* istanbul ignore next */cov_22s6dd2wjj.s[73]++;\n      response.writeHead(200); /* istanbul ignore next */cov_22s6dd2wjj.s[74]++;\n      response.end();\n    } else\n      {/* istanbul ignore next */cov_22s6dd2wjj.b[14][1]++;cov_22s6dd2wjj.s[75]++;sendStatus(response, 404, `No mountain was found with an id ${id}`);}\n  } else\n    {/* istanbul ignore next */cov_22s6dd2wjj.b[13][1]++;cov_22s6dd2wjj.s[76]++;sendStatus(response, 400, `something else occurred - bad request.`);}\n}","timestamp":"2017-12-08T00:53:34.969Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T00:53:35.032Z"}
{"level":"info","message":"Original URL: \"/api/mountains?id=$333-33\"","timestamp":"2017-12-08T00:53:35.032Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=$333-33\",\"query\":{\"id\":\"$333-33\"},\"pathname\":\"/api/mountains\",\"path\":\"/api/mountains?id=$333-33\",\"href\":\"/api/mountains?id=$333-33\"}","timestamp":"2017-12-08T00:53:35.032Z"}
{"level":"info","message":"found the following handler","timestamp":"2017-12-08T00:53:35.033Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[7]++;cov_22s6dd2wjj.s[45]++;\n  if (!request.body) {/* istanbul ignore next */cov_22s6dd2wjj.b[6][0]++;cov_22s6dd2wjj.s[46]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[47]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[6][1]++;}cov_22s6dd2wjj.s[48]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_22s6dd2wjj.b[7][0]++;cov_22s6dd2wjj.s[49]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[50]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[7][1]++;}cov_22s6dd2wjj.s[51]++;\n  if (!request.body.state) {/* istanbul ignore next */cov_22s6dd2wjj.b[8][0]++;cov_22s6dd2wjj.s[52]++;\n    sendStatus(response, 400, 'state not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[53]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[8][1]++;}cov_22s6dd2wjj.s[54]++;\n  if (!request.body.hiking) {/* istanbul ignore next */cov_22s6dd2wjj.b[9][0]++;cov_22s6dd2wjj.s[55]++;\n    sendStatus(response, 400, 'hiking info not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[56]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[9][1]++;}cov_22s6dd2wjj.s[57]++;\n  if (!request.body.range) {/* istanbul ignore next */cov_22s6dd2wjj.b[10][0]++;cov_22s6dd2wjj.s[58]++;\n    sendStatus(response, 400, 'range name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[59]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[10][1]++;}\n  let id = /* istanbul ignore next */(cov_22s6dd2wjj.s[60]++, request.url.query.id); /* istanbul ignore next */cov_22s6dd2wjj.s[61]++;\n\n  if (id) {/* istanbul ignore next */cov_22s6dd2wjj.b[11][0]++;\n    let requestMountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[62]++, getMountainById(id)); /* istanbul ignore next */cov_22s6dd2wjj.s[63]++;\n    if (requestMountain)\n      {/* istanbul ignore next */cov_22s6dd2wjj.b[12][0]++;cov_22s6dd2wjj.s[64]++;sendJSON(request, 200, requestMountain);} else\n\n      {/* istanbul ignore next */cov_22s6dd2wjj.b[12][1]++;cov_22s6dd2wjj.s[65]++;sendStatus(response, 404, `no mountain found with the id of ${id}`);}\n  } else\n    {/* istanbul ignore next */cov_22s6dd2wjj.b[11][1]++;cov_22s6dd2wjj.s[66]++;sendJSON(response, 200, mountains);}\n}","timestamp":"2017-12-08T00:53:35.033Z"}
{"level":"info","message":"Responding with a 400 code due to body not found","timestamp":"2017-12-08T00:53:35.033Z"}
{"level":"info","message":"adding a POST url and callback","timestamp":"2017-12-08T00:56:26.042Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T00:56:26.042Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[6]++;cov_22s6dd2wjj.s[26]++;\n  if (!request.body) {/* istanbul ignore next */cov_22s6dd2wjj.b[1][0]++;cov_22s6dd2wjj.s[27]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[1][1]++;}cov_22s6dd2wjj.s[29]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_22s6dd2wjj.b[2][0]++;cov_22s6dd2wjj.s[30]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[2][1]++;}cov_22s6dd2wjj.s[32]++;\n  if (!request.body.state) {/* istanbul ignore next */cov_22s6dd2wjj.b[3][0]++;cov_22s6dd2wjj.s[33]++;\n    sendStatus(response, 400, 'state not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[3][1]++;}cov_22s6dd2wjj.s[35]++;\n  if (!request.body.hiking) {/* istanbul ignore next */cov_22s6dd2wjj.b[4][0]++;cov_22s6dd2wjj.s[36]++;\n    sendStatus(response, 400, 'hiking info not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[4][1]++;}cov_22s6dd2wjj.s[38]++;\n  if (!request.body.range) {/* istanbul ignore next */cov_22s6dd2wjj.b[5][0]++;cov_22s6dd2wjj.s[39]++;\n    sendStatus(response, 400, 'range name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[40]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[5][1]++;}\n  let mountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[41]++, new Mountain(\n  request.body.name,\n  request.body.state,\n  request.body.hiking,\n  request.body.range)); /* istanbul ignore next */cov_22s6dd2wjj.s[42]++;\n\n\n  mountains.push(mountain); /* istanbul ignore next */cov_22s6dd2wjj.s[43]++;\n  sendJSON(response, 200, mountain);\n}","timestamp":"2017-12-08T00:56:26.042Z"}
{"level":"info","message":"adding a GET url and callback","timestamp":"2017-12-08T00:56:26.043Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T00:56:26.043Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[7]++;\n  let id = /* istanbul ignore next */(cov_22s6dd2wjj.s[45]++, request.url.query.id); /* istanbul ignore next */cov_22s6dd2wjj.s[46]++;\n\n  if (id) {/* istanbul ignore next */cov_22s6dd2wjj.b[6][0]++;\n    let requestMountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[47]++, getMountainById(id)); /* istanbul ignore next */cov_22s6dd2wjj.s[48]++;\n    if (requestMountain)\n      {/* istanbul ignore next */cov_22s6dd2wjj.b[7][0]++;cov_22s6dd2wjj.s[49]++;sendJSON(request, 200, requestMountain);} else\n\n      {/* istanbul ignore next */cov_22s6dd2wjj.b[7][1]++;cov_22s6dd2wjj.s[50]++;sendStatus(response, 404, `no mountain found with the id of ${id}`);}\n  } else\n    {/* istanbul ignore next */cov_22s6dd2wjj.b[6][1]++;cov_22s6dd2wjj.s[51]++;sendJSON(response, 200, mountains);}\n}","timestamp":"2017-12-08T00:56:26.043Z"}
{"level":"info","message":"adding a DELETE url and callback","timestamp":"2017-12-08T00:56:26.043Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T00:56:26.043Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[8]++;\n  let id = /* istanbul ignore next */(cov_22s6dd2wjj.s[53]++, request.url.query.id); /* istanbul ignore next */cov_22s6dd2wjj.s[54]++;\n  if (id) {/* istanbul ignore next */cov_22s6dd2wjj.b[8][0]++;\n    let deletedMountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[55]++, deleteMountainById(id)); /* istanbul ignore next */cov_22s6dd2wjj.s[56]++;\n    if (deletedMountain) {/* istanbul ignore next */cov_22s6dd2wjj.b[9][0]++;cov_22s6dd2wjj.s[57]++;\n      logger.log('info', `Mountain deleted, responding with a 200 success code`); /* istanbul ignore next */cov_22s6dd2wjj.s[58]++;\n      response.writeHead(200); /* istanbul ignore next */cov_22s6dd2wjj.s[59]++;\n      response.end();\n    } else\n      {/* istanbul ignore next */cov_22s6dd2wjj.b[9][1]++;cov_22s6dd2wjj.s[60]++;sendStatus(response, 404, `No mountain was found with an id ${id}`);}\n  } else\n    {/* istanbul ignore next */cov_22s6dd2wjj.b[8][1]++;cov_22s6dd2wjj.s[61]++;sendStatus(response, 400, `something else occurred - bad request.`);}\n}","timestamp":"2017-12-08T00:56:26.043Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T00:56:26.137Z"}
{"level":"info","message":"Original URL: \"/api/mountains?id=$333-33\"","timestamp":"2017-12-08T00:56:26.138Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=$333-33\",\"query\":{\"id\":\"$333-33\"},\"pathname\":\"/api/mountains\",\"path\":\"/api/mountains?id=$333-33\",\"href\":\"/api/mountains?id=$333-33\"}","timestamp":"2017-12-08T00:56:26.138Z"}
{"level":"info","message":"found the following handler","timestamp":"2017-12-08T00:56:26.138Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[7]++;\n  let id = /* istanbul ignore next */(cov_22s6dd2wjj.s[45]++, request.url.query.id); /* istanbul ignore next */cov_22s6dd2wjj.s[46]++;\n\n  if (id) {/* istanbul ignore next */cov_22s6dd2wjj.b[6][0]++;\n    let requestMountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[47]++, getMountainById(id)); /* istanbul ignore next */cov_22s6dd2wjj.s[48]++;\n    if (requestMountain)\n      {/* istanbul ignore next */cov_22s6dd2wjj.b[7][0]++;cov_22s6dd2wjj.s[49]++;sendJSON(request, 200, requestMountain);} else\n\n      {/* istanbul ignore next */cov_22s6dd2wjj.b[7][1]++;cov_22s6dd2wjj.s[50]++;sendStatus(response, 404, `no mountain found with the id of ${id}`);}\n  } else\n    {/* istanbul ignore next */cov_22s6dd2wjj.b[6][1]++;cov_22s6dd2wjj.s[51]++;sendJSON(response, 200, mountains);}\n}","timestamp":"2017-12-08T00:56:26.138Z"}
{"level":"info","message":"Responding with a 404 code due to no mountain found with the id of $333-33","timestamp":"2017-12-08T00:56:26.139Z"}
{"level":"info","message":"adding a POST url and callback","timestamp":"2017-12-08T00:59:47.442Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T00:59:47.443Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[6]++;cov_22s6dd2wjj.s[26]++;\n  if (!request.body) {/* istanbul ignore next */cov_22s6dd2wjj.b[1][0]++;cov_22s6dd2wjj.s[27]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[1][1]++;}cov_22s6dd2wjj.s[29]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_22s6dd2wjj.b[2][0]++;cov_22s6dd2wjj.s[30]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[2][1]++;}cov_22s6dd2wjj.s[32]++;\n  if (!request.body.state) {/* istanbul ignore next */cov_22s6dd2wjj.b[3][0]++;cov_22s6dd2wjj.s[33]++;\n    sendStatus(response, 400, 'state not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[3][1]++;}cov_22s6dd2wjj.s[35]++;\n  if (!request.body.hiking) {/* istanbul ignore next */cov_22s6dd2wjj.b[4][0]++;cov_22s6dd2wjj.s[36]++;\n    sendStatus(response, 400, 'hiking info not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[4][1]++;}cov_22s6dd2wjj.s[38]++;\n  if (!request.body.range) {/* istanbul ignore next */cov_22s6dd2wjj.b[5][0]++;cov_22s6dd2wjj.s[39]++;\n    sendStatus(response, 400, 'range name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[40]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[5][1]++;}\n  let mountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[41]++, new Mountain(\n  request.body.name,\n  request.body.state,\n  request.body.hiking,\n  request.body.range)); /* istanbul ignore next */cov_22s6dd2wjj.s[42]++;\n\n\n  mountains.push(mountain); /* istanbul ignore next */cov_22s6dd2wjj.s[43]++;\n  sendJSON(response, 200, mountain);\n}","timestamp":"2017-12-08T00:59:47.443Z"}
{"level":"info","message":"adding a GET url and callback","timestamp":"2017-12-08T00:59:47.443Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T00:59:47.443Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[7]++;\n  let id = /* istanbul ignore next */(cov_22s6dd2wjj.s[45]++, request.url.query.id); /* istanbul ignore next */cov_22s6dd2wjj.s[46]++;\n\n  if (id) {/* istanbul ignore next */cov_22s6dd2wjj.b[6][0]++;\n    let requestMountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[47]++, getMountainById(id)); /* istanbul ignore next */cov_22s6dd2wjj.s[48]++;\n    if (requestMountain)\n      {/* istanbul ignore next */cov_22s6dd2wjj.b[7][0]++;cov_22s6dd2wjj.s[49]++;sendJSON(request, 200, requestMountain);} else\n\n      {/* istanbul ignore next */cov_22s6dd2wjj.b[7][1]++;cov_22s6dd2wjj.s[50]++;sendStatus(response, 404, `no mountain found with the id of ${id}`);}\n  } else\n    {/* istanbul ignore next */cov_22s6dd2wjj.b[6][1]++;cov_22s6dd2wjj.s[51]++;sendJSON(response, 200, mountains);}\n}","timestamp":"2017-12-08T00:59:47.443Z"}
{"level":"info","message":"adding a DELETE url and callback","timestamp":"2017-12-08T00:59:47.443Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T00:59:47.443Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[8]++;\n  let id = /* istanbul ignore next */(cov_22s6dd2wjj.s[53]++, request.url.query.id); /* istanbul ignore next */cov_22s6dd2wjj.s[54]++;\n  if (id) {/* istanbul ignore next */cov_22s6dd2wjj.b[8][0]++;\n    let deletedMountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[55]++, deleteMountainById(id)); /* istanbul ignore next */cov_22s6dd2wjj.s[56]++;\n    if (deletedMountain) {/* istanbul ignore next */cov_22s6dd2wjj.b[9][0]++;cov_22s6dd2wjj.s[57]++;\n      logger.log('info', `Mountain deleted, responding with a 200 success code`); /* istanbul ignore next */cov_22s6dd2wjj.s[58]++;\n      response.writeHead(200); /* istanbul ignore next */cov_22s6dd2wjj.s[59]++;\n      response.end();\n    } else\n      {/* istanbul ignore next */cov_22s6dd2wjj.b[9][1]++;cov_22s6dd2wjj.s[60]++;sendStatus(response, 404, `No mountain was found with an id ${id}`);}\n  } else\n    {/* istanbul ignore next */cov_22s6dd2wjj.b[8][1]++;cov_22s6dd2wjj.s[61]++;sendStatus(response, 400, `something else occurred - bad request.`);}\n}","timestamp":"2017-12-08T00:59:47.443Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T00:59:47.519Z"}
{"level":"info","message":"Original URL: \"/api/mountains\"","timestamp":"2017-12-08T00:59:47.519Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/mountains\",\"path\":\"/api/mountains\",\"href\":\"/api/mountains\"}","timestamp":"2017-12-08T00:59:47.520Z"}
{"level":"info","message":"found the following handler","timestamp":"2017-12-08T00:59:47.520Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[6]++;cov_22s6dd2wjj.s[26]++;\n  if (!request.body) {/* istanbul ignore next */cov_22s6dd2wjj.b[1][0]++;cov_22s6dd2wjj.s[27]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[1][1]++;}cov_22s6dd2wjj.s[29]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_22s6dd2wjj.b[2][0]++;cov_22s6dd2wjj.s[30]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[2][1]++;}cov_22s6dd2wjj.s[32]++;\n  if (!request.body.state) {/* istanbul ignore next */cov_22s6dd2wjj.b[3][0]++;cov_22s6dd2wjj.s[33]++;\n    sendStatus(response, 400, 'state not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[3][1]++;}cov_22s6dd2wjj.s[35]++;\n  if (!request.body.hiking) {/* istanbul ignore next */cov_22s6dd2wjj.b[4][0]++;cov_22s6dd2wjj.s[36]++;\n    sendStatus(response, 400, 'hiking info not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[4][1]++;}cov_22s6dd2wjj.s[38]++;\n  if (!request.body.range) {/* istanbul ignore next */cov_22s6dd2wjj.b[5][0]++;cov_22s6dd2wjj.s[39]++;\n    sendStatus(response, 400, 'range name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[40]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[5][1]++;}\n  let mountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[41]++, new Mountain(\n  request.body.name,\n  request.body.state,\n  request.body.hiking,\n  request.body.range)); /* istanbul ignore next */cov_22s6dd2wjj.s[42]++;\n\n\n  mountains.push(mountain); /* istanbul ignore next */cov_22s6dd2wjj.s[43]++;\n  sendJSON(response, 200, mountain);\n}","timestamp":"2017-12-08T00:59:47.520Z"}
{"level":"info","message":"responding with a 200 code and the following json data","timestamp":"2017-12-08T00:59:47.521Z"}
{"id":"16248310-dbb3-11e7-86d1-93aadbdd85cc","name":"Shuksan","state":"Washington","hiking":"Yes","range":"Cascades","level":"info","message":"","timestamp":"2017-12-08T00:59:47.521Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T00:59:47.529Z"}
{"level":"info","message":"Original URL: \"/api/mountains?id=$333-33\"","timestamp":"2017-12-08T00:59:47.529Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=$333-33\",\"query\":{\"id\":\"$333-33\"},\"pathname\":\"/api/mountains\",\"path\":\"/api/mountains?id=$333-33\",\"href\":\"/api/mountains?id=$333-33\"}","timestamp":"2017-12-08T00:59:47.530Z"}
{"level":"info","message":"found the following handler","timestamp":"2017-12-08T00:59:47.530Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[7]++;\n  let id = /* istanbul ignore next */(cov_22s6dd2wjj.s[45]++, request.url.query.id); /* istanbul ignore next */cov_22s6dd2wjj.s[46]++;\n\n  if (id) {/* istanbul ignore next */cov_22s6dd2wjj.b[6][0]++;\n    let requestMountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[47]++, getMountainById(id)); /* istanbul ignore next */cov_22s6dd2wjj.s[48]++;\n    if (requestMountain)\n      {/* istanbul ignore next */cov_22s6dd2wjj.b[7][0]++;cov_22s6dd2wjj.s[49]++;sendJSON(request, 200, requestMountain);} else\n\n      {/* istanbul ignore next */cov_22s6dd2wjj.b[7][1]++;cov_22s6dd2wjj.s[50]++;sendStatus(response, 404, `no mountain found with the id of ${id}`);}\n  } else\n    {/* istanbul ignore next */cov_22s6dd2wjj.b[6][1]++;cov_22s6dd2wjj.s[51]++;sendJSON(response, 200, mountains);}\n}","timestamp":"2017-12-08T00:59:47.530Z"}
{"level":"info","message":"Responding with a 404 code due to no mountain found with the id of $333-33","timestamp":"2017-12-08T00:59:47.530Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T00:59:47.533Z"}
{"level":"info","message":"Original URL: \"/api/mountains?id=e8013d70-dbad-11e7-9cb6-ddffa32a3c9b\"","timestamp":"2017-12-08T00:59:47.533Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=e8013d70-dbad-11e7-9cb6-ddffa32a3c9b\",\"query\":{\"id\":\"e8013d70-dbad-11e7-9cb6-ddffa32a3c9b\"},\"pathname\":\"/api/mountains\",\"path\":\"/api/mountains?id=e8013d70-dbad-11e7-9cb6-ddffa32a3c9b\",\"href\":\"/api/mountains?id=e8013d70-dbad-11e7-9cb6-ddffa32a3c9b\"}","timestamp":"2017-12-08T00:59:47.533Z"}
{"level":"info","message":"found the following handler","timestamp":"2017-12-08T00:59:47.533Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[7]++;\n  let id = /* istanbul ignore next */(cov_22s6dd2wjj.s[45]++, request.url.query.id); /* istanbul ignore next */cov_22s6dd2wjj.s[46]++;\n\n  if (id) {/* istanbul ignore next */cov_22s6dd2wjj.b[6][0]++;\n    let requestMountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[47]++, getMountainById(id)); /* istanbul ignore next */cov_22s6dd2wjj.s[48]++;\n    if (requestMountain)\n      {/* istanbul ignore next */cov_22s6dd2wjj.b[7][0]++;cov_22s6dd2wjj.s[49]++;sendJSON(request, 200, requestMountain);} else\n\n      {/* istanbul ignore next */cov_22s6dd2wjj.b[7][1]++;cov_22s6dd2wjj.s[50]++;sendStatus(response, 404, `no mountain found with the id of ${id}`);}\n  } else\n    {/* istanbul ignore next */cov_22s6dd2wjj.b[6][1]++;cov_22s6dd2wjj.s[51]++;sendJSON(response, 200, mountains);}\n}","timestamp":"2017-12-08T00:59:47.533Z"}
{"level":"info","message":"Responding with a 404 code due to no mountain found with the id of e8013d70-dbad-11e7-9cb6-ddffa32a3c9b","timestamp":"2017-12-08T00:59:47.533Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T00:59:47.535Z"}
{"level":"info","message":"Original URL: \"/api/mountains\"","timestamp":"2017-12-08T00:59:47.535Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/mountains\",\"path\":\"/api/mountains\",\"href\":\"/api/mountains\"}","timestamp":"2017-12-08T00:59:47.536Z"}
{"level":"info","message":"found the following handler","timestamp":"2017-12-08T00:59:47.536Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[6]++;cov_22s6dd2wjj.s[26]++;\n  if (!request.body) {/* istanbul ignore next */cov_22s6dd2wjj.b[1][0]++;cov_22s6dd2wjj.s[27]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[1][1]++;}cov_22s6dd2wjj.s[29]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_22s6dd2wjj.b[2][0]++;cov_22s6dd2wjj.s[30]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[2][1]++;}cov_22s6dd2wjj.s[32]++;\n  if (!request.body.state) {/* istanbul ignore next */cov_22s6dd2wjj.b[3][0]++;cov_22s6dd2wjj.s[33]++;\n    sendStatus(response, 400, 'state not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[3][1]++;}cov_22s6dd2wjj.s[35]++;\n  if (!request.body.hiking) {/* istanbul ignore next */cov_22s6dd2wjj.b[4][0]++;cov_22s6dd2wjj.s[36]++;\n    sendStatus(response, 400, 'hiking info not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[4][1]++;}cov_22s6dd2wjj.s[38]++;\n  if (!request.body.range) {/* istanbul ignore next */cov_22s6dd2wjj.b[5][0]++;cov_22s6dd2wjj.s[39]++;\n    sendStatus(response, 400, 'range name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[40]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[5][1]++;}\n  let mountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[41]++, new Mountain(\n  request.body.name,\n  request.body.state,\n  request.body.hiking,\n  request.body.range)); /* istanbul ignore next */cov_22s6dd2wjj.s[42]++;\n\n\n  mountains.push(mountain); /* istanbul ignore next */cov_22s6dd2wjj.s[43]++;\n  sendJSON(response, 200, mountain);\n}","timestamp":"2017-12-08T00:59:47.536Z"}
{"level":"info","message":"Responding with a 400 code due to name not found","timestamp":"2017-12-08T00:59:47.536Z"}
{"level":"info","message":"adding a POST url and callback","timestamp":"2017-12-08T01:01:50.528Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T01:01:50.529Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[6]++;cov_22s6dd2wjj.s[26]++;\n  if (!request.body) {/* istanbul ignore next */cov_22s6dd2wjj.b[1][0]++;cov_22s6dd2wjj.s[27]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[1][1]++;}cov_22s6dd2wjj.s[29]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_22s6dd2wjj.b[2][0]++;cov_22s6dd2wjj.s[30]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[2][1]++;}cov_22s6dd2wjj.s[32]++;\n  if (!request.body.state) {/* istanbul ignore next */cov_22s6dd2wjj.b[3][0]++;cov_22s6dd2wjj.s[33]++;\n    sendStatus(response, 400, 'state not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[3][1]++;}cov_22s6dd2wjj.s[35]++;\n  if (!request.body.hiking) {/* istanbul ignore next */cov_22s6dd2wjj.b[4][0]++;cov_22s6dd2wjj.s[36]++;\n    sendStatus(response, 400, 'hiking info not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[4][1]++;}cov_22s6dd2wjj.s[38]++;\n  if (!request.body.range) {/* istanbul ignore next */cov_22s6dd2wjj.b[5][0]++;cov_22s6dd2wjj.s[39]++;\n    sendStatus(response, 400, 'range name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[40]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[5][1]++;}\n  let mountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[41]++, new Mountain(\n  request.body.name,\n  request.body.state,\n  request.body.hiking,\n  request.body.range)); /* istanbul ignore next */cov_22s6dd2wjj.s[42]++;\n\n\n  mountains.push(mountain); /* istanbul ignore next */cov_22s6dd2wjj.s[43]++;\n  sendJSON(response, 200, mountain);\n}","timestamp":"2017-12-08T01:01:50.529Z"}
{"level":"info","message":"adding a GET url and callback","timestamp":"2017-12-08T01:01:50.529Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T01:01:50.529Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[7]++;\n  let id = /* istanbul ignore next */(cov_22s6dd2wjj.s[45]++, request.url.query.id); /* istanbul ignore next */cov_22s6dd2wjj.s[46]++;\n\n  if (id) {/* istanbul ignore next */cov_22s6dd2wjj.b[6][0]++;\n    let requestMountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[47]++, getMountainById(id)); /* istanbul ignore next */cov_22s6dd2wjj.s[48]++;\n    if (requestMountain)\n      {/* istanbul ignore next */cov_22s6dd2wjj.b[7][0]++;cov_22s6dd2wjj.s[49]++;sendJSON(request, 200, requestMountain);} else\n\n      {/* istanbul ignore next */cov_22s6dd2wjj.b[7][1]++;cov_22s6dd2wjj.s[50]++;sendStatus(response, 404, `no mountain found with the id of ${id}`);}\n  } else\n    {/* istanbul ignore next */cov_22s6dd2wjj.b[6][1]++;cov_22s6dd2wjj.s[51]++;sendJSON(response, 200, mountains);}\n}","timestamp":"2017-12-08T01:01:50.529Z"}
{"level":"info","message":"adding a DELETE url and callback","timestamp":"2017-12-08T01:01:50.529Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T01:01:50.529Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[8]++;\n  let id = /* istanbul ignore next */(cov_22s6dd2wjj.s[53]++, request.url.query.id); /* istanbul ignore next */cov_22s6dd2wjj.s[54]++;\n  if (id) {/* istanbul ignore next */cov_22s6dd2wjj.b[8][0]++;\n    let deletedMountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[55]++, deleteMountainById(id)); /* istanbul ignore next */cov_22s6dd2wjj.s[56]++;\n    if (deletedMountain) {/* istanbul ignore next */cov_22s6dd2wjj.b[9][0]++;cov_22s6dd2wjj.s[57]++;\n      logger.log('info', `Mountain deleted, responding with a 200 success code`); /* istanbul ignore next */cov_22s6dd2wjj.s[58]++;\n      response.writeHead(200); /* istanbul ignore next */cov_22s6dd2wjj.s[59]++;\n      response.end();\n    } else\n      {/* istanbul ignore next */cov_22s6dd2wjj.b[9][1]++;cov_22s6dd2wjj.s[60]++;sendStatus(response, 404, `No mountain was found with an id ${id}`);}\n  } else\n    {/* istanbul ignore next */cov_22s6dd2wjj.b[8][1]++;cov_22s6dd2wjj.s[61]++;sendStatus(response, 400, `something else occurred - bad request.`);}\n}","timestamp":"2017-12-08T01:01:50.530Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T01:01:50.642Z"}
{"level":"info","message":"Original URL: \"/api/mountains\"","timestamp":"2017-12-08T01:01:50.643Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/mountains\",\"path\":\"/api/mountains\",\"href\":\"/api/mountains\"}","timestamp":"2017-12-08T01:01:50.643Z"}
{"level":"info","message":"found the following handler","timestamp":"2017-12-08T01:01:50.643Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[6]++;cov_22s6dd2wjj.s[26]++;\n  if (!request.body) {/* istanbul ignore next */cov_22s6dd2wjj.b[1][0]++;cov_22s6dd2wjj.s[27]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[1][1]++;}cov_22s6dd2wjj.s[29]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_22s6dd2wjj.b[2][0]++;cov_22s6dd2wjj.s[30]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[2][1]++;}cov_22s6dd2wjj.s[32]++;\n  if (!request.body.state) {/* istanbul ignore next */cov_22s6dd2wjj.b[3][0]++;cov_22s6dd2wjj.s[33]++;\n    sendStatus(response, 400, 'state not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[3][1]++;}cov_22s6dd2wjj.s[35]++;\n  if (!request.body.hiking) {/* istanbul ignore next */cov_22s6dd2wjj.b[4][0]++;cov_22s6dd2wjj.s[36]++;\n    sendStatus(response, 400, 'hiking info not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[4][1]++;}cov_22s6dd2wjj.s[38]++;\n  if (!request.body.range) {/* istanbul ignore next */cov_22s6dd2wjj.b[5][0]++;cov_22s6dd2wjj.s[39]++;\n    sendStatus(response, 400, 'range name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[40]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[5][1]++;}\n  let mountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[41]++, new Mountain(\n  request.body.name,\n  request.body.state,\n  request.body.hiking,\n  request.body.range)); /* istanbul ignore next */cov_22s6dd2wjj.s[42]++;\n\n\n  mountains.push(mountain); /* istanbul ignore next */cov_22s6dd2wjj.s[43]++;\n  sendJSON(response, 200, mountain);\n}","timestamp":"2017-12-08T01:01:50.644Z"}
{"level":"info","message":"responding with a 200 code and the following json data","timestamp":"2017-12-08T01:01:50.644Z"}
{"id":"5f879740-dbb3-11e7-9efa-c98a94898325","name":"Shuksan","state":"Washington","hiking":"Yes","range":"Cascades","level":"info","message":"","timestamp":"2017-12-08T01:01:50.644Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T01:01:50.654Z"}
{"level":"info","message":"Original URL: \"/api/mountains?id=$333-33\"","timestamp":"2017-12-08T01:01:50.654Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=$333-33\",\"query\":{\"id\":\"$333-33\"},\"pathname\":\"/api/mountains\",\"path\":\"/api/mountains?id=$333-33\",\"href\":\"/api/mountains?id=$333-33\"}","timestamp":"2017-12-08T01:01:50.655Z"}
{"level":"info","message":"found the following handler","timestamp":"2017-12-08T01:01:50.655Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[7]++;\n  let id = /* istanbul ignore next */(cov_22s6dd2wjj.s[45]++, request.url.query.id); /* istanbul ignore next */cov_22s6dd2wjj.s[46]++;\n\n  if (id) {/* istanbul ignore next */cov_22s6dd2wjj.b[6][0]++;\n    let requestMountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[47]++, getMountainById(id)); /* istanbul ignore next */cov_22s6dd2wjj.s[48]++;\n    if (requestMountain)\n      {/* istanbul ignore next */cov_22s6dd2wjj.b[7][0]++;cov_22s6dd2wjj.s[49]++;sendJSON(request, 200, requestMountain);} else\n\n      {/* istanbul ignore next */cov_22s6dd2wjj.b[7][1]++;cov_22s6dd2wjj.s[50]++;sendStatus(response, 404, `no mountain found with the id of ${id}`);}\n  } else\n    {/* istanbul ignore next */cov_22s6dd2wjj.b[6][1]++;cov_22s6dd2wjj.s[51]++;sendJSON(response, 200, mountains);}\n}","timestamp":"2017-12-08T01:01:50.655Z"}
{"level":"info","message":"Responding with a 404 code due to no mountain found with the id of $333-33","timestamp":"2017-12-08T01:01:50.655Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T01:01:50.658Z"}
{"level":"info","message":"Original URL: \"/api/mountains?id=e8013d70-dbad-11e7-9cb6-ddffa32a3c9b\"","timestamp":"2017-12-08T01:01:50.658Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=e8013d70-dbad-11e7-9cb6-ddffa32a3c9b\",\"query\":{\"id\":\"e8013d70-dbad-11e7-9cb6-ddffa32a3c9b\"},\"pathname\":\"/api/mountains\",\"path\":\"/api/mountains?id=e8013d70-dbad-11e7-9cb6-ddffa32a3c9b\",\"href\":\"/api/mountains?id=e8013d70-dbad-11e7-9cb6-ddffa32a3c9b\"}","timestamp":"2017-12-08T01:01:50.658Z"}
{"level":"info","message":"found the following handler","timestamp":"2017-12-08T01:01:50.658Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[7]++;\n  let id = /* istanbul ignore next */(cov_22s6dd2wjj.s[45]++, request.url.query.id); /* istanbul ignore next */cov_22s6dd2wjj.s[46]++;\n\n  if (id) {/* istanbul ignore next */cov_22s6dd2wjj.b[6][0]++;\n    let requestMountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[47]++, getMountainById(id)); /* istanbul ignore next */cov_22s6dd2wjj.s[48]++;\n    if (requestMountain)\n      {/* istanbul ignore next */cov_22s6dd2wjj.b[7][0]++;cov_22s6dd2wjj.s[49]++;sendJSON(request, 200, requestMountain);} else\n\n      {/* istanbul ignore next */cov_22s6dd2wjj.b[7][1]++;cov_22s6dd2wjj.s[50]++;sendStatus(response, 404, `no mountain found with the id of ${id}`);}\n  } else\n    {/* istanbul ignore next */cov_22s6dd2wjj.b[6][1]++;cov_22s6dd2wjj.s[51]++;sendJSON(response, 200, mountains);}\n}","timestamp":"2017-12-08T01:01:50.658Z"}
{"level":"info","message":"Responding with a 404 code due to no mountain found with the id of e8013d70-dbad-11e7-9cb6-ddffa32a3c9b","timestamp":"2017-12-08T01:01:50.658Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T01:01:50.661Z"}
{"level":"info","message":"Original URL: \"/api/mountains\"","timestamp":"2017-12-08T01:01:50.661Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/mountains\",\"path\":\"/api/mountains\",\"href\":\"/api/mountains\"}","timestamp":"2017-12-08T01:01:50.661Z"}
{"level":"info","message":"found the following handler","timestamp":"2017-12-08T01:01:50.661Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[6]++;cov_22s6dd2wjj.s[26]++;\n  if (!request.body) {/* istanbul ignore next */cov_22s6dd2wjj.b[1][0]++;cov_22s6dd2wjj.s[27]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[1][1]++;}cov_22s6dd2wjj.s[29]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_22s6dd2wjj.b[2][0]++;cov_22s6dd2wjj.s[30]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[2][1]++;}cov_22s6dd2wjj.s[32]++;\n  if (!request.body.state) {/* istanbul ignore next */cov_22s6dd2wjj.b[3][0]++;cov_22s6dd2wjj.s[33]++;\n    sendStatus(response, 400, 'state not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[3][1]++;}cov_22s6dd2wjj.s[35]++;\n  if (!request.body.hiking) {/* istanbul ignore next */cov_22s6dd2wjj.b[4][0]++;cov_22s6dd2wjj.s[36]++;\n    sendStatus(response, 400, 'hiking info not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[4][1]++;}cov_22s6dd2wjj.s[38]++;\n  if (!request.body.range) {/* istanbul ignore next */cov_22s6dd2wjj.b[5][0]++;cov_22s6dd2wjj.s[39]++;\n    sendStatus(response, 400, 'range name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[40]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[5][1]++;}\n  let mountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[41]++, new Mountain(\n  request.body.name,\n  request.body.state,\n  request.body.hiking,\n  request.body.range)); /* istanbul ignore next */cov_22s6dd2wjj.s[42]++;\n\n\n  mountains.push(mountain); /* istanbul ignore next */cov_22s6dd2wjj.s[43]++;\n  sendJSON(response, 200, mountain);\n}","timestamp":"2017-12-08T01:01:50.661Z"}
{"level":"info","message":"Responding with a 400 code due to name not found","timestamp":"2017-12-08T01:01:50.661Z"}
{"level":"info","message":"adding a POST url and callback","timestamp":"2017-12-08T01:02:44.458Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T01:02:44.458Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[6]++;cov_22s6dd2wjj.s[26]++;\n  if (!request.body) {/* istanbul ignore next */cov_22s6dd2wjj.b[1][0]++;cov_22s6dd2wjj.s[27]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[1][1]++;}cov_22s6dd2wjj.s[29]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_22s6dd2wjj.b[2][0]++;cov_22s6dd2wjj.s[30]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[2][1]++;}cov_22s6dd2wjj.s[32]++;\n  if (!request.body.state) {/* istanbul ignore next */cov_22s6dd2wjj.b[3][0]++;cov_22s6dd2wjj.s[33]++;\n    sendStatus(response, 400, 'state not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[3][1]++;}cov_22s6dd2wjj.s[35]++;\n  if (!request.body.hiking) {/* istanbul ignore next */cov_22s6dd2wjj.b[4][0]++;cov_22s6dd2wjj.s[36]++;\n    sendStatus(response, 400, 'hiking info not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[4][1]++;}cov_22s6dd2wjj.s[38]++;\n  if (!request.body.range) {/* istanbul ignore next */cov_22s6dd2wjj.b[5][0]++;cov_22s6dd2wjj.s[39]++;\n    sendStatus(response, 400, 'range name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[40]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[5][1]++;}\n  let mountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[41]++, new Mountain(\n  request.body.name,\n  request.body.state,\n  request.body.hiking,\n  request.body.range)); /* istanbul ignore next */cov_22s6dd2wjj.s[42]++;\n\n\n  mountains.push(mountain); /* istanbul ignore next */cov_22s6dd2wjj.s[43]++;\n  sendJSON(response, 200, mountain);\n}","timestamp":"2017-12-08T01:02:44.459Z"}
{"level":"info","message":"adding a GET url and callback","timestamp":"2017-12-08T01:02:44.459Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T01:02:44.459Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[7]++;\n  let id = /* istanbul ignore next */(cov_22s6dd2wjj.s[45]++, request.url.query.id); /* istanbul ignore next */cov_22s6dd2wjj.s[46]++;\n\n  if (id) {/* istanbul ignore next */cov_22s6dd2wjj.b[6][0]++;\n    let requestMountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[47]++, getMountainById(id)); /* istanbul ignore next */cov_22s6dd2wjj.s[48]++;\n    if (requestMountain)\n      {/* istanbul ignore next */cov_22s6dd2wjj.b[7][0]++;cov_22s6dd2wjj.s[49]++;sendJSON(request, 200, requestMountain);} else\n\n      {/* istanbul ignore next */cov_22s6dd2wjj.b[7][1]++;cov_22s6dd2wjj.s[50]++;sendStatus(response, 404, `no mountain found with the id of ${id}`);}\n  } else\n    {/* istanbul ignore next */cov_22s6dd2wjj.b[6][1]++;cov_22s6dd2wjj.s[51]++;sendJSON(response, 200, mountains);}\n}","timestamp":"2017-12-08T01:02:44.459Z"}
{"level":"info","message":"adding a DELETE url and callback","timestamp":"2017-12-08T01:02:44.459Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T01:02:44.459Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[8]++;\n  let id = /* istanbul ignore next */(cov_22s6dd2wjj.s[53]++, request.url.query.id); /* istanbul ignore next */cov_22s6dd2wjj.s[54]++;\n  if (id) {/* istanbul ignore next */cov_22s6dd2wjj.b[8][0]++;\n    let deletedMountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[55]++, deleteMountainById(id)); /* istanbul ignore next */cov_22s6dd2wjj.s[56]++;\n    if (deletedMountain) {/* istanbul ignore next */cov_22s6dd2wjj.b[9][0]++;cov_22s6dd2wjj.s[57]++;\n      logger.log('info', `Mountain deleted, responding with a 200 success code`); /* istanbul ignore next */cov_22s6dd2wjj.s[58]++;\n      response.writeHead(200); /* istanbul ignore next */cov_22s6dd2wjj.s[59]++;\n      response.end();\n    } else\n      {/* istanbul ignore next */cov_22s6dd2wjj.b[9][1]++;cov_22s6dd2wjj.s[60]++;sendStatus(response, 404, `No mountain was found with an id ${id}`);}\n  } else\n    {/* istanbul ignore next */cov_22s6dd2wjj.b[8][1]++;cov_22s6dd2wjj.s[61]++;sendStatus(response, 400, `something else occurred - bad request.`);}\n}","timestamp":"2017-12-08T01:02:44.459Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T01:02:44.514Z"}
{"level":"info","message":"Original URL: \"/api/mountains\"","timestamp":"2017-12-08T01:02:44.514Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/mountains\",\"path\":\"/api/mountains\",\"href\":\"/api/mountains\"}","timestamp":"2017-12-08T01:02:44.515Z"}
{"level":"info","message":"found the following handler","timestamp":"2017-12-08T01:02:44.515Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[6]++;cov_22s6dd2wjj.s[26]++;\n  if (!request.body) {/* istanbul ignore next */cov_22s6dd2wjj.b[1][0]++;cov_22s6dd2wjj.s[27]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[1][1]++;}cov_22s6dd2wjj.s[29]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_22s6dd2wjj.b[2][0]++;cov_22s6dd2wjj.s[30]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[2][1]++;}cov_22s6dd2wjj.s[32]++;\n  if (!request.body.state) {/* istanbul ignore next */cov_22s6dd2wjj.b[3][0]++;cov_22s6dd2wjj.s[33]++;\n    sendStatus(response, 400, 'state not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[3][1]++;}cov_22s6dd2wjj.s[35]++;\n  if (!request.body.hiking) {/* istanbul ignore next */cov_22s6dd2wjj.b[4][0]++;cov_22s6dd2wjj.s[36]++;\n    sendStatus(response, 400, 'hiking info not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[4][1]++;}cov_22s6dd2wjj.s[38]++;\n  if (!request.body.range) {/* istanbul ignore next */cov_22s6dd2wjj.b[5][0]++;cov_22s6dd2wjj.s[39]++;\n    sendStatus(response, 400, 'range name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[40]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[5][1]++;}\n  let mountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[41]++, new Mountain(\n  request.body.name,\n  request.body.state,\n  request.body.hiking,\n  request.body.range)); /* istanbul ignore next */cov_22s6dd2wjj.s[42]++;\n\n\n  mountains.push(mountain); /* istanbul ignore next */cov_22s6dd2wjj.s[43]++;\n  sendJSON(response, 200, mountain);\n}","timestamp":"2017-12-08T01:02:44.515Z"}
{"level":"info","message":"responding with a 200 code and the following json data","timestamp":"2017-12-08T01:02:44.516Z"}
{"id":"7fa3ce40-dbb3-11e7-83fd-d761ec61b49d","name":"Shuksan","state":"Washington","hiking":"Yes","range":"Cascades","level":"info","message":"","timestamp":"2017-12-08T01:02:44.516Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T01:02:44.524Z"}
{"level":"info","message":"Original URL: \"/api/mountains?id=$333-33\"","timestamp":"2017-12-08T01:02:44.525Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=$333-33\",\"query\":{\"id\":\"$333-33\"},\"pathname\":\"/api/mountains\",\"path\":\"/api/mountains?id=$333-33\",\"href\":\"/api/mountains?id=$333-33\"}","timestamp":"2017-12-08T01:02:44.525Z"}
{"level":"info","message":"found the following handler","timestamp":"2017-12-08T01:02:44.525Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[7]++;\n  let id = /* istanbul ignore next */(cov_22s6dd2wjj.s[45]++, request.url.query.id); /* istanbul ignore next */cov_22s6dd2wjj.s[46]++;\n\n  if (id) {/* istanbul ignore next */cov_22s6dd2wjj.b[6][0]++;\n    let requestMountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[47]++, getMountainById(id)); /* istanbul ignore next */cov_22s6dd2wjj.s[48]++;\n    if (requestMountain)\n      {/* istanbul ignore next */cov_22s6dd2wjj.b[7][0]++;cov_22s6dd2wjj.s[49]++;sendJSON(request, 200, requestMountain);} else\n\n      {/* istanbul ignore next */cov_22s6dd2wjj.b[7][1]++;cov_22s6dd2wjj.s[50]++;sendStatus(response, 404, `no mountain found with the id of ${id}`);}\n  } else\n    {/* istanbul ignore next */cov_22s6dd2wjj.b[6][1]++;cov_22s6dd2wjj.s[51]++;sendJSON(response, 200, mountains);}\n}","timestamp":"2017-12-08T01:02:44.525Z"}
{"level":"info","message":"Responding with a 404 code due to no mountain found with the id of $333-33","timestamp":"2017-12-08T01:02:44.525Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T01:02:44.528Z"}
{"level":"info","message":"Original URL: \"/api/mountains?id=e8013d70-dbad-11e7-9cb6-ddffa32a3c9b\"","timestamp":"2017-12-08T01:02:44.528Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=e8013d70-dbad-11e7-9cb6-ddffa32a3c9b\",\"query\":{\"id\":\"e8013d70-dbad-11e7-9cb6-ddffa32a3c9b\"},\"pathname\":\"/api/mountains\",\"path\":\"/api/mountains?id=e8013d70-dbad-11e7-9cb6-ddffa32a3c9b\",\"href\":\"/api/mountains?id=e8013d70-dbad-11e7-9cb6-ddffa32a3c9b\"}","timestamp":"2017-12-08T01:02:44.528Z"}
{"level":"info","message":"found the following handler","timestamp":"2017-12-08T01:02:44.528Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[7]++;\n  let id = /* istanbul ignore next */(cov_22s6dd2wjj.s[45]++, request.url.query.id); /* istanbul ignore next */cov_22s6dd2wjj.s[46]++;\n\n  if (id) {/* istanbul ignore next */cov_22s6dd2wjj.b[6][0]++;\n    let requestMountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[47]++, getMountainById(id)); /* istanbul ignore next */cov_22s6dd2wjj.s[48]++;\n    if (requestMountain)\n      {/* istanbul ignore next */cov_22s6dd2wjj.b[7][0]++;cov_22s6dd2wjj.s[49]++;sendJSON(request, 200, requestMountain);} else\n\n      {/* istanbul ignore next */cov_22s6dd2wjj.b[7][1]++;cov_22s6dd2wjj.s[50]++;sendStatus(response, 404, `no mountain found with the id of ${id}`);}\n  } else\n    {/* istanbul ignore next */cov_22s6dd2wjj.b[6][1]++;cov_22s6dd2wjj.s[51]++;sendJSON(response, 200, mountains);}\n}","timestamp":"2017-12-08T01:02:44.528Z"}
{"level":"info","message":"Responding with a 404 code due to no mountain found with the id of e8013d70-dbad-11e7-9cb6-ddffa32a3c9b","timestamp":"2017-12-08T01:02:44.528Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T01:02:44.531Z"}
{"level":"info","message":"Original URL: \"/api/mountains\"","timestamp":"2017-12-08T01:02:44.531Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/mountains\",\"path\":\"/api/mountains\",\"href\":\"/api/mountains\"}","timestamp":"2017-12-08T01:02:44.531Z"}
{"level":"info","message":"found the following handler","timestamp":"2017-12-08T01:02:44.531Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[6]++;cov_22s6dd2wjj.s[26]++;\n  if (!request.body) {/* istanbul ignore next */cov_22s6dd2wjj.b[1][0]++;cov_22s6dd2wjj.s[27]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[1][1]++;}cov_22s6dd2wjj.s[29]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_22s6dd2wjj.b[2][0]++;cov_22s6dd2wjj.s[30]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[2][1]++;}cov_22s6dd2wjj.s[32]++;\n  if (!request.body.state) {/* istanbul ignore next */cov_22s6dd2wjj.b[3][0]++;cov_22s6dd2wjj.s[33]++;\n    sendStatus(response, 400, 'state not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[3][1]++;}cov_22s6dd2wjj.s[35]++;\n  if (!request.body.hiking) {/* istanbul ignore next */cov_22s6dd2wjj.b[4][0]++;cov_22s6dd2wjj.s[36]++;\n    sendStatus(response, 400, 'hiking info not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[4][1]++;}cov_22s6dd2wjj.s[38]++;\n  if (!request.body.range) {/* istanbul ignore next */cov_22s6dd2wjj.b[5][0]++;cov_22s6dd2wjj.s[39]++;\n    sendStatus(response, 400, 'range name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[40]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[5][1]++;}\n  let mountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[41]++, new Mountain(\n  request.body.name,\n  request.body.state,\n  request.body.hiking,\n  request.body.range)); /* istanbul ignore next */cov_22s6dd2wjj.s[42]++;\n\n\n  mountains.push(mountain); /* istanbul ignore next */cov_22s6dd2wjj.s[43]++;\n  sendJSON(response, 200, mountain);\n}","timestamp":"2017-12-08T01:02:44.531Z"}
{"level":"info","message":"Responding with a 400 code due to name not found","timestamp":"2017-12-08T01:02:44.531Z"}
{"level":"info","message":"adding a POST url and callback","timestamp":"2017-12-08T01:04:36.338Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T01:04:36.339Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[6]++;cov_22s6dd2wjj.s[26]++;\n  if (!request.body) {/* istanbul ignore next */cov_22s6dd2wjj.b[1][0]++;cov_22s6dd2wjj.s[27]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[1][1]++;}cov_22s6dd2wjj.s[29]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_22s6dd2wjj.b[2][0]++;cov_22s6dd2wjj.s[30]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[2][1]++;}cov_22s6dd2wjj.s[32]++;\n  if (!request.body.state) {/* istanbul ignore next */cov_22s6dd2wjj.b[3][0]++;cov_22s6dd2wjj.s[33]++;\n    sendStatus(response, 400, 'state not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[3][1]++;}cov_22s6dd2wjj.s[35]++;\n  if (!request.body.hiking) {/* istanbul ignore next */cov_22s6dd2wjj.b[4][0]++;cov_22s6dd2wjj.s[36]++;\n    sendStatus(response, 400, 'hiking info not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[4][1]++;}cov_22s6dd2wjj.s[38]++;\n  if (!request.body.range) {/* istanbul ignore next */cov_22s6dd2wjj.b[5][0]++;cov_22s6dd2wjj.s[39]++;\n    sendStatus(response, 400, 'range name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[40]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[5][1]++;}\n  let mountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[41]++, new Mountain(\n  request.body.name,\n  request.body.state,\n  request.body.hiking,\n  request.body.range)); /* istanbul ignore next */cov_22s6dd2wjj.s[42]++;\n\n\n  mountains.push(mountain); /* istanbul ignore next */cov_22s6dd2wjj.s[43]++;\n  sendJSON(response, 200, mountain);\n}","timestamp":"2017-12-08T01:04:36.339Z"}
{"level":"info","message":"adding a GET url and callback","timestamp":"2017-12-08T01:04:36.339Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T01:04:36.339Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[7]++;\n  let id = /* istanbul ignore next */(cov_22s6dd2wjj.s[45]++, request.url.query.id); /* istanbul ignore next */cov_22s6dd2wjj.s[46]++;\n\n  if (id) {/* istanbul ignore next */cov_22s6dd2wjj.b[6][0]++;\n    let requestMountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[47]++, getMountainById(id)); /* istanbul ignore next */cov_22s6dd2wjj.s[48]++;\n    if (requestMountain)\n      {/* istanbul ignore next */cov_22s6dd2wjj.b[7][0]++;cov_22s6dd2wjj.s[49]++;sendJSON(request, 200, requestMountain);} else\n\n      {/* istanbul ignore next */cov_22s6dd2wjj.b[7][1]++;cov_22s6dd2wjj.s[50]++;sendStatus(response, 404, `no mountain found with the id of ${id}`);}\n  } else\n    {/* istanbul ignore next */cov_22s6dd2wjj.b[6][1]++;cov_22s6dd2wjj.s[51]++;sendJSON(response, 200, mountains);}\n}","timestamp":"2017-12-08T01:04:36.339Z"}
{"level":"info","message":"adding a DELETE url and callback","timestamp":"2017-12-08T01:04:36.339Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T01:04:36.339Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[8]++;\n  let id = /* istanbul ignore next */(cov_22s6dd2wjj.s[53]++, request.url.query.id); /* istanbul ignore next */cov_22s6dd2wjj.s[54]++;\n  if (id) {/* istanbul ignore next */cov_22s6dd2wjj.b[8][0]++;\n    let deletedMountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[55]++, deleteMountainById(id)); /* istanbul ignore next */cov_22s6dd2wjj.s[56]++;\n    if (deletedMountain) {/* istanbul ignore next */cov_22s6dd2wjj.b[9][0]++;cov_22s6dd2wjj.s[57]++;\n      logger.log('info', `Mountain deleted, responding with a 200 success code`); /* istanbul ignore next */cov_22s6dd2wjj.s[58]++;\n      response.writeHead(200); /* istanbul ignore next */cov_22s6dd2wjj.s[59]++;\n      response.end();\n    } else\n      {/* istanbul ignore next */cov_22s6dd2wjj.b[9][1]++;cov_22s6dd2wjj.s[60]++;sendStatus(response, 404, `No mountain was found with an id ${id}`);}\n  } else\n    {/* istanbul ignore next */cov_22s6dd2wjj.b[8][1]++;cov_22s6dd2wjj.s[61]++;sendStatus(response, 400, `something else occurred - bad request.`);}\n}","timestamp":"2017-12-08T01:04:36.339Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T01:04:36.395Z"}
{"level":"info","message":"Original URL: \"/api/mountains\"","timestamp":"2017-12-08T01:04:36.395Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/mountains\",\"path\":\"/api/mountains\",\"href\":\"/api/mountains\"}","timestamp":"2017-12-08T01:04:36.395Z"}
{"level":"info","message":"found the following handler","timestamp":"2017-12-08T01:04:36.396Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[6]++;cov_22s6dd2wjj.s[26]++;\n  if (!request.body) {/* istanbul ignore next */cov_22s6dd2wjj.b[1][0]++;cov_22s6dd2wjj.s[27]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[1][1]++;}cov_22s6dd2wjj.s[29]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_22s6dd2wjj.b[2][0]++;cov_22s6dd2wjj.s[30]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[2][1]++;}cov_22s6dd2wjj.s[32]++;\n  if (!request.body.state) {/* istanbul ignore next */cov_22s6dd2wjj.b[3][0]++;cov_22s6dd2wjj.s[33]++;\n    sendStatus(response, 400, 'state not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[3][1]++;}cov_22s6dd2wjj.s[35]++;\n  if (!request.body.hiking) {/* istanbul ignore next */cov_22s6dd2wjj.b[4][0]++;cov_22s6dd2wjj.s[36]++;\n    sendStatus(response, 400, 'hiking info not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[4][1]++;}cov_22s6dd2wjj.s[38]++;\n  if (!request.body.range) {/* istanbul ignore next */cov_22s6dd2wjj.b[5][0]++;cov_22s6dd2wjj.s[39]++;\n    sendStatus(response, 400, 'range name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[40]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[5][1]++;}\n  let mountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[41]++, new Mountain(\n  request.body.name,\n  request.body.state,\n  request.body.hiking,\n  request.body.range)); /* istanbul ignore next */cov_22s6dd2wjj.s[42]++;\n\n\n  mountains.push(mountain); /* istanbul ignore next */cov_22s6dd2wjj.s[43]++;\n  sendJSON(response, 200, mountain);\n}","timestamp":"2017-12-08T01:04:36.396Z"}
{"level":"info","message":"responding with a 200 code and the following json data","timestamp":"2017-12-08T01:04:36.397Z"}
{"id":"c25356c0-dbb3-11e7-a095-592a2b691538","name":"Shuksan","state":"Washington","hiking":"Yes","range":"Cascades","level":"info","message":"","timestamp":"2017-12-08T01:04:36.397Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T01:04:36.445Z"}
{"level":"info","message":"Original URL: \"/api/mountains?id=$333-33\"","timestamp":"2017-12-08T01:04:36.445Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=$333-33\",\"query\":{\"id\":\"$333-33\"},\"pathname\":\"/api/mountains\",\"path\":\"/api/mountains?id=$333-33\",\"href\":\"/api/mountains?id=$333-33\"}","timestamp":"2017-12-08T01:04:36.446Z"}
{"level":"info","message":"found the following handler","timestamp":"2017-12-08T01:04:36.446Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[7]++;\n  let id = /* istanbul ignore next */(cov_22s6dd2wjj.s[45]++, request.url.query.id); /* istanbul ignore next */cov_22s6dd2wjj.s[46]++;\n\n  if (id) {/* istanbul ignore next */cov_22s6dd2wjj.b[6][0]++;\n    let requestMountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[47]++, getMountainById(id)); /* istanbul ignore next */cov_22s6dd2wjj.s[48]++;\n    if (requestMountain)\n      {/* istanbul ignore next */cov_22s6dd2wjj.b[7][0]++;cov_22s6dd2wjj.s[49]++;sendJSON(request, 200, requestMountain);} else\n\n      {/* istanbul ignore next */cov_22s6dd2wjj.b[7][1]++;cov_22s6dd2wjj.s[50]++;sendStatus(response, 404, `no mountain found with the id of ${id}`);}\n  } else\n    {/* istanbul ignore next */cov_22s6dd2wjj.b[6][1]++;cov_22s6dd2wjj.s[51]++;sendJSON(response, 200, mountains);}\n}","timestamp":"2017-12-08T01:04:36.446Z"}
{"level":"info","message":"Responding with a 404 code due to no mountain found with the id of $333-33","timestamp":"2017-12-08T01:04:36.446Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T01:04:36.450Z"}
{"level":"info","message":"Original URL: \"/api/mountains\"","timestamp":"2017-12-08T01:04:36.450Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/mountains\",\"path\":\"/api/mountains\",\"href\":\"/api/mountains\"}","timestamp":"2017-12-08T01:04:36.450Z"}
{"level":"info","message":"found the following handler","timestamp":"2017-12-08T01:04:36.450Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[7]++;\n  let id = /* istanbul ignore next */(cov_22s6dd2wjj.s[45]++, request.url.query.id); /* istanbul ignore next */cov_22s6dd2wjj.s[46]++;\n\n  if (id) {/* istanbul ignore next */cov_22s6dd2wjj.b[6][0]++;\n    let requestMountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[47]++, getMountainById(id)); /* istanbul ignore next */cov_22s6dd2wjj.s[48]++;\n    if (requestMountain)\n      {/* istanbul ignore next */cov_22s6dd2wjj.b[7][0]++;cov_22s6dd2wjj.s[49]++;sendJSON(request, 200, requestMountain);} else\n\n      {/* istanbul ignore next */cov_22s6dd2wjj.b[7][1]++;cov_22s6dd2wjj.s[50]++;sendStatus(response, 404, `no mountain found with the id of ${id}`);}\n  } else\n    {/* istanbul ignore next */cov_22s6dd2wjj.b[6][1]++;cov_22s6dd2wjj.s[51]++;sendJSON(response, 200, mountains);}\n}","timestamp":"2017-12-08T01:04:36.450Z"}
{"level":"info","message":"responding with a 200 code and the following json data","timestamp":"2017-12-08T01:04:36.450Z"}
[{"id":"c25356c0-dbb3-11e7-a095-592a2b691538","name":"Shuksan","state":"Washington","hiking":"Yes","range":"Cascades"}]
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T01:04:36.454Z"}
{"level":"info","message":"Original URL: \"/api/mountains\"","timestamp":"2017-12-08T01:04:36.454Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/mountains\",\"path\":\"/api/mountains\",\"href\":\"/api/mountains\"}","timestamp":"2017-12-08T01:04:36.454Z"}
{"level":"info","message":"found the following handler","timestamp":"2017-12-08T01:04:36.454Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[6]++;cov_22s6dd2wjj.s[26]++;\n  if (!request.body) {/* istanbul ignore next */cov_22s6dd2wjj.b[1][0]++;cov_22s6dd2wjj.s[27]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[1][1]++;}cov_22s6dd2wjj.s[29]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_22s6dd2wjj.b[2][0]++;cov_22s6dd2wjj.s[30]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[2][1]++;}cov_22s6dd2wjj.s[32]++;\n  if (!request.body.state) {/* istanbul ignore next */cov_22s6dd2wjj.b[3][0]++;cov_22s6dd2wjj.s[33]++;\n    sendStatus(response, 400, 'state not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[3][1]++;}cov_22s6dd2wjj.s[35]++;\n  if (!request.body.hiking) {/* istanbul ignore next */cov_22s6dd2wjj.b[4][0]++;cov_22s6dd2wjj.s[36]++;\n    sendStatus(response, 400, 'hiking info not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[4][1]++;}cov_22s6dd2wjj.s[38]++;\n  if (!request.body.range) {/* istanbul ignore next */cov_22s6dd2wjj.b[5][0]++;cov_22s6dd2wjj.s[39]++;\n    sendStatus(response, 400, 'range name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[40]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[5][1]++;}\n  let mountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[41]++, new Mountain(\n  request.body.name,\n  request.body.state,\n  request.body.hiking,\n  request.body.range)); /* istanbul ignore next */cov_22s6dd2wjj.s[42]++;\n\n\n  mountains.push(mountain); /* istanbul ignore next */cov_22s6dd2wjj.s[43]++;\n  sendJSON(response, 200, mountain);\n}","timestamp":"2017-12-08T01:04:36.454Z"}
{"level":"info","message":"Responding with a 400 code due to name not found","timestamp":"2017-12-08T01:04:36.454Z"}
{"level":"info","message":"adding a POST url and callback","timestamp":"2017-12-08T01:04:51.532Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T01:04:51.533Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[6]++;cov_22s6dd2wjj.s[26]++;\n  if (!request.body) {/* istanbul ignore next */cov_22s6dd2wjj.b[1][0]++;cov_22s6dd2wjj.s[27]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[1][1]++;}cov_22s6dd2wjj.s[29]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_22s6dd2wjj.b[2][0]++;cov_22s6dd2wjj.s[30]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[2][1]++;}cov_22s6dd2wjj.s[32]++;\n  if (!request.body.state) {/* istanbul ignore next */cov_22s6dd2wjj.b[3][0]++;cov_22s6dd2wjj.s[33]++;\n    sendStatus(response, 400, 'state not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[3][1]++;}cov_22s6dd2wjj.s[35]++;\n  if (!request.body.hiking) {/* istanbul ignore next */cov_22s6dd2wjj.b[4][0]++;cov_22s6dd2wjj.s[36]++;\n    sendStatus(response, 400, 'hiking info not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[4][1]++;}cov_22s6dd2wjj.s[38]++;\n  if (!request.body.range) {/* istanbul ignore next */cov_22s6dd2wjj.b[5][0]++;cov_22s6dd2wjj.s[39]++;\n    sendStatus(response, 400, 'range name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[40]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[5][1]++;}\n  let mountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[41]++, new Mountain(\n  request.body.name,\n  request.body.state,\n  request.body.hiking,\n  request.body.range)); /* istanbul ignore next */cov_22s6dd2wjj.s[42]++;\n\n\n  mountains.push(mountain); /* istanbul ignore next */cov_22s6dd2wjj.s[43]++;\n  sendJSON(response, 200, mountain);\n}","timestamp":"2017-12-08T01:04:51.533Z"}
{"level":"info","message":"adding a GET url and callback","timestamp":"2017-12-08T01:04:51.533Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T01:04:51.533Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[7]++;\n  let id = /* istanbul ignore next */(cov_22s6dd2wjj.s[45]++, request.url.query.id); /* istanbul ignore next */cov_22s6dd2wjj.s[46]++;\n\n  if (id) {/* istanbul ignore next */cov_22s6dd2wjj.b[6][0]++;\n    let requestMountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[47]++, getMountainById(id)); /* istanbul ignore next */cov_22s6dd2wjj.s[48]++;\n    if (requestMountain)\n      {/* istanbul ignore next */cov_22s6dd2wjj.b[7][0]++;cov_22s6dd2wjj.s[49]++;sendJSON(request, 200, requestMountain);} else\n\n      {/* istanbul ignore next */cov_22s6dd2wjj.b[7][1]++;cov_22s6dd2wjj.s[50]++;sendStatus(response, 404, `no mountain found with the id of ${id}`);}\n  } else\n    {/* istanbul ignore next */cov_22s6dd2wjj.b[6][1]++;cov_22s6dd2wjj.s[51]++;sendJSON(response, 200, mountains);}\n}","timestamp":"2017-12-08T01:04:51.533Z"}
{"level":"info","message":"adding a DELETE url and callback","timestamp":"2017-12-08T01:04:51.533Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T01:04:51.533Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[8]++;\n  let id = /* istanbul ignore next */(cov_22s6dd2wjj.s[53]++, request.url.query.id); /* istanbul ignore next */cov_22s6dd2wjj.s[54]++;\n  if (id) {/* istanbul ignore next */cov_22s6dd2wjj.b[8][0]++;\n    let deletedMountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[55]++, deleteMountainById(id)); /* istanbul ignore next */cov_22s6dd2wjj.s[56]++;\n    if (deletedMountain) {/* istanbul ignore next */cov_22s6dd2wjj.b[9][0]++;cov_22s6dd2wjj.s[57]++;\n      logger.log('info', `Mountain deleted, responding with a 200 success code`); /* istanbul ignore next */cov_22s6dd2wjj.s[58]++;\n      response.writeHead(200); /* istanbul ignore next */cov_22s6dd2wjj.s[59]++;\n      response.end();\n    } else\n      {/* istanbul ignore next */cov_22s6dd2wjj.b[9][1]++;cov_22s6dd2wjj.s[60]++;sendStatus(response, 404, `No mountain was found with an id ${id}`);}\n  } else\n    {/* istanbul ignore next */cov_22s6dd2wjj.b[8][1]++;cov_22s6dd2wjj.s[61]++;sendStatus(response, 400, `something else occurred - bad request.`);}\n}","timestamp":"2017-12-08T01:04:51.533Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T01:04:51.588Z"}
{"level":"info","message":"Original URL: \"/api/mountains\"","timestamp":"2017-12-08T01:04:51.589Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/mountains\",\"path\":\"/api/mountains\",\"href\":\"/api/mountains\"}","timestamp":"2017-12-08T01:04:51.589Z"}
{"level":"info","message":"found the following handler","timestamp":"2017-12-08T01:04:51.589Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[6]++;cov_22s6dd2wjj.s[26]++;\n  if (!request.body) {/* istanbul ignore next */cov_22s6dd2wjj.b[1][0]++;cov_22s6dd2wjj.s[27]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[1][1]++;}cov_22s6dd2wjj.s[29]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_22s6dd2wjj.b[2][0]++;cov_22s6dd2wjj.s[30]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[2][1]++;}cov_22s6dd2wjj.s[32]++;\n  if (!request.body.state) {/* istanbul ignore next */cov_22s6dd2wjj.b[3][0]++;cov_22s6dd2wjj.s[33]++;\n    sendStatus(response, 400, 'state not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[3][1]++;}cov_22s6dd2wjj.s[35]++;\n  if (!request.body.hiking) {/* istanbul ignore next */cov_22s6dd2wjj.b[4][0]++;cov_22s6dd2wjj.s[36]++;\n    sendStatus(response, 400, 'hiking info not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[4][1]++;}cov_22s6dd2wjj.s[38]++;\n  if (!request.body.range) {/* istanbul ignore next */cov_22s6dd2wjj.b[5][0]++;cov_22s6dd2wjj.s[39]++;\n    sendStatus(response, 400, 'range name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[40]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[5][1]++;}\n  let mountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[41]++, new Mountain(\n  request.body.name,\n  request.body.state,\n  request.body.hiking,\n  request.body.range)); /* istanbul ignore next */cov_22s6dd2wjj.s[42]++;\n\n\n  mountains.push(mountain); /* istanbul ignore next */cov_22s6dd2wjj.s[43]++;\n  sendJSON(response, 200, mountain);\n}","timestamp":"2017-12-08T01:04:51.590Z"}
{"level":"info","message":"responding with a 200 code and the following json data","timestamp":"2017-12-08T01:04:51.590Z"}
{"id":"cb61c260-dbb3-11e7-a1c6-15de5f36c851","name":"Shuksan","state":"Washington","hiking":"Yes","range":"Cascades","level":"info","message":"","timestamp":"2017-12-08T01:04:51.590Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T01:04:51.599Z"}
{"level":"info","message":"Original URL: \"/api/mountains?id=$333-33\"","timestamp":"2017-12-08T01:04:51.599Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=$333-33\",\"query\":{\"id\":\"$333-33\"},\"pathname\":\"/api/mountains\",\"path\":\"/api/mountains?id=$333-33\",\"href\":\"/api/mountains?id=$333-33\"}","timestamp":"2017-12-08T01:04:51.599Z"}
{"level":"info","message":"found the following handler","timestamp":"2017-12-08T01:04:51.599Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[7]++;\n  let id = /* istanbul ignore next */(cov_22s6dd2wjj.s[45]++, request.url.query.id); /* istanbul ignore next */cov_22s6dd2wjj.s[46]++;\n\n  if (id) {/* istanbul ignore next */cov_22s6dd2wjj.b[6][0]++;\n    let requestMountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[47]++, getMountainById(id)); /* istanbul ignore next */cov_22s6dd2wjj.s[48]++;\n    if (requestMountain)\n      {/* istanbul ignore next */cov_22s6dd2wjj.b[7][0]++;cov_22s6dd2wjj.s[49]++;sendJSON(request, 200, requestMountain);} else\n\n      {/* istanbul ignore next */cov_22s6dd2wjj.b[7][1]++;cov_22s6dd2wjj.s[50]++;sendStatus(response, 404, `no mountain found with the id of ${id}`);}\n  } else\n    {/* istanbul ignore next */cov_22s6dd2wjj.b[6][1]++;cov_22s6dd2wjj.s[51]++;sendJSON(response, 200, mountains);}\n}","timestamp":"2017-12-08T01:04:51.599Z"}
{"level":"info","message":"Responding with a 404 code due to no mountain found with the id of $333-33","timestamp":"2017-12-08T01:04:51.600Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T01:04:51.602Z"}
{"level":"info","message":"Original URL: \"/api/mountains\"","timestamp":"2017-12-08T01:04:51.602Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/mountains\",\"path\":\"/api/mountains\",\"href\":\"/api/mountains\"}","timestamp":"2017-12-08T01:04:51.602Z"}
{"level":"info","message":"found the following handler","timestamp":"2017-12-08T01:04:51.602Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[7]++;\n  let id = /* istanbul ignore next */(cov_22s6dd2wjj.s[45]++, request.url.query.id); /* istanbul ignore next */cov_22s6dd2wjj.s[46]++;\n\n  if (id) {/* istanbul ignore next */cov_22s6dd2wjj.b[6][0]++;\n    let requestMountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[47]++, getMountainById(id)); /* istanbul ignore next */cov_22s6dd2wjj.s[48]++;\n    if (requestMountain)\n      {/* istanbul ignore next */cov_22s6dd2wjj.b[7][0]++;cov_22s6dd2wjj.s[49]++;sendJSON(request, 200, requestMountain);} else\n\n      {/* istanbul ignore next */cov_22s6dd2wjj.b[7][1]++;cov_22s6dd2wjj.s[50]++;sendStatus(response, 404, `no mountain found with the id of ${id}`);}\n  } else\n    {/* istanbul ignore next */cov_22s6dd2wjj.b[6][1]++;cov_22s6dd2wjj.s[51]++;sendJSON(response, 200, mountains);}\n}","timestamp":"2017-12-08T01:04:51.602Z"}
{"level":"info","message":"responding with a 200 code and the following json data","timestamp":"2017-12-08T01:04:51.602Z"}
[{"id":"cb61c260-dbb3-11e7-a1c6-15de5f36c851","name":"Shuksan","state":"Washington","hiking":"Yes","range":"Cascades"}]
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T01:04:51.647Z"}
{"level":"info","message":"Original URL: \"/api/mountains\"","timestamp":"2017-12-08T01:04:51.647Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/mountains\",\"path\":\"/api/mountains\",\"href\":\"/api/mountains\"}","timestamp":"2017-12-08T01:04:51.648Z"}
{"level":"info","message":"found the following handler","timestamp":"2017-12-08T01:04:51.648Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[6]++;cov_22s6dd2wjj.s[26]++;\n  if (!request.body) {/* istanbul ignore next */cov_22s6dd2wjj.b[1][0]++;cov_22s6dd2wjj.s[27]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[1][1]++;}cov_22s6dd2wjj.s[29]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_22s6dd2wjj.b[2][0]++;cov_22s6dd2wjj.s[30]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[2][1]++;}cov_22s6dd2wjj.s[32]++;\n  if (!request.body.state) {/* istanbul ignore next */cov_22s6dd2wjj.b[3][0]++;cov_22s6dd2wjj.s[33]++;\n    sendStatus(response, 400, 'state not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[3][1]++;}cov_22s6dd2wjj.s[35]++;\n  if (!request.body.hiking) {/* istanbul ignore next */cov_22s6dd2wjj.b[4][0]++;cov_22s6dd2wjj.s[36]++;\n    sendStatus(response, 400, 'hiking info not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[4][1]++;}cov_22s6dd2wjj.s[38]++;\n  if (!request.body.range) {/* istanbul ignore next */cov_22s6dd2wjj.b[5][0]++;cov_22s6dd2wjj.s[39]++;\n    sendStatus(response, 400, 'range name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[40]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[5][1]++;}\n  let mountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[41]++, new Mountain(\n  request.body.name,\n  request.body.state,\n  request.body.hiking,\n  request.body.range)); /* istanbul ignore next */cov_22s6dd2wjj.s[42]++;\n\n\n  mountains.push(mountain); /* istanbul ignore next */cov_22s6dd2wjj.s[43]++;\n  sendJSON(response, 200, mountain);\n}","timestamp":"2017-12-08T01:04:51.648Z"}
{"level":"info","message":"Responding with a 400 code due to name not found","timestamp":"2017-12-08T01:04:51.648Z"}
{"level":"info","message":"adding a POST url and callback","timestamp":"2017-12-08T01:05:17.286Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T01:05:17.286Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[6]++;cov_22s6dd2wjj.s[26]++;\n  if (!request.body) {/* istanbul ignore next */cov_22s6dd2wjj.b[1][0]++;cov_22s6dd2wjj.s[27]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[1][1]++;}cov_22s6dd2wjj.s[29]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_22s6dd2wjj.b[2][0]++;cov_22s6dd2wjj.s[30]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[2][1]++;}cov_22s6dd2wjj.s[32]++;\n  if (!request.body.state) {/* istanbul ignore next */cov_22s6dd2wjj.b[3][0]++;cov_22s6dd2wjj.s[33]++;\n    sendStatus(response, 400, 'state not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[3][1]++;}cov_22s6dd2wjj.s[35]++;\n  if (!request.body.hiking) {/* istanbul ignore next */cov_22s6dd2wjj.b[4][0]++;cov_22s6dd2wjj.s[36]++;\n    sendStatus(response, 400, 'hiking info not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[4][1]++;}cov_22s6dd2wjj.s[38]++;\n  if (!request.body.range) {/* istanbul ignore next */cov_22s6dd2wjj.b[5][0]++;cov_22s6dd2wjj.s[39]++;\n    sendStatus(response, 400, 'range name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[40]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[5][1]++;}\n  let mountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[41]++, new Mountain(\n  request.body.name,\n  request.body.state,\n  request.body.hiking,\n  request.body.range)); /* istanbul ignore next */cov_22s6dd2wjj.s[42]++;\n\n\n  mountains.push(mountain); /* istanbul ignore next */cov_22s6dd2wjj.s[43]++;\n  sendJSON(response, 200, mountain);\n}","timestamp":"2017-12-08T01:05:17.286Z"}
{"level":"info","message":"adding a GET url and callback","timestamp":"2017-12-08T01:05:17.286Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T01:05:17.286Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[7]++;\n  let id = /* istanbul ignore next */(cov_22s6dd2wjj.s[45]++, request.url.query.id); /* istanbul ignore next */cov_22s6dd2wjj.s[46]++;\n\n  if (id) {/* istanbul ignore next */cov_22s6dd2wjj.b[6][0]++;\n    let requestMountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[47]++, getMountainById(id)); /* istanbul ignore next */cov_22s6dd2wjj.s[48]++;\n    if (requestMountain)\n      {/* istanbul ignore next */cov_22s6dd2wjj.b[7][0]++;cov_22s6dd2wjj.s[49]++;sendJSON(request, 200, requestMountain);} else\n\n      {/* istanbul ignore next */cov_22s6dd2wjj.b[7][1]++;cov_22s6dd2wjj.s[50]++;sendStatus(response, 404, `no mountain found with the id of ${id}`);}\n  } else\n    {/* istanbul ignore next */cov_22s6dd2wjj.b[6][1]++;cov_22s6dd2wjj.s[51]++;sendJSON(response, 200, mountains);}\n}","timestamp":"2017-12-08T01:05:17.286Z"}
{"level":"info","message":"adding a DELETE url and callback","timestamp":"2017-12-08T01:05:17.287Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T01:05:17.287Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[8]++;\n  let id = /* istanbul ignore next */(cov_22s6dd2wjj.s[53]++, request.url.query.id); /* istanbul ignore next */cov_22s6dd2wjj.s[54]++;\n  if (id) {/* istanbul ignore next */cov_22s6dd2wjj.b[8][0]++;\n    let deletedMountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[55]++, deleteMountainById(id)); /* istanbul ignore next */cov_22s6dd2wjj.s[56]++;\n    if (deletedMountain) {/* istanbul ignore next */cov_22s6dd2wjj.b[9][0]++;cov_22s6dd2wjj.s[57]++;\n      logger.log('info', `Mountain deleted, responding with a 200 success code`); /* istanbul ignore next */cov_22s6dd2wjj.s[58]++;\n      response.writeHead(200); /* istanbul ignore next */cov_22s6dd2wjj.s[59]++;\n      response.end();\n    } else\n      {/* istanbul ignore next */cov_22s6dd2wjj.b[9][1]++;cov_22s6dd2wjj.s[60]++;sendStatus(response, 404, `No mountain was found with an id ${id}`);}\n  } else\n    {/* istanbul ignore next */cov_22s6dd2wjj.b[8][1]++;cov_22s6dd2wjj.s[61]++;sendStatus(response, 400, `something else occurred - bad request.`);}\n}","timestamp":"2017-12-08T01:05:17.287Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T01:05:17.349Z"}
{"level":"info","message":"Original URL: \"/api/mountains\"","timestamp":"2017-12-08T01:05:17.349Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/mountains\",\"path\":\"/api/mountains\",\"href\":\"/api/mountains\"}","timestamp":"2017-12-08T01:05:17.349Z"}
{"level":"info","message":"found the following handler","timestamp":"2017-12-08T01:05:17.350Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[6]++;cov_22s6dd2wjj.s[26]++;\n  if (!request.body) {/* istanbul ignore next */cov_22s6dd2wjj.b[1][0]++;cov_22s6dd2wjj.s[27]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[1][1]++;}cov_22s6dd2wjj.s[29]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_22s6dd2wjj.b[2][0]++;cov_22s6dd2wjj.s[30]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[2][1]++;}cov_22s6dd2wjj.s[32]++;\n  if (!request.body.state) {/* istanbul ignore next */cov_22s6dd2wjj.b[3][0]++;cov_22s6dd2wjj.s[33]++;\n    sendStatus(response, 400, 'state not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[3][1]++;}cov_22s6dd2wjj.s[35]++;\n  if (!request.body.hiking) {/* istanbul ignore next */cov_22s6dd2wjj.b[4][0]++;cov_22s6dd2wjj.s[36]++;\n    sendStatus(response, 400, 'hiking info not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[4][1]++;}cov_22s6dd2wjj.s[38]++;\n  if (!request.body.range) {/* istanbul ignore next */cov_22s6dd2wjj.b[5][0]++;cov_22s6dd2wjj.s[39]++;\n    sendStatus(response, 400, 'range name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[40]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[5][1]++;}\n  let mountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[41]++, new Mountain(\n  request.body.name,\n  request.body.state,\n  request.body.hiking,\n  request.body.range)); /* istanbul ignore next */cov_22s6dd2wjj.s[42]++;\n\n\n  mountains.push(mountain); /* istanbul ignore next */cov_22s6dd2wjj.s[43]++;\n  sendJSON(response, 200, mountain);\n}","timestamp":"2017-12-08T01:05:17.350Z"}
{"level":"info","message":"responding with a 200 code and the following json data","timestamp":"2017-12-08T01:05:17.350Z"}
{"id":"dabc6c60-dbb3-11e7-96bb-191fdebbb537","name":"Shuksan","state":"Washington","hiking":"Yes","range":"Cascades","level":"info","message":"","timestamp":"2017-12-08T01:05:17.350Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T01:05:17.361Z"}
{"level":"info","message":"Original URL: \"/api/mountains?id=$333-33\"","timestamp":"2017-12-08T01:05:17.361Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=$333-33\",\"query\":{\"id\":\"$333-33\"},\"pathname\":\"/api/mountains\",\"path\":\"/api/mountains?id=$333-33\",\"href\":\"/api/mountains?id=$333-33\"}","timestamp":"2017-12-08T01:05:17.362Z"}
{"level":"info","message":"found the following handler","timestamp":"2017-12-08T01:05:17.362Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[7]++;\n  let id = /* istanbul ignore next */(cov_22s6dd2wjj.s[45]++, request.url.query.id); /* istanbul ignore next */cov_22s6dd2wjj.s[46]++;\n\n  if (id) {/* istanbul ignore next */cov_22s6dd2wjj.b[6][0]++;\n    let requestMountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[47]++, getMountainById(id)); /* istanbul ignore next */cov_22s6dd2wjj.s[48]++;\n    if (requestMountain)\n      {/* istanbul ignore next */cov_22s6dd2wjj.b[7][0]++;cov_22s6dd2wjj.s[49]++;sendJSON(request, 200, requestMountain);} else\n\n      {/* istanbul ignore next */cov_22s6dd2wjj.b[7][1]++;cov_22s6dd2wjj.s[50]++;sendStatus(response, 404, `no mountain found with the id of ${id}`);}\n  } else\n    {/* istanbul ignore next */cov_22s6dd2wjj.b[6][1]++;cov_22s6dd2wjj.s[51]++;sendJSON(response, 200, mountains);}\n}","timestamp":"2017-12-08T01:05:17.362Z"}
{"level":"info","message":"Responding with a 404 code due to no mountain found with the id of $333-33","timestamp":"2017-12-08T01:05:17.362Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T01:05:17.365Z"}
{"level":"info","message":"Original URL: \"/api/mountains?id=e8013d70-dbad-11e7-9cb6-ddffa32a3c9b\"","timestamp":"2017-12-08T01:05:17.365Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=e8013d70-dbad-11e7-9cb6-ddffa32a3c9b\",\"query\":{\"id\":\"e8013d70-dbad-11e7-9cb6-ddffa32a3c9b\"},\"pathname\":\"/api/mountains\",\"path\":\"/api/mountains?id=e8013d70-dbad-11e7-9cb6-ddffa32a3c9b\",\"href\":\"/api/mountains?id=e8013d70-dbad-11e7-9cb6-ddffa32a3c9b\"}","timestamp":"2017-12-08T01:05:17.365Z"}
{"level":"info","message":"found the following handler","timestamp":"2017-12-08T01:05:17.365Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[7]++;\n  let id = /* istanbul ignore next */(cov_22s6dd2wjj.s[45]++, request.url.query.id); /* istanbul ignore next */cov_22s6dd2wjj.s[46]++;\n\n  if (id) {/* istanbul ignore next */cov_22s6dd2wjj.b[6][0]++;\n    let requestMountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[47]++, getMountainById(id)); /* istanbul ignore next */cov_22s6dd2wjj.s[48]++;\n    if (requestMountain)\n      {/* istanbul ignore next */cov_22s6dd2wjj.b[7][0]++;cov_22s6dd2wjj.s[49]++;sendJSON(request, 200, requestMountain);} else\n\n      {/* istanbul ignore next */cov_22s6dd2wjj.b[7][1]++;cov_22s6dd2wjj.s[50]++;sendStatus(response, 404, `no mountain found with the id of ${id}`);}\n  } else\n    {/* istanbul ignore next */cov_22s6dd2wjj.b[6][1]++;cov_22s6dd2wjj.s[51]++;sendJSON(response, 200, mountains);}\n}","timestamp":"2017-12-08T01:05:17.365Z"}
{"level":"info","message":"Responding with a 404 code due to no mountain found with the id of e8013d70-dbad-11e7-9cb6-ddffa32a3c9b","timestamp":"2017-12-08T01:05:17.365Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T01:05:17.368Z"}
{"level":"info","message":"Original URL: \"/api/mountains\"","timestamp":"2017-12-08T01:05:17.368Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/mountains\",\"path\":\"/api/mountains\",\"href\":\"/api/mountains\"}","timestamp":"2017-12-08T01:05:17.368Z"}
{"level":"info","message":"found the following handler","timestamp":"2017-12-08T01:05:17.368Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[6]++;cov_22s6dd2wjj.s[26]++;\n  if (!request.body) {/* istanbul ignore next */cov_22s6dd2wjj.b[1][0]++;cov_22s6dd2wjj.s[27]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[1][1]++;}cov_22s6dd2wjj.s[29]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_22s6dd2wjj.b[2][0]++;cov_22s6dd2wjj.s[30]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[2][1]++;}cov_22s6dd2wjj.s[32]++;\n  if (!request.body.state) {/* istanbul ignore next */cov_22s6dd2wjj.b[3][0]++;cov_22s6dd2wjj.s[33]++;\n    sendStatus(response, 400, 'state not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[3][1]++;}cov_22s6dd2wjj.s[35]++;\n  if (!request.body.hiking) {/* istanbul ignore next */cov_22s6dd2wjj.b[4][0]++;cov_22s6dd2wjj.s[36]++;\n    sendStatus(response, 400, 'hiking info not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[4][1]++;}cov_22s6dd2wjj.s[38]++;\n  if (!request.body.range) {/* istanbul ignore next */cov_22s6dd2wjj.b[5][0]++;cov_22s6dd2wjj.s[39]++;\n    sendStatus(response, 400, 'range name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[40]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[5][1]++;}\n  let mountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[41]++, new Mountain(\n  request.body.name,\n  request.body.state,\n  request.body.hiking,\n  request.body.range)); /* istanbul ignore next */cov_22s6dd2wjj.s[42]++;\n\n\n  mountains.push(mountain); /* istanbul ignore next */cov_22s6dd2wjj.s[43]++;\n  sendJSON(response, 200, mountain);\n}","timestamp":"2017-12-08T01:05:17.368Z"}
{"level":"info","message":"Responding with a 400 code due to name not found","timestamp":"2017-12-08T01:05:17.368Z"}
{"level":"info","message":"adding a POST url and callback","timestamp":"2017-12-08T01:10:44.474Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T01:10:44.475Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[6]++;cov_22s6dd2wjj.s[26]++;\n  if (!request.body) {/* istanbul ignore next */cov_22s6dd2wjj.b[1][0]++;cov_22s6dd2wjj.s[27]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[1][1]++;}cov_22s6dd2wjj.s[29]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_22s6dd2wjj.b[2][0]++;cov_22s6dd2wjj.s[30]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[2][1]++;}cov_22s6dd2wjj.s[32]++;\n  if (!request.body.state) {/* istanbul ignore next */cov_22s6dd2wjj.b[3][0]++;cov_22s6dd2wjj.s[33]++;\n    sendStatus(response, 400, 'state not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[3][1]++;}cov_22s6dd2wjj.s[35]++;\n  if (!request.body.hiking) {/* istanbul ignore next */cov_22s6dd2wjj.b[4][0]++;cov_22s6dd2wjj.s[36]++;\n    sendStatus(response, 400, 'hiking info not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[4][1]++;}cov_22s6dd2wjj.s[38]++;\n  if (!request.body.range) {/* istanbul ignore next */cov_22s6dd2wjj.b[5][0]++;cov_22s6dd2wjj.s[39]++;\n    sendStatus(response, 400, 'range name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[40]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[5][1]++;}\n  let mountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[41]++, new Mountain(\n  request.body.name,\n  request.body.state,\n  request.body.hiking,\n  request.body.range)); /* istanbul ignore next */cov_22s6dd2wjj.s[42]++;\n\n\n  mountains.push(mountain); /* istanbul ignore next */cov_22s6dd2wjj.s[43]++;\n  sendJSON(response, 200, mountain);\n}","timestamp":"2017-12-08T01:10:44.475Z"}
{"level":"info","message":"adding a GET url and callback","timestamp":"2017-12-08T01:10:44.475Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T01:10:44.475Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[7]++;\n  let id = /* istanbul ignore next */(cov_22s6dd2wjj.s[45]++, request.url.query.id); /* istanbul ignore next */cov_22s6dd2wjj.s[46]++;\n\n  if (id) {/* istanbul ignore next */cov_22s6dd2wjj.b[6][0]++;\n    let requestMountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[47]++, getMountainById(id)); /* istanbul ignore next */cov_22s6dd2wjj.s[48]++;\n    if (requestMountain)\n      {/* istanbul ignore next */cov_22s6dd2wjj.b[7][0]++;cov_22s6dd2wjj.s[49]++;sendJSON(response, 200, requestMountain);} else\n\n      {/* istanbul ignore next */cov_22s6dd2wjj.b[7][1]++;cov_22s6dd2wjj.s[50]++;sendStatus(response, 404, `no mountain found with the id of ${id}`);}\n  } else\n    {/* istanbul ignore next */cov_22s6dd2wjj.b[6][1]++;cov_22s6dd2wjj.s[51]++;sendJSON(response, 200, mountains);}\n}","timestamp":"2017-12-08T01:10:44.475Z"}
{"level":"info","message":"adding a DELETE url and callback","timestamp":"2017-12-08T01:10:44.475Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T01:10:44.475Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[8]++;\n  let id = /* istanbul ignore next */(cov_22s6dd2wjj.s[53]++, request.url.query.id); /* istanbul ignore next */cov_22s6dd2wjj.s[54]++;\n  if (id) {/* istanbul ignore next */cov_22s6dd2wjj.b[8][0]++;\n    let deletedMountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[55]++, deleteMountainById(id)); /* istanbul ignore next */cov_22s6dd2wjj.s[56]++;\n    if (deletedMountain) {/* istanbul ignore next */cov_22s6dd2wjj.b[9][0]++;cov_22s6dd2wjj.s[57]++;\n      logger.log('info', `Mountain deleted, responding with a 200 success code`); /* istanbul ignore next */cov_22s6dd2wjj.s[58]++;\n      response.writeHead(200); /* istanbul ignore next */cov_22s6dd2wjj.s[59]++;\n      response.end();\n    } else\n      {/* istanbul ignore next */cov_22s6dd2wjj.b[9][1]++;cov_22s6dd2wjj.s[60]++;sendStatus(response, 404, `No mountain was found with an id ${id}`);}\n  } else\n    {/* istanbul ignore next */cov_22s6dd2wjj.b[8][1]++;cov_22s6dd2wjj.s[61]++;sendStatus(response, 400, `something else occurred - bad request.`);}\n}","timestamp":"2017-12-08T01:10:44.475Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T01:10:44.574Z"}
{"level":"info","message":"Original URL: \"/api/mountains\"","timestamp":"2017-12-08T01:10:44.575Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/mountains\",\"path\":\"/api/mountains\",\"href\":\"/api/mountains\"}","timestamp":"2017-12-08T01:10:44.575Z"}
{"level":"info","message":"found the following handler","timestamp":"2017-12-08T01:10:44.575Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[6]++;cov_22s6dd2wjj.s[26]++;\n  if (!request.body) {/* istanbul ignore next */cov_22s6dd2wjj.b[1][0]++;cov_22s6dd2wjj.s[27]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[1][1]++;}cov_22s6dd2wjj.s[29]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_22s6dd2wjj.b[2][0]++;cov_22s6dd2wjj.s[30]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[2][1]++;}cov_22s6dd2wjj.s[32]++;\n  if (!request.body.state) {/* istanbul ignore next */cov_22s6dd2wjj.b[3][0]++;cov_22s6dd2wjj.s[33]++;\n    sendStatus(response, 400, 'state not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[3][1]++;}cov_22s6dd2wjj.s[35]++;\n  if (!request.body.hiking) {/* istanbul ignore next */cov_22s6dd2wjj.b[4][0]++;cov_22s6dd2wjj.s[36]++;\n    sendStatus(response, 400, 'hiking info not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[4][1]++;}cov_22s6dd2wjj.s[38]++;\n  if (!request.body.range) {/* istanbul ignore next */cov_22s6dd2wjj.b[5][0]++;cov_22s6dd2wjj.s[39]++;\n    sendStatus(response, 400, 'range name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[40]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[5][1]++;}\n  let mountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[41]++, new Mountain(\n  request.body.name,\n  request.body.state,\n  request.body.hiking,\n  request.body.range)); /* istanbul ignore next */cov_22s6dd2wjj.s[42]++;\n\n\n  mountains.push(mountain); /* istanbul ignore next */cov_22s6dd2wjj.s[43]++;\n  sendJSON(response, 200, mountain);\n}","timestamp":"2017-12-08T01:10:44.575Z"}
{"level":"info","message":"responding with a 200 code and the following json data","timestamp":"2017-12-08T01:10:44.576Z"}
{"id":"9dc72600-dbb4-11e7-a5cf-6f27b38e1de4","name":"Shuksan","state":"Washington","hiking":"Yes","range":"Cascades","level":"info","message":"","timestamp":"2017-12-08T01:10:44.576Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T01:10:44.585Z"}
{"level":"info","message":"Original URL: \"/api/mountains?id=$333-33\"","timestamp":"2017-12-08T01:10:44.585Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=$333-33\",\"query\":{\"id\":\"$333-33\"},\"pathname\":\"/api/mountains\",\"path\":\"/api/mountains?id=$333-33\",\"href\":\"/api/mountains?id=$333-33\"}","timestamp":"2017-12-08T01:10:44.585Z"}
{"level":"info","message":"found the following handler","timestamp":"2017-12-08T01:10:44.585Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[7]++;\n  let id = /* istanbul ignore next */(cov_22s6dd2wjj.s[45]++, request.url.query.id); /* istanbul ignore next */cov_22s6dd2wjj.s[46]++;\n\n  if (id) {/* istanbul ignore next */cov_22s6dd2wjj.b[6][0]++;\n    let requestMountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[47]++, getMountainById(id)); /* istanbul ignore next */cov_22s6dd2wjj.s[48]++;\n    if (requestMountain)\n      {/* istanbul ignore next */cov_22s6dd2wjj.b[7][0]++;cov_22s6dd2wjj.s[49]++;sendJSON(response, 200, requestMountain);} else\n\n      {/* istanbul ignore next */cov_22s6dd2wjj.b[7][1]++;cov_22s6dd2wjj.s[50]++;sendStatus(response, 404, `no mountain found with the id of ${id}`);}\n  } else\n    {/* istanbul ignore next */cov_22s6dd2wjj.b[6][1]++;cov_22s6dd2wjj.s[51]++;sendJSON(response, 200, mountains);}\n}","timestamp":"2017-12-08T01:10:44.585Z"}
{"level":"info","message":"Responding with a 404 code due to no mountain found with the id of $333-33","timestamp":"2017-12-08T01:10:44.585Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T01:10:44.588Z"}
{"level":"info","message":"Original URL: \"/api/mountains?id=e8013d70-dbad-11e7-9cb6-ddffa32a3c9b\"","timestamp":"2017-12-08T01:10:44.588Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=e8013d70-dbad-11e7-9cb6-ddffa32a3c9b\",\"query\":{\"id\":\"e8013d70-dbad-11e7-9cb6-ddffa32a3c9b\"},\"pathname\":\"/api/mountains\",\"path\":\"/api/mountains?id=e8013d70-dbad-11e7-9cb6-ddffa32a3c9b\",\"href\":\"/api/mountains?id=e8013d70-dbad-11e7-9cb6-ddffa32a3c9b\"}","timestamp":"2017-12-08T01:10:44.588Z"}
{"level":"info","message":"found the following handler","timestamp":"2017-12-08T01:10:44.588Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[7]++;\n  let id = /* istanbul ignore next */(cov_22s6dd2wjj.s[45]++, request.url.query.id); /* istanbul ignore next */cov_22s6dd2wjj.s[46]++;\n\n  if (id) {/* istanbul ignore next */cov_22s6dd2wjj.b[6][0]++;\n    let requestMountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[47]++, getMountainById(id)); /* istanbul ignore next */cov_22s6dd2wjj.s[48]++;\n    if (requestMountain)\n      {/* istanbul ignore next */cov_22s6dd2wjj.b[7][0]++;cov_22s6dd2wjj.s[49]++;sendJSON(response, 200, requestMountain);} else\n\n      {/* istanbul ignore next */cov_22s6dd2wjj.b[7][1]++;cov_22s6dd2wjj.s[50]++;sendStatus(response, 404, `no mountain found with the id of ${id}`);}\n  } else\n    {/* istanbul ignore next */cov_22s6dd2wjj.b[6][1]++;cov_22s6dd2wjj.s[51]++;sendJSON(response, 200, mountains);}\n}","timestamp":"2017-12-08T01:10:44.588Z"}
{"level":"info","message":"Responding with a 404 code due to no mountain found with the id of e8013d70-dbad-11e7-9cb6-ddffa32a3c9b","timestamp":"2017-12-08T01:10:44.588Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T01:10:44.590Z"}
{"level":"info","message":"Original URL: \"/api/mountains\"","timestamp":"2017-12-08T01:10:44.590Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/mountains\",\"path\":\"/api/mountains\",\"href\":\"/api/mountains\"}","timestamp":"2017-12-08T01:10:44.590Z"}
{"level":"info","message":"found the following handler","timestamp":"2017-12-08T01:10:44.591Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[6]++;cov_22s6dd2wjj.s[26]++;\n  if (!request.body) {/* istanbul ignore next */cov_22s6dd2wjj.b[1][0]++;cov_22s6dd2wjj.s[27]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[1][1]++;}cov_22s6dd2wjj.s[29]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_22s6dd2wjj.b[2][0]++;cov_22s6dd2wjj.s[30]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[2][1]++;}cov_22s6dd2wjj.s[32]++;\n  if (!request.body.state) {/* istanbul ignore next */cov_22s6dd2wjj.b[3][0]++;cov_22s6dd2wjj.s[33]++;\n    sendStatus(response, 400, 'state not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[3][1]++;}cov_22s6dd2wjj.s[35]++;\n  if (!request.body.hiking) {/* istanbul ignore next */cov_22s6dd2wjj.b[4][0]++;cov_22s6dd2wjj.s[36]++;\n    sendStatus(response, 400, 'hiking info not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[4][1]++;}cov_22s6dd2wjj.s[38]++;\n  if (!request.body.range) {/* istanbul ignore next */cov_22s6dd2wjj.b[5][0]++;cov_22s6dd2wjj.s[39]++;\n    sendStatus(response, 400, 'range name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[40]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[5][1]++;}\n  let mountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[41]++, new Mountain(\n  request.body.name,\n  request.body.state,\n  request.body.hiking,\n  request.body.range)); /* istanbul ignore next */cov_22s6dd2wjj.s[42]++;\n\n\n  mountains.push(mountain); /* istanbul ignore next */cov_22s6dd2wjj.s[43]++;\n  sendJSON(response, 200, mountain);\n}","timestamp":"2017-12-08T01:10:44.591Z"}
{"level":"info","message":"Responding with a 400 code due to name not found","timestamp":"2017-12-08T01:10:44.591Z"}
{"level":"info","message":"adding a POST url and callback","timestamp":"2017-12-08T01:11:47.327Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T01:11:47.328Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[6]++;cov_22s6dd2wjj.s[26]++;\n  if (!request.body) {/* istanbul ignore next */cov_22s6dd2wjj.b[1][0]++;cov_22s6dd2wjj.s[27]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[1][1]++;}cov_22s6dd2wjj.s[29]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_22s6dd2wjj.b[2][0]++;cov_22s6dd2wjj.s[30]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[2][1]++;}cov_22s6dd2wjj.s[32]++;\n  if (!request.body.state) {/* istanbul ignore next */cov_22s6dd2wjj.b[3][0]++;cov_22s6dd2wjj.s[33]++;\n    sendStatus(response, 400, 'state not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[3][1]++;}cov_22s6dd2wjj.s[35]++;\n  if (!request.body.hiking) {/* istanbul ignore next */cov_22s6dd2wjj.b[4][0]++;cov_22s6dd2wjj.s[36]++;\n    sendStatus(response, 400, 'hiking info not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[4][1]++;}cov_22s6dd2wjj.s[38]++;\n  if (!request.body.range) {/* istanbul ignore next */cov_22s6dd2wjj.b[5][0]++;cov_22s6dd2wjj.s[39]++;\n    sendStatus(response, 400, 'range name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[40]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[5][1]++;}\n  let mountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[41]++, new Mountain(\n  request.body.name,\n  request.body.state,\n  request.body.hiking,\n  request.body.range)); /* istanbul ignore next */cov_22s6dd2wjj.s[42]++;\n\n\n  mountains.push(mountain); /* istanbul ignore next */cov_22s6dd2wjj.s[43]++;\n  sendJSON(response, 200, mountain);\n}","timestamp":"2017-12-08T01:11:47.328Z"}
{"level":"info","message":"adding a GET url and callback","timestamp":"2017-12-08T01:11:47.328Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T01:11:47.328Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[7]++;\n  let id = /* istanbul ignore next */(cov_22s6dd2wjj.s[45]++, request.url.query.id); /* istanbul ignore next */cov_22s6dd2wjj.s[46]++;\n\n  if (id) {/* istanbul ignore next */cov_22s6dd2wjj.b[6][0]++;\n    let requestMountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[47]++, getMountainById(id)); /* istanbul ignore next */cov_22s6dd2wjj.s[48]++;\n    if (requestMountain)\n      {/* istanbul ignore next */cov_22s6dd2wjj.b[7][0]++;cov_22s6dd2wjj.s[49]++;sendJSON(response, 200, requestMountain);} else\n\n      {/* istanbul ignore next */cov_22s6dd2wjj.b[7][1]++;cov_22s6dd2wjj.s[50]++;sendStatus(response, 404, `no mountain found with the id of ${id}`);}\n  } else\n    {/* istanbul ignore next */cov_22s6dd2wjj.b[6][1]++;cov_22s6dd2wjj.s[51]++;sendJSON(response, 200, mountains);}\n}","timestamp":"2017-12-08T01:11:47.328Z"}
{"level":"info","message":"adding a DELETE url and callback","timestamp":"2017-12-08T01:11:47.328Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T01:11:47.328Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[8]++;\n  let id = /* istanbul ignore next */(cov_22s6dd2wjj.s[53]++, request.url.query.id); /* istanbul ignore next */cov_22s6dd2wjj.s[54]++;\n  if (id) {/* istanbul ignore next */cov_22s6dd2wjj.b[8][0]++;\n    let deletedMountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[55]++, deleteMountainById(id)); /* istanbul ignore next */cov_22s6dd2wjj.s[56]++;\n    if (deletedMountain) {/* istanbul ignore next */cov_22s6dd2wjj.b[9][0]++;cov_22s6dd2wjj.s[57]++;\n      logger.log('info', `Mountain deleted, responding with a 200 success code`); /* istanbul ignore next */cov_22s6dd2wjj.s[58]++;\n      response.writeHead(200); /* istanbul ignore next */cov_22s6dd2wjj.s[59]++;\n      response.end();\n    } else\n      {/* istanbul ignore next */cov_22s6dd2wjj.b[9][1]++;cov_22s6dd2wjj.s[60]++;sendStatus(response, 404, `No mountain was found with an id ${id}`);}\n  } else\n    {/* istanbul ignore next */cov_22s6dd2wjj.b[8][1]++;cov_22s6dd2wjj.s[61]++;sendStatus(response, 400, `something else occurred - bad request.`);}\n}","timestamp":"2017-12-08T01:11:47.328Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T01:11:47.391Z"}
{"level":"info","message":"Original URL: \"/api/mountains\"","timestamp":"2017-12-08T01:11:47.391Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/mountains\",\"path\":\"/api/mountains\",\"href\":\"/api/mountains\"}","timestamp":"2017-12-08T01:11:47.392Z"}
{"level":"info","message":"found the following handler","timestamp":"2017-12-08T01:11:47.393Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[6]++;cov_22s6dd2wjj.s[26]++;\n  if (!request.body) {/* istanbul ignore next */cov_22s6dd2wjj.b[1][0]++;cov_22s6dd2wjj.s[27]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[1][1]++;}cov_22s6dd2wjj.s[29]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_22s6dd2wjj.b[2][0]++;cov_22s6dd2wjj.s[30]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[2][1]++;}cov_22s6dd2wjj.s[32]++;\n  if (!request.body.state) {/* istanbul ignore next */cov_22s6dd2wjj.b[3][0]++;cov_22s6dd2wjj.s[33]++;\n    sendStatus(response, 400, 'state not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[3][1]++;}cov_22s6dd2wjj.s[35]++;\n  if (!request.body.hiking) {/* istanbul ignore next */cov_22s6dd2wjj.b[4][0]++;cov_22s6dd2wjj.s[36]++;\n    sendStatus(response, 400, 'hiking info not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[4][1]++;}cov_22s6dd2wjj.s[38]++;\n  if (!request.body.range) {/* istanbul ignore next */cov_22s6dd2wjj.b[5][0]++;cov_22s6dd2wjj.s[39]++;\n    sendStatus(response, 400, 'range name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[40]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[5][1]++;}\n  let mountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[41]++, new Mountain(\n  request.body.name,\n  request.body.state,\n  request.body.hiking,\n  request.body.range)); /* istanbul ignore next */cov_22s6dd2wjj.s[42]++;\n\n\n  mountains.push(mountain); /* istanbul ignore next */cov_22s6dd2wjj.s[43]++;\n  sendJSON(response, 200, mountain);\n}","timestamp":"2017-12-08T01:11:47.393Z"}
{"level":"info","message":"responding with a 200 code and the following json data","timestamp":"2017-12-08T01:11:47.393Z"}
{"id":"c3384310-dbb4-11e7-86e6-fbb671aeae09","name":"Shuksan","state":"Washington","hiking":"Yes","range":"Cascades","level":"info","message":"","timestamp":"2017-12-08T01:11:47.393Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T01:11:47.444Z"}
{"level":"info","message":"Original URL: \"/api/mountains?id=$333-33\"","timestamp":"2017-12-08T01:11:47.444Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=$333-33\",\"query\":{\"id\":\"$333-33\"},\"pathname\":\"/api/mountains\",\"path\":\"/api/mountains?id=$333-33\",\"href\":\"/api/mountains?id=$333-33\"}","timestamp":"2017-12-08T01:11:47.444Z"}
{"level":"info","message":"found the following handler","timestamp":"2017-12-08T01:11:47.444Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[7]++;\n  let id = /* istanbul ignore next */(cov_22s6dd2wjj.s[45]++, request.url.query.id); /* istanbul ignore next */cov_22s6dd2wjj.s[46]++;\n\n  if (id) {/* istanbul ignore next */cov_22s6dd2wjj.b[6][0]++;\n    let requestMountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[47]++, getMountainById(id)); /* istanbul ignore next */cov_22s6dd2wjj.s[48]++;\n    if (requestMountain)\n      {/* istanbul ignore next */cov_22s6dd2wjj.b[7][0]++;cov_22s6dd2wjj.s[49]++;sendJSON(response, 200, requestMountain);} else\n\n      {/* istanbul ignore next */cov_22s6dd2wjj.b[7][1]++;cov_22s6dd2wjj.s[50]++;sendStatus(response, 404, `no mountain found with the id of ${id}`);}\n  } else\n    {/* istanbul ignore next */cov_22s6dd2wjj.b[6][1]++;cov_22s6dd2wjj.s[51]++;sendJSON(response, 200, mountains);}\n}","timestamp":"2017-12-08T01:11:47.444Z"}
{"level":"info","message":"Responding with a 404 code due to no mountain found with the id of $333-33","timestamp":"2017-12-08T01:11:47.445Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T01:11:47.448Z"}
{"level":"info","message":"Original URL: \"/api/mountains?id=e8013d70-dbad-11e7-9cb6-ddffa32a3c9b\"","timestamp":"2017-12-08T01:11:47.448Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=e8013d70-dbad-11e7-9cb6-ddffa32a3c9b\",\"query\":{\"id\":\"e8013d70-dbad-11e7-9cb6-ddffa32a3c9b\"},\"pathname\":\"/api/mountains\",\"path\":\"/api/mountains?id=e8013d70-dbad-11e7-9cb6-ddffa32a3c9b\",\"href\":\"/api/mountains?id=e8013d70-dbad-11e7-9cb6-ddffa32a3c9b\"}","timestamp":"2017-12-08T01:11:47.449Z"}
{"level":"info","message":"found the following handler","timestamp":"2017-12-08T01:11:47.449Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[7]++;\n  let id = /* istanbul ignore next */(cov_22s6dd2wjj.s[45]++, request.url.query.id); /* istanbul ignore next */cov_22s6dd2wjj.s[46]++;\n\n  if (id) {/* istanbul ignore next */cov_22s6dd2wjj.b[6][0]++;\n    let requestMountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[47]++, getMountainById(id)); /* istanbul ignore next */cov_22s6dd2wjj.s[48]++;\n    if (requestMountain)\n      {/* istanbul ignore next */cov_22s6dd2wjj.b[7][0]++;cov_22s6dd2wjj.s[49]++;sendJSON(response, 200, requestMountain);} else\n\n      {/* istanbul ignore next */cov_22s6dd2wjj.b[7][1]++;cov_22s6dd2wjj.s[50]++;sendStatus(response, 404, `no mountain found with the id of ${id}`);}\n  } else\n    {/* istanbul ignore next */cov_22s6dd2wjj.b[6][1]++;cov_22s6dd2wjj.s[51]++;sendJSON(response, 200, mountains);}\n}","timestamp":"2017-12-08T01:11:47.449Z"}
{"level":"info","message":"Responding with a 404 code due to no mountain found with the id of e8013d70-dbad-11e7-9cb6-ddffa32a3c9b","timestamp":"2017-12-08T01:11:47.449Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T01:11:47.451Z"}
{"level":"info","message":"Original URL: \"/api/mountains\"","timestamp":"2017-12-08T01:11:47.451Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/mountains\",\"path\":\"/api/mountains\",\"href\":\"/api/mountains\"}","timestamp":"2017-12-08T01:11:47.451Z"}
{"level":"info","message":"found the following handler","timestamp":"2017-12-08T01:11:47.451Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[6]++;cov_22s6dd2wjj.s[26]++;\n  if (!request.body) {/* istanbul ignore next */cov_22s6dd2wjj.b[1][0]++;cov_22s6dd2wjj.s[27]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[1][1]++;}cov_22s6dd2wjj.s[29]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_22s6dd2wjj.b[2][0]++;cov_22s6dd2wjj.s[30]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[2][1]++;}cov_22s6dd2wjj.s[32]++;\n  if (!request.body.state) {/* istanbul ignore next */cov_22s6dd2wjj.b[3][0]++;cov_22s6dd2wjj.s[33]++;\n    sendStatus(response, 400, 'state not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[3][1]++;}cov_22s6dd2wjj.s[35]++;\n  if (!request.body.hiking) {/* istanbul ignore next */cov_22s6dd2wjj.b[4][0]++;cov_22s6dd2wjj.s[36]++;\n    sendStatus(response, 400, 'hiking info not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[4][1]++;}cov_22s6dd2wjj.s[38]++;\n  if (!request.body.range) {/* istanbul ignore next */cov_22s6dd2wjj.b[5][0]++;cov_22s6dd2wjj.s[39]++;\n    sendStatus(response, 400, 'range name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[40]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[5][1]++;}\n  let mountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[41]++, new Mountain(\n  request.body.name,\n  request.body.state,\n  request.body.hiking,\n  request.body.range)); /* istanbul ignore next */cov_22s6dd2wjj.s[42]++;\n\n\n  mountains.push(mountain); /* istanbul ignore next */cov_22s6dd2wjj.s[43]++;\n  sendJSON(response, 200, mountain);\n}","timestamp":"2017-12-08T01:11:47.451Z"}
{"level":"info","message":"Responding with a 400 code due to name not found","timestamp":"2017-12-08T01:11:47.451Z"}
{"level":"info","message":"adding a POST url and callback","timestamp":"2017-12-08T01:12:26.618Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T01:12:26.619Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[6]++;cov_22s6dd2wjj.s[26]++;\n  if (!request.body) {/* istanbul ignore next */cov_22s6dd2wjj.b[1][0]++;cov_22s6dd2wjj.s[27]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[1][1]++;}cov_22s6dd2wjj.s[29]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_22s6dd2wjj.b[2][0]++;cov_22s6dd2wjj.s[30]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[2][1]++;}cov_22s6dd2wjj.s[32]++;\n  if (!request.body.state) {/* istanbul ignore next */cov_22s6dd2wjj.b[3][0]++;cov_22s6dd2wjj.s[33]++;\n    sendStatus(response, 400, 'state not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[3][1]++;}cov_22s6dd2wjj.s[35]++;\n  if (!request.body.hiking) {/* istanbul ignore next */cov_22s6dd2wjj.b[4][0]++;cov_22s6dd2wjj.s[36]++;\n    sendStatus(response, 400, 'hiking info not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[4][1]++;}cov_22s6dd2wjj.s[38]++;\n  if (!request.body.range) {/* istanbul ignore next */cov_22s6dd2wjj.b[5][0]++;cov_22s6dd2wjj.s[39]++;\n    sendStatus(response, 400, 'range name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[40]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[5][1]++;}\n  let mountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[41]++, new Mountain(\n  request.body.name,\n  request.body.state,\n  request.body.hiking,\n  request.body.range)); /* istanbul ignore next */cov_22s6dd2wjj.s[42]++;\n\n\n  mountains.push(mountain); /* istanbul ignore next */cov_22s6dd2wjj.s[43]++;\n  sendJSON(response, 200, mountain);\n}","timestamp":"2017-12-08T01:12:26.619Z"}
{"level":"info","message":"adding a GET url and callback","timestamp":"2017-12-08T01:12:26.619Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T01:12:26.619Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[7]++;\n  let id = /* istanbul ignore next */(cov_22s6dd2wjj.s[45]++, request.url.query.id); /* istanbul ignore next */cov_22s6dd2wjj.s[46]++;\n\n  if (id) {/* istanbul ignore next */cov_22s6dd2wjj.b[6][0]++;\n    let requestMountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[47]++, getMountainById(id)); /* istanbul ignore next */cov_22s6dd2wjj.s[48]++;\n    if (requestMountain)\n      {/* istanbul ignore next */cov_22s6dd2wjj.b[7][0]++;cov_22s6dd2wjj.s[49]++;sendJSON(response, 200, requestMountain);} else\n\n      {/* istanbul ignore next */cov_22s6dd2wjj.b[7][1]++;cov_22s6dd2wjj.s[50]++;sendStatus(response, 404, `no mountain found with the id of ${id}`);}\n  } else\n    {/* istanbul ignore next */cov_22s6dd2wjj.b[6][1]++;cov_22s6dd2wjj.s[51]++;sendJSON(response, 200, mountains);}\n}","timestamp":"2017-12-08T01:12:26.619Z"}
{"level":"info","message":"adding a DELETE url and callback","timestamp":"2017-12-08T01:12:26.619Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T01:12:26.619Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[8]++;\n  let id = /* istanbul ignore next */(cov_22s6dd2wjj.s[53]++, request.url.query.id); /* istanbul ignore next */cov_22s6dd2wjj.s[54]++;\n  if (id) {/* istanbul ignore next */cov_22s6dd2wjj.b[8][0]++;\n    let deletedMountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[55]++, deleteMountainById(id)); /* istanbul ignore next */cov_22s6dd2wjj.s[56]++;\n    if (deletedMountain) {/* istanbul ignore next */cov_22s6dd2wjj.b[9][0]++;cov_22s6dd2wjj.s[57]++;\n      logger.log('info', `Mountain deleted, responding with a 200 success code`); /* istanbul ignore next */cov_22s6dd2wjj.s[58]++;\n      response.writeHead(200); /* istanbul ignore next */cov_22s6dd2wjj.s[59]++;\n      response.end();\n    } else\n      {/* istanbul ignore next */cov_22s6dd2wjj.b[9][1]++;cov_22s6dd2wjj.s[60]++;sendStatus(response, 404, `No mountain was found with an id ${id}`);}\n  } else\n    {/* istanbul ignore next */cov_22s6dd2wjj.b[8][1]++;cov_22s6dd2wjj.s[61]++;sendStatus(response, 400, `something else occurred - bad request.`);}\n}","timestamp":"2017-12-08T01:12:26.619Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T01:12:26.712Z"}
{"level":"info","message":"Original URL: \"/api/mountains\"","timestamp":"2017-12-08T01:12:26.712Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/mountains\",\"path\":\"/api/mountains\",\"href\":\"/api/mountains\"}","timestamp":"2017-12-08T01:12:26.712Z"}
{"level":"info","message":"found the following handler","timestamp":"2017-12-08T01:12:26.713Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[6]++;cov_22s6dd2wjj.s[26]++;\n  if (!request.body) {/* istanbul ignore next */cov_22s6dd2wjj.b[1][0]++;cov_22s6dd2wjj.s[27]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[1][1]++;}cov_22s6dd2wjj.s[29]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_22s6dd2wjj.b[2][0]++;cov_22s6dd2wjj.s[30]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[2][1]++;}cov_22s6dd2wjj.s[32]++;\n  if (!request.body.state) {/* istanbul ignore next */cov_22s6dd2wjj.b[3][0]++;cov_22s6dd2wjj.s[33]++;\n    sendStatus(response, 400, 'state not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[3][1]++;}cov_22s6dd2wjj.s[35]++;\n  if (!request.body.hiking) {/* istanbul ignore next */cov_22s6dd2wjj.b[4][0]++;cov_22s6dd2wjj.s[36]++;\n    sendStatus(response, 400, 'hiking info not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[4][1]++;}cov_22s6dd2wjj.s[38]++;\n  if (!request.body.range) {/* istanbul ignore next */cov_22s6dd2wjj.b[5][0]++;cov_22s6dd2wjj.s[39]++;\n    sendStatus(response, 400, 'range name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[40]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[5][1]++;}\n  let mountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[41]++, new Mountain(\n  request.body.name,\n  request.body.state,\n  request.body.hiking,\n  request.body.range)); /* istanbul ignore next */cov_22s6dd2wjj.s[42]++;\n\n\n  mountains.push(mountain); /* istanbul ignore next */cov_22s6dd2wjj.s[43]++;\n  sendJSON(response, 200, mountain);\n}","timestamp":"2017-12-08T01:12:26.713Z"}
{"level":"info","message":"responding with a 200 code and the following json data","timestamp":"2017-12-08T01:12:26.714Z"}
{"id":"daa80490-dbb4-11e7-9993-cdb4030ee8f3","name":"Shuksan","state":"Washington","hiking":"Yes","range":"Cascades","level":"info","message":"","timestamp":"2017-12-08T01:12:26.714Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T01:12:26.722Z"}
{"level":"info","message":"Original URL: \"/api/mountains?id=$333-33\"","timestamp":"2017-12-08T01:12:26.722Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=$333-33\",\"query\":{\"id\":\"$333-33\"},\"pathname\":\"/api/mountains\",\"path\":\"/api/mountains?id=$333-33\",\"href\":\"/api/mountains?id=$333-33\"}","timestamp":"2017-12-08T01:12:26.722Z"}
{"level":"info","message":"found the following handler","timestamp":"2017-12-08T01:12:26.722Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[7]++;\n  let id = /* istanbul ignore next */(cov_22s6dd2wjj.s[45]++, request.url.query.id); /* istanbul ignore next */cov_22s6dd2wjj.s[46]++;\n\n  if (id) {/* istanbul ignore next */cov_22s6dd2wjj.b[6][0]++;\n    let requestMountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[47]++, getMountainById(id)); /* istanbul ignore next */cov_22s6dd2wjj.s[48]++;\n    if (requestMountain)\n      {/* istanbul ignore next */cov_22s6dd2wjj.b[7][0]++;cov_22s6dd2wjj.s[49]++;sendJSON(response, 200, requestMountain);} else\n\n      {/* istanbul ignore next */cov_22s6dd2wjj.b[7][1]++;cov_22s6dd2wjj.s[50]++;sendStatus(response, 404, `no mountain found with the id of ${id}`);}\n  } else\n    {/* istanbul ignore next */cov_22s6dd2wjj.b[6][1]++;cov_22s6dd2wjj.s[51]++;sendJSON(response, 200, mountains);}\n}","timestamp":"2017-12-08T01:12:26.722Z"}
{"level":"info","message":"Responding with a 404 code due to no mountain found with the id of $333-33","timestamp":"2017-12-08T01:12:26.723Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T01:12:26.725Z"}
{"level":"info","message":"Original URL: \"/api/mountains?id=e8013d70-dbad-11e7-9cb6-ddffa32a3c9b\"","timestamp":"2017-12-08T01:12:26.725Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=e8013d70-dbad-11e7-9cb6-ddffa32a3c9b\",\"query\":{\"id\":\"e8013d70-dbad-11e7-9cb6-ddffa32a3c9b\"},\"pathname\":\"/api/mountains\",\"path\":\"/api/mountains?id=e8013d70-dbad-11e7-9cb6-ddffa32a3c9b\",\"href\":\"/api/mountains?id=e8013d70-dbad-11e7-9cb6-ddffa32a3c9b\"}","timestamp":"2017-12-08T01:12:26.725Z"}
{"level":"info","message":"found the following handler","timestamp":"2017-12-08T01:12:26.725Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[7]++;\n  let id = /* istanbul ignore next */(cov_22s6dd2wjj.s[45]++, request.url.query.id); /* istanbul ignore next */cov_22s6dd2wjj.s[46]++;\n\n  if (id) {/* istanbul ignore next */cov_22s6dd2wjj.b[6][0]++;\n    let requestMountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[47]++, getMountainById(id)); /* istanbul ignore next */cov_22s6dd2wjj.s[48]++;\n    if (requestMountain)\n      {/* istanbul ignore next */cov_22s6dd2wjj.b[7][0]++;cov_22s6dd2wjj.s[49]++;sendJSON(response, 200, requestMountain);} else\n\n      {/* istanbul ignore next */cov_22s6dd2wjj.b[7][1]++;cov_22s6dd2wjj.s[50]++;sendStatus(response, 404, `no mountain found with the id of ${id}`);}\n  } else\n    {/* istanbul ignore next */cov_22s6dd2wjj.b[6][1]++;cov_22s6dd2wjj.s[51]++;sendJSON(response, 200, mountains);}\n}","timestamp":"2017-12-08T01:12:26.725Z"}
{"level":"info","message":"Responding with a 404 code due to no mountain found with the id of e8013d70-dbad-11e7-9cb6-ddffa32a3c9b","timestamp":"2017-12-08T01:12:26.725Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T01:12:26.730Z"}
{"level":"info","message":"Original URL: \"/api/mountains\"","timestamp":"2017-12-08T01:12:26.730Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/mountains\",\"path\":\"/api/mountains\",\"href\":\"/api/mountains\"}","timestamp":"2017-12-08T01:12:26.730Z"}
{"level":"info","message":"found the following handler","timestamp":"2017-12-08T01:12:26.730Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[6]++;cov_22s6dd2wjj.s[26]++;\n  if (!request.body) {/* istanbul ignore next */cov_22s6dd2wjj.b[1][0]++;cov_22s6dd2wjj.s[27]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[1][1]++;}cov_22s6dd2wjj.s[29]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_22s6dd2wjj.b[2][0]++;cov_22s6dd2wjj.s[30]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[2][1]++;}cov_22s6dd2wjj.s[32]++;\n  if (!request.body.state) {/* istanbul ignore next */cov_22s6dd2wjj.b[3][0]++;cov_22s6dd2wjj.s[33]++;\n    sendStatus(response, 400, 'state not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[3][1]++;}cov_22s6dd2wjj.s[35]++;\n  if (!request.body.hiking) {/* istanbul ignore next */cov_22s6dd2wjj.b[4][0]++;cov_22s6dd2wjj.s[36]++;\n    sendStatus(response, 400, 'hiking info not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[4][1]++;}cov_22s6dd2wjj.s[38]++;\n  if (!request.body.range) {/* istanbul ignore next */cov_22s6dd2wjj.b[5][0]++;cov_22s6dd2wjj.s[39]++;\n    sendStatus(response, 400, 'range name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[40]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[5][1]++;}\n  let mountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[41]++, new Mountain(\n  request.body.name,\n  request.body.state,\n  request.body.hiking,\n  request.body.range)); /* istanbul ignore next */cov_22s6dd2wjj.s[42]++;\n\n\n  mountains.push(mountain); /* istanbul ignore next */cov_22s6dd2wjj.s[43]++;\n  sendJSON(response, 200, mountain);\n}","timestamp":"2017-12-08T01:12:26.730Z"}
{"level":"info","message":"Responding with a 400 code due to name not found","timestamp":"2017-12-08T01:12:26.730Z"}
{"level":"info","message":"adding a POST url and callback","timestamp":"2017-12-08T01:13:24.138Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T01:13:24.139Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[6]++;cov_22s6dd2wjj.s[26]++;\n  if (!request.body) {/* istanbul ignore next */cov_22s6dd2wjj.b[1][0]++;cov_22s6dd2wjj.s[27]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[1][1]++;}cov_22s6dd2wjj.s[29]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_22s6dd2wjj.b[2][0]++;cov_22s6dd2wjj.s[30]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[2][1]++;}cov_22s6dd2wjj.s[32]++;\n  if (!request.body.state) {/* istanbul ignore next */cov_22s6dd2wjj.b[3][0]++;cov_22s6dd2wjj.s[33]++;\n    sendStatus(response, 400, 'state not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[3][1]++;}cov_22s6dd2wjj.s[35]++;\n  if (!request.body.hiking) {/* istanbul ignore next */cov_22s6dd2wjj.b[4][0]++;cov_22s6dd2wjj.s[36]++;\n    sendStatus(response, 400, 'hiking info not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[4][1]++;}cov_22s6dd2wjj.s[38]++;\n  if (!request.body.range) {/* istanbul ignore next */cov_22s6dd2wjj.b[5][0]++;cov_22s6dd2wjj.s[39]++;\n    sendStatus(response, 400, 'range name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[40]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[5][1]++;}\n  let mountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[41]++, new Mountain(\n  request.body.name,\n  request.body.state,\n  request.body.hiking,\n  request.body.range)); /* istanbul ignore next */cov_22s6dd2wjj.s[42]++;\n\n\n  mountains.push(mountain); /* istanbul ignore next */cov_22s6dd2wjj.s[43]++;\n  sendJSON(response, 200, mountain);\n}","timestamp":"2017-12-08T01:13:24.139Z"}
{"level":"info","message":"adding a GET url and callback","timestamp":"2017-12-08T01:13:24.139Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T01:13:24.139Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[7]++;\n  let id = /* istanbul ignore next */(cov_22s6dd2wjj.s[45]++, request.url.query.id); /* istanbul ignore next */cov_22s6dd2wjj.s[46]++;\n\n  if (id) {/* istanbul ignore next */cov_22s6dd2wjj.b[6][0]++;\n    let requestMountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[47]++, getMountainById(id)); /* istanbul ignore next */cov_22s6dd2wjj.s[48]++;\n    if (requestMountain)\n      {/* istanbul ignore next */cov_22s6dd2wjj.b[7][0]++;cov_22s6dd2wjj.s[49]++;sendJSON(response, 200, requestMountain);} else\n\n      {/* istanbul ignore next */cov_22s6dd2wjj.b[7][1]++;cov_22s6dd2wjj.s[50]++;sendStatus(response, 404, `no mountain found with the id of ${id}`);}\n  } else\n    {/* istanbul ignore next */cov_22s6dd2wjj.b[6][1]++;cov_22s6dd2wjj.s[51]++;sendJSON(response, 200, mountains);}\n}","timestamp":"2017-12-08T01:13:24.139Z"}
{"level":"info","message":"adding a DELETE url and callback","timestamp":"2017-12-08T01:13:24.139Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T01:13:24.139Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[8]++;\n  let id = /* istanbul ignore next */(cov_22s6dd2wjj.s[53]++, request.url.query.id); /* istanbul ignore next */cov_22s6dd2wjj.s[54]++;\n  if (id) {/* istanbul ignore next */cov_22s6dd2wjj.b[8][0]++;\n    let deletedMountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[55]++, deleteMountainById(id)); /* istanbul ignore next */cov_22s6dd2wjj.s[56]++;\n    if (deletedMountain) {/* istanbul ignore next */cov_22s6dd2wjj.b[9][0]++;cov_22s6dd2wjj.s[57]++;\n      logger.log('info', `Mountain deleted, responding with a 200 success code`); /* istanbul ignore next */cov_22s6dd2wjj.s[58]++;\n      response.writeHead(200); /* istanbul ignore next */cov_22s6dd2wjj.s[59]++;\n      response.end();\n    } else\n      {/* istanbul ignore next */cov_22s6dd2wjj.b[9][1]++;cov_22s6dd2wjj.s[60]++;sendStatus(response, 404, `No mountain was found with an id ${id}`);}\n  } else\n    {/* istanbul ignore next */cov_22s6dd2wjj.b[8][1]++;cov_22s6dd2wjj.s[61]++;sendStatus(response, 400, `something else occurred - bad request.`);}\n}","timestamp":"2017-12-08T01:13:24.139Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T01:13:24.192Z"}
{"level":"info","message":"Original URL: \"/api/mountains\"","timestamp":"2017-12-08T01:13:24.192Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/mountains\",\"path\":\"/api/mountains\",\"href\":\"/api/mountains\"}","timestamp":"2017-12-08T01:13:24.192Z"}
{"level":"info","message":"found the following handler","timestamp":"2017-12-08T01:13:24.193Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[6]++;cov_22s6dd2wjj.s[26]++;\n  if (!request.body) {/* istanbul ignore next */cov_22s6dd2wjj.b[1][0]++;cov_22s6dd2wjj.s[27]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[1][1]++;}cov_22s6dd2wjj.s[29]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_22s6dd2wjj.b[2][0]++;cov_22s6dd2wjj.s[30]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[2][1]++;}cov_22s6dd2wjj.s[32]++;\n  if (!request.body.state) {/* istanbul ignore next */cov_22s6dd2wjj.b[3][0]++;cov_22s6dd2wjj.s[33]++;\n    sendStatus(response, 400, 'state not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[3][1]++;}cov_22s6dd2wjj.s[35]++;\n  if (!request.body.hiking) {/* istanbul ignore next */cov_22s6dd2wjj.b[4][0]++;cov_22s6dd2wjj.s[36]++;\n    sendStatus(response, 400, 'hiking info not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[4][1]++;}cov_22s6dd2wjj.s[38]++;\n  if (!request.body.range) {/* istanbul ignore next */cov_22s6dd2wjj.b[5][0]++;cov_22s6dd2wjj.s[39]++;\n    sendStatus(response, 400, 'range name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[40]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[5][1]++;}\n  let mountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[41]++, new Mountain(\n  request.body.name,\n  request.body.state,\n  request.body.hiking,\n  request.body.range)); /* istanbul ignore next */cov_22s6dd2wjj.s[42]++;\n\n\n  mountains.push(mountain); /* istanbul ignore next */cov_22s6dd2wjj.s[43]++;\n  sendJSON(response, 200, mountain);\n}","timestamp":"2017-12-08T01:13:24.193Z"}
{"level":"info","message":"responding with a 200 code and the following json data","timestamp":"2017-12-08T01:13:24.194Z"}
{"id":"fceac510-dbb4-11e7-aa3e-33d4b864e3a5","name":"Shuksan","state":"Washington","hiking":"Yes","range":"Cascades","level":"info","message":"","timestamp":"2017-12-08T01:13:24.194Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T01:13:24.243Z"}
{"level":"info","message":"Original URL: \"/api/mountains?id=$333-33\"","timestamp":"2017-12-08T01:13:24.243Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=$333-33\",\"query\":{\"id\":\"$333-33\"},\"pathname\":\"/api/mountains\",\"path\":\"/api/mountains?id=$333-33\",\"href\":\"/api/mountains?id=$333-33\"}","timestamp":"2017-12-08T01:13:24.244Z"}
{"level":"info","message":"found the following handler","timestamp":"2017-12-08T01:13:24.244Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[7]++;\n  let id = /* istanbul ignore next */(cov_22s6dd2wjj.s[45]++, request.url.query.id); /* istanbul ignore next */cov_22s6dd2wjj.s[46]++;\n\n  if (id) {/* istanbul ignore next */cov_22s6dd2wjj.b[6][0]++;\n    let requestMountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[47]++, getMountainById(id)); /* istanbul ignore next */cov_22s6dd2wjj.s[48]++;\n    if (requestMountain)\n      {/* istanbul ignore next */cov_22s6dd2wjj.b[7][0]++;cov_22s6dd2wjj.s[49]++;sendJSON(response, 200, requestMountain);} else\n\n      {/* istanbul ignore next */cov_22s6dd2wjj.b[7][1]++;cov_22s6dd2wjj.s[50]++;sendStatus(response, 404, `no mountain found with the id of ${id}`);}\n  } else\n    {/* istanbul ignore next */cov_22s6dd2wjj.b[6][1]++;cov_22s6dd2wjj.s[51]++;sendJSON(response, 200, mountains);}\n}","timestamp":"2017-12-08T01:13:24.244Z"}
{"level":"info","message":"Responding with a 404 code due to no mountain found with the id of $333-33","timestamp":"2017-12-08T01:13:24.244Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T01:13:24.246Z"}
{"level":"info","message":"Original URL: \"/api/mountains?id=daa80490-dbb4-11e7-9993-cdb4030ee8f3\"","timestamp":"2017-12-08T01:13:24.246Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=daa80490-dbb4-11e7-9993-cdb4030ee8f3\",\"query\":{\"id\":\"daa80490-dbb4-11e7-9993-cdb4030ee8f3\"},\"pathname\":\"/api/mountains\",\"path\":\"/api/mountains?id=daa80490-dbb4-11e7-9993-cdb4030ee8f3\",\"href\":\"/api/mountains?id=daa80490-dbb4-11e7-9993-cdb4030ee8f3\"}","timestamp":"2017-12-08T01:13:24.246Z"}
{"level":"info","message":"found the following handler","timestamp":"2017-12-08T01:13:24.247Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[7]++;\n  let id = /* istanbul ignore next */(cov_22s6dd2wjj.s[45]++, request.url.query.id); /* istanbul ignore next */cov_22s6dd2wjj.s[46]++;\n\n  if (id) {/* istanbul ignore next */cov_22s6dd2wjj.b[6][0]++;\n    let requestMountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[47]++, getMountainById(id)); /* istanbul ignore next */cov_22s6dd2wjj.s[48]++;\n    if (requestMountain)\n      {/* istanbul ignore next */cov_22s6dd2wjj.b[7][0]++;cov_22s6dd2wjj.s[49]++;sendJSON(response, 200, requestMountain);} else\n\n      {/* istanbul ignore next */cov_22s6dd2wjj.b[7][1]++;cov_22s6dd2wjj.s[50]++;sendStatus(response, 404, `no mountain found with the id of ${id}`);}\n  } else\n    {/* istanbul ignore next */cov_22s6dd2wjj.b[6][1]++;cov_22s6dd2wjj.s[51]++;sendJSON(response, 200, mountains);}\n}","timestamp":"2017-12-08T01:13:24.247Z"}
{"level":"info","message":"Responding with a 404 code due to no mountain found with the id of daa80490-dbb4-11e7-9993-cdb4030ee8f3","timestamp":"2017-12-08T01:13:24.247Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T01:13:24.249Z"}
{"level":"info","message":"Original URL: \"/api/mountains\"","timestamp":"2017-12-08T01:13:24.249Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/mountains\",\"path\":\"/api/mountains\",\"href\":\"/api/mountains\"}","timestamp":"2017-12-08T01:13:24.249Z"}
{"level":"info","message":"found the following handler","timestamp":"2017-12-08T01:13:24.249Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[6]++;cov_22s6dd2wjj.s[26]++;\n  if (!request.body) {/* istanbul ignore next */cov_22s6dd2wjj.b[1][0]++;cov_22s6dd2wjj.s[27]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[1][1]++;}cov_22s6dd2wjj.s[29]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_22s6dd2wjj.b[2][0]++;cov_22s6dd2wjj.s[30]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[2][1]++;}cov_22s6dd2wjj.s[32]++;\n  if (!request.body.state) {/* istanbul ignore next */cov_22s6dd2wjj.b[3][0]++;cov_22s6dd2wjj.s[33]++;\n    sendStatus(response, 400, 'state not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[3][1]++;}cov_22s6dd2wjj.s[35]++;\n  if (!request.body.hiking) {/* istanbul ignore next */cov_22s6dd2wjj.b[4][0]++;cov_22s6dd2wjj.s[36]++;\n    sendStatus(response, 400, 'hiking info not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[4][1]++;}cov_22s6dd2wjj.s[38]++;\n  if (!request.body.range) {/* istanbul ignore next */cov_22s6dd2wjj.b[5][0]++;cov_22s6dd2wjj.s[39]++;\n    sendStatus(response, 400, 'range name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[40]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[5][1]++;}\n  let mountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[41]++, new Mountain(\n  request.body.name,\n  request.body.state,\n  request.body.hiking,\n  request.body.range)); /* istanbul ignore next */cov_22s6dd2wjj.s[42]++;\n\n\n  mountains.push(mountain); /* istanbul ignore next */cov_22s6dd2wjj.s[43]++;\n  sendJSON(response, 200, mountain);\n}","timestamp":"2017-12-08T01:13:24.249Z"}
{"level":"info","message":"Responding with a 400 code due to name not found","timestamp":"2017-12-08T01:13:24.249Z"}
{"level":"info","message":"adding a POST url and callback","timestamp":"2017-12-08T01:14:30.909Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T01:14:30.910Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[6]++;cov_22s6dd2wjj.s[26]++;\n  if (!request.body) {/* istanbul ignore next */cov_22s6dd2wjj.b[1][0]++;cov_22s6dd2wjj.s[27]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[1][1]++;}cov_22s6dd2wjj.s[29]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_22s6dd2wjj.b[2][0]++;cov_22s6dd2wjj.s[30]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[2][1]++;}cov_22s6dd2wjj.s[32]++;\n  if (!request.body.state) {/* istanbul ignore next */cov_22s6dd2wjj.b[3][0]++;cov_22s6dd2wjj.s[33]++;\n    sendStatus(response, 400, 'state not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[3][1]++;}cov_22s6dd2wjj.s[35]++;\n  if (!request.body.hiking) {/* istanbul ignore next */cov_22s6dd2wjj.b[4][0]++;cov_22s6dd2wjj.s[36]++;\n    sendStatus(response, 400, 'hiking info not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[4][1]++;}cov_22s6dd2wjj.s[38]++;\n  if (!request.body.range) {/* istanbul ignore next */cov_22s6dd2wjj.b[5][0]++;cov_22s6dd2wjj.s[39]++;\n    sendStatus(response, 400, 'range name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[40]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[5][1]++;}\n  let mountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[41]++, new Mountain(\n  request.body.name,\n  request.body.state,\n  request.body.hiking,\n  request.body.range)); /* istanbul ignore next */cov_22s6dd2wjj.s[42]++;\n\n\n  mountains.push(mountain); /* istanbul ignore next */cov_22s6dd2wjj.s[43]++;\n  sendJSON(response, 200, mountain);\n}","timestamp":"2017-12-08T01:14:30.910Z"}
{"level":"info","message":"adding a GET url and callback","timestamp":"2017-12-08T01:14:30.910Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T01:14:30.910Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[7]++;\n  let id = /* istanbul ignore next */(cov_22s6dd2wjj.s[45]++, request.url.query.id); /* istanbul ignore next */cov_22s6dd2wjj.s[46]++;\n\n  if (id) {/* istanbul ignore next */cov_22s6dd2wjj.b[6][0]++;\n    let requestMountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[47]++, getMountainById(id)); /* istanbul ignore next */cov_22s6dd2wjj.s[48]++;\n    if (requestMountain)\n      {/* istanbul ignore next */cov_22s6dd2wjj.b[7][0]++;cov_22s6dd2wjj.s[49]++;sendJSON(response, 200, requestMountain);} else\n\n      {/* istanbul ignore next */cov_22s6dd2wjj.b[7][1]++;cov_22s6dd2wjj.s[50]++;sendStatus(response, 404, `no mountain found with the id of ${id}`);}\n  } else\n    {/* istanbul ignore next */cov_22s6dd2wjj.b[6][1]++;cov_22s6dd2wjj.s[51]++;sendJSON(response, 200, mountains);}\n}","timestamp":"2017-12-08T01:14:30.910Z"}
{"level":"info","message":"adding a DELETE url and callback","timestamp":"2017-12-08T01:14:30.910Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T01:14:30.910Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[8]++;\n  let id = /* istanbul ignore next */(cov_22s6dd2wjj.s[53]++, request.url.query.id); /* istanbul ignore next */cov_22s6dd2wjj.s[54]++;\n  if (id) {/* istanbul ignore next */cov_22s6dd2wjj.b[8][0]++;\n    let deletedMountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[55]++, deleteMountainById(id)); /* istanbul ignore next */cov_22s6dd2wjj.s[56]++;\n    if (deletedMountain) {/* istanbul ignore next */cov_22s6dd2wjj.b[9][0]++;cov_22s6dd2wjj.s[57]++;\n      logger.log('info', `Mountain deleted, responding with a 200 success code`); /* istanbul ignore next */cov_22s6dd2wjj.s[58]++;\n      response.writeHead(200); /* istanbul ignore next */cov_22s6dd2wjj.s[59]++;\n      response.end();\n    } else\n      {/* istanbul ignore next */cov_22s6dd2wjj.b[9][1]++;cov_22s6dd2wjj.s[60]++;sendStatus(response, 404, `No mountain was found with an id ${id}`);}\n  } else\n    {/* istanbul ignore next */cov_22s6dd2wjj.b[8][1]++;cov_22s6dd2wjj.s[61]++;sendStatus(response, 400, `something else occurred - bad request.`);}\n}","timestamp":"2017-12-08T01:14:30.910Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T01:14:30.964Z"}
{"level":"info","message":"Original URL: \"/api/mountains\"","timestamp":"2017-12-08T01:14:30.964Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/mountains\",\"path\":\"/api/mountains\",\"href\":\"/api/mountains\"}","timestamp":"2017-12-08T01:14:30.964Z"}
{"level":"info","message":"found the following handler","timestamp":"2017-12-08T01:14:30.965Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[6]++;cov_22s6dd2wjj.s[26]++;\n  if (!request.body) {/* istanbul ignore next */cov_22s6dd2wjj.b[1][0]++;cov_22s6dd2wjj.s[27]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[1][1]++;}cov_22s6dd2wjj.s[29]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_22s6dd2wjj.b[2][0]++;cov_22s6dd2wjj.s[30]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[2][1]++;}cov_22s6dd2wjj.s[32]++;\n  if (!request.body.state) {/* istanbul ignore next */cov_22s6dd2wjj.b[3][0]++;cov_22s6dd2wjj.s[33]++;\n    sendStatus(response, 400, 'state not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[3][1]++;}cov_22s6dd2wjj.s[35]++;\n  if (!request.body.hiking) {/* istanbul ignore next */cov_22s6dd2wjj.b[4][0]++;cov_22s6dd2wjj.s[36]++;\n    sendStatus(response, 400, 'hiking info not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[4][1]++;}cov_22s6dd2wjj.s[38]++;\n  if (!request.body.range) {/* istanbul ignore next */cov_22s6dd2wjj.b[5][0]++;cov_22s6dd2wjj.s[39]++;\n    sendStatus(response, 400, 'range name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[40]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[5][1]++;}\n  let mountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[41]++, new Mountain(\n  request.body.name,\n  request.body.state,\n  request.body.hiking,\n  request.body.range)); /* istanbul ignore next */cov_22s6dd2wjj.s[42]++;\n\n\n  mountains.push(mountain); /* istanbul ignore next */cov_22s6dd2wjj.s[43]++;\n  sendJSON(response, 200, mountain);\n}","timestamp":"2017-12-08T01:14:30.965Z"}
{"level":"info","message":"responding with a 200 code and the following json data","timestamp":"2017-12-08T01:14:30.965Z"}
{"id":"24b75e50-dbb5-11e7-85c6-19739412f097","name":"Shuksan","state":"Washington","hiking":"Yes","range":"Cascades","level":"info","message":"","timestamp":"2017-12-08T01:14:30.965Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T01:14:30.975Z"}
{"level":"info","message":"Original URL: \"/api/mountains?id=$333-33\"","timestamp":"2017-12-08T01:14:30.975Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=$333-33\",\"query\":{\"id\":\"$333-33\"},\"pathname\":\"/api/mountains\",\"path\":\"/api/mountains?id=$333-33\",\"href\":\"/api/mountains?id=$333-33\"}","timestamp":"2017-12-08T01:14:30.975Z"}
{"level":"info","message":"found the following handler","timestamp":"2017-12-08T01:14:30.976Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[7]++;\n  let id = /* istanbul ignore next */(cov_22s6dd2wjj.s[45]++, request.url.query.id); /* istanbul ignore next */cov_22s6dd2wjj.s[46]++;\n\n  if (id) {/* istanbul ignore next */cov_22s6dd2wjj.b[6][0]++;\n    let requestMountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[47]++, getMountainById(id)); /* istanbul ignore next */cov_22s6dd2wjj.s[48]++;\n    if (requestMountain)\n      {/* istanbul ignore next */cov_22s6dd2wjj.b[7][0]++;cov_22s6dd2wjj.s[49]++;sendJSON(response, 200, requestMountain);} else\n\n      {/* istanbul ignore next */cov_22s6dd2wjj.b[7][1]++;cov_22s6dd2wjj.s[50]++;sendStatus(response, 404, `no mountain found with the id of ${id}`);}\n  } else\n    {/* istanbul ignore next */cov_22s6dd2wjj.b[6][1]++;cov_22s6dd2wjj.s[51]++;sendJSON(response, 200, mountains);}\n}","timestamp":"2017-12-08T01:14:30.976Z"}
{"level":"info","message":"Responding with a 404 code due to no mountain found with the id of $333-33","timestamp":"2017-12-08T01:14:30.976Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T01:14:30.978Z"}
{"level":"info","message":"Original URL: \"/api/mountains?id=e8013d70-dbad-11e7-9cb6-ddffa32a3c9b\"","timestamp":"2017-12-08T01:14:30.978Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=e8013d70-dbad-11e7-9cb6-ddffa32a3c9b\",\"query\":{\"id\":\"e8013d70-dbad-11e7-9cb6-ddffa32a3c9b\"},\"pathname\":\"/api/mountains\",\"path\":\"/api/mountains?id=e8013d70-dbad-11e7-9cb6-ddffa32a3c9b\",\"href\":\"/api/mountains?id=e8013d70-dbad-11e7-9cb6-ddffa32a3c9b\"}","timestamp":"2017-12-08T01:14:30.978Z"}
{"level":"info","message":"found the following handler","timestamp":"2017-12-08T01:14:30.978Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[7]++;\n  let id = /* istanbul ignore next */(cov_22s6dd2wjj.s[45]++, request.url.query.id); /* istanbul ignore next */cov_22s6dd2wjj.s[46]++;\n\n  if (id) {/* istanbul ignore next */cov_22s6dd2wjj.b[6][0]++;\n    let requestMountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[47]++, getMountainById(id)); /* istanbul ignore next */cov_22s6dd2wjj.s[48]++;\n    if (requestMountain)\n      {/* istanbul ignore next */cov_22s6dd2wjj.b[7][0]++;cov_22s6dd2wjj.s[49]++;sendJSON(response, 200, requestMountain);} else\n\n      {/* istanbul ignore next */cov_22s6dd2wjj.b[7][1]++;cov_22s6dd2wjj.s[50]++;sendStatus(response, 404, `no mountain found with the id of ${id}`);}\n  } else\n    {/* istanbul ignore next */cov_22s6dd2wjj.b[6][1]++;cov_22s6dd2wjj.s[51]++;sendJSON(response, 200, mountains);}\n}","timestamp":"2017-12-08T01:14:30.979Z"}
{"level":"info","message":"Responding with a 404 code due to no mountain found with the id of e8013d70-dbad-11e7-9cb6-ddffa32a3c9b","timestamp":"2017-12-08T01:14:30.979Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T01:14:31.020Z"}
{"level":"info","message":"Original URL: \"/api/mountains\"","timestamp":"2017-12-08T01:14:31.020Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/mountains\",\"path\":\"/api/mountains\",\"href\":\"/api/mountains\"}","timestamp":"2017-12-08T01:14:31.020Z"}
{"level":"info","message":"found the following handler","timestamp":"2017-12-08T01:14:31.021Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[6]++;cov_22s6dd2wjj.s[26]++;\n  if (!request.body) {/* istanbul ignore next */cov_22s6dd2wjj.b[1][0]++;cov_22s6dd2wjj.s[27]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[1][1]++;}cov_22s6dd2wjj.s[29]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_22s6dd2wjj.b[2][0]++;cov_22s6dd2wjj.s[30]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[2][1]++;}cov_22s6dd2wjj.s[32]++;\n  if (!request.body.state) {/* istanbul ignore next */cov_22s6dd2wjj.b[3][0]++;cov_22s6dd2wjj.s[33]++;\n    sendStatus(response, 400, 'state not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[3][1]++;}cov_22s6dd2wjj.s[35]++;\n  if (!request.body.hiking) {/* istanbul ignore next */cov_22s6dd2wjj.b[4][0]++;cov_22s6dd2wjj.s[36]++;\n    sendStatus(response, 400, 'hiking info not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[4][1]++;}cov_22s6dd2wjj.s[38]++;\n  if (!request.body.range) {/* istanbul ignore next */cov_22s6dd2wjj.b[5][0]++;cov_22s6dd2wjj.s[39]++;\n    sendStatus(response, 400, 'range name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[40]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[5][1]++;}\n  let mountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[41]++, new Mountain(\n  request.body.name,\n  request.body.state,\n  request.body.hiking,\n  request.body.range)); /* istanbul ignore next */cov_22s6dd2wjj.s[42]++;\n\n\n  mountains.push(mountain); /* istanbul ignore next */cov_22s6dd2wjj.s[43]++;\n  sendJSON(response, 200, mountain);\n}","timestamp":"2017-12-08T01:14:31.021Z"}
{"level":"info","message":"Responding with a 400 code due to name not found","timestamp":"2017-12-08T01:14:31.021Z"}
{"level":"info","message":"adding a POST url and callback","timestamp":"2017-12-08T01:16:40.415Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T01:16:40.416Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[6]++;cov_22s6dd2wjj.s[26]++;\n  if (!request.body) {/* istanbul ignore next */cov_22s6dd2wjj.b[1][0]++;cov_22s6dd2wjj.s[27]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[1][1]++;}cov_22s6dd2wjj.s[29]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_22s6dd2wjj.b[2][0]++;cov_22s6dd2wjj.s[30]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[2][1]++;}cov_22s6dd2wjj.s[32]++;\n  if (!request.body.state) {/* istanbul ignore next */cov_22s6dd2wjj.b[3][0]++;cov_22s6dd2wjj.s[33]++;\n    sendStatus(response, 400, 'state not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[3][1]++;}cov_22s6dd2wjj.s[35]++;\n  if (!request.body.hiking) {/* istanbul ignore next */cov_22s6dd2wjj.b[4][0]++;cov_22s6dd2wjj.s[36]++;\n    sendStatus(response, 400, 'hiking info not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[4][1]++;}cov_22s6dd2wjj.s[38]++;\n  if (!request.body.range) {/* istanbul ignore next */cov_22s6dd2wjj.b[5][0]++;cov_22s6dd2wjj.s[39]++;\n    sendStatus(response, 400, 'range name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[40]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[5][1]++;}\n  let mountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[41]++, new Mountain(\n  request.body.name,\n  request.body.state,\n  request.body.hiking,\n  request.body.range)); /* istanbul ignore next */cov_22s6dd2wjj.s[42]++;\n\n\n  mountains.push(mountain); /* istanbul ignore next */cov_22s6dd2wjj.s[43]++;\n  sendJSON(response, 200, mountain);\n}","timestamp":"2017-12-08T01:16:40.416Z"}
{"level":"info","message":"adding a GET url and callback","timestamp":"2017-12-08T01:16:40.416Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T01:16:40.416Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[7]++;\n  let id = /* istanbul ignore next */(cov_22s6dd2wjj.s[45]++, request.url.query.id); /* istanbul ignore next */cov_22s6dd2wjj.s[46]++;\n\n  if (id) {/* istanbul ignore next */cov_22s6dd2wjj.b[6][0]++;\n    let requestMountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[47]++, getMountainById(id)); /* istanbul ignore next */cov_22s6dd2wjj.s[48]++;\n    if (requestMountain)\n      {/* istanbul ignore next */cov_22s6dd2wjj.b[7][0]++;cov_22s6dd2wjj.s[49]++;sendJSON(response, 200, requestMountain);} else\n\n      {/* istanbul ignore next */cov_22s6dd2wjj.b[7][1]++;cov_22s6dd2wjj.s[50]++;sendStatus(response, 404, `no mountain found with the id of ${id}`);}\n  } else\n    {/* istanbul ignore next */cov_22s6dd2wjj.b[6][1]++;cov_22s6dd2wjj.s[51]++;sendJSON(response, 200, mountains);}\n}","timestamp":"2017-12-08T01:16:40.416Z"}
{"level":"info","message":"adding a DELETE url and callback","timestamp":"2017-12-08T01:16:40.416Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T01:16:40.416Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[8]++;\n  let id = /* istanbul ignore next */(cov_22s6dd2wjj.s[53]++, request.url.query.id); /* istanbul ignore next */cov_22s6dd2wjj.s[54]++;\n  if (id) {/* istanbul ignore next */cov_22s6dd2wjj.b[8][0]++;\n    let deletedMountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[55]++, deleteMountainById(id)); /* istanbul ignore next */cov_22s6dd2wjj.s[56]++;\n    if (deletedMountain) {/* istanbul ignore next */cov_22s6dd2wjj.b[9][0]++;cov_22s6dd2wjj.s[57]++;\n      logger.log('info', `Mountain deleted, responding with a 200 success code`); /* istanbul ignore next */cov_22s6dd2wjj.s[58]++;\n      response.writeHead(200); /* istanbul ignore next */cov_22s6dd2wjj.s[59]++;\n      response.end();\n    } else\n      {/* istanbul ignore next */cov_22s6dd2wjj.b[9][1]++;cov_22s6dd2wjj.s[60]++;sendStatus(response, 404, `No mountain was found with an id ${id}`);}\n  } else\n    {/* istanbul ignore next */cov_22s6dd2wjj.b[8][1]++;cov_22s6dd2wjj.s[61]++;sendStatus(response, 400, `something else occurred - bad request.`);}\n}","timestamp":"2017-12-08T01:16:40.416Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T01:16:40.473Z"}
{"level":"info","message":"Original URL: \"/api/mountains\"","timestamp":"2017-12-08T01:16:40.473Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/mountains\",\"path\":\"/api/mountains\",\"href\":\"/api/mountains\"}","timestamp":"2017-12-08T01:16:40.473Z"}
{"level":"info","message":"found the following handler","timestamp":"2017-12-08T01:16:40.474Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[6]++;cov_22s6dd2wjj.s[26]++;\n  if (!request.body) {/* istanbul ignore next */cov_22s6dd2wjj.b[1][0]++;cov_22s6dd2wjj.s[27]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[1][1]++;}cov_22s6dd2wjj.s[29]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_22s6dd2wjj.b[2][0]++;cov_22s6dd2wjj.s[30]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[2][1]++;}cov_22s6dd2wjj.s[32]++;\n  if (!request.body.state) {/* istanbul ignore next */cov_22s6dd2wjj.b[3][0]++;cov_22s6dd2wjj.s[33]++;\n    sendStatus(response, 400, 'state not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[3][1]++;}cov_22s6dd2wjj.s[35]++;\n  if (!request.body.hiking) {/* istanbul ignore next */cov_22s6dd2wjj.b[4][0]++;cov_22s6dd2wjj.s[36]++;\n    sendStatus(response, 400, 'hiking info not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[4][1]++;}cov_22s6dd2wjj.s[38]++;\n  if (!request.body.range) {/* istanbul ignore next */cov_22s6dd2wjj.b[5][0]++;cov_22s6dd2wjj.s[39]++;\n    sendStatus(response, 400, 'range name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[40]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[5][1]++;}\n  let mountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[41]++, new Mountain(\n  request.body.name,\n  request.body.state,\n  request.body.hiking,\n  request.body.range)); /* istanbul ignore next */cov_22s6dd2wjj.s[42]++;\n\n\n  mountains.push(mountain); /* istanbul ignore next */cov_22s6dd2wjj.s[43]++;\n  sendJSON(response, 200, mountain);\n}","timestamp":"2017-12-08T01:16:40.474Z"}
{"level":"info","message":"responding with a 200 code and the following json data","timestamp":"2017-12-08T01:16:40.475Z"}
{"id":"71e906b0-dbb5-11e7-b776-fdce61ed938b","name":"Shuksan","state":"Washington","hiking":"Yes","range":"Cascades","level":"info","message":"","timestamp":"2017-12-08T01:16:40.475Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T01:16:40.483Z"}
{"level":"info","message":"Original URL: \"/api/mountains?id=$333-33\"","timestamp":"2017-12-08T01:16:40.484Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=$333-33\",\"query\":{\"id\":\"$333-33\"},\"pathname\":\"/api/mountains\",\"path\":\"/api/mountains?id=$333-33\",\"href\":\"/api/mountains?id=$333-33\"}","timestamp":"2017-12-08T01:16:40.484Z"}
{"level":"info","message":"found the following handler","timestamp":"2017-12-08T01:16:40.484Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[7]++;\n  let id = /* istanbul ignore next */(cov_22s6dd2wjj.s[45]++, request.url.query.id); /* istanbul ignore next */cov_22s6dd2wjj.s[46]++;\n\n  if (id) {/* istanbul ignore next */cov_22s6dd2wjj.b[6][0]++;\n    let requestMountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[47]++, getMountainById(id)); /* istanbul ignore next */cov_22s6dd2wjj.s[48]++;\n    if (requestMountain)\n      {/* istanbul ignore next */cov_22s6dd2wjj.b[7][0]++;cov_22s6dd2wjj.s[49]++;sendJSON(response, 200, requestMountain);} else\n\n      {/* istanbul ignore next */cov_22s6dd2wjj.b[7][1]++;cov_22s6dd2wjj.s[50]++;sendStatus(response, 404, `no mountain found with the id of ${id}`);}\n  } else\n    {/* istanbul ignore next */cov_22s6dd2wjj.b[6][1]++;cov_22s6dd2wjj.s[51]++;sendJSON(response, 200, mountains);}\n}","timestamp":"2017-12-08T01:16:40.484Z"}
{"level":"info","message":"Responding with a 404 code due to no mountain found with the id of $333-33","timestamp":"2017-12-08T01:16:40.484Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T01:16:40.487Z"}
{"level":"info","message":"Original URL: \"/api/mountains?id=e8013d70-dbad-11e7-9cb6-ddffa32a3c9b\"","timestamp":"2017-12-08T01:16:40.487Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=e8013d70-dbad-11e7-9cb6-ddffa32a3c9b\",\"query\":{\"id\":\"e8013d70-dbad-11e7-9cb6-ddffa32a3c9b\"},\"pathname\":\"/api/mountains\",\"path\":\"/api/mountains?id=e8013d70-dbad-11e7-9cb6-ddffa32a3c9b\",\"href\":\"/api/mountains?id=e8013d70-dbad-11e7-9cb6-ddffa32a3c9b\"}","timestamp":"2017-12-08T01:16:40.487Z"}
{"level":"info","message":"found the following handler","timestamp":"2017-12-08T01:16:40.487Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[7]++;\n  let id = /* istanbul ignore next */(cov_22s6dd2wjj.s[45]++, request.url.query.id); /* istanbul ignore next */cov_22s6dd2wjj.s[46]++;\n\n  if (id) {/* istanbul ignore next */cov_22s6dd2wjj.b[6][0]++;\n    let requestMountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[47]++, getMountainById(id)); /* istanbul ignore next */cov_22s6dd2wjj.s[48]++;\n    if (requestMountain)\n      {/* istanbul ignore next */cov_22s6dd2wjj.b[7][0]++;cov_22s6dd2wjj.s[49]++;sendJSON(response, 200, requestMountain);} else\n\n      {/* istanbul ignore next */cov_22s6dd2wjj.b[7][1]++;cov_22s6dd2wjj.s[50]++;sendStatus(response, 404, `no mountain found with the id of ${id}`);}\n  } else\n    {/* istanbul ignore next */cov_22s6dd2wjj.b[6][1]++;cov_22s6dd2wjj.s[51]++;sendJSON(response, 200, mountains);}\n}","timestamp":"2017-12-08T01:16:40.487Z"}
{"level":"info","message":"Responding with a 404 code due to no mountain found with the id of e8013d70-dbad-11e7-9cb6-ddffa32a3c9b","timestamp":"2017-12-08T01:16:40.487Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T01:16:40.489Z"}
{"level":"info","message":"Original URL: \"/api/mountains\"","timestamp":"2017-12-08T01:16:40.489Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/mountains\",\"path\":\"/api/mountains\",\"href\":\"/api/mountains\"}","timestamp":"2017-12-08T01:16:40.489Z"}
{"level":"info","message":"found the following handler","timestamp":"2017-12-08T01:16:40.490Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[6]++;cov_22s6dd2wjj.s[26]++;\n  if (!request.body) {/* istanbul ignore next */cov_22s6dd2wjj.b[1][0]++;cov_22s6dd2wjj.s[27]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[1][1]++;}cov_22s6dd2wjj.s[29]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_22s6dd2wjj.b[2][0]++;cov_22s6dd2wjj.s[30]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[2][1]++;}cov_22s6dd2wjj.s[32]++;\n  if (!request.body.state) {/* istanbul ignore next */cov_22s6dd2wjj.b[3][0]++;cov_22s6dd2wjj.s[33]++;\n    sendStatus(response, 400, 'state not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[3][1]++;}cov_22s6dd2wjj.s[35]++;\n  if (!request.body.hiking) {/* istanbul ignore next */cov_22s6dd2wjj.b[4][0]++;cov_22s6dd2wjj.s[36]++;\n    sendStatus(response, 400, 'hiking info not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[4][1]++;}cov_22s6dd2wjj.s[38]++;\n  if (!request.body.range) {/* istanbul ignore next */cov_22s6dd2wjj.b[5][0]++;cov_22s6dd2wjj.s[39]++;\n    sendStatus(response, 400, 'range name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[40]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[5][1]++;}\n  let mountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[41]++, new Mountain(\n  request.body.name,\n  request.body.state,\n  request.body.hiking,\n  request.body.range)); /* istanbul ignore next */cov_22s6dd2wjj.s[42]++;\n\n\n  mountains.push(mountain); /* istanbul ignore next */cov_22s6dd2wjj.s[43]++;\n  sendJSON(response, 200, mountain);\n}","timestamp":"2017-12-08T01:16:40.490Z"}
{"level":"info","message":"Responding with a 400 code due to name not found","timestamp":"2017-12-08T01:16:40.490Z"}
{"level":"info","message":"adding a POST url and callback","timestamp":"2017-12-08T01:17:59.365Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T01:17:59.366Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[6]++;cov_22s6dd2wjj.s[26]++;\n  if (!request.body) {/* istanbul ignore next */cov_22s6dd2wjj.b[1][0]++;cov_22s6dd2wjj.s[27]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[1][1]++;}cov_22s6dd2wjj.s[29]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_22s6dd2wjj.b[2][0]++;cov_22s6dd2wjj.s[30]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[2][1]++;}cov_22s6dd2wjj.s[32]++;\n  if (!request.body.state) {/* istanbul ignore next */cov_22s6dd2wjj.b[3][0]++;cov_22s6dd2wjj.s[33]++;\n    sendStatus(response, 400, 'state not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[3][1]++;}cov_22s6dd2wjj.s[35]++;\n  if (!request.body.hiking) {/* istanbul ignore next */cov_22s6dd2wjj.b[4][0]++;cov_22s6dd2wjj.s[36]++;\n    sendStatus(response, 400, 'hiking info not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[4][1]++;}cov_22s6dd2wjj.s[38]++;\n  if (!request.body.range) {/* istanbul ignore next */cov_22s6dd2wjj.b[5][0]++;cov_22s6dd2wjj.s[39]++;\n    sendStatus(response, 400, 'range name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[40]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[5][1]++;}\n  let mountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[41]++, new Mountain(\n  request.body.name,\n  request.body.state,\n  request.body.hiking,\n  request.body.range)); /* istanbul ignore next */cov_22s6dd2wjj.s[42]++;\n\n\n  mountains.push(mountain); /* istanbul ignore next */cov_22s6dd2wjj.s[43]++;\n  sendJSON(response, 200, mountain);\n}","timestamp":"2017-12-08T01:17:59.366Z"}
{"level":"info","message":"adding a GET url and callback","timestamp":"2017-12-08T01:17:59.366Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T01:17:59.366Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[7]++;\n  let id = /* istanbul ignore next */(cov_22s6dd2wjj.s[45]++, request.url.query.id); /* istanbul ignore next */cov_22s6dd2wjj.s[46]++;\n\n  if (id) {/* istanbul ignore next */cov_22s6dd2wjj.b[6][0]++;\n    let requestMountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[47]++, getMountainById(id)); /* istanbul ignore next */cov_22s6dd2wjj.s[48]++;\n    if (requestMountain)\n      {/* istanbul ignore next */cov_22s6dd2wjj.b[7][0]++;cov_22s6dd2wjj.s[49]++;sendJSON(response, 200, requestMountain);} else\n\n      {/* istanbul ignore next */cov_22s6dd2wjj.b[7][1]++;cov_22s6dd2wjj.s[50]++;sendStatus(response, 404, `no mountain found with the id of ${id}`);}\n  } else\n    {/* istanbul ignore next */cov_22s6dd2wjj.b[6][1]++;cov_22s6dd2wjj.s[51]++;sendJSON(response, 200, mountains);}\n}","timestamp":"2017-12-08T01:17:59.366Z"}
{"level":"info","message":"adding a DELETE url and callback","timestamp":"2017-12-08T01:17:59.366Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T01:17:59.366Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[8]++;\n  let id = /* istanbul ignore next */(cov_22s6dd2wjj.s[53]++, request.url.query.id); /* istanbul ignore next */cov_22s6dd2wjj.s[54]++;\n  if (id) {/* istanbul ignore next */cov_22s6dd2wjj.b[8][0]++;\n    let deletedMountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[55]++, deleteMountainById(id)); /* istanbul ignore next */cov_22s6dd2wjj.s[56]++;\n    if (deletedMountain) {/* istanbul ignore next */cov_22s6dd2wjj.b[9][0]++;cov_22s6dd2wjj.s[57]++;\n      logger.log('info', `Mountain deleted, responding with a 200 success code`); /* istanbul ignore next */cov_22s6dd2wjj.s[58]++;\n      response.writeHead(200); /* istanbul ignore next */cov_22s6dd2wjj.s[59]++;\n      response.end();\n    } else\n      {/* istanbul ignore next */cov_22s6dd2wjj.b[9][1]++;cov_22s6dd2wjj.s[60]++;sendStatus(response, 404, `No mountain was found with an id ${id}`);}\n  } else\n    {/* istanbul ignore next */cov_22s6dd2wjj.b[8][1]++;cov_22s6dd2wjj.s[61]++;sendStatus(response, 400, `something else occurred - bad request.`);}\n}","timestamp":"2017-12-08T01:17:59.366Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T01:17:59.421Z"}
{"level":"info","message":"Original URL: \"/api/mountains?id=e8013d70-dbad-11e7-9cb6-ddffa32a3c9b\"","timestamp":"2017-12-08T01:17:59.422Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=e8013d70-dbad-11e7-9cb6-ddffa32a3c9b\",\"query\":{\"id\":\"e8013d70-dbad-11e7-9cb6-ddffa32a3c9b\"},\"pathname\":\"/api/mountains\",\"path\":\"/api/mountains?id=e8013d70-dbad-11e7-9cb6-ddffa32a3c9b\",\"href\":\"/api/mountains?id=e8013d70-dbad-11e7-9cb6-ddffa32a3c9b\"}","timestamp":"2017-12-08T01:17:59.422Z"}
{"level":"info","message":"found the following handler","timestamp":"2017-12-08T01:17:59.422Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[7]++;\n  let id = /* istanbul ignore next */(cov_22s6dd2wjj.s[45]++, request.url.query.id); /* istanbul ignore next */cov_22s6dd2wjj.s[46]++;\n\n  if (id) {/* istanbul ignore next */cov_22s6dd2wjj.b[6][0]++;\n    let requestMountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[47]++, getMountainById(id)); /* istanbul ignore next */cov_22s6dd2wjj.s[48]++;\n    if (requestMountain)\n      {/* istanbul ignore next */cov_22s6dd2wjj.b[7][0]++;cov_22s6dd2wjj.s[49]++;sendJSON(response, 200, requestMountain);} else\n\n      {/* istanbul ignore next */cov_22s6dd2wjj.b[7][1]++;cov_22s6dd2wjj.s[50]++;sendStatus(response, 404, `no mountain found with the id of ${id}`);}\n  } else\n    {/* istanbul ignore next */cov_22s6dd2wjj.b[6][1]++;cov_22s6dd2wjj.s[51]++;sendJSON(response, 200, mountains);}\n}","timestamp":"2017-12-08T01:17:59.422Z"}
{"level":"info","message":"Responding with a 404 code due to no mountain found with the id of e8013d70-dbad-11e7-9cb6-ddffa32a3c9b","timestamp":"2017-12-08T01:17:59.423Z"}
{"level":"info","message":"adding a POST url and callback","timestamp":"2017-12-08T01:20:14.149Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T01:20:14.150Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[6]++;cov_22s6dd2wjj.s[26]++;\n  if (!request.body) {/* istanbul ignore next */cov_22s6dd2wjj.b[1][0]++;cov_22s6dd2wjj.s[27]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[1][1]++;}cov_22s6dd2wjj.s[29]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_22s6dd2wjj.b[2][0]++;cov_22s6dd2wjj.s[30]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[2][1]++;}cov_22s6dd2wjj.s[32]++;\n  if (!request.body.state) {/* istanbul ignore next */cov_22s6dd2wjj.b[3][0]++;cov_22s6dd2wjj.s[33]++;\n    sendStatus(response, 400, 'state not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[3][1]++;}cov_22s6dd2wjj.s[35]++;\n  if (!request.body.hiking) {/* istanbul ignore next */cov_22s6dd2wjj.b[4][0]++;cov_22s6dd2wjj.s[36]++;\n    sendStatus(response, 400, 'hiking info not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[4][1]++;}cov_22s6dd2wjj.s[38]++;\n  if (!request.body.range) {/* istanbul ignore next */cov_22s6dd2wjj.b[5][0]++;cov_22s6dd2wjj.s[39]++;\n    sendStatus(response, 400, 'range name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[40]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[5][1]++;}\n  let mountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[41]++, new Mountain(\n  request.body.name,\n  request.body.state,\n  request.body.hiking,\n  request.body.range)); /* istanbul ignore next */cov_22s6dd2wjj.s[42]++;\n\n\n  mountains.push(mountain); /* istanbul ignore next */cov_22s6dd2wjj.s[43]++;\n  sendJSON(response, 200, mountain);\n}","timestamp":"2017-12-08T01:20:14.150Z"}
{"level":"info","message":"adding a GET url and callback","timestamp":"2017-12-08T01:20:14.150Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T01:20:14.150Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[7]++;\n  let id = /* istanbul ignore next */(cov_22s6dd2wjj.s[45]++, request.url.query.id); /* istanbul ignore next */cov_22s6dd2wjj.s[46]++;\n\n  if (id) {/* istanbul ignore next */cov_22s6dd2wjj.b[6][0]++;\n    let requestMountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[47]++, getMountainById(id)); /* istanbul ignore next */cov_22s6dd2wjj.s[48]++;\n    if (requestMountain)\n      {/* istanbul ignore next */cov_22s6dd2wjj.b[7][0]++;cov_22s6dd2wjj.s[49]++;sendJSON(response, 200, requestMountain);} else\n\n      {/* istanbul ignore next */cov_22s6dd2wjj.b[7][1]++;cov_22s6dd2wjj.s[50]++;sendStatus(response, 404, `no mountain found with the id of ${id}`);}\n  } else\n    {/* istanbul ignore next */cov_22s6dd2wjj.b[6][1]++;cov_22s6dd2wjj.s[51]++;sendJSON(response, 200, mountains);}\n}","timestamp":"2017-12-08T01:20:14.150Z"}
{"level":"info","message":"adding a DELETE url and callback","timestamp":"2017-12-08T01:20:14.150Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T01:20:14.150Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[8]++;\n  let id = /* istanbul ignore next */(cov_22s6dd2wjj.s[53]++, request.url.query.id); /* istanbul ignore next */cov_22s6dd2wjj.s[54]++;\n  if (id) {/* istanbul ignore next */cov_22s6dd2wjj.b[8][0]++;\n    let deletedMountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[55]++, deleteMountainById(id)); /* istanbul ignore next */cov_22s6dd2wjj.s[56]++;\n    if (deletedMountain) {/* istanbul ignore next */cov_22s6dd2wjj.b[9][0]++;cov_22s6dd2wjj.s[57]++;\n      logger.log('info', `Mountain deleted, responding with a 200 success code`); /* istanbul ignore next */cov_22s6dd2wjj.s[58]++;\n      response.writeHead(200); /* istanbul ignore next */cov_22s6dd2wjj.s[59]++;\n      response.end();\n    } else\n      {/* istanbul ignore next */cov_22s6dd2wjj.b[9][1]++;cov_22s6dd2wjj.s[60]++;sendStatus(response, 404, `No mountain was found with an id ${id}`);}\n  } else\n    {/* istanbul ignore next */cov_22s6dd2wjj.b[8][1]++;cov_22s6dd2wjj.s[61]++;sendStatus(response, 400, `something else occurred - bad request.`);}\n}","timestamp":"2017-12-08T01:20:14.150Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T01:20:14.209Z"}
{"level":"info","message":"Original URL: \"/api/mountains\"","timestamp":"2017-12-08T01:20:14.209Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/mountains\",\"path\":\"/api/mountains\",\"href\":\"/api/mountains\"}","timestamp":"2017-12-08T01:20:14.209Z"}
{"level":"info","message":"found the following handler","timestamp":"2017-12-08T01:20:14.209Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[7]++;\n  let id = /* istanbul ignore next */(cov_22s6dd2wjj.s[45]++, request.url.query.id); /* istanbul ignore next */cov_22s6dd2wjj.s[46]++;\n\n  if (id) {/* istanbul ignore next */cov_22s6dd2wjj.b[6][0]++;\n    let requestMountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[47]++, getMountainById(id)); /* istanbul ignore next */cov_22s6dd2wjj.s[48]++;\n    if (requestMountain)\n      {/* istanbul ignore next */cov_22s6dd2wjj.b[7][0]++;cov_22s6dd2wjj.s[49]++;sendJSON(response, 200, requestMountain);} else\n\n      {/* istanbul ignore next */cov_22s6dd2wjj.b[7][1]++;cov_22s6dd2wjj.s[50]++;sendStatus(response, 404, `no mountain found with the id of ${id}`);}\n  } else\n    {/* istanbul ignore next */cov_22s6dd2wjj.b[6][1]++;cov_22s6dd2wjj.s[51]++;sendJSON(response, 200, mountains);}\n}","timestamp":"2017-12-08T01:20:14.209Z"}
{"level":"info","message":"responding with a 200 code and the following json data","timestamp":"2017-12-08T01:20:14.213Z"}
[]
{"level":"info","message":"adding a POST url and callback","timestamp":"2017-12-08T01:21:01.346Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T01:21:01.347Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[6]++;cov_22s6dd2wjj.s[26]++;\n  if (!request.body) {/* istanbul ignore next */cov_22s6dd2wjj.b[1][0]++;cov_22s6dd2wjj.s[27]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[1][1]++;}cov_22s6dd2wjj.s[29]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_22s6dd2wjj.b[2][0]++;cov_22s6dd2wjj.s[30]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[2][1]++;}cov_22s6dd2wjj.s[32]++;\n  if (!request.body.state) {/* istanbul ignore next */cov_22s6dd2wjj.b[3][0]++;cov_22s6dd2wjj.s[33]++;\n    sendStatus(response, 400, 'state not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[3][1]++;}cov_22s6dd2wjj.s[35]++;\n  if (!request.body.hiking) {/* istanbul ignore next */cov_22s6dd2wjj.b[4][0]++;cov_22s6dd2wjj.s[36]++;\n    sendStatus(response, 400, 'hiking info not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[4][1]++;}cov_22s6dd2wjj.s[38]++;\n  if (!request.body.range) {/* istanbul ignore next */cov_22s6dd2wjj.b[5][0]++;cov_22s6dd2wjj.s[39]++;\n    sendStatus(response, 400, 'range name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[40]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[5][1]++;}\n  let mountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[41]++, new Mountain(\n  request.body.name,\n  request.body.state,\n  request.body.hiking,\n  request.body.range)); /* istanbul ignore next */cov_22s6dd2wjj.s[42]++;\n\n\n  mountains.push(mountain); /* istanbul ignore next */cov_22s6dd2wjj.s[43]++;\n  sendJSON(response, 200, mountain);\n}","timestamp":"2017-12-08T01:21:01.347Z"}
{"level":"info","message":"adding a GET url and callback","timestamp":"2017-12-08T01:21:01.347Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T01:21:01.347Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[7]++;\n  let id = /* istanbul ignore next */(cov_22s6dd2wjj.s[45]++, request.url.query.id); /* istanbul ignore next */cov_22s6dd2wjj.s[46]++;\n\n  if (id) {/* istanbul ignore next */cov_22s6dd2wjj.b[6][0]++;\n    let requestMountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[47]++, getMountainById(id)); /* istanbul ignore next */cov_22s6dd2wjj.s[48]++;\n    if (requestMountain)\n      {/* istanbul ignore next */cov_22s6dd2wjj.b[7][0]++;cov_22s6dd2wjj.s[49]++;sendJSON(response, 200, requestMountain);} else\n\n      {/* istanbul ignore next */cov_22s6dd2wjj.b[7][1]++;cov_22s6dd2wjj.s[50]++;sendStatus(response, 404, `no mountain found with the id of ${id}`);}\n  } else\n    {/* istanbul ignore next */cov_22s6dd2wjj.b[6][1]++;cov_22s6dd2wjj.s[51]++;sendJSON(response, 200, mountains);}\n}","timestamp":"2017-12-08T01:21:01.347Z"}
{"level":"info","message":"adding a DELETE url and callback","timestamp":"2017-12-08T01:21:01.347Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T01:21:01.347Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[8]++;\n  let id = /* istanbul ignore next */(cov_22s6dd2wjj.s[53]++, request.url.query.id); /* istanbul ignore next */cov_22s6dd2wjj.s[54]++;\n  if (id) {/* istanbul ignore next */cov_22s6dd2wjj.b[8][0]++;\n    let deletedMountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[55]++, deleteMountainById(id)); /* istanbul ignore next */cov_22s6dd2wjj.s[56]++;\n    if (deletedMountain) {/* istanbul ignore next */cov_22s6dd2wjj.b[9][0]++;cov_22s6dd2wjj.s[57]++;\n      logger.log('info', `Mountain deleted, responding with a 200 success code`); /* istanbul ignore next */cov_22s6dd2wjj.s[58]++;\n      response.writeHead(200); /* istanbul ignore next */cov_22s6dd2wjj.s[59]++;\n      response.end();\n    } else\n      {/* istanbul ignore next */cov_22s6dd2wjj.b[9][1]++;cov_22s6dd2wjj.s[60]++;sendStatus(response, 404, `No mountain was found with an id ${id}`);}\n  } else\n    {/* istanbul ignore next */cov_22s6dd2wjj.b[8][1]++;cov_22s6dd2wjj.s[61]++;sendStatus(response, 400, `something else occurred - bad request.`);}\n}","timestamp":"2017-12-08T01:21:01.347Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T01:21:01.402Z"}
{"level":"info","message":"Original URL: \"/api/mountains\"","timestamp":"2017-12-08T01:21:01.403Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/mountains\",\"path\":\"/api/mountains\",\"href\":\"/api/mountains\"}","timestamp":"2017-12-08T01:21:01.403Z"}
{"level":"info","message":"found the following handler","timestamp":"2017-12-08T01:21:01.403Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[7]++;\n  let id = /* istanbul ignore next */(cov_22s6dd2wjj.s[45]++, request.url.query.id); /* istanbul ignore next */cov_22s6dd2wjj.s[46]++;\n\n  if (id) {/* istanbul ignore next */cov_22s6dd2wjj.b[6][0]++;\n    let requestMountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[47]++, getMountainById(id)); /* istanbul ignore next */cov_22s6dd2wjj.s[48]++;\n    if (requestMountain)\n      {/* istanbul ignore next */cov_22s6dd2wjj.b[7][0]++;cov_22s6dd2wjj.s[49]++;sendJSON(response, 200, requestMountain);} else\n\n      {/* istanbul ignore next */cov_22s6dd2wjj.b[7][1]++;cov_22s6dd2wjj.s[50]++;sendStatus(response, 404, `no mountain found with the id of ${id}`);}\n  } else\n    {/* istanbul ignore next */cov_22s6dd2wjj.b[6][1]++;cov_22s6dd2wjj.s[51]++;sendJSON(response, 200, mountains);}\n}","timestamp":"2017-12-08T01:21:01.403Z"}
{"level":"info","message":"responding with a 200 code and the following json data","timestamp":"2017-12-08T01:21:01.403Z"}
[]
{"level":"info","message":"adding a POST url and callback","timestamp":"2017-12-08T01:21:52.569Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T01:21:52.570Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[6]++;cov_22s6dd2wjj.s[26]++;\n  if (!request.body) {/* istanbul ignore next */cov_22s6dd2wjj.b[1][0]++;cov_22s6dd2wjj.s[27]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[1][1]++;}cov_22s6dd2wjj.s[29]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_22s6dd2wjj.b[2][0]++;cov_22s6dd2wjj.s[30]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[2][1]++;}cov_22s6dd2wjj.s[32]++;\n  if (!request.body.state) {/* istanbul ignore next */cov_22s6dd2wjj.b[3][0]++;cov_22s6dd2wjj.s[33]++;\n    sendStatus(response, 400, 'state not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[3][1]++;}cov_22s6dd2wjj.s[35]++;\n  if (!request.body.hiking) {/* istanbul ignore next */cov_22s6dd2wjj.b[4][0]++;cov_22s6dd2wjj.s[36]++;\n    sendStatus(response, 400, 'hiking info not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[4][1]++;}cov_22s6dd2wjj.s[38]++;\n  if (!request.body.range) {/* istanbul ignore next */cov_22s6dd2wjj.b[5][0]++;cov_22s6dd2wjj.s[39]++;\n    sendStatus(response, 400, 'range name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[40]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[5][1]++;}\n  let mountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[41]++, new Mountain(\n  request.body.name,\n  request.body.state,\n  request.body.hiking,\n  request.body.range)); /* istanbul ignore next */cov_22s6dd2wjj.s[42]++;\n\n\n  mountains.push(mountain); /* istanbul ignore next */cov_22s6dd2wjj.s[43]++;\n  sendJSON(response, 200, mountain);\n}","timestamp":"2017-12-08T01:21:52.570Z"}
{"level":"info","message":"adding a GET url and callback","timestamp":"2017-12-08T01:21:52.570Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T01:21:52.570Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[7]++;\n  let id = /* istanbul ignore next */(cov_22s6dd2wjj.s[45]++, request.url.query.id); /* istanbul ignore next */cov_22s6dd2wjj.s[46]++;\n\n  if (id) {/* istanbul ignore next */cov_22s6dd2wjj.b[6][0]++;\n    let requestMountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[47]++, getMountainById(id)); /* istanbul ignore next */cov_22s6dd2wjj.s[48]++;\n    if (requestMountain)\n      {/* istanbul ignore next */cov_22s6dd2wjj.b[7][0]++;cov_22s6dd2wjj.s[49]++;sendJSON(response, 200, requestMountain);} else\n\n      {/* istanbul ignore next */cov_22s6dd2wjj.b[7][1]++;cov_22s6dd2wjj.s[50]++;sendStatus(response, 404, `no mountain found with the id of ${id}`);}\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[6][1]++;}\n}","timestamp":"2017-12-08T01:21:52.570Z"}
{"level":"info","message":"adding a DELETE url and callback","timestamp":"2017-12-08T01:21:52.570Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T01:21:52.570Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[8]++;\n  let id = /* istanbul ignore next */(cov_22s6dd2wjj.s[52]++, request.url.query.id); /* istanbul ignore next */cov_22s6dd2wjj.s[53]++;\n  if (id) {/* istanbul ignore next */cov_22s6dd2wjj.b[8][0]++;\n    let deletedMountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[54]++, deleteMountainById(id)); /* istanbul ignore next */cov_22s6dd2wjj.s[55]++;\n    if (deletedMountain) {/* istanbul ignore next */cov_22s6dd2wjj.b[9][0]++;cov_22s6dd2wjj.s[56]++;\n      logger.log('info', `Mountain deleted, responding with a 200 success code`); /* istanbul ignore next */cov_22s6dd2wjj.s[57]++;\n      response.writeHead(200); /* istanbul ignore next */cov_22s6dd2wjj.s[58]++;\n      response.end();\n    } else\n      {/* istanbul ignore next */cov_22s6dd2wjj.b[9][1]++;cov_22s6dd2wjj.s[59]++;sendStatus(response, 404, `No mountain was found with an id ${id}`);}\n  } else\n    {/* istanbul ignore next */cov_22s6dd2wjj.b[8][1]++;cov_22s6dd2wjj.s[60]++;sendStatus(response, 400, `something else occurred - bad request.`);}\n}","timestamp":"2017-12-08T01:21:52.570Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T01:21:52.662Z"}
{"level":"info","message":"Original URL: \"/api/mountains\"","timestamp":"2017-12-08T01:21:52.662Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/mountains\",\"path\":\"/api/mountains\",\"href\":\"/api/mountains\"}","timestamp":"2017-12-08T01:21:52.662Z"}
{"level":"info","message":"found the following handler","timestamp":"2017-12-08T01:21:52.663Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[7]++;\n  let id = /* istanbul ignore next */(cov_22s6dd2wjj.s[45]++, request.url.query.id); /* istanbul ignore next */cov_22s6dd2wjj.s[46]++;\n\n  if (id) {/* istanbul ignore next */cov_22s6dd2wjj.b[6][0]++;\n    let requestMountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[47]++, getMountainById(id)); /* istanbul ignore next */cov_22s6dd2wjj.s[48]++;\n    if (requestMountain)\n      {/* istanbul ignore next */cov_22s6dd2wjj.b[7][0]++;cov_22s6dd2wjj.s[49]++;sendJSON(response, 200, requestMountain);} else\n\n      {/* istanbul ignore next */cov_22s6dd2wjj.b[7][1]++;cov_22s6dd2wjj.s[50]++;sendStatus(response, 404, `no mountain found with the id of ${id}`);}\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[6][1]++;}\n}","timestamp":"2017-12-08T01:21:52.663Z"}
{"level":"info","message":"adding a POST url and callback","timestamp":"2017-12-08T01:23:24.236Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T01:23:24.237Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[6]++;cov_22s6dd2wjj.s[26]++;\n  if (!request.body) {/* istanbul ignore next */cov_22s6dd2wjj.b[1][0]++;cov_22s6dd2wjj.s[27]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[1][1]++;}cov_22s6dd2wjj.s[29]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_22s6dd2wjj.b[2][0]++;cov_22s6dd2wjj.s[30]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[2][1]++;}cov_22s6dd2wjj.s[32]++;\n  if (!request.body.state) {/* istanbul ignore next */cov_22s6dd2wjj.b[3][0]++;cov_22s6dd2wjj.s[33]++;\n    sendStatus(response, 400, 'state not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[3][1]++;}cov_22s6dd2wjj.s[35]++;\n  if (!request.body.hiking) {/* istanbul ignore next */cov_22s6dd2wjj.b[4][0]++;cov_22s6dd2wjj.s[36]++;\n    sendStatus(response, 400, 'hiking info not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[4][1]++;}cov_22s6dd2wjj.s[38]++;\n  if (!request.body.range) {/* istanbul ignore next */cov_22s6dd2wjj.b[5][0]++;cov_22s6dd2wjj.s[39]++;\n    sendStatus(response, 400, 'range name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[40]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[5][1]++;}\n  let mountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[41]++, new Mountain(\n  request.body.name,\n  request.body.state,\n  request.body.hiking,\n  request.body.range)); /* istanbul ignore next */cov_22s6dd2wjj.s[42]++;\n\n\n  mountains.push(mountain); /* istanbul ignore next */cov_22s6dd2wjj.s[43]++;\n  sendJSON(response, 200, mountain);\n}","timestamp":"2017-12-08T01:23:24.237Z"}
{"level":"info","message":"adding a GET url and callback","timestamp":"2017-12-08T01:23:24.238Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T01:23:24.238Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[7]++;\n  let id = /* istanbul ignore next */(cov_22s6dd2wjj.s[45]++, request.url.query.id); /* istanbul ignore next */cov_22s6dd2wjj.s[46]++;\n\n  if (id) {/* istanbul ignore next */cov_22s6dd2wjj.b[6][0]++;\n    let requestMountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[47]++, getMountainById(id)); /* istanbul ignore next */cov_22s6dd2wjj.s[48]++;\n    if (requestMountain) {/* istanbul ignore next */cov_22s6dd2wjj.b[7][0]++;cov_22s6dd2wjj.s[49]++;\n      sendJSON(response, 200, requestMountain);\n    } else\n      {/* istanbul ignore next */cov_22s6dd2wjj.b[7][1]++;cov_22s6dd2wjj.s[50]++;sendStatus(response, 404, `no mountain found with the id of ${id}`);}\n  } else\n    {/* istanbul ignore next */cov_22s6dd2wjj.b[6][1]++;cov_22s6dd2wjj.s[51]++;sendJSON(response, 200, mountains);}\n}","timestamp":"2017-12-08T01:23:24.238Z"}
{"level":"info","message":"adding a DELETE url and callback","timestamp":"2017-12-08T01:23:24.238Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T01:23:24.238Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[8]++;\n  let id = /* istanbul ignore next */(cov_22s6dd2wjj.s[53]++, request.url.query.id); /* istanbul ignore next */cov_22s6dd2wjj.s[54]++;\n  if (id) {/* istanbul ignore next */cov_22s6dd2wjj.b[8][0]++;\n    let deletedMountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[55]++, deleteMountainById(id)); /* istanbul ignore next */cov_22s6dd2wjj.s[56]++;\n    if (deletedMountain) {/* istanbul ignore next */cov_22s6dd2wjj.b[9][0]++;cov_22s6dd2wjj.s[57]++;\n      logger.log('info', `Mountain deleted, responding with a 200 success code`); /* istanbul ignore next */cov_22s6dd2wjj.s[58]++;\n      response.writeHead(200); /* istanbul ignore next */cov_22s6dd2wjj.s[59]++;\n      response.end();\n    } else\n      {/* istanbul ignore next */cov_22s6dd2wjj.b[9][1]++;cov_22s6dd2wjj.s[60]++;sendStatus(response, 404, `No mountain was found with an id ${id}`);}\n  } else\n    {/* istanbul ignore next */cov_22s6dd2wjj.b[8][1]++;cov_22s6dd2wjj.s[61]++;sendStatus(response, 400, `something else occurred - bad request.`);}\n}","timestamp":"2017-12-08T01:23:24.238Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T01:23:24.332Z"}
{"level":"info","message":"Original URL: \"/api/mountains\"","timestamp":"2017-12-08T01:23:24.333Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/mountains\",\"path\":\"/api/mountains\",\"href\":\"/api/mountains\"}","timestamp":"2017-12-08T01:23:24.333Z"}
{"level":"info","message":"found the following handler","timestamp":"2017-12-08T01:23:24.333Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[7]++;\n  let id = /* istanbul ignore next */(cov_22s6dd2wjj.s[45]++, request.url.query.id); /* istanbul ignore next */cov_22s6dd2wjj.s[46]++;\n\n  if (id) {/* istanbul ignore next */cov_22s6dd2wjj.b[6][0]++;\n    let requestMountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[47]++, getMountainById(id)); /* istanbul ignore next */cov_22s6dd2wjj.s[48]++;\n    if (requestMountain) {/* istanbul ignore next */cov_22s6dd2wjj.b[7][0]++;cov_22s6dd2wjj.s[49]++;\n      sendJSON(response, 200, requestMountain);\n    } else\n      {/* istanbul ignore next */cov_22s6dd2wjj.b[7][1]++;cov_22s6dd2wjj.s[50]++;sendStatus(response, 404, `no mountain found with the id of ${id}`);}\n  } else\n    {/* istanbul ignore next */cov_22s6dd2wjj.b[6][1]++;cov_22s6dd2wjj.s[51]++;sendJSON(response, 200, mountains);}\n}","timestamp":"2017-12-08T01:23:24.333Z"}
{"level":"info","message":"responding with a 200 code and the following json data","timestamp":"2017-12-08T01:23:24.333Z"}
[]
{"level":"info","message":"adding a POST url and callback","timestamp":"2017-12-08T01:26:12.433Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T01:26:12.434Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[6]++;cov_22s6dd2wjj.s[26]++;\n  if (!request.body) {/* istanbul ignore next */cov_22s6dd2wjj.b[1][0]++;cov_22s6dd2wjj.s[27]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[1][1]++;}cov_22s6dd2wjj.s[29]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_22s6dd2wjj.b[2][0]++;cov_22s6dd2wjj.s[30]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[2][1]++;}cov_22s6dd2wjj.s[32]++;\n  if (!request.body.state) {/* istanbul ignore next */cov_22s6dd2wjj.b[3][0]++;cov_22s6dd2wjj.s[33]++;\n    sendStatus(response, 400, 'state not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[3][1]++;}cov_22s6dd2wjj.s[35]++;\n  if (!request.body.hiking) {/* istanbul ignore next */cov_22s6dd2wjj.b[4][0]++;cov_22s6dd2wjj.s[36]++;\n    sendStatus(response, 400, 'hiking info not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[4][1]++;}cov_22s6dd2wjj.s[38]++;\n  if (!request.body.range) {/* istanbul ignore next */cov_22s6dd2wjj.b[5][0]++;cov_22s6dd2wjj.s[39]++;\n    sendStatus(response, 400, 'range name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[40]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[5][1]++;}\n  let mountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[41]++, new Mountain(\n  request.body.name,\n  request.body.state,\n  request.body.hiking,\n  request.body.range)); /* istanbul ignore next */cov_22s6dd2wjj.s[42]++;\n\n\n  mountains.push(mountain); /* istanbul ignore next */cov_22s6dd2wjj.s[43]++;\n  sendJSON(response, 200, mountain);\n}","timestamp":"2017-12-08T01:26:12.434Z"}
{"level":"info","message":"adding a GET url and callback","timestamp":"2017-12-08T01:26:12.434Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T01:26:12.434Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[7]++;\n  let id = /* istanbul ignore next */(cov_22s6dd2wjj.s[45]++, request.url.query.id); /* istanbul ignore next */cov_22s6dd2wjj.s[46]++;\n\n  if (id) {/* istanbul ignore next */cov_22s6dd2wjj.b[6][0]++;\n    let requestMountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[47]++, getMountainById(id)); /* istanbul ignore next */cov_22s6dd2wjj.s[48]++;\n    if (requestMountain) {/* istanbul ignore next */cov_22s6dd2wjj.b[7][0]++;cov_22s6dd2wjj.s[49]++;\n      sendJSON(response, 200, requestMountain);\n    } else {/* istanbul ignore next */cov_22s6dd2wjj.b[7][1]++;cov_22s6dd2wjj.s[50]++;if (!requestMountain)\n          {/* istanbul ignore next */cov_22s6dd2wjj.b[8][0]++;cov_22s6dd2wjj.s[51]++;sendStatus(response, 404, `no mountain found with the id of ${id}`);} else /* istanbul ignore next */{cov_22s6dd2wjj.b[8][1]++;}}\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[6][1]++;}\n}","timestamp":"2017-12-08T01:26:12.434Z"}
{"level":"info","message":"adding a DELETE url and callback","timestamp":"2017-12-08T01:26:12.434Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T01:26:12.434Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[8]++;\n  let id = /* istanbul ignore next */(cov_22s6dd2wjj.s[53]++, request.url.query.id); /* istanbul ignore next */cov_22s6dd2wjj.s[54]++;\n  if (id) {/* istanbul ignore next */cov_22s6dd2wjj.b[9][0]++;\n    let deletedMountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[55]++, deleteMountainById(id)); /* istanbul ignore next */cov_22s6dd2wjj.s[56]++;\n    if (deletedMountain) {/* istanbul ignore next */cov_22s6dd2wjj.b[10][0]++;cov_22s6dd2wjj.s[57]++;\n      logger.log('info', `Mountain deleted, responding with a 200 success code`); /* istanbul ignore next */cov_22s6dd2wjj.s[58]++;\n      response.writeHead(200); /* istanbul ignore next */cov_22s6dd2wjj.s[59]++;\n      response.end();\n    } else\n      {/* istanbul ignore next */cov_22s6dd2wjj.b[10][1]++;cov_22s6dd2wjj.s[60]++;sendStatus(response, 404, `No mountain was found with an id ${id}`);}\n  } else\n    {/* istanbul ignore next */cov_22s6dd2wjj.b[9][1]++;cov_22s6dd2wjj.s[61]++;sendStatus(response, 400, `something else occurred - bad request.`);}\n}","timestamp":"2017-12-08T01:26:12.434Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T01:26:12.529Z"}
{"level":"info","message":"Original URL: \"/api/mountains\"","timestamp":"2017-12-08T01:26:12.529Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/mountains\",\"path\":\"/api/mountains\",\"href\":\"/api/mountains\"}","timestamp":"2017-12-08T01:26:12.529Z"}
{"level":"info","message":"found the following handler","timestamp":"2017-12-08T01:26:12.529Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[7]++;\n  let id = /* istanbul ignore next */(cov_22s6dd2wjj.s[45]++, request.url.query.id); /* istanbul ignore next */cov_22s6dd2wjj.s[46]++;\n\n  if (id) {/* istanbul ignore next */cov_22s6dd2wjj.b[6][0]++;\n    let requestMountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[47]++, getMountainById(id)); /* istanbul ignore next */cov_22s6dd2wjj.s[48]++;\n    if (requestMountain) {/* istanbul ignore next */cov_22s6dd2wjj.b[7][0]++;cov_22s6dd2wjj.s[49]++;\n      sendJSON(response, 200, requestMountain);\n    } else {/* istanbul ignore next */cov_22s6dd2wjj.b[7][1]++;cov_22s6dd2wjj.s[50]++;if (!requestMountain)\n          {/* istanbul ignore next */cov_22s6dd2wjj.b[8][0]++;cov_22s6dd2wjj.s[51]++;sendStatus(response, 404, `no mountain found with the id of ${id}`);} else /* istanbul ignore next */{cov_22s6dd2wjj.b[8][1]++;}}\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[6][1]++;}\n}","timestamp":"2017-12-08T01:26:12.529Z"}
{"level":"info","message":"adding a POST url and callback","timestamp":"2017-12-08T01:28:11.272Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T01:28:11.273Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[6]++;cov_22s6dd2wjj.s[26]++;\n  if (!request.body) {/* istanbul ignore next */cov_22s6dd2wjj.b[1][0]++;cov_22s6dd2wjj.s[27]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[1][1]++;}cov_22s6dd2wjj.s[29]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_22s6dd2wjj.b[2][0]++;cov_22s6dd2wjj.s[30]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[2][1]++;}cov_22s6dd2wjj.s[32]++;\n  if (!request.body.state) {/* istanbul ignore next */cov_22s6dd2wjj.b[3][0]++;cov_22s6dd2wjj.s[33]++;\n    sendStatus(response, 400, 'state not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[3][1]++;}cov_22s6dd2wjj.s[35]++;\n  if (!request.body.hiking) {/* istanbul ignore next */cov_22s6dd2wjj.b[4][0]++;cov_22s6dd2wjj.s[36]++;\n    sendStatus(response, 400, 'hiking info not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[4][1]++;}cov_22s6dd2wjj.s[38]++;\n  if (!request.body.range) {/* istanbul ignore next */cov_22s6dd2wjj.b[5][0]++;cov_22s6dd2wjj.s[39]++;\n    sendStatus(response, 400, 'range name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[40]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[5][1]++;}\n  let mountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[41]++, new Mountain(\n  request.body.name,\n  request.body.state,\n  request.body.hiking,\n  request.body.range)); /* istanbul ignore next */cov_22s6dd2wjj.s[42]++;\n\n\n  mountains.push(mountain); /* istanbul ignore next */cov_22s6dd2wjj.s[43]++;\n  sendJSON(response, 200, mountain);\n}","timestamp":"2017-12-08T01:28:11.273Z"}
{"level":"info","message":"adding a GET url and callback","timestamp":"2017-12-08T01:28:11.273Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T01:28:11.273Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[7]++;\n  let id = /* istanbul ignore next */(cov_22s6dd2wjj.s[45]++, request.url.query.id); /* istanbul ignore next */cov_22s6dd2wjj.s[46]++;\n\n  if (id) {/* istanbul ignore next */cov_22s6dd2wjj.b[6][0]++;\n    let requestMountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[47]++, getMountainById(id)); /* istanbul ignore next */cov_22s6dd2wjj.s[48]++;\n    if (requestMountain) {/* istanbul ignore next */cov_22s6dd2wjj.b[7][0]++;cov_22s6dd2wjj.s[49]++;\n      sendJSON(response, 200, requestMountain);\n    } else {/* istanbul ignore next */cov_22s6dd2wjj.b[7][1]++;cov_22s6dd2wjj.s[50]++;if (!requestMountain)\n          {/* istanbul ignore next */cov_22s6dd2wjj.b[8][0]++;cov_22s6dd2wjj.s[51]++;sendStatus(response, 404, `no mountain found with the id of ${id}`);} else /* istanbul ignore next */{cov_22s6dd2wjj.b[8][1]++;}}\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[6][1]++;}\n}","timestamp":"2017-12-08T01:28:11.273Z"}
{"level":"info","message":"adding a DELETE url and callback","timestamp":"2017-12-08T01:28:11.273Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T01:28:11.273Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[8]++;\n  let id = /* istanbul ignore next */(cov_22s6dd2wjj.s[53]++, request.url.query.id); /* istanbul ignore next */cov_22s6dd2wjj.s[54]++;\n  if (id) {/* istanbul ignore next */cov_22s6dd2wjj.b[9][0]++;\n    let deletedMountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[55]++, deleteMountainById(id)); /* istanbul ignore next */cov_22s6dd2wjj.s[56]++;\n    if (deletedMountain) {/* istanbul ignore next */cov_22s6dd2wjj.b[10][0]++;cov_22s6dd2wjj.s[57]++;\n      logger.log('info', `Mountain deleted, responding with a 200 success code`); /* istanbul ignore next */cov_22s6dd2wjj.s[58]++;\n      response.writeHead(200); /* istanbul ignore next */cov_22s6dd2wjj.s[59]++;\n      response.end();\n    } else\n      {/* istanbul ignore next */cov_22s6dd2wjj.b[10][1]++;cov_22s6dd2wjj.s[60]++;sendStatus(response, 404, `No mountain was found with an id ${id}`);}\n  } else\n    {/* istanbul ignore next */cov_22s6dd2wjj.b[9][1]++;cov_22s6dd2wjj.s[61]++;sendStatus(response, 400, `something else occurred - bad request.`);}\n}","timestamp":"2017-12-08T01:28:11.273Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T01:28:11.326Z"}
{"level":"info","message":"Original URL: \"/api/mountains?%7BdummyData.id%7D\"","timestamp":"2017-12-08T01:28:11.326Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?%7BdummyData.id%7D\",\"query\":{\"{dummyData.id}\":\"\"},\"pathname\":\"/api/mountains\",\"path\":\"/api/mountains?%7BdummyData.id%7D\",\"href\":\"/api/mountains?%7BdummyData.id%7D\"}","timestamp":"2017-12-08T01:28:11.327Z"}
{"level":"info","message":"found the following handler","timestamp":"2017-12-08T01:28:11.327Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[7]++;\n  let id = /* istanbul ignore next */(cov_22s6dd2wjj.s[45]++, request.url.query.id); /* istanbul ignore next */cov_22s6dd2wjj.s[46]++;\n\n  if (id) {/* istanbul ignore next */cov_22s6dd2wjj.b[6][0]++;\n    let requestMountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[47]++, getMountainById(id)); /* istanbul ignore next */cov_22s6dd2wjj.s[48]++;\n    if (requestMountain) {/* istanbul ignore next */cov_22s6dd2wjj.b[7][0]++;cov_22s6dd2wjj.s[49]++;\n      sendJSON(response, 200, requestMountain);\n    } else {/* istanbul ignore next */cov_22s6dd2wjj.b[7][1]++;cov_22s6dd2wjj.s[50]++;if (!requestMountain)\n          {/* istanbul ignore next */cov_22s6dd2wjj.b[8][0]++;cov_22s6dd2wjj.s[51]++;sendStatus(response, 404, `no mountain found with the id of ${id}`);} else /* istanbul ignore next */{cov_22s6dd2wjj.b[8][1]++;}}\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[6][1]++;}\n}","timestamp":"2017-12-08T01:28:11.327Z"}
{"level":"info","message":"adding a POST url and callback","timestamp":"2017-12-08T01:28:39.011Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T01:28:39.012Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[6]++;cov_22s6dd2wjj.s[26]++;\n  if (!request.body) {/* istanbul ignore next */cov_22s6dd2wjj.b[1][0]++;cov_22s6dd2wjj.s[27]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[1][1]++;}cov_22s6dd2wjj.s[29]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_22s6dd2wjj.b[2][0]++;cov_22s6dd2wjj.s[30]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[2][1]++;}cov_22s6dd2wjj.s[32]++;\n  if (!request.body.state) {/* istanbul ignore next */cov_22s6dd2wjj.b[3][0]++;cov_22s6dd2wjj.s[33]++;\n    sendStatus(response, 400, 'state not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[3][1]++;}cov_22s6dd2wjj.s[35]++;\n  if (!request.body.hiking) {/* istanbul ignore next */cov_22s6dd2wjj.b[4][0]++;cov_22s6dd2wjj.s[36]++;\n    sendStatus(response, 400, 'hiking info not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[4][1]++;}cov_22s6dd2wjj.s[38]++;\n  if (!request.body.range) {/* istanbul ignore next */cov_22s6dd2wjj.b[5][0]++;cov_22s6dd2wjj.s[39]++;\n    sendStatus(response, 400, 'range name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[40]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[5][1]++;}\n  let mountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[41]++, new Mountain(\n  request.body.name,\n  request.body.state,\n  request.body.hiking,\n  request.body.range)); /* istanbul ignore next */cov_22s6dd2wjj.s[42]++;\n\n\n  mountains.push(mountain); /* istanbul ignore next */cov_22s6dd2wjj.s[43]++;\n  sendJSON(response, 200, mountain);\n}","timestamp":"2017-12-08T01:28:39.012Z"}
{"level":"info","message":"adding a GET url and callback","timestamp":"2017-12-08T01:28:39.012Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T01:28:39.012Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[7]++;\n  let id = /* istanbul ignore next */(cov_22s6dd2wjj.s[45]++, request.url.query.id); /* istanbul ignore next */cov_22s6dd2wjj.s[46]++;\n\n  if (id) {/* istanbul ignore next */cov_22s6dd2wjj.b[6][0]++;\n    let requestMountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[47]++, getMountainById(id)); /* istanbul ignore next */cov_22s6dd2wjj.s[48]++;\n    if (requestMountain) {/* istanbul ignore next */cov_22s6dd2wjj.b[7][0]++;cov_22s6dd2wjj.s[49]++;\n      sendJSON(response, 200, requestMountain);\n    } else\n      {/* istanbul ignore next */cov_22s6dd2wjj.b[7][1]++;cov_22s6dd2wjj.s[50]++;sendStatus(response, 404, `no mountain found with the id of ${id}`);}\n  } else\n    {/* istanbul ignore next */cov_22s6dd2wjj.b[6][1]++;cov_22s6dd2wjj.s[51]++;sendJSON(response, 200, mountains);}\n}","timestamp":"2017-12-08T01:28:39.012Z"}
{"level":"info","message":"adding a DELETE url and callback","timestamp":"2017-12-08T01:28:39.012Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T01:28:39.012Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[8]++;\n  let id = /* istanbul ignore next */(cov_22s6dd2wjj.s[53]++, request.url.query.id); /* istanbul ignore next */cov_22s6dd2wjj.s[54]++;\n  if (id) {/* istanbul ignore next */cov_22s6dd2wjj.b[8][0]++;\n    let deletedMountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[55]++, deleteMountainById(id)); /* istanbul ignore next */cov_22s6dd2wjj.s[56]++;\n    if (deletedMountain) {/* istanbul ignore next */cov_22s6dd2wjj.b[9][0]++;cov_22s6dd2wjj.s[57]++;\n      logger.log('info', `Mountain deleted, responding with a 200 success code`); /* istanbul ignore next */cov_22s6dd2wjj.s[58]++;\n      response.writeHead(200); /* istanbul ignore next */cov_22s6dd2wjj.s[59]++;\n      response.end();\n    } else\n      {/* istanbul ignore next */cov_22s6dd2wjj.b[9][1]++;cov_22s6dd2wjj.s[60]++;sendStatus(response, 404, `No mountain was found with an id ${id}`);}\n  } else\n    {/* istanbul ignore next */cov_22s6dd2wjj.b[8][1]++;cov_22s6dd2wjj.s[61]++;sendStatus(response, 400, `something else occurred - bad request.`);}\n}","timestamp":"2017-12-08T01:28:39.012Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T01:28:39.074Z"}
{"level":"info","message":"Original URL: \"/api/mountains?%7BdummyData.id%7D\"","timestamp":"2017-12-08T01:28:39.074Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?%7BdummyData.id%7D\",\"query\":{\"{dummyData.id}\":\"\"},\"pathname\":\"/api/mountains\",\"path\":\"/api/mountains?%7BdummyData.id%7D\",\"href\":\"/api/mountains?%7BdummyData.id%7D\"}","timestamp":"2017-12-08T01:28:39.074Z"}
{"level":"info","message":"found the following handler","timestamp":"2017-12-08T01:28:39.075Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[7]++;\n  let id = /* istanbul ignore next */(cov_22s6dd2wjj.s[45]++, request.url.query.id); /* istanbul ignore next */cov_22s6dd2wjj.s[46]++;\n\n  if (id) {/* istanbul ignore next */cov_22s6dd2wjj.b[6][0]++;\n    let requestMountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[47]++, getMountainById(id)); /* istanbul ignore next */cov_22s6dd2wjj.s[48]++;\n    if (requestMountain) {/* istanbul ignore next */cov_22s6dd2wjj.b[7][0]++;cov_22s6dd2wjj.s[49]++;\n      sendJSON(response, 200, requestMountain);\n    } else\n      {/* istanbul ignore next */cov_22s6dd2wjj.b[7][1]++;cov_22s6dd2wjj.s[50]++;sendStatus(response, 404, `no mountain found with the id of ${id}`);}\n  } else\n    {/* istanbul ignore next */cov_22s6dd2wjj.b[6][1]++;cov_22s6dd2wjj.s[51]++;sendJSON(response, 200, mountains);}\n}","timestamp":"2017-12-08T01:28:39.075Z"}
{"level":"info","message":"responding with a 200 code and the following json data","timestamp":"2017-12-08T01:28:39.075Z"}
[]
{"level":"info","message":"adding a POST url and callback","timestamp":"2017-12-08T01:29:12.391Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T01:29:12.392Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[6]++;cov_22s6dd2wjj.s[26]++;\n  if (!request.body) {/* istanbul ignore next */cov_22s6dd2wjj.b[1][0]++;cov_22s6dd2wjj.s[27]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[1][1]++;}cov_22s6dd2wjj.s[29]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_22s6dd2wjj.b[2][0]++;cov_22s6dd2wjj.s[30]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[2][1]++;}cov_22s6dd2wjj.s[32]++;\n  if (!request.body.state) {/* istanbul ignore next */cov_22s6dd2wjj.b[3][0]++;cov_22s6dd2wjj.s[33]++;\n    sendStatus(response, 400, 'state not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[3][1]++;}cov_22s6dd2wjj.s[35]++;\n  if (!request.body.hiking) {/* istanbul ignore next */cov_22s6dd2wjj.b[4][0]++;cov_22s6dd2wjj.s[36]++;\n    sendStatus(response, 400, 'hiking info not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[4][1]++;}cov_22s6dd2wjj.s[38]++;\n  if (!request.body.range) {/* istanbul ignore next */cov_22s6dd2wjj.b[5][0]++;cov_22s6dd2wjj.s[39]++;\n    sendStatus(response, 400, 'range name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[40]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[5][1]++;}\n  let mountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[41]++, new Mountain(\n  request.body.name,\n  request.body.state,\n  request.body.hiking,\n  request.body.range)); /* istanbul ignore next */cov_22s6dd2wjj.s[42]++;\n\n\n  mountains.push(mountain); /* istanbul ignore next */cov_22s6dd2wjj.s[43]++;\n  sendJSON(response, 200, mountain);\n}","timestamp":"2017-12-08T01:29:12.392Z"}
{"level":"info","message":"adding a GET url and callback","timestamp":"2017-12-08T01:29:12.392Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T01:29:12.392Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[7]++;\n  let id = /* istanbul ignore next */(cov_22s6dd2wjj.s[45]++, request.url.query.id); /* istanbul ignore next */cov_22s6dd2wjj.s[46]++;\n\n  if (id) {/* istanbul ignore next */cov_22s6dd2wjj.b[6][0]++;\n    let requestMountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[47]++, getMountainById(id)); /* istanbul ignore next */cov_22s6dd2wjj.s[48]++;\n    if (requestMountain) {/* istanbul ignore next */cov_22s6dd2wjj.b[7][0]++;cov_22s6dd2wjj.s[49]++;\n      sendJSON(response, 200, requestMountain);\n    } else\n      {/* istanbul ignore next */cov_22s6dd2wjj.b[7][1]++;cov_22s6dd2wjj.s[50]++;sendStatus(response, 404, `no mountain found with the id of ${id}`);}\n  } else\n    {/* istanbul ignore next */cov_22s6dd2wjj.b[6][1]++;cov_22s6dd2wjj.s[51]++;sendJSON(response, 200, mountains);}\n}","timestamp":"2017-12-08T01:29:12.392Z"}
{"level":"info","message":"adding a DELETE url and callback","timestamp":"2017-12-08T01:29:12.392Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T01:29:12.392Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[8]++;\n  let id = /* istanbul ignore next */(cov_22s6dd2wjj.s[53]++, request.url.query.id); /* istanbul ignore next */cov_22s6dd2wjj.s[54]++;\n  if (id) {/* istanbul ignore next */cov_22s6dd2wjj.b[8][0]++;\n    let deletedMountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[55]++, deleteMountainById(id)); /* istanbul ignore next */cov_22s6dd2wjj.s[56]++;\n    if (deletedMountain) {/* istanbul ignore next */cov_22s6dd2wjj.b[9][0]++;cov_22s6dd2wjj.s[57]++;\n      logger.log('info', `Mountain deleted, responding with a 200 success code`); /* istanbul ignore next */cov_22s6dd2wjj.s[58]++;\n      response.writeHead(200); /* istanbul ignore next */cov_22s6dd2wjj.s[59]++;\n      response.end();\n    } else\n      {/* istanbul ignore next */cov_22s6dd2wjj.b[9][1]++;cov_22s6dd2wjj.s[60]++;sendStatus(response, 404, `No mountain was found with an id ${id}`);}\n  } else\n    {/* istanbul ignore next */cov_22s6dd2wjj.b[8][1]++;cov_22s6dd2wjj.s[61]++;sendStatus(response, 400, `something else occurred - bad request.`);}\n}","timestamp":"2017-12-08T01:29:12.392Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T01:29:12.448Z"}
{"level":"info","message":"Original URL: \"/api/mountains?%7BdummyData.id%7D\"","timestamp":"2017-12-08T01:29:12.449Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?%7BdummyData.id%7D\",\"query\":{\"{dummyData.id}\":\"\"},\"pathname\":\"/api/mountains\",\"path\":\"/api/mountains?%7BdummyData.id%7D\",\"href\":\"/api/mountains?%7BdummyData.id%7D\"}","timestamp":"2017-12-08T01:29:12.449Z"}
{"level":"info","message":"found the following handler","timestamp":"2017-12-08T01:29:12.449Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[7]++;\n  let id = /* istanbul ignore next */(cov_22s6dd2wjj.s[45]++, request.url.query.id); /* istanbul ignore next */cov_22s6dd2wjj.s[46]++;\n\n  if (id) {/* istanbul ignore next */cov_22s6dd2wjj.b[6][0]++;\n    let requestMountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[47]++, getMountainById(id)); /* istanbul ignore next */cov_22s6dd2wjj.s[48]++;\n    if (requestMountain) {/* istanbul ignore next */cov_22s6dd2wjj.b[7][0]++;cov_22s6dd2wjj.s[49]++;\n      sendJSON(response, 200, requestMountain);\n    } else\n      {/* istanbul ignore next */cov_22s6dd2wjj.b[7][1]++;cov_22s6dd2wjj.s[50]++;sendStatus(response, 404, `no mountain found with the id of ${id}`);}\n  } else\n    {/* istanbul ignore next */cov_22s6dd2wjj.b[6][1]++;cov_22s6dd2wjj.s[51]++;sendJSON(response, 200, mountains);}\n}","timestamp":"2017-12-08T01:29:12.449Z"}
{"level":"info","message":"responding with a 200 code and the following json data","timestamp":"2017-12-08T01:29:12.450Z"}
[]
{"level":"info","message":"adding a POST url and callback","timestamp":"2017-12-08T01:29:37.930Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T01:29:37.931Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[6]++;cov_22s6dd2wjj.s[26]++;\n  if (!request.body) {/* istanbul ignore next */cov_22s6dd2wjj.b[1][0]++;cov_22s6dd2wjj.s[27]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[1][1]++;}cov_22s6dd2wjj.s[29]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_22s6dd2wjj.b[2][0]++;cov_22s6dd2wjj.s[30]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[2][1]++;}cov_22s6dd2wjj.s[32]++;\n  if (!request.body.state) {/* istanbul ignore next */cov_22s6dd2wjj.b[3][0]++;cov_22s6dd2wjj.s[33]++;\n    sendStatus(response, 400, 'state not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[3][1]++;}cov_22s6dd2wjj.s[35]++;\n  if (!request.body.hiking) {/* istanbul ignore next */cov_22s6dd2wjj.b[4][0]++;cov_22s6dd2wjj.s[36]++;\n    sendStatus(response, 400, 'hiking info not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[4][1]++;}cov_22s6dd2wjj.s[38]++;\n  if (!request.body.range) {/* istanbul ignore next */cov_22s6dd2wjj.b[5][0]++;cov_22s6dd2wjj.s[39]++;\n    sendStatus(response, 400, 'range name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[40]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[5][1]++;}\n  let mountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[41]++, new Mountain(\n  request.body.name,\n  request.body.state,\n  request.body.hiking,\n  request.body.range)); /* istanbul ignore next */cov_22s6dd2wjj.s[42]++;\n\n\n  mountains.push(mountain); /* istanbul ignore next */cov_22s6dd2wjj.s[43]++;\n  sendJSON(response, 200, mountain);\n}","timestamp":"2017-12-08T01:29:37.931Z"}
{"level":"info","message":"adding a GET url and callback","timestamp":"2017-12-08T01:29:37.931Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T01:29:37.931Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[7]++;\n  let id = /* istanbul ignore next */(cov_22s6dd2wjj.s[45]++, request.url.query.id); /* istanbul ignore next */cov_22s6dd2wjj.s[46]++;\n\n  if (id) {/* istanbul ignore next */cov_22s6dd2wjj.b[6][0]++;\n    let requestMountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[47]++, getMountainById(id)); /* istanbul ignore next */cov_22s6dd2wjj.s[48]++;\n    if (requestMountain) {/* istanbul ignore next */cov_22s6dd2wjj.b[7][0]++;cov_22s6dd2wjj.s[49]++;\n      sendJSON(response, 200, requestMountain);\n    } else\n      {/* istanbul ignore next */cov_22s6dd2wjj.b[7][1]++;cov_22s6dd2wjj.s[50]++;sendStatus(response, 404, `no mountain found with the id of ${id}`);}\n  } else\n    {/* istanbul ignore next */cov_22s6dd2wjj.b[6][1]++;cov_22s6dd2wjj.s[51]++;sendJSON(response, 200, mountains);}\n}","timestamp":"2017-12-08T01:29:37.931Z"}
{"level":"info","message":"adding a DELETE url and callback","timestamp":"2017-12-08T01:29:37.931Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T01:29:37.931Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[8]++;\n  let id = /* istanbul ignore next */(cov_22s6dd2wjj.s[53]++, request.url.query.id); /* istanbul ignore next */cov_22s6dd2wjj.s[54]++;\n  if (id) {/* istanbul ignore next */cov_22s6dd2wjj.b[8][0]++;\n    let deletedMountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[55]++, deleteMountainById(id)); /* istanbul ignore next */cov_22s6dd2wjj.s[56]++;\n    if (deletedMountain) {/* istanbul ignore next */cov_22s6dd2wjj.b[9][0]++;cov_22s6dd2wjj.s[57]++;\n      logger.log('info', `Mountain deleted, responding with a 200 success code`); /* istanbul ignore next */cov_22s6dd2wjj.s[58]++;\n      response.writeHead(200); /* istanbul ignore next */cov_22s6dd2wjj.s[59]++;\n      response.end();\n    } else\n      {/* istanbul ignore next */cov_22s6dd2wjj.b[9][1]++;cov_22s6dd2wjj.s[60]++;sendStatus(response, 404, `No mountain was found with an id ${id}`);}\n  } else\n    {/* istanbul ignore next */cov_22s6dd2wjj.b[8][1]++;cov_22s6dd2wjj.s[61]++;sendStatus(response, 400, `something else occurred - bad request.`);}\n}","timestamp":"2017-12-08T01:29:37.931Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T01:29:37.990Z"}
{"level":"info","message":"Original URL: \"/api/mountains\"","timestamp":"2017-12-08T01:29:37.990Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/mountains\",\"path\":\"/api/mountains\",\"href\":\"/api/mountains\"}","timestamp":"2017-12-08T01:29:37.990Z"}
{"level":"info","message":"found the following handler","timestamp":"2017-12-08T01:29:37.991Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[6]++;cov_22s6dd2wjj.s[26]++;\n  if (!request.body) {/* istanbul ignore next */cov_22s6dd2wjj.b[1][0]++;cov_22s6dd2wjj.s[27]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[1][1]++;}cov_22s6dd2wjj.s[29]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_22s6dd2wjj.b[2][0]++;cov_22s6dd2wjj.s[30]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[2][1]++;}cov_22s6dd2wjj.s[32]++;\n  if (!request.body.state) {/* istanbul ignore next */cov_22s6dd2wjj.b[3][0]++;cov_22s6dd2wjj.s[33]++;\n    sendStatus(response, 400, 'state not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[3][1]++;}cov_22s6dd2wjj.s[35]++;\n  if (!request.body.hiking) {/* istanbul ignore next */cov_22s6dd2wjj.b[4][0]++;cov_22s6dd2wjj.s[36]++;\n    sendStatus(response, 400, 'hiking info not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[4][1]++;}cov_22s6dd2wjj.s[38]++;\n  if (!request.body.range) {/* istanbul ignore next */cov_22s6dd2wjj.b[5][0]++;cov_22s6dd2wjj.s[39]++;\n    sendStatus(response, 400, 'range name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[40]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[5][1]++;}\n  let mountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[41]++, new Mountain(\n  request.body.name,\n  request.body.state,\n  request.body.hiking,\n  request.body.range)); /* istanbul ignore next */cov_22s6dd2wjj.s[42]++;\n\n\n  mountains.push(mountain); /* istanbul ignore next */cov_22s6dd2wjj.s[43]++;\n  sendJSON(response, 200, mountain);\n}","timestamp":"2017-12-08T01:29:37.991Z"}
{"level":"info","message":"responding with a 200 code and the following json data","timestamp":"2017-12-08T01:29:37.991Z"}
{"id":"41588d70-dbb7-11e7-81c3-7db5175655a5","name":"Shuksan","state":"Washington","hiking":"Yes","range":"Cascades","level":"info","message":"","timestamp":"2017-12-08T01:29:37.991Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T01:29:38.040Z"}
{"level":"info","message":"Original URL: \"/api/mountains?id=$333-33\"","timestamp":"2017-12-08T01:29:38.040Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=$333-33\",\"query\":{\"id\":\"$333-33\"},\"pathname\":\"/api/mountains\",\"path\":\"/api/mountains?id=$333-33\",\"href\":\"/api/mountains?id=$333-33\"}","timestamp":"2017-12-08T01:29:38.040Z"}
{"level":"info","message":"found the following handler","timestamp":"2017-12-08T01:29:38.041Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[7]++;\n  let id = /* istanbul ignore next */(cov_22s6dd2wjj.s[45]++, request.url.query.id); /* istanbul ignore next */cov_22s6dd2wjj.s[46]++;\n\n  if (id) {/* istanbul ignore next */cov_22s6dd2wjj.b[6][0]++;\n    let requestMountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[47]++, getMountainById(id)); /* istanbul ignore next */cov_22s6dd2wjj.s[48]++;\n    if (requestMountain) {/* istanbul ignore next */cov_22s6dd2wjj.b[7][0]++;cov_22s6dd2wjj.s[49]++;\n      sendJSON(response, 200, requestMountain);\n    } else\n      {/* istanbul ignore next */cov_22s6dd2wjj.b[7][1]++;cov_22s6dd2wjj.s[50]++;sendStatus(response, 404, `no mountain found with the id of ${id}`);}\n  } else\n    {/* istanbul ignore next */cov_22s6dd2wjj.b[6][1]++;cov_22s6dd2wjj.s[51]++;sendJSON(response, 200, mountains);}\n}","timestamp":"2017-12-08T01:29:38.041Z"}
{"level":"info","message":"Responding with a 404 code due to no mountain found with the id of $333-33","timestamp":"2017-12-08T01:29:38.041Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T01:29:38.044Z"}
{"level":"info","message":"Original URL: \"/api/mountains?%7BdummyData.id%7D\"","timestamp":"2017-12-08T01:29:38.044Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?%7BdummyData.id%7D\",\"query\":{\"{dummyData.id}\":\"\"},\"pathname\":\"/api/mountains\",\"path\":\"/api/mountains?%7BdummyData.id%7D\",\"href\":\"/api/mountains?%7BdummyData.id%7D\"}","timestamp":"2017-12-08T01:29:38.044Z"}
{"level":"info","message":"found the following handler","timestamp":"2017-12-08T01:29:38.045Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[7]++;\n  let id = /* istanbul ignore next */(cov_22s6dd2wjj.s[45]++, request.url.query.id); /* istanbul ignore next */cov_22s6dd2wjj.s[46]++;\n\n  if (id) {/* istanbul ignore next */cov_22s6dd2wjj.b[6][0]++;\n    let requestMountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[47]++, getMountainById(id)); /* istanbul ignore next */cov_22s6dd2wjj.s[48]++;\n    if (requestMountain) {/* istanbul ignore next */cov_22s6dd2wjj.b[7][0]++;cov_22s6dd2wjj.s[49]++;\n      sendJSON(response, 200, requestMountain);\n    } else\n      {/* istanbul ignore next */cov_22s6dd2wjj.b[7][1]++;cov_22s6dd2wjj.s[50]++;sendStatus(response, 404, `no mountain found with the id of ${id}`);}\n  } else\n    {/* istanbul ignore next */cov_22s6dd2wjj.b[6][1]++;cov_22s6dd2wjj.s[51]++;sendJSON(response, 200, mountains);}\n}","timestamp":"2017-12-08T01:29:38.045Z"}
{"level":"info","message":"responding with a 200 code and the following json data","timestamp":"2017-12-08T01:29:38.045Z"}
[{"id":"41588d70-dbb7-11e7-81c3-7db5175655a5","name":"Shuksan","state":"Washington","hiking":"Yes","range":"Cascades"}]
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T01:29:38.047Z"}
{"level":"info","message":"Original URL: \"/api/mountains\"","timestamp":"2017-12-08T01:29:38.047Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/mountains\",\"path\":\"/api/mountains\",\"href\":\"/api/mountains\"}","timestamp":"2017-12-08T01:29:38.047Z"}
{"level":"info","message":"found the following handler","timestamp":"2017-12-08T01:29:38.047Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[6]++;cov_22s6dd2wjj.s[26]++;\n  if (!request.body) {/* istanbul ignore next */cov_22s6dd2wjj.b[1][0]++;cov_22s6dd2wjj.s[27]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[1][1]++;}cov_22s6dd2wjj.s[29]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_22s6dd2wjj.b[2][0]++;cov_22s6dd2wjj.s[30]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[2][1]++;}cov_22s6dd2wjj.s[32]++;\n  if (!request.body.state) {/* istanbul ignore next */cov_22s6dd2wjj.b[3][0]++;cov_22s6dd2wjj.s[33]++;\n    sendStatus(response, 400, 'state not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[3][1]++;}cov_22s6dd2wjj.s[35]++;\n  if (!request.body.hiking) {/* istanbul ignore next */cov_22s6dd2wjj.b[4][0]++;cov_22s6dd2wjj.s[36]++;\n    sendStatus(response, 400, 'hiking info not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[4][1]++;}cov_22s6dd2wjj.s[38]++;\n  if (!request.body.range) {/* istanbul ignore next */cov_22s6dd2wjj.b[5][0]++;cov_22s6dd2wjj.s[39]++;\n    sendStatus(response, 400, 'range name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[40]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[5][1]++;}\n  let mountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[41]++, new Mountain(\n  request.body.name,\n  request.body.state,\n  request.body.hiking,\n  request.body.range)); /* istanbul ignore next */cov_22s6dd2wjj.s[42]++;\n\n\n  mountains.push(mountain); /* istanbul ignore next */cov_22s6dd2wjj.s[43]++;\n  sendJSON(response, 200, mountain);\n}","timestamp":"2017-12-08T01:29:38.047Z"}
{"level":"info","message":"Responding with a 400 code due to name not found","timestamp":"2017-12-08T01:29:38.048Z"}
{"level":"info","message":"adding a POST url and callback","timestamp":"2017-12-08T01:30:13.624Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T01:30:13.625Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[6]++;cov_22s6dd2wjj.s[26]++;\n  if (!request.body) {/* istanbul ignore next */cov_22s6dd2wjj.b[1][0]++;cov_22s6dd2wjj.s[27]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[1][1]++;}cov_22s6dd2wjj.s[29]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_22s6dd2wjj.b[2][0]++;cov_22s6dd2wjj.s[30]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[2][1]++;}cov_22s6dd2wjj.s[32]++;\n  if (!request.body.state) {/* istanbul ignore next */cov_22s6dd2wjj.b[3][0]++;cov_22s6dd2wjj.s[33]++;\n    sendStatus(response, 400, 'state not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[3][1]++;}cov_22s6dd2wjj.s[35]++;\n  if (!request.body.hiking) {/* istanbul ignore next */cov_22s6dd2wjj.b[4][0]++;cov_22s6dd2wjj.s[36]++;\n    sendStatus(response, 400, 'hiking info not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[4][1]++;}cov_22s6dd2wjj.s[38]++;\n  if (!request.body.range) {/* istanbul ignore next */cov_22s6dd2wjj.b[5][0]++;cov_22s6dd2wjj.s[39]++;\n    sendStatus(response, 400, 'range name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[40]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[5][1]++;}\n  let mountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[41]++, new Mountain(\n  request.body.name,\n  request.body.state,\n  request.body.hiking,\n  request.body.range)); /* istanbul ignore next */cov_22s6dd2wjj.s[42]++;\n\n\n  mountains.push(mountain); /* istanbul ignore next */cov_22s6dd2wjj.s[43]++;\n  sendJSON(response, 200, mountain);\n}","timestamp":"2017-12-08T01:30:13.625Z"}
{"level":"info","message":"adding a GET url and callback","timestamp":"2017-12-08T01:30:13.625Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T01:30:13.625Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[7]++;\n  let id = /* istanbul ignore next */(cov_22s6dd2wjj.s[45]++, request.url.query.id); /* istanbul ignore next */cov_22s6dd2wjj.s[46]++;\n\n  if (id) {/* istanbul ignore next */cov_22s6dd2wjj.b[6][0]++;\n    let requestMountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[47]++, getMountainById(id)); /* istanbul ignore next */cov_22s6dd2wjj.s[48]++;\n    if (requestMountain) {/* istanbul ignore next */cov_22s6dd2wjj.b[7][0]++;cov_22s6dd2wjj.s[49]++;\n      sendJSON(response, 200, requestMountain);\n    } else\n      {/* istanbul ignore next */cov_22s6dd2wjj.b[7][1]++;cov_22s6dd2wjj.s[50]++;sendStatus(response, 404, `no mountain found with the id of ${id}`);}\n  } else\n    {/* istanbul ignore next */cov_22s6dd2wjj.b[6][1]++;cov_22s6dd2wjj.s[51]++;sendJSON(response, 200, mountains);}\n}","timestamp":"2017-12-08T01:30:13.625Z"}
{"level":"info","message":"adding a DELETE url and callback","timestamp":"2017-12-08T01:30:13.625Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T01:30:13.625Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[8]++;\n  let id = /* istanbul ignore next */(cov_22s6dd2wjj.s[53]++, request.url.query.id); /* istanbul ignore next */cov_22s6dd2wjj.s[54]++;\n  if (id) {/* istanbul ignore next */cov_22s6dd2wjj.b[8][0]++;\n    let deletedMountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[55]++, deleteMountainById(id)); /* istanbul ignore next */cov_22s6dd2wjj.s[56]++;\n    if (deletedMountain) {/* istanbul ignore next */cov_22s6dd2wjj.b[9][0]++;cov_22s6dd2wjj.s[57]++;\n      logger.log('info', `Mountain deleted, responding with a 200 success code`); /* istanbul ignore next */cov_22s6dd2wjj.s[58]++;\n      response.writeHead(200); /* istanbul ignore next */cov_22s6dd2wjj.s[59]++;\n      response.end();\n    } else\n      {/* istanbul ignore next */cov_22s6dd2wjj.b[9][1]++;cov_22s6dd2wjj.s[60]++;sendStatus(response, 404, `No mountain was found with an id ${id}`);}\n  } else\n    {/* istanbul ignore next */cov_22s6dd2wjj.b[8][1]++;cov_22s6dd2wjj.s[61]++;sendStatus(response, 400, `something else occurred - bad request.`);}\n}","timestamp":"2017-12-08T01:30:13.625Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T01:30:13.685Z"}
{"level":"info","message":"Original URL: \"/api/mountains\"","timestamp":"2017-12-08T01:30:13.685Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/mountains\",\"path\":\"/api/mountains\",\"href\":\"/api/mountains\"}","timestamp":"2017-12-08T01:30:13.685Z"}
{"level":"info","message":"found the following handler","timestamp":"2017-12-08T01:30:13.686Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[6]++;cov_22s6dd2wjj.s[26]++;\n  if (!request.body) {/* istanbul ignore next */cov_22s6dd2wjj.b[1][0]++;cov_22s6dd2wjj.s[27]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[1][1]++;}cov_22s6dd2wjj.s[29]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_22s6dd2wjj.b[2][0]++;cov_22s6dd2wjj.s[30]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[2][1]++;}cov_22s6dd2wjj.s[32]++;\n  if (!request.body.state) {/* istanbul ignore next */cov_22s6dd2wjj.b[3][0]++;cov_22s6dd2wjj.s[33]++;\n    sendStatus(response, 400, 'state not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[3][1]++;}cov_22s6dd2wjj.s[35]++;\n  if (!request.body.hiking) {/* istanbul ignore next */cov_22s6dd2wjj.b[4][0]++;cov_22s6dd2wjj.s[36]++;\n    sendStatus(response, 400, 'hiking info not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[4][1]++;}cov_22s6dd2wjj.s[38]++;\n  if (!request.body.range) {/* istanbul ignore next */cov_22s6dd2wjj.b[5][0]++;cov_22s6dd2wjj.s[39]++;\n    sendStatus(response, 400, 'range name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[40]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[5][1]++;}\n  let mountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[41]++, new Mountain(\n  request.body.name,\n  request.body.state,\n  request.body.hiking,\n  request.body.range)); /* istanbul ignore next */cov_22s6dd2wjj.s[42]++;\n\n\n  mountains.push(mountain); /* istanbul ignore next */cov_22s6dd2wjj.s[43]++;\n  sendJSON(response, 200, mountain);\n}","timestamp":"2017-12-08T01:30:13.686Z"}
{"level":"info","message":"responding with a 200 code and the following json data","timestamp":"2017-12-08T01:30:13.686Z"}
{"id":"569f2d60-dbb7-11e7-8af6-3f5a36bb41d5","name":"Shuksan","state":"Washington","hiking":"Yes","range":"Cascades","level":"info","message":"","timestamp":"2017-12-08T01:30:13.686Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T01:30:13.695Z"}
{"level":"info","message":"Original URL: \"/api/mountains?id=$333-33\"","timestamp":"2017-12-08T01:30:13.695Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=$333-33\",\"query\":{\"id\":\"$333-33\"},\"pathname\":\"/api/mountains\",\"path\":\"/api/mountains?id=$333-33\",\"href\":\"/api/mountains?id=$333-33\"}","timestamp":"2017-12-08T01:30:13.696Z"}
{"level":"info","message":"found the following handler","timestamp":"2017-12-08T01:30:13.696Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[7]++;\n  let id = /* istanbul ignore next */(cov_22s6dd2wjj.s[45]++, request.url.query.id); /* istanbul ignore next */cov_22s6dd2wjj.s[46]++;\n\n  if (id) {/* istanbul ignore next */cov_22s6dd2wjj.b[6][0]++;\n    let requestMountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[47]++, getMountainById(id)); /* istanbul ignore next */cov_22s6dd2wjj.s[48]++;\n    if (requestMountain) {/* istanbul ignore next */cov_22s6dd2wjj.b[7][0]++;cov_22s6dd2wjj.s[49]++;\n      sendJSON(response, 200, requestMountain);\n    } else\n      {/* istanbul ignore next */cov_22s6dd2wjj.b[7][1]++;cov_22s6dd2wjj.s[50]++;sendStatus(response, 404, `no mountain found with the id of ${id}`);}\n  } else\n    {/* istanbul ignore next */cov_22s6dd2wjj.b[6][1]++;cov_22s6dd2wjj.s[51]++;sendJSON(response, 200, mountains);}\n}","timestamp":"2017-12-08T01:30:13.696Z"}
{"level":"info","message":"Responding with a 404 code due to no mountain found with the id of $333-33","timestamp":"2017-12-08T01:30:13.696Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T01:30:13.699Z"}
{"level":"info","message":"Original URL: \"/api/mountains?%7B$dummyData.id%7D\"","timestamp":"2017-12-08T01:30:13.702Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?%7B$dummyData.id%7D\",\"query\":{\"{$dummyData.id}\":\"\"},\"pathname\":\"/api/mountains\",\"path\":\"/api/mountains?%7B$dummyData.id%7D\",\"href\":\"/api/mountains?%7B$dummyData.id%7D\"}","timestamp":"2017-12-08T01:30:13.703Z"}
{"level":"info","message":"found the following handler","timestamp":"2017-12-08T01:30:13.703Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[7]++;\n  let id = /* istanbul ignore next */(cov_22s6dd2wjj.s[45]++, request.url.query.id); /* istanbul ignore next */cov_22s6dd2wjj.s[46]++;\n\n  if (id) {/* istanbul ignore next */cov_22s6dd2wjj.b[6][0]++;\n    let requestMountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[47]++, getMountainById(id)); /* istanbul ignore next */cov_22s6dd2wjj.s[48]++;\n    if (requestMountain) {/* istanbul ignore next */cov_22s6dd2wjj.b[7][0]++;cov_22s6dd2wjj.s[49]++;\n      sendJSON(response, 200, requestMountain);\n    } else\n      {/* istanbul ignore next */cov_22s6dd2wjj.b[7][1]++;cov_22s6dd2wjj.s[50]++;sendStatus(response, 404, `no mountain found with the id of ${id}`);}\n  } else\n    {/* istanbul ignore next */cov_22s6dd2wjj.b[6][1]++;cov_22s6dd2wjj.s[51]++;sendJSON(response, 200, mountains);}\n}","timestamp":"2017-12-08T01:30:13.703Z"}
{"level":"info","message":"responding with a 200 code and the following json data","timestamp":"2017-12-08T01:30:13.703Z"}
[{"id":"569f2d60-dbb7-11e7-8af6-3f5a36bb41d5","name":"Shuksan","state":"Washington","hiking":"Yes","range":"Cascades"}]
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T01:30:13.743Z"}
{"level":"info","message":"Original URL: \"/api/mountains\"","timestamp":"2017-12-08T01:30:13.743Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/mountains\",\"path\":\"/api/mountains\",\"href\":\"/api/mountains\"}","timestamp":"2017-12-08T01:30:13.743Z"}
{"level":"info","message":"found the following handler","timestamp":"2017-12-08T01:30:13.743Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[6]++;cov_22s6dd2wjj.s[26]++;\n  if (!request.body) {/* istanbul ignore next */cov_22s6dd2wjj.b[1][0]++;cov_22s6dd2wjj.s[27]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[1][1]++;}cov_22s6dd2wjj.s[29]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_22s6dd2wjj.b[2][0]++;cov_22s6dd2wjj.s[30]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[2][1]++;}cov_22s6dd2wjj.s[32]++;\n  if (!request.body.state) {/* istanbul ignore next */cov_22s6dd2wjj.b[3][0]++;cov_22s6dd2wjj.s[33]++;\n    sendStatus(response, 400, 'state not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[3][1]++;}cov_22s6dd2wjj.s[35]++;\n  if (!request.body.hiking) {/* istanbul ignore next */cov_22s6dd2wjj.b[4][0]++;cov_22s6dd2wjj.s[36]++;\n    sendStatus(response, 400, 'hiking info not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[4][1]++;}cov_22s6dd2wjj.s[38]++;\n  if (!request.body.range) {/* istanbul ignore next */cov_22s6dd2wjj.b[5][0]++;cov_22s6dd2wjj.s[39]++;\n    sendStatus(response, 400, 'range name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[40]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[5][1]++;}\n  let mountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[41]++, new Mountain(\n  request.body.name,\n  request.body.state,\n  request.body.hiking,\n  request.body.range)); /* istanbul ignore next */cov_22s6dd2wjj.s[42]++;\n\n\n  mountains.push(mountain); /* istanbul ignore next */cov_22s6dd2wjj.s[43]++;\n  sendJSON(response, 200, mountain);\n}","timestamp":"2017-12-08T01:30:13.743Z"}
{"level":"info","message":"Responding with a 400 code due to name not found","timestamp":"2017-12-08T01:30:13.743Z"}
{"level":"info","message":"adding a POST url and callback","timestamp":"2017-12-08T01:31:15.358Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T01:31:15.359Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[6]++;cov_22s6dd2wjj.s[26]++;\n  if (!request.body) {/* istanbul ignore next */cov_22s6dd2wjj.b[1][0]++;cov_22s6dd2wjj.s[27]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[1][1]++;}cov_22s6dd2wjj.s[29]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_22s6dd2wjj.b[2][0]++;cov_22s6dd2wjj.s[30]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[2][1]++;}cov_22s6dd2wjj.s[32]++;\n  if (!request.body.state) {/* istanbul ignore next */cov_22s6dd2wjj.b[3][0]++;cov_22s6dd2wjj.s[33]++;\n    sendStatus(response, 400, 'state not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[3][1]++;}cov_22s6dd2wjj.s[35]++;\n  if (!request.body.hiking) {/* istanbul ignore next */cov_22s6dd2wjj.b[4][0]++;cov_22s6dd2wjj.s[36]++;\n    sendStatus(response, 400, 'hiking info not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[4][1]++;}cov_22s6dd2wjj.s[38]++;\n  if (!request.body.range) {/* istanbul ignore next */cov_22s6dd2wjj.b[5][0]++;cov_22s6dd2wjj.s[39]++;\n    sendStatus(response, 400, 'range name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[40]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[5][1]++;}\n  let mountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[41]++, new Mountain(\n  request.body.name,\n  request.body.state,\n  request.body.hiking,\n  request.body.range)); /* istanbul ignore next */cov_22s6dd2wjj.s[42]++;\n\n\n  mountains.push(mountain); /* istanbul ignore next */cov_22s6dd2wjj.s[43]++;\n  sendJSON(response, 200, mountain);\n}","timestamp":"2017-12-08T01:31:15.359Z"}
{"level":"info","message":"adding a GET url and callback","timestamp":"2017-12-08T01:31:15.359Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T01:31:15.359Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[7]++;\n  let id = /* istanbul ignore next */(cov_22s6dd2wjj.s[45]++, request.url.query.id); /* istanbul ignore next */cov_22s6dd2wjj.s[46]++;\n\n  if (id) {/* istanbul ignore next */cov_22s6dd2wjj.b[6][0]++;\n    let requestMountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[47]++, getMountainById(id)); /* istanbul ignore next */cov_22s6dd2wjj.s[48]++;\n    if (requestMountain) {/* istanbul ignore next */cov_22s6dd2wjj.b[7][0]++;cov_22s6dd2wjj.s[49]++;\n      sendJSON(response, 200, requestMountain);\n    } else\n      {/* istanbul ignore next */cov_22s6dd2wjj.b[7][1]++;cov_22s6dd2wjj.s[50]++;sendStatus(response, 404, `no mountain found with the id of ${id}`);}\n  } else\n    {/* istanbul ignore next */cov_22s6dd2wjj.b[6][1]++;cov_22s6dd2wjj.s[51]++;sendJSON(response, 200, mountains);}\n}","timestamp":"2017-12-08T01:31:15.359Z"}
{"level":"info","message":"adding a DELETE url and callback","timestamp":"2017-12-08T01:31:15.359Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T01:31:15.359Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[8]++;\n  let id = /* istanbul ignore next */(cov_22s6dd2wjj.s[53]++, request.url.query.id); /* istanbul ignore next */cov_22s6dd2wjj.s[54]++;\n  if (id) {/* istanbul ignore next */cov_22s6dd2wjj.b[8][0]++;\n    let deletedMountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[55]++, deleteMountainById(id)); /* istanbul ignore next */cov_22s6dd2wjj.s[56]++;\n    if (deletedMountain) {/* istanbul ignore next */cov_22s6dd2wjj.b[9][0]++;cov_22s6dd2wjj.s[57]++;\n      logger.log('info', `Mountain deleted, responding with a 200 success code`); /* istanbul ignore next */cov_22s6dd2wjj.s[58]++;\n      response.writeHead(200); /* istanbul ignore next */cov_22s6dd2wjj.s[59]++;\n      response.end();\n    } else\n      {/* istanbul ignore next */cov_22s6dd2wjj.b[9][1]++;cov_22s6dd2wjj.s[60]++;sendStatus(response, 404, `No mountain was found with an id ${id}`);}\n  } else\n    {/* istanbul ignore next */cov_22s6dd2wjj.b[8][1]++;cov_22s6dd2wjj.s[61]++;sendStatus(response, 400, `something else occurred - bad request.`);}\n}","timestamp":"2017-12-08T01:31:15.359Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T01:31:15.414Z"}
{"level":"info","message":"Original URL: \"/api/mountains\"","timestamp":"2017-12-08T01:31:15.415Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/mountains\",\"path\":\"/api/mountains\",\"href\":\"/api/mountains\"}","timestamp":"2017-12-08T01:31:15.415Z"}
{"level":"info","message":"found the following handler","timestamp":"2017-12-08T01:31:15.415Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[6]++;cov_22s6dd2wjj.s[26]++;\n  if (!request.body) {/* istanbul ignore next */cov_22s6dd2wjj.b[1][0]++;cov_22s6dd2wjj.s[27]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[1][1]++;}cov_22s6dd2wjj.s[29]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_22s6dd2wjj.b[2][0]++;cov_22s6dd2wjj.s[30]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[2][1]++;}cov_22s6dd2wjj.s[32]++;\n  if (!request.body.state) {/* istanbul ignore next */cov_22s6dd2wjj.b[3][0]++;cov_22s6dd2wjj.s[33]++;\n    sendStatus(response, 400, 'state not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[3][1]++;}cov_22s6dd2wjj.s[35]++;\n  if (!request.body.hiking) {/* istanbul ignore next */cov_22s6dd2wjj.b[4][0]++;cov_22s6dd2wjj.s[36]++;\n    sendStatus(response, 400, 'hiking info not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[4][1]++;}cov_22s6dd2wjj.s[38]++;\n  if (!request.body.range) {/* istanbul ignore next */cov_22s6dd2wjj.b[5][0]++;cov_22s6dd2wjj.s[39]++;\n    sendStatus(response, 400, 'range name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[40]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[5][1]++;}\n  let mountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[41]++, new Mountain(\n  request.body.name,\n  request.body.state,\n  request.body.hiking,\n  request.body.range)); /* istanbul ignore next */cov_22s6dd2wjj.s[42]++;\n\n\n  mountains.push(mountain); /* istanbul ignore next */cov_22s6dd2wjj.s[43]++;\n  sendJSON(response, 200, mountain);\n}","timestamp":"2017-12-08T01:31:15.415Z"}
{"level":"info","message":"responding with a 200 code and the following json data","timestamp":"2017-12-08T01:31:15.416Z"}
{"id":"7b6a6d80-dbb7-11e7-9e2d-cb3e1e1fe0da","name":"Shuksan","state":"Washington","hiking":"Yes","range":"Cascades","level":"info","message":"","timestamp":"2017-12-08T01:31:15.416Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T01:31:15.467Z"}
{"level":"info","message":"Original URL: \"/api/mountains?id=$333-33\"","timestamp":"2017-12-08T01:31:15.468Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=$333-33\",\"query\":{\"id\":\"$333-33\"},\"pathname\":\"/api/mountains\",\"path\":\"/api/mountains?id=$333-33\",\"href\":\"/api/mountains?id=$333-33\"}","timestamp":"2017-12-08T01:31:15.468Z"}
{"level":"info","message":"found the following handler","timestamp":"2017-12-08T01:31:15.468Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[7]++;\n  let id = /* istanbul ignore next */(cov_22s6dd2wjj.s[45]++, request.url.query.id); /* istanbul ignore next */cov_22s6dd2wjj.s[46]++;\n\n  if (id) {/* istanbul ignore next */cov_22s6dd2wjj.b[6][0]++;\n    let requestMountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[47]++, getMountainById(id)); /* istanbul ignore next */cov_22s6dd2wjj.s[48]++;\n    if (requestMountain) {/* istanbul ignore next */cov_22s6dd2wjj.b[7][0]++;cov_22s6dd2wjj.s[49]++;\n      sendJSON(response, 200, requestMountain);\n    } else\n      {/* istanbul ignore next */cov_22s6dd2wjj.b[7][1]++;cov_22s6dd2wjj.s[50]++;sendStatus(response, 404, `no mountain found with the id of ${id}`);}\n  } else\n    {/* istanbul ignore next */cov_22s6dd2wjj.b[6][1]++;cov_22s6dd2wjj.s[51]++;sendJSON(response, 200, mountains);}\n}","timestamp":"2017-12-08T01:31:15.468Z"}
{"level":"info","message":"Responding with a 404 code due to no mountain found with the id of $333-33","timestamp":"2017-12-08T01:31:15.468Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T01:31:15.472Z"}
{"level":"info","message":"Original URL: \"/api/mountains?e8013d70-dbad-11e7-9cb6-ddffa32a3c9b\"","timestamp":"2017-12-08T01:31:15.472Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?e8013d70-dbad-11e7-9cb6-ddffa32a3c9b\",\"query\":{\"e8013d70-dbad-11e7-9cb6-ddffa32a3c9b\":\"\"},\"pathname\":\"/api/mountains\",\"path\":\"/api/mountains?e8013d70-dbad-11e7-9cb6-ddffa32a3c9b\",\"href\":\"/api/mountains?e8013d70-dbad-11e7-9cb6-ddffa32a3c9b\"}","timestamp":"2017-12-08T01:31:15.472Z"}
{"level":"info","message":"found the following handler","timestamp":"2017-12-08T01:31:15.472Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[7]++;\n  let id = /* istanbul ignore next */(cov_22s6dd2wjj.s[45]++, request.url.query.id); /* istanbul ignore next */cov_22s6dd2wjj.s[46]++;\n\n  if (id) {/* istanbul ignore next */cov_22s6dd2wjj.b[6][0]++;\n    let requestMountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[47]++, getMountainById(id)); /* istanbul ignore next */cov_22s6dd2wjj.s[48]++;\n    if (requestMountain) {/* istanbul ignore next */cov_22s6dd2wjj.b[7][0]++;cov_22s6dd2wjj.s[49]++;\n      sendJSON(response, 200, requestMountain);\n    } else\n      {/* istanbul ignore next */cov_22s6dd2wjj.b[7][1]++;cov_22s6dd2wjj.s[50]++;sendStatus(response, 404, `no mountain found with the id of ${id}`);}\n  } else\n    {/* istanbul ignore next */cov_22s6dd2wjj.b[6][1]++;cov_22s6dd2wjj.s[51]++;sendJSON(response, 200, mountains);}\n}","timestamp":"2017-12-08T01:31:15.472Z"}
{"level":"info","message":"responding with a 200 code and the following json data","timestamp":"2017-12-08T01:31:15.473Z"}
[{"id":"7b6a6d80-dbb7-11e7-9e2d-cb3e1e1fe0da","name":"Shuksan","state":"Washington","hiking":"Yes","range":"Cascades"}]
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T01:31:15.475Z"}
{"level":"info","message":"Original URL: \"/api/mountains\"","timestamp":"2017-12-08T01:31:15.475Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/mountains\",\"path\":\"/api/mountains\",\"href\":\"/api/mountains\"}","timestamp":"2017-12-08T01:31:15.475Z"}
{"level":"info","message":"found the following handler","timestamp":"2017-12-08T01:31:15.475Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[6]++;cov_22s6dd2wjj.s[26]++;\n  if (!request.body) {/* istanbul ignore next */cov_22s6dd2wjj.b[1][0]++;cov_22s6dd2wjj.s[27]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[1][1]++;}cov_22s6dd2wjj.s[29]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_22s6dd2wjj.b[2][0]++;cov_22s6dd2wjj.s[30]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[2][1]++;}cov_22s6dd2wjj.s[32]++;\n  if (!request.body.state) {/* istanbul ignore next */cov_22s6dd2wjj.b[3][0]++;cov_22s6dd2wjj.s[33]++;\n    sendStatus(response, 400, 'state not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[3][1]++;}cov_22s6dd2wjj.s[35]++;\n  if (!request.body.hiking) {/* istanbul ignore next */cov_22s6dd2wjj.b[4][0]++;cov_22s6dd2wjj.s[36]++;\n    sendStatus(response, 400, 'hiking info not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[4][1]++;}cov_22s6dd2wjj.s[38]++;\n  if (!request.body.range) {/* istanbul ignore next */cov_22s6dd2wjj.b[5][0]++;cov_22s6dd2wjj.s[39]++;\n    sendStatus(response, 400, 'range name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[40]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[5][1]++;}\n  let mountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[41]++, new Mountain(\n  request.body.name,\n  request.body.state,\n  request.body.hiking,\n  request.body.range)); /* istanbul ignore next */cov_22s6dd2wjj.s[42]++;\n\n\n  mountains.push(mountain); /* istanbul ignore next */cov_22s6dd2wjj.s[43]++;\n  sendJSON(response, 200, mountain);\n}","timestamp":"2017-12-08T01:31:15.475Z"}
{"level":"info","message":"Responding with a 400 code due to name not found","timestamp":"2017-12-08T01:31:15.475Z"}
{"level":"info","message":"adding a POST url and callback","timestamp":"2017-12-08T01:32:00.365Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T01:32:00.366Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[6]++;cov_22s6dd2wjj.s[26]++;\n  if (!request.body) {/* istanbul ignore next */cov_22s6dd2wjj.b[1][0]++;cov_22s6dd2wjj.s[27]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[1][1]++;}cov_22s6dd2wjj.s[29]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_22s6dd2wjj.b[2][0]++;cov_22s6dd2wjj.s[30]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[2][1]++;}cov_22s6dd2wjj.s[32]++;\n  if (!request.body.state) {/* istanbul ignore next */cov_22s6dd2wjj.b[3][0]++;cov_22s6dd2wjj.s[33]++;\n    sendStatus(response, 400, 'state not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[3][1]++;}cov_22s6dd2wjj.s[35]++;\n  if (!request.body.hiking) {/* istanbul ignore next */cov_22s6dd2wjj.b[4][0]++;cov_22s6dd2wjj.s[36]++;\n    sendStatus(response, 400, 'hiking info not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[4][1]++;}cov_22s6dd2wjj.s[38]++;\n  if (!request.body.range) {/* istanbul ignore next */cov_22s6dd2wjj.b[5][0]++;cov_22s6dd2wjj.s[39]++;\n    sendStatus(response, 400, 'range name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[40]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[5][1]++;}\n  let mountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[41]++, new Mountain(\n  request.body.name,\n  request.body.state,\n  request.body.hiking,\n  request.body.range)); /* istanbul ignore next */cov_22s6dd2wjj.s[42]++;\n\n\n  mountains.push(mountain); /* istanbul ignore next */cov_22s6dd2wjj.s[43]++;\n  sendJSON(response, 200, mountain);\n}","timestamp":"2017-12-08T01:32:00.366Z"}
{"level":"info","message":"adding a GET url and callback","timestamp":"2017-12-08T01:32:00.366Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T01:32:00.366Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[7]++;\n  let id = /* istanbul ignore next */(cov_22s6dd2wjj.s[45]++, request.url.query.id); /* istanbul ignore next */cov_22s6dd2wjj.s[46]++;\n\n  if (id) {/* istanbul ignore next */cov_22s6dd2wjj.b[6][0]++;\n    let requestMountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[47]++, getMountainById(id)); /* istanbul ignore next */cov_22s6dd2wjj.s[48]++;\n    if (requestMountain) {/* istanbul ignore next */cov_22s6dd2wjj.b[7][0]++;cov_22s6dd2wjj.s[49]++;\n      sendJSON(response, 200, requestMountain);\n    } else\n      {/* istanbul ignore next */cov_22s6dd2wjj.b[7][1]++;cov_22s6dd2wjj.s[50]++;sendStatus(response, 404, `no mountain found with the id of ${id}`);}\n  } else\n    {/* istanbul ignore next */cov_22s6dd2wjj.b[6][1]++;cov_22s6dd2wjj.s[51]++;sendJSON(response, 200, mountains);}\n}","timestamp":"2017-12-08T01:32:00.366Z"}
{"level":"info","message":"adding a DELETE url and callback","timestamp":"2017-12-08T01:32:00.366Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T01:32:00.366Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[8]++;\n  let id = /* istanbul ignore next */(cov_22s6dd2wjj.s[53]++, request.url.query.id); /* istanbul ignore next */cov_22s6dd2wjj.s[54]++;\n  if (id) {/* istanbul ignore next */cov_22s6dd2wjj.b[8][0]++;\n    let deletedMountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[55]++, deleteMountainById(id)); /* istanbul ignore next */cov_22s6dd2wjj.s[56]++;\n    if (deletedMountain) {/* istanbul ignore next */cov_22s6dd2wjj.b[9][0]++;cov_22s6dd2wjj.s[57]++;\n      logger.log('info', `Mountain deleted, responding with a 200 success code`); /* istanbul ignore next */cov_22s6dd2wjj.s[58]++;\n      response.writeHead(200); /* istanbul ignore next */cov_22s6dd2wjj.s[59]++;\n      response.end();\n    } else\n      {/* istanbul ignore next */cov_22s6dd2wjj.b[9][1]++;cov_22s6dd2wjj.s[60]++;sendStatus(response, 404, `No mountain was found with an id ${id}`);}\n  } else\n    {/* istanbul ignore next */cov_22s6dd2wjj.b[8][1]++;cov_22s6dd2wjj.s[61]++;sendStatus(response, 400, `something else occurred - bad request.`);}\n}","timestamp":"2017-12-08T01:32:00.366Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T01:32:00.423Z"}
{"level":"info","message":"Original URL: \"/api/mountains\"","timestamp":"2017-12-08T01:32:00.423Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/mountains\",\"path\":\"/api/mountains\",\"href\":\"/api/mountains\"}","timestamp":"2017-12-08T01:32:00.423Z"}
{"level":"info","message":"found the following handler","timestamp":"2017-12-08T01:32:00.424Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[6]++;cov_22s6dd2wjj.s[26]++;\n  if (!request.body) {/* istanbul ignore next */cov_22s6dd2wjj.b[1][0]++;cov_22s6dd2wjj.s[27]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[1][1]++;}cov_22s6dd2wjj.s[29]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_22s6dd2wjj.b[2][0]++;cov_22s6dd2wjj.s[30]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[2][1]++;}cov_22s6dd2wjj.s[32]++;\n  if (!request.body.state) {/* istanbul ignore next */cov_22s6dd2wjj.b[3][0]++;cov_22s6dd2wjj.s[33]++;\n    sendStatus(response, 400, 'state not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[3][1]++;}cov_22s6dd2wjj.s[35]++;\n  if (!request.body.hiking) {/* istanbul ignore next */cov_22s6dd2wjj.b[4][0]++;cov_22s6dd2wjj.s[36]++;\n    sendStatus(response, 400, 'hiking info not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[4][1]++;}cov_22s6dd2wjj.s[38]++;\n  if (!request.body.range) {/* istanbul ignore next */cov_22s6dd2wjj.b[5][0]++;cov_22s6dd2wjj.s[39]++;\n    sendStatus(response, 400, 'range name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[40]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[5][1]++;}\n  let mountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[41]++, new Mountain(\n  request.body.name,\n  request.body.state,\n  request.body.hiking,\n  request.body.range)); /* istanbul ignore next */cov_22s6dd2wjj.s[42]++;\n\n\n  mountains.push(mountain); /* istanbul ignore next */cov_22s6dd2wjj.s[43]++;\n  sendJSON(response, 200, mountain);\n}","timestamp":"2017-12-08T01:32:00.424Z"}
{"level":"info","message":"responding with a 200 code and the following json data","timestamp":"2017-12-08T01:32:00.425Z"}
{"id":"963e4190-dbb7-11e7-8997-3361ba3de20c","name":"Shuksan","state":"Washington","hiking":"Yes","range":"Cascades","level":"info","message":"","timestamp":"2017-12-08T01:32:00.425Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T01:32:00.470Z"}
{"level":"info","message":"Original URL: \"/api/mountains?id=$333-33\"","timestamp":"2017-12-08T01:32:00.470Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=$333-33\",\"query\":{\"id\":\"$333-33\"},\"pathname\":\"/api/mountains\",\"path\":\"/api/mountains?id=$333-33\",\"href\":\"/api/mountains?id=$333-33\"}","timestamp":"2017-12-08T01:32:00.471Z"}
{"level":"info","message":"found the following handler","timestamp":"2017-12-08T01:32:00.471Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[7]++;\n  let id = /* istanbul ignore next */(cov_22s6dd2wjj.s[45]++, request.url.query.id); /* istanbul ignore next */cov_22s6dd2wjj.s[46]++;\n\n  if (id) {/* istanbul ignore next */cov_22s6dd2wjj.b[6][0]++;\n    let requestMountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[47]++, getMountainById(id)); /* istanbul ignore next */cov_22s6dd2wjj.s[48]++;\n    if (requestMountain) {/* istanbul ignore next */cov_22s6dd2wjj.b[7][0]++;cov_22s6dd2wjj.s[49]++;\n      sendJSON(response, 200, requestMountain);\n    } else\n      {/* istanbul ignore next */cov_22s6dd2wjj.b[7][1]++;cov_22s6dd2wjj.s[50]++;sendStatus(response, 404, `no mountain found with the id of ${id}`);}\n  } else\n    {/* istanbul ignore next */cov_22s6dd2wjj.b[6][1]++;cov_22s6dd2wjj.s[51]++;sendJSON(response, 200, mountains);}\n}","timestamp":"2017-12-08T01:32:00.471Z"}
{"level":"info","message":"Responding with a 404 code due to no mountain found with the id of $333-33","timestamp":"2017-12-08T01:32:00.471Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T01:32:00.473Z"}
{"level":"info","message":"Original URL: \"/api/mountains?e8013d70-dbad-11e7-9cb6-ddffa32a3c9b\"","timestamp":"2017-12-08T01:32:00.474Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?e8013d70-dbad-11e7-9cb6-ddffa32a3c9b\",\"query\":{\"e8013d70-dbad-11e7-9cb6-ddffa32a3c9b\":\"\"},\"pathname\":\"/api/mountains\",\"path\":\"/api/mountains?e8013d70-dbad-11e7-9cb6-ddffa32a3c9b\",\"href\":\"/api/mountains?e8013d70-dbad-11e7-9cb6-ddffa32a3c9b\"}","timestamp":"2017-12-08T01:32:00.474Z"}
{"level":"info","message":"found the following handler","timestamp":"2017-12-08T01:32:00.474Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[7]++;\n  let id = /* istanbul ignore next */(cov_22s6dd2wjj.s[45]++, request.url.query.id); /* istanbul ignore next */cov_22s6dd2wjj.s[46]++;\n\n  if (id) {/* istanbul ignore next */cov_22s6dd2wjj.b[6][0]++;\n    let requestMountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[47]++, getMountainById(id)); /* istanbul ignore next */cov_22s6dd2wjj.s[48]++;\n    if (requestMountain) {/* istanbul ignore next */cov_22s6dd2wjj.b[7][0]++;cov_22s6dd2wjj.s[49]++;\n      sendJSON(response, 200, requestMountain);\n    } else\n      {/* istanbul ignore next */cov_22s6dd2wjj.b[7][1]++;cov_22s6dd2wjj.s[50]++;sendStatus(response, 404, `no mountain found with the id of ${id}`);}\n  } else\n    {/* istanbul ignore next */cov_22s6dd2wjj.b[6][1]++;cov_22s6dd2wjj.s[51]++;sendJSON(response, 200, mountains);}\n}","timestamp":"2017-12-08T01:32:00.474Z"}
{"level":"info","message":"responding with a 200 code and the following json data","timestamp":"2017-12-08T01:32:00.474Z"}
[{"id":"963e4190-dbb7-11e7-8997-3361ba3de20c","name":"Shuksan","state":"Washington","hiking":"Yes","range":"Cascades"}]
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T01:32:00.476Z"}
{"level":"info","message":"Original URL: \"/api/mountains\"","timestamp":"2017-12-08T01:32:00.476Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/mountains\",\"path\":\"/api/mountains\",\"href\":\"/api/mountains\"}","timestamp":"2017-12-08T01:32:00.476Z"}
{"level":"info","message":"found the following handler","timestamp":"2017-12-08T01:32:00.476Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[6]++;cov_22s6dd2wjj.s[26]++;\n  if (!request.body) {/* istanbul ignore next */cov_22s6dd2wjj.b[1][0]++;cov_22s6dd2wjj.s[27]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[1][1]++;}cov_22s6dd2wjj.s[29]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_22s6dd2wjj.b[2][0]++;cov_22s6dd2wjj.s[30]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[2][1]++;}cov_22s6dd2wjj.s[32]++;\n  if (!request.body.state) {/* istanbul ignore next */cov_22s6dd2wjj.b[3][0]++;cov_22s6dd2wjj.s[33]++;\n    sendStatus(response, 400, 'state not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[3][1]++;}cov_22s6dd2wjj.s[35]++;\n  if (!request.body.hiking) {/* istanbul ignore next */cov_22s6dd2wjj.b[4][0]++;cov_22s6dd2wjj.s[36]++;\n    sendStatus(response, 400, 'hiking info not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[4][1]++;}cov_22s6dd2wjj.s[38]++;\n  if (!request.body.range) {/* istanbul ignore next */cov_22s6dd2wjj.b[5][0]++;cov_22s6dd2wjj.s[39]++;\n    sendStatus(response, 400, 'range name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[40]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[5][1]++;}\n  let mountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[41]++, new Mountain(\n  request.body.name,\n  request.body.state,\n  request.body.hiking,\n  request.body.range)); /* istanbul ignore next */cov_22s6dd2wjj.s[42]++;\n\n\n  mountains.push(mountain); /* istanbul ignore next */cov_22s6dd2wjj.s[43]++;\n  sendJSON(response, 200, mountain);\n}","timestamp":"2017-12-08T01:32:00.476Z"}
{"level":"info","message":"Responding with a 400 code due to name not found","timestamp":"2017-12-08T01:32:00.476Z"}
{"level":"info","message":"adding a POST url and callback","timestamp":"2017-12-08T04:14:15.549Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T04:14:15.549Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[6]++;cov_22s6dd2wjj.s[26]++;\n  if (!request.body) {/* istanbul ignore next */cov_22s6dd2wjj.b[1][0]++;cov_22s6dd2wjj.s[27]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[1][1]++;}cov_22s6dd2wjj.s[29]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_22s6dd2wjj.b[2][0]++;cov_22s6dd2wjj.s[30]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[2][1]++;}cov_22s6dd2wjj.s[32]++;\n  if (!request.body.state) {/* istanbul ignore next */cov_22s6dd2wjj.b[3][0]++;cov_22s6dd2wjj.s[33]++;\n    sendStatus(response, 400, 'state not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[3][1]++;}cov_22s6dd2wjj.s[35]++;\n  if (!request.body.hiking) {/* istanbul ignore next */cov_22s6dd2wjj.b[4][0]++;cov_22s6dd2wjj.s[36]++;\n    sendStatus(response, 400, 'hiking info not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[4][1]++;}cov_22s6dd2wjj.s[38]++;\n  if (!request.body.range) {/* istanbul ignore next */cov_22s6dd2wjj.b[5][0]++;cov_22s6dd2wjj.s[39]++;\n    sendStatus(response, 400, 'range name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[40]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[5][1]++;}\n  let mountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[41]++, new Mountain(\n  request.body.name,\n  request.body.state,\n  request.body.hiking,\n  request.body.range)); /* istanbul ignore next */cov_22s6dd2wjj.s[42]++;\n\n\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_22s6dd2wjj.f[7]++;cov_22s6dd2wjj.s[43]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_22s6dd2wjj.f[8]++;cov_22s6dd2wjj.s[44]++;\n    sendStatus(response, 500, error);\n  });\n\n}","timestamp":"2017-12-08T04:14:15.549Z"}
{"level":"info","message":"adding a GET url and callback","timestamp":"2017-12-08T04:14:15.549Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T04:14:15.549Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[9]++;\n  let id = /* istanbul ignore next */(cov_22s6dd2wjj.s[46]++, request.url.query.id); /* istanbul ignore next */cov_22s6dd2wjj.s[47]++;\n\n  if (id) {/* istanbul ignore next */cov_22s6dd2wjj.b[6][0]++;\n    let requestMountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[48]++, getMountainById(id)); /* istanbul ignore next */cov_22s6dd2wjj.s[49]++;\n    if (requestMountain) {/* istanbul ignore next */cov_22s6dd2wjj.b[7][0]++;cov_22s6dd2wjj.s[50]++;\n      sendJSON(response, 200, requestMountain);\n    } else\n      {/* istanbul ignore next */cov_22s6dd2wjj.b[7][1]++;cov_22s6dd2wjj.s[51]++;sendStatus(response, 404, `no mountain found with the id of ${id}`);}\n  } else\n    {/* istanbul ignore next */cov_22s6dd2wjj.b[6][1]++;cov_22s6dd2wjj.s[52]++;sendJSON(response, 200, storage);}\n}","timestamp":"2017-12-08T04:14:15.549Z"}
{"level":"info","message":"adding a DELETE url and callback","timestamp":"2017-12-08T04:14:15.550Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T04:14:15.550Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[10]++;\n  let id = /* istanbul ignore next */(cov_22s6dd2wjj.s[54]++, request.url.query.id); /* istanbul ignore next */cov_22s6dd2wjj.s[55]++;\n  if (id) {/* istanbul ignore next */cov_22s6dd2wjj.b[8][0]++;\n    let deletedMountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[56]++, deleteMountainById(id)); /* istanbul ignore next */cov_22s6dd2wjj.s[57]++;\n    if (deletedMountain) {/* istanbul ignore next */cov_22s6dd2wjj.b[9][0]++;cov_22s6dd2wjj.s[58]++;\n      logger.log('info', `Mountain deleted, responding with a 200 success code`); /* istanbul ignore next */cov_22s6dd2wjj.s[59]++;\n      response.writeHead(200); /* istanbul ignore next */cov_22s6dd2wjj.s[60]++;\n      response.end();\n    } else\n      {/* istanbul ignore next */cov_22s6dd2wjj.b[9][1]++;cov_22s6dd2wjj.s[61]++;sendStatus(response, 404, `No mountain was found with an id ${id}`);}\n  } else\n    {/* istanbul ignore next */cov_22s6dd2wjj.b[8][1]++;cov_22s6dd2wjj.s[62]++;sendStatus(response, 400, `something else occurred - bad request.`);}\n}","timestamp":"2017-12-08T04:14:15.550Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T04:14:15.669Z"}
{"level":"info","message":"Original URL: \"/api/mountains\"","timestamp":"2017-12-08T04:14:15.670Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/mountains\",\"path\":\"/api/mountains\",\"href\":\"/api/mountains\"}","timestamp":"2017-12-08T04:14:15.670Z"}
{"level":"info","message":"found the following handler","timestamp":"2017-12-08T04:14:15.671Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[6]++;cov_22s6dd2wjj.s[26]++;\n  if (!request.body) {/* istanbul ignore next */cov_22s6dd2wjj.b[1][0]++;cov_22s6dd2wjj.s[27]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[1][1]++;}cov_22s6dd2wjj.s[29]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_22s6dd2wjj.b[2][0]++;cov_22s6dd2wjj.s[30]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[2][1]++;}cov_22s6dd2wjj.s[32]++;\n  if (!request.body.state) {/* istanbul ignore next */cov_22s6dd2wjj.b[3][0]++;cov_22s6dd2wjj.s[33]++;\n    sendStatus(response, 400, 'state not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[3][1]++;}cov_22s6dd2wjj.s[35]++;\n  if (!request.body.hiking) {/* istanbul ignore next */cov_22s6dd2wjj.b[4][0]++;cov_22s6dd2wjj.s[36]++;\n    sendStatus(response, 400, 'hiking info not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[4][1]++;}cov_22s6dd2wjj.s[38]++;\n  if (!request.body.range) {/* istanbul ignore next */cov_22s6dd2wjj.b[5][0]++;cov_22s6dd2wjj.s[39]++;\n    sendStatus(response, 400, 'range name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[40]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[5][1]++;}\n  let mountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[41]++, new Mountain(\n  request.body.name,\n  request.body.state,\n  request.body.hiking,\n  request.body.range)); /* istanbul ignore next */cov_22s6dd2wjj.s[42]++;\n\n\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_22s6dd2wjj.f[7]++;cov_22s6dd2wjj.s[43]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_22s6dd2wjj.f[8]++;cov_22s6dd2wjj.s[44]++;\n    sendStatus(response, 500, error);\n  });\n\n}","timestamp":"2017-12-08T04:14:15.671Z"}
{"level":"info","message":"Responding with a 500 code due to ReferenceError: note is not defined","timestamp":"2017-12-08T04:14:15.673Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T04:14:15.679Z"}
{"level":"info","message":"Original URL: \"/api/mountains?id=$333-33\"","timestamp":"2017-12-08T04:14:15.679Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=$333-33\",\"query\":{\"id\":\"$333-33\"},\"pathname\":\"/api/mountains\",\"path\":\"/api/mountains?id=$333-33\",\"href\":\"/api/mountains?id=$333-33\"}","timestamp":"2017-12-08T04:14:15.680Z"}
{"level":"info","message":"found the following handler","timestamp":"2017-12-08T04:14:15.680Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[9]++;\n  let id = /* istanbul ignore next */(cov_22s6dd2wjj.s[46]++, request.url.query.id); /* istanbul ignore next */cov_22s6dd2wjj.s[47]++;\n\n  if (id) {/* istanbul ignore next */cov_22s6dd2wjj.b[6][0]++;\n    let requestMountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[48]++, getMountainById(id)); /* istanbul ignore next */cov_22s6dd2wjj.s[49]++;\n    if (requestMountain) {/* istanbul ignore next */cov_22s6dd2wjj.b[7][0]++;cov_22s6dd2wjj.s[50]++;\n      sendJSON(response, 200, requestMountain);\n    } else\n      {/* istanbul ignore next */cov_22s6dd2wjj.b[7][1]++;cov_22s6dd2wjj.s[51]++;sendStatus(response, 404, `no mountain found with the id of ${id}`);}\n  } else\n    {/* istanbul ignore next */cov_22s6dd2wjj.b[6][1]++;cov_22s6dd2wjj.s[52]++;sendJSON(response, 200, storage);}\n}","timestamp":"2017-12-08T04:14:15.680Z"}
{"level":"info","message":"------>REQUEST_ERROR<------","timestamp":"2017-12-08T04:14:15.681Z"}
{"message":"storage.filter is not a function","stack":"TypeError: storage.filter is not a function\n    at getMountainById (/Users/austriker/Documents/code-fellows/cf-401/labs/08-09-vanilla-rest-server/lab-david/route/mountain-route.js:29:18)\n    at Object.<anonymous>.router.get (/Users/austriker/Documents/code-fellows/cf-401/labs/08-09-vanilla-rest-server/lab-david/route/mountain-route.js:87:78)\n    at requestParser.parse.then.request (/Users/austriker/Documents/code-fellows/cf-401/labs/08-09-vanilla-rest-server/lab-david/lib/router.js:50:87)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-08T04:14:15.681Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T04:14:15.686Z"}
{"level":"info","message":"Original URL: \"/api/mountains?e8013d70-dbad-11e7-9cb6-ddffa32a3c9b\"","timestamp":"2017-12-08T04:14:15.686Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?e8013d70-dbad-11e7-9cb6-ddffa32a3c9b\",\"query\":{\"e8013d70-dbad-11e7-9cb6-ddffa32a3c9b\":\"\"},\"pathname\":\"/api/mountains\",\"path\":\"/api/mountains?e8013d70-dbad-11e7-9cb6-ddffa32a3c9b\",\"href\":\"/api/mountains?e8013d70-dbad-11e7-9cb6-ddffa32a3c9b\"}","timestamp":"2017-12-08T04:14:15.686Z"}
{"level":"info","message":"found the following handler","timestamp":"2017-12-08T04:14:15.687Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[9]++;\n  let id = /* istanbul ignore next */(cov_22s6dd2wjj.s[46]++, request.url.query.id); /* istanbul ignore next */cov_22s6dd2wjj.s[47]++;\n\n  if (id) {/* istanbul ignore next */cov_22s6dd2wjj.b[6][0]++;\n    let requestMountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[48]++, getMountainById(id)); /* istanbul ignore next */cov_22s6dd2wjj.s[49]++;\n    if (requestMountain) {/* istanbul ignore next */cov_22s6dd2wjj.b[7][0]++;cov_22s6dd2wjj.s[50]++;\n      sendJSON(response, 200, requestMountain);\n    } else\n      {/* istanbul ignore next */cov_22s6dd2wjj.b[7][1]++;cov_22s6dd2wjj.s[51]++;sendStatus(response, 404, `no mountain found with the id of ${id}`);}\n  } else\n    {/* istanbul ignore next */cov_22s6dd2wjj.b[6][1]++;cov_22s6dd2wjj.s[52]++;sendJSON(response, 200, storage);}\n}","timestamp":"2017-12-08T04:14:15.687Z"}
{"level":"info","message":"responding with a 200 code and the following json data","timestamp":"2017-12-08T04:14:15.687Z"}
{"level":"info","message":"","timestamp":"2017-12-08T04:14:15.687Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T04:14:15.690Z"}
{"level":"info","message":"Original URL: \"/api/mountains\"","timestamp":"2017-12-08T04:14:15.690Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/mountains\",\"path\":\"/api/mountains\",\"href\":\"/api/mountains\"}","timestamp":"2017-12-08T04:14:15.690Z"}
{"level":"info","message":"found the following handler","timestamp":"2017-12-08T04:14:15.690Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[6]++;cov_22s6dd2wjj.s[26]++;\n  if (!request.body) {/* istanbul ignore next */cov_22s6dd2wjj.b[1][0]++;cov_22s6dd2wjj.s[27]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[1][1]++;}cov_22s6dd2wjj.s[29]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_22s6dd2wjj.b[2][0]++;cov_22s6dd2wjj.s[30]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[2][1]++;}cov_22s6dd2wjj.s[32]++;\n  if (!request.body.state) {/* istanbul ignore next */cov_22s6dd2wjj.b[3][0]++;cov_22s6dd2wjj.s[33]++;\n    sendStatus(response, 400, 'state not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[3][1]++;}cov_22s6dd2wjj.s[35]++;\n  if (!request.body.hiking) {/* istanbul ignore next */cov_22s6dd2wjj.b[4][0]++;cov_22s6dd2wjj.s[36]++;\n    sendStatus(response, 400, 'hiking info not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[4][1]++;}cov_22s6dd2wjj.s[38]++;\n  if (!request.body.range) {/* istanbul ignore next */cov_22s6dd2wjj.b[5][0]++;cov_22s6dd2wjj.s[39]++;\n    sendStatus(response, 400, 'range name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[40]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[5][1]++;}\n  let mountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[41]++, new Mountain(\n  request.body.name,\n  request.body.state,\n  request.body.hiking,\n  request.body.range)); /* istanbul ignore next */cov_22s6dd2wjj.s[42]++;\n\n\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_22s6dd2wjj.f[7]++;cov_22s6dd2wjj.s[43]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_22s6dd2wjj.f[8]++;cov_22s6dd2wjj.s[44]++;\n    sendStatus(response, 500, error);\n  });\n\n}","timestamp":"2017-12-08T04:14:15.690Z"}
{"level":"info","message":"Responding with a 400 code due to name not found","timestamp":"2017-12-08T04:14:15.690Z"}
{"level":"info","message":"adding a POST url and callback","timestamp":"2017-12-08T04:14:48.984Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T04:14:48.984Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[6]++;cov_22s6dd2wjj.s[26]++;\n  if (!request.body) {/* istanbul ignore next */cov_22s6dd2wjj.b[1][0]++;cov_22s6dd2wjj.s[27]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[1][1]++;}cov_22s6dd2wjj.s[29]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_22s6dd2wjj.b[2][0]++;cov_22s6dd2wjj.s[30]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[2][1]++;}cov_22s6dd2wjj.s[32]++;\n  if (!request.body.state) {/* istanbul ignore next */cov_22s6dd2wjj.b[3][0]++;cov_22s6dd2wjj.s[33]++;\n    sendStatus(response, 400, 'state not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[3][1]++;}cov_22s6dd2wjj.s[35]++;\n  if (!request.body.hiking) {/* istanbul ignore next */cov_22s6dd2wjj.b[4][0]++;cov_22s6dd2wjj.s[36]++;\n    sendStatus(response, 400, 'hiking info not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[4][1]++;}cov_22s6dd2wjj.s[38]++;\n  if (!request.body.range) {/* istanbul ignore next */cov_22s6dd2wjj.b[5][0]++;cov_22s6dd2wjj.s[39]++;\n    sendStatus(response, 400, 'range name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[40]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[5][1]++;}\n  let mountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[41]++, new Mountain(\n  request.body.name,\n  request.body.state,\n  request.body.hiking,\n  request.body.range)); /* istanbul ignore next */cov_22s6dd2wjj.s[42]++;\n\n\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_22s6dd2wjj.f[7]++;cov_22s6dd2wjj.s[43]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_22s6dd2wjj.f[8]++;cov_22s6dd2wjj.s[44]++;\n    sendStatus(response, 500, error);\n  });\n\n}","timestamp":"2017-12-08T04:14:48.984Z"}
{"level":"info","message":"adding a GET url and callback","timestamp":"2017-12-08T04:14:48.984Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T04:14:48.984Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[9]++;\n  let id = /* istanbul ignore next */(cov_22s6dd2wjj.s[46]++, request.url.query.id); /* istanbul ignore next */cov_22s6dd2wjj.s[47]++;\n\n  if (id) {/* istanbul ignore next */cov_22s6dd2wjj.b[6][0]++;\n    let requestMountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[48]++, getMountainById(id)); /* istanbul ignore next */cov_22s6dd2wjj.s[49]++;\n    if (requestMountain) {/* istanbul ignore next */cov_22s6dd2wjj.b[7][0]++;cov_22s6dd2wjj.s[50]++;\n      sendJSON(response, 200, requestMountain);\n    } else\n      {/* istanbul ignore next */cov_22s6dd2wjj.b[7][1]++;cov_22s6dd2wjj.s[51]++;sendStatus(response, 404, `no mountain found with the id of ${id}`);}\n  } else\n    {/* istanbul ignore next */cov_22s6dd2wjj.b[6][1]++;cov_22s6dd2wjj.s[52]++;sendJSON(response, 200, storage);}\n}","timestamp":"2017-12-08T04:14:48.984Z"}
{"level":"info","message":"adding a DELETE url and callback","timestamp":"2017-12-08T04:14:48.984Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T04:14:48.984Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[10]++;\n  let id = /* istanbul ignore next */(cov_22s6dd2wjj.s[54]++, request.url.query.id); /* istanbul ignore next */cov_22s6dd2wjj.s[55]++;\n  if (id) {/* istanbul ignore next */cov_22s6dd2wjj.b[8][0]++;\n    let deletedMountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[56]++, deleteMountainById(id)); /* istanbul ignore next */cov_22s6dd2wjj.s[57]++;\n    if (deletedMountain) {/* istanbul ignore next */cov_22s6dd2wjj.b[9][0]++;cov_22s6dd2wjj.s[58]++;\n      logger.log('info', `Mountain deleted, responding with a 200 success code`); /* istanbul ignore next */cov_22s6dd2wjj.s[59]++;\n      response.writeHead(200); /* istanbul ignore next */cov_22s6dd2wjj.s[60]++;\n      response.end();\n    } else\n      {/* istanbul ignore next */cov_22s6dd2wjj.b[9][1]++;cov_22s6dd2wjj.s[61]++;sendStatus(response, 404, `No mountain was found with an id ${id}`);}\n  } else\n    {/* istanbul ignore next */cov_22s6dd2wjj.b[8][1]++;cov_22s6dd2wjj.s[62]++;sendStatus(response, 400, `something else occurred - bad request.`);}\n}","timestamp":"2017-12-08T04:14:48.984Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T04:14:49.098Z"}
{"level":"info","message":"Original URL: \"/api/mountains\"","timestamp":"2017-12-08T04:14:49.099Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/mountains\",\"path\":\"/api/mountains\",\"href\":\"/api/mountains\"}","timestamp":"2017-12-08T04:14:49.099Z"}
{"level":"info","message":"found the following handler","timestamp":"2017-12-08T04:14:49.100Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[6]++;cov_22s6dd2wjj.s[26]++;\n  if (!request.body) {/* istanbul ignore next */cov_22s6dd2wjj.b[1][0]++;cov_22s6dd2wjj.s[27]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[1][1]++;}cov_22s6dd2wjj.s[29]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_22s6dd2wjj.b[2][0]++;cov_22s6dd2wjj.s[30]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[2][1]++;}cov_22s6dd2wjj.s[32]++;\n  if (!request.body.state) {/* istanbul ignore next */cov_22s6dd2wjj.b[3][0]++;cov_22s6dd2wjj.s[33]++;\n    sendStatus(response, 400, 'state not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[3][1]++;}cov_22s6dd2wjj.s[35]++;\n  if (!request.body.hiking) {/* istanbul ignore next */cov_22s6dd2wjj.b[4][0]++;cov_22s6dd2wjj.s[36]++;\n    sendStatus(response, 400, 'hiking info not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[4][1]++;}cov_22s6dd2wjj.s[38]++;\n  if (!request.body.range) {/* istanbul ignore next */cov_22s6dd2wjj.b[5][0]++;cov_22s6dd2wjj.s[39]++;\n    sendStatus(response, 400, 'range name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[40]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[5][1]++;}\n  let mountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[41]++, new Mountain(\n  request.body.name,\n  request.body.state,\n  request.body.hiking,\n  request.body.range)); /* istanbul ignore next */cov_22s6dd2wjj.s[42]++;\n\n\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_22s6dd2wjj.f[7]++;cov_22s6dd2wjj.s[43]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_22s6dd2wjj.f[8]++;cov_22s6dd2wjj.s[44]++;\n    sendStatus(response, 500, error);\n  });\n\n}","timestamp":"2017-12-08T04:14:49.100Z"}
{"level":"info","message":"responding with a 200 code and the following json data","timestamp":"2017-12-08T04:14:49.102Z"}
{"id":"54d3c4c0-dbce-11e7-8f43-517dfbcdc019","name":"Shuksan","state":"Washington","hiking":"Yes","range":"Cascades","level":"info","message":"","timestamp":"2017-12-08T04:14:49.103Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T04:14:49.111Z"}
{"level":"info","message":"Original URL: \"/api/mountains?id=$333-33\"","timestamp":"2017-12-08T04:14:49.111Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=$333-33\",\"query\":{\"id\":\"$333-33\"},\"pathname\":\"/api/mountains\",\"path\":\"/api/mountains?id=$333-33\",\"href\":\"/api/mountains?id=$333-33\"}","timestamp":"2017-12-08T04:14:49.111Z"}
{"level":"info","message":"found the following handler","timestamp":"2017-12-08T04:14:49.111Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[9]++;\n  let id = /* istanbul ignore next */(cov_22s6dd2wjj.s[46]++, request.url.query.id); /* istanbul ignore next */cov_22s6dd2wjj.s[47]++;\n\n  if (id) {/* istanbul ignore next */cov_22s6dd2wjj.b[6][0]++;\n    let requestMountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[48]++, getMountainById(id)); /* istanbul ignore next */cov_22s6dd2wjj.s[49]++;\n    if (requestMountain) {/* istanbul ignore next */cov_22s6dd2wjj.b[7][0]++;cov_22s6dd2wjj.s[50]++;\n      sendJSON(response, 200, requestMountain);\n    } else\n      {/* istanbul ignore next */cov_22s6dd2wjj.b[7][1]++;cov_22s6dd2wjj.s[51]++;sendStatus(response, 404, `no mountain found with the id of ${id}`);}\n  } else\n    {/* istanbul ignore next */cov_22s6dd2wjj.b[6][1]++;cov_22s6dd2wjj.s[52]++;sendJSON(response, 200, storage);}\n}","timestamp":"2017-12-08T04:14:49.111Z"}
{"level":"info","message":"------>REQUEST_ERROR<------","timestamp":"2017-12-08T04:14:49.112Z"}
{"message":"storage.filter is not a function","stack":"TypeError: storage.filter is not a function\n    at getMountainById (/Users/austriker/Documents/code-fellows/cf-401/labs/08-09-vanilla-rest-server/lab-david/route/mountain-route.js:29:18)\n    at Object.<anonymous>.router.get (/Users/austriker/Documents/code-fellows/cf-401/labs/08-09-vanilla-rest-server/lab-david/route/mountain-route.js:87:78)\n    at requestParser.parse.then.request (/Users/austriker/Documents/code-fellows/cf-401/labs/08-09-vanilla-rest-server/lab-david/lib/router.js:50:87)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-08T04:14:49.112Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T04:14:49.116Z"}
{"level":"info","message":"Original URL: \"/api/mountains?e8013d70-dbad-11e7-9cb6-ddffa32a3c9b\"","timestamp":"2017-12-08T04:14:49.116Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?e8013d70-dbad-11e7-9cb6-ddffa32a3c9b\",\"query\":{\"e8013d70-dbad-11e7-9cb6-ddffa32a3c9b\":\"\"},\"pathname\":\"/api/mountains\",\"path\":\"/api/mountains?e8013d70-dbad-11e7-9cb6-ddffa32a3c9b\",\"href\":\"/api/mountains?e8013d70-dbad-11e7-9cb6-ddffa32a3c9b\"}","timestamp":"2017-12-08T04:14:49.116Z"}
{"level":"info","message":"found the following handler","timestamp":"2017-12-08T04:14:49.116Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[9]++;\n  let id = /* istanbul ignore next */(cov_22s6dd2wjj.s[46]++, request.url.query.id); /* istanbul ignore next */cov_22s6dd2wjj.s[47]++;\n\n  if (id) {/* istanbul ignore next */cov_22s6dd2wjj.b[6][0]++;\n    let requestMountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[48]++, getMountainById(id)); /* istanbul ignore next */cov_22s6dd2wjj.s[49]++;\n    if (requestMountain) {/* istanbul ignore next */cov_22s6dd2wjj.b[7][0]++;cov_22s6dd2wjj.s[50]++;\n      sendJSON(response, 200, requestMountain);\n    } else\n      {/* istanbul ignore next */cov_22s6dd2wjj.b[7][1]++;cov_22s6dd2wjj.s[51]++;sendStatus(response, 404, `no mountain found with the id of ${id}`);}\n  } else\n    {/* istanbul ignore next */cov_22s6dd2wjj.b[6][1]++;cov_22s6dd2wjj.s[52]++;sendJSON(response, 200, storage);}\n}","timestamp":"2017-12-08T04:14:49.116Z"}
{"level":"info","message":"responding with a 200 code and the following json data","timestamp":"2017-12-08T04:14:49.116Z"}
{"level":"info","message":"","timestamp":"2017-12-08T04:14:49.116Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T04:14:49.119Z"}
{"level":"info","message":"Original URL: \"/api/mountains\"","timestamp":"2017-12-08T04:14:49.119Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/mountains\",\"path\":\"/api/mountains\",\"href\":\"/api/mountains\"}","timestamp":"2017-12-08T04:14:49.119Z"}
{"level":"info","message":"found the following handler","timestamp":"2017-12-08T04:14:49.119Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[6]++;cov_22s6dd2wjj.s[26]++;\n  if (!request.body) {/* istanbul ignore next */cov_22s6dd2wjj.b[1][0]++;cov_22s6dd2wjj.s[27]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[1][1]++;}cov_22s6dd2wjj.s[29]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_22s6dd2wjj.b[2][0]++;cov_22s6dd2wjj.s[30]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[2][1]++;}cov_22s6dd2wjj.s[32]++;\n  if (!request.body.state) {/* istanbul ignore next */cov_22s6dd2wjj.b[3][0]++;cov_22s6dd2wjj.s[33]++;\n    sendStatus(response, 400, 'state not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[3][1]++;}cov_22s6dd2wjj.s[35]++;\n  if (!request.body.hiking) {/* istanbul ignore next */cov_22s6dd2wjj.b[4][0]++;cov_22s6dd2wjj.s[36]++;\n    sendStatus(response, 400, 'hiking info not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[4][1]++;}cov_22s6dd2wjj.s[38]++;\n  if (!request.body.range) {/* istanbul ignore next */cov_22s6dd2wjj.b[5][0]++;cov_22s6dd2wjj.s[39]++;\n    sendStatus(response, 400, 'range name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[40]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[5][1]++;}\n  let mountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[41]++, new Mountain(\n  request.body.name,\n  request.body.state,\n  request.body.hiking,\n  request.body.range)); /* istanbul ignore next */cov_22s6dd2wjj.s[42]++;\n\n\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_22s6dd2wjj.f[7]++;cov_22s6dd2wjj.s[43]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_22s6dd2wjj.f[8]++;cov_22s6dd2wjj.s[44]++;\n    sendStatus(response, 500, error);\n  });\n\n}","timestamp":"2017-12-08T04:14:49.119Z"}
{"level":"info","message":"Responding with a 400 code due to name not found","timestamp":"2017-12-08T04:14:49.119Z"}
{"level":"info","message":"adding a POST url and callback","timestamp":"2017-12-08T23:13:34.292Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T23:13:34.293Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[6]++;cov_22s6dd2wjj.s[26]++;\n  if (!request.body) {/* istanbul ignore next */cov_22s6dd2wjj.b[1][0]++;cov_22s6dd2wjj.s[27]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[1][1]++;}cov_22s6dd2wjj.s[29]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_22s6dd2wjj.b[2][0]++;cov_22s6dd2wjj.s[30]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[2][1]++;}cov_22s6dd2wjj.s[32]++;\n  if (!request.body.state) {/* istanbul ignore next */cov_22s6dd2wjj.b[3][0]++;cov_22s6dd2wjj.s[33]++;\n    sendStatus(response, 400, 'state not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[3][1]++;}cov_22s6dd2wjj.s[35]++;\n  if (!request.body.hiking) {/* istanbul ignore next */cov_22s6dd2wjj.b[4][0]++;cov_22s6dd2wjj.s[36]++;\n    sendStatus(response, 400, 'hiking info not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[4][1]++;}cov_22s6dd2wjj.s[38]++;\n  if (!request.body.range) {/* istanbul ignore next */cov_22s6dd2wjj.b[5][0]++;cov_22s6dd2wjj.s[39]++;\n    sendStatus(response, 400, 'range name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[40]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[5][1]++;}\n  let mountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[41]++, new Mountain(\n  request.body.name,\n  request.body.state,\n  request.body.hiking,\n  request.body.range)); /* istanbul ignore next */cov_22s6dd2wjj.s[42]++;\n\n\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_22s6dd2wjj.f[7]++;cov_22s6dd2wjj.s[43]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_22s6dd2wjj.f[8]++;cov_22s6dd2wjj.s[44]++;\n    sendStatus(response, 500, error);\n  });\n\n}","timestamp":"2017-12-08T23:13:34.293Z"}
{"level":"info","message":"adding a GET url and callback","timestamp":"2017-12-08T23:13:34.293Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T23:13:34.293Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[9]++;\n  let id = /* istanbul ignore next */(cov_22s6dd2wjj.s[46]++, request.url.query.id); /* istanbul ignore next */cov_22s6dd2wjj.s[47]++;\n\n  if (id) {/* istanbul ignore next */cov_22s6dd2wjj.b[6][0]++;\n    let requestMountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[48]++, getMountainById(id)); /* istanbul ignore next */cov_22s6dd2wjj.s[49]++;\n    if (requestMountain) {/* istanbul ignore next */cov_22s6dd2wjj.b[7][0]++;cov_22s6dd2wjj.s[50]++;\n      sendJSON(response, 200, requestMountain);\n    } else\n      {/* istanbul ignore next */cov_22s6dd2wjj.b[7][1]++;cov_22s6dd2wjj.s[51]++;sendStatus(response, 404, `no mountain found with the id of ${id}`);}\n  } else\n    {/* istanbul ignore next */cov_22s6dd2wjj.b[6][1]++;cov_22s6dd2wjj.s[52]++;sendJSON(response, 200, storage);}\n}","timestamp":"2017-12-08T23:13:34.293Z"}
{"level":"info","message":"adding a DELETE url and callback","timestamp":"2017-12-08T23:13:34.293Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T23:13:34.293Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[10]++;\n  let id = /* istanbul ignore next */(cov_22s6dd2wjj.s[54]++, request.url.query.id); /* istanbul ignore next */cov_22s6dd2wjj.s[55]++;\n  if (id) {/* istanbul ignore next */cov_22s6dd2wjj.b[8][0]++;\n    let deletedMountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[56]++, deleteMountainById(id)); /* istanbul ignore next */cov_22s6dd2wjj.s[57]++;\n    if (deletedMountain) {/* istanbul ignore next */cov_22s6dd2wjj.b[9][0]++;cov_22s6dd2wjj.s[58]++;\n      logger.log('info', `Mountain deleted, responding with a 200 success code`); /* istanbul ignore next */cov_22s6dd2wjj.s[59]++;\n      response.writeHead(200); /* istanbul ignore next */cov_22s6dd2wjj.s[60]++;\n      response.end();\n    } else\n      {/* istanbul ignore next */cov_22s6dd2wjj.b[9][1]++;cov_22s6dd2wjj.s[61]++;sendStatus(response, 404, `No mountain was found with an id ${id}`);}\n  } else\n    {/* istanbul ignore next */cov_22s6dd2wjj.b[8][1]++;cov_22s6dd2wjj.s[62]++;sendStatus(response, 400, `something else occurred - bad request.`);}\n}","timestamp":"2017-12-08T23:13:34.293Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T23:13:34.369Z"}
{"level":"info","message":"Original URL: \"/api/mountains\"","timestamp":"2017-12-08T23:13:34.370Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/mountains\",\"path\":\"/api/mountains\",\"href\":\"/api/mountains\"}","timestamp":"2017-12-08T23:13:34.370Z"}
{"level":"info","message":"found the following handler","timestamp":"2017-12-08T23:13:34.371Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[6]++;cov_22s6dd2wjj.s[26]++;\n  if (!request.body) {/* istanbul ignore next */cov_22s6dd2wjj.b[1][0]++;cov_22s6dd2wjj.s[27]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[1][1]++;}cov_22s6dd2wjj.s[29]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_22s6dd2wjj.b[2][0]++;cov_22s6dd2wjj.s[30]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[2][1]++;}cov_22s6dd2wjj.s[32]++;\n  if (!request.body.state) {/* istanbul ignore next */cov_22s6dd2wjj.b[3][0]++;cov_22s6dd2wjj.s[33]++;\n    sendStatus(response, 400, 'state not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[3][1]++;}cov_22s6dd2wjj.s[35]++;\n  if (!request.body.hiking) {/* istanbul ignore next */cov_22s6dd2wjj.b[4][0]++;cov_22s6dd2wjj.s[36]++;\n    sendStatus(response, 400, 'hiking info not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[4][1]++;}cov_22s6dd2wjj.s[38]++;\n  if (!request.body.range) {/* istanbul ignore next */cov_22s6dd2wjj.b[5][0]++;cov_22s6dd2wjj.s[39]++;\n    sendStatus(response, 400, 'range name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[40]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[5][1]++;}\n  let mountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[41]++, new Mountain(\n  request.body.name,\n  request.body.state,\n  request.body.hiking,\n  request.body.range)); /* istanbul ignore next */cov_22s6dd2wjj.s[42]++;\n\n\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_22s6dd2wjj.f[7]++;cov_22s6dd2wjj.s[43]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_22s6dd2wjj.f[8]++;cov_22s6dd2wjj.s[44]++;\n    sendStatus(response, 500, error);\n  });\n\n}","timestamp":"2017-12-08T23:13:34.371Z"}
{"level":"info","message":"responding with a 200 code and the following json data","timestamp":"2017-12-08T23:13:34.374Z"}
{"id":"69dcbf30-dc6d-11e7-bf34-7f0544ba030b","name":"Shuksan","state":"Washington","hiking":"Yes","range":"Cascades","level":"info","message":"","timestamp":"2017-12-08T23:13:34.374Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T23:13:34.383Z"}
{"level":"info","message":"Original URL: \"/api/mountains?id=$333-33\"","timestamp":"2017-12-08T23:13:34.383Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=$333-33\",\"query\":{\"id\":\"$333-33\"},\"pathname\":\"/api/mountains\",\"path\":\"/api/mountains?id=$333-33\",\"href\":\"/api/mountains?id=$333-33\"}","timestamp":"2017-12-08T23:13:34.383Z"}
{"level":"info","message":"found the following handler","timestamp":"2017-12-08T23:13:34.383Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[9]++;\n  let id = /* istanbul ignore next */(cov_22s6dd2wjj.s[46]++, request.url.query.id); /* istanbul ignore next */cov_22s6dd2wjj.s[47]++;\n\n  if (id) {/* istanbul ignore next */cov_22s6dd2wjj.b[6][0]++;\n    let requestMountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[48]++, getMountainById(id)); /* istanbul ignore next */cov_22s6dd2wjj.s[49]++;\n    if (requestMountain) {/* istanbul ignore next */cov_22s6dd2wjj.b[7][0]++;cov_22s6dd2wjj.s[50]++;\n      sendJSON(response, 200, requestMountain);\n    } else\n      {/* istanbul ignore next */cov_22s6dd2wjj.b[7][1]++;cov_22s6dd2wjj.s[51]++;sendStatus(response, 404, `no mountain found with the id of ${id}`);}\n  } else\n    {/* istanbul ignore next */cov_22s6dd2wjj.b[6][1]++;cov_22s6dd2wjj.s[52]++;sendJSON(response, 200, storage);}\n}","timestamp":"2017-12-08T23:13:34.383Z"}
{"level":"info","message":"------>REQUEST_ERROR<------","timestamp":"2017-12-08T23:13:34.384Z"}
{"message":"storage.filter is not a function","stack":"TypeError: storage.filter is not a function\n    at getMountainById (/Users/austriker/Documents/code-fellows/cf-401/labs/08-09-vanilla-rest-server/lab-david/route/mountain-route.js:29:18)\n    at Object.<anonymous>.router.get (/Users/austriker/Documents/code-fellows/cf-401/labs/08-09-vanilla-rest-server/lab-david/route/mountain-route.js:87:78)\n    at requestParser.parse.then.request (/Users/austriker/Documents/code-fellows/cf-401/labs/08-09-vanilla-rest-server/lab-david/lib/router.js:50:87)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-08T23:13:34.384Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T23:13:34.387Z"}
{"level":"info","message":"Original URL: \"/api/mountains?e8013d70-dbad-11e7-9cb6-ddffa32a3c9b\"","timestamp":"2017-12-08T23:13:34.388Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?e8013d70-dbad-11e7-9cb6-ddffa32a3c9b\",\"query\":{\"e8013d70-dbad-11e7-9cb6-ddffa32a3c9b\":\"\"},\"pathname\":\"/api/mountains\",\"path\":\"/api/mountains?e8013d70-dbad-11e7-9cb6-ddffa32a3c9b\",\"href\":\"/api/mountains?e8013d70-dbad-11e7-9cb6-ddffa32a3c9b\"}","timestamp":"2017-12-08T23:13:34.388Z"}
{"level":"info","message":"found the following handler","timestamp":"2017-12-08T23:13:34.388Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[9]++;\n  let id = /* istanbul ignore next */(cov_22s6dd2wjj.s[46]++, request.url.query.id); /* istanbul ignore next */cov_22s6dd2wjj.s[47]++;\n\n  if (id) {/* istanbul ignore next */cov_22s6dd2wjj.b[6][0]++;\n    let requestMountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[48]++, getMountainById(id)); /* istanbul ignore next */cov_22s6dd2wjj.s[49]++;\n    if (requestMountain) {/* istanbul ignore next */cov_22s6dd2wjj.b[7][0]++;cov_22s6dd2wjj.s[50]++;\n      sendJSON(response, 200, requestMountain);\n    } else\n      {/* istanbul ignore next */cov_22s6dd2wjj.b[7][1]++;cov_22s6dd2wjj.s[51]++;sendStatus(response, 404, `no mountain found with the id of ${id}`);}\n  } else\n    {/* istanbul ignore next */cov_22s6dd2wjj.b[6][1]++;cov_22s6dd2wjj.s[52]++;sendJSON(response, 200, storage);}\n}","timestamp":"2017-12-08T23:13:34.388Z"}
{"level":"info","message":"responding with a 200 code and the following json data","timestamp":"2017-12-08T23:13:34.388Z"}
{"level":"info","message":"","timestamp":"2017-12-08T23:13:34.388Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T23:13:34.390Z"}
{"level":"info","message":"Original URL: \"/api/mountains\"","timestamp":"2017-12-08T23:13:34.390Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/mountains\",\"path\":\"/api/mountains\",\"href\":\"/api/mountains\"}","timestamp":"2017-12-08T23:13:34.390Z"}
{"level":"info","message":"found the following handler","timestamp":"2017-12-08T23:13:34.390Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[6]++;cov_22s6dd2wjj.s[26]++;\n  if (!request.body) {/* istanbul ignore next */cov_22s6dd2wjj.b[1][0]++;cov_22s6dd2wjj.s[27]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[1][1]++;}cov_22s6dd2wjj.s[29]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_22s6dd2wjj.b[2][0]++;cov_22s6dd2wjj.s[30]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[2][1]++;}cov_22s6dd2wjj.s[32]++;\n  if (!request.body.state) {/* istanbul ignore next */cov_22s6dd2wjj.b[3][0]++;cov_22s6dd2wjj.s[33]++;\n    sendStatus(response, 400, 'state not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[3][1]++;}cov_22s6dd2wjj.s[35]++;\n  if (!request.body.hiking) {/* istanbul ignore next */cov_22s6dd2wjj.b[4][0]++;cov_22s6dd2wjj.s[36]++;\n    sendStatus(response, 400, 'hiking info not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[4][1]++;}cov_22s6dd2wjj.s[38]++;\n  if (!request.body.range) {/* istanbul ignore next */cov_22s6dd2wjj.b[5][0]++;cov_22s6dd2wjj.s[39]++;\n    sendStatus(response, 400, 'range name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[40]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[5][1]++;}\n  let mountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[41]++, new Mountain(\n  request.body.name,\n  request.body.state,\n  request.body.hiking,\n  request.body.range)); /* istanbul ignore next */cov_22s6dd2wjj.s[42]++;\n\n\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_22s6dd2wjj.f[7]++;cov_22s6dd2wjj.s[43]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_22s6dd2wjj.f[8]++;cov_22s6dd2wjj.s[44]++;\n    sendStatus(response, 500, error);\n  });\n\n}","timestamp":"2017-12-08T23:13:34.390Z"}
{"level":"info","message":"Responding with a 400 code due to name not found","timestamp":"2017-12-08T23:13:34.390Z"}
{"level":"info","message":"adding a POST url and callback","timestamp":"2017-12-08T23:34:34.948Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T23:34:34.949Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[6]++;cov_22s6dd2wjj.s[26]++;\n  if (!request.body) {/* istanbul ignore next */cov_22s6dd2wjj.b[1][0]++;cov_22s6dd2wjj.s[27]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[1][1]++;}cov_22s6dd2wjj.s[29]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_22s6dd2wjj.b[2][0]++;cov_22s6dd2wjj.s[30]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[2][1]++;}cov_22s6dd2wjj.s[32]++;\n  if (!request.body.state) {/* istanbul ignore next */cov_22s6dd2wjj.b[3][0]++;cov_22s6dd2wjj.s[33]++;\n    sendStatus(response, 400, 'state not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[3][1]++;}cov_22s6dd2wjj.s[35]++;\n  if (!request.body.hiking) {/* istanbul ignore next */cov_22s6dd2wjj.b[4][0]++;cov_22s6dd2wjj.s[36]++;\n    sendStatus(response, 400, 'hiking info not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[4][1]++;}cov_22s6dd2wjj.s[38]++;\n  if (!request.body.range) {/* istanbul ignore next */cov_22s6dd2wjj.b[5][0]++;cov_22s6dd2wjj.s[39]++;\n    sendStatus(response, 400, 'range name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[40]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[5][1]++;}\n  let mountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[41]++, new Mountain(\n  request.body.name,\n  request.body.state,\n  request.body.hiking,\n  request.body.range)); /* istanbul ignore next */cov_22s6dd2wjj.s[42]++;\n\n\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_22s6dd2wjj.f[7]++;cov_22s6dd2wjj.s[43]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_22s6dd2wjj.f[8]++;cov_22s6dd2wjj.s[44]++;\n    sendStatus(response, 500, error);\n  });\n\n}","timestamp":"2017-12-08T23:34:34.949Z"}
{"level":"info","message":"adding a GET url and callback","timestamp":"2017-12-08T23:34:34.949Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T23:34:34.949Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[9]++;\n  let id = /* istanbul ignore next */(cov_22s6dd2wjj.s[46]++, request.url.query.id); /* istanbul ignore next */cov_22s6dd2wjj.s[47]++;\n\n  if (id) {/* istanbul ignore next */cov_22s6dd2wjj.b[6][0]++;\n    let requestMountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[48]++, getMountainById(id)); /* istanbul ignore next */cov_22s6dd2wjj.s[49]++;\n    if (requestMountain) {/* istanbul ignore next */cov_22s6dd2wjj.b[7][0]++;cov_22s6dd2wjj.s[50]++;\n      sendJSON(response, 200, requestMountain);\n    } else\n      {/* istanbul ignore next */cov_22s6dd2wjj.b[7][1]++;cov_22s6dd2wjj.s[51]++;sendStatus(response, 404, `no mountain found with the id of ${id}`);}\n  } else\n    {/* istanbul ignore next */cov_22s6dd2wjj.b[6][1]++;cov_22s6dd2wjj.s[52]++;sendJSON(response, 200, storage);}\n}","timestamp":"2017-12-08T23:34:34.949Z"}
{"level":"info","message":"adding a DELETE url and callback","timestamp":"2017-12-08T23:34:34.949Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T23:34:34.949Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[10]++;\n  let id = /* istanbul ignore next */(cov_22s6dd2wjj.s[54]++, request.url.query.id); /* istanbul ignore next */cov_22s6dd2wjj.s[55]++;\n  storage.deleteItem(id).\n  then(filteredMountains => {/* istanbul ignore next */cov_22s6dd2wjj.f[11]++;cov_22s6dd2wjj.s[56]++;\n    sendJSON(response, 200, filteredMountains);\n  }).\n  catch(error => {/* istanbul ignore next */cov_22s6dd2wjj.f[12]++;cov_22s6dd2wjj.s[57]++;\n    sendStatus(response, 404, error);\n  });\n}","timestamp":"2017-12-08T23:34:34.949Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T23:34:35.068Z"}
{"level":"info","message":"Original URL: \"/api/mountains\"","timestamp":"2017-12-08T23:34:35.068Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/mountains\",\"path\":\"/api/mountains\",\"href\":\"/api/mountains\"}","timestamp":"2017-12-08T23:34:35.068Z"}
{"level":"info","message":"found the following handler","timestamp":"2017-12-08T23:34:35.069Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[6]++;cov_22s6dd2wjj.s[26]++;\n  if (!request.body) {/* istanbul ignore next */cov_22s6dd2wjj.b[1][0]++;cov_22s6dd2wjj.s[27]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[1][1]++;}cov_22s6dd2wjj.s[29]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_22s6dd2wjj.b[2][0]++;cov_22s6dd2wjj.s[30]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[2][1]++;}cov_22s6dd2wjj.s[32]++;\n  if (!request.body.state) {/* istanbul ignore next */cov_22s6dd2wjj.b[3][0]++;cov_22s6dd2wjj.s[33]++;\n    sendStatus(response, 400, 'state not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[3][1]++;}cov_22s6dd2wjj.s[35]++;\n  if (!request.body.hiking) {/* istanbul ignore next */cov_22s6dd2wjj.b[4][0]++;cov_22s6dd2wjj.s[36]++;\n    sendStatus(response, 400, 'hiking info not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[4][1]++;}cov_22s6dd2wjj.s[38]++;\n  if (!request.body.range) {/* istanbul ignore next */cov_22s6dd2wjj.b[5][0]++;cov_22s6dd2wjj.s[39]++;\n    sendStatus(response, 400, 'range name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[40]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[5][1]++;}\n  let mountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[41]++, new Mountain(\n  request.body.name,\n  request.body.state,\n  request.body.hiking,\n  request.body.range)); /* istanbul ignore next */cov_22s6dd2wjj.s[42]++;\n\n\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_22s6dd2wjj.f[7]++;cov_22s6dd2wjj.s[43]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_22s6dd2wjj.f[8]++;cov_22s6dd2wjj.s[44]++;\n    sendStatus(response, 500, error);\n  });\n\n}","timestamp":"2017-12-08T23:34:35.069Z"}
{"level":"info","message":"responding with a 200 code and the following json data","timestamp":"2017-12-08T23:34:35.072Z"}
{"id":"594bfed0-dc70-11e7-a3f8-cd2f6eabf71f","name":"Shuksan","state":"Washington","hiking":"Yes","range":"Cascades","level":"info","message":"","timestamp":"2017-12-08T23:34:35.072Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T23:34:35.081Z"}
{"level":"info","message":"Original URL: \"/api/mountains?id=$333-33\"","timestamp":"2017-12-08T23:34:35.081Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=$333-33\",\"query\":{\"id\":\"$333-33\"},\"pathname\":\"/api/mountains\",\"path\":\"/api/mountains?id=$333-33\",\"href\":\"/api/mountains?id=$333-33\"}","timestamp":"2017-12-08T23:34:35.081Z"}
{"level":"info","message":"found the following handler","timestamp":"2017-12-08T23:34:35.082Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[9]++;\n  let id = /* istanbul ignore next */(cov_22s6dd2wjj.s[46]++, request.url.query.id); /* istanbul ignore next */cov_22s6dd2wjj.s[47]++;\n\n  if (id) {/* istanbul ignore next */cov_22s6dd2wjj.b[6][0]++;\n    let requestMountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[48]++, getMountainById(id)); /* istanbul ignore next */cov_22s6dd2wjj.s[49]++;\n    if (requestMountain) {/* istanbul ignore next */cov_22s6dd2wjj.b[7][0]++;cov_22s6dd2wjj.s[50]++;\n      sendJSON(response, 200, requestMountain);\n    } else\n      {/* istanbul ignore next */cov_22s6dd2wjj.b[7][1]++;cov_22s6dd2wjj.s[51]++;sendStatus(response, 404, `no mountain found with the id of ${id}`);}\n  } else\n    {/* istanbul ignore next */cov_22s6dd2wjj.b[6][1]++;cov_22s6dd2wjj.s[52]++;sendJSON(response, 200, storage);}\n}","timestamp":"2017-12-08T23:34:35.082Z"}
{"level":"info","message":"------>REQUEST_ERROR<------","timestamp":"2017-12-08T23:34:35.082Z"}
{"message":"storage.filter is not a function","stack":"TypeError: storage.filter is not a function\n    at getMountainById (/Users/austriker/Documents/code-fellows/cf-401/labs/08-09-vanilla-rest-server/lab-david/route/mountain-route.js:29:18)\n    at Object.<anonymous>.router.get (/Users/austriker/Documents/code-fellows/cf-401/labs/08-09-vanilla-rest-server/lab-david/route/mountain-route.js:87:78)\n    at requestParser.parse.then.request (/Users/austriker/Documents/code-fellows/cf-401/labs/08-09-vanilla-rest-server/lab-david/lib/router.js:50:87)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-08T23:34:35.082Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T23:34:35.087Z"}
{"level":"info","message":"Original URL: \"/api/mountains?e8013d70-dbad-11e7-9cb6-ddffa32a3c9b\"","timestamp":"2017-12-08T23:34:35.087Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?e8013d70-dbad-11e7-9cb6-ddffa32a3c9b\",\"query\":{\"e8013d70-dbad-11e7-9cb6-ddffa32a3c9b\":\"\"},\"pathname\":\"/api/mountains\",\"path\":\"/api/mountains?e8013d70-dbad-11e7-9cb6-ddffa32a3c9b\",\"href\":\"/api/mountains?e8013d70-dbad-11e7-9cb6-ddffa32a3c9b\"}","timestamp":"2017-12-08T23:34:35.087Z"}
{"level":"info","message":"found the following handler","timestamp":"2017-12-08T23:34:35.087Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[9]++;\n  let id = /* istanbul ignore next */(cov_22s6dd2wjj.s[46]++, request.url.query.id); /* istanbul ignore next */cov_22s6dd2wjj.s[47]++;\n\n  if (id) {/* istanbul ignore next */cov_22s6dd2wjj.b[6][0]++;\n    let requestMountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[48]++, getMountainById(id)); /* istanbul ignore next */cov_22s6dd2wjj.s[49]++;\n    if (requestMountain) {/* istanbul ignore next */cov_22s6dd2wjj.b[7][0]++;cov_22s6dd2wjj.s[50]++;\n      sendJSON(response, 200, requestMountain);\n    } else\n      {/* istanbul ignore next */cov_22s6dd2wjj.b[7][1]++;cov_22s6dd2wjj.s[51]++;sendStatus(response, 404, `no mountain found with the id of ${id}`);}\n  } else\n    {/* istanbul ignore next */cov_22s6dd2wjj.b[6][1]++;cov_22s6dd2wjj.s[52]++;sendJSON(response, 200, storage);}\n}","timestamp":"2017-12-08T23:34:35.087Z"}
{"level":"info","message":"responding with a 200 code and the following json data","timestamp":"2017-12-08T23:34:35.087Z"}
{"level":"info","message":"","timestamp":"2017-12-08T23:34:35.087Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T23:34:35.089Z"}
{"level":"info","message":"Original URL: \"/api/mountains\"","timestamp":"2017-12-08T23:34:35.089Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/mountains\",\"path\":\"/api/mountains\",\"href\":\"/api/mountains\"}","timestamp":"2017-12-08T23:34:35.089Z"}
{"level":"info","message":"found the following handler","timestamp":"2017-12-08T23:34:35.090Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[6]++;cov_22s6dd2wjj.s[26]++;\n  if (!request.body) {/* istanbul ignore next */cov_22s6dd2wjj.b[1][0]++;cov_22s6dd2wjj.s[27]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[1][1]++;}cov_22s6dd2wjj.s[29]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_22s6dd2wjj.b[2][0]++;cov_22s6dd2wjj.s[30]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[2][1]++;}cov_22s6dd2wjj.s[32]++;\n  if (!request.body.state) {/* istanbul ignore next */cov_22s6dd2wjj.b[3][0]++;cov_22s6dd2wjj.s[33]++;\n    sendStatus(response, 400, 'state not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[3][1]++;}cov_22s6dd2wjj.s[35]++;\n  if (!request.body.hiking) {/* istanbul ignore next */cov_22s6dd2wjj.b[4][0]++;cov_22s6dd2wjj.s[36]++;\n    sendStatus(response, 400, 'hiking info not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[4][1]++;}cov_22s6dd2wjj.s[38]++;\n  if (!request.body.range) {/* istanbul ignore next */cov_22s6dd2wjj.b[5][0]++;cov_22s6dd2wjj.s[39]++;\n    sendStatus(response, 400, 'range name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[40]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[5][1]++;}\n  let mountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[41]++, new Mountain(\n  request.body.name,\n  request.body.state,\n  request.body.hiking,\n  request.body.range)); /* istanbul ignore next */cov_22s6dd2wjj.s[42]++;\n\n\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_22s6dd2wjj.f[7]++;cov_22s6dd2wjj.s[43]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_22s6dd2wjj.f[8]++;cov_22s6dd2wjj.s[44]++;\n    sendStatus(response, 500, error);\n  });\n\n}","timestamp":"2017-12-08T23:34:35.090Z"}
{"level":"info","message":"Responding with a 400 code due to name not found","timestamp":"2017-12-08T23:34:35.090Z"}
{"level":"info","message":"adding a POST url and callback","timestamp":"2017-12-08T23:37:53.270Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T23:37:53.271Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[6]++;cov_22s6dd2wjj.s[26]++;\n  if (!request.body) {/* istanbul ignore next */cov_22s6dd2wjj.b[1][0]++;cov_22s6dd2wjj.s[27]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[1][1]++;}cov_22s6dd2wjj.s[29]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_22s6dd2wjj.b[2][0]++;cov_22s6dd2wjj.s[30]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[2][1]++;}cov_22s6dd2wjj.s[32]++;\n  if (!request.body.state) {/* istanbul ignore next */cov_22s6dd2wjj.b[3][0]++;cov_22s6dd2wjj.s[33]++;\n    sendStatus(response, 400, 'state not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[3][1]++;}cov_22s6dd2wjj.s[35]++;\n  if (!request.body.hiking) {/* istanbul ignore next */cov_22s6dd2wjj.b[4][0]++;cov_22s6dd2wjj.s[36]++;\n    sendStatus(response, 400, 'hiking info not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[4][1]++;}cov_22s6dd2wjj.s[38]++;\n  if (!request.body.range) {/* istanbul ignore next */cov_22s6dd2wjj.b[5][0]++;cov_22s6dd2wjj.s[39]++;\n    sendStatus(response, 400, 'range name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[40]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[5][1]++;}\n  let mountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[41]++, new Mountain(\n  request.body.name,\n  request.body.state,\n  request.body.hiking,\n  request.body.range)); /* istanbul ignore next */cov_22s6dd2wjj.s[42]++;\n\n\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_22s6dd2wjj.f[7]++;cov_22s6dd2wjj.s[43]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_22s6dd2wjj.f[8]++;cov_22s6dd2wjj.s[44]++;\n    sendStatus(response, 500, error);\n  });\n\n}","timestamp":"2017-12-08T23:37:53.271Z"}
{"level":"info","message":"adding a GET url and callback","timestamp":"2017-12-08T23:37:53.271Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T23:37:53.271Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[9]++;\n  let id = /* istanbul ignore next */(cov_22s6dd2wjj.s[46]++, request.url.query.id); /* istanbul ignore next */cov_22s6dd2wjj.s[47]++;\n\n  if (id) {/* istanbul ignore next */cov_22s6dd2wjj.b[6][0]++;\n    let requestMountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[48]++, getMountainById(id)); /* istanbul ignore next */cov_22s6dd2wjj.s[49]++;\n    if (requestMountain) {/* istanbul ignore next */cov_22s6dd2wjj.b[7][0]++;cov_22s6dd2wjj.s[50]++;\n      sendJSON(response, 200, requestMountain);\n    } else\n      {/* istanbul ignore next */cov_22s6dd2wjj.b[7][1]++;cov_22s6dd2wjj.s[51]++;sendStatus(response, 404, `no mountain found with the id of ${id}`);}\n  } else\n    {/* istanbul ignore next */cov_22s6dd2wjj.b[6][1]++;cov_22s6dd2wjj.s[52]++;sendJSON(response, 200, storage);}\n}","timestamp":"2017-12-08T23:37:53.271Z"}
{"level":"info","message":"adding a DELETE url and callback","timestamp":"2017-12-08T23:37:53.271Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T23:37:53.271Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[10]++;\n  let id = /* istanbul ignore next */(cov_22s6dd2wjj.s[54]++, request.url.query.id); /* istanbul ignore next */cov_22s6dd2wjj.s[55]++;\n  storage.deleteItem(id).\n  then(filteredMountains => {/* istanbul ignore next */cov_22s6dd2wjj.f[11]++;cov_22s6dd2wjj.s[56]++;\n    sendJSON(response, 200, filteredMountains);\n  }).\n  catch(error => {/* istanbul ignore next */cov_22s6dd2wjj.f[12]++;cov_22s6dd2wjj.s[57]++;\n    sendStatus(response, 404, error);\n  });\n}","timestamp":"2017-12-08T23:37:53.271Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T23:37:53.390Z"}
{"level":"info","message":"Original URL: \"/api/mountains\"","timestamp":"2017-12-08T23:37:53.390Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/mountains\",\"path\":\"/api/mountains\",\"href\":\"/api/mountains\"}","timestamp":"2017-12-08T23:37:53.390Z"}
{"level":"info","message":"found the following handler","timestamp":"2017-12-08T23:37:53.391Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[6]++;cov_22s6dd2wjj.s[26]++;\n  if (!request.body) {/* istanbul ignore next */cov_22s6dd2wjj.b[1][0]++;cov_22s6dd2wjj.s[27]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[1][1]++;}cov_22s6dd2wjj.s[29]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_22s6dd2wjj.b[2][0]++;cov_22s6dd2wjj.s[30]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[2][1]++;}cov_22s6dd2wjj.s[32]++;\n  if (!request.body.state) {/* istanbul ignore next */cov_22s6dd2wjj.b[3][0]++;cov_22s6dd2wjj.s[33]++;\n    sendStatus(response, 400, 'state not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[3][1]++;}cov_22s6dd2wjj.s[35]++;\n  if (!request.body.hiking) {/* istanbul ignore next */cov_22s6dd2wjj.b[4][0]++;cov_22s6dd2wjj.s[36]++;\n    sendStatus(response, 400, 'hiking info not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[4][1]++;}cov_22s6dd2wjj.s[38]++;\n  if (!request.body.range) {/* istanbul ignore next */cov_22s6dd2wjj.b[5][0]++;cov_22s6dd2wjj.s[39]++;\n    sendStatus(response, 400, 'range name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[40]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[5][1]++;}\n  let mountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[41]++, new Mountain(\n  request.body.name,\n  request.body.state,\n  request.body.hiking,\n  request.body.range)); /* istanbul ignore next */cov_22s6dd2wjj.s[42]++;\n\n\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_22s6dd2wjj.f[7]++;cov_22s6dd2wjj.s[43]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_22s6dd2wjj.f[8]++;cov_22s6dd2wjj.s[44]++;\n    sendStatus(response, 500, error);\n  });\n\n}","timestamp":"2017-12-08T23:37:53.391Z"}
{"level":"info","message":"responding with a 200 code and the following json data","timestamp":"2017-12-08T23:37:53.394Z"}
{"id":"cf81af00-dc70-11e7-9216-c9bd03b6ecab","name":"Shuksan","state":"Washington","hiking":"Yes","range":"Cascades","level":"info","message":"","timestamp":"2017-12-08T23:37:53.394Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T23:37:53.402Z"}
{"level":"info","message":"Original URL: \"/api/mountains?id=$33333\"","timestamp":"2017-12-08T23:37:53.402Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=$33333\",\"query\":{\"id\":\"$33333\"},\"pathname\":\"/api/mountains\",\"path\":\"/api/mountains?id=$33333\",\"href\":\"/api/mountains?id=$33333\"}","timestamp":"2017-12-08T23:37:53.403Z"}
{"level":"info","message":"found the following handler","timestamp":"2017-12-08T23:37:53.403Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[9]++;\n  let id = /* istanbul ignore next */(cov_22s6dd2wjj.s[46]++, request.url.query.id); /* istanbul ignore next */cov_22s6dd2wjj.s[47]++;\n\n  if (id) {/* istanbul ignore next */cov_22s6dd2wjj.b[6][0]++;\n    let requestMountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[48]++, getMountainById(id)); /* istanbul ignore next */cov_22s6dd2wjj.s[49]++;\n    if (requestMountain) {/* istanbul ignore next */cov_22s6dd2wjj.b[7][0]++;cov_22s6dd2wjj.s[50]++;\n      sendJSON(response, 200, requestMountain);\n    } else\n      {/* istanbul ignore next */cov_22s6dd2wjj.b[7][1]++;cov_22s6dd2wjj.s[51]++;sendStatus(response, 404, `no mountain found with the id of ${id}`);}\n  } else\n    {/* istanbul ignore next */cov_22s6dd2wjj.b[6][1]++;cov_22s6dd2wjj.s[52]++;sendJSON(response, 200, storage);}\n}","timestamp":"2017-12-08T23:37:53.403Z"}
{"level":"info","message":"------>REQUEST_ERROR<------","timestamp":"2017-12-08T23:37:53.403Z"}
{"message":"storage.filter is not a function","stack":"TypeError: storage.filter is not a function\n    at getMountainById (/Users/austriker/Documents/code-fellows/cf-401/labs/08-09-vanilla-rest-server/lab-david/route/mountain-route.js:29:18)\n    at Object.<anonymous>.router.get (/Users/austriker/Documents/code-fellows/cf-401/labs/08-09-vanilla-rest-server/lab-david/route/mountain-route.js:87:78)\n    at requestParser.parse.then.request (/Users/austriker/Documents/code-fellows/cf-401/labs/08-09-vanilla-rest-server/lab-david/lib/router.js:50:87)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-08T23:37:53.403Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T23:37:53.408Z"}
{"level":"info","message":"Original URL: \"/api/mountains?e8013d70-dbad-11e7-9cb6-ddffa32a3c9b\"","timestamp":"2017-12-08T23:37:53.408Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?e8013d70-dbad-11e7-9cb6-ddffa32a3c9b\",\"query\":{\"e8013d70-dbad-11e7-9cb6-ddffa32a3c9b\":\"\"},\"pathname\":\"/api/mountains\",\"path\":\"/api/mountains?e8013d70-dbad-11e7-9cb6-ddffa32a3c9b\",\"href\":\"/api/mountains?e8013d70-dbad-11e7-9cb6-ddffa32a3c9b\"}","timestamp":"2017-12-08T23:37:53.408Z"}
{"level":"info","message":"found the following handler","timestamp":"2017-12-08T23:37:53.408Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[9]++;\n  let id = /* istanbul ignore next */(cov_22s6dd2wjj.s[46]++, request.url.query.id); /* istanbul ignore next */cov_22s6dd2wjj.s[47]++;\n\n  if (id) {/* istanbul ignore next */cov_22s6dd2wjj.b[6][0]++;\n    let requestMountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[48]++, getMountainById(id)); /* istanbul ignore next */cov_22s6dd2wjj.s[49]++;\n    if (requestMountain) {/* istanbul ignore next */cov_22s6dd2wjj.b[7][0]++;cov_22s6dd2wjj.s[50]++;\n      sendJSON(response, 200, requestMountain);\n    } else\n      {/* istanbul ignore next */cov_22s6dd2wjj.b[7][1]++;cov_22s6dd2wjj.s[51]++;sendStatus(response, 404, `no mountain found with the id of ${id}`);}\n  } else\n    {/* istanbul ignore next */cov_22s6dd2wjj.b[6][1]++;cov_22s6dd2wjj.s[52]++;sendJSON(response, 200, storage);}\n}","timestamp":"2017-12-08T23:37:53.408Z"}
{"level":"info","message":"responding with a 200 code and the following json data","timestamp":"2017-12-08T23:37:53.408Z"}
{"level":"info","message":"","timestamp":"2017-12-08T23:37:53.408Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T23:37:53.410Z"}
{"level":"info","message":"Original URL: \"/api/mountains\"","timestamp":"2017-12-08T23:37:53.410Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/mountains\",\"path\":\"/api/mountains\",\"href\":\"/api/mountains\"}","timestamp":"2017-12-08T23:37:53.410Z"}
{"level":"info","message":"found the following handler","timestamp":"2017-12-08T23:37:53.410Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[6]++;cov_22s6dd2wjj.s[26]++;\n  if (!request.body) {/* istanbul ignore next */cov_22s6dd2wjj.b[1][0]++;cov_22s6dd2wjj.s[27]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[1][1]++;}cov_22s6dd2wjj.s[29]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_22s6dd2wjj.b[2][0]++;cov_22s6dd2wjj.s[30]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[2][1]++;}cov_22s6dd2wjj.s[32]++;\n  if (!request.body.state) {/* istanbul ignore next */cov_22s6dd2wjj.b[3][0]++;cov_22s6dd2wjj.s[33]++;\n    sendStatus(response, 400, 'state not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[3][1]++;}cov_22s6dd2wjj.s[35]++;\n  if (!request.body.hiking) {/* istanbul ignore next */cov_22s6dd2wjj.b[4][0]++;cov_22s6dd2wjj.s[36]++;\n    sendStatus(response, 400, 'hiking info not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[4][1]++;}cov_22s6dd2wjj.s[38]++;\n  if (!request.body.range) {/* istanbul ignore next */cov_22s6dd2wjj.b[5][0]++;cov_22s6dd2wjj.s[39]++;\n    sendStatus(response, 400, 'range name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[40]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[5][1]++;}\n  let mountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[41]++, new Mountain(\n  request.body.name,\n  request.body.state,\n  request.body.hiking,\n  request.body.range)); /* istanbul ignore next */cov_22s6dd2wjj.s[42]++;\n\n\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_22s6dd2wjj.f[7]++;cov_22s6dd2wjj.s[43]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_22s6dd2wjj.f[8]++;cov_22s6dd2wjj.s[44]++;\n    sendStatus(response, 500, error);\n  });\n\n}","timestamp":"2017-12-08T23:37:53.410Z"}
{"level":"info","message":"Responding with a 400 code due to name not found","timestamp":"2017-12-08T23:37:53.411Z"}
{"level":"info","message":"adding a POST url and callback","timestamp":"2017-12-08T23:38:40.394Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T23:38:40.396Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[6]++;cov_22s6dd2wjj.s[26]++;\n  if (!request.body) {/* istanbul ignore next */cov_22s6dd2wjj.b[1][0]++;cov_22s6dd2wjj.s[27]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[1][1]++;}cov_22s6dd2wjj.s[29]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_22s6dd2wjj.b[2][0]++;cov_22s6dd2wjj.s[30]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[2][1]++;}cov_22s6dd2wjj.s[32]++;\n  if (!request.body.state) {/* istanbul ignore next */cov_22s6dd2wjj.b[3][0]++;cov_22s6dd2wjj.s[33]++;\n    sendStatus(response, 400, 'state not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[3][1]++;}cov_22s6dd2wjj.s[35]++;\n  if (!request.body.hiking) {/* istanbul ignore next */cov_22s6dd2wjj.b[4][0]++;cov_22s6dd2wjj.s[36]++;\n    sendStatus(response, 400, 'hiking info not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[4][1]++;}cov_22s6dd2wjj.s[38]++;\n  if (!request.body.range) {/* istanbul ignore next */cov_22s6dd2wjj.b[5][0]++;cov_22s6dd2wjj.s[39]++;\n    sendStatus(response, 400, 'range name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[40]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[5][1]++;}\n  let mountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[41]++, new Mountain(\n  request.body.name,\n  request.body.state,\n  request.body.hiking,\n  request.body.range)); /* istanbul ignore next */cov_22s6dd2wjj.s[42]++;\n\n\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_22s6dd2wjj.f[7]++;cov_22s6dd2wjj.s[43]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_22s6dd2wjj.f[8]++;cov_22s6dd2wjj.s[44]++;\n    sendStatus(response, 500, error);\n  });\n\n}","timestamp":"2017-12-08T23:38:40.396Z"}
{"level":"info","message":"adding a GET url and callback","timestamp":"2017-12-08T23:38:40.396Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T23:38:40.396Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[9]++;\n  let id = /* istanbul ignore next */(cov_22s6dd2wjj.s[46]++, request.url.query.id); /* istanbul ignore next */cov_22s6dd2wjj.s[47]++;\n\n  if (id) {/* istanbul ignore next */cov_22s6dd2wjj.b[6][0]++;\n    let requestMountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[48]++, getMountainById(id)); /* istanbul ignore next */cov_22s6dd2wjj.s[49]++;\n    if (requestMountain) {/* istanbul ignore next */cov_22s6dd2wjj.b[7][0]++;cov_22s6dd2wjj.s[50]++;\n      sendJSON(response, 200, requestMountain);\n    } else\n      {/* istanbul ignore next */cov_22s6dd2wjj.b[7][1]++;cov_22s6dd2wjj.s[51]++;sendStatus(response, 404, `no mountain found with the id of ${id}`);}\n  } else\n    {/* istanbul ignore next */cov_22s6dd2wjj.b[6][1]++;cov_22s6dd2wjj.s[52]++;sendJSON(response, 200, storage);}\n}","timestamp":"2017-12-08T23:38:40.396Z"}
{"level":"info","message":"adding a DELETE url and callback","timestamp":"2017-12-08T23:38:40.396Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T23:38:40.396Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[10]++;\n  let id = /* istanbul ignore next */(cov_22s6dd2wjj.s[54]++, request.url.query.id); /* istanbul ignore next */cov_22s6dd2wjj.s[55]++;\n  storage.deleteItem(id).\n  then(filteredMountains => {/* istanbul ignore next */cov_22s6dd2wjj.f[11]++;cov_22s6dd2wjj.s[56]++;\n    sendJSON(response, 200, filteredMountains);\n  }).\n  catch(error => {/* istanbul ignore next */cov_22s6dd2wjj.f[12]++;cov_22s6dd2wjj.s[57]++;\n    sendStatus(response, 404, error);\n  });\n}","timestamp":"2017-12-08T23:38:40.396Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T23:38:40.503Z"}
{"level":"info","message":"Original URL: \"/api/mountains\"","timestamp":"2017-12-08T23:38:40.503Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/mountains\",\"path\":\"/api/mountains\",\"href\":\"/api/mountains\"}","timestamp":"2017-12-08T23:38:40.503Z"}
{"level":"info","message":"found the following handler","timestamp":"2017-12-08T23:38:40.504Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[6]++;cov_22s6dd2wjj.s[26]++;\n  if (!request.body) {/* istanbul ignore next */cov_22s6dd2wjj.b[1][0]++;cov_22s6dd2wjj.s[27]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[1][1]++;}cov_22s6dd2wjj.s[29]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_22s6dd2wjj.b[2][0]++;cov_22s6dd2wjj.s[30]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[2][1]++;}cov_22s6dd2wjj.s[32]++;\n  if (!request.body.state) {/* istanbul ignore next */cov_22s6dd2wjj.b[3][0]++;cov_22s6dd2wjj.s[33]++;\n    sendStatus(response, 400, 'state not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[3][1]++;}cov_22s6dd2wjj.s[35]++;\n  if (!request.body.hiking) {/* istanbul ignore next */cov_22s6dd2wjj.b[4][0]++;cov_22s6dd2wjj.s[36]++;\n    sendStatus(response, 400, 'hiking info not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[4][1]++;}cov_22s6dd2wjj.s[38]++;\n  if (!request.body.range) {/* istanbul ignore next */cov_22s6dd2wjj.b[5][0]++;cov_22s6dd2wjj.s[39]++;\n    sendStatus(response, 400, 'range name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[40]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[5][1]++;}\n  let mountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[41]++, new Mountain(\n  request.body.name,\n  request.body.state,\n  request.body.hiking,\n  request.body.range)); /* istanbul ignore next */cov_22s6dd2wjj.s[42]++;\n\n\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_22s6dd2wjj.f[7]++;cov_22s6dd2wjj.s[43]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_22s6dd2wjj.f[8]++;cov_22s6dd2wjj.s[44]++;\n    sendStatus(response, 500, error);\n  });\n\n}","timestamp":"2017-12-08T23:38:40.504Z"}
{"level":"info","message":"responding with a 200 code and the following json data","timestamp":"2017-12-08T23:38:40.507Z"}
{"id":"eb966780-dc70-11e7-8756-590d687489d3","name":"Shuksan","state":"Washington","hiking":"Yes","range":"Cascades","level":"info","message":"","timestamp":"2017-12-08T23:38:40.507Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T23:38:40.516Z"}
{"level":"info","message":"Original URL: \"/api/mountains?id=$33333\"","timestamp":"2017-12-08T23:38:40.516Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=$33333\",\"query\":{\"id\":\"$33333\"},\"pathname\":\"/api/mountains\",\"path\":\"/api/mountains?id=$33333\",\"href\":\"/api/mountains?id=$33333\"}","timestamp":"2017-12-08T23:38:40.516Z"}
{"level":"info","message":"found the following handler","timestamp":"2017-12-08T23:38:40.516Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[9]++;\n  let id = /* istanbul ignore next */(cov_22s6dd2wjj.s[46]++, request.url.query.id); /* istanbul ignore next */cov_22s6dd2wjj.s[47]++;\n\n  if (id) {/* istanbul ignore next */cov_22s6dd2wjj.b[6][0]++;\n    let requestMountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[48]++, getMountainById(id)); /* istanbul ignore next */cov_22s6dd2wjj.s[49]++;\n    if (requestMountain) {/* istanbul ignore next */cov_22s6dd2wjj.b[7][0]++;cov_22s6dd2wjj.s[50]++;\n      sendJSON(response, 200, requestMountain);\n    } else\n      {/* istanbul ignore next */cov_22s6dd2wjj.b[7][1]++;cov_22s6dd2wjj.s[51]++;sendStatus(response, 404, `no mountain found with the id of ${id}`);}\n  } else\n    {/* istanbul ignore next */cov_22s6dd2wjj.b[6][1]++;cov_22s6dd2wjj.s[52]++;sendJSON(response, 200, storage);}\n}","timestamp":"2017-12-08T23:38:40.516Z"}
{"level":"info","message":"------>REQUEST_ERROR<------","timestamp":"2017-12-08T23:38:40.516Z"}
{"message":"storage.filter is not a function","stack":"TypeError: storage.filter is not a function\n    at getMountainById (/Users/austriker/Documents/code-fellows/cf-401/labs/08-09-vanilla-rest-server/lab-david/route/mountain-route.js:29:18)\n    at Object.<anonymous>.router.get (/Users/austriker/Documents/code-fellows/cf-401/labs/08-09-vanilla-rest-server/lab-david/route/mountain-route.js:87:78)\n    at requestParser.parse.then.request (/Users/austriker/Documents/code-fellows/cf-401/labs/08-09-vanilla-rest-server/lab-david/lib/router.js:50:87)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-08T23:38:40.517Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T23:38:40.520Z"}
{"level":"info","message":"Original URL: \"/api/mountains?e8013d70-dbad-11e7-9cb6-ddffa32a3c9b\"","timestamp":"2017-12-08T23:38:40.520Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?e8013d70-dbad-11e7-9cb6-ddffa32a3c9b\",\"query\":{\"e8013d70-dbad-11e7-9cb6-ddffa32a3c9b\":\"\"},\"pathname\":\"/api/mountains\",\"path\":\"/api/mountains?e8013d70-dbad-11e7-9cb6-ddffa32a3c9b\",\"href\":\"/api/mountains?e8013d70-dbad-11e7-9cb6-ddffa32a3c9b\"}","timestamp":"2017-12-08T23:38:40.520Z"}
{"level":"info","message":"found the following handler","timestamp":"2017-12-08T23:38:40.520Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[9]++;\n  let id = /* istanbul ignore next */(cov_22s6dd2wjj.s[46]++, request.url.query.id); /* istanbul ignore next */cov_22s6dd2wjj.s[47]++;\n\n  if (id) {/* istanbul ignore next */cov_22s6dd2wjj.b[6][0]++;\n    let requestMountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[48]++, getMountainById(id)); /* istanbul ignore next */cov_22s6dd2wjj.s[49]++;\n    if (requestMountain) {/* istanbul ignore next */cov_22s6dd2wjj.b[7][0]++;cov_22s6dd2wjj.s[50]++;\n      sendJSON(response, 200, requestMountain);\n    } else\n      {/* istanbul ignore next */cov_22s6dd2wjj.b[7][1]++;cov_22s6dd2wjj.s[51]++;sendStatus(response, 404, `no mountain found with the id of ${id}`);}\n  } else\n    {/* istanbul ignore next */cov_22s6dd2wjj.b[6][1]++;cov_22s6dd2wjj.s[52]++;sendJSON(response, 200, storage);}\n}","timestamp":"2017-12-08T23:38:40.520Z"}
{"level":"info","message":"responding with a 200 code and the following json data","timestamp":"2017-12-08T23:38:40.520Z"}
{"level":"info","message":"","timestamp":"2017-12-08T23:38:40.520Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T23:38:40.522Z"}
{"level":"info","message":"Original URL: \"/api/mountains\"","timestamp":"2017-12-08T23:38:40.522Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/mountains\",\"path\":\"/api/mountains\",\"href\":\"/api/mountains\"}","timestamp":"2017-12-08T23:38:40.522Z"}
{"level":"info","message":"found the following handler","timestamp":"2017-12-08T23:38:40.522Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[6]++;cov_22s6dd2wjj.s[26]++;\n  if (!request.body) {/* istanbul ignore next */cov_22s6dd2wjj.b[1][0]++;cov_22s6dd2wjj.s[27]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[1][1]++;}cov_22s6dd2wjj.s[29]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_22s6dd2wjj.b[2][0]++;cov_22s6dd2wjj.s[30]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[2][1]++;}cov_22s6dd2wjj.s[32]++;\n  if (!request.body.state) {/* istanbul ignore next */cov_22s6dd2wjj.b[3][0]++;cov_22s6dd2wjj.s[33]++;\n    sendStatus(response, 400, 'state not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[3][1]++;}cov_22s6dd2wjj.s[35]++;\n  if (!request.body.hiking) {/* istanbul ignore next */cov_22s6dd2wjj.b[4][0]++;cov_22s6dd2wjj.s[36]++;\n    sendStatus(response, 400, 'hiking info not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[4][1]++;}cov_22s6dd2wjj.s[38]++;\n  if (!request.body.range) {/* istanbul ignore next */cov_22s6dd2wjj.b[5][0]++;cov_22s6dd2wjj.s[39]++;\n    sendStatus(response, 400, 'range name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[40]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[5][1]++;}\n  let mountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[41]++, new Mountain(\n  request.body.name,\n  request.body.state,\n  request.body.hiking,\n  request.body.range)); /* istanbul ignore next */cov_22s6dd2wjj.s[42]++;\n\n\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_22s6dd2wjj.f[7]++;cov_22s6dd2wjj.s[43]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_22s6dd2wjj.f[8]++;cov_22s6dd2wjj.s[44]++;\n    sendStatus(response, 500, error);\n  });\n\n}","timestamp":"2017-12-08T23:38:40.522Z"}
{"level":"info","message":"Responding with a 400 code due to name not found","timestamp":"2017-12-08T23:38:40.522Z"}
{"level":"info","message":"adding a POST url and callback","timestamp":"2017-12-08T23:46:20.277Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T23:46:20.277Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[6]++;cov_22s6dd2wjj.s[26]++;\n  if (!request.body) {/* istanbul ignore next */cov_22s6dd2wjj.b[1][0]++;cov_22s6dd2wjj.s[27]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[1][1]++;}cov_22s6dd2wjj.s[29]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_22s6dd2wjj.b[2][0]++;cov_22s6dd2wjj.s[30]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[2][1]++;}cov_22s6dd2wjj.s[32]++;\n  if (!request.body.state) {/* istanbul ignore next */cov_22s6dd2wjj.b[3][0]++;cov_22s6dd2wjj.s[33]++;\n    sendStatus(response, 400, 'state not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[3][1]++;}cov_22s6dd2wjj.s[35]++;\n  if (!request.body.hiking) {/* istanbul ignore next */cov_22s6dd2wjj.b[4][0]++;cov_22s6dd2wjj.s[36]++;\n    sendStatus(response, 400, 'hiking info not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[4][1]++;}cov_22s6dd2wjj.s[38]++;\n  if (!request.body.range) {/* istanbul ignore next */cov_22s6dd2wjj.b[5][0]++;cov_22s6dd2wjj.s[39]++;\n    sendStatus(response, 400, 'range name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[40]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[5][1]++;}\n  let mountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[41]++, new Mountain(\n  request.body.name,\n  request.body.state,\n  request.body.hiking,\n  request.body.range)); /* istanbul ignore next */cov_22s6dd2wjj.s[42]++;\n\n\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_22s6dd2wjj.f[7]++;cov_22s6dd2wjj.s[43]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_22s6dd2wjj.f[8]++;cov_22s6dd2wjj.s[44]++;\n    sendStatus(response, 500, error);\n  });\n\n}","timestamp":"2017-12-08T23:46:20.277Z"}
{"level":"info","message":"adding a GET url and callback","timestamp":"2017-12-08T23:46:20.277Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T23:46:20.278Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[9]++;\n  let id = /* istanbul ignore next */(cov_22s6dd2wjj.s[46]++, request.url.query.id); /* istanbul ignore next */cov_22s6dd2wjj.s[47]++;\n\n  if (id) {/* istanbul ignore next */cov_22s6dd2wjj.b[6][0]++;\n    let requestMountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[48]++, getMountainById(id)); /* istanbul ignore next */cov_22s6dd2wjj.s[49]++;\n    if (requestMountain) {/* istanbul ignore next */cov_22s6dd2wjj.b[7][0]++;cov_22s6dd2wjj.s[50]++;\n      sendJSON(response, 200, requestMountain);\n    } else\n      {/* istanbul ignore next */cov_22s6dd2wjj.b[7][1]++;cov_22s6dd2wjj.s[51]++;sendStatus(response, 404, `no mountain found with the id of ${id}`);}\n  } else\n    {/* istanbul ignore next */cov_22s6dd2wjj.b[6][1]++;cov_22s6dd2wjj.s[52]++;sendJSON(response, 200, storage);}\n}","timestamp":"2017-12-08T23:46:20.278Z"}
{"level":"info","message":"adding a DELETE url and callback","timestamp":"2017-12-08T23:46:20.278Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T23:46:20.278Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[10]++;\n  let id = /* istanbul ignore next */(cov_22s6dd2wjj.s[54]++, request.url.query.id); /* istanbul ignore next */cov_22s6dd2wjj.s[55]++;\n  storage.deleteItem(id).\n  then(filteredMountains => {/* istanbul ignore next */cov_22s6dd2wjj.f[11]++;cov_22s6dd2wjj.s[56]++;\n    sendJSON(response, 200, filteredMountains);\n  }).\n  catch(error => {/* istanbul ignore next */cov_22s6dd2wjj.f[12]++;cov_22s6dd2wjj.s[57]++;\n    sendStatus(response, 404, error);\n  });\n}","timestamp":"2017-12-08T23:46:20.278Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T23:46:20.396Z"}
{"level":"info","message":"Original URL: \"/api/mountains\"","timestamp":"2017-12-08T23:46:20.396Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/mountains\",\"path\":\"/api/mountains\",\"href\":\"/api/mountains\"}","timestamp":"2017-12-08T23:46:20.396Z"}
{"level":"info","message":"found the following handler","timestamp":"2017-12-08T23:46:20.397Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[6]++;cov_22s6dd2wjj.s[26]++;\n  if (!request.body) {/* istanbul ignore next */cov_22s6dd2wjj.b[1][0]++;cov_22s6dd2wjj.s[27]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[1][1]++;}cov_22s6dd2wjj.s[29]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_22s6dd2wjj.b[2][0]++;cov_22s6dd2wjj.s[30]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[2][1]++;}cov_22s6dd2wjj.s[32]++;\n  if (!request.body.state) {/* istanbul ignore next */cov_22s6dd2wjj.b[3][0]++;cov_22s6dd2wjj.s[33]++;\n    sendStatus(response, 400, 'state not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[3][1]++;}cov_22s6dd2wjj.s[35]++;\n  if (!request.body.hiking) {/* istanbul ignore next */cov_22s6dd2wjj.b[4][0]++;cov_22s6dd2wjj.s[36]++;\n    sendStatus(response, 400, 'hiking info not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[4][1]++;}cov_22s6dd2wjj.s[38]++;\n  if (!request.body.range) {/* istanbul ignore next */cov_22s6dd2wjj.b[5][0]++;cov_22s6dd2wjj.s[39]++;\n    sendStatus(response, 400, 'range name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[40]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[5][1]++;}\n  let mountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[41]++, new Mountain(\n  request.body.name,\n  request.body.state,\n  request.body.hiking,\n  request.body.range)); /* istanbul ignore next */cov_22s6dd2wjj.s[42]++;\n\n\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_22s6dd2wjj.f[7]++;cov_22s6dd2wjj.s[43]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_22s6dd2wjj.f[8]++;cov_22s6dd2wjj.s[44]++;\n    sendStatus(response, 500, error);\n  });\n\n}","timestamp":"2017-12-08T23:46:20.397Z"}
{"level":"info","message":"responding with a 200 code and the following json data","timestamp":"2017-12-08T23:46:20.400Z"}
{"id":"fdb481d0-dc71-11e7-afd0-2345683f78c3","name":"Shuksan","state":"Washington","hiking":"Yes","range":"Cascades","level":"info","message":"","timestamp":"2017-12-08T23:46:20.400Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T23:46:20.409Z"}
{"level":"info","message":"Original URL: \"/api/mountains\"","timestamp":"2017-12-08T23:46:20.409Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/mountains\",\"path\":\"/api/mountains\",\"href\":\"/api/mountains\"}","timestamp":"2017-12-08T23:46:20.409Z"}
{"level":"info","message":"found the following handler","timestamp":"2017-12-08T23:46:20.409Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[6]++;cov_22s6dd2wjj.s[26]++;\n  if (!request.body) {/* istanbul ignore next */cov_22s6dd2wjj.b[1][0]++;cov_22s6dd2wjj.s[27]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[1][1]++;}cov_22s6dd2wjj.s[29]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_22s6dd2wjj.b[2][0]++;cov_22s6dd2wjj.s[30]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[2][1]++;}cov_22s6dd2wjj.s[32]++;\n  if (!request.body.state) {/* istanbul ignore next */cov_22s6dd2wjj.b[3][0]++;cov_22s6dd2wjj.s[33]++;\n    sendStatus(response, 400, 'state not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[3][1]++;}cov_22s6dd2wjj.s[35]++;\n  if (!request.body.hiking) {/* istanbul ignore next */cov_22s6dd2wjj.b[4][0]++;cov_22s6dd2wjj.s[36]++;\n    sendStatus(response, 400, 'hiking info not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[4][1]++;}cov_22s6dd2wjj.s[38]++;\n  if (!request.body.range) {/* istanbul ignore next */cov_22s6dd2wjj.b[5][0]++;cov_22s6dd2wjj.s[39]++;\n    sendStatus(response, 400, 'range name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[40]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[5][1]++;}\n  let mountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[41]++, new Mountain(\n  request.body.name,\n  request.body.state,\n  request.body.hiking,\n  request.body.range)); /* istanbul ignore next */cov_22s6dd2wjj.s[42]++;\n\n\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_22s6dd2wjj.f[7]++;cov_22s6dd2wjj.s[43]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_22s6dd2wjj.f[8]++;cov_22s6dd2wjj.s[44]++;\n    sendStatus(response, 500, error);\n  });\n\n}","timestamp":"2017-12-08T23:46:20.409Z"}
{"level":"info","message":"responding with a 200 code and the following json data","timestamp":"2017-12-08T23:46:20.410Z"}
{"id":"fdb65690-dc71-11e7-afd0-2345683f78c3","name":"Shuksan","state":"Washington","hiking":"Yes","range":"Cascades","level":"info","message":"","timestamp":"2017-12-08T23:46:20.410Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T23:46:20.413Z"}
{"level":"info","message":"Original URL: \"/api/mountains?id=$33333\"","timestamp":"2017-12-08T23:46:20.413Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=$33333\",\"query\":{\"id\":\"$33333\"},\"pathname\":\"/api/mountains\",\"path\":\"/api/mountains?id=$33333\",\"href\":\"/api/mountains?id=$33333\"}","timestamp":"2017-12-08T23:46:20.414Z"}
{"level":"info","message":"found the following handler","timestamp":"2017-12-08T23:46:20.414Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[9]++;\n  let id = /* istanbul ignore next */(cov_22s6dd2wjj.s[46]++, request.url.query.id); /* istanbul ignore next */cov_22s6dd2wjj.s[47]++;\n\n  if (id) {/* istanbul ignore next */cov_22s6dd2wjj.b[6][0]++;\n    let requestMountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[48]++, getMountainById(id)); /* istanbul ignore next */cov_22s6dd2wjj.s[49]++;\n    if (requestMountain) {/* istanbul ignore next */cov_22s6dd2wjj.b[7][0]++;cov_22s6dd2wjj.s[50]++;\n      sendJSON(response, 200, requestMountain);\n    } else\n      {/* istanbul ignore next */cov_22s6dd2wjj.b[7][1]++;cov_22s6dd2wjj.s[51]++;sendStatus(response, 404, `no mountain found with the id of ${id}`);}\n  } else\n    {/* istanbul ignore next */cov_22s6dd2wjj.b[6][1]++;cov_22s6dd2wjj.s[52]++;sendJSON(response, 200, storage);}\n}","timestamp":"2017-12-08T23:46:20.414Z"}
{"level":"info","message":"------>REQUEST_ERROR<------","timestamp":"2017-12-08T23:46:20.414Z"}
{"message":"storage.filter is not a function","stack":"TypeError: storage.filter is not a function\n    at getMountainById (/Users/austriker/Documents/code-fellows/cf-401/labs/08-09-vanilla-rest-server/lab-david/route/mountain-route.js:29:18)\n    at Object.<anonymous>.router.get (/Users/austriker/Documents/code-fellows/cf-401/labs/08-09-vanilla-rest-server/lab-david/route/mountain-route.js:87:78)\n    at requestParser.parse.then.request (/Users/austriker/Documents/code-fellows/cf-401/labs/08-09-vanilla-rest-server/lab-david/lib/router.js:50:87)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-08T23:46:20.414Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T23:46:20.414Z"}
{"level":"info","message":"Original URL: \"/api/mountains?e8013d70-dbad-11e7-9cb6-ddffa32a3c9b\"","timestamp":"2017-12-08T23:46:20.415Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?e8013d70-dbad-11e7-9cb6-ddffa32a3c9b\",\"query\":{\"e8013d70-dbad-11e7-9cb6-ddffa32a3c9b\":\"\"},\"pathname\":\"/api/mountains\",\"path\":\"/api/mountains?e8013d70-dbad-11e7-9cb6-ddffa32a3c9b\",\"href\":\"/api/mountains?e8013d70-dbad-11e7-9cb6-ddffa32a3c9b\"}","timestamp":"2017-12-08T23:46:20.415Z"}
{"level":"info","message":"found the following handler","timestamp":"2017-12-08T23:46:20.415Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[9]++;\n  let id = /* istanbul ignore next */(cov_22s6dd2wjj.s[46]++, request.url.query.id); /* istanbul ignore next */cov_22s6dd2wjj.s[47]++;\n\n  if (id) {/* istanbul ignore next */cov_22s6dd2wjj.b[6][0]++;\n    let requestMountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[48]++, getMountainById(id)); /* istanbul ignore next */cov_22s6dd2wjj.s[49]++;\n    if (requestMountain) {/* istanbul ignore next */cov_22s6dd2wjj.b[7][0]++;cov_22s6dd2wjj.s[50]++;\n      sendJSON(response, 200, requestMountain);\n    } else\n      {/* istanbul ignore next */cov_22s6dd2wjj.b[7][1]++;cov_22s6dd2wjj.s[51]++;sendStatus(response, 404, `no mountain found with the id of ${id}`);}\n  } else\n    {/* istanbul ignore next */cov_22s6dd2wjj.b[6][1]++;cov_22s6dd2wjj.s[52]++;sendJSON(response, 200, storage);}\n}","timestamp":"2017-12-08T23:46:20.415Z"}
{"level":"info","message":"responding with a 200 code and the following json data","timestamp":"2017-12-08T23:46:20.415Z"}
{"level":"info","message":"","timestamp":"2017-12-08T23:46:20.415Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T23:46:20.419Z"}
{"level":"info","message":"Original URL: \"/api/mountains\"","timestamp":"2017-12-08T23:46:20.419Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/mountains\",\"path\":\"/api/mountains\",\"href\":\"/api/mountains\"}","timestamp":"2017-12-08T23:46:20.419Z"}
{"level":"info","message":"found the following handler","timestamp":"2017-12-08T23:46:20.419Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[6]++;cov_22s6dd2wjj.s[26]++;\n  if (!request.body) {/* istanbul ignore next */cov_22s6dd2wjj.b[1][0]++;cov_22s6dd2wjj.s[27]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[1][1]++;}cov_22s6dd2wjj.s[29]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_22s6dd2wjj.b[2][0]++;cov_22s6dd2wjj.s[30]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[2][1]++;}cov_22s6dd2wjj.s[32]++;\n  if (!request.body.state) {/* istanbul ignore next */cov_22s6dd2wjj.b[3][0]++;cov_22s6dd2wjj.s[33]++;\n    sendStatus(response, 400, 'state not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[3][1]++;}cov_22s6dd2wjj.s[35]++;\n  if (!request.body.hiking) {/* istanbul ignore next */cov_22s6dd2wjj.b[4][0]++;cov_22s6dd2wjj.s[36]++;\n    sendStatus(response, 400, 'hiking info not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[4][1]++;}cov_22s6dd2wjj.s[38]++;\n  if (!request.body.range) {/* istanbul ignore next */cov_22s6dd2wjj.b[5][0]++;cov_22s6dd2wjj.s[39]++;\n    sendStatus(response, 400, 'range name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[40]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[5][1]++;}\n  let mountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[41]++, new Mountain(\n  request.body.name,\n  request.body.state,\n  request.body.hiking,\n  request.body.range)); /* istanbul ignore next */cov_22s6dd2wjj.s[42]++;\n\n\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_22s6dd2wjj.f[7]++;cov_22s6dd2wjj.s[43]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_22s6dd2wjj.f[8]++;cov_22s6dd2wjj.s[44]++;\n    sendStatus(response, 500, error);\n  });\n\n}","timestamp":"2017-12-08T23:46:20.419Z"}
{"level":"info","message":"Responding with a 400 code due to name not found","timestamp":"2017-12-08T23:46:20.419Z"}
{"level":"info","message":"adding a POST url and callback","timestamp":"2017-12-08T23:46:57.964Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T23:46:57.965Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[6]++;cov_22s6dd2wjj.s[26]++;\n  if (!request.body) {/* istanbul ignore next */cov_22s6dd2wjj.b[1][0]++;cov_22s6dd2wjj.s[27]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[1][1]++;}cov_22s6dd2wjj.s[29]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_22s6dd2wjj.b[2][0]++;cov_22s6dd2wjj.s[30]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[2][1]++;}cov_22s6dd2wjj.s[32]++;\n  if (!request.body.state) {/* istanbul ignore next */cov_22s6dd2wjj.b[3][0]++;cov_22s6dd2wjj.s[33]++;\n    sendStatus(response, 400, 'state not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[3][1]++;}cov_22s6dd2wjj.s[35]++;\n  if (!request.body.hiking) {/* istanbul ignore next */cov_22s6dd2wjj.b[4][0]++;cov_22s6dd2wjj.s[36]++;\n    sendStatus(response, 400, 'hiking info not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[4][1]++;}cov_22s6dd2wjj.s[38]++;\n  if (!request.body.range) {/* istanbul ignore next */cov_22s6dd2wjj.b[5][0]++;cov_22s6dd2wjj.s[39]++;\n    sendStatus(response, 400, 'range name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[40]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[5][1]++;}\n  let mountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[41]++, new Mountain(\n  request.body.name,\n  request.body.state,\n  request.body.hiking,\n  request.body.range)); /* istanbul ignore next */cov_22s6dd2wjj.s[42]++;\n\n\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_22s6dd2wjj.f[7]++;cov_22s6dd2wjj.s[43]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_22s6dd2wjj.f[8]++;cov_22s6dd2wjj.s[44]++;\n    sendStatus(response, 500, error);\n  });\n\n}","timestamp":"2017-12-08T23:46:57.965Z"}
{"level":"info","message":"adding a GET url and callback","timestamp":"2017-12-08T23:46:57.965Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T23:46:57.965Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[9]++;\n  let id = /* istanbul ignore next */(cov_22s6dd2wjj.s[46]++, request.url.query.id); /* istanbul ignore next */cov_22s6dd2wjj.s[47]++;\n\n  if (id) {/* istanbul ignore next */cov_22s6dd2wjj.b[6][0]++;\n    let requestMountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[48]++, getMountainById(id)); /* istanbul ignore next */cov_22s6dd2wjj.s[49]++;\n    if (requestMountain) {/* istanbul ignore next */cov_22s6dd2wjj.b[7][0]++;cov_22s6dd2wjj.s[50]++;\n      sendJSON(response, 200, requestMountain);\n    } else\n      {/* istanbul ignore next */cov_22s6dd2wjj.b[7][1]++;cov_22s6dd2wjj.s[51]++;sendStatus(response, 404, `no mountain found with the id of ${id}`);}\n  } else\n    {/* istanbul ignore next */cov_22s6dd2wjj.b[6][1]++;cov_22s6dd2wjj.s[52]++;sendJSON(response, 200, storage);}\n}","timestamp":"2017-12-08T23:46:57.965Z"}
{"level":"info","message":"adding a DELETE url and callback","timestamp":"2017-12-08T23:46:57.965Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T23:46:57.965Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[10]++;\n  let id = /* istanbul ignore next */(cov_22s6dd2wjj.s[54]++, request.url.query.id); /* istanbul ignore next */cov_22s6dd2wjj.s[55]++;\n  storage.deleteItem(id).\n  then(filteredMountains => {/* istanbul ignore next */cov_22s6dd2wjj.f[11]++;cov_22s6dd2wjj.s[56]++;\n    sendJSON(response, 200, filteredMountains);\n  }).\n  catch(error => {/* istanbul ignore next */cov_22s6dd2wjj.f[12]++;cov_22s6dd2wjj.s[57]++;\n    sendStatus(response, 404, error);\n  });\n}","timestamp":"2017-12-08T23:46:57.965Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T23:46:58.084Z"}
{"level":"info","message":"Original URL: \"/api/mountains\"","timestamp":"2017-12-08T23:46:58.085Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/mountains\",\"path\":\"/api/mountains\",\"href\":\"/api/mountains\"}","timestamp":"2017-12-08T23:46:58.085Z"}
{"level":"info","message":"found the following handler","timestamp":"2017-12-08T23:46:58.086Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[6]++;cov_22s6dd2wjj.s[26]++;\n  if (!request.body) {/* istanbul ignore next */cov_22s6dd2wjj.b[1][0]++;cov_22s6dd2wjj.s[27]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[1][1]++;}cov_22s6dd2wjj.s[29]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_22s6dd2wjj.b[2][0]++;cov_22s6dd2wjj.s[30]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[2][1]++;}cov_22s6dd2wjj.s[32]++;\n  if (!request.body.state) {/* istanbul ignore next */cov_22s6dd2wjj.b[3][0]++;cov_22s6dd2wjj.s[33]++;\n    sendStatus(response, 400, 'state not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[3][1]++;}cov_22s6dd2wjj.s[35]++;\n  if (!request.body.hiking) {/* istanbul ignore next */cov_22s6dd2wjj.b[4][0]++;cov_22s6dd2wjj.s[36]++;\n    sendStatus(response, 400, 'hiking info not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[4][1]++;}cov_22s6dd2wjj.s[38]++;\n  if (!request.body.range) {/* istanbul ignore next */cov_22s6dd2wjj.b[5][0]++;cov_22s6dd2wjj.s[39]++;\n    sendStatus(response, 400, 'range name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[40]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[5][1]++;}\n  let mountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[41]++, new Mountain(\n  request.body.name,\n  request.body.state,\n  request.body.hiking,\n  request.body.range)); /* istanbul ignore next */cov_22s6dd2wjj.s[42]++;\n\n\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_22s6dd2wjj.f[7]++;cov_22s6dd2wjj.s[43]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_22s6dd2wjj.f[8]++;cov_22s6dd2wjj.s[44]++;\n    sendStatus(response, 500, error);\n  });\n\n}","timestamp":"2017-12-08T23:46:58.086Z"}
{"level":"info","message":"responding with a 200 code and the following json data","timestamp":"2017-12-08T23:46:58.089Z"}
{"id":"142b6460-dc72-11e7-a3d6-abb97bbb267d","name":"Shuksan","state":"Washington","hiking":"Yes","range":"Cascades","level":"info","message":"","timestamp":"2017-12-08T23:46:58.089Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T23:46:58.097Z"}
{"level":"info","message":"Original URL: \"/api/mountains\"","timestamp":"2017-12-08T23:46:58.097Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/mountains\",\"path\":\"/api/mountains\",\"href\":\"/api/mountains\"}","timestamp":"2017-12-08T23:46:58.097Z"}
{"level":"info","message":"found the following handler","timestamp":"2017-12-08T23:46:58.098Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[6]++;cov_22s6dd2wjj.s[26]++;\n  if (!request.body) {/* istanbul ignore next */cov_22s6dd2wjj.b[1][0]++;cov_22s6dd2wjj.s[27]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[1][1]++;}cov_22s6dd2wjj.s[29]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_22s6dd2wjj.b[2][0]++;cov_22s6dd2wjj.s[30]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[2][1]++;}cov_22s6dd2wjj.s[32]++;\n  if (!request.body.state) {/* istanbul ignore next */cov_22s6dd2wjj.b[3][0]++;cov_22s6dd2wjj.s[33]++;\n    sendStatus(response, 400, 'state not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[3][1]++;}cov_22s6dd2wjj.s[35]++;\n  if (!request.body.hiking) {/* istanbul ignore next */cov_22s6dd2wjj.b[4][0]++;cov_22s6dd2wjj.s[36]++;\n    sendStatus(response, 400, 'hiking info not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[4][1]++;}cov_22s6dd2wjj.s[38]++;\n  if (!request.body.range) {/* istanbul ignore next */cov_22s6dd2wjj.b[5][0]++;cov_22s6dd2wjj.s[39]++;\n    sendStatus(response, 400, 'range name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[40]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[5][1]++;}\n  let mountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[41]++, new Mountain(\n  request.body.name,\n  request.body.state,\n  request.body.hiking,\n  request.body.range)); /* istanbul ignore next */cov_22s6dd2wjj.s[42]++;\n\n\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_22s6dd2wjj.f[7]++;cov_22s6dd2wjj.s[43]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_22s6dd2wjj.f[8]++;cov_22s6dd2wjj.s[44]++;\n    sendStatus(response, 500, error);\n  });\n\n}","timestamp":"2017-12-08T23:46:58.098Z"}
{"level":"info","message":"responding with a 200 code and the following json data","timestamp":"2017-12-08T23:46:58.099Z"}
{"id":"142d3920-dc72-11e7-a3d6-abb97bbb267d","name":"Shuksan","state":"Washington","hiking":"Yes","range":"Cascades","level":"info","message":"","timestamp":"2017-12-08T23:46:58.099Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T23:46:58.101Z"}
{"level":"info","message":"Original URL: \"/api/mountains?id=$33333\"","timestamp":"2017-12-08T23:46:58.102Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=$33333\",\"query\":{\"id\":\"$33333\"},\"pathname\":\"/api/mountains\",\"path\":\"/api/mountains?id=$33333\",\"href\":\"/api/mountains?id=$33333\"}","timestamp":"2017-12-08T23:46:58.102Z"}
{"level":"info","message":"found the following handler","timestamp":"2017-12-08T23:46:58.102Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[9]++;\n  let id = /* istanbul ignore next */(cov_22s6dd2wjj.s[46]++, request.url.query.id); /* istanbul ignore next */cov_22s6dd2wjj.s[47]++;\n\n  if (id) {/* istanbul ignore next */cov_22s6dd2wjj.b[6][0]++;\n    let requestMountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[48]++, getMountainById(id)); /* istanbul ignore next */cov_22s6dd2wjj.s[49]++;\n    if (requestMountain) {/* istanbul ignore next */cov_22s6dd2wjj.b[7][0]++;cov_22s6dd2wjj.s[50]++;\n      sendJSON(response, 200, requestMountain);\n    } else\n      {/* istanbul ignore next */cov_22s6dd2wjj.b[7][1]++;cov_22s6dd2wjj.s[51]++;sendStatus(response, 404, `no mountain found with the id of ${id}`);}\n  } else\n    {/* istanbul ignore next */cov_22s6dd2wjj.b[6][1]++;cov_22s6dd2wjj.s[52]++;sendJSON(response, 200, storage);}\n}","timestamp":"2017-12-08T23:46:58.102Z"}
{"level":"info","message":"------>REQUEST_ERROR<------","timestamp":"2017-12-08T23:46:58.103Z"}
{"message":"storage.filter is not a function","stack":"TypeError: storage.filter is not a function\n    at getMountainById (/Users/austriker/Documents/code-fellows/cf-401/labs/08-09-vanilla-rest-server/lab-david/route/mountain-route.js:29:18)\n    at Object.<anonymous>.router.get (/Users/austriker/Documents/code-fellows/cf-401/labs/08-09-vanilla-rest-server/lab-david/route/mountain-route.js:87:78)\n    at requestParser.parse.then.request (/Users/austriker/Documents/code-fellows/cf-401/labs/08-09-vanilla-rest-server/lab-david/lib/router.js:50:87)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-08T23:46:58.103Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T23:46:58.103Z"}
{"level":"info","message":"Original URL: \"/api/mountains?e8013d70-dbad-11e7-9cb6-ddffa32a3c9b\"","timestamp":"2017-12-08T23:46:58.103Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?e8013d70-dbad-11e7-9cb6-ddffa32a3c9b\",\"query\":{\"e8013d70-dbad-11e7-9cb6-ddffa32a3c9b\":\"\"},\"pathname\":\"/api/mountains\",\"path\":\"/api/mountains?e8013d70-dbad-11e7-9cb6-ddffa32a3c9b\",\"href\":\"/api/mountains?e8013d70-dbad-11e7-9cb6-ddffa32a3c9b\"}","timestamp":"2017-12-08T23:46:58.103Z"}
{"level":"info","message":"found the following handler","timestamp":"2017-12-08T23:46:58.103Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[9]++;\n  let id = /* istanbul ignore next */(cov_22s6dd2wjj.s[46]++, request.url.query.id); /* istanbul ignore next */cov_22s6dd2wjj.s[47]++;\n\n  if (id) {/* istanbul ignore next */cov_22s6dd2wjj.b[6][0]++;\n    let requestMountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[48]++, getMountainById(id)); /* istanbul ignore next */cov_22s6dd2wjj.s[49]++;\n    if (requestMountain) {/* istanbul ignore next */cov_22s6dd2wjj.b[7][0]++;cov_22s6dd2wjj.s[50]++;\n      sendJSON(response, 200, requestMountain);\n    } else\n      {/* istanbul ignore next */cov_22s6dd2wjj.b[7][1]++;cov_22s6dd2wjj.s[51]++;sendStatus(response, 404, `no mountain found with the id of ${id}`);}\n  } else\n    {/* istanbul ignore next */cov_22s6dd2wjj.b[6][1]++;cov_22s6dd2wjj.s[52]++;sendJSON(response, 200, storage);}\n}","timestamp":"2017-12-08T23:46:58.103Z"}
{"level":"info","message":"responding with a 200 code and the following json data","timestamp":"2017-12-08T23:46:58.103Z"}
{"level":"info","message":"","timestamp":"2017-12-08T23:46:58.103Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T23:46:58.108Z"}
{"level":"info","message":"Original URL: \"/api/mountains\"","timestamp":"2017-12-08T23:46:58.108Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/mountains\",\"path\":\"/api/mountains\",\"href\":\"/api/mountains\"}","timestamp":"2017-12-08T23:46:58.108Z"}
{"level":"info","message":"found the following handler","timestamp":"2017-12-08T23:46:58.108Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[6]++;cov_22s6dd2wjj.s[26]++;\n  if (!request.body) {/* istanbul ignore next */cov_22s6dd2wjj.b[1][0]++;cov_22s6dd2wjj.s[27]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[1][1]++;}cov_22s6dd2wjj.s[29]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_22s6dd2wjj.b[2][0]++;cov_22s6dd2wjj.s[30]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[2][1]++;}cov_22s6dd2wjj.s[32]++;\n  if (!request.body.state) {/* istanbul ignore next */cov_22s6dd2wjj.b[3][0]++;cov_22s6dd2wjj.s[33]++;\n    sendStatus(response, 400, 'state not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[3][1]++;}cov_22s6dd2wjj.s[35]++;\n  if (!request.body.hiking) {/* istanbul ignore next */cov_22s6dd2wjj.b[4][0]++;cov_22s6dd2wjj.s[36]++;\n    sendStatus(response, 400, 'hiking info not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[4][1]++;}cov_22s6dd2wjj.s[38]++;\n  if (!request.body.range) {/* istanbul ignore next */cov_22s6dd2wjj.b[5][0]++;cov_22s6dd2wjj.s[39]++;\n    sendStatus(response, 400, 'range name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[40]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[5][1]++;}\n  let mountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[41]++, new Mountain(\n  request.body.name,\n  request.body.state,\n  request.body.hiking,\n  request.body.range)); /* istanbul ignore next */cov_22s6dd2wjj.s[42]++;\n\n\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_22s6dd2wjj.f[7]++;cov_22s6dd2wjj.s[43]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_22s6dd2wjj.f[8]++;cov_22s6dd2wjj.s[44]++;\n    sendStatus(response, 500, error);\n  });\n\n}","timestamp":"2017-12-08T23:46:58.108Z"}
{"level":"info","message":"Responding with a 400 code due to name not found","timestamp":"2017-12-08T23:46:58.108Z"}
{"level":"info","message":"adding a POST url and callback","timestamp":"2017-12-08T23:48:02.047Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T23:48:02.047Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[6]++;cov_22s6dd2wjj.s[26]++;\n  if (!request.body) {/* istanbul ignore next */cov_22s6dd2wjj.b[1][0]++;cov_22s6dd2wjj.s[27]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[1][1]++;}cov_22s6dd2wjj.s[29]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_22s6dd2wjj.b[2][0]++;cov_22s6dd2wjj.s[30]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[2][1]++;}cov_22s6dd2wjj.s[32]++;\n  if (!request.body.state) {/* istanbul ignore next */cov_22s6dd2wjj.b[3][0]++;cov_22s6dd2wjj.s[33]++;\n    sendStatus(response, 400, 'state not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[3][1]++;}cov_22s6dd2wjj.s[35]++;\n  if (!request.body.hiking) {/* istanbul ignore next */cov_22s6dd2wjj.b[4][0]++;cov_22s6dd2wjj.s[36]++;\n    sendStatus(response, 400, 'hiking info not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[4][1]++;}cov_22s6dd2wjj.s[38]++;\n  if (!request.body.range) {/* istanbul ignore next */cov_22s6dd2wjj.b[5][0]++;cov_22s6dd2wjj.s[39]++;\n    sendStatus(response, 400, 'range name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[40]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[5][1]++;}\n  let mountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[41]++, new Mountain(\n  request.body.name,\n  request.body.state,\n  request.body.hiking,\n  request.body.range)); /* istanbul ignore next */cov_22s6dd2wjj.s[42]++;\n\n\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_22s6dd2wjj.f[7]++;cov_22s6dd2wjj.s[43]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_22s6dd2wjj.f[8]++;cov_22s6dd2wjj.s[44]++;\n    sendStatus(response, 500, error);\n  });\n\n}","timestamp":"2017-12-08T23:48:02.047Z"}
{"level":"info","message":"adding a GET url and callback","timestamp":"2017-12-08T23:48:02.047Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T23:48:02.047Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[9]++;\n  let id = /* istanbul ignore next */(cov_22s6dd2wjj.s[46]++, request.url.query.id); /* istanbul ignore next */cov_22s6dd2wjj.s[47]++;\n\n  if (id) {/* istanbul ignore next */cov_22s6dd2wjj.b[6][0]++;\n    let requestMountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[48]++, getMountainById(id)); /* istanbul ignore next */cov_22s6dd2wjj.s[49]++;\n    if (requestMountain) {/* istanbul ignore next */cov_22s6dd2wjj.b[7][0]++;cov_22s6dd2wjj.s[50]++;\n      sendJSON(response, 200, requestMountain);\n    } else\n      {/* istanbul ignore next */cov_22s6dd2wjj.b[7][1]++;cov_22s6dd2wjj.s[51]++;sendStatus(response, 404, `no mountain found with the id of ${id}`);}\n  } else\n    {/* istanbul ignore next */cov_22s6dd2wjj.b[6][1]++;cov_22s6dd2wjj.s[52]++;sendJSON(response, 200, storage);}\n}","timestamp":"2017-12-08T23:48:02.047Z"}
{"level":"info","message":"adding a DELETE url and callback","timestamp":"2017-12-08T23:48:02.047Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-08T23:48:02.047Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[10]++;\n  let id = /* istanbul ignore next */(cov_22s6dd2wjj.s[54]++, request.url.query.id); /* istanbul ignore next */cov_22s6dd2wjj.s[55]++;\n  storage.deleteItem(id).\n  then(filteredMountains => {/* istanbul ignore next */cov_22s6dd2wjj.f[11]++;cov_22s6dd2wjj.s[56]++;\n    sendJSON(response, 200, filteredMountains);\n  }).\n  catch(error => {/* istanbul ignore next */cov_22s6dd2wjj.f[12]++;cov_22s6dd2wjj.s[57]++;\n    sendStatus(response, 404, error);\n  });\n}","timestamp":"2017-12-08T23:48:02.047Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T23:48:02.172Z"}
{"level":"info","message":"Original URL: \"/api/mountains\"","timestamp":"2017-12-08T23:48:02.172Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/mountains\",\"path\":\"/api/mountains\",\"href\":\"/api/mountains\"}","timestamp":"2017-12-08T23:48:02.172Z"}
{"level":"info","message":"found the following handler","timestamp":"2017-12-08T23:48:02.173Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[6]++;cov_22s6dd2wjj.s[26]++;\n  if (!request.body) {/* istanbul ignore next */cov_22s6dd2wjj.b[1][0]++;cov_22s6dd2wjj.s[27]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[1][1]++;}cov_22s6dd2wjj.s[29]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_22s6dd2wjj.b[2][0]++;cov_22s6dd2wjj.s[30]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[2][1]++;}cov_22s6dd2wjj.s[32]++;\n  if (!request.body.state) {/* istanbul ignore next */cov_22s6dd2wjj.b[3][0]++;cov_22s6dd2wjj.s[33]++;\n    sendStatus(response, 400, 'state not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[3][1]++;}cov_22s6dd2wjj.s[35]++;\n  if (!request.body.hiking) {/* istanbul ignore next */cov_22s6dd2wjj.b[4][0]++;cov_22s6dd2wjj.s[36]++;\n    sendStatus(response, 400, 'hiking info not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[4][1]++;}cov_22s6dd2wjj.s[38]++;\n  if (!request.body.range) {/* istanbul ignore next */cov_22s6dd2wjj.b[5][0]++;cov_22s6dd2wjj.s[39]++;\n    sendStatus(response, 400, 'range name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[40]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[5][1]++;}\n  let mountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[41]++, new Mountain(\n  request.body.name,\n  request.body.state,\n  request.body.hiking,\n  request.body.range)); /* istanbul ignore next */cov_22s6dd2wjj.s[42]++;\n\n\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_22s6dd2wjj.f[7]++;cov_22s6dd2wjj.s[43]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_22s6dd2wjj.f[8]++;cov_22s6dd2wjj.s[44]++;\n    sendStatus(response, 500, error);\n  });\n\n}","timestamp":"2017-12-08T23:48:02.173Z"}
{"level":"info","message":"responding with a 200 code and the following json data","timestamp":"2017-12-08T23:48:02.177Z"}
{"id":"3a5e4ad0-dc72-11e7-a730-d3886b3b69b7","name":"Shuksan","state":"Washington","hiking":"Yes","range":"Cascades","level":"info","message":"","timestamp":"2017-12-08T23:48:02.177Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T23:48:02.186Z"}
{"level":"info","message":"Original URL: \"/api/mountains\"","timestamp":"2017-12-08T23:48:02.186Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/mountains\",\"path\":\"/api/mountains\",\"href\":\"/api/mountains\"}","timestamp":"2017-12-08T23:48:02.186Z"}
{"level":"info","message":"found the following handler","timestamp":"2017-12-08T23:48:02.187Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[6]++;cov_22s6dd2wjj.s[26]++;\n  if (!request.body) {/* istanbul ignore next */cov_22s6dd2wjj.b[1][0]++;cov_22s6dd2wjj.s[27]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[1][1]++;}cov_22s6dd2wjj.s[29]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_22s6dd2wjj.b[2][0]++;cov_22s6dd2wjj.s[30]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[2][1]++;}cov_22s6dd2wjj.s[32]++;\n  if (!request.body.state) {/* istanbul ignore next */cov_22s6dd2wjj.b[3][0]++;cov_22s6dd2wjj.s[33]++;\n    sendStatus(response, 400, 'state not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[3][1]++;}cov_22s6dd2wjj.s[35]++;\n  if (!request.body.hiking) {/* istanbul ignore next */cov_22s6dd2wjj.b[4][0]++;cov_22s6dd2wjj.s[36]++;\n    sendStatus(response, 400, 'hiking info not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[4][1]++;}cov_22s6dd2wjj.s[38]++;\n  if (!request.body.range) {/* istanbul ignore next */cov_22s6dd2wjj.b[5][0]++;cov_22s6dd2wjj.s[39]++;\n    sendStatus(response, 400, 'range name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[40]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[5][1]++;}\n  let mountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[41]++, new Mountain(\n  request.body.name,\n  request.body.state,\n  request.body.hiking,\n  request.body.range)); /* istanbul ignore next */cov_22s6dd2wjj.s[42]++;\n\n\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_22s6dd2wjj.f[7]++;cov_22s6dd2wjj.s[43]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_22s6dd2wjj.f[8]++;cov_22s6dd2wjj.s[44]++;\n    sendStatus(response, 500, error);\n  });\n\n}","timestamp":"2017-12-08T23:48:02.187Z"}
{"level":"info","message":"responding with a 200 code and the following json data","timestamp":"2017-12-08T23:48:02.187Z"}
{"id":"3a606db0-dc72-11e7-a730-d3886b3b69b7","name":"Shuksan","state":"Washington","hiking":"Yes","range":"Cascades","level":"info","message":"","timestamp":"2017-12-08T23:48:02.188Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T23:48:02.196Z"}
{"level":"info","message":"Original URL: \"/api/mountains?id=$33333\"","timestamp":"2017-12-08T23:48:02.196Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=$33333\",\"query\":{\"id\":\"$33333\"},\"pathname\":\"/api/mountains\",\"path\":\"/api/mountains?id=$33333\",\"href\":\"/api/mountains?id=$33333\"}","timestamp":"2017-12-08T23:48:02.197Z"}
{"level":"info","message":"found the following handler","timestamp":"2017-12-08T23:48:02.197Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[9]++;\n  let id = /* istanbul ignore next */(cov_22s6dd2wjj.s[46]++, request.url.query.id); /* istanbul ignore next */cov_22s6dd2wjj.s[47]++;\n\n  if (id) {/* istanbul ignore next */cov_22s6dd2wjj.b[6][0]++;\n    let requestMountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[48]++, getMountainById(id)); /* istanbul ignore next */cov_22s6dd2wjj.s[49]++;\n    if (requestMountain) {/* istanbul ignore next */cov_22s6dd2wjj.b[7][0]++;cov_22s6dd2wjj.s[50]++;\n      sendJSON(response, 200, requestMountain);\n    } else\n      {/* istanbul ignore next */cov_22s6dd2wjj.b[7][1]++;cov_22s6dd2wjj.s[51]++;sendStatus(response, 404, `no mountain found with the id of ${id}`);}\n  } else\n    {/* istanbul ignore next */cov_22s6dd2wjj.b[6][1]++;cov_22s6dd2wjj.s[52]++;sendJSON(response, 200, storage);}\n}","timestamp":"2017-12-08T23:48:02.197Z"}
{"level":"info","message":"------>REQUEST_ERROR<------","timestamp":"2017-12-08T23:48:02.198Z"}
{"message":"storage.filter is not a function","stack":"TypeError: storage.filter is not a function\n    at getMountainById (/Users/austriker/Documents/code-fellows/cf-401/labs/08-09-vanilla-rest-server/lab-david/route/mountain-route.js:29:18)\n    at Object.<anonymous>.router.get (/Users/austriker/Documents/code-fellows/cf-401/labs/08-09-vanilla-rest-server/lab-david/route/mountain-route.js:87:78)\n    at requestParser.parse.then.request (/Users/austriker/Documents/code-fellows/cf-401/labs/08-09-vanilla-rest-server/lab-david/lib/router.js:50:87)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-08T23:48:02.198Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T23:48:02.204Z"}
{"level":"info","message":"Original URL: \"/api/mountains?e8013d70-dbad-11e7-9cb6-ddffa32a3c9b\"","timestamp":"2017-12-08T23:48:02.204Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?e8013d70-dbad-11e7-9cb6-ddffa32a3c9b\",\"query\":{\"e8013d70-dbad-11e7-9cb6-ddffa32a3c9b\":\"\"},\"pathname\":\"/api/mountains\",\"path\":\"/api/mountains?e8013d70-dbad-11e7-9cb6-ddffa32a3c9b\",\"href\":\"/api/mountains?e8013d70-dbad-11e7-9cb6-ddffa32a3c9b\"}","timestamp":"2017-12-08T23:48:02.204Z"}
{"level":"info","message":"found the following handler","timestamp":"2017-12-08T23:48:02.204Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[9]++;\n  let id = /* istanbul ignore next */(cov_22s6dd2wjj.s[46]++, request.url.query.id); /* istanbul ignore next */cov_22s6dd2wjj.s[47]++;\n\n  if (id) {/* istanbul ignore next */cov_22s6dd2wjj.b[6][0]++;\n    let requestMountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[48]++, getMountainById(id)); /* istanbul ignore next */cov_22s6dd2wjj.s[49]++;\n    if (requestMountain) {/* istanbul ignore next */cov_22s6dd2wjj.b[7][0]++;cov_22s6dd2wjj.s[50]++;\n      sendJSON(response, 200, requestMountain);\n    } else\n      {/* istanbul ignore next */cov_22s6dd2wjj.b[7][1]++;cov_22s6dd2wjj.s[51]++;sendStatus(response, 404, `no mountain found with the id of ${id}`);}\n  } else\n    {/* istanbul ignore next */cov_22s6dd2wjj.b[6][1]++;cov_22s6dd2wjj.s[52]++;sendJSON(response, 200, storage);}\n}","timestamp":"2017-12-08T23:48:02.204Z"}
{"level":"info","message":"responding with a 200 code and the following json data","timestamp":"2017-12-08T23:48:02.205Z"}
{"level":"info","message":"","timestamp":"2017-12-08T23:48:02.205Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-08T23:48:02.206Z"}
{"level":"info","message":"Original URL: \"/api/mountains\"","timestamp":"2017-12-08T23:48:02.206Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/mountains\",\"path\":\"/api/mountains\",\"href\":\"/api/mountains\"}","timestamp":"2017-12-08T23:48:02.206Z"}
{"level":"info","message":"found the following handler","timestamp":"2017-12-08T23:48:02.206Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[6]++;cov_22s6dd2wjj.s[26]++;\n  if (!request.body) {/* istanbul ignore next */cov_22s6dd2wjj.b[1][0]++;cov_22s6dd2wjj.s[27]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[1][1]++;}cov_22s6dd2wjj.s[29]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_22s6dd2wjj.b[2][0]++;cov_22s6dd2wjj.s[30]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[2][1]++;}cov_22s6dd2wjj.s[32]++;\n  if (!request.body.state) {/* istanbul ignore next */cov_22s6dd2wjj.b[3][0]++;cov_22s6dd2wjj.s[33]++;\n    sendStatus(response, 400, 'state not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[3][1]++;}cov_22s6dd2wjj.s[35]++;\n  if (!request.body.hiking) {/* istanbul ignore next */cov_22s6dd2wjj.b[4][0]++;cov_22s6dd2wjj.s[36]++;\n    sendStatus(response, 400, 'hiking info not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[4][1]++;}cov_22s6dd2wjj.s[38]++;\n  if (!request.body.range) {/* istanbul ignore next */cov_22s6dd2wjj.b[5][0]++;cov_22s6dd2wjj.s[39]++;\n    sendStatus(response, 400, 'range name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[40]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[5][1]++;}\n  let mountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[41]++, new Mountain(\n  request.body.name,\n  request.body.state,\n  request.body.hiking,\n  request.body.range)); /* istanbul ignore next */cov_22s6dd2wjj.s[42]++;\n\n\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_22s6dd2wjj.f[7]++;cov_22s6dd2wjj.s[43]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_22s6dd2wjj.f[8]++;cov_22s6dd2wjj.s[44]++;\n    sendStatus(response, 500, error);\n  });\n\n}","timestamp":"2017-12-08T23:48:02.206Z"}
{"level":"info","message":"Responding with a 400 code due to name not found","timestamp":"2017-12-08T23:48:02.206Z"}
{"level":"info","message":"adding a POST url and callback","timestamp":"2017-12-09T00:00:20.727Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-09T00:00:20.727Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[6]++;cov_22s6dd2wjj.s[26]++;\n  if (!request.body) {/* istanbul ignore next */cov_22s6dd2wjj.b[1][0]++;cov_22s6dd2wjj.s[27]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[1][1]++;}cov_22s6dd2wjj.s[29]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_22s6dd2wjj.b[2][0]++;cov_22s6dd2wjj.s[30]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[2][1]++;}cov_22s6dd2wjj.s[32]++;\n  if (!request.body.state) {/* istanbul ignore next */cov_22s6dd2wjj.b[3][0]++;cov_22s6dd2wjj.s[33]++;\n    sendStatus(response, 400, 'state not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[3][1]++;}cov_22s6dd2wjj.s[35]++;\n  if (!request.body.hiking) {/* istanbul ignore next */cov_22s6dd2wjj.b[4][0]++;cov_22s6dd2wjj.s[36]++;\n    sendStatus(response, 400, 'hiking info not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[4][1]++;}cov_22s6dd2wjj.s[38]++;\n  if (!request.body.range) {/* istanbul ignore next */cov_22s6dd2wjj.b[5][0]++;cov_22s6dd2wjj.s[39]++;\n    sendStatus(response, 400, 'range name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[40]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[5][1]++;}\n  let mountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[41]++, new Mountain(\n  request.body.name,\n  request.body.state,\n  request.body.hiking,\n  request.body.range)); /* istanbul ignore next */cov_22s6dd2wjj.s[42]++;\n\n\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_22s6dd2wjj.f[7]++;cov_22s6dd2wjj.s[43]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_22s6dd2wjj.f[8]++;cov_22s6dd2wjj.s[44]++;\n    sendStatus(response, 500, error);\n  });\n\n}","timestamp":"2017-12-09T00:00:20.728Z"}
{"level":"info","message":"adding a GET url and callback","timestamp":"2017-12-09T00:00:20.728Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-09T00:00:20.728Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[9]++;\n  let id = /* istanbul ignore next */(cov_22s6dd2wjj.s[46]++, request.url.query.id); /* istanbul ignore next */cov_22s6dd2wjj.s[47]++;\n\n  if (id) {/* istanbul ignore next */cov_22s6dd2wjj.b[6][0]++;\n    let requestMountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[48]++, getMountainById(id)); /* istanbul ignore next */cov_22s6dd2wjj.s[49]++;\n    if (requestMountain) {/* istanbul ignore next */cov_22s6dd2wjj.b[7][0]++;cov_22s6dd2wjj.s[50]++;\n      sendJSON(response, 200, requestMountain);\n    } else\n      {/* istanbul ignore next */cov_22s6dd2wjj.b[7][1]++;cov_22s6dd2wjj.s[51]++;sendStatus(response, 404, `no mountain found with the id of ${id}`);}\n  } else\n    {/* istanbul ignore next */cov_22s6dd2wjj.b[6][1]++;cov_22s6dd2wjj.s[52]++;sendJSON(response, 200, storage);}\n}","timestamp":"2017-12-09T00:00:20.728Z"}
{"level":"info","message":"adding a DELETE url and callback","timestamp":"2017-12-09T00:00:20.728Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-09T00:00:20.728Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[10]++;\n  let id = /* istanbul ignore next */(cov_22s6dd2wjj.s[54]++, request.url.query.id); /* istanbul ignore next */cov_22s6dd2wjj.s[55]++;\n  storage.deleteItem(id).\n  then(filteredMountains => {/* istanbul ignore next */cov_22s6dd2wjj.f[11]++;cov_22s6dd2wjj.s[56]++;\n    sendJSON(response, 200, filteredMountains);\n  }).\n  catch(error => {/* istanbul ignore next */cov_22s6dd2wjj.f[12]++;cov_22s6dd2wjj.s[57]++;\n    sendStatus(response, 404, error);\n  });\n}","timestamp":"2017-12-09T00:00:20.728Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-09T00:00:20.851Z"}
{"level":"info","message":"Original URL: \"/api/mountains\"","timestamp":"2017-12-09T00:00:20.851Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/mountains\",\"path\":\"/api/mountains\",\"href\":\"/api/mountains\"}","timestamp":"2017-12-09T00:00:20.851Z"}
{"level":"info","message":"found the following handler","timestamp":"2017-12-09T00:00:20.852Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[6]++;cov_22s6dd2wjj.s[26]++;\n  if (!request.body) {/* istanbul ignore next */cov_22s6dd2wjj.b[1][0]++;cov_22s6dd2wjj.s[27]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[1][1]++;}cov_22s6dd2wjj.s[29]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_22s6dd2wjj.b[2][0]++;cov_22s6dd2wjj.s[30]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[2][1]++;}cov_22s6dd2wjj.s[32]++;\n  if (!request.body.state) {/* istanbul ignore next */cov_22s6dd2wjj.b[3][0]++;cov_22s6dd2wjj.s[33]++;\n    sendStatus(response, 400, 'state not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[3][1]++;}cov_22s6dd2wjj.s[35]++;\n  if (!request.body.hiking) {/* istanbul ignore next */cov_22s6dd2wjj.b[4][0]++;cov_22s6dd2wjj.s[36]++;\n    sendStatus(response, 400, 'hiking info not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[4][1]++;}cov_22s6dd2wjj.s[38]++;\n  if (!request.body.range) {/* istanbul ignore next */cov_22s6dd2wjj.b[5][0]++;cov_22s6dd2wjj.s[39]++;\n    sendStatus(response, 400, 'range name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[40]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[5][1]++;}\n  let mountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[41]++, new Mountain(\n  request.body.name,\n  request.body.state,\n  request.body.hiking,\n  request.body.range)); /* istanbul ignore next */cov_22s6dd2wjj.s[42]++;\n\n\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_22s6dd2wjj.f[7]++;cov_22s6dd2wjj.s[43]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_22s6dd2wjj.f[8]++;cov_22s6dd2wjj.s[44]++;\n    sendStatus(response, 500, error);\n  });\n\n}","timestamp":"2017-12-09T00:00:20.852Z"}
{"level":"info","message":"responding with a 200 code and the following json data","timestamp":"2017-12-09T00:00:20.855Z"}
{"id":"f2a7c340-dc73-11e7-9257-d5afe23fc3df","name":"Shuksan","state":"Washington","hiking":"Yes","range":"Cascades","level":"info","message":"","timestamp":"2017-12-09T00:00:20.855Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-09T00:00:20.864Z"}
{"level":"info","message":"Original URL: \"/api/mountains\"","timestamp":"2017-12-09T00:00:20.864Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/mountains\",\"path\":\"/api/mountains\",\"href\":\"/api/mountains\"}","timestamp":"2017-12-09T00:00:20.864Z"}
{"level":"info","message":"found the following handler","timestamp":"2017-12-09T00:00:20.864Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[6]++;cov_22s6dd2wjj.s[26]++;\n  if (!request.body) {/* istanbul ignore next */cov_22s6dd2wjj.b[1][0]++;cov_22s6dd2wjj.s[27]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[1][1]++;}cov_22s6dd2wjj.s[29]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_22s6dd2wjj.b[2][0]++;cov_22s6dd2wjj.s[30]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[2][1]++;}cov_22s6dd2wjj.s[32]++;\n  if (!request.body.state) {/* istanbul ignore next */cov_22s6dd2wjj.b[3][0]++;cov_22s6dd2wjj.s[33]++;\n    sendStatus(response, 400, 'state not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[3][1]++;}cov_22s6dd2wjj.s[35]++;\n  if (!request.body.hiking) {/* istanbul ignore next */cov_22s6dd2wjj.b[4][0]++;cov_22s6dd2wjj.s[36]++;\n    sendStatus(response, 400, 'hiking info not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[4][1]++;}cov_22s6dd2wjj.s[38]++;\n  if (!request.body.range) {/* istanbul ignore next */cov_22s6dd2wjj.b[5][0]++;cov_22s6dd2wjj.s[39]++;\n    sendStatus(response, 400, 'range name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[40]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[5][1]++;}\n  let mountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[41]++, new Mountain(\n  request.body.name,\n  request.body.state,\n  request.body.hiking,\n  request.body.range)); /* istanbul ignore next */cov_22s6dd2wjj.s[42]++;\n\n\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_22s6dd2wjj.f[7]++;cov_22s6dd2wjj.s[43]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_22s6dd2wjj.f[8]++;cov_22s6dd2wjj.s[44]++;\n    sendStatus(response, 500, error);\n  });\n\n}","timestamp":"2017-12-09T00:00:20.864Z"}
{"level":"info","message":"responding with a 200 code and the following json data","timestamp":"2017-12-09T00:00:20.865Z"}
{"id":"f2a99800-dc73-11e7-9257-d5afe23fc3df","name":"Shuksan","state":"Washington","hiking":"Yes","range":"Cascades","level":"info","message":"","timestamp":"2017-12-09T00:00:20.865Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-09T00:00:20.868Z"}
{"level":"info","message":"Original URL: \"/api/mountains?id=$33333\"","timestamp":"2017-12-09T00:00:20.868Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=$33333\",\"query\":{\"id\":\"$33333\"},\"pathname\":\"/api/mountains\",\"path\":\"/api/mountains?id=$33333\",\"href\":\"/api/mountains?id=$33333\"}","timestamp":"2017-12-09T00:00:20.869Z"}
{"level":"info","message":"found the following handler","timestamp":"2017-12-09T00:00:20.869Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[9]++;\n  let id = /* istanbul ignore next */(cov_22s6dd2wjj.s[46]++, request.url.query.id); /* istanbul ignore next */cov_22s6dd2wjj.s[47]++;\n\n  if (id) {/* istanbul ignore next */cov_22s6dd2wjj.b[6][0]++;\n    let requestMountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[48]++, getMountainById(id)); /* istanbul ignore next */cov_22s6dd2wjj.s[49]++;\n    if (requestMountain) {/* istanbul ignore next */cov_22s6dd2wjj.b[7][0]++;cov_22s6dd2wjj.s[50]++;\n      sendJSON(response, 200, requestMountain);\n    } else\n      {/* istanbul ignore next */cov_22s6dd2wjj.b[7][1]++;cov_22s6dd2wjj.s[51]++;sendStatus(response, 404, `no mountain found with the id of ${id}`);}\n  } else\n    {/* istanbul ignore next */cov_22s6dd2wjj.b[6][1]++;cov_22s6dd2wjj.s[52]++;sendJSON(response, 200, storage);}\n}","timestamp":"2017-12-09T00:00:20.869Z"}
{"level":"info","message":"------>REQUEST_ERROR<------","timestamp":"2017-12-09T00:00:20.869Z"}
{"message":"storage.filter is not a function","stack":"TypeError: storage.filter is not a function\n    at getMountainById (/Users/austriker/Documents/code-fellows/cf-401/labs/08-09-vanilla-rest-server/lab-david/route/mountain-route.js:29:18)\n    at Object.<anonymous>.router.get (/Users/austriker/Documents/code-fellows/cf-401/labs/08-09-vanilla-rest-server/lab-david/route/mountain-route.js:87:78)\n    at requestParser.parse.then.request (/Users/austriker/Documents/code-fellows/cf-401/labs/08-09-vanilla-rest-server/lab-david/lib/router.js:50:87)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-09T00:00:20.869Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-09T00:00:20.870Z"}
{"level":"info","message":"Original URL: \"/api/mountains?e8013d70-dbad-11e7-9cb6-ddffa32a3c9b\"","timestamp":"2017-12-09T00:00:20.870Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?e8013d70-dbad-11e7-9cb6-ddffa32a3c9b\",\"query\":{\"e8013d70-dbad-11e7-9cb6-ddffa32a3c9b\":\"\"},\"pathname\":\"/api/mountains\",\"path\":\"/api/mountains?e8013d70-dbad-11e7-9cb6-ddffa32a3c9b\",\"href\":\"/api/mountains?e8013d70-dbad-11e7-9cb6-ddffa32a3c9b\"}","timestamp":"2017-12-09T00:00:20.870Z"}
{"level":"info","message":"found the following handler","timestamp":"2017-12-09T00:00:20.870Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[9]++;\n  let id = /* istanbul ignore next */(cov_22s6dd2wjj.s[46]++, request.url.query.id); /* istanbul ignore next */cov_22s6dd2wjj.s[47]++;\n\n  if (id) {/* istanbul ignore next */cov_22s6dd2wjj.b[6][0]++;\n    let requestMountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[48]++, getMountainById(id)); /* istanbul ignore next */cov_22s6dd2wjj.s[49]++;\n    if (requestMountain) {/* istanbul ignore next */cov_22s6dd2wjj.b[7][0]++;cov_22s6dd2wjj.s[50]++;\n      sendJSON(response, 200, requestMountain);\n    } else\n      {/* istanbul ignore next */cov_22s6dd2wjj.b[7][1]++;cov_22s6dd2wjj.s[51]++;sendStatus(response, 404, `no mountain found with the id of ${id}`);}\n  } else\n    {/* istanbul ignore next */cov_22s6dd2wjj.b[6][1]++;cov_22s6dd2wjj.s[52]++;sendJSON(response, 200, storage);}\n}","timestamp":"2017-12-09T00:00:20.870Z"}
{"level":"info","message":"responding with a 200 code and the following json data","timestamp":"2017-12-09T00:00:20.870Z"}
{"level":"info","message":"","timestamp":"2017-12-09T00:00:20.870Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-09T00:00:20.874Z"}
{"level":"info","message":"Original URL: \"/api/mountains\"","timestamp":"2017-12-09T00:00:20.875Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/mountains\",\"path\":\"/api/mountains\",\"href\":\"/api/mountains\"}","timestamp":"2017-12-09T00:00:20.875Z"}
{"level":"info","message":"found the following handler","timestamp":"2017-12-09T00:00:20.875Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[6]++;cov_22s6dd2wjj.s[26]++;\n  if (!request.body) {/* istanbul ignore next */cov_22s6dd2wjj.b[1][0]++;cov_22s6dd2wjj.s[27]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[1][1]++;}cov_22s6dd2wjj.s[29]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_22s6dd2wjj.b[2][0]++;cov_22s6dd2wjj.s[30]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[2][1]++;}cov_22s6dd2wjj.s[32]++;\n  if (!request.body.state) {/* istanbul ignore next */cov_22s6dd2wjj.b[3][0]++;cov_22s6dd2wjj.s[33]++;\n    sendStatus(response, 400, 'state not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[3][1]++;}cov_22s6dd2wjj.s[35]++;\n  if (!request.body.hiking) {/* istanbul ignore next */cov_22s6dd2wjj.b[4][0]++;cov_22s6dd2wjj.s[36]++;\n    sendStatus(response, 400, 'hiking info not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[4][1]++;}cov_22s6dd2wjj.s[38]++;\n  if (!request.body.range) {/* istanbul ignore next */cov_22s6dd2wjj.b[5][0]++;cov_22s6dd2wjj.s[39]++;\n    sendStatus(response, 400, 'range name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[40]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[5][1]++;}\n  let mountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[41]++, new Mountain(\n  request.body.name,\n  request.body.state,\n  request.body.hiking,\n  request.body.range)); /* istanbul ignore next */cov_22s6dd2wjj.s[42]++;\n\n\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_22s6dd2wjj.f[7]++;cov_22s6dd2wjj.s[43]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_22s6dd2wjj.f[8]++;cov_22s6dd2wjj.s[44]++;\n    sendStatus(response, 500, error);\n  });\n\n}","timestamp":"2017-12-09T00:00:20.875Z"}
{"level":"info","message":"Responding with a 400 code due to name not found","timestamp":"2017-12-09T00:00:20.875Z"}
{"level":"info","message":"adding a POST url and callback","timestamp":"2017-12-09T00:01:54.087Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-09T00:01:54.088Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[6]++;cov_22s6dd2wjj.s[26]++;\n  if (!request.body) {/* istanbul ignore next */cov_22s6dd2wjj.b[1][0]++;cov_22s6dd2wjj.s[27]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[1][1]++;}cov_22s6dd2wjj.s[29]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_22s6dd2wjj.b[2][0]++;cov_22s6dd2wjj.s[30]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[2][1]++;}cov_22s6dd2wjj.s[32]++;\n  if (!request.body.state) {/* istanbul ignore next */cov_22s6dd2wjj.b[3][0]++;cov_22s6dd2wjj.s[33]++;\n    sendStatus(response, 400, 'state not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[3][1]++;}cov_22s6dd2wjj.s[35]++;\n  if (!request.body.hiking) {/* istanbul ignore next */cov_22s6dd2wjj.b[4][0]++;cov_22s6dd2wjj.s[36]++;\n    sendStatus(response, 400, 'hiking info not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[4][1]++;}cov_22s6dd2wjj.s[38]++;\n  if (!request.body.range) {/* istanbul ignore next */cov_22s6dd2wjj.b[5][0]++;cov_22s6dd2wjj.s[39]++;\n    sendStatus(response, 400, 'range name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[40]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[5][1]++;}\n  let mountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[41]++, new Mountain(\n  request.body.name,\n  request.body.state,\n  request.body.hiking,\n  request.body.range)); /* istanbul ignore next */cov_22s6dd2wjj.s[42]++;\n\n\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_22s6dd2wjj.f[7]++;cov_22s6dd2wjj.s[43]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_22s6dd2wjj.f[8]++;cov_22s6dd2wjj.s[44]++;\n    sendStatus(response, 500, error);\n  });\n\n}","timestamp":"2017-12-09T00:01:54.088Z"}
{"level":"info","message":"adding a GET url and callback","timestamp":"2017-12-09T00:01:54.088Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-09T00:01:54.088Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[9]++;\n  let id = /* istanbul ignore next */(cov_22s6dd2wjj.s[46]++, request.url.query.id); /* istanbul ignore next */cov_22s6dd2wjj.s[47]++;\n\n  if (id) {/* istanbul ignore next */cov_22s6dd2wjj.b[6][0]++;\n    let requestMountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[48]++, getMountainById(id)); /* istanbul ignore next */cov_22s6dd2wjj.s[49]++;\n    if (requestMountain) {/* istanbul ignore next */cov_22s6dd2wjj.b[7][0]++;cov_22s6dd2wjj.s[50]++;\n      sendJSON(response, 200, requestMountain);\n    } else\n      {/* istanbul ignore next */cov_22s6dd2wjj.b[7][1]++;cov_22s6dd2wjj.s[51]++;sendStatus(response, 404, `no mountain found with the id of ${id}`);}\n  } else\n    {/* istanbul ignore next */cov_22s6dd2wjj.b[6][1]++;cov_22s6dd2wjj.s[52]++;sendJSON(response, 200, storage);}\n}","timestamp":"2017-12-09T00:01:54.088Z"}
{"level":"info","message":"adding a DELETE url and callback","timestamp":"2017-12-09T00:01:54.088Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-09T00:01:54.088Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[10]++;\n  let id = /* istanbul ignore next */(cov_22s6dd2wjj.s[54]++, request.url.query.id); /* istanbul ignore next */cov_22s6dd2wjj.s[55]++;\n  storage.deleteItem(id).\n  then(filteredMountains => {/* istanbul ignore next */cov_22s6dd2wjj.f[11]++;cov_22s6dd2wjj.s[56]++;\n    sendJSON(response, 200, filteredMountains);\n  }).\n  catch(error => {/* istanbul ignore next */cov_22s6dd2wjj.f[12]++;cov_22s6dd2wjj.s[57]++;\n    sendStatus(response, 404, error);\n  });\n}","timestamp":"2017-12-09T00:01:54.088Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-09T00:01:54.185Z"}
{"level":"info","message":"Original URL: \"/api/mountains\"","timestamp":"2017-12-09T00:01:54.185Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/mountains\",\"path\":\"/api/mountains\",\"href\":\"/api/mountains\"}","timestamp":"2017-12-09T00:01:54.185Z"}
{"level":"info","message":"found the following handler","timestamp":"2017-12-09T00:01:54.186Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[6]++;cov_22s6dd2wjj.s[26]++;\n  if (!request.body) {/* istanbul ignore next */cov_22s6dd2wjj.b[1][0]++;cov_22s6dd2wjj.s[27]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[1][1]++;}cov_22s6dd2wjj.s[29]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_22s6dd2wjj.b[2][0]++;cov_22s6dd2wjj.s[30]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[2][1]++;}cov_22s6dd2wjj.s[32]++;\n  if (!request.body.state) {/* istanbul ignore next */cov_22s6dd2wjj.b[3][0]++;cov_22s6dd2wjj.s[33]++;\n    sendStatus(response, 400, 'state not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[3][1]++;}cov_22s6dd2wjj.s[35]++;\n  if (!request.body.hiking) {/* istanbul ignore next */cov_22s6dd2wjj.b[4][0]++;cov_22s6dd2wjj.s[36]++;\n    sendStatus(response, 400, 'hiking info not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[4][1]++;}cov_22s6dd2wjj.s[38]++;\n  if (!request.body.range) {/* istanbul ignore next */cov_22s6dd2wjj.b[5][0]++;cov_22s6dd2wjj.s[39]++;\n    sendStatus(response, 400, 'range name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[40]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[5][1]++;}\n  let mountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[41]++, new Mountain(\n  request.body.name,\n  request.body.state,\n  request.body.hiking,\n  request.body.range)); /* istanbul ignore next */cov_22s6dd2wjj.s[42]++;\n\n\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_22s6dd2wjj.f[7]++;cov_22s6dd2wjj.s[43]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_22s6dd2wjj.f[8]++;cov_22s6dd2wjj.s[44]++;\n    sendStatus(response, 500, error);\n  });\n\n}","timestamp":"2017-12-09T00:01:54.186Z"}
{"level":"info","message":"responding with a 200 code and the following json data","timestamp":"2017-12-09T00:01:54.190Z"}
{"id":"2a498db0-dc74-11e7-98b9-0fef5efabaf3","name":"Shuksan","state":"Washington","hiking":"Yes","range":"Cascades","level":"info","message":"","timestamp":"2017-12-09T00:01:54.190Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-09T00:01:54.199Z"}
{"level":"info","message":"Original URL: \"/api/mountains\"","timestamp":"2017-12-09T00:01:54.199Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/mountains\",\"path\":\"/api/mountains\",\"href\":\"/api/mountains\"}","timestamp":"2017-12-09T00:01:54.199Z"}
{"level":"info","message":"found the following handler","timestamp":"2017-12-09T00:01:54.200Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[6]++;cov_22s6dd2wjj.s[26]++;\n  if (!request.body) {/* istanbul ignore next */cov_22s6dd2wjj.b[1][0]++;cov_22s6dd2wjj.s[27]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[1][1]++;}cov_22s6dd2wjj.s[29]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_22s6dd2wjj.b[2][0]++;cov_22s6dd2wjj.s[30]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[2][1]++;}cov_22s6dd2wjj.s[32]++;\n  if (!request.body.state) {/* istanbul ignore next */cov_22s6dd2wjj.b[3][0]++;cov_22s6dd2wjj.s[33]++;\n    sendStatus(response, 400, 'state not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[3][1]++;}cov_22s6dd2wjj.s[35]++;\n  if (!request.body.hiking) {/* istanbul ignore next */cov_22s6dd2wjj.b[4][0]++;cov_22s6dd2wjj.s[36]++;\n    sendStatus(response, 400, 'hiking info not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[4][1]++;}cov_22s6dd2wjj.s[38]++;\n  if (!request.body.range) {/* istanbul ignore next */cov_22s6dd2wjj.b[5][0]++;cov_22s6dd2wjj.s[39]++;\n    sendStatus(response, 400, 'range name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[40]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[5][1]++;}\n  let mountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[41]++, new Mountain(\n  request.body.name,\n  request.body.state,\n  request.body.hiking,\n  request.body.range)); /* istanbul ignore next */cov_22s6dd2wjj.s[42]++;\n\n\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_22s6dd2wjj.f[7]++;cov_22s6dd2wjj.s[43]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_22s6dd2wjj.f[8]++;cov_22s6dd2wjj.s[44]++;\n    sendStatus(response, 500, error);\n  });\n\n}","timestamp":"2017-12-09T00:01:54.200Z"}
{"level":"info","message":"responding with a 200 code and the following json data","timestamp":"2017-12-09T00:01:54.201Z"}
{"id":"2a4b8980-dc74-11e7-98b9-0fef5efabaf3","name":"Shuksan","state":"Washington","hiking":"Yes","range":"Cascades","level":"info","message":"","timestamp":"2017-12-09T00:01:54.201Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-09T00:01:54.210Z"}
{"level":"info","message":"Original URL: \"/api/mountains?id=$33333\"","timestamp":"2017-12-09T00:01:54.210Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=$33333\",\"query\":{\"id\":\"$33333\"},\"pathname\":\"/api/mountains\",\"path\":\"/api/mountains?id=$33333\",\"href\":\"/api/mountains?id=$33333\"}","timestamp":"2017-12-09T00:01:54.211Z"}
{"level":"info","message":"found the following handler","timestamp":"2017-12-09T00:01:54.211Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[9]++;\n  let id = /* istanbul ignore next */(cov_22s6dd2wjj.s[46]++, request.url.query.id); /* istanbul ignore next */cov_22s6dd2wjj.s[47]++;\n\n  if (id) {/* istanbul ignore next */cov_22s6dd2wjj.b[6][0]++;\n    let requestMountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[48]++, getMountainById(id)); /* istanbul ignore next */cov_22s6dd2wjj.s[49]++;\n    if (requestMountain) {/* istanbul ignore next */cov_22s6dd2wjj.b[7][0]++;cov_22s6dd2wjj.s[50]++;\n      sendJSON(response, 200, requestMountain);\n    } else\n      {/* istanbul ignore next */cov_22s6dd2wjj.b[7][1]++;cov_22s6dd2wjj.s[51]++;sendStatus(response, 404, `no mountain found with the id of ${id}`);}\n  } else\n    {/* istanbul ignore next */cov_22s6dd2wjj.b[6][1]++;cov_22s6dd2wjj.s[52]++;sendJSON(response, 200, storage);}\n}","timestamp":"2017-12-09T00:01:54.211Z"}
{"level":"info","message":"------>REQUEST_ERROR<------","timestamp":"2017-12-09T00:01:54.211Z"}
{"message":"storage.filter is not a function","stack":"TypeError: storage.filter is not a function\n    at getMountainById (/Users/austriker/Documents/code-fellows/cf-401/labs/08-09-vanilla-rest-server/lab-david/route/mountain-route.js:29:18)\n    at Object.<anonymous>.router.get (/Users/austriker/Documents/code-fellows/cf-401/labs/08-09-vanilla-rest-server/lab-david/route/mountain-route.js:87:78)\n    at requestParser.parse.then.request (/Users/austriker/Documents/code-fellows/cf-401/labs/08-09-vanilla-rest-server/lab-david/lib/router.js:50:87)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-09T00:01:54.211Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-09T00:01:54.212Z"}
{"level":"info","message":"Original URL: \"/api/mountains?e8013d70-dbad-11e7-9cb6-ddffa32a3c9b\"","timestamp":"2017-12-09T00:01:54.212Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?e8013d70-dbad-11e7-9cb6-ddffa32a3c9b\",\"query\":{\"e8013d70-dbad-11e7-9cb6-ddffa32a3c9b\":\"\"},\"pathname\":\"/api/mountains\",\"path\":\"/api/mountains?e8013d70-dbad-11e7-9cb6-ddffa32a3c9b\",\"href\":\"/api/mountains?e8013d70-dbad-11e7-9cb6-ddffa32a3c9b\"}","timestamp":"2017-12-09T00:01:54.212Z"}
{"level":"info","message":"found the following handler","timestamp":"2017-12-09T00:01:54.212Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[9]++;\n  let id = /* istanbul ignore next */(cov_22s6dd2wjj.s[46]++, request.url.query.id); /* istanbul ignore next */cov_22s6dd2wjj.s[47]++;\n\n  if (id) {/* istanbul ignore next */cov_22s6dd2wjj.b[6][0]++;\n    let requestMountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[48]++, getMountainById(id)); /* istanbul ignore next */cov_22s6dd2wjj.s[49]++;\n    if (requestMountain) {/* istanbul ignore next */cov_22s6dd2wjj.b[7][0]++;cov_22s6dd2wjj.s[50]++;\n      sendJSON(response, 200, requestMountain);\n    } else\n      {/* istanbul ignore next */cov_22s6dd2wjj.b[7][1]++;cov_22s6dd2wjj.s[51]++;sendStatus(response, 404, `no mountain found with the id of ${id}`);}\n  } else\n    {/* istanbul ignore next */cov_22s6dd2wjj.b[6][1]++;cov_22s6dd2wjj.s[52]++;sendJSON(response, 200, storage);}\n}","timestamp":"2017-12-09T00:01:54.212Z"}
{"level":"info","message":"responding with a 200 code and the following json data","timestamp":"2017-12-09T00:01:54.212Z"}
{"level":"info","message":"","timestamp":"2017-12-09T00:01:54.212Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-09T00:01:54.217Z"}
{"level":"info","message":"Original URL: \"/api/mountains\"","timestamp":"2017-12-09T00:01:54.217Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/mountains\",\"path\":\"/api/mountains\",\"href\":\"/api/mountains\"}","timestamp":"2017-12-09T00:01:54.217Z"}
{"level":"info","message":"found the following handler","timestamp":"2017-12-09T00:01:54.217Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[6]++;cov_22s6dd2wjj.s[26]++;\n  if (!request.body) {/* istanbul ignore next */cov_22s6dd2wjj.b[1][0]++;cov_22s6dd2wjj.s[27]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[1][1]++;}cov_22s6dd2wjj.s[29]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_22s6dd2wjj.b[2][0]++;cov_22s6dd2wjj.s[30]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[2][1]++;}cov_22s6dd2wjj.s[32]++;\n  if (!request.body.state) {/* istanbul ignore next */cov_22s6dd2wjj.b[3][0]++;cov_22s6dd2wjj.s[33]++;\n    sendStatus(response, 400, 'state not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[3][1]++;}cov_22s6dd2wjj.s[35]++;\n  if (!request.body.hiking) {/* istanbul ignore next */cov_22s6dd2wjj.b[4][0]++;cov_22s6dd2wjj.s[36]++;\n    sendStatus(response, 400, 'hiking info not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[4][1]++;}cov_22s6dd2wjj.s[38]++;\n  if (!request.body.range) {/* istanbul ignore next */cov_22s6dd2wjj.b[5][0]++;cov_22s6dd2wjj.s[39]++;\n    sendStatus(response, 400, 'range name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[40]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[5][1]++;}\n  let mountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[41]++, new Mountain(\n  request.body.name,\n  request.body.state,\n  request.body.hiking,\n  request.body.range)); /* istanbul ignore next */cov_22s6dd2wjj.s[42]++;\n\n\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_22s6dd2wjj.f[7]++;cov_22s6dd2wjj.s[43]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_22s6dd2wjj.f[8]++;cov_22s6dd2wjj.s[44]++;\n    sendStatus(response, 500, error);\n  });\n\n}","timestamp":"2017-12-09T00:01:54.217Z"}
{"level":"info","message":"Responding with a 400 code due to name not found","timestamp":"2017-12-09T00:01:54.217Z"}
{"level":"info","message":"adding a POST url and callback","timestamp":"2017-12-09T00:02:10.496Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-09T00:02:10.496Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[6]++;cov_22s6dd2wjj.s[26]++;\n  if (!request.body) {/* istanbul ignore next */cov_22s6dd2wjj.b[1][0]++;cov_22s6dd2wjj.s[27]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[1][1]++;}cov_22s6dd2wjj.s[29]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_22s6dd2wjj.b[2][0]++;cov_22s6dd2wjj.s[30]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[2][1]++;}cov_22s6dd2wjj.s[32]++;\n  if (!request.body.state) {/* istanbul ignore next */cov_22s6dd2wjj.b[3][0]++;cov_22s6dd2wjj.s[33]++;\n    sendStatus(response, 400, 'state not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[3][1]++;}cov_22s6dd2wjj.s[35]++;\n  if (!request.body.hiking) {/* istanbul ignore next */cov_22s6dd2wjj.b[4][0]++;cov_22s6dd2wjj.s[36]++;\n    sendStatus(response, 400, 'hiking info not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[4][1]++;}cov_22s6dd2wjj.s[38]++;\n  if (!request.body.range) {/* istanbul ignore next */cov_22s6dd2wjj.b[5][0]++;cov_22s6dd2wjj.s[39]++;\n    sendStatus(response, 400, 'range name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[40]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[5][1]++;}\n  let mountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[41]++, new Mountain(\n  request.body.name,\n  request.body.state,\n  request.body.hiking,\n  request.body.range)); /* istanbul ignore next */cov_22s6dd2wjj.s[42]++;\n\n\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_22s6dd2wjj.f[7]++;cov_22s6dd2wjj.s[43]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_22s6dd2wjj.f[8]++;cov_22s6dd2wjj.s[44]++;\n    sendStatus(response, 500, error);\n  });\n\n}","timestamp":"2017-12-09T00:02:10.496Z"}
{"level":"info","message":"adding a GET url and callback","timestamp":"2017-12-09T00:02:10.497Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-09T00:02:10.497Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[9]++;\n  let id = /* istanbul ignore next */(cov_22s6dd2wjj.s[46]++, request.url.query.id); /* istanbul ignore next */cov_22s6dd2wjj.s[47]++;\n\n  if (id) {/* istanbul ignore next */cov_22s6dd2wjj.b[6][0]++;\n    let requestMountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[48]++, getMountainById(id)); /* istanbul ignore next */cov_22s6dd2wjj.s[49]++;\n    if (requestMountain) {/* istanbul ignore next */cov_22s6dd2wjj.b[7][0]++;cov_22s6dd2wjj.s[50]++;\n      sendJSON(response, 200, requestMountain);\n    } else\n      {/* istanbul ignore next */cov_22s6dd2wjj.b[7][1]++;cov_22s6dd2wjj.s[51]++;sendStatus(response, 404, `no mountain found with the id of ${id}`);}\n  } else\n    {/* istanbul ignore next */cov_22s6dd2wjj.b[6][1]++;cov_22s6dd2wjj.s[52]++;sendJSON(response, 200, storage);}\n}","timestamp":"2017-12-09T00:02:10.497Z"}
{"level":"info","message":"adding a DELETE url and callback","timestamp":"2017-12-09T00:02:10.497Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-09T00:02:10.497Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[10]++;\n  let id = /* istanbul ignore next */(cov_22s6dd2wjj.s[54]++, request.url.query.id); /* istanbul ignore next */cov_22s6dd2wjj.s[55]++;\n  storage.deleteItem(id).\n  then(filteredMountains => {/* istanbul ignore next */cov_22s6dd2wjj.f[11]++;cov_22s6dd2wjj.s[56]++;\n    sendJSON(response, 200, filteredMountains);\n  }).\n  catch(error => {/* istanbul ignore next */cov_22s6dd2wjj.f[12]++;cov_22s6dd2wjj.s[57]++;\n    sendStatus(response, 404, error);\n  });\n}","timestamp":"2017-12-09T00:02:10.497Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-09T00:02:10.593Z"}
{"level":"info","message":"Original URL: \"/api/mountains\"","timestamp":"2017-12-09T00:02:10.593Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/mountains\",\"path\":\"/api/mountains\",\"href\":\"/api/mountains\"}","timestamp":"2017-12-09T00:02:10.593Z"}
{"level":"info","message":"found the following handler","timestamp":"2017-12-09T00:02:10.594Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[6]++;cov_22s6dd2wjj.s[26]++;\n  if (!request.body) {/* istanbul ignore next */cov_22s6dd2wjj.b[1][0]++;cov_22s6dd2wjj.s[27]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[1][1]++;}cov_22s6dd2wjj.s[29]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_22s6dd2wjj.b[2][0]++;cov_22s6dd2wjj.s[30]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[2][1]++;}cov_22s6dd2wjj.s[32]++;\n  if (!request.body.state) {/* istanbul ignore next */cov_22s6dd2wjj.b[3][0]++;cov_22s6dd2wjj.s[33]++;\n    sendStatus(response, 400, 'state not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[3][1]++;}cov_22s6dd2wjj.s[35]++;\n  if (!request.body.hiking) {/* istanbul ignore next */cov_22s6dd2wjj.b[4][0]++;cov_22s6dd2wjj.s[36]++;\n    sendStatus(response, 400, 'hiking info not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[4][1]++;}cov_22s6dd2wjj.s[38]++;\n  if (!request.body.range) {/* istanbul ignore next */cov_22s6dd2wjj.b[5][0]++;cov_22s6dd2wjj.s[39]++;\n    sendStatus(response, 400, 'range name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[40]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[5][1]++;}\n  let mountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[41]++, new Mountain(\n  request.body.name,\n  request.body.state,\n  request.body.hiking,\n  request.body.range)); /* istanbul ignore next */cov_22s6dd2wjj.s[42]++;\n\n\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_22s6dd2wjj.f[7]++;cov_22s6dd2wjj.s[43]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_22s6dd2wjj.f[8]++;cov_22s6dd2wjj.s[44]++;\n    sendStatus(response, 500, error);\n  });\n\n}","timestamp":"2017-12-09T00:02:10.594Z"}
{"level":"info","message":"responding with a 200 code and the following json data","timestamp":"2017-12-09T00:02:10.597Z"}
{"id":"34111020-dc74-11e7-81d1-6d86a580401b","name":"Shuksan","state":"Washington","hiking":"Yes","range":"Cascades","level":"info","message":"","timestamp":"2017-12-09T00:02:10.597Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-09T00:02:10.606Z"}
{"level":"info","message":"Original URL: \"/api/mountains\"","timestamp":"2017-12-09T00:02:10.606Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/mountains\",\"path\":\"/api/mountains\",\"href\":\"/api/mountains\"}","timestamp":"2017-12-09T00:02:10.606Z"}
{"level":"info","message":"found the following handler","timestamp":"2017-12-09T00:02:10.606Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[6]++;cov_22s6dd2wjj.s[26]++;\n  if (!request.body) {/* istanbul ignore next */cov_22s6dd2wjj.b[1][0]++;cov_22s6dd2wjj.s[27]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[1][1]++;}cov_22s6dd2wjj.s[29]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_22s6dd2wjj.b[2][0]++;cov_22s6dd2wjj.s[30]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[2][1]++;}cov_22s6dd2wjj.s[32]++;\n  if (!request.body.state) {/* istanbul ignore next */cov_22s6dd2wjj.b[3][0]++;cov_22s6dd2wjj.s[33]++;\n    sendStatus(response, 400, 'state not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[3][1]++;}cov_22s6dd2wjj.s[35]++;\n  if (!request.body.hiking) {/* istanbul ignore next */cov_22s6dd2wjj.b[4][0]++;cov_22s6dd2wjj.s[36]++;\n    sendStatus(response, 400, 'hiking info not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[4][1]++;}cov_22s6dd2wjj.s[38]++;\n  if (!request.body.range) {/* istanbul ignore next */cov_22s6dd2wjj.b[5][0]++;cov_22s6dd2wjj.s[39]++;\n    sendStatus(response, 400, 'range name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[40]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[5][1]++;}\n  let mountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[41]++, new Mountain(\n  request.body.name,\n  request.body.state,\n  request.body.hiking,\n  request.body.range)); /* istanbul ignore next */cov_22s6dd2wjj.s[42]++;\n\n\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_22s6dd2wjj.f[7]++;cov_22s6dd2wjj.s[43]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_22s6dd2wjj.f[8]++;cov_22s6dd2wjj.s[44]++;\n    sendStatus(response, 500, error);\n  });\n\n}","timestamp":"2017-12-09T00:02:10.606Z"}
{"level":"info","message":"responding with a 200 code and the following json data","timestamp":"2017-12-09T00:02:10.607Z"}
{"id":"3412e4e0-dc74-11e7-81d1-6d86a580401b","name":"Shuksan","state":"Washington","hiking":"Yes","range":"Cascades","level":"info","message":"","timestamp":"2017-12-09T00:02:10.607Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-09T00:02:10.611Z"}
{"level":"info","message":"Original URL: \"/api/mountains?e8013d70-dbad-11e7-9cb6-ddffa32a3c9b\"","timestamp":"2017-12-09T00:02:10.611Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?e8013d70-dbad-11e7-9cb6-ddffa32a3c9b\",\"query\":{\"e8013d70-dbad-11e7-9cb6-ddffa32a3c9b\":\"\"},\"pathname\":\"/api/mountains\",\"path\":\"/api/mountains?e8013d70-dbad-11e7-9cb6-ddffa32a3c9b\",\"href\":\"/api/mountains?e8013d70-dbad-11e7-9cb6-ddffa32a3c9b\"}","timestamp":"2017-12-09T00:02:10.611Z"}
{"level":"info","message":"found the following handler","timestamp":"2017-12-09T00:02:10.611Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[9]++;\n  let id = /* istanbul ignore next */(cov_22s6dd2wjj.s[46]++, request.url.query.id); /* istanbul ignore next */cov_22s6dd2wjj.s[47]++;\n\n  if (id) {/* istanbul ignore next */cov_22s6dd2wjj.b[6][0]++;\n    let requestMountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[48]++, getMountainById(id)); /* istanbul ignore next */cov_22s6dd2wjj.s[49]++;\n    if (requestMountain) {/* istanbul ignore next */cov_22s6dd2wjj.b[7][0]++;cov_22s6dd2wjj.s[50]++;\n      sendJSON(response, 200, requestMountain);\n    } else\n      {/* istanbul ignore next */cov_22s6dd2wjj.b[7][1]++;cov_22s6dd2wjj.s[51]++;sendStatus(response, 404, `no mountain found with the id of ${id}`);}\n  } else\n    {/* istanbul ignore next */cov_22s6dd2wjj.b[6][1]++;cov_22s6dd2wjj.s[52]++;sendJSON(response, 200, storage);}\n}","timestamp":"2017-12-09T00:02:10.611Z"}
{"level":"info","message":"responding with a 200 code and the following json data","timestamp":"2017-12-09T00:02:10.612Z"}
{"level":"info","message":"","timestamp":"2017-12-09T00:02:10.612Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-09T00:02:10.614Z"}
{"level":"info","message":"Original URL: \"/api/mountains\"","timestamp":"2017-12-09T00:02:10.614Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/mountains\",\"path\":\"/api/mountains\",\"href\":\"/api/mountains\"}","timestamp":"2017-12-09T00:02:10.614Z"}
{"level":"info","message":"found the following handler","timestamp":"2017-12-09T00:02:10.614Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[6]++;cov_22s6dd2wjj.s[26]++;\n  if (!request.body) {/* istanbul ignore next */cov_22s6dd2wjj.b[1][0]++;cov_22s6dd2wjj.s[27]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[1][1]++;}cov_22s6dd2wjj.s[29]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_22s6dd2wjj.b[2][0]++;cov_22s6dd2wjj.s[30]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[2][1]++;}cov_22s6dd2wjj.s[32]++;\n  if (!request.body.state) {/* istanbul ignore next */cov_22s6dd2wjj.b[3][0]++;cov_22s6dd2wjj.s[33]++;\n    sendStatus(response, 400, 'state not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[3][1]++;}cov_22s6dd2wjj.s[35]++;\n  if (!request.body.hiking) {/* istanbul ignore next */cov_22s6dd2wjj.b[4][0]++;cov_22s6dd2wjj.s[36]++;\n    sendStatus(response, 400, 'hiking info not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[4][1]++;}cov_22s6dd2wjj.s[38]++;\n  if (!request.body.range) {/* istanbul ignore next */cov_22s6dd2wjj.b[5][0]++;cov_22s6dd2wjj.s[39]++;\n    sendStatus(response, 400, 'range name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[40]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[5][1]++;}\n  let mountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[41]++, new Mountain(\n  request.body.name,\n  request.body.state,\n  request.body.hiking,\n  request.body.range)); /* istanbul ignore next */cov_22s6dd2wjj.s[42]++;\n\n\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_22s6dd2wjj.f[7]++;cov_22s6dd2wjj.s[43]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_22s6dd2wjj.f[8]++;cov_22s6dd2wjj.s[44]++;\n    sendStatus(response, 500, error);\n  });\n\n}","timestamp":"2017-12-09T00:02:10.614Z"}
{"level":"info","message":"Responding with a 400 code due to name not found","timestamp":"2017-12-09T00:02:10.614Z"}
{"level":"info","message":"adding a POST url and callback","timestamp":"2017-12-09T00:02:21.235Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-09T00:02:21.236Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[6]++;cov_22s6dd2wjj.s[26]++;\n  if (!request.body) {/* istanbul ignore next */cov_22s6dd2wjj.b[1][0]++;cov_22s6dd2wjj.s[27]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[1][1]++;}cov_22s6dd2wjj.s[29]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_22s6dd2wjj.b[2][0]++;cov_22s6dd2wjj.s[30]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[2][1]++;}cov_22s6dd2wjj.s[32]++;\n  if (!request.body.state) {/* istanbul ignore next */cov_22s6dd2wjj.b[3][0]++;cov_22s6dd2wjj.s[33]++;\n    sendStatus(response, 400, 'state not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[3][1]++;}cov_22s6dd2wjj.s[35]++;\n  if (!request.body.hiking) {/* istanbul ignore next */cov_22s6dd2wjj.b[4][0]++;cov_22s6dd2wjj.s[36]++;\n    sendStatus(response, 400, 'hiking info not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[4][1]++;}cov_22s6dd2wjj.s[38]++;\n  if (!request.body.range) {/* istanbul ignore next */cov_22s6dd2wjj.b[5][0]++;cov_22s6dd2wjj.s[39]++;\n    sendStatus(response, 400, 'range name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[40]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[5][1]++;}\n  let mountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[41]++, new Mountain(\n  request.body.name,\n  request.body.state,\n  request.body.hiking,\n  request.body.range)); /* istanbul ignore next */cov_22s6dd2wjj.s[42]++;\n\n\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_22s6dd2wjj.f[7]++;cov_22s6dd2wjj.s[43]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_22s6dd2wjj.f[8]++;cov_22s6dd2wjj.s[44]++;\n    sendStatus(response, 500, error);\n  });\n\n}","timestamp":"2017-12-09T00:02:21.236Z"}
{"level":"info","message":"adding a GET url and callback","timestamp":"2017-12-09T00:02:21.236Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-09T00:02:21.236Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[9]++;\n  let id = /* istanbul ignore next */(cov_22s6dd2wjj.s[46]++, request.url.query.id); /* istanbul ignore next */cov_22s6dd2wjj.s[47]++;\n\n  if (id) {/* istanbul ignore next */cov_22s6dd2wjj.b[6][0]++;\n    let requestMountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[48]++, getMountainById(id)); /* istanbul ignore next */cov_22s6dd2wjj.s[49]++;\n    if (requestMountain) {/* istanbul ignore next */cov_22s6dd2wjj.b[7][0]++;cov_22s6dd2wjj.s[50]++;\n      sendJSON(response, 200, requestMountain);\n    } else\n      {/* istanbul ignore next */cov_22s6dd2wjj.b[7][1]++;cov_22s6dd2wjj.s[51]++;sendStatus(response, 404, `no mountain found with the id of ${id}`);}\n  } else\n    {/* istanbul ignore next */cov_22s6dd2wjj.b[6][1]++;cov_22s6dd2wjj.s[52]++;sendJSON(response, 200, storage);}\n}","timestamp":"2017-12-09T00:02:21.236Z"}
{"level":"info","message":"adding a DELETE url and callback","timestamp":"2017-12-09T00:02:21.237Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-09T00:02:21.237Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[10]++;\n  let id = /* istanbul ignore next */(cov_22s6dd2wjj.s[54]++, request.url.query.id); /* istanbul ignore next */cov_22s6dd2wjj.s[55]++;\n  storage.deleteItem(id).\n  then(filteredMountains => {/* istanbul ignore next */cov_22s6dd2wjj.f[11]++;cov_22s6dd2wjj.s[56]++;\n    sendJSON(response, 200, filteredMountains);\n  }).\n  catch(error => {/* istanbul ignore next */cov_22s6dd2wjj.f[12]++;cov_22s6dd2wjj.s[57]++;\n    sendStatus(response, 404, error);\n  });\n}","timestamp":"2017-12-09T00:02:21.237Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-09T00:02:21.340Z"}
{"level":"info","message":"Original URL: \"/api/mountains\"","timestamp":"2017-12-09T00:02:21.340Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/mountains\",\"path\":\"/api/mountains\",\"href\":\"/api/mountains\"}","timestamp":"2017-12-09T00:02:21.340Z"}
{"level":"info","message":"found the following handler","timestamp":"2017-12-09T00:02:21.341Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[6]++;cov_22s6dd2wjj.s[26]++;\n  if (!request.body) {/* istanbul ignore next */cov_22s6dd2wjj.b[1][0]++;cov_22s6dd2wjj.s[27]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[1][1]++;}cov_22s6dd2wjj.s[29]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_22s6dd2wjj.b[2][0]++;cov_22s6dd2wjj.s[30]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[2][1]++;}cov_22s6dd2wjj.s[32]++;\n  if (!request.body.state) {/* istanbul ignore next */cov_22s6dd2wjj.b[3][0]++;cov_22s6dd2wjj.s[33]++;\n    sendStatus(response, 400, 'state not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[3][1]++;}cov_22s6dd2wjj.s[35]++;\n  if (!request.body.hiking) {/* istanbul ignore next */cov_22s6dd2wjj.b[4][0]++;cov_22s6dd2wjj.s[36]++;\n    sendStatus(response, 400, 'hiking info not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[4][1]++;}cov_22s6dd2wjj.s[38]++;\n  if (!request.body.range) {/* istanbul ignore next */cov_22s6dd2wjj.b[5][0]++;cov_22s6dd2wjj.s[39]++;\n    sendStatus(response, 400, 'range name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[40]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[5][1]++;}\n  let mountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[41]++, new Mountain(\n  request.body.name,\n  request.body.state,\n  request.body.hiking,\n  request.body.range)); /* istanbul ignore next */cov_22s6dd2wjj.s[42]++;\n\n\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_22s6dd2wjj.f[7]++;cov_22s6dd2wjj.s[43]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_22s6dd2wjj.f[8]++;cov_22s6dd2wjj.s[44]++;\n    sendStatus(response, 500, error);\n  });\n\n}","timestamp":"2017-12-09T00:02:21.341Z"}
{"level":"info","message":"responding with a 200 code and the following json data","timestamp":"2017-12-09T00:02:21.344Z"}
{"id":"3a78ecd0-dc74-11e7-b4c6-f92a8eef496e","name":"Shuksan","state":"Washington","hiking":"Yes","range":"Cascades","level":"info","message":"","timestamp":"2017-12-09T00:02:21.344Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-09T00:02:21.353Z"}
{"level":"info","message":"Original URL: \"/api/mountains\"","timestamp":"2017-12-09T00:02:21.353Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/mountains\",\"path\":\"/api/mountains\",\"href\":\"/api/mountains\"}","timestamp":"2017-12-09T00:02:21.353Z"}
{"level":"info","message":"found the following handler","timestamp":"2017-12-09T00:02:21.353Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[6]++;cov_22s6dd2wjj.s[26]++;\n  if (!request.body) {/* istanbul ignore next */cov_22s6dd2wjj.b[1][0]++;cov_22s6dd2wjj.s[27]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[1][1]++;}cov_22s6dd2wjj.s[29]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_22s6dd2wjj.b[2][0]++;cov_22s6dd2wjj.s[30]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[2][1]++;}cov_22s6dd2wjj.s[32]++;\n  if (!request.body.state) {/* istanbul ignore next */cov_22s6dd2wjj.b[3][0]++;cov_22s6dd2wjj.s[33]++;\n    sendStatus(response, 400, 'state not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[3][1]++;}cov_22s6dd2wjj.s[35]++;\n  if (!request.body.hiking) {/* istanbul ignore next */cov_22s6dd2wjj.b[4][0]++;cov_22s6dd2wjj.s[36]++;\n    sendStatus(response, 400, 'hiking info not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[4][1]++;}cov_22s6dd2wjj.s[38]++;\n  if (!request.body.range) {/* istanbul ignore next */cov_22s6dd2wjj.b[5][0]++;cov_22s6dd2wjj.s[39]++;\n    sendStatus(response, 400, 'range name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[40]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[5][1]++;}\n  let mountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[41]++, new Mountain(\n  request.body.name,\n  request.body.state,\n  request.body.hiking,\n  request.body.range)); /* istanbul ignore next */cov_22s6dd2wjj.s[42]++;\n\n\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_22s6dd2wjj.f[7]++;cov_22s6dd2wjj.s[43]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_22s6dd2wjj.f[8]++;cov_22s6dd2wjj.s[44]++;\n    sendStatus(response, 500, error);\n  });\n\n}","timestamp":"2017-12-09T00:02:21.353Z"}
{"level":"info","message":"responding with a 200 code and the following json data","timestamp":"2017-12-09T00:02:21.354Z"}
{"id":"3a7ac190-dc74-11e7-b4c6-f92a8eef496e","name":"Shuksan","state":"Washington","hiking":"Yes","range":"Cascades","level":"info","message":"","timestamp":"2017-12-09T00:02:21.354Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-09T00:02:21.359Z"}
{"level":"info","message":"Original URL: \"/api/mountains?id=$33333\"","timestamp":"2017-12-09T00:02:21.359Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=$33333\",\"query\":{\"id\":\"$33333\"},\"pathname\":\"/api/mountains\",\"path\":\"/api/mountains?id=$33333\",\"href\":\"/api/mountains?id=$33333\"}","timestamp":"2017-12-09T00:02:21.359Z"}
{"level":"info","message":"found the following handler","timestamp":"2017-12-09T00:02:21.359Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[9]++;\n  let id = /* istanbul ignore next */(cov_22s6dd2wjj.s[46]++, request.url.query.id); /* istanbul ignore next */cov_22s6dd2wjj.s[47]++;\n\n  if (id) {/* istanbul ignore next */cov_22s6dd2wjj.b[6][0]++;\n    let requestMountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[48]++, getMountainById(id)); /* istanbul ignore next */cov_22s6dd2wjj.s[49]++;\n    if (requestMountain) {/* istanbul ignore next */cov_22s6dd2wjj.b[7][0]++;cov_22s6dd2wjj.s[50]++;\n      sendJSON(response, 200, requestMountain);\n    } else\n      {/* istanbul ignore next */cov_22s6dd2wjj.b[7][1]++;cov_22s6dd2wjj.s[51]++;sendStatus(response, 404, `no mountain found with the id of ${id}`);}\n  } else\n    {/* istanbul ignore next */cov_22s6dd2wjj.b[6][1]++;cov_22s6dd2wjj.s[52]++;sendJSON(response, 200, storage);}\n}","timestamp":"2017-12-09T00:02:21.359Z"}
{"level":"info","message":"------>REQUEST_ERROR<------","timestamp":"2017-12-09T00:02:21.359Z"}
{"message":"storage.filter is not a function","stack":"TypeError: storage.filter is not a function\n    at getMountainById (/Users/austriker/Documents/code-fellows/cf-401/labs/08-09-vanilla-rest-server/lab-david/route/mountain-route.js:29:18)\n    at Object.<anonymous>.router.get (/Users/austriker/Documents/code-fellows/cf-401/labs/08-09-vanilla-rest-server/lab-david/route/mountain-route.js:87:78)\n    at requestParser.parse.then.request (/Users/austriker/Documents/code-fellows/cf-401/labs/08-09-vanilla-rest-server/lab-david/lib/router.js:50:87)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-09T00:02:21.360Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-09T00:02:21.363Z"}
{"level":"info","message":"Original URL: \"/api/mountains?e8013d70-dbad-11e7-9cb6-ddffa32a3c9b\"","timestamp":"2017-12-09T00:02:21.363Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?e8013d70-dbad-11e7-9cb6-ddffa32a3c9b\",\"query\":{\"e8013d70-dbad-11e7-9cb6-ddffa32a3c9b\":\"\"},\"pathname\":\"/api/mountains\",\"path\":\"/api/mountains?e8013d70-dbad-11e7-9cb6-ddffa32a3c9b\",\"href\":\"/api/mountains?e8013d70-dbad-11e7-9cb6-ddffa32a3c9b\"}","timestamp":"2017-12-09T00:02:21.363Z"}
{"level":"info","message":"found the following handler","timestamp":"2017-12-09T00:02:21.363Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[9]++;\n  let id = /* istanbul ignore next */(cov_22s6dd2wjj.s[46]++, request.url.query.id); /* istanbul ignore next */cov_22s6dd2wjj.s[47]++;\n\n  if (id) {/* istanbul ignore next */cov_22s6dd2wjj.b[6][0]++;\n    let requestMountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[48]++, getMountainById(id)); /* istanbul ignore next */cov_22s6dd2wjj.s[49]++;\n    if (requestMountain) {/* istanbul ignore next */cov_22s6dd2wjj.b[7][0]++;cov_22s6dd2wjj.s[50]++;\n      sendJSON(response, 200, requestMountain);\n    } else\n      {/* istanbul ignore next */cov_22s6dd2wjj.b[7][1]++;cov_22s6dd2wjj.s[51]++;sendStatus(response, 404, `no mountain found with the id of ${id}`);}\n  } else\n    {/* istanbul ignore next */cov_22s6dd2wjj.b[6][1]++;cov_22s6dd2wjj.s[52]++;sendJSON(response, 200, storage);}\n}","timestamp":"2017-12-09T00:02:21.363Z"}
{"level":"info","message":"responding with a 200 code and the following json data","timestamp":"2017-12-09T00:02:21.363Z"}
{"level":"info","message":"","timestamp":"2017-12-09T00:02:21.363Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-09T00:02:21.364Z"}
{"level":"info","message":"Original URL: \"/api/mountains\"","timestamp":"2017-12-09T00:02:21.364Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/mountains\",\"path\":\"/api/mountains\",\"href\":\"/api/mountains\"}","timestamp":"2017-12-09T00:02:21.364Z"}
{"level":"info","message":"found the following handler","timestamp":"2017-12-09T00:02:21.364Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[6]++;cov_22s6dd2wjj.s[26]++;\n  if (!request.body) {/* istanbul ignore next */cov_22s6dd2wjj.b[1][0]++;cov_22s6dd2wjj.s[27]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[1][1]++;}cov_22s6dd2wjj.s[29]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_22s6dd2wjj.b[2][0]++;cov_22s6dd2wjj.s[30]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[2][1]++;}cov_22s6dd2wjj.s[32]++;\n  if (!request.body.state) {/* istanbul ignore next */cov_22s6dd2wjj.b[3][0]++;cov_22s6dd2wjj.s[33]++;\n    sendStatus(response, 400, 'state not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[3][1]++;}cov_22s6dd2wjj.s[35]++;\n  if (!request.body.hiking) {/* istanbul ignore next */cov_22s6dd2wjj.b[4][0]++;cov_22s6dd2wjj.s[36]++;\n    sendStatus(response, 400, 'hiking info not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[4][1]++;}cov_22s6dd2wjj.s[38]++;\n  if (!request.body.range) {/* istanbul ignore next */cov_22s6dd2wjj.b[5][0]++;cov_22s6dd2wjj.s[39]++;\n    sendStatus(response, 400, 'range name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[40]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[5][1]++;}\n  let mountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[41]++, new Mountain(\n  request.body.name,\n  request.body.state,\n  request.body.hiking,\n  request.body.range)); /* istanbul ignore next */cov_22s6dd2wjj.s[42]++;\n\n\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_22s6dd2wjj.f[7]++;cov_22s6dd2wjj.s[43]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_22s6dd2wjj.f[8]++;cov_22s6dd2wjj.s[44]++;\n    sendStatus(response, 500, error);\n  });\n\n}","timestamp":"2017-12-09T00:02:21.364Z"}
{"level":"info","message":"Responding with a 400 code due to name not found","timestamp":"2017-12-09T00:02:21.365Z"}
{"level":"info","message":"adding a POST url and callback","timestamp":"2017-12-09T00:02:48.069Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-09T00:02:48.070Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[6]++;cov_22s6dd2wjj.s[26]++;\n  if (!request.body) {/* istanbul ignore next */cov_22s6dd2wjj.b[1][0]++;cov_22s6dd2wjj.s[27]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[1][1]++;}cov_22s6dd2wjj.s[29]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_22s6dd2wjj.b[2][0]++;cov_22s6dd2wjj.s[30]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[2][1]++;}cov_22s6dd2wjj.s[32]++;\n  if (!request.body.state) {/* istanbul ignore next */cov_22s6dd2wjj.b[3][0]++;cov_22s6dd2wjj.s[33]++;\n    sendStatus(response, 400, 'state not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[3][1]++;}cov_22s6dd2wjj.s[35]++;\n  if (!request.body.hiking) {/* istanbul ignore next */cov_22s6dd2wjj.b[4][0]++;cov_22s6dd2wjj.s[36]++;\n    sendStatus(response, 400, 'hiking info not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[4][1]++;}cov_22s6dd2wjj.s[38]++;\n  if (!request.body.range) {/* istanbul ignore next */cov_22s6dd2wjj.b[5][0]++;cov_22s6dd2wjj.s[39]++;\n    sendStatus(response, 400, 'range name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[40]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[5][1]++;}\n  let mountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[41]++, new Mountain(\n  request.body.name,\n  request.body.state,\n  request.body.hiking,\n  request.body.range)); /* istanbul ignore next */cov_22s6dd2wjj.s[42]++;\n\n\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_22s6dd2wjj.f[7]++;cov_22s6dd2wjj.s[43]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_22s6dd2wjj.f[8]++;cov_22s6dd2wjj.s[44]++;\n    sendStatus(response, 500, error);\n  });\n\n}","timestamp":"2017-12-09T00:02:48.070Z"}
{"level":"info","message":"adding a GET url and callback","timestamp":"2017-12-09T00:02:48.070Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-09T00:02:48.070Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[9]++;\n  let id = /* istanbul ignore next */(cov_22s6dd2wjj.s[46]++, request.url.query.id); /* istanbul ignore next */cov_22s6dd2wjj.s[47]++;\n\n  if (id) {/* istanbul ignore next */cov_22s6dd2wjj.b[6][0]++;\n    let requestMountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[48]++, getMountainById(id)); /* istanbul ignore next */cov_22s6dd2wjj.s[49]++;\n    if (requestMountain) {/* istanbul ignore next */cov_22s6dd2wjj.b[7][0]++;cov_22s6dd2wjj.s[50]++;\n      sendJSON(response, 200, requestMountain);\n    } else\n      {/* istanbul ignore next */cov_22s6dd2wjj.b[7][1]++;cov_22s6dd2wjj.s[51]++;sendStatus(response, 404, `no mountain found with the id of ${id}`);}\n  } else\n    {/* istanbul ignore next */cov_22s6dd2wjj.b[6][1]++;cov_22s6dd2wjj.s[52]++;sendJSON(response, 200, storage);}\n}","timestamp":"2017-12-09T00:02:48.070Z"}
{"level":"info","message":"adding a DELETE url and callback","timestamp":"2017-12-09T00:02:48.070Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-09T00:02:48.070Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[10]++;\n  let id = /* istanbul ignore next */(cov_22s6dd2wjj.s[54]++, request.url.query.id); /* istanbul ignore next */cov_22s6dd2wjj.s[55]++;\n  storage.deleteItem(id).\n  then(filteredMountains => {/* istanbul ignore next */cov_22s6dd2wjj.f[11]++;cov_22s6dd2wjj.s[56]++;\n    sendJSON(response, 200, filteredMountains);\n  }).\n  catch(error => {/* istanbul ignore next */cov_22s6dd2wjj.f[12]++;cov_22s6dd2wjj.s[57]++;\n    sendStatus(response, 404, error);\n  });\n}","timestamp":"2017-12-09T00:02:48.070Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-09T00:02:48.182Z"}
{"level":"info","message":"Original URL: \"/api/mountains\"","timestamp":"2017-12-09T00:02:48.183Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/mountains\",\"path\":\"/api/mountains\",\"href\":\"/api/mountains\"}","timestamp":"2017-12-09T00:02:48.183Z"}
{"level":"info","message":"found the following handler","timestamp":"2017-12-09T00:02:48.183Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[6]++;cov_22s6dd2wjj.s[26]++;\n  if (!request.body) {/* istanbul ignore next */cov_22s6dd2wjj.b[1][0]++;cov_22s6dd2wjj.s[27]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[1][1]++;}cov_22s6dd2wjj.s[29]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_22s6dd2wjj.b[2][0]++;cov_22s6dd2wjj.s[30]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[2][1]++;}cov_22s6dd2wjj.s[32]++;\n  if (!request.body.state) {/* istanbul ignore next */cov_22s6dd2wjj.b[3][0]++;cov_22s6dd2wjj.s[33]++;\n    sendStatus(response, 400, 'state not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[3][1]++;}cov_22s6dd2wjj.s[35]++;\n  if (!request.body.hiking) {/* istanbul ignore next */cov_22s6dd2wjj.b[4][0]++;cov_22s6dd2wjj.s[36]++;\n    sendStatus(response, 400, 'hiking info not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[4][1]++;}cov_22s6dd2wjj.s[38]++;\n  if (!request.body.range) {/* istanbul ignore next */cov_22s6dd2wjj.b[5][0]++;cov_22s6dd2wjj.s[39]++;\n    sendStatus(response, 400, 'range name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[40]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[5][1]++;}\n  let mountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[41]++, new Mountain(\n  request.body.name,\n  request.body.state,\n  request.body.hiking,\n  request.body.range)); /* istanbul ignore next */cov_22s6dd2wjj.s[42]++;\n\n\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_22s6dd2wjj.f[7]++;cov_22s6dd2wjj.s[43]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_22s6dd2wjj.f[8]++;cov_22s6dd2wjj.s[44]++;\n    sendStatus(response, 500, error);\n  });\n\n}","timestamp":"2017-12-09T00:02:48.183Z"}
{"level":"info","message":"responding with a 200 code and the following json data","timestamp":"2017-12-09T00:02:48.187Z"}
{"id":"4a78d780-dc74-11e7-adfb-5f733380cb52","name":"Shuksan","state":"Washington","hiking":"Yes","range":"Cascades","level":"info","message":"","timestamp":"2017-12-09T00:02:48.187Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-09T00:02:48.195Z"}
{"level":"info","message":"Original URL: \"/api/mountains\"","timestamp":"2017-12-09T00:02:48.195Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/mountains\",\"path\":\"/api/mountains\",\"href\":\"/api/mountains\"}","timestamp":"2017-12-09T00:02:48.195Z"}
{"level":"info","message":"found the following handler","timestamp":"2017-12-09T00:02:48.195Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[6]++;cov_22s6dd2wjj.s[26]++;\n  if (!request.body) {/* istanbul ignore next */cov_22s6dd2wjj.b[1][0]++;cov_22s6dd2wjj.s[27]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[1][1]++;}cov_22s6dd2wjj.s[29]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_22s6dd2wjj.b[2][0]++;cov_22s6dd2wjj.s[30]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[2][1]++;}cov_22s6dd2wjj.s[32]++;\n  if (!request.body.state) {/* istanbul ignore next */cov_22s6dd2wjj.b[3][0]++;cov_22s6dd2wjj.s[33]++;\n    sendStatus(response, 400, 'state not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[3][1]++;}cov_22s6dd2wjj.s[35]++;\n  if (!request.body.hiking) {/* istanbul ignore next */cov_22s6dd2wjj.b[4][0]++;cov_22s6dd2wjj.s[36]++;\n    sendStatus(response, 400, 'hiking info not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[4][1]++;}cov_22s6dd2wjj.s[38]++;\n  if (!request.body.range) {/* istanbul ignore next */cov_22s6dd2wjj.b[5][0]++;cov_22s6dd2wjj.s[39]++;\n    sendStatus(response, 400, 'range name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[40]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[5][1]++;}\n  let mountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[41]++, new Mountain(\n  request.body.name,\n  request.body.state,\n  request.body.hiking,\n  request.body.range)); /* istanbul ignore next */cov_22s6dd2wjj.s[42]++;\n\n\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_22s6dd2wjj.f[7]++;cov_22s6dd2wjj.s[43]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_22s6dd2wjj.f[8]++;cov_22s6dd2wjj.s[44]++;\n    sendStatus(response, 500, error);\n  });\n\n}","timestamp":"2017-12-09T00:02:48.195Z"}
{"level":"info","message":"responding with a 200 code and the following json data","timestamp":"2017-12-09T00:02:48.196Z"}
{"id":"4a7aac40-dc74-11e7-adfb-5f733380cb52","name":"Shuksan","state":"Washington","hiking":"Yes","range":"Cascades","level":"info","message":"","timestamp":"2017-12-09T00:02:48.197Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-09T00:02:48.200Z"}
{"level":"info","message":"Original URL: \"/api/mountains?id=$33333\"","timestamp":"2017-12-09T00:02:48.200Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=$33333\",\"query\":{\"id\":\"$33333\"},\"pathname\":\"/api/mountains\",\"path\":\"/api/mountains?id=$33333\",\"href\":\"/api/mountains?id=$33333\"}","timestamp":"2017-12-09T00:02:48.200Z"}
{"level":"info","message":"found the following handler","timestamp":"2017-12-09T00:02:48.200Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[9]++;\n  let id = /* istanbul ignore next */(cov_22s6dd2wjj.s[46]++, request.url.query.id); /* istanbul ignore next */cov_22s6dd2wjj.s[47]++;\n\n  if (id) {/* istanbul ignore next */cov_22s6dd2wjj.b[6][0]++;\n    let requestMountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[48]++, getMountainById(id)); /* istanbul ignore next */cov_22s6dd2wjj.s[49]++;\n    if (requestMountain) {/* istanbul ignore next */cov_22s6dd2wjj.b[7][0]++;cov_22s6dd2wjj.s[50]++;\n      sendJSON(response, 200, requestMountain);\n    } else\n      {/* istanbul ignore next */cov_22s6dd2wjj.b[7][1]++;cov_22s6dd2wjj.s[51]++;sendStatus(response, 404, `no mountain found with the id of ${id}`);}\n  } else\n    {/* istanbul ignore next */cov_22s6dd2wjj.b[6][1]++;cov_22s6dd2wjj.s[52]++;sendJSON(response, 200, storage);}\n}","timestamp":"2017-12-09T00:02:48.200Z"}
{"level":"info","message":"------>REQUEST_ERROR<------","timestamp":"2017-12-09T00:02:48.201Z"}
{"message":"storage.filter is not a function","stack":"TypeError: storage.filter is not a function\n    at getMountainById (/Users/austriker/Documents/code-fellows/cf-401/labs/08-09-vanilla-rest-server/lab-david/route/mountain-route.js:29:18)\n    at Object.<anonymous>.router.get (/Users/austriker/Documents/code-fellows/cf-401/labs/08-09-vanilla-rest-server/lab-david/route/mountain-route.js:87:78)\n    at requestParser.parse.then.request (/Users/austriker/Documents/code-fellows/cf-401/labs/08-09-vanilla-rest-server/lab-david/lib/router.js:50:87)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-09T00:02:48.201Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-09T00:02:48.204Z"}
{"level":"info","message":"Original URL: \"/api/mountains?e8013d70-dbad-11e7-9cb6-ddffa32a3c9b\"","timestamp":"2017-12-09T00:02:48.204Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?e8013d70-dbad-11e7-9cb6-ddffa32a3c9b\",\"query\":{\"e8013d70-dbad-11e7-9cb6-ddffa32a3c9b\":\"\"},\"pathname\":\"/api/mountains\",\"path\":\"/api/mountains?e8013d70-dbad-11e7-9cb6-ddffa32a3c9b\",\"href\":\"/api/mountains?e8013d70-dbad-11e7-9cb6-ddffa32a3c9b\"}","timestamp":"2017-12-09T00:02:48.204Z"}
{"level":"info","message":"found the following handler","timestamp":"2017-12-09T00:02:48.204Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[9]++;\n  let id = /* istanbul ignore next */(cov_22s6dd2wjj.s[46]++, request.url.query.id); /* istanbul ignore next */cov_22s6dd2wjj.s[47]++;\n\n  if (id) {/* istanbul ignore next */cov_22s6dd2wjj.b[6][0]++;\n    let requestMountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[48]++, getMountainById(id)); /* istanbul ignore next */cov_22s6dd2wjj.s[49]++;\n    if (requestMountain) {/* istanbul ignore next */cov_22s6dd2wjj.b[7][0]++;cov_22s6dd2wjj.s[50]++;\n      sendJSON(response, 200, requestMountain);\n    } else\n      {/* istanbul ignore next */cov_22s6dd2wjj.b[7][1]++;cov_22s6dd2wjj.s[51]++;sendStatus(response, 404, `no mountain found with the id of ${id}`);}\n  } else\n    {/* istanbul ignore next */cov_22s6dd2wjj.b[6][1]++;cov_22s6dd2wjj.s[52]++;sendJSON(response, 200, storage);}\n}","timestamp":"2017-12-09T00:02:48.204Z"}
{"level":"info","message":"responding with a 200 code and the following json data","timestamp":"2017-12-09T00:02:48.204Z"}
{"level":"info","message":"","timestamp":"2017-12-09T00:02:48.204Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-09T00:02:48.206Z"}
{"level":"info","message":"Original URL: \"/api/mountains\"","timestamp":"2017-12-09T00:02:48.206Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/mountains\",\"path\":\"/api/mountains\",\"href\":\"/api/mountains\"}","timestamp":"2017-12-09T00:02:48.206Z"}
{"level":"info","message":"found the following handler","timestamp":"2017-12-09T00:02:48.206Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[6]++;cov_22s6dd2wjj.s[26]++;\n  if (!request.body) {/* istanbul ignore next */cov_22s6dd2wjj.b[1][0]++;cov_22s6dd2wjj.s[27]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[1][1]++;}cov_22s6dd2wjj.s[29]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_22s6dd2wjj.b[2][0]++;cov_22s6dd2wjj.s[30]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[2][1]++;}cov_22s6dd2wjj.s[32]++;\n  if (!request.body.state) {/* istanbul ignore next */cov_22s6dd2wjj.b[3][0]++;cov_22s6dd2wjj.s[33]++;\n    sendStatus(response, 400, 'state not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[3][1]++;}cov_22s6dd2wjj.s[35]++;\n  if (!request.body.hiking) {/* istanbul ignore next */cov_22s6dd2wjj.b[4][0]++;cov_22s6dd2wjj.s[36]++;\n    sendStatus(response, 400, 'hiking info not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[4][1]++;}cov_22s6dd2wjj.s[38]++;\n  if (!request.body.range) {/* istanbul ignore next */cov_22s6dd2wjj.b[5][0]++;cov_22s6dd2wjj.s[39]++;\n    sendStatus(response, 400, 'range name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[40]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[5][1]++;}\n  let mountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[41]++, new Mountain(\n  request.body.name,\n  request.body.state,\n  request.body.hiking,\n  request.body.range)); /* istanbul ignore next */cov_22s6dd2wjj.s[42]++;\n\n\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_22s6dd2wjj.f[7]++;cov_22s6dd2wjj.s[43]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_22s6dd2wjj.f[8]++;cov_22s6dd2wjj.s[44]++;\n    sendStatus(response, 500, error);\n  });\n\n}","timestamp":"2017-12-09T00:02:48.206Z"}
{"level":"info","message":"Responding with a 400 code due to name not found","timestamp":"2017-12-09T00:02:48.206Z"}
{"level":"info","message":"adding a POST url and callback","timestamp":"2017-12-09T00:05:25.067Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-09T00:05:25.068Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[6]++;cov_22s6dd2wjj.s[26]++;\n  if (!request.body) {/* istanbul ignore next */cov_22s6dd2wjj.b[1][0]++;cov_22s6dd2wjj.s[27]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[1][1]++;}cov_22s6dd2wjj.s[29]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_22s6dd2wjj.b[2][0]++;cov_22s6dd2wjj.s[30]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[2][1]++;}cov_22s6dd2wjj.s[32]++;\n  if (!request.body.state) {/* istanbul ignore next */cov_22s6dd2wjj.b[3][0]++;cov_22s6dd2wjj.s[33]++;\n    sendStatus(response, 400, 'state not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[3][1]++;}cov_22s6dd2wjj.s[35]++;\n  if (!request.body.hiking) {/* istanbul ignore next */cov_22s6dd2wjj.b[4][0]++;cov_22s6dd2wjj.s[36]++;\n    sendStatus(response, 400, 'hiking info not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[4][1]++;}cov_22s6dd2wjj.s[38]++;\n  if (!request.body.range) {/* istanbul ignore next */cov_22s6dd2wjj.b[5][0]++;cov_22s6dd2wjj.s[39]++;\n    sendStatus(response, 400, 'range name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[40]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[5][1]++;}\n  let mountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[41]++, new Mountain(\n  request.body.name,\n  request.body.state,\n  request.body.hiking,\n  request.body.range)); /* istanbul ignore next */cov_22s6dd2wjj.s[42]++;\n\n\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_22s6dd2wjj.f[7]++;cov_22s6dd2wjj.s[43]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_22s6dd2wjj.f[8]++;cov_22s6dd2wjj.s[44]++;\n    sendStatus(response, 500, error);\n  });\n\n}","timestamp":"2017-12-09T00:05:25.068Z"}
{"level":"info","message":"adding a GET url and callback","timestamp":"2017-12-09T00:05:25.068Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-09T00:05:25.068Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[9]++;\n  let id = /* istanbul ignore next */(cov_22s6dd2wjj.s[46]++, request.url.query.id); /* istanbul ignore next */cov_22s6dd2wjj.s[47]++;\n\n  if (id) {/* istanbul ignore next */cov_22s6dd2wjj.b[6][0]++;\n    let requestMountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[48]++, getMountainById(id)); /* istanbul ignore next */cov_22s6dd2wjj.s[49]++;\n    if (requestMountain) {/* istanbul ignore next */cov_22s6dd2wjj.b[7][0]++;cov_22s6dd2wjj.s[50]++;\n      sendJSON(response, 200, requestMountain);\n    } else\n      {/* istanbul ignore next */cov_22s6dd2wjj.b[7][1]++;cov_22s6dd2wjj.s[51]++;sendStatus(response, 404, `no mountain found with the id of ${id}`);}\n  } else\n    {/* istanbul ignore next */cov_22s6dd2wjj.b[6][1]++;cov_22s6dd2wjj.s[52]++;sendJSON(response, 200, storage);}\n}","timestamp":"2017-12-09T00:05:25.068Z"}
{"level":"info","message":"adding a DELETE url and callback","timestamp":"2017-12-09T00:05:25.068Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-09T00:05:25.068Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[10]++;\n  let id = /* istanbul ignore next */(cov_22s6dd2wjj.s[54]++, request.url.query.id); /* istanbul ignore next */cov_22s6dd2wjj.s[55]++;\n  storage.deleteItem(id).\n  then(filteredMountains => {/* istanbul ignore next */cov_22s6dd2wjj.f[11]++;cov_22s6dd2wjj.s[56]++;\n    sendJSON(response, 200, filteredMountains);\n  }).\n  catch(error => {/* istanbul ignore next */cov_22s6dd2wjj.f[12]++;cov_22s6dd2wjj.s[57]++;\n    sendStatus(response, 404, error);\n  });\n}","timestamp":"2017-12-09T00:05:25.068Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-09T00:05:25.181Z"}
{"level":"info","message":"Original URL: \"/api/mountains\"","timestamp":"2017-12-09T00:05:25.181Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/mountains\",\"path\":\"/api/mountains\",\"href\":\"/api/mountains\"}","timestamp":"2017-12-09T00:05:25.181Z"}
{"level":"info","message":"found the following handler","timestamp":"2017-12-09T00:05:25.182Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[6]++;cov_22s6dd2wjj.s[26]++;\n  if (!request.body) {/* istanbul ignore next */cov_22s6dd2wjj.b[1][0]++;cov_22s6dd2wjj.s[27]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[1][1]++;}cov_22s6dd2wjj.s[29]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_22s6dd2wjj.b[2][0]++;cov_22s6dd2wjj.s[30]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[2][1]++;}cov_22s6dd2wjj.s[32]++;\n  if (!request.body.state) {/* istanbul ignore next */cov_22s6dd2wjj.b[3][0]++;cov_22s6dd2wjj.s[33]++;\n    sendStatus(response, 400, 'state not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[3][1]++;}cov_22s6dd2wjj.s[35]++;\n  if (!request.body.hiking) {/* istanbul ignore next */cov_22s6dd2wjj.b[4][0]++;cov_22s6dd2wjj.s[36]++;\n    sendStatus(response, 400, 'hiking info not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[4][1]++;}cov_22s6dd2wjj.s[38]++;\n  if (!request.body.range) {/* istanbul ignore next */cov_22s6dd2wjj.b[5][0]++;cov_22s6dd2wjj.s[39]++;\n    sendStatus(response, 400, 'range name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[40]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[5][1]++;}\n  let mountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[41]++, new Mountain(\n  request.body.name,\n  request.body.state,\n  request.body.hiking,\n  request.body.range)); /* istanbul ignore next */cov_22s6dd2wjj.s[42]++;\n\n\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_22s6dd2wjj.f[7]++;cov_22s6dd2wjj.s[43]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_22s6dd2wjj.f[8]++;cov_22s6dd2wjj.s[44]++;\n    sendStatus(response, 500, error);\n  });\n\n}","timestamp":"2017-12-09T00:05:25.182Z"}
{"level":"info","message":"responding with a 200 code and the following json data","timestamp":"2017-12-09T00:05:25.185Z"}
{"id":"a80cfcf0-dc74-11e7-8c2c-7b581071bc0e","name":"Shuksan","state":"Washington","hiking":"Yes","range":"Cascades","level":"info","message":"","timestamp":"2017-12-09T00:05:25.185Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-09T00:05:25.194Z"}
{"level":"info","message":"Original URL: \"/api/mountains\"","timestamp":"2017-12-09T00:05:25.194Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/mountains\",\"path\":\"/api/mountains\",\"href\":\"/api/mountains\"}","timestamp":"2017-12-09T00:05:25.194Z"}
{"level":"info","message":"found the following handler","timestamp":"2017-12-09T00:05:25.195Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[6]++;cov_22s6dd2wjj.s[26]++;\n  if (!request.body) {/* istanbul ignore next */cov_22s6dd2wjj.b[1][0]++;cov_22s6dd2wjj.s[27]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[1][1]++;}cov_22s6dd2wjj.s[29]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_22s6dd2wjj.b[2][0]++;cov_22s6dd2wjj.s[30]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[2][1]++;}cov_22s6dd2wjj.s[32]++;\n  if (!request.body.state) {/* istanbul ignore next */cov_22s6dd2wjj.b[3][0]++;cov_22s6dd2wjj.s[33]++;\n    sendStatus(response, 400, 'state not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[3][1]++;}cov_22s6dd2wjj.s[35]++;\n  if (!request.body.hiking) {/* istanbul ignore next */cov_22s6dd2wjj.b[4][0]++;cov_22s6dd2wjj.s[36]++;\n    sendStatus(response, 400, 'hiking info not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[4][1]++;}cov_22s6dd2wjj.s[38]++;\n  if (!request.body.range) {/* istanbul ignore next */cov_22s6dd2wjj.b[5][0]++;cov_22s6dd2wjj.s[39]++;\n    sendStatus(response, 400, 'range name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[40]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[5][1]++;}\n  let mountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[41]++, new Mountain(\n  request.body.name,\n  request.body.state,\n  request.body.hiking,\n  request.body.range)); /* istanbul ignore next */cov_22s6dd2wjj.s[42]++;\n\n\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_22s6dd2wjj.f[7]++;cov_22s6dd2wjj.s[43]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_22s6dd2wjj.f[8]++;cov_22s6dd2wjj.s[44]++;\n    sendStatus(response, 500, error);\n  });\n\n}","timestamp":"2017-12-09T00:05:25.195Z"}
{"level":"info","message":"responding with a 200 code and the following json data","timestamp":"2017-12-09T00:05:25.196Z"}
{"id":"a80ed1b0-dc74-11e7-8c2c-7b581071bc0e","name":"Shuksan","state":"Washington","hiking":"Yes","range":"Cascades","level":"info","message":"","timestamp":"2017-12-09T00:05:25.196Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-09T00:05:25.200Z"}
{"level":"info","message":"Original URL: \"/api/mountains?id=$33333\"","timestamp":"2017-12-09T00:05:25.200Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=$33333\",\"query\":{\"id\":\"$33333\"},\"pathname\":\"/api/mountains\",\"path\":\"/api/mountains?id=$33333\",\"href\":\"/api/mountains?id=$33333\"}","timestamp":"2017-12-09T00:05:25.200Z"}
{"level":"info","message":"found the following handler","timestamp":"2017-12-09T00:05:25.200Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[9]++;\n  let id = /* istanbul ignore next */(cov_22s6dd2wjj.s[46]++, request.url.query.id); /* istanbul ignore next */cov_22s6dd2wjj.s[47]++;\n\n  if (id) {/* istanbul ignore next */cov_22s6dd2wjj.b[6][0]++;\n    let requestMountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[48]++, getMountainById(id)); /* istanbul ignore next */cov_22s6dd2wjj.s[49]++;\n    if (requestMountain) {/* istanbul ignore next */cov_22s6dd2wjj.b[7][0]++;cov_22s6dd2wjj.s[50]++;\n      sendJSON(response, 200, requestMountain);\n    } else\n      {/* istanbul ignore next */cov_22s6dd2wjj.b[7][1]++;cov_22s6dd2wjj.s[51]++;sendStatus(response, 404, `no mountain found with the id of ${id}`);}\n  } else\n    {/* istanbul ignore next */cov_22s6dd2wjj.b[6][1]++;cov_22s6dd2wjj.s[52]++;sendJSON(response, 200, storage);}\n}","timestamp":"2017-12-09T00:05:25.200Z"}
{"level":"info","message":"------>REQUEST_ERROR<------","timestamp":"2017-12-09T00:05:25.201Z"}
{"message":"storage.filter is not a function","stack":"TypeError: storage.filter is not a function\n    at getMountainById (/Users/austriker/Documents/code-fellows/cf-401/labs/08-09-vanilla-rest-server/lab-david/route/mountain-route.js:29:18)\n    at Object.<anonymous>.router.get (/Users/austriker/Documents/code-fellows/cf-401/labs/08-09-vanilla-rest-server/lab-david/route/mountain-route.js:87:78)\n    at requestParser.parse.then.request (/Users/austriker/Documents/code-fellows/cf-401/labs/08-09-vanilla-rest-server/lab-david/lib/router.js:50:87)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-09T00:05:25.201Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-09T00:05:25.201Z"}
{"level":"info","message":"Original URL: \"/api/mountains?e8013d70-dbad-11e7-9cb6-ddffa32a3c9b\"","timestamp":"2017-12-09T00:05:25.201Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?e8013d70-dbad-11e7-9cb6-ddffa32a3c9b\",\"query\":{\"e8013d70-dbad-11e7-9cb6-ddffa32a3c9b\":\"\"},\"pathname\":\"/api/mountains\",\"path\":\"/api/mountains?e8013d70-dbad-11e7-9cb6-ddffa32a3c9b\",\"href\":\"/api/mountains?e8013d70-dbad-11e7-9cb6-ddffa32a3c9b\"}","timestamp":"2017-12-09T00:05:25.201Z"}
{"level":"info","message":"found the following handler","timestamp":"2017-12-09T00:05:25.201Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[9]++;\n  let id = /* istanbul ignore next */(cov_22s6dd2wjj.s[46]++, request.url.query.id); /* istanbul ignore next */cov_22s6dd2wjj.s[47]++;\n\n  if (id) {/* istanbul ignore next */cov_22s6dd2wjj.b[6][0]++;\n    let requestMountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[48]++, getMountainById(id)); /* istanbul ignore next */cov_22s6dd2wjj.s[49]++;\n    if (requestMountain) {/* istanbul ignore next */cov_22s6dd2wjj.b[7][0]++;cov_22s6dd2wjj.s[50]++;\n      sendJSON(response, 200, requestMountain);\n    } else\n      {/* istanbul ignore next */cov_22s6dd2wjj.b[7][1]++;cov_22s6dd2wjj.s[51]++;sendStatus(response, 404, `no mountain found with the id of ${id}`);}\n  } else\n    {/* istanbul ignore next */cov_22s6dd2wjj.b[6][1]++;cov_22s6dd2wjj.s[52]++;sendJSON(response, 200, storage);}\n}","timestamp":"2017-12-09T00:05:25.201Z"}
{"level":"info","message":"responding with a 200 code and the following json data","timestamp":"2017-12-09T00:05:25.201Z"}
{"level":"info","message":"","timestamp":"2017-12-09T00:05:25.201Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-09T00:05:25.205Z"}
{"level":"info","message":"Original URL: \"/api/mountains\"","timestamp":"2017-12-09T00:05:25.206Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/mountains\",\"path\":\"/api/mountains\",\"href\":\"/api/mountains\"}","timestamp":"2017-12-09T00:05:25.206Z"}
{"level":"info","message":"found the following handler","timestamp":"2017-12-09T00:05:25.206Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[6]++;cov_22s6dd2wjj.s[26]++;\n  if (!request.body) {/* istanbul ignore next */cov_22s6dd2wjj.b[1][0]++;cov_22s6dd2wjj.s[27]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[1][1]++;}cov_22s6dd2wjj.s[29]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_22s6dd2wjj.b[2][0]++;cov_22s6dd2wjj.s[30]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[2][1]++;}cov_22s6dd2wjj.s[32]++;\n  if (!request.body.state) {/* istanbul ignore next */cov_22s6dd2wjj.b[3][0]++;cov_22s6dd2wjj.s[33]++;\n    sendStatus(response, 400, 'state not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[3][1]++;}cov_22s6dd2wjj.s[35]++;\n  if (!request.body.hiking) {/* istanbul ignore next */cov_22s6dd2wjj.b[4][0]++;cov_22s6dd2wjj.s[36]++;\n    sendStatus(response, 400, 'hiking info not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[4][1]++;}cov_22s6dd2wjj.s[38]++;\n  if (!request.body.range) {/* istanbul ignore next */cov_22s6dd2wjj.b[5][0]++;cov_22s6dd2wjj.s[39]++;\n    sendStatus(response, 400, 'range name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[40]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[5][1]++;}\n  let mountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[41]++, new Mountain(\n  request.body.name,\n  request.body.state,\n  request.body.hiking,\n  request.body.range)); /* istanbul ignore next */cov_22s6dd2wjj.s[42]++;\n\n\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_22s6dd2wjj.f[7]++;cov_22s6dd2wjj.s[43]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_22s6dd2wjj.f[8]++;cov_22s6dd2wjj.s[44]++;\n    sendStatus(response, 500, error);\n  });\n\n}","timestamp":"2017-12-09T00:05:25.206Z"}
{"level":"info","message":"Responding with a 400 code due to name not found","timestamp":"2017-12-09T00:05:25.206Z"}
{"level":"info","message":"adding a POST url and callback","timestamp":"2017-12-09T00:06:13.777Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-09T00:06:13.778Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[6]++;cov_22s6dd2wjj.s[26]++;\n  if (!request.body) {/* istanbul ignore next */cov_22s6dd2wjj.b[1][0]++;cov_22s6dd2wjj.s[27]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[1][1]++;}cov_22s6dd2wjj.s[29]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_22s6dd2wjj.b[2][0]++;cov_22s6dd2wjj.s[30]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[2][1]++;}cov_22s6dd2wjj.s[32]++;\n  if (!request.body.state) {/* istanbul ignore next */cov_22s6dd2wjj.b[3][0]++;cov_22s6dd2wjj.s[33]++;\n    sendStatus(response, 400, 'state not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[3][1]++;}cov_22s6dd2wjj.s[35]++;\n  if (!request.body.hiking) {/* istanbul ignore next */cov_22s6dd2wjj.b[4][0]++;cov_22s6dd2wjj.s[36]++;\n    sendStatus(response, 400, 'hiking info not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[4][1]++;}cov_22s6dd2wjj.s[38]++;\n  if (!request.body.range) {/* istanbul ignore next */cov_22s6dd2wjj.b[5][0]++;cov_22s6dd2wjj.s[39]++;\n    sendStatus(response, 400, 'range name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[40]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[5][1]++;}\n  let mountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[41]++, new Mountain(\n  request.body.name,\n  request.body.state,\n  request.body.hiking,\n  request.body.range)); /* istanbul ignore next */cov_22s6dd2wjj.s[42]++;\n\n\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_22s6dd2wjj.f[7]++;cov_22s6dd2wjj.s[43]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_22s6dd2wjj.f[8]++;cov_22s6dd2wjj.s[44]++;\n    sendStatus(response, 500, error);\n  });\n\n}","timestamp":"2017-12-09T00:06:13.778Z"}
{"level":"info","message":"adding a GET url and callback","timestamp":"2017-12-09T00:06:13.778Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-09T00:06:13.778Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[9]++;\n  let id = /* istanbul ignore next */(cov_22s6dd2wjj.s[46]++, request.url.query.id); /* istanbul ignore next */cov_22s6dd2wjj.s[47]++;\n\n  if (id) {/* istanbul ignore next */cov_22s6dd2wjj.b[6][0]++;\n    let requestMountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[48]++, getMountainById(id)); /* istanbul ignore next */cov_22s6dd2wjj.s[49]++;\n    if (requestMountain) {/* istanbul ignore next */cov_22s6dd2wjj.b[7][0]++;cov_22s6dd2wjj.s[50]++;\n      sendJSON(response, 200, requestMountain);\n    } else\n      {/* istanbul ignore next */cov_22s6dd2wjj.b[7][1]++;cov_22s6dd2wjj.s[51]++;sendStatus(response, 404, `no mountain found with the id of ${id}`);}\n  } else\n    {/* istanbul ignore next */cov_22s6dd2wjj.b[6][1]++;cov_22s6dd2wjj.s[52]++;sendJSON(response, 200, storage);}\n}","timestamp":"2017-12-09T00:06:13.778Z"}
{"level":"info","message":"adding a DELETE url and callback","timestamp":"2017-12-09T00:06:13.778Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-09T00:06:13.778Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[10]++;\n  let id = /* istanbul ignore next */(cov_22s6dd2wjj.s[54]++, request.url.query.id); /* istanbul ignore next */cov_22s6dd2wjj.s[55]++;\n  storage.deleteItem(id).\n  then(filteredMountains => {/* istanbul ignore next */cov_22s6dd2wjj.f[11]++;cov_22s6dd2wjj.s[56]++;\n    sendJSON(response, 200, filteredMountains);\n  }).\n  catch(error => {/* istanbul ignore next */cov_22s6dd2wjj.f[12]++;cov_22s6dd2wjj.s[57]++;\n    sendStatus(response, 404, error);\n  });\n}","timestamp":"2017-12-09T00:06:13.778Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-09T00:06:13.878Z"}
{"level":"info","message":"Original URL: \"/api/mountains\"","timestamp":"2017-12-09T00:06:13.879Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/mountains\",\"path\":\"/api/mountains\",\"href\":\"/api/mountains\"}","timestamp":"2017-12-09T00:06:13.879Z"}
{"level":"info","message":"found the following handler","timestamp":"2017-12-09T00:06:13.880Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[6]++;cov_22s6dd2wjj.s[26]++;\n  if (!request.body) {/* istanbul ignore next */cov_22s6dd2wjj.b[1][0]++;cov_22s6dd2wjj.s[27]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[1][1]++;}cov_22s6dd2wjj.s[29]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_22s6dd2wjj.b[2][0]++;cov_22s6dd2wjj.s[30]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[2][1]++;}cov_22s6dd2wjj.s[32]++;\n  if (!request.body.state) {/* istanbul ignore next */cov_22s6dd2wjj.b[3][0]++;cov_22s6dd2wjj.s[33]++;\n    sendStatus(response, 400, 'state not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[3][1]++;}cov_22s6dd2wjj.s[35]++;\n  if (!request.body.hiking) {/* istanbul ignore next */cov_22s6dd2wjj.b[4][0]++;cov_22s6dd2wjj.s[36]++;\n    sendStatus(response, 400, 'hiking info not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[4][1]++;}cov_22s6dd2wjj.s[38]++;\n  if (!request.body.range) {/* istanbul ignore next */cov_22s6dd2wjj.b[5][0]++;cov_22s6dd2wjj.s[39]++;\n    sendStatus(response, 400, 'range name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[40]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[5][1]++;}\n  let mountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[41]++, new Mountain(\n  request.body.name,\n  request.body.state,\n  request.body.hiking,\n  request.body.range)); /* istanbul ignore next */cov_22s6dd2wjj.s[42]++;\n\n\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_22s6dd2wjj.f[7]++;cov_22s6dd2wjj.s[43]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_22s6dd2wjj.f[8]++;cov_22s6dd2wjj.s[44]++;\n    sendStatus(response, 500, error);\n  });\n\n}","timestamp":"2017-12-09T00:06:13.880Z"}
{"level":"info","message":"responding with a 200 code and the following json data","timestamp":"2017-12-09T00:06:13.883Z"}
{"id":"c5138f80-dc74-11e7-907a-75b2ea9b96dc","name":"Shuksan","state":"Washington","hiking":"Yes","range":"Cascades","level":"info","message":"","timestamp":"2017-12-09T00:06:13.883Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-09T00:06:13.891Z"}
{"level":"info","message":"Original URL: \"/api/mountains\"","timestamp":"2017-12-09T00:06:13.891Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/mountains\",\"path\":\"/api/mountains\",\"href\":\"/api/mountains\"}","timestamp":"2017-12-09T00:06:13.892Z"}
{"level":"info","message":"found the following handler","timestamp":"2017-12-09T00:06:13.892Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[6]++;cov_22s6dd2wjj.s[26]++;\n  if (!request.body) {/* istanbul ignore next */cov_22s6dd2wjj.b[1][0]++;cov_22s6dd2wjj.s[27]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[1][1]++;}cov_22s6dd2wjj.s[29]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_22s6dd2wjj.b[2][0]++;cov_22s6dd2wjj.s[30]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[2][1]++;}cov_22s6dd2wjj.s[32]++;\n  if (!request.body.state) {/* istanbul ignore next */cov_22s6dd2wjj.b[3][0]++;cov_22s6dd2wjj.s[33]++;\n    sendStatus(response, 400, 'state not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[3][1]++;}cov_22s6dd2wjj.s[35]++;\n  if (!request.body.hiking) {/* istanbul ignore next */cov_22s6dd2wjj.b[4][0]++;cov_22s6dd2wjj.s[36]++;\n    sendStatus(response, 400, 'hiking info not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[4][1]++;}cov_22s6dd2wjj.s[38]++;\n  if (!request.body.range) {/* istanbul ignore next */cov_22s6dd2wjj.b[5][0]++;cov_22s6dd2wjj.s[39]++;\n    sendStatus(response, 400, 'range name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[40]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[5][1]++;}\n  let mountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[41]++, new Mountain(\n  request.body.name,\n  request.body.state,\n  request.body.hiking,\n  request.body.range)); /* istanbul ignore next */cov_22s6dd2wjj.s[42]++;\n\n\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_22s6dd2wjj.f[7]++;cov_22s6dd2wjj.s[43]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_22s6dd2wjj.f[8]++;cov_22s6dd2wjj.s[44]++;\n    sendStatus(response, 500, error);\n  });\n\n}","timestamp":"2017-12-09T00:06:13.892Z"}
{"level":"info","message":"responding with a 200 code and the following json data","timestamp":"2017-12-09T00:06:13.893Z"}
{"id":"c5156440-dc74-11e7-907a-75b2ea9b96dc","name":"Shuksan","state":"Washington","hiking":"Yes","range":"Cascades","level":"info","message":"","timestamp":"2017-12-09T00:06:13.893Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-09T00:06:13.897Z"}
{"level":"info","message":"Original URL: \"/api/mountains?id=$33333\"","timestamp":"2017-12-09T00:06:13.897Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=$33333\",\"query\":{\"id\":\"$33333\"},\"pathname\":\"/api/mountains\",\"path\":\"/api/mountains?id=$33333\",\"href\":\"/api/mountains?id=$33333\"}","timestamp":"2017-12-09T00:06:13.897Z"}
{"level":"info","message":"found the following handler","timestamp":"2017-12-09T00:06:13.897Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[9]++;\n  let id = /* istanbul ignore next */(cov_22s6dd2wjj.s[46]++, request.url.query.id); /* istanbul ignore next */cov_22s6dd2wjj.s[47]++;\n\n  if (id) {/* istanbul ignore next */cov_22s6dd2wjj.b[6][0]++;\n    let requestMountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[48]++, getMountainById(id)); /* istanbul ignore next */cov_22s6dd2wjj.s[49]++;\n    if (requestMountain) {/* istanbul ignore next */cov_22s6dd2wjj.b[7][0]++;cov_22s6dd2wjj.s[50]++;\n      sendJSON(response, 200, requestMountain);\n    } else\n      {/* istanbul ignore next */cov_22s6dd2wjj.b[7][1]++;cov_22s6dd2wjj.s[51]++;sendStatus(response, 404, `no mountain found with the id of ${id}`);}\n  } else\n    {/* istanbul ignore next */cov_22s6dd2wjj.b[6][1]++;cov_22s6dd2wjj.s[52]++;sendJSON(response, 200, storage);}\n}","timestamp":"2017-12-09T00:06:13.897Z"}
{"level":"info","message":"------>REQUEST_ERROR<------","timestamp":"2017-12-09T00:06:13.898Z"}
{"message":"storage.filter is not a function","stack":"TypeError: storage.filter is not a function\n    at getMountainById (/Users/austriker/Documents/code-fellows/cf-401/labs/08-09-vanilla-rest-server/lab-david/route/mountain-route.js:29:18)\n    at Object.<anonymous>.router.get (/Users/austriker/Documents/code-fellows/cf-401/labs/08-09-vanilla-rest-server/lab-david/route/mountain-route.js:87:78)\n    at requestParser.parse.then.request (/Users/austriker/Documents/code-fellows/cf-401/labs/08-09-vanilla-rest-server/lab-david/lib/router.js:50:87)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-09T00:06:13.898Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-09T00:06:13.901Z"}
{"level":"info","message":"Original URL: \"/api/mountains?e8013d70-dbad-11e7-9cb6-ddffa32a3c9b\"","timestamp":"2017-12-09T00:06:13.901Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?e8013d70-dbad-11e7-9cb6-ddffa32a3c9b\",\"query\":{\"e8013d70-dbad-11e7-9cb6-ddffa32a3c9b\":\"\"},\"pathname\":\"/api/mountains\",\"path\":\"/api/mountains?e8013d70-dbad-11e7-9cb6-ddffa32a3c9b\",\"href\":\"/api/mountains?e8013d70-dbad-11e7-9cb6-ddffa32a3c9b\"}","timestamp":"2017-12-09T00:06:13.901Z"}
{"level":"info","message":"found the following handler","timestamp":"2017-12-09T00:06:13.901Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[9]++;\n  let id = /* istanbul ignore next */(cov_22s6dd2wjj.s[46]++, request.url.query.id); /* istanbul ignore next */cov_22s6dd2wjj.s[47]++;\n\n  if (id) {/* istanbul ignore next */cov_22s6dd2wjj.b[6][0]++;\n    let requestMountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[48]++, getMountainById(id)); /* istanbul ignore next */cov_22s6dd2wjj.s[49]++;\n    if (requestMountain) {/* istanbul ignore next */cov_22s6dd2wjj.b[7][0]++;cov_22s6dd2wjj.s[50]++;\n      sendJSON(response, 200, requestMountain);\n    } else\n      {/* istanbul ignore next */cov_22s6dd2wjj.b[7][1]++;cov_22s6dd2wjj.s[51]++;sendStatus(response, 404, `no mountain found with the id of ${id}`);}\n  } else\n    {/* istanbul ignore next */cov_22s6dd2wjj.b[6][1]++;cov_22s6dd2wjj.s[52]++;sendJSON(response, 200, storage);}\n}","timestamp":"2017-12-09T00:06:13.901Z"}
{"level":"info","message":"responding with a 200 code and the following json data","timestamp":"2017-12-09T00:06:13.901Z"}
{"level":"info","message":"","timestamp":"2017-12-09T00:06:13.901Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-09T00:06:13.902Z"}
{"level":"info","message":"Original URL: \"/api/mountains\"","timestamp":"2017-12-09T00:06:13.902Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/mountains\",\"path\":\"/api/mountains\",\"href\":\"/api/mountains\"}","timestamp":"2017-12-09T00:06:13.902Z"}
{"level":"info","message":"found the following handler","timestamp":"2017-12-09T00:06:13.903Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[6]++;cov_22s6dd2wjj.s[26]++;\n  if (!request.body) {/* istanbul ignore next */cov_22s6dd2wjj.b[1][0]++;cov_22s6dd2wjj.s[27]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[1][1]++;}cov_22s6dd2wjj.s[29]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_22s6dd2wjj.b[2][0]++;cov_22s6dd2wjj.s[30]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[2][1]++;}cov_22s6dd2wjj.s[32]++;\n  if (!request.body.state) {/* istanbul ignore next */cov_22s6dd2wjj.b[3][0]++;cov_22s6dd2wjj.s[33]++;\n    sendStatus(response, 400, 'state not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[3][1]++;}cov_22s6dd2wjj.s[35]++;\n  if (!request.body.hiking) {/* istanbul ignore next */cov_22s6dd2wjj.b[4][0]++;cov_22s6dd2wjj.s[36]++;\n    sendStatus(response, 400, 'hiking info not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[4][1]++;}cov_22s6dd2wjj.s[38]++;\n  if (!request.body.range) {/* istanbul ignore next */cov_22s6dd2wjj.b[5][0]++;cov_22s6dd2wjj.s[39]++;\n    sendStatus(response, 400, 'range name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[40]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[5][1]++;}\n  let mountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[41]++, new Mountain(\n  request.body.name,\n  request.body.state,\n  request.body.hiking,\n  request.body.range)); /* istanbul ignore next */cov_22s6dd2wjj.s[42]++;\n\n\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_22s6dd2wjj.f[7]++;cov_22s6dd2wjj.s[43]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_22s6dd2wjj.f[8]++;cov_22s6dd2wjj.s[44]++;\n    sendStatus(response, 500, error);\n  });\n\n}","timestamp":"2017-12-09T00:06:13.903Z"}
{"level":"info","message":"Responding with a 400 code due to name not found","timestamp":"2017-12-09T00:06:13.903Z"}
{"level":"info","message":"adding a POST url and callback","timestamp":"2017-12-09T00:07:19.850Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-09T00:07:19.850Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[6]++;cov_22s6dd2wjj.s[26]++;\n  if (!request.body) {/* istanbul ignore next */cov_22s6dd2wjj.b[1][0]++;cov_22s6dd2wjj.s[27]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[1][1]++;}cov_22s6dd2wjj.s[29]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_22s6dd2wjj.b[2][0]++;cov_22s6dd2wjj.s[30]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[2][1]++;}cov_22s6dd2wjj.s[32]++;\n  if (!request.body.state) {/* istanbul ignore next */cov_22s6dd2wjj.b[3][0]++;cov_22s6dd2wjj.s[33]++;\n    sendStatus(response, 400, 'state not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[3][1]++;}cov_22s6dd2wjj.s[35]++;\n  if (!request.body.hiking) {/* istanbul ignore next */cov_22s6dd2wjj.b[4][0]++;cov_22s6dd2wjj.s[36]++;\n    sendStatus(response, 400, 'hiking info not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[4][1]++;}cov_22s6dd2wjj.s[38]++;\n  if (!request.body.range) {/* istanbul ignore next */cov_22s6dd2wjj.b[5][0]++;cov_22s6dd2wjj.s[39]++;\n    sendStatus(response, 400, 'range name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[40]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[5][1]++;}\n  let mountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[41]++, new Mountain(\n  request.body.name,\n  request.body.state,\n  request.body.hiking,\n  request.body.range)); /* istanbul ignore next */cov_22s6dd2wjj.s[42]++;\n\n\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_22s6dd2wjj.f[7]++;cov_22s6dd2wjj.s[43]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_22s6dd2wjj.f[8]++;cov_22s6dd2wjj.s[44]++;\n    sendStatus(response, 500, error);\n  });\n\n}","timestamp":"2017-12-09T00:07:19.850Z"}
{"level":"info","message":"adding a GET url and callback","timestamp":"2017-12-09T00:07:19.850Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-09T00:07:19.850Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[9]++;\n  let id = /* istanbul ignore next */(cov_22s6dd2wjj.s[46]++, request.url.query.id); /* istanbul ignore next */cov_22s6dd2wjj.s[47]++;\n\n  if (id) {/* istanbul ignore next */cov_22s6dd2wjj.b[6][0]++;\n    let requestMountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[48]++, getMountainById(id)); /* istanbul ignore next */cov_22s6dd2wjj.s[49]++;\n    if (requestMountain) {/* istanbul ignore next */cov_22s6dd2wjj.b[7][0]++;cov_22s6dd2wjj.s[50]++;\n      sendJSON(response, 200, requestMountain);\n    } else\n      {/* istanbul ignore next */cov_22s6dd2wjj.b[7][1]++;cov_22s6dd2wjj.s[51]++;sendStatus(response, 404, `no mountain found with the id of ${id}`);}\n  } else\n    {/* istanbul ignore next */cov_22s6dd2wjj.b[6][1]++;cov_22s6dd2wjj.s[52]++;sendJSON(response, 200, storage);}\n}","timestamp":"2017-12-09T00:07:19.850Z"}
{"level":"info","message":"adding a DELETE url and callback","timestamp":"2017-12-09T00:07:19.851Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-09T00:07:19.851Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[10]++;\n  let id = /* istanbul ignore next */(cov_22s6dd2wjj.s[54]++, request.url.query.id); /* istanbul ignore next */cov_22s6dd2wjj.s[55]++;\n  storage.deleteItem(id).\n  then(filteredMountains => {/* istanbul ignore next */cov_22s6dd2wjj.f[11]++;cov_22s6dd2wjj.s[56]++;\n    sendJSON(response, 200, filteredMountains);\n  }).\n  catch(error => {/* istanbul ignore next */cov_22s6dd2wjj.f[12]++;cov_22s6dd2wjj.s[57]++;\n    sendStatus(response, 404, error);\n  });\n}","timestamp":"2017-12-09T00:07:19.851Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-09T00:07:19.948Z"}
{"level":"info","message":"Original URL: \"/api/mountains\"","timestamp":"2017-12-09T00:07:19.949Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/mountains\",\"path\":\"/api/mountains\",\"href\":\"/api/mountains\"}","timestamp":"2017-12-09T00:07:19.949Z"}
{"level":"info","message":"found the following handler","timestamp":"2017-12-09T00:07:19.950Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[6]++;cov_22s6dd2wjj.s[26]++;\n  if (!request.body) {/* istanbul ignore next */cov_22s6dd2wjj.b[1][0]++;cov_22s6dd2wjj.s[27]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[1][1]++;}cov_22s6dd2wjj.s[29]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_22s6dd2wjj.b[2][0]++;cov_22s6dd2wjj.s[30]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[2][1]++;}cov_22s6dd2wjj.s[32]++;\n  if (!request.body.state) {/* istanbul ignore next */cov_22s6dd2wjj.b[3][0]++;cov_22s6dd2wjj.s[33]++;\n    sendStatus(response, 400, 'state not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[3][1]++;}cov_22s6dd2wjj.s[35]++;\n  if (!request.body.hiking) {/* istanbul ignore next */cov_22s6dd2wjj.b[4][0]++;cov_22s6dd2wjj.s[36]++;\n    sendStatus(response, 400, 'hiking info not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[4][1]++;}cov_22s6dd2wjj.s[38]++;\n  if (!request.body.range) {/* istanbul ignore next */cov_22s6dd2wjj.b[5][0]++;cov_22s6dd2wjj.s[39]++;\n    sendStatus(response, 400, 'range name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[40]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[5][1]++;}\n  let mountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[41]++, new Mountain(\n  request.body.name,\n  request.body.state,\n  request.body.hiking,\n  request.body.range)); /* istanbul ignore next */cov_22s6dd2wjj.s[42]++;\n\n\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_22s6dd2wjj.f[7]++;cov_22s6dd2wjj.s[43]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_22s6dd2wjj.f[8]++;cov_22s6dd2wjj.s[44]++;\n    sendStatus(response, 500, error);\n  });\n\n}","timestamp":"2017-12-09T00:07:19.950Z"}
{"level":"info","message":"responding with a 200 code and the following json data","timestamp":"2017-12-09T00:07:19.952Z"}
{"id":"ec750ae0-dc74-11e7-b348-4537879aca8e","name":"Shuksan","state":"Washington","hiking":"Yes","range":"Cascades","level":"info","message":"","timestamp":"2017-12-09T00:07:19.953Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-09T00:07:19.962Z"}
{"level":"info","message":"Original URL: \"/api/mountains\"","timestamp":"2017-12-09T00:07:19.962Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/mountains\",\"path\":\"/api/mountains\",\"href\":\"/api/mountains\"}","timestamp":"2017-12-09T00:07:19.962Z"}
{"level":"info","message":"found the following handler","timestamp":"2017-12-09T00:07:19.962Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[6]++;cov_22s6dd2wjj.s[26]++;\n  if (!request.body) {/* istanbul ignore next */cov_22s6dd2wjj.b[1][0]++;cov_22s6dd2wjj.s[27]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[1][1]++;}cov_22s6dd2wjj.s[29]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_22s6dd2wjj.b[2][0]++;cov_22s6dd2wjj.s[30]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[2][1]++;}cov_22s6dd2wjj.s[32]++;\n  if (!request.body.state) {/* istanbul ignore next */cov_22s6dd2wjj.b[3][0]++;cov_22s6dd2wjj.s[33]++;\n    sendStatus(response, 400, 'state not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[3][1]++;}cov_22s6dd2wjj.s[35]++;\n  if (!request.body.hiking) {/* istanbul ignore next */cov_22s6dd2wjj.b[4][0]++;cov_22s6dd2wjj.s[36]++;\n    sendStatus(response, 400, 'hiking info not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[4][1]++;}cov_22s6dd2wjj.s[38]++;\n  if (!request.body.range) {/* istanbul ignore next */cov_22s6dd2wjj.b[5][0]++;cov_22s6dd2wjj.s[39]++;\n    sendStatus(response, 400, 'range name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[40]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[5][1]++;}\n  let mountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[41]++, new Mountain(\n  request.body.name,\n  request.body.state,\n  request.body.hiking,\n  request.body.range)); /* istanbul ignore next */cov_22s6dd2wjj.s[42]++;\n\n\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_22s6dd2wjj.f[7]++;cov_22s6dd2wjj.s[43]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_22s6dd2wjj.f[8]++;cov_22s6dd2wjj.s[44]++;\n    sendStatus(response, 500, error);\n  });\n\n}","timestamp":"2017-12-09T00:07:19.962Z"}
{"level":"info","message":"responding with a 200 code and the following json data","timestamp":"2017-12-09T00:07:19.963Z"}
{"id":"ec76dfa0-dc74-11e7-b348-4537879aca8e","name":"Shuksan","state":"Washington","hiking":"Yes","range":"Cascades","level":"info","message":"","timestamp":"2017-12-09T00:07:19.963Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-09T00:07:19.967Z"}
{"level":"info","message":"Original URL: \"/api/mountains?id=$33333\"","timestamp":"2017-12-09T00:07:19.967Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=$33333\",\"query\":{\"id\":\"$33333\"},\"pathname\":\"/api/mountains\",\"path\":\"/api/mountains?id=$33333\",\"href\":\"/api/mountains?id=$33333\"}","timestamp":"2017-12-09T00:07:19.968Z"}
{"level":"info","message":"found the following handler","timestamp":"2017-12-09T00:07:19.968Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[9]++;\n  let id = /* istanbul ignore next */(cov_22s6dd2wjj.s[46]++, request.url.query.id); /* istanbul ignore next */cov_22s6dd2wjj.s[47]++;\n\n  if (id) {/* istanbul ignore next */cov_22s6dd2wjj.b[6][0]++;\n    let requestMountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[48]++, getMountainById(id)); /* istanbul ignore next */cov_22s6dd2wjj.s[49]++;\n    if (requestMountain) {/* istanbul ignore next */cov_22s6dd2wjj.b[7][0]++;cov_22s6dd2wjj.s[50]++;\n      sendJSON(response, 200, requestMountain);\n    } else\n      {/* istanbul ignore next */cov_22s6dd2wjj.b[7][1]++;cov_22s6dd2wjj.s[51]++;sendStatus(response, 404, `no mountain found with the id of ${id}`);}\n  } else\n    {/* istanbul ignore next */cov_22s6dd2wjj.b[6][1]++;cov_22s6dd2wjj.s[52]++;sendJSON(response, 200, storage);}\n}","timestamp":"2017-12-09T00:07:19.968Z"}
{"level":"info","message":"------>REQUEST_ERROR<------","timestamp":"2017-12-09T00:07:19.968Z"}
{"message":"storage.filter is not a function","stack":"TypeError: storage.filter is not a function\n    at getMountainById (/Users/austriker/Documents/code-fellows/cf-401/labs/08-09-vanilla-rest-server/lab-david/route/mountain-route.js:29:18)\n    at Object.<anonymous>.router.get (/Users/austriker/Documents/code-fellows/cf-401/labs/08-09-vanilla-rest-server/lab-david/route/mountain-route.js:87:78)\n    at requestParser.parse.then.request (/Users/austriker/Documents/code-fellows/cf-401/labs/08-09-vanilla-rest-server/lab-david/lib/router.js:50:87)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-09T00:07:19.968Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-09T00:07:19.969Z"}
{"level":"info","message":"Original URL: \"/api/mountains?e8013d70-dbad-11e7-9cb6-ddffa32a3c9b\"","timestamp":"2017-12-09T00:07:19.969Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?e8013d70-dbad-11e7-9cb6-ddffa32a3c9b\",\"query\":{\"e8013d70-dbad-11e7-9cb6-ddffa32a3c9b\":\"\"},\"pathname\":\"/api/mountains\",\"path\":\"/api/mountains?e8013d70-dbad-11e7-9cb6-ddffa32a3c9b\",\"href\":\"/api/mountains?e8013d70-dbad-11e7-9cb6-ddffa32a3c9b\"}","timestamp":"2017-12-09T00:07:19.969Z"}
{"level":"info","message":"found the following handler","timestamp":"2017-12-09T00:07:19.969Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[9]++;\n  let id = /* istanbul ignore next */(cov_22s6dd2wjj.s[46]++, request.url.query.id); /* istanbul ignore next */cov_22s6dd2wjj.s[47]++;\n\n  if (id) {/* istanbul ignore next */cov_22s6dd2wjj.b[6][0]++;\n    let requestMountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[48]++, getMountainById(id)); /* istanbul ignore next */cov_22s6dd2wjj.s[49]++;\n    if (requestMountain) {/* istanbul ignore next */cov_22s6dd2wjj.b[7][0]++;cov_22s6dd2wjj.s[50]++;\n      sendJSON(response, 200, requestMountain);\n    } else\n      {/* istanbul ignore next */cov_22s6dd2wjj.b[7][1]++;cov_22s6dd2wjj.s[51]++;sendStatus(response, 404, `no mountain found with the id of ${id}`);}\n  } else\n    {/* istanbul ignore next */cov_22s6dd2wjj.b[6][1]++;cov_22s6dd2wjj.s[52]++;sendJSON(response, 200, storage);}\n}","timestamp":"2017-12-09T00:07:19.969Z"}
{"level":"info","message":"responding with a 200 code and the following json data","timestamp":"2017-12-09T00:07:19.969Z"}
{"level":"info","message":"","timestamp":"2017-12-09T00:07:19.969Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-09T00:07:19.974Z"}
{"level":"info","message":"Original URL: \"/api/mountains\"","timestamp":"2017-12-09T00:07:19.974Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/mountains\",\"path\":\"/api/mountains\",\"href\":\"/api/mountains\"}","timestamp":"2017-12-09T00:07:19.974Z"}
{"level":"info","message":"found the following handler","timestamp":"2017-12-09T00:07:19.974Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[6]++;cov_22s6dd2wjj.s[26]++;\n  if (!request.body) {/* istanbul ignore next */cov_22s6dd2wjj.b[1][0]++;cov_22s6dd2wjj.s[27]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[1][1]++;}cov_22s6dd2wjj.s[29]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_22s6dd2wjj.b[2][0]++;cov_22s6dd2wjj.s[30]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[2][1]++;}cov_22s6dd2wjj.s[32]++;\n  if (!request.body.state) {/* istanbul ignore next */cov_22s6dd2wjj.b[3][0]++;cov_22s6dd2wjj.s[33]++;\n    sendStatus(response, 400, 'state not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[3][1]++;}cov_22s6dd2wjj.s[35]++;\n  if (!request.body.hiking) {/* istanbul ignore next */cov_22s6dd2wjj.b[4][0]++;cov_22s6dd2wjj.s[36]++;\n    sendStatus(response, 400, 'hiking info not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[4][1]++;}cov_22s6dd2wjj.s[38]++;\n  if (!request.body.range) {/* istanbul ignore next */cov_22s6dd2wjj.b[5][0]++;cov_22s6dd2wjj.s[39]++;\n    sendStatus(response, 400, 'range name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[40]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[5][1]++;}\n  let mountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[41]++, new Mountain(\n  request.body.name,\n  request.body.state,\n  request.body.hiking,\n  request.body.range)); /* istanbul ignore next */cov_22s6dd2wjj.s[42]++;\n\n\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_22s6dd2wjj.f[7]++;cov_22s6dd2wjj.s[43]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_22s6dd2wjj.f[8]++;cov_22s6dd2wjj.s[44]++;\n    sendStatus(response, 500, error);\n  });\n\n}","timestamp":"2017-12-09T00:07:19.974Z"}
{"level":"info","message":"Responding with a 400 code due to name not found","timestamp":"2017-12-09T00:07:19.974Z"}
{"level":"info","message":"adding a POST url and callback","timestamp":"2017-12-09T00:14:56.367Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-09T00:14:56.367Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[5]++;cov_22s6dd2wjj.s[25]++;\n  if (!request.body) {/* istanbul ignore next */cov_22s6dd2wjj.b[1][0]++;cov_22s6dd2wjj.s[26]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[1][1]++;}cov_22s6dd2wjj.s[28]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_22s6dd2wjj.b[2][0]++;cov_22s6dd2wjj.s[29]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[30]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[2][1]++;}cov_22s6dd2wjj.s[31]++;\n  if (!request.body.state) {/* istanbul ignore next */cov_22s6dd2wjj.b[3][0]++;cov_22s6dd2wjj.s[32]++;\n    sendStatus(response, 400, 'state not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[3][1]++;}cov_22s6dd2wjj.s[34]++;\n  if (!request.body.hiking) {/* istanbul ignore next */cov_22s6dd2wjj.b[4][0]++;cov_22s6dd2wjj.s[35]++;\n    sendStatus(response, 400, 'hiking info not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[36]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[4][1]++;}cov_22s6dd2wjj.s[37]++;\n  if (!request.body.range) {/* istanbul ignore next */cov_22s6dd2wjj.b[5][0]++;cov_22s6dd2wjj.s[38]++;\n    sendStatus(response, 400, 'range name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[39]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[5][1]++;}\n  let mountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[40]++, new Mountain(\n  request.body.name,\n  request.body.state,\n  request.body.hiking,\n  request.body.range)); /* istanbul ignore next */cov_22s6dd2wjj.s[41]++;\n\n\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_22s6dd2wjj.f[6]++;cov_22s6dd2wjj.s[42]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_22s6dd2wjj.f[7]++;cov_22s6dd2wjj.s[43]++;\n    sendStatus(response, 500, error);\n  });\n\n}","timestamp":"2017-12-09T00:14:56.367Z"}
{"level":"info","message":"adding a GET url and callback","timestamp":"2017-12-09T00:14:56.367Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-09T00:14:56.367Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[8]++;\n  let id = /* istanbul ignore next */(cov_22s6dd2wjj.s[45]++, request.url.query.id); /* istanbul ignore next */cov_22s6dd2wjj.s[46]++;\n\n  if (id) {/* istanbul ignore next */cov_22s6dd2wjj.b[6][0]++;\n    let requestMountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[47]++, getMountainById(id)); /* istanbul ignore next */cov_22s6dd2wjj.s[48]++;\n    if (requestMountain) {/* istanbul ignore next */cov_22s6dd2wjj.b[7][0]++;cov_22s6dd2wjj.s[49]++;\n      sendJSON(response, 200, requestMountain);\n    } else\n      {/* istanbul ignore next */cov_22s6dd2wjj.b[7][1]++;cov_22s6dd2wjj.s[50]++;sendStatus(response, 404, `no mountain found with the id of ${id}`);}\n  } else\n    {/* istanbul ignore next */cov_22s6dd2wjj.b[6][1]++;cov_22s6dd2wjj.s[51]++;sendJSON(response, 200, storage);}\n}","timestamp":"2017-12-09T00:14:56.367Z"}
{"level":"info","message":"adding a DELETE url and callback","timestamp":"2017-12-09T00:14:56.368Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-09T00:14:56.368Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[9]++;\n  let id = /* istanbul ignore next */(cov_22s6dd2wjj.s[53]++, request.url.query.id); /* istanbul ignore next */cov_22s6dd2wjj.s[54]++;\n  storage.deleteItem(id).\n  then(filteredMountains => {/* istanbul ignore next */cov_22s6dd2wjj.f[10]++;cov_22s6dd2wjj.s[55]++;\n    sendJSON(response, 200, filteredMountains);\n  }).\n  catch(error => {/* istanbul ignore next */cov_22s6dd2wjj.f[11]++;cov_22s6dd2wjj.s[56]++;\n    sendStatus(response, 404, error);\n  });\n}","timestamp":"2017-12-09T00:14:56.368Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-09T00:14:56.474Z"}
{"level":"info","message":"Original URL: \"/api/mountains\"","timestamp":"2017-12-09T00:14:56.474Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/mountains\",\"path\":\"/api/mountains\",\"href\":\"/api/mountains\"}","timestamp":"2017-12-09T00:14:56.474Z"}
{"level":"info","message":"found the following handler","timestamp":"2017-12-09T00:14:56.475Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[5]++;cov_22s6dd2wjj.s[25]++;\n  if (!request.body) {/* istanbul ignore next */cov_22s6dd2wjj.b[1][0]++;cov_22s6dd2wjj.s[26]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[1][1]++;}cov_22s6dd2wjj.s[28]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_22s6dd2wjj.b[2][0]++;cov_22s6dd2wjj.s[29]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[30]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[2][1]++;}cov_22s6dd2wjj.s[31]++;\n  if (!request.body.state) {/* istanbul ignore next */cov_22s6dd2wjj.b[3][0]++;cov_22s6dd2wjj.s[32]++;\n    sendStatus(response, 400, 'state not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[3][1]++;}cov_22s6dd2wjj.s[34]++;\n  if (!request.body.hiking) {/* istanbul ignore next */cov_22s6dd2wjj.b[4][0]++;cov_22s6dd2wjj.s[35]++;\n    sendStatus(response, 400, 'hiking info not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[36]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[4][1]++;}cov_22s6dd2wjj.s[37]++;\n  if (!request.body.range) {/* istanbul ignore next */cov_22s6dd2wjj.b[5][0]++;cov_22s6dd2wjj.s[38]++;\n    sendStatus(response, 400, 'range name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[39]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[5][1]++;}\n  let mountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[40]++, new Mountain(\n  request.body.name,\n  request.body.state,\n  request.body.hiking,\n  request.body.range)); /* istanbul ignore next */cov_22s6dd2wjj.s[41]++;\n\n\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_22s6dd2wjj.f[6]++;cov_22s6dd2wjj.s[42]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_22s6dd2wjj.f[7]++;cov_22s6dd2wjj.s[43]++;\n    sendStatus(response, 500, error);\n  });\n\n}","timestamp":"2017-12-09T00:14:56.475Z"}
{"level":"info","message":"responding with a 200 code and the following json data","timestamp":"2017-12-09T00:14:56.478Z"}
{"id":"fc913ab0-dc75-11e7-becd-b5884197b0af","name":"Shuksan","state":"Washington","hiking":"Yes","range":"Cascades","level":"info","message":"","timestamp":"2017-12-09T00:14:56.478Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-09T00:14:56.487Z"}
{"level":"info","message":"Original URL: \"/api/mountains\"","timestamp":"2017-12-09T00:14:56.487Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/mountains\",\"path\":\"/api/mountains\",\"href\":\"/api/mountains\"}","timestamp":"2017-12-09T00:14:56.487Z"}
{"level":"info","message":"found the following handler","timestamp":"2017-12-09T00:14:56.487Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[5]++;cov_22s6dd2wjj.s[25]++;\n  if (!request.body) {/* istanbul ignore next */cov_22s6dd2wjj.b[1][0]++;cov_22s6dd2wjj.s[26]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[1][1]++;}cov_22s6dd2wjj.s[28]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_22s6dd2wjj.b[2][0]++;cov_22s6dd2wjj.s[29]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[30]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[2][1]++;}cov_22s6dd2wjj.s[31]++;\n  if (!request.body.state) {/* istanbul ignore next */cov_22s6dd2wjj.b[3][0]++;cov_22s6dd2wjj.s[32]++;\n    sendStatus(response, 400, 'state not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[3][1]++;}cov_22s6dd2wjj.s[34]++;\n  if (!request.body.hiking) {/* istanbul ignore next */cov_22s6dd2wjj.b[4][0]++;cov_22s6dd2wjj.s[35]++;\n    sendStatus(response, 400, 'hiking info not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[36]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[4][1]++;}cov_22s6dd2wjj.s[37]++;\n  if (!request.body.range) {/* istanbul ignore next */cov_22s6dd2wjj.b[5][0]++;cov_22s6dd2wjj.s[38]++;\n    sendStatus(response, 400, 'range name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[39]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[5][1]++;}\n  let mountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[40]++, new Mountain(\n  request.body.name,\n  request.body.state,\n  request.body.hiking,\n  request.body.range)); /* istanbul ignore next */cov_22s6dd2wjj.s[41]++;\n\n\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_22s6dd2wjj.f[6]++;cov_22s6dd2wjj.s[42]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_22s6dd2wjj.f[7]++;cov_22s6dd2wjj.s[43]++;\n    sendStatus(response, 500, error);\n  });\n\n}","timestamp":"2017-12-09T00:14:56.487Z"}
{"level":"info","message":"responding with a 200 code and the following json data","timestamp":"2017-12-09T00:14:56.488Z"}
{"id":"fc930f70-dc75-11e7-becd-b5884197b0af","name":"Shuksan","state":"Washington","hiking":"Yes","range":"Cascades","level":"info","message":"","timestamp":"2017-12-09T00:14:56.488Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-09T00:14:56.492Z"}
{"level":"info","message":"Original URL: \"/api/mountains?id=$33333\"","timestamp":"2017-12-09T00:14:56.492Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=$33333\",\"query\":{\"id\":\"$33333\"},\"pathname\":\"/api/mountains\",\"path\":\"/api/mountains?id=$33333\",\"href\":\"/api/mountains?id=$33333\"}","timestamp":"2017-12-09T00:14:56.492Z"}
{"level":"info","message":"found the following handler","timestamp":"2017-12-09T00:14:56.493Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[8]++;\n  let id = /* istanbul ignore next */(cov_22s6dd2wjj.s[45]++, request.url.query.id); /* istanbul ignore next */cov_22s6dd2wjj.s[46]++;\n\n  if (id) {/* istanbul ignore next */cov_22s6dd2wjj.b[6][0]++;\n    let requestMountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[47]++, getMountainById(id)); /* istanbul ignore next */cov_22s6dd2wjj.s[48]++;\n    if (requestMountain) {/* istanbul ignore next */cov_22s6dd2wjj.b[7][0]++;cov_22s6dd2wjj.s[49]++;\n      sendJSON(response, 200, requestMountain);\n    } else\n      {/* istanbul ignore next */cov_22s6dd2wjj.b[7][1]++;cov_22s6dd2wjj.s[50]++;sendStatus(response, 404, `no mountain found with the id of ${id}`);}\n  } else\n    {/* istanbul ignore next */cov_22s6dd2wjj.b[6][1]++;cov_22s6dd2wjj.s[51]++;sendJSON(response, 200, storage);}\n}","timestamp":"2017-12-09T00:14:56.493Z"}
{"level":"info","message":"responding with a 200 code and the following json data","timestamp":"2017-12-09T00:14:56.493Z"}
{"level":"info","message":"Promise { <pending> }","timestamp":"2017-12-09T00:14:56.493Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-09T00:14:56.494Z"}
{"level":"info","message":"Original URL: \"/api/mountains?e8013d70-dbad-11e7-9cb6-ddffa32a3c9b\"","timestamp":"2017-12-09T00:14:56.494Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?e8013d70-dbad-11e7-9cb6-ddffa32a3c9b\",\"query\":{\"e8013d70-dbad-11e7-9cb6-ddffa32a3c9b\":\"\"},\"pathname\":\"/api/mountains\",\"path\":\"/api/mountains?e8013d70-dbad-11e7-9cb6-ddffa32a3c9b\",\"href\":\"/api/mountains?e8013d70-dbad-11e7-9cb6-ddffa32a3c9b\"}","timestamp":"2017-12-09T00:14:56.494Z"}
{"level":"info","message":"found the following handler","timestamp":"2017-12-09T00:14:56.494Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[8]++;\n  let id = /* istanbul ignore next */(cov_22s6dd2wjj.s[45]++, request.url.query.id); /* istanbul ignore next */cov_22s6dd2wjj.s[46]++;\n\n  if (id) {/* istanbul ignore next */cov_22s6dd2wjj.b[6][0]++;\n    let requestMountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[47]++, getMountainById(id)); /* istanbul ignore next */cov_22s6dd2wjj.s[48]++;\n    if (requestMountain) {/* istanbul ignore next */cov_22s6dd2wjj.b[7][0]++;cov_22s6dd2wjj.s[49]++;\n      sendJSON(response, 200, requestMountain);\n    } else\n      {/* istanbul ignore next */cov_22s6dd2wjj.b[7][1]++;cov_22s6dd2wjj.s[50]++;sendStatus(response, 404, `no mountain found with the id of ${id}`);}\n  } else\n    {/* istanbul ignore next */cov_22s6dd2wjj.b[6][1]++;cov_22s6dd2wjj.s[51]++;sendJSON(response, 200, storage);}\n}","timestamp":"2017-12-09T00:14:56.494Z"}
{"level":"info","message":"responding with a 200 code and the following json data","timestamp":"2017-12-09T00:14:56.494Z"}
{"level":"info","message":"","timestamp":"2017-12-09T00:14:56.494Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-09T00:14:56.497Z"}
{"level":"info","message":"Original URL: \"/api/mountains\"","timestamp":"2017-12-09T00:14:56.497Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/mountains\",\"path\":\"/api/mountains\",\"href\":\"/api/mountains\"}","timestamp":"2017-12-09T00:14:56.497Z"}
{"level":"info","message":"found the following handler","timestamp":"2017-12-09T00:14:56.498Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[5]++;cov_22s6dd2wjj.s[25]++;\n  if (!request.body) {/* istanbul ignore next */cov_22s6dd2wjj.b[1][0]++;cov_22s6dd2wjj.s[26]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[1][1]++;}cov_22s6dd2wjj.s[28]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_22s6dd2wjj.b[2][0]++;cov_22s6dd2wjj.s[29]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[30]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[2][1]++;}cov_22s6dd2wjj.s[31]++;\n  if (!request.body.state) {/* istanbul ignore next */cov_22s6dd2wjj.b[3][0]++;cov_22s6dd2wjj.s[32]++;\n    sendStatus(response, 400, 'state not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[3][1]++;}cov_22s6dd2wjj.s[34]++;\n  if (!request.body.hiking) {/* istanbul ignore next */cov_22s6dd2wjj.b[4][0]++;cov_22s6dd2wjj.s[35]++;\n    sendStatus(response, 400, 'hiking info not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[36]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[4][1]++;}cov_22s6dd2wjj.s[37]++;\n  if (!request.body.range) {/* istanbul ignore next */cov_22s6dd2wjj.b[5][0]++;cov_22s6dd2wjj.s[38]++;\n    sendStatus(response, 400, 'range name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[39]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[5][1]++;}\n  let mountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[40]++, new Mountain(\n  request.body.name,\n  request.body.state,\n  request.body.hiking,\n  request.body.range)); /* istanbul ignore next */cov_22s6dd2wjj.s[41]++;\n\n\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_22s6dd2wjj.f[6]++;cov_22s6dd2wjj.s[42]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_22s6dd2wjj.f[7]++;cov_22s6dd2wjj.s[43]++;\n    sendStatus(response, 500, error);\n  });\n\n}","timestamp":"2017-12-09T00:14:56.498Z"}
{"level":"info","message":"Responding with a 400 code due to name not found","timestamp":"2017-12-09T00:14:56.498Z"}
{"level":"info","message":"adding a POST url and callback","timestamp":"2017-12-09T00:34:15.429Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-09T00:34:15.430Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[5]++;cov_22s6dd2wjj.s[25]++;\n  if (!request.body) {/* istanbul ignore next */cov_22s6dd2wjj.b[1][0]++;cov_22s6dd2wjj.s[26]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[1][1]++;}cov_22s6dd2wjj.s[28]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_22s6dd2wjj.b[2][0]++;cov_22s6dd2wjj.s[29]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[30]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[2][1]++;}cov_22s6dd2wjj.s[31]++;\n  if (!request.body.state) {/* istanbul ignore next */cov_22s6dd2wjj.b[3][0]++;cov_22s6dd2wjj.s[32]++;\n    sendStatus(response, 400, 'state not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[3][1]++;}cov_22s6dd2wjj.s[34]++;\n  if (!request.body.hiking) {/* istanbul ignore next */cov_22s6dd2wjj.b[4][0]++;cov_22s6dd2wjj.s[35]++;\n    sendStatus(response, 400, 'hiking info not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[36]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[4][1]++;}cov_22s6dd2wjj.s[37]++;\n  if (!request.body.range) {/* istanbul ignore next */cov_22s6dd2wjj.b[5][0]++;cov_22s6dd2wjj.s[38]++;\n    sendStatus(response, 400, 'range name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[39]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[5][1]++;}\n  let mountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[40]++, new Mountain(\n  request.body.name,\n  request.body.state,\n  request.body.hiking,\n  request.body.range)); /* istanbul ignore next */cov_22s6dd2wjj.s[41]++;\n\n\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_22s6dd2wjj.f[6]++;cov_22s6dd2wjj.s[42]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_22s6dd2wjj.f[7]++;cov_22s6dd2wjj.s[43]++;\n    sendStatus(response, 500, error);\n  });\n\n}","timestamp":"2017-12-09T00:34:15.430Z"}
{"level":"info","message":"adding a GET url and callback","timestamp":"2017-12-09T00:34:15.430Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-09T00:34:15.430Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[8]++;\n  let id = /* istanbul ignore next */(cov_22s6dd2wjj.s[45]++, request.url.query.id); /* istanbul ignore next */cov_22s6dd2wjj.s[46]++;\n\n  if (id) {/* istanbul ignore next */cov_22s6dd2wjj.b[6][0]++;\n    let requestMountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[47]++, getMountainById(id)); /* istanbul ignore next */cov_22s6dd2wjj.s[48]++;\n    if (requestMountain) {/* istanbul ignore next */cov_22s6dd2wjj.b[7][0]++;cov_22s6dd2wjj.s[49]++;\n      sendJSON(response, 200, requestMountain);\n    } else\n      {/* istanbul ignore next */cov_22s6dd2wjj.b[7][1]++;cov_22s6dd2wjj.s[50]++;sendStatus(response, 404, `no mountain found with the id of ${id}`);}\n  } else\n    {/* istanbul ignore next */cov_22s6dd2wjj.b[6][1]++;cov_22s6dd2wjj.s[51]++;sendJSON(response, 200, storage);}\n}","timestamp":"2017-12-09T00:34:15.430Z"}
{"level":"info","message":"adding a DELETE url and callback","timestamp":"2017-12-09T00:34:15.430Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-09T00:34:15.430Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[9]++;\n  let id = /* istanbul ignore next */(cov_22s6dd2wjj.s[53]++, request.url.query.id); /* istanbul ignore next */cov_22s6dd2wjj.s[54]++;\n  storage.deleteItem(id).\n  then(filteredMountains => {/* istanbul ignore next */cov_22s6dd2wjj.f[10]++;cov_22s6dd2wjj.s[55]++;\n    sendJSON(response, 200, filteredMountains);\n  }).\n  catch(error => {/* istanbul ignore next */cov_22s6dd2wjj.f[11]++;cov_22s6dd2wjj.s[56]++;\n    sendStatus(response, 404, error);\n  });\n}","timestamp":"2017-12-09T00:34:15.430Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-09T00:34:15.548Z"}
{"level":"info","message":"Original URL: \"/api/mountains\"","timestamp":"2017-12-09T00:34:15.548Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/mountains\",\"path\":\"/api/mountains\",\"href\":\"/api/mountains\"}","timestamp":"2017-12-09T00:34:15.548Z"}
{"level":"info","message":"found the following handler","timestamp":"2017-12-09T00:34:15.549Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[5]++;cov_22s6dd2wjj.s[25]++;\n  if (!request.body) {/* istanbul ignore next */cov_22s6dd2wjj.b[1][0]++;cov_22s6dd2wjj.s[26]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[1][1]++;}cov_22s6dd2wjj.s[28]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_22s6dd2wjj.b[2][0]++;cov_22s6dd2wjj.s[29]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[30]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[2][1]++;}cov_22s6dd2wjj.s[31]++;\n  if (!request.body.state) {/* istanbul ignore next */cov_22s6dd2wjj.b[3][0]++;cov_22s6dd2wjj.s[32]++;\n    sendStatus(response, 400, 'state not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[3][1]++;}cov_22s6dd2wjj.s[34]++;\n  if (!request.body.hiking) {/* istanbul ignore next */cov_22s6dd2wjj.b[4][0]++;cov_22s6dd2wjj.s[35]++;\n    sendStatus(response, 400, 'hiking info not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[36]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[4][1]++;}cov_22s6dd2wjj.s[37]++;\n  if (!request.body.range) {/* istanbul ignore next */cov_22s6dd2wjj.b[5][0]++;cov_22s6dd2wjj.s[38]++;\n    sendStatus(response, 400, 'range name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[39]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[5][1]++;}\n  let mountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[40]++, new Mountain(\n  request.body.name,\n  request.body.state,\n  request.body.hiking,\n  request.body.range)); /* istanbul ignore next */cov_22s6dd2wjj.s[41]++;\n\n\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_22s6dd2wjj.f[6]++;cov_22s6dd2wjj.s[42]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_22s6dd2wjj.f[7]++;cov_22s6dd2wjj.s[43]++;\n    sendStatus(response, 500, error);\n  });\n\n}","timestamp":"2017-12-09T00:34:15.549Z"}
{"level":"info","message":"responding with a 200 code and the following json data","timestamp":"2017-12-09T00:34:15.552Z"}
{"id":"af6de2d0-dc78-11e7-82ff-ef0500acc00d","name":"Shuksan","state":"Washington","hiking":"Yes","range":"Cascades","level":"info","message":"","timestamp":"2017-12-09T00:34:15.552Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-09T00:34:15.561Z"}
{"level":"info","message":"Original URL: \"/api/mountains\"","timestamp":"2017-12-09T00:34:15.561Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/mountains\",\"path\":\"/api/mountains\",\"href\":\"/api/mountains\"}","timestamp":"2017-12-09T00:34:15.561Z"}
{"level":"info","message":"found the following handler","timestamp":"2017-12-09T00:34:15.561Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[5]++;cov_22s6dd2wjj.s[25]++;\n  if (!request.body) {/* istanbul ignore next */cov_22s6dd2wjj.b[1][0]++;cov_22s6dd2wjj.s[26]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[1][1]++;}cov_22s6dd2wjj.s[28]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_22s6dd2wjj.b[2][0]++;cov_22s6dd2wjj.s[29]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[30]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[2][1]++;}cov_22s6dd2wjj.s[31]++;\n  if (!request.body.state) {/* istanbul ignore next */cov_22s6dd2wjj.b[3][0]++;cov_22s6dd2wjj.s[32]++;\n    sendStatus(response, 400, 'state not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[3][1]++;}cov_22s6dd2wjj.s[34]++;\n  if (!request.body.hiking) {/* istanbul ignore next */cov_22s6dd2wjj.b[4][0]++;cov_22s6dd2wjj.s[35]++;\n    sendStatus(response, 400, 'hiking info not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[36]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[4][1]++;}cov_22s6dd2wjj.s[37]++;\n  if (!request.body.range) {/* istanbul ignore next */cov_22s6dd2wjj.b[5][0]++;cov_22s6dd2wjj.s[38]++;\n    sendStatus(response, 400, 'range name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[39]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[5][1]++;}\n  let mountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[40]++, new Mountain(\n  request.body.name,\n  request.body.state,\n  request.body.hiking,\n  request.body.range)); /* istanbul ignore next */cov_22s6dd2wjj.s[41]++;\n\n\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_22s6dd2wjj.f[6]++;cov_22s6dd2wjj.s[42]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_22s6dd2wjj.f[7]++;cov_22s6dd2wjj.s[43]++;\n    sendStatus(response, 500, error);\n  });\n\n}","timestamp":"2017-12-09T00:34:15.561Z"}
{"level":"info","message":"responding with a 200 code and the following json data","timestamp":"2017-12-09T00:34:15.562Z"}
{"id":"af6fb790-dc78-11e7-82ff-ef0500acc00d","name":"Shuksan","state":"Washington","hiking":"Yes","range":"Cascades","level":"info","message":"","timestamp":"2017-12-09T00:34:15.562Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-09T00:34:15.566Z"}
{"level":"info","message":"Original URL: \"/api/mountains?id=$33333\"","timestamp":"2017-12-09T00:34:15.566Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=$33333\",\"query\":{\"id\":\"$33333\"},\"pathname\":\"/api/mountains\",\"path\":\"/api/mountains?id=$33333\",\"href\":\"/api/mountains?id=$33333\"}","timestamp":"2017-12-09T00:34:15.567Z"}
{"level":"info","message":"found the following handler","timestamp":"2017-12-09T00:34:15.567Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[8]++;\n  let id = /* istanbul ignore next */(cov_22s6dd2wjj.s[45]++, request.url.query.id); /* istanbul ignore next */cov_22s6dd2wjj.s[46]++;\n\n  if (id) {/* istanbul ignore next */cov_22s6dd2wjj.b[6][0]++;\n    let requestMountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[47]++, getMountainById(id)); /* istanbul ignore next */cov_22s6dd2wjj.s[48]++;\n    if (requestMountain) {/* istanbul ignore next */cov_22s6dd2wjj.b[7][0]++;cov_22s6dd2wjj.s[49]++;\n      sendJSON(response, 200, requestMountain);\n    } else\n      {/* istanbul ignore next */cov_22s6dd2wjj.b[7][1]++;cov_22s6dd2wjj.s[50]++;sendStatus(response, 404, `no mountain found with the id of ${id}`);}\n  } else\n    {/* istanbul ignore next */cov_22s6dd2wjj.b[6][1]++;cov_22s6dd2wjj.s[51]++;sendJSON(response, 200, storage);}\n}","timestamp":"2017-12-09T00:34:15.567Z"}
{"level":"info","message":"responding with a 200 code and the following json data","timestamp":"2017-12-09T00:34:15.567Z"}
{"level":"info","message":"Promise { <pending> }","timestamp":"2017-12-09T00:34:15.568Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-09T00:34:15.570Z"}
{"level":"info","message":"Original URL: \"/api/mountains?e8013d70-dbad-11e7-9cb6-ddffa32a3c9b\"","timestamp":"2017-12-09T00:34:15.570Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?e8013d70-dbad-11e7-9cb6-ddffa32a3c9b\",\"query\":{\"e8013d70-dbad-11e7-9cb6-ddffa32a3c9b\":\"\"},\"pathname\":\"/api/mountains\",\"path\":\"/api/mountains?e8013d70-dbad-11e7-9cb6-ddffa32a3c9b\",\"href\":\"/api/mountains?e8013d70-dbad-11e7-9cb6-ddffa32a3c9b\"}","timestamp":"2017-12-09T00:34:15.570Z"}
{"level":"info","message":"found the following handler","timestamp":"2017-12-09T00:34:15.570Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[8]++;\n  let id = /* istanbul ignore next */(cov_22s6dd2wjj.s[45]++, request.url.query.id); /* istanbul ignore next */cov_22s6dd2wjj.s[46]++;\n\n  if (id) {/* istanbul ignore next */cov_22s6dd2wjj.b[6][0]++;\n    let requestMountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[47]++, getMountainById(id)); /* istanbul ignore next */cov_22s6dd2wjj.s[48]++;\n    if (requestMountain) {/* istanbul ignore next */cov_22s6dd2wjj.b[7][0]++;cov_22s6dd2wjj.s[49]++;\n      sendJSON(response, 200, requestMountain);\n    } else\n      {/* istanbul ignore next */cov_22s6dd2wjj.b[7][1]++;cov_22s6dd2wjj.s[50]++;sendStatus(response, 404, `no mountain found with the id of ${id}`);}\n  } else\n    {/* istanbul ignore next */cov_22s6dd2wjj.b[6][1]++;cov_22s6dd2wjj.s[51]++;sendJSON(response, 200, storage);}\n}","timestamp":"2017-12-09T00:34:15.570Z"}
{"level":"info","message":"responding with a 200 code and the following json data","timestamp":"2017-12-09T00:34:15.570Z"}
{"level":"info","message":"","timestamp":"2017-12-09T00:34:15.570Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-09T00:34:15.572Z"}
{"level":"info","message":"Original URL: \"/api/mountains\"","timestamp":"2017-12-09T00:34:15.572Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/mountains\",\"path\":\"/api/mountains\",\"href\":\"/api/mountains\"}","timestamp":"2017-12-09T00:34:15.572Z"}
{"level":"info","message":"found the following handler","timestamp":"2017-12-09T00:34:15.572Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[5]++;cov_22s6dd2wjj.s[25]++;\n  if (!request.body) {/* istanbul ignore next */cov_22s6dd2wjj.b[1][0]++;cov_22s6dd2wjj.s[26]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[1][1]++;}cov_22s6dd2wjj.s[28]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_22s6dd2wjj.b[2][0]++;cov_22s6dd2wjj.s[29]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[30]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[2][1]++;}cov_22s6dd2wjj.s[31]++;\n  if (!request.body.state) {/* istanbul ignore next */cov_22s6dd2wjj.b[3][0]++;cov_22s6dd2wjj.s[32]++;\n    sendStatus(response, 400, 'state not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[3][1]++;}cov_22s6dd2wjj.s[34]++;\n  if (!request.body.hiking) {/* istanbul ignore next */cov_22s6dd2wjj.b[4][0]++;cov_22s6dd2wjj.s[35]++;\n    sendStatus(response, 400, 'hiking info not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[36]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[4][1]++;}cov_22s6dd2wjj.s[37]++;\n  if (!request.body.range) {/* istanbul ignore next */cov_22s6dd2wjj.b[5][0]++;cov_22s6dd2wjj.s[38]++;\n    sendStatus(response, 400, 'range name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[39]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[5][1]++;}\n  let mountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[40]++, new Mountain(\n  request.body.name,\n  request.body.state,\n  request.body.hiking,\n  request.body.range)); /* istanbul ignore next */cov_22s6dd2wjj.s[41]++;\n\n\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_22s6dd2wjj.f[6]++;cov_22s6dd2wjj.s[42]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_22s6dd2wjj.f[7]++;cov_22s6dd2wjj.s[43]++;\n    sendStatus(response, 500, error);\n  });\n\n}","timestamp":"2017-12-09T00:34:15.572Z"}
{"level":"info","message":"Responding with a 400 code due to name not found","timestamp":"2017-12-09T00:34:15.572Z"}
{"level":"info","message":"adding a POST url and callback","timestamp":"2017-12-10T01:25:08.417Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-10T01:25:08.418Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[5]++;cov_22s6dd2wjj.s[25]++;\n  if (!request.body) {/* istanbul ignore next */cov_22s6dd2wjj.b[1][0]++;cov_22s6dd2wjj.s[26]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[1][1]++;}cov_22s6dd2wjj.s[28]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_22s6dd2wjj.b[2][0]++;cov_22s6dd2wjj.s[29]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[30]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[2][1]++;}cov_22s6dd2wjj.s[31]++;\n  if (!request.body.state) {/* istanbul ignore next */cov_22s6dd2wjj.b[3][0]++;cov_22s6dd2wjj.s[32]++;\n    sendStatus(response, 400, 'state not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[3][1]++;}cov_22s6dd2wjj.s[34]++;\n  if (!request.body.hiking) {/* istanbul ignore next */cov_22s6dd2wjj.b[4][0]++;cov_22s6dd2wjj.s[35]++;\n    sendStatus(response, 400, 'hiking info not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[36]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[4][1]++;}cov_22s6dd2wjj.s[37]++;\n  if (!request.body.range) {/* istanbul ignore next */cov_22s6dd2wjj.b[5][0]++;cov_22s6dd2wjj.s[38]++;\n    sendStatus(response, 400, 'range name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[39]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[5][1]++;}\n  let mountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[40]++, new Mountain(\n  request.body.name,\n  request.body.state,\n  request.body.hiking,\n  request.body.range)); /* istanbul ignore next */cov_22s6dd2wjj.s[41]++;\n\n\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_22s6dd2wjj.f[6]++;cov_22s6dd2wjj.s[42]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_22s6dd2wjj.f[7]++;cov_22s6dd2wjj.s[43]++;\n    sendStatus(response, 500, error);\n  });\n\n}","timestamp":"2017-12-10T01:25:08.418Z"}
{"level":"info","message":"adding a GET url and callback","timestamp":"2017-12-10T01:25:08.418Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-10T01:25:08.418Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[8]++;\n  let id = /* istanbul ignore next */(cov_22s6dd2wjj.s[45]++, request.url.query.id); /* istanbul ignore next */cov_22s6dd2wjj.s[46]++;\n\n  if (!id) {/* istanbul ignore next */cov_22s6dd2wjj.b[6][0]++;cov_22s6dd2wjj.s[47]++;\n    storage.fetchAll().\n    then(mountains => {/* istanbul ignore next */cov_22s6dd2wjj.f[9]++;cov_22s6dd2wjj.s[48]++;\n      sendJSON(response, 200, mountains);\n    }).\n    catch(error => {/* istanbul ignore next */cov_22s6dd2wjj.f[10]++;cov_22s6dd2wjj.s[49]++;\n      sendStatus(response, 500, error);\n    });\n  } else {/* istanbul ignore next */cov_22s6dd2wjj.b[6][1]++;cov_22s6dd2wjj.s[50]++;\n    storage.fetchItem(id).\n    then(mountain => {/* istanbul ignore next */cov_22s6dd2wjj.f[11]++;cov_22s6dd2wjj.s[51]++;\n      sendJSON(response, 200, mountain);\n    }).\n    catch(error => {/* istanbul ignore next */cov_22s6dd2wjj.f[12]++;cov_22s6dd2wjj.s[52]++;\n      sendStatus(response, 404, error);\n    });\n  }\n}","timestamp":"2017-12-10T01:25:08.418Z"}
{"level":"info","message":"adding a DELETE url and callback","timestamp":"2017-12-10T01:25:08.418Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-10T01:25:08.418Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[13]++;\n  let id = /* istanbul ignore next */(cov_22s6dd2wjj.s[54]++, request.url.query.id); /* istanbul ignore next */cov_22s6dd2wjj.s[55]++;\n  storage.deleteItem(id).\n  then(filteredMountains => {/* istanbul ignore next */cov_22s6dd2wjj.f[14]++;cov_22s6dd2wjj.s[56]++;\n    sendJSON(response, 200, filteredMountains);\n  }).\n  catch(error => {/* istanbul ignore next */cov_22s6dd2wjj.f[15]++;cov_22s6dd2wjj.s[57]++;\n    sendStatus(response, 404, error);\n  });\n}","timestamp":"2017-12-10T01:25:08.418Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-10T01:25:08.528Z"}
{"level":"info","message":"Original URL: \"/api/mountains\"","timestamp":"2017-12-10T01:25:08.528Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/mountains\",\"path\":\"/api/mountains\",\"href\":\"/api/mountains\"}","timestamp":"2017-12-10T01:25:08.528Z"}
{"level":"info","message":"found the following handler","timestamp":"2017-12-10T01:25:08.529Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[5]++;cov_22s6dd2wjj.s[25]++;\n  if (!request.body) {/* istanbul ignore next */cov_22s6dd2wjj.b[1][0]++;cov_22s6dd2wjj.s[26]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[1][1]++;}cov_22s6dd2wjj.s[28]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_22s6dd2wjj.b[2][0]++;cov_22s6dd2wjj.s[29]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[30]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[2][1]++;}cov_22s6dd2wjj.s[31]++;\n  if (!request.body.state) {/* istanbul ignore next */cov_22s6dd2wjj.b[3][0]++;cov_22s6dd2wjj.s[32]++;\n    sendStatus(response, 400, 'state not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[3][1]++;}cov_22s6dd2wjj.s[34]++;\n  if (!request.body.hiking) {/* istanbul ignore next */cov_22s6dd2wjj.b[4][0]++;cov_22s6dd2wjj.s[35]++;\n    sendStatus(response, 400, 'hiking info not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[36]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[4][1]++;}cov_22s6dd2wjj.s[37]++;\n  if (!request.body.range) {/* istanbul ignore next */cov_22s6dd2wjj.b[5][0]++;cov_22s6dd2wjj.s[38]++;\n    sendStatus(response, 400, 'range name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[39]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[5][1]++;}\n  let mountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[40]++, new Mountain(\n  request.body.name,\n  request.body.state,\n  request.body.hiking,\n  request.body.range)); /* istanbul ignore next */cov_22s6dd2wjj.s[41]++;\n\n\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_22s6dd2wjj.f[6]++;cov_22s6dd2wjj.s[42]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_22s6dd2wjj.f[7]++;cov_22s6dd2wjj.s[43]++;\n    sendStatus(response, 500, error);\n  });\n\n}","timestamp":"2017-12-10T01:25:08.529Z"}
{"level":"info","message":"responding with a 200 code and the following json data","timestamp":"2017-12-10T01:25:08.532Z"}
{"id":"f58f6a10-dd48-11e7-ac10-0d2d27df44e0","name":"Shuksan","state":"Washington","hiking":"Yes","range":"Cascades","level":"info","message":"","timestamp":"2017-12-10T01:25:08.532Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-10T01:25:08.540Z"}
{"level":"info","message":"Original URL: \"/api/mountains\"","timestamp":"2017-12-10T01:25:08.540Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/mountains\",\"path\":\"/api/mountains\",\"href\":\"/api/mountains\"}","timestamp":"2017-12-10T01:25:08.540Z"}
{"level":"info","message":"found the following handler","timestamp":"2017-12-10T01:25:08.540Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[5]++;cov_22s6dd2wjj.s[25]++;\n  if (!request.body) {/* istanbul ignore next */cov_22s6dd2wjj.b[1][0]++;cov_22s6dd2wjj.s[26]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[1][1]++;}cov_22s6dd2wjj.s[28]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_22s6dd2wjj.b[2][0]++;cov_22s6dd2wjj.s[29]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[30]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[2][1]++;}cov_22s6dd2wjj.s[31]++;\n  if (!request.body.state) {/* istanbul ignore next */cov_22s6dd2wjj.b[3][0]++;cov_22s6dd2wjj.s[32]++;\n    sendStatus(response, 400, 'state not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[3][1]++;}cov_22s6dd2wjj.s[34]++;\n  if (!request.body.hiking) {/* istanbul ignore next */cov_22s6dd2wjj.b[4][0]++;cov_22s6dd2wjj.s[35]++;\n    sendStatus(response, 400, 'hiking info not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[36]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[4][1]++;}cov_22s6dd2wjj.s[37]++;\n  if (!request.body.range) {/* istanbul ignore next */cov_22s6dd2wjj.b[5][0]++;cov_22s6dd2wjj.s[38]++;\n    sendStatus(response, 400, 'range name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[39]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[5][1]++;}\n  let mountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[40]++, new Mountain(\n  request.body.name,\n  request.body.state,\n  request.body.hiking,\n  request.body.range)); /* istanbul ignore next */cov_22s6dd2wjj.s[41]++;\n\n\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_22s6dd2wjj.f[6]++;cov_22s6dd2wjj.s[42]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_22s6dd2wjj.f[7]++;cov_22s6dd2wjj.s[43]++;\n    sendStatus(response, 500, error);\n  });\n\n}","timestamp":"2017-12-10T01:25:08.540Z"}
{"level":"info","message":"responding with a 200 code and the following json data","timestamp":"2017-12-10T01:25:08.541Z"}
{"id":"f59117c0-dd48-11e7-ac10-0d2d27df44e0","name":"Shuksan","state":"Washington","hiking":"Yes","range":"Cascades","level":"info","message":"","timestamp":"2017-12-10T01:25:08.541Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-10T01:25:08.545Z"}
{"level":"info","message":"Original URL: \"/api/mountains?id=$33333\"","timestamp":"2017-12-10T01:25:08.545Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=$33333\",\"query\":{\"id\":\"$33333\"},\"pathname\":\"/api/mountains\",\"path\":\"/api/mountains?id=$33333\",\"href\":\"/api/mountains?id=$33333\"}","timestamp":"2017-12-10T01:25:08.546Z"}
{"level":"info","message":"found the following handler","timestamp":"2017-12-10T01:25:08.546Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[8]++;\n  let id = /* istanbul ignore next */(cov_22s6dd2wjj.s[45]++, request.url.query.id); /* istanbul ignore next */cov_22s6dd2wjj.s[46]++;\n\n  if (!id) {/* istanbul ignore next */cov_22s6dd2wjj.b[6][0]++;cov_22s6dd2wjj.s[47]++;\n    storage.fetchAll().\n    then(mountains => {/* istanbul ignore next */cov_22s6dd2wjj.f[9]++;cov_22s6dd2wjj.s[48]++;\n      sendJSON(response, 200, mountains);\n    }).\n    catch(error => {/* istanbul ignore next */cov_22s6dd2wjj.f[10]++;cov_22s6dd2wjj.s[49]++;\n      sendStatus(response, 500, error);\n    });\n  } else {/* istanbul ignore next */cov_22s6dd2wjj.b[6][1]++;cov_22s6dd2wjj.s[50]++;\n    storage.fetchItem(id).\n    then(mountain => {/* istanbul ignore next */cov_22s6dd2wjj.f[11]++;cov_22s6dd2wjj.s[51]++;\n      sendJSON(response, 200, mountain);\n    }).\n    catch(error => {/* istanbul ignore next */cov_22s6dd2wjj.f[12]++;cov_22s6dd2wjj.s[52]++;\n      sendStatus(response, 404, error);\n    });\n  }\n}","timestamp":"2017-12-10T01:25:08.546Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-10T01:25:08.546Z"}
{"level":"info","message":"Original URL: \"/api/mountains?e8013d70-dbad-11e7-9cb6-ddffa32a3c9b\"","timestamp":"2017-12-10T01:25:08.546Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?e8013d70-dbad-11e7-9cb6-ddffa32a3c9b\",\"query\":{\"e8013d70-dbad-11e7-9cb6-ddffa32a3c9b\":\"\"},\"pathname\":\"/api/mountains\",\"path\":\"/api/mountains?e8013d70-dbad-11e7-9cb6-ddffa32a3c9b\",\"href\":\"/api/mountains?e8013d70-dbad-11e7-9cb6-ddffa32a3c9b\"}","timestamp":"2017-12-10T01:25:08.546Z"}
{"level":"info","message":"found the following handler","timestamp":"2017-12-10T01:25:08.546Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[8]++;\n  let id = /* istanbul ignore next */(cov_22s6dd2wjj.s[45]++, request.url.query.id); /* istanbul ignore next */cov_22s6dd2wjj.s[46]++;\n\n  if (!id) {/* istanbul ignore next */cov_22s6dd2wjj.b[6][0]++;cov_22s6dd2wjj.s[47]++;\n    storage.fetchAll().\n    then(mountains => {/* istanbul ignore next */cov_22s6dd2wjj.f[9]++;cov_22s6dd2wjj.s[48]++;\n      sendJSON(response, 200, mountains);\n    }).\n    catch(error => {/* istanbul ignore next */cov_22s6dd2wjj.f[10]++;cov_22s6dd2wjj.s[49]++;\n      sendStatus(response, 500, error);\n    });\n  } else {/* istanbul ignore next */cov_22s6dd2wjj.b[6][1]++;cov_22s6dd2wjj.s[50]++;\n    storage.fetchItem(id).\n    then(mountain => {/* istanbul ignore next */cov_22s6dd2wjj.f[11]++;cov_22s6dd2wjj.s[51]++;\n      sendJSON(response, 200, mountain);\n    }).\n    catch(error => {/* istanbul ignore next */cov_22s6dd2wjj.f[12]++;cov_22s6dd2wjj.s[52]++;\n      sendStatus(response, 404, error);\n    });\n  }\n}","timestamp":"2017-12-10T01:25:08.546Z"}
{"level":"info","message":"Responding with a 404 code due to Error: ---->STORAGE_ERROR<---- item not found","timestamp":"2017-12-10T01:25:08.547Z"}
{"level":"info","message":"responding with a 200 code and the following json data","timestamp":"2017-12-10T01:25:08.547Z"}
[{"id":"54d3c4c0-dbce-11e7-8f43-517dfbcdc019","name":"Shuksan","state":"Washington","hiking":"Yes","range":"Cascades"},{"id":"69dcbf30-dc6d-11e7-bf34-7f0544ba030b","name":"Shuksan","state":"Washington","hiking":"Yes","range":"Cascades"},{"id":"594bfed0-dc70-11e7-a3f8-cd2f6eabf71f","name":"Shuksan","state":"Washington","hiking":"Yes","range":"Cascades"},{"id":"cf81af00-dc70-11e7-9216-c9bd03b6ecab","name":"Shuksan","state":"Washington","hiking":"Yes","range":"Cascades"},{"id":"eb966780-dc70-11e7-8756-590d687489d3","name":"Shuksan","state":"Washington","hiking":"Yes","range":"Cascades"},{"id":"fdb481d0-dc71-11e7-afd0-2345683f78c3","name":"Shuksan","state":"Washington","hiking":"Yes","range":"Cascades"},{"id":"fdb65690-dc71-11e7-afd0-2345683f78c3","name":"Shuksan","state":"Washington","hiking":"Yes","range":"Cascades"},{"id":"142b6460-dc72-11e7-a3d6-abb97bbb267d","name":"Shuksan","state":"Washington","hiking":"Yes","range":"Cascades"},{"id":"142d3920-dc72-11e7-a3d6-abb97bbb267d","name":"Shuksan","state":"Washington","hiking":"Yes","range":"Cascades"},{"id":"3a5e4ad0-dc72-11e7-a730-d3886b3b69b7","name":"Shuksan","state":"Washington","hiking":"Yes","range":"Cascades"},{"id":"3a606db0-dc72-11e7-a730-d3886b3b69b7","name":"Shuksan","state":"Washington","hiking":"Yes","range":"Cascades"},{"id":"f2a7c340-dc73-11e7-9257-d5afe23fc3df","name":"Shuksan","state":"Washington","hiking":"Yes","range":"Cascades"},{"id":"f2a99800-dc73-11e7-9257-d5afe23fc3df","name":"Shuksan","state":"Washington","hiking":"Yes","range":"Cascades"},{"id":"2a498db0-dc74-11e7-98b9-0fef5efabaf3","name":"Shuksan","state":"Washington","hiking":"Yes","range":"Cascades"},{"id":"2a4b8980-dc74-11e7-98b9-0fef5efabaf3","name":"Shuksan","state":"Washington","hiking":"Yes","range":"Cascades"},{"id":"34111020-dc74-11e7-81d1-6d86a580401b","name":"Shuksan","state":"Washington","hiking":"Yes","range":"Cascades"},{"id":"3412e4e0-dc74-11e7-81d1-6d86a580401b","name":"Shuksan","state":"Washington","hiking":"Yes","range":"Cascades"},{"id":"3a78ecd0-dc74-11e7-b4c6-f92a8eef496e","name":"Shuksan","state":"Washington","hiking":"Yes","range":"Cascades"},{"id":"3a7ac190-dc74-11e7-b4c6-f92a8eef496e","name":"Shuksan","state":"Washington","hiking":"Yes","range":"Cascades"},{"id":"4a78d780-dc74-11e7-adfb-5f733380cb52","name":"Shuksan","state":"Washington","hiking":"Yes","range":"Cascades"},{"id":"4a7aac40-dc74-11e7-adfb-5f733380cb52","name":"Shuksan","state":"Washington","hiking":"Yes","range":"Cascades"},{"id":"a80cfcf0-dc74-11e7-8c2c-7b581071bc0e","name":"Shuksan","state":"Washington","hiking":"Yes","range":"Cascades"},{"id":"a80ed1b0-dc74-11e7-8c2c-7b581071bc0e","name":"Shuksan","state":"Washington","hiking":"Yes","range":"Cascades"},{"id":"c5138f80-dc74-11e7-907a-75b2ea9b96dc","name":"Shuksan","state":"Washington","hiking":"Yes","range":"Cascades"},{"id":"c5156440-dc74-11e7-907a-75b2ea9b96dc","name":"Shuksan","state":"Washington","hiking":"Yes","range":"Cascades"},{"id":"ec750ae0-dc74-11e7-b348-4537879aca8e","name":"Shuksan","state":"Washington","hiking":"Yes","range":"Cascades"},{"id":"ec76dfa0-dc74-11e7-b348-4537879aca8e","name":"Shuksan","state":"Washington","hiking":"Yes","range":"Cascades"},{"id":"fc913ab0-dc75-11e7-becd-b5884197b0af","name":"Shuksan","state":"Washington","hiking":"Yes","range":"Cascades"},{"id":"fc930f70-dc75-11e7-becd-b5884197b0af","name":"Shuksan","state":"Washington","hiking":"Yes","range":"Cascades"},{"id":"af6de2d0-dc78-11e7-82ff-ef0500acc00d","name":"Shuksan","state":"Washington","hiking":"Yes","range":"Cascades"},{"id":"af6fb790-dc78-11e7-82ff-ef0500acc00d","name":"Shuksan","state":"Washington","hiking":"Yes","range":"Cascades"},{"id":"f58f6a10-dd48-11e7-ac10-0d2d27df44e0","name":"Shuksan","state":"Washington","hiking":"Yes","range":"Cascades"},{"id":"f59117c0-dd48-11e7-ac10-0d2d27df44e0","name":"Shuksan","state":"Washington","hiking":"Yes","range":"Cascades"}]
{"level":"info","message":"Routing a request","timestamp":"2017-12-10T01:25:08.552Z"}
{"level":"info","message":"Original URL: \"/api/mountains\"","timestamp":"2017-12-10T01:25:08.552Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/mountains\",\"path\":\"/api/mountains\",\"href\":\"/api/mountains\"}","timestamp":"2017-12-10T01:25:08.552Z"}
{"level":"info","message":"found the following handler","timestamp":"2017-12-10T01:25:08.552Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[5]++;cov_22s6dd2wjj.s[25]++;\n  if (!request.body) {/* istanbul ignore next */cov_22s6dd2wjj.b[1][0]++;cov_22s6dd2wjj.s[26]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[1][1]++;}cov_22s6dd2wjj.s[28]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_22s6dd2wjj.b[2][0]++;cov_22s6dd2wjj.s[29]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[30]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[2][1]++;}cov_22s6dd2wjj.s[31]++;\n  if (!request.body.state) {/* istanbul ignore next */cov_22s6dd2wjj.b[3][0]++;cov_22s6dd2wjj.s[32]++;\n    sendStatus(response, 400, 'state not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[3][1]++;}cov_22s6dd2wjj.s[34]++;\n  if (!request.body.hiking) {/* istanbul ignore next */cov_22s6dd2wjj.b[4][0]++;cov_22s6dd2wjj.s[35]++;\n    sendStatus(response, 400, 'hiking info not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[36]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[4][1]++;}cov_22s6dd2wjj.s[37]++;\n  if (!request.body.range) {/* istanbul ignore next */cov_22s6dd2wjj.b[5][0]++;cov_22s6dd2wjj.s[38]++;\n    sendStatus(response, 400, 'range name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[39]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[5][1]++;}\n  let mountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[40]++, new Mountain(\n  request.body.name,\n  request.body.state,\n  request.body.hiking,\n  request.body.range)); /* istanbul ignore next */cov_22s6dd2wjj.s[41]++;\n\n\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_22s6dd2wjj.f[6]++;cov_22s6dd2wjj.s[42]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_22s6dd2wjj.f[7]++;cov_22s6dd2wjj.s[43]++;\n    sendStatus(response, 500, error);\n  });\n\n}","timestamp":"2017-12-10T01:25:08.552Z"}
{"level":"info","message":"Responding with a 400 code due to name not found","timestamp":"2017-12-10T01:25:08.552Z"}
{"level":"info","message":"adding a POST url and callback","timestamp":"2017-12-10T01:49:06.164Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-10T01:49:06.166Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[2]++;cov_22s6dd2wjj.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_22s6dd2wjj.b[0][0]++;cov_22s6dd2wjj.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[0][1]++;}cov_22s6dd2wjj.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_22s6dd2wjj.b[1][0]++;cov_22s6dd2wjj.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[1][1]++;}cov_22s6dd2wjj.s[22]++;\n  if (!request.body.state) {/* istanbul ignore next */cov_22s6dd2wjj.b[2][0]++;cov_22s6dd2wjj.s[23]++;\n    sendStatus(response, 400, 'state not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[2][1]++;}cov_22s6dd2wjj.s[25]++;\n  if (!request.body.hiking) {/* istanbul ignore next */cov_22s6dd2wjj.b[3][0]++;cov_22s6dd2wjj.s[26]++;\n    sendStatus(response, 400, 'hiking info not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[3][1]++;}cov_22s6dd2wjj.s[28]++;\n  if (!request.body.range) {/* istanbul ignore next */cov_22s6dd2wjj.b[4][0]++;cov_22s6dd2wjj.s[29]++;\n    sendStatus(response, 400, 'range name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[30]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[4][1]++;}\n  let mountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[31]++, new Mountain(\n  request.body.name,\n  request.body.state,\n  request.body.hiking,\n  request.body.range)); /* istanbul ignore next */cov_22s6dd2wjj.s[32]++;\n\n\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_22s6dd2wjj.f[3]++;cov_22s6dd2wjj.s[33]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_22s6dd2wjj.f[4]++;cov_22s6dd2wjj.s[34]++;\n    sendStatus(response, 500, error);\n  });\n\n}","timestamp":"2017-12-10T01:49:06.167Z"}
{"level":"info","message":"adding a GET url and callback","timestamp":"2017-12-10T01:49:06.167Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-10T01:49:06.167Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[5]++;\n  let id = /* istanbul ignore next */(cov_22s6dd2wjj.s[36]++, request.url.query.id); /* istanbul ignore next */cov_22s6dd2wjj.s[37]++;\n\n  if (!id) {/* istanbul ignore next */cov_22s6dd2wjj.b[5][0]++;cov_22s6dd2wjj.s[38]++;\n    storage.fetchAll().\n    then(mountains => {/* istanbul ignore next */cov_22s6dd2wjj.f[6]++;cov_22s6dd2wjj.s[39]++;\n      sendJSON(response, 200, mountains);\n    }).\n    catch(error => {/* istanbul ignore next */cov_22s6dd2wjj.f[7]++;cov_22s6dd2wjj.s[40]++;\n      sendStatus(response, 500, error);\n    });\n  } else {/* istanbul ignore next */cov_22s6dd2wjj.b[5][1]++;cov_22s6dd2wjj.s[41]++;\n    storage.fetchItem(id).\n    then(mountain => {/* istanbul ignore next */cov_22s6dd2wjj.f[8]++;cov_22s6dd2wjj.s[42]++;\n      sendJSON(response, 200, mountain);\n    }).\n    catch(error => {/* istanbul ignore next */cov_22s6dd2wjj.f[9]++;cov_22s6dd2wjj.s[43]++;\n      sendStatus(response, 404, error);\n    });\n  }\n}","timestamp":"2017-12-10T01:49:06.167Z"}
{"level":"info","message":"adding a DELETE url and callback","timestamp":"2017-12-10T01:49:06.167Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-10T01:49:06.168Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[10]++;\n  let id = /* istanbul ignore next */(cov_22s6dd2wjj.s[45]++, request.url.query.id); /* istanbul ignore next */cov_22s6dd2wjj.s[46]++;\n  storage.deleteItem(id).\n  then(filteredMountains => {/* istanbul ignore next */cov_22s6dd2wjj.f[11]++;cov_22s6dd2wjj.s[47]++;\n    sendJSON(response, 200, filteredMountains);\n  }).\n  catch(error => {/* istanbul ignore next */cov_22s6dd2wjj.f[12]++;cov_22s6dd2wjj.s[48]++;\n    sendStatus(response, 404, error);\n  });\n}","timestamp":"2017-12-10T01:49:06.168Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-10T01:49:06.424Z"}
{"level":"info","message":"Original URL: \"/api/mountains\"","timestamp":"2017-12-10T01:49:06.425Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/mountains\",\"path\":\"/api/mountains\",\"href\":\"/api/mountains\"}","timestamp":"2017-12-10T01:49:06.425Z"}
{"level":"info","message":"found the following handler","timestamp":"2017-12-10T01:49:06.429Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[2]++;cov_22s6dd2wjj.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_22s6dd2wjj.b[0][0]++;cov_22s6dd2wjj.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[0][1]++;}cov_22s6dd2wjj.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_22s6dd2wjj.b[1][0]++;cov_22s6dd2wjj.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[1][1]++;}cov_22s6dd2wjj.s[22]++;\n  if (!request.body.state) {/* istanbul ignore next */cov_22s6dd2wjj.b[2][0]++;cov_22s6dd2wjj.s[23]++;\n    sendStatus(response, 400, 'state not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[2][1]++;}cov_22s6dd2wjj.s[25]++;\n  if (!request.body.hiking) {/* istanbul ignore next */cov_22s6dd2wjj.b[3][0]++;cov_22s6dd2wjj.s[26]++;\n    sendStatus(response, 400, 'hiking info not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[3][1]++;}cov_22s6dd2wjj.s[28]++;\n  if (!request.body.range) {/* istanbul ignore next */cov_22s6dd2wjj.b[4][0]++;cov_22s6dd2wjj.s[29]++;\n    sendStatus(response, 400, 'range name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[30]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[4][1]++;}\n  let mountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[31]++, new Mountain(\n  request.body.name,\n  request.body.state,\n  request.body.hiking,\n  request.body.range)); /* istanbul ignore next */cov_22s6dd2wjj.s[32]++;\n\n\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_22s6dd2wjj.f[3]++;cov_22s6dd2wjj.s[33]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_22s6dd2wjj.f[4]++;cov_22s6dd2wjj.s[34]++;\n    sendStatus(response, 500, error);\n  });\n\n}","timestamp":"2017-12-10T01:49:06.429Z"}
{"level":"info","message":"responding with a 200 code and the following json data","timestamp":"2017-12-10T01:49:06.442Z"}
{"id":"4e9dd8f0-dd4c-11e7-b60d-b15a2dc7be43","name":"Shuksan","state":"Washington","hiking":"Yes","range":"Cascades","level":"info","message":"","timestamp":"2017-12-10T01:49:06.443Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-10T01:49:06.478Z"}
{"level":"info","message":"Original URL: \"/api/mountains\"","timestamp":"2017-12-10T01:49:06.478Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/mountains\",\"path\":\"/api/mountains\",\"href\":\"/api/mountains\"}","timestamp":"2017-12-10T01:49:06.478Z"}
{"level":"info","message":"found the following handler","timestamp":"2017-12-10T01:49:06.479Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[2]++;cov_22s6dd2wjj.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_22s6dd2wjj.b[0][0]++;cov_22s6dd2wjj.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[0][1]++;}cov_22s6dd2wjj.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_22s6dd2wjj.b[1][0]++;cov_22s6dd2wjj.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[1][1]++;}cov_22s6dd2wjj.s[22]++;\n  if (!request.body.state) {/* istanbul ignore next */cov_22s6dd2wjj.b[2][0]++;cov_22s6dd2wjj.s[23]++;\n    sendStatus(response, 400, 'state not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[2][1]++;}cov_22s6dd2wjj.s[25]++;\n  if (!request.body.hiking) {/* istanbul ignore next */cov_22s6dd2wjj.b[3][0]++;cov_22s6dd2wjj.s[26]++;\n    sendStatus(response, 400, 'hiking info not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[3][1]++;}cov_22s6dd2wjj.s[28]++;\n  if (!request.body.range) {/* istanbul ignore next */cov_22s6dd2wjj.b[4][0]++;cov_22s6dd2wjj.s[29]++;\n    sendStatus(response, 400, 'range name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[30]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[4][1]++;}\n  let mountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[31]++, new Mountain(\n  request.body.name,\n  request.body.state,\n  request.body.hiking,\n  request.body.range)); /* istanbul ignore next */cov_22s6dd2wjj.s[32]++;\n\n\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_22s6dd2wjj.f[3]++;cov_22s6dd2wjj.s[33]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_22s6dd2wjj.f[4]++;cov_22s6dd2wjj.s[34]++;\n    sendStatus(response, 500, error);\n  });\n\n}","timestamp":"2017-12-10T01:49:06.480Z"}
{"level":"info","message":"responding with a 200 code and the following json data","timestamp":"2017-12-10T01:49:06.483Z"}
{"id":"4ea55300-dd4c-11e7-b60d-b15a2dc7be43","name":"Shuksan","state":"Washington","hiking":"Yes","range":"Cascades","level":"info","message":"","timestamp":"2017-12-10T01:49:06.483Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-10T01:49:06.494Z"}
{"level":"info","message":"Original URL: \"/api/mountains?id=$33333\"","timestamp":"2017-12-10T01:49:06.494Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=$33333\",\"query\":{\"id\":\"$33333\"},\"pathname\":\"/api/mountains\",\"path\":\"/api/mountains?id=$33333\",\"href\":\"/api/mountains?id=$33333\"}","timestamp":"2017-12-10T01:49:06.496Z"}
{"level":"info","message":"found the following handler","timestamp":"2017-12-10T01:49:06.496Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[5]++;\n  let id = /* istanbul ignore next */(cov_22s6dd2wjj.s[36]++, request.url.query.id); /* istanbul ignore next */cov_22s6dd2wjj.s[37]++;\n\n  if (!id) {/* istanbul ignore next */cov_22s6dd2wjj.b[5][0]++;cov_22s6dd2wjj.s[38]++;\n    storage.fetchAll().\n    then(mountains => {/* istanbul ignore next */cov_22s6dd2wjj.f[6]++;cov_22s6dd2wjj.s[39]++;\n      sendJSON(response, 200, mountains);\n    }).\n    catch(error => {/* istanbul ignore next */cov_22s6dd2wjj.f[7]++;cov_22s6dd2wjj.s[40]++;\n      sendStatus(response, 500, error);\n    });\n  } else {/* istanbul ignore next */cov_22s6dd2wjj.b[5][1]++;cov_22s6dd2wjj.s[41]++;\n    storage.fetchItem(id).\n    then(mountain => {/* istanbul ignore next */cov_22s6dd2wjj.f[8]++;cov_22s6dd2wjj.s[42]++;\n      sendJSON(response, 200, mountain);\n    }).\n    catch(error => {/* istanbul ignore next */cov_22s6dd2wjj.f[9]++;cov_22s6dd2wjj.s[43]++;\n      sendStatus(response, 404, error);\n    });\n  }\n}","timestamp":"2017-12-10T01:49:06.496Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-10T01:49:06.498Z"}
{"level":"info","message":"Original URL: \"/api/mountains?e8013d70-dbad-11e7-9cb6-ddffa32a3c9b\"","timestamp":"2017-12-10T01:49:06.498Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?e8013d70-dbad-11e7-9cb6-ddffa32a3c9b\",\"query\":{\"e8013d70-dbad-11e7-9cb6-ddffa32a3c9b\":\"\"},\"pathname\":\"/api/mountains\",\"path\":\"/api/mountains?e8013d70-dbad-11e7-9cb6-ddffa32a3c9b\",\"href\":\"/api/mountains?e8013d70-dbad-11e7-9cb6-ddffa32a3c9b\"}","timestamp":"2017-12-10T01:49:06.499Z"}
{"level":"info","message":"found the following handler","timestamp":"2017-12-10T01:49:06.499Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[5]++;\n  let id = /* istanbul ignore next */(cov_22s6dd2wjj.s[36]++, request.url.query.id); /* istanbul ignore next */cov_22s6dd2wjj.s[37]++;\n\n  if (!id) {/* istanbul ignore next */cov_22s6dd2wjj.b[5][0]++;cov_22s6dd2wjj.s[38]++;\n    storage.fetchAll().\n    then(mountains => {/* istanbul ignore next */cov_22s6dd2wjj.f[6]++;cov_22s6dd2wjj.s[39]++;\n      sendJSON(response, 200, mountains);\n    }).\n    catch(error => {/* istanbul ignore next */cov_22s6dd2wjj.f[7]++;cov_22s6dd2wjj.s[40]++;\n      sendStatus(response, 500, error);\n    });\n  } else {/* istanbul ignore next */cov_22s6dd2wjj.b[5][1]++;cov_22s6dd2wjj.s[41]++;\n    storage.fetchItem(id).\n    then(mountain => {/* istanbul ignore next */cov_22s6dd2wjj.f[8]++;cov_22s6dd2wjj.s[42]++;\n      sendJSON(response, 200, mountain);\n    }).\n    catch(error => {/* istanbul ignore next */cov_22s6dd2wjj.f[9]++;cov_22s6dd2wjj.s[43]++;\n      sendStatus(response, 404, error);\n    });\n  }\n}","timestamp":"2017-12-10T01:49:06.499Z"}
{"level":"info","message":"Responding with a 404 code due to Error: ---->STORAGE_ERROR<---- item not found","timestamp":"2017-12-10T01:49:06.501Z"}
{"level":"info","message":"responding with a 200 code and the following json data","timestamp":"2017-12-10T01:49:06.505Z"}
[{"id":"54d3c4c0-dbce-11e7-8f43-517dfbcdc019","name":"Shuksan","state":"Washington","hiking":"Yes","range":"Cascades"},{"id":"69dcbf30-dc6d-11e7-bf34-7f0544ba030b","name":"Shuksan","state":"Washington","hiking":"Yes","range":"Cascades"},{"id":"594bfed0-dc70-11e7-a3f8-cd2f6eabf71f","name":"Shuksan","state":"Washington","hiking":"Yes","range":"Cascades"},{"id":"cf81af00-dc70-11e7-9216-c9bd03b6ecab","name":"Shuksan","state":"Washington","hiking":"Yes","range":"Cascades"},{"id":"eb966780-dc70-11e7-8756-590d687489d3","name":"Shuksan","state":"Washington","hiking":"Yes","range":"Cascades"},{"id":"fdb481d0-dc71-11e7-afd0-2345683f78c3","name":"Shuksan","state":"Washington","hiking":"Yes","range":"Cascades"},{"id":"fdb65690-dc71-11e7-afd0-2345683f78c3","name":"Shuksan","state":"Washington","hiking":"Yes","range":"Cascades"},{"id":"142b6460-dc72-11e7-a3d6-abb97bbb267d","name":"Shuksan","state":"Washington","hiking":"Yes","range":"Cascades"},{"id":"142d3920-dc72-11e7-a3d6-abb97bbb267d","name":"Shuksan","state":"Washington","hiking":"Yes","range":"Cascades"},{"id":"3a5e4ad0-dc72-11e7-a730-d3886b3b69b7","name":"Shuksan","state":"Washington","hiking":"Yes","range":"Cascades"},{"id":"3a606db0-dc72-11e7-a730-d3886b3b69b7","name":"Shuksan","state":"Washington","hiking":"Yes","range":"Cascades"},{"id":"f2a7c340-dc73-11e7-9257-d5afe23fc3df","name":"Shuksan","state":"Washington","hiking":"Yes","range":"Cascades"},{"id":"f2a99800-dc73-11e7-9257-d5afe23fc3df","name":"Shuksan","state":"Washington","hiking":"Yes","range":"Cascades"},{"id":"2a498db0-dc74-11e7-98b9-0fef5efabaf3","name":"Shuksan","state":"Washington","hiking":"Yes","range":"Cascades"},{"id":"2a4b8980-dc74-11e7-98b9-0fef5efabaf3","name":"Shuksan","state":"Washington","hiking":"Yes","range":"Cascades"},{"id":"34111020-dc74-11e7-81d1-6d86a580401b","name":"Shuksan","state":"Washington","hiking":"Yes","range":"Cascades"},{"id":"3412e4e0-dc74-11e7-81d1-6d86a580401b","name":"Shuksan","state":"Washington","hiking":"Yes","range":"Cascades"},{"id":"3a78ecd0-dc74-11e7-b4c6-f92a8eef496e","name":"Shuksan","state":"Washington","hiking":"Yes","range":"Cascades"},{"id":"3a7ac190-dc74-11e7-b4c6-f92a8eef496e","name":"Shuksan","state":"Washington","hiking":"Yes","range":"Cascades"},{"id":"4a78d780-dc74-11e7-adfb-5f733380cb52","name":"Shuksan","state":"Washington","hiking":"Yes","range":"Cascades"},{"id":"4a7aac40-dc74-11e7-adfb-5f733380cb52","name":"Shuksan","state":"Washington","hiking":"Yes","range":"Cascades"},{"id":"a80cfcf0-dc74-11e7-8c2c-7b581071bc0e","name":"Shuksan","state":"Washington","hiking":"Yes","range":"Cascades"},{"id":"a80ed1b0-dc74-11e7-8c2c-7b581071bc0e","name":"Shuksan","state":"Washington","hiking":"Yes","range":"Cascades"},{"id":"c5138f80-dc74-11e7-907a-75b2ea9b96dc","name":"Shuksan","state":"Washington","hiking":"Yes","range":"Cascades"},{"id":"c5156440-dc74-11e7-907a-75b2ea9b96dc","name":"Shuksan","state":"Washington","hiking":"Yes","range":"Cascades"},{"id":"ec750ae0-dc74-11e7-b348-4537879aca8e","name":"Shuksan","state":"Washington","hiking":"Yes","range":"Cascades"},{"id":"ec76dfa0-dc74-11e7-b348-4537879aca8e","name":"Shuksan","state":"Washington","hiking":"Yes","range":"Cascades"},{"id":"fc913ab0-dc75-11e7-becd-b5884197b0af","name":"Shuksan","state":"Washington","hiking":"Yes","range":"Cascades"},{"id":"fc930f70-dc75-11e7-becd-b5884197b0af","name":"Shuksan","state":"Washington","hiking":"Yes","range":"Cascades"},{"id":"af6de2d0-dc78-11e7-82ff-ef0500acc00d","name":"Shuksan","state":"Washington","hiking":"Yes","range":"Cascades"},{"id":"af6fb790-dc78-11e7-82ff-ef0500acc00d","name":"Shuksan","state":"Washington","hiking":"Yes","range":"Cascades"},{"id":"f58f6a10-dd48-11e7-ac10-0d2d27df44e0","name":"Shuksan","state":"Washington","hiking":"Yes","range":"Cascades"},{"id":"f59117c0-dd48-11e7-ac10-0d2d27df44e0","name":"Shuksan","state":"Washington","hiking":"Yes","range":"Cascades"},{"id":"4e9dd8f0-dd4c-11e7-b60d-b15a2dc7be43","name":"Shuksan","state":"Washington","hiking":"Yes","range":"Cascades"},{"id":"4ea55300-dd4c-11e7-b60d-b15a2dc7be43","name":"Shuksan","state":"Washington","hiking":"Yes","range":"Cascades"}]
{"level":"info","message":"Routing a request","timestamp":"2017-12-10T01:49:06.523Z"}
{"level":"info","message":"Original URL: \"/api/mountains\"","timestamp":"2017-12-10T01:49:06.523Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/mountains\",\"path\":\"/api/mountains\",\"href\":\"/api/mountains\"}","timestamp":"2017-12-10T01:49:06.523Z"}
{"level":"info","message":"found the following handler","timestamp":"2017-12-10T01:49:06.524Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[2]++;cov_22s6dd2wjj.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_22s6dd2wjj.b[0][0]++;cov_22s6dd2wjj.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[0][1]++;}cov_22s6dd2wjj.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_22s6dd2wjj.b[1][0]++;cov_22s6dd2wjj.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[1][1]++;}cov_22s6dd2wjj.s[22]++;\n  if (!request.body.state) {/* istanbul ignore next */cov_22s6dd2wjj.b[2][0]++;cov_22s6dd2wjj.s[23]++;\n    sendStatus(response, 400, 'state not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[2][1]++;}cov_22s6dd2wjj.s[25]++;\n  if (!request.body.hiking) {/* istanbul ignore next */cov_22s6dd2wjj.b[3][0]++;cov_22s6dd2wjj.s[26]++;\n    sendStatus(response, 400, 'hiking info not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[3][1]++;}cov_22s6dd2wjj.s[28]++;\n  if (!request.body.range) {/* istanbul ignore next */cov_22s6dd2wjj.b[4][0]++;cov_22s6dd2wjj.s[29]++;\n    sendStatus(response, 400, 'range name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[30]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[4][1]++;}\n  let mountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[31]++, new Mountain(\n  request.body.name,\n  request.body.state,\n  request.body.hiking,\n  request.body.range)); /* istanbul ignore next */cov_22s6dd2wjj.s[32]++;\n\n\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_22s6dd2wjj.f[3]++;cov_22s6dd2wjj.s[33]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_22s6dd2wjj.f[4]++;cov_22s6dd2wjj.s[34]++;\n    sendStatus(response, 500, error);\n  });\n\n}","timestamp":"2017-12-10T01:49:06.524Z"}
{"level":"info","message":"Responding with a 400 code due to name not found","timestamp":"2017-12-10T01:49:06.524Z"}
{"level":"info","message":"adding a POST url and callback","timestamp":"2017-12-10T01:50:06.859Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-10T01:50:06.860Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[2]++;cov_22s6dd2wjj.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_22s6dd2wjj.b[0][0]++;cov_22s6dd2wjj.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[0][1]++;}cov_22s6dd2wjj.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_22s6dd2wjj.b[1][0]++;cov_22s6dd2wjj.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[1][1]++;}cov_22s6dd2wjj.s[22]++;\n  if (!request.body.state) {/* istanbul ignore next */cov_22s6dd2wjj.b[2][0]++;cov_22s6dd2wjj.s[23]++;\n    sendStatus(response, 400, 'state not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[2][1]++;}cov_22s6dd2wjj.s[25]++;\n  if (!request.body.hiking) {/* istanbul ignore next */cov_22s6dd2wjj.b[3][0]++;cov_22s6dd2wjj.s[26]++;\n    sendStatus(response, 400, 'hiking info not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[3][1]++;}cov_22s6dd2wjj.s[28]++;\n  if (!request.body.range) {/* istanbul ignore next */cov_22s6dd2wjj.b[4][0]++;cov_22s6dd2wjj.s[29]++;\n    sendStatus(response, 400, 'range name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[30]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[4][1]++;}\n  let mountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[31]++, new Mountain(\n  request.body.name,\n  request.body.state,\n  request.body.hiking,\n  request.body.range)); /* istanbul ignore next */cov_22s6dd2wjj.s[32]++;\n\n\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_22s6dd2wjj.f[3]++;cov_22s6dd2wjj.s[33]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_22s6dd2wjj.f[4]++;cov_22s6dd2wjj.s[34]++;\n    sendStatus(response, 500, error);\n  });\n\n}","timestamp":"2017-12-10T01:50:06.860Z"}
{"level":"info","message":"adding a GET url and callback","timestamp":"2017-12-10T01:50:06.860Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-10T01:50:06.860Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[5]++;\n  let id = /* istanbul ignore next */(cov_22s6dd2wjj.s[36]++, request.url.query.id); /* istanbul ignore next */cov_22s6dd2wjj.s[37]++;\n\n  if (!id) {/* istanbul ignore next */cov_22s6dd2wjj.b[5][0]++;cov_22s6dd2wjj.s[38]++;\n    storage.fetchAll().\n    then(mountains => {/* istanbul ignore next */cov_22s6dd2wjj.f[6]++;cov_22s6dd2wjj.s[39]++;\n      sendJSON(response, 200, mountains);\n    }).\n    catch(error => {/* istanbul ignore next */cov_22s6dd2wjj.f[7]++;cov_22s6dd2wjj.s[40]++;\n      sendStatus(response, 500, error);\n    });\n  } else {/* istanbul ignore next */cov_22s6dd2wjj.b[5][1]++;cov_22s6dd2wjj.s[41]++;\n    storage.fetchItem(id).\n    then(mountain => {/* istanbul ignore next */cov_22s6dd2wjj.f[8]++;cov_22s6dd2wjj.s[42]++;\n      sendJSON(response, 200, mountain);\n    }).\n    catch(error => {/* istanbul ignore next */cov_22s6dd2wjj.f[9]++;cov_22s6dd2wjj.s[43]++;\n      sendStatus(response, 404, error);\n    });\n  }\n}","timestamp":"2017-12-10T01:50:06.860Z"}
{"level":"info","message":"adding a DELETE url and callback","timestamp":"2017-12-10T01:50:06.860Z"}
{"level":"info","message":"/api/mountains","timestamp":"2017-12-10T01:50:06.860Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[10]++;\n  let id = /* istanbul ignore next */(cov_22s6dd2wjj.s[45]++, request.url.query.id); /* istanbul ignore next */cov_22s6dd2wjj.s[46]++;\n  storage.deleteItem(id).\n  then(filteredMountains => {/* istanbul ignore next */cov_22s6dd2wjj.f[11]++;cov_22s6dd2wjj.s[47]++;\n    sendJSON(response, 200, filteredMountains);\n  }).\n  catch(error => {/* istanbul ignore next */cov_22s6dd2wjj.f[12]++;cov_22s6dd2wjj.s[48]++;\n    sendStatus(response, 404, error);\n  });\n}","timestamp":"2017-12-10T01:50:06.860Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-10T01:50:06.954Z"}
{"level":"info","message":"Original URL: \"/api/mountains\"","timestamp":"2017-12-10T01:50:06.954Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/mountains\",\"path\":\"/api/mountains\",\"href\":\"/api/mountains\"}","timestamp":"2017-12-10T01:50:06.954Z"}
{"level":"info","message":"found the following handler","timestamp":"2017-12-10T01:50:06.955Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[2]++;cov_22s6dd2wjj.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_22s6dd2wjj.b[0][0]++;cov_22s6dd2wjj.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[0][1]++;}cov_22s6dd2wjj.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_22s6dd2wjj.b[1][0]++;cov_22s6dd2wjj.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[1][1]++;}cov_22s6dd2wjj.s[22]++;\n  if (!request.body.state) {/* istanbul ignore next */cov_22s6dd2wjj.b[2][0]++;cov_22s6dd2wjj.s[23]++;\n    sendStatus(response, 400, 'state not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[2][1]++;}cov_22s6dd2wjj.s[25]++;\n  if (!request.body.hiking) {/* istanbul ignore next */cov_22s6dd2wjj.b[3][0]++;cov_22s6dd2wjj.s[26]++;\n    sendStatus(response, 400, 'hiking info not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[3][1]++;}cov_22s6dd2wjj.s[28]++;\n  if (!request.body.range) {/* istanbul ignore next */cov_22s6dd2wjj.b[4][0]++;cov_22s6dd2wjj.s[29]++;\n    sendStatus(response, 400, 'range name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[30]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[4][1]++;}\n  let mountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[31]++, new Mountain(\n  request.body.name,\n  request.body.state,\n  request.body.hiking,\n  request.body.range)); /* istanbul ignore next */cov_22s6dd2wjj.s[32]++;\n\n\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_22s6dd2wjj.f[3]++;cov_22s6dd2wjj.s[33]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_22s6dd2wjj.f[4]++;cov_22s6dd2wjj.s[34]++;\n    sendStatus(response, 500, error);\n  });\n\n}","timestamp":"2017-12-10T01:50:06.955Z"}
{"level":"info","message":"responding with a 200 code and the following json data","timestamp":"2017-12-10T01:50:06.958Z"}
{"id":"72b113b0-dd4c-11e7-8c90-49494622d95f","name":"Shuksan","state":"Washington","hiking":"Yes","range":"Cascades","level":"info","message":"","timestamp":"2017-12-10T01:50:06.958Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-10T01:50:06.966Z"}
{"level":"info","message":"Original URL: \"/api/mountains\"","timestamp":"2017-12-10T01:50:06.967Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/mountains\",\"path\":\"/api/mountains\",\"href\":\"/api/mountains\"}","timestamp":"2017-12-10T01:50:06.967Z"}
{"level":"info","message":"found the following handler","timestamp":"2017-12-10T01:50:06.967Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[2]++;cov_22s6dd2wjj.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_22s6dd2wjj.b[0][0]++;cov_22s6dd2wjj.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[0][1]++;}cov_22s6dd2wjj.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_22s6dd2wjj.b[1][0]++;cov_22s6dd2wjj.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[1][1]++;}cov_22s6dd2wjj.s[22]++;\n  if (!request.body.state) {/* istanbul ignore next */cov_22s6dd2wjj.b[2][0]++;cov_22s6dd2wjj.s[23]++;\n    sendStatus(response, 400, 'state not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[2][1]++;}cov_22s6dd2wjj.s[25]++;\n  if (!request.body.hiking) {/* istanbul ignore next */cov_22s6dd2wjj.b[3][0]++;cov_22s6dd2wjj.s[26]++;\n    sendStatus(response, 400, 'hiking info not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[3][1]++;}cov_22s6dd2wjj.s[28]++;\n  if (!request.body.range) {/* istanbul ignore next */cov_22s6dd2wjj.b[4][0]++;cov_22s6dd2wjj.s[29]++;\n    sendStatus(response, 400, 'range name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[30]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[4][1]++;}\n  let mountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[31]++, new Mountain(\n  request.body.name,\n  request.body.state,\n  request.body.hiking,\n  request.body.range)); /* istanbul ignore next */cov_22s6dd2wjj.s[32]++;\n\n\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_22s6dd2wjj.f[3]++;cov_22s6dd2wjj.s[33]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_22s6dd2wjj.f[4]++;cov_22s6dd2wjj.s[34]++;\n    sendStatus(response, 500, error);\n  });\n\n}","timestamp":"2017-12-10T01:50:06.967Z"}
{"level":"info","message":"responding with a 200 code and the following json data","timestamp":"2017-12-10T01:50:06.968Z"}
{"id":"72b2e870-dd4c-11e7-8c90-49494622d95f","name":"Shuksan","state":"Washington","hiking":"Yes","range":"Cascades","level":"info","message":"","timestamp":"2017-12-10T01:50:06.968Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-10T01:50:06.971Z"}
{"level":"info","message":"Original URL: \"/api/mountains?id=$33333\"","timestamp":"2017-12-10T01:50:06.972Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=$33333\",\"query\":{\"id\":\"$33333\"},\"pathname\":\"/api/mountains\",\"path\":\"/api/mountains?id=$33333\",\"href\":\"/api/mountains?id=$33333\"}","timestamp":"2017-12-10T01:50:06.972Z"}
{"level":"info","message":"found the following handler","timestamp":"2017-12-10T01:50:06.972Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[5]++;\n  let id = /* istanbul ignore next */(cov_22s6dd2wjj.s[36]++, request.url.query.id); /* istanbul ignore next */cov_22s6dd2wjj.s[37]++;\n\n  if (!id) {/* istanbul ignore next */cov_22s6dd2wjj.b[5][0]++;cov_22s6dd2wjj.s[38]++;\n    storage.fetchAll().\n    then(mountains => {/* istanbul ignore next */cov_22s6dd2wjj.f[6]++;cov_22s6dd2wjj.s[39]++;\n      sendJSON(response, 200, mountains);\n    }).\n    catch(error => {/* istanbul ignore next */cov_22s6dd2wjj.f[7]++;cov_22s6dd2wjj.s[40]++;\n      sendStatus(response, 500, error);\n    });\n  } else {/* istanbul ignore next */cov_22s6dd2wjj.b[5][1]++;cov_22s6dd2wjj.s[41]++;\n    storage.fetchItem(id).\n    then(mountain => {/* istanbul ignore next */cov_22s6dd2wjj.f[8]++;cov_22s6dd2wjj.s[42]++;\n      sendJSON(response, 200, mountain);\n    }).\n    catch(error => {/* istanbul ignore next */cov_22s6dd2wjj.f[9]++;cov_22s6dd2wjj.s[43]++;\n      sendStatus(response, 404, error);\n    });\n  }\n}","timestamp":"2017-12-10T01:50:06.972Z"}
{"level":"info","message":"Routing a request","timestamp":"2017-12-10T01:50:06.973Z"}
{"level":"info","message":"Original URL: \"/api/mountains?e8013d70-dbad-11e7-9cb6-ddffa32a3c9b\"","timestamp":"2017-12-10T01:50:06.973Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?e8013d70-dbad-11e7-9cb6-ddffa32a3c9b\",\"query\":{\"e8013d70-dbad-11e7-9cb6-ddffa32a3c9b\":\"\"},\"pathname\":\"/api/mountains\",\"path\":\"/api/mountains?e8013d70-dbad-11e7-9cb6-ddffa32a3c9b\",\"href\":\"/api/mountains?e8013d70-dbad-11e7-9cb6-ddffa32a3c9b\"}","timestamp":"2017-12-10T01:50:06.973Z"}
{"level":"info","message":"found the following handler","timestamp":"2017-12-10T01:50:06.973Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[5]++;\n  let id = /* istanbul ignore next */(cov_22s6dd2wjj.s[36]++, request.url.query.id); /* istanbul ignore next */cov_22s6dd2wjj.s[37]++;\n\n  if (!id) {/* istanbul ignore next */cov_22s6dd2wjj.b[5][0]++;cov_22s6dd2wjj.s[38]++;\n    storage.fetchAll().\n    then(mountains => {/* istanbul ignore next */cov_22s6dd2wjj.f[6]++;cov_22s6dd2wjj.s[39]++;\n      sendJSON(response, 200, mountains);\n    }).\n    catch(error => {/* istanbul ignore next */cov_22s6dd2wjj.f[7]++;cov_22s6dd2wjj.s[40]++;\n      sendStatus(response, 500, error);\n    });\n  } else {/* istanbul ignore next */cov_22s6dd2wjj.b[5][1]++;cov_22s6dd2wjj.s[41]++;\n    storage.fetchItem(id).\n    then(mountain => {/* istanbul ignore next */cov_22s6dd2wjj.f[8]++;cov_22s6dd2wjj.s[42]++;\n      sendJSON(response, 200, mountain);\n    }).\n    catch(error => {/* istanbul ignore next */cov_22s6dd2wjj.f[9]++;cov_22s6dd2wjj.s[43]++;\n      sendStatus(response, 404, error);\n    });\n  }\n}","timestamp":"2017-12-10T01:50:06.973Z"}
{"level":"info","message":"Responding with a 404 code due to Error: ---->STORAGE_ERROR<---- item not found","timestamp":"2017-12-10T01:50:06.974Z"}
{"level":"info","message":"responding with a 200 code and the following json data","timestamp":"2017-12-10T01:50:06.974Z"}
[{"id":"54d3c4c0-dbce-11e7-8f43-517dfbcdc019","name":"Shuksan","state":"Washington","hiking":"Yes","range":"Cascades"},{"id":"69dcbf30-dc6d-11e7-bf34-7f0544ba030b","name":"Shuksan","state":"Washington","hiking":"Yes","range":"Cascades"},{"id":"594bfed0-dc70-11e7-a3f8-cd2f6eabf71f","name":"Shuksan","state":"Washington","hiking":"Yes","range":"Cascades"},{"id":"cf81af00-dc70-11e7-9216-c9bd03b6ecab","name":"Shuksan","state":"Washington","hiking":"Yes","range":"Cascades"},{"id":"eb966780-dc70-11e7-8756-590d687489d3","name":"Shuksan","state":"Washington","hiking":"Yes","range":"Cascades"},{"id":"fdb481d0-dc71-11e7-afd0-2345683f78c3","name":"Shuksan","state":"Washington","hiking":"Yes","range":"Cascades"},{"id":"fdb65690-dc71-11e7-afd0-2345683f78c3","name":"Shuksan","state":"Washington","hiking":"Yes","range":"Cascades"},{"id":"142b6460-dc72-11e7-a3d6-abb97bbb267d","name":"Shuksan","state":"Washington","hiking":"Yes","range":"Cascades"},{"id":"142d3920-dc72-11e7-a3d6-abb97bbb267d","name":"Shuksan","state":"Washington","hiking":"Yes","range":"Cascades"},{"id":"3a5e4ad0-dc72-11e7-a730-d3886b3b69b7","name":"Shuksan","state":"Washington","hiking":"Yes","range":"Cascades"},{"id":"3a606db0-dc72-11e7-a730-d3886b3b69b7","name":"Shuksan","state":"Washington","hiking":"Yes","range":"Cascades"},{"id":"f2a7c340-dc73-11e7-9257-d5afe23fc3df","name":"Shuksan","state":"Washington","hiking":"Yes","range":"Cascades"},{"id":"f2a99800-dc73-11e7-9257-d5afe23fc3df","name":"Shuksan","state":"Washington","hiking":"Yes","range":"Cascades"},{"id":"2a498db0-dc74-11e7-98b9-0fef5efabaf3","name":"Shuksan","state":"Washington","hiking":"Yes","range":"Cascades"},{"id":"2a4b8980-dc74-11e7-98b9-0fef5efabaf3","name":"Shuksan","state":"Washington","hiking":"Yes","range":"Cascades"},{"id":"34111020-dc74-11e7-81d1-6d86a580401b","name":"Shuksan","state":"Washington","hiking":"Yes","range":"Cascades"},{"id":"3412e4e0-dc74-11e7-81d1-6d86a580401b","name":"Shuksan","state":"Washington","hiking":"Yes","range":"Cascades"},{"id":"3a78ecd0-dc74-11e7-b4c6-f92a8eef496e","name":"Shuksan","state":"Washington","hiking":"Yes","range":"Cascades"},{"id":"3a7ac190-dc74-11e7-b4c6-f92a8eef496e","name":"Shuksan","state":"Washington","hiking":"Yes","range":"Cascades"},{"id":"4a78d780-dc74-11e7-adfb-5f733380cb52","name":"Shuksan","state":"Washington","hiking":"Yes","range":"Cascades"},{"id":"4a7aac40-dc74-11e7-adfb-5f733380cb52","name":"Shuksan","state":"Washington","hiking":"Yes","range":"Cascades"},{"id":"a80cfcf0-dc74-11e7-8c2c-7b581071bc0e","name":"Shuksan","state":"Washington","hiking":"Yes","range":"Cascades"},{"id":"a80ed1b0-dc74-11e7-8c2c-7b581071bc0e","name":"Shuksan","state":"Washington","hiking":"Yes","range":"Cascades"},{"id":"c5138f80-dc74-11e7-907a-75b2ea9b96dc","name":"Shuksan","state":"Washington","hiking":"Yes","range":"Cascades"},{"id":"c5156440-dc74-11e7-907a-75b2ea9b96dc","name":"Shuksan","state":"Washington","hiking":"Yes","range":"Cascades"},{"id":"ec750ae0-dc74-11e7-b348-4537879aca8e","name":"Shuksan","state":"Washington","hiking":"Yes","range":"Cascades"},{"id":"ec76dfa0-dc74-11e7-b348-4537879aca8e","name":"Shuksan","state":"Washington","hiking":"Yes","range":"Cascades"},{"id":"fc913ab0-dc75-11e7-becd-b5884197b0af","name":"Shuksan","state":"Washington","hiking":"Yes","range":"Cascades"},{"id":"fc930f70-dc75-11e7-becd-b5884197b0af","name":"Shuksan","state":"Washington","hiking":"Yes","range":"Cascades"},{"id":"af6de2d0-dc78-11e7-82ff-ef0500acc00d","name":"Shuksan","state":"Washington","hiking":"Yes","range":"Cascades"},{"id":"af6fb790-dc78-11e7-82ff-ef0500acc00d","name":"Shuksan","state":"Washington","hiking":"Yes","range":"Cascades"},{"id":"f58f6a10-dd48-11e7-ac10-0d2d27df44e0","name":"Shuksan","state":"Washington","hiking":"Yes","range":"Cascades"},{"id":"f59117c0-dd48-11e7-ac10-0d2d27df44e0","name":"Shuksan","state":"Washington","hiking":"Yes","range":"Cascades"},{"id":"4e9dd8f0-dd4c-11e7-b60d-b15a2dc7be43","name":"Shuksan","state":"Washington","hiking":"Yes","range":"Cascades"},{"id":"4ea55300-dd4c-11e7-b60d-b15a2dc7be43","name":"Shuksan","state":"Washington","hiking":"Yes","range":"Cascades"},{"id":"72b113b0-dd4c-11e7-8c90-49494622d95f","name":"Shuksan","state":"Washington","hiking":"Yes","range":"Cascades"},{"id":"72b2e870-dd4c-11e7-8c90-49494622d95f","name":"Shuksan","state":"Washington","hiking":"Yes","range":"Cascades"}]
{"level":"info","message":"Routing a request","timestamp":"2017-12-10T01:50:06.979Z"}
{"level":"info","message":"Original URL: \"/api/mountains\"","timestamp":"2017-12-10T01:50:06.979Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/mountains\",\"path\":\"/api/mountains\",\"href\":\"/api/mountains\"}","timestamp":"2017-12-10T01:50:06.979Z"}
{"level":"info","message":"found the following handler","timestamp":"2017-12-10T01:50:06.979Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22s6dd2wjj.f[2]++;cov_22s6dd2wjj.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_22s6dd2wjj.b[0][0]++;cov_22s6dd2wjj.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[0][1]++;}cov_22s6dd2wjj.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_22s6dd2wjj.b[1][0]++;cov_22s6dd2wjj.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[1][1]++;}cov_22s6dd2wjj.s[22]++;\n  if (!request.body.state) {/* istanbul ignore next */cov_22s6dd2wjj.b[2][0]++;cov_22s6dd2wjj.s[23]++;\n    sendStatus(response, 400, 'state not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[2][1]++;}cov_22s6dd2wjj.s[25]++;\n  if (!request.body.hiking) {/* istanbul ignore next */cov_22s6dd2wjj.b[3][0]++;cov_22s6dd2wjj.s[26]++;\n    sendStatus(response, 400, 'hiking info not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[3][1]++;}cov_22s6dd2wjj.s[28]++;\n  if (!request.body.range) {/* istanbul ignore next */cov_22s6dd2wjj.b[4][0]++;cov_22s6dd2wjj.s[29]++;\n    sendStatus(response, 400, 'range name not found'); /* istanbul ignore next */cov_22s6dd2wjj.s[30]++;\n    return;\n  } else /* istanbul ignore next */{cov_22s6dd2wjj.b[4][1]++;}\n  let mountain = /* istanbul ignore next */(cov_22s6dd2wjj.s[31]++, new Mountain(\n  request.body.name,\n  request.body.state,\n  request.body.hiking,\n  request.body.range)); /* istanbul ignore next */cov_22s6dd2wjj.s[32]++;\n\n\n  storage.addItem(mountain).\n  then(() => {/* istanbul ignore next */cov_22s6dd2wjj.f[3]++;cov_22s6dd2wjj.s[33]++;\n    sendJSON(response, 200, mountain);\n  }).\n  catch(error => {/* istanbul ignore next */cov_22s6dd2wjj.f[4]++;cov_22s6dd2wjj.s[34]++;\n    sendStatus(response, 500, error);\n  });\n\n}","timestamp":"2017-12-10T01:50:06.979Z"}
{"level":"info","message":"Responding with a 400 code due to name not found","timestamp":"2017-12-10T01:50:06.979Z"}
