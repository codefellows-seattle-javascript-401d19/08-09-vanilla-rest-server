{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-06T23:56:09.220Z"}
{"level":"info","message":"/api/planets","timestamp":"2017-12-06T23:56:09.221Z"}
{"level":"info","message":"(request,response) => {\n  // Here, I know that my request has been pre-parsed\n  if(!request.body){\n    sendStatus(response,400,'body not found');\n    return;\n  }\n  if(!request.body.name){\n    sendStatus(response,400,'name not found');\n    return;\n  }\n  if(!request.body.content){\n    sendStatus(response,400,'content not found');\n    return;\n  }\n  //can create my planet since all test pass\n  let planet = new Note(request.body.name,request.body.content);\n  planets.push(planet);\n  sendJSON(response,200,planet);\n}","timestamp":"2017-12-06T23:56:09.221Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-06T23:56:09.228Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-06T23:56:43.446Z"}
{"level":"info","message":"/api/planets","timestamp":"2017-12-06T23:56:43.446Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1yclqxwsic.f[2]++;cov_1yclqxwsic.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_1yclqxwsic.b[0][0]++;cov_1yclqxwsic.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_1yclqxwsic.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_1yclqxwsic.b[0][1]++;}cov_1yclqxwsic.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_1yclqxwsic.b[1][0]++;cov_1yclqxwsic.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_1yclqxwsic.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_1yclqxwsic.b[1][1]++;}cov_1yclqxwsic.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_1yclqxwsic.b[2][0]++;cov_1yclqxwsic.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_1yclqxwsic.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_1yclqxwsic.b[2][1]++;}\n  //can create my planet since all test pass\n  let planet = /* istanbul ignore next */(cov_1yclqxwsic.s[25]++, new Note(request.body.name, request.body.content)); /* istanbul ignore next */cov_1yclqxwsic.s[26]++;\n  planets.push(planet); /* istanbul ignore next */cov_1yclqxwsic.s[27]++;\n  sendJSON(response, 200, planet);\n}","timestamp":"2017-12-06T23:56:43.446Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-06T23:56:48.516Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-06T23:56:48.519Z"}
{"level":"info","message":"(request,response) => {\n  // Here, I know that my request has been pre-parsed\n  if(!request.body){\n    sendStatus(response,400,'body not found');\n    return;\n  }\n  if(!request.body.name){\n    sendStatus(response,400,'name not found');\n    return;\n  }\n  if(!request.body.content){\n    sendStatus(response,400,'content not found');\n    return;\n  }\n  //can create my planet since all test pass\n  let planet = new Note(request.body.name,request.body.content);\n  planets.push(planet);\n  sendJSON(response,200,planet);\n}","timestamp":"2017-12-06T23:56:48.519Z"}
{"level":"info","message":"Responding with a 400 code due to name not found","timestamp":"2017-12-06T23:56:48.519Z"}
{"level":"error","message":"__SERVER_ERROR__ server is already off","timestamp":"2017-12-06T23:56:48.524Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-06T23:57:57.414Z"}
{"level":"info","message":"/api/planets","timestamp":"2017-12-06T23:57:57.415Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1yclqxwsic.f[2]++;cov_1yclqxwsic.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_1yclqxwsic.b[0][0]++;cov_1yclqxwsic.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_1yclqxwsic.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_1yclqxwsic.b[0][1]++;}cov_1yclqxwsic.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_1yclqxwsic.b[1][0]++;cov_1yclqxwsic.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_1yclqxwsic.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_1yclqxwsic.b[1][1]++;}cov_1yclqxwsic.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_1yclqxwsic.b[2][0]++;cov_1yclqxwsic.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_1yclqxwsic.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_1yclqxwsic.b[2][1]++;}\n  //can create my planet since all test pass\n  let planet = /* istanbul ignore next */(cov_1yclqxwsic.s[25]++, new Note(request.body.name, request.body.content)); /* istanbul ignore next */cov_1yclqxwsic.s[26]++;\n  planets.push(planet); /* istanbul ignore next */cov_1yclqxwsic.s[27]++;\n  sendJSON(response, 200, planet);\n}","timestamp":"2017-12-06T23:57:57.415Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-06T23:57:57.456Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-06T23:57:57.507Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-06T23:57:57.508Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1yclqxwsic.f[2]++;cov_1yclqxwsic.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_1yclqxwsic.b[0][0]++;cov_1yclqxwsic.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_1yclqxwsic.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_1yclqxwsic.b[0][1]++;}cov_1yclqxwsic.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_1yclqxwsic.b[1][0]++;cov_1yclqxwsic.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_1yclqxwsic.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_1yclqxwsic.b[1][1]++;}cov_1yclqxwsic.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_1yclqxwsic.b[2][0]++;cov_1yclqxwsic.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_1yclqxwsic.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_1yclqxwsic.b[2][1]++;}\n  //can create my planet since all test pass\n  let planet = /* istanbul ignore next */(cov_1yclqxwsic.s[25]++, new Note(request.body.name, request.body.content)); /* istanbul ignore next */cov_1yclqxwsic.s[26]++;\n  planets.push(planet); /* istanbul ignore next */cov_1yclqxwsic.s[27]++;\n  sendJSON(response, 200, planet);\n}","timestamp":"2017-12-06T23:57:57.508Z"}
{"level":"info","message":"Responding with a 400 code due to name not found","timestamp":"2017-12-06T23:57:57.508Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-06T23:58:46.914Z"}
{"level":"info","message":"/api/planets","timestamp":"2017-12-06T23:58:46.914Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1yclqxwsic.f[2]++;cov_1yclqxwsic.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_1yclqxwsic.b[0][0]++;cov_1yclqxwsic.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_1yclqxwsic.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_1yclqxwsic.b[0][1]++;}cov_1yclqxwsic.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_1yclqxwsic.b[1][0]++;cov_1yclqxwsic.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_1yclqxwsic.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_1yclqxwsic.b[1][1]++;}cov_1yclqxwsic.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_1yclqxwsic.b[2][0]++;cov_1yclqxwsic.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_1yclqxwsic.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_1yclqxwsic.b[2][1]++;}\n  //can create my planet since all test pass\n  let planet = /* istanbul ignore next */(cov_1yclqxwsic.s[25]++, new Note(request.body.name, request.body.content)); /* istanbul ignore next */cov_1yclqxwsic.s[26]++;\n  planets.push(planet); /* istanbul ignore next */cov_1yclqxwsic.s[27]++;\n  sendJSON(response, 200, planet);\n}","timestamp":"2017-12-06T23:58:46.914Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-06T23:58:46.957Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-06T23:58:47.008Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-06T23:58:47.009Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1yclqxwsic.f[2]++;cov_1yclqxwsic.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_1yclqxwsic.b[0][0]++;cov_1yclqxwsic.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_1yclqxwsic.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_1yclqxwsic.b[0][1]++;}cov_1yclqxwsic.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_1yclqxwsic.b[1][0]++;cov_1yclqxwsic.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_1yclqxwsic.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_1yclqxwsic.b[1][1]++;}cov_1yclqxwsic.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_1yclqxwsic.b[2][0]++;cov_1yclqxwsic.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_1yclqxwsic.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_1yclqxwsic.b[2][1]++;}\n  //can create my planet since all test pass\n  let planet = /* istanbul ignore next */(cov_1yclqxwsic.s[25]++, new Note(request.body.name, request.body.content)); /* istanbul ignore next */cov_1yclqxwsic.s[26]++;\n  planets.push(planet); /* istanbul ignore next */cov_1yclqxwsic.s[27]++;\n  sendJSON(response, 200, planet);\n}","timestamp":"2017-12-06T23:58:47.009Z"}
{"level":"info","message":"Responding with a 400 code due to name not found","timestamp":"2017-12-06T23:58:47.010Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T00:01:00.369Z"}
{"level":"info","message":"/api/planet","timestamp":"2017-12-07T00:01:00.370Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1yclqxwsic.f[2]++;cov_1yclqxwsic.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_1yclqxwsic.b[0][0]++;cov_1yclqxwsic.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_1yclqxwsic.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_1yclqxwsic.b[0][1]++;}cov_1yclqxwsic.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_1yclqxwsic.b[1][0]++;cov_1yclqxwsic.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_1yclqxwsic.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_1yclqxwsic.b[1][1]++;}cov_1yclqxwsic.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_1yclqxwsic.b[2][0]++;cov_1yclqxwsic.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_1yclqxwsic.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_1yclqxwsic.b[2][1]++;}\n  //can create my planet since all test pass\n  let planet = /* istanbul ignore next */(cov_1yclqxwsic.s[25]++, new Note(request.body.name, request.body.content)); /* istanbul ignore next */cov_1yclqxwsic.s[26]++;\n  planets.push(planet); /* istanbul ignore next */cov_1yclqxwsic.s[27]++;\n  sendJSON(response, 200, planet);\n}","timestamp":"2017-12-07T00:01:00.370Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T00:01:00.433Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T00:01:00.514Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T00:01:00.517Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1yclqxwsic.f[2]++;cov_1yclqxwsic.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_1yclqxwsic.b[0][0]++;cov_1yclqxwsic.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_1yclqxwsic.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_1yclqxwsic.b[0][1]++;}cov_1yclqxwsic.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_1yclqxwsic.b[1][0]++;cov_1yclqxwsic.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_1yclqxwsic.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_1yclqxwsic.b[1][1]++;}cov_1yclqxwsic.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_1yclqxwsic.b[2][0]++;cov_1yclqxwsic.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_1yclqxwsic.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_1yclqxwsic.b[2][1]++;}\n  //can create my planet since all test pass\n  let planet = /* istanbul ignore next */(cov_1yclqxwsic.s[25]++, new Note(request.body.name, request.body.content)); /* istanbul ignore next */cov_1yclqxwsic.s[26]++;\n  planets.push(planet); /* istanbul ignore next */cov_1yclqxwsic.s[27]++;\n  sendJSON(response, 200, planet);\n}","timestamp":"2017-12-07T00:01:00.517Z"}
{"level":"info","message":"Responding with a 400 code due to name not found","timestamp":"2017-12-07T00:01:00.518Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T00:01:46.470Z"}
{"level":"info","message":"/api/planet","timestamp":"2017-12-07T00:01:46.471Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1yclqxwsic.f[2]++;cov_1yclqxwsic.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_1yclqxwsic.b[0][0]++;cov_1yclqxwsic.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_1yclqxwsic.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_1yclqxwsic.b[0][1]++;}cov_1yclqxwsic.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_1yclqxwsic.b[1][0]++;cov_1yclqxwsic.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_1yclqxwsic.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_1yclqxwsic.b[1][1]++;}cov_1yclqxwsic.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_1yclqxwsic.b[2][0]++;cov_1yclqxwsic.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_1yclqxwsic.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_1yclqxwsic.b[2][1]++;}\n  //can create my planet since all test pass\n  let planet = /* istanbul ignore next */(cov_1yclqxwsic.s[25]++, new Note(request.body.name, request.body.content)); /* istanbul ignore next */cov_1yclqxwsic.s[26]++;\n  planet.push(planet); /* istanbul ignore next */cov_1yclqxwsic.s[27]++;\n  sendJSON(response, 200, planet);\n}","timestamp":"2017-12-07T00:01:46.471Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T00:01:46.515Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T00:01:46.571Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T00:01:46.572Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1yclqxwsic.f[2]++;cov_1yclqxwsic.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_1yclqxwsic.b[0][0]++;cov_1yclqxwsic.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_1yclqxwsic.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_1yclqxwsic.b[0][1]++;}cov_1yclqxwsic.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_1yclqxwsic.b[1][0]++;cov_1yclqxwsic.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_1yclqxwsic.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_1yclqxwsic.b[1][1]++;}cov_1yclqxwsic.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_1yclqxwsic.b[2][0]++;cov_1yclqxwsic.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_1yclqxwsic.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_1yclqxwsic.b[2][1]++;}\n  //can create my planet since all test pass\n  let planet = /* istanbul ignore next */(cov_1yclqxwsic.s[25]++, new Note(request.body.name, request.body.content)); /* istanbul ignore next */cov_1yclqxwsic.s[26]++;\n  planet.push(planet); /* istanbul ignore next */cov_1yclqxwsic.s[27]++;\n  sendJSON(response, 200, planet);\n}","timestamp":"2017-12-07T00:01:46.572Z"}
{"level":"info","message":"Responding with a 400 code due to name not found","timestamp":"2017-12-07T00:01:46.572Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T00:06:37.522Z"}
{"level":"info","message":"/api/planet","timestamp":"2017-12-07T00:06:37.523Z"}
{"level":"info","message":"(request,response) => {\n  // Here, I know that my request has been pre-parsed\n  if(!request.body){\n    sendStatus(response,400,'body not found');\n    return;\n  }\n  if(!request.body.name){\n    sendStatus(response,400,'name not found');\n    return;\n  }\n  if(!request.body.content){\n    sendStatus(response,400,'content not found');\n    return;\n  }\n  //can create my planet since all test pass\n  let planet = new Note(request.body.name,request.body.content);\n  planet.push(planet);\n  sendJSON(response,200,planet);\n}","timestamp":"2017-12-07T00:06:37.523Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T00:09:06.987Z"}
{"level":"info","message":"/api/planet","timestamp":"2017-12-07T00:09:06.988Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1yclqxwsic.f[2]++;cov_1yclqxwsic.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_1yclqxwsic.b[0][0]++;cov_1yclqxwsic.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_1yclqxwsic.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_1yclqxwsic.b[0][1]++;}cov_1yclqxwsic.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_1yclqxwsic.b[1][0]++;cov_1yclqxwsic.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_1yclqxwsic.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_1yclqxwsic.b[1][1]++;}cov_1yclqxwsic.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_1yclqxwsic.b[2][0]++;cov_1yclqxwsic.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_1yclqxwsic.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_1yclqxwsic.b[2][1]++;}\n  //can create my planet since all test pass\n  let planet = /* istanbul ignore next */(cov_1yclqxwsic.s[25]++, new Note(request.body.name, request.body.content)); /* istanbul ignore next */cov_1yclqxwsic.s[26]++;\n  planet.push(planet); /* istanbul ignore next */cov_1yclqxwsic.s[27]++;\n  sendJSON(response, 200, planet);\n}","timestamp":"2017-12-07T00:09:06.988Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T00:09:07.029Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T00:09:07.076Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T00:09:07.077Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1yclqxwsic.f[2]++;cov_1yclqxwsic.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_1yclqxwsic.b[0][0]++;cov_1yclqxwsic.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_1yclqxwsic.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_1yclqxwsic.b[0][1]++;}cov_1yclqxwsic.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_1yclqxwsic.b[1][0]++;cov_1yclqxwsic.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_1yclqxwsic.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_1yclqxwsic.b[1][1]++;}cov_1yclqxwsic.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_1yclqxwsic.b[2][0]++;cov_1yclqxwsic.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_1yclqxwsic.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_1yclqxwsic.b[2][1]++;}\n  //can create my planet since all test pass\n  let planet = /* istanbul ignore next */(cov_1yclqxwsic.s[25]++, new Note(request.body.name, request.body.content)); /* istanbul ignore next */cov_1yclqxwsic.s[26]++;\n  planet.push(planet); /* istanbul ignore next */cov_1yclqxwsic.s[27]++;\n  sendJSON(response, 200, planet);\n}","timestamp":"2017-12-07T00:09:07.077Z"}
{"level":"info","message":"Responding with a 400 code due to name not found","timestamp":"2017-12-07T00:09:07.078Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T00:10:29.319Z"}
{"level":"info","message":"/api/planet","timestamp":"2017-12-07T00:10:29.321Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1yclqxwsic.f[2]++;cov_1yclqxwsic.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_1yclqxwsic.b[0][0]++;cov_1yclqxwsic.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_1yclqxwsic.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_1yclqxwsic.b[0][1]++;}cov_1yclqxwsic.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_1yclqxwsic.b[1][0]++;cov_1yclqxwsic.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_1yclqxwsic.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_1yclqxwsic.b[1][1]++;}cov_1yclqxwsic.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_1yclqxwsic.b[2][0]++;cov_1yclqxwsic.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_1yclqxwsic.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_1yclqxwsic.b[2][1]++;}\n  //can create my planet since all test pass\n  let planet = /* istanbul ignore next */(cov_1yclqxwsic.s[25]++, new Note(request.body.name, request.body.content)); /* istanbul ignore next */cov_1yclqxwsic.s[26]++;\n  planet.push(planet); /* istanbul ignore next */cov_1yclqxwsic.s[27]++;\n  sendJSON(response, 200, planet);\n}","timestamp":"2017-12-07T00:10:29.322Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T00:10:29.399Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T00:10:29.484Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T00:10:29.486Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1yclqxwsic.f[2]++;cov_1yclqxwsic.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_1yclqxwsic.b[0][0]++;cov_1yclqxwsic.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_1yclqxwsic.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_1yclqxwsic.b[0][1]++;}cov_1yclqxwsic.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_1yclqxwsic.b[1][0]++;cov_1yclqxwsic.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_1yclqxwsic.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_1yclqxwsic.b[1][1]++;}cov_1yclqxwsic.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_1yclqxwsic.b[2][0]++;cov_1yclqxwsic.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_1yclqxwsic.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_1yclqxwsic.b[2][1]++;}\n  //can create my planet since all test pass\n  let planet = /* istanbul ignore next */(cov_1yclqxwsic.s[25]++, new Note(request.body.name, request.body.content)); /* istanbul ignore next */cov_1yclqxwsic.s[26]++;\n  planet.push(planet); /* istanbul ignore next */cov_1yclqxwsic.s[27]++;\n  sendJSON(response, 200, planet);\n}","timestamp":"2017-12-07T00:10:29.486Z"}
{"level":"info","message":"Responding with a 400 code due to name not found","timestamp":"2017-12-07T00:10:29.487Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T00:12:20.525Z"}
{"level":"info","message":"/api/planet","timestamp":"2017-12-07T00:12:20.525Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[2]++;cov_dsu7d9qvm.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_dsu7d9qvm.b[0][0]++;cov_dsu7d9qvm.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[0][1]++;}cov_dsu7d9qvm.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_dsu7d9qvm.b[1][0]++;cov_dsu7d9qvm.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[1][1]++;}cov_dsu7d9qvm.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_dsu7d9qvm.b[2][0]++;cov_dsu7d9qvm.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[2][1]++;}\n  //can create my planet since all test pass\n  let planet = /* istanbul ignore next */(cov_dsu7d9qvm.s[25]++, new Planet(request.body.name, request.body.content)); /* istanbul ignore next */cov_dsu7d9qvm.s[26]++;\n  planet.push(planet); /* istanbul ignore next */cov_dsu7d9qvm.s[27]++;\n  sendJSON(response, 200, planet);\n}","timestamp":"2017-12-07T00:12:20.525Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T00:12:20.566Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T00:12:20.623Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T00:12:20.625Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[2]++;cov_dsu7d9qvm.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_dsu7d9qvm.b[0][0]++;cov_dsu7d9qvm.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[0][1]++;}cov_dsu7d9qvm.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_dsu7d9qvm.b[1][0]++;cov_dsu7d9qvm.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[1][1]++;}cov_dsu7d9qvm.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_dsu7d9qvm.b[2][0]++;cov_dsu7d9qvm.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[2][1]++;}\n  //can create my planet since all test pass\n  let planet = /* istanbul ignore next */(cov_dsu7d9qvm.s[25]++, new Planet(request.body.name, request.body.content)); /* istanbul ignore next */cov_dsu7d9qvm.s[26]++;\n  planet.push(planet); /* istanbul ignore next */cov_dsu7d9qvm.s[27]++;\n  sendJSON(response, 200, planet);\n}","timestamp":"2017-12-07T00:12:20.625Z"}
{"level":"info","message":"Responding with a 400 code due to name not found","timestamp":"2017-12-07T00:12:20.625Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T00:16:18.521Z"}
{"level":"info","message":"/api/planet","timestamp":"2017-12-07T00:16:18.523Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[2]++;cov_dsu7d9qvm.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_dsu7d9qvm.b[0][0]++;cov_dsu7d9qvm.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[0][1]++;}cov_dsu7d9qvm.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_dsu7d9qvm.b[1][0]++;cov_dsu7d9qvm.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[1][1]++;}cov_dsu7d9qvm.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_dsu7d9qvm.b[2][0]++;cov_dsu7d9qvm.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[2][1]++;}\n  //can create my planet since all test pass\n  let planet = /* istanbul ignore next */(cov_dsu7d9qvm.s[25]++, new Planet(request.body.name, request.body.content)); /* istanbul ignore next */cov_dsu7d9qvm.s[26]++;\n  planet.push(planet); /* istanbul ignore next */cov_dsu7d9qvm.s[27]++;\n  sendJSON(response, 200, planet);\n}","timestamp":"2017-12-07T00:16:18.523Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T00:16:18.575Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T00:16:18.650Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T00:16:18.652Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[2]++;cov_dsu7d9qvm.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_dsu7d9qvm.b[0][0]++;cov_dsu7d9qvm.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[0][1]++;}cov_dsu7d9qvm.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_dsu7d9qvm.b[1][0]++;cov_dsu7d9qvm.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[1][1]++;}cov_dsu7d9qvm.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_dsu7d9qvm.b[2][0]++;cov_dsu7d9qvm.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[2][1]++;}\n  //can create my planet since all test pass\n  let planet = /* istanbul ignore next */(cov_dsu7d9qvm.s[25]++, new Planet(request.body.name, request.body.content)); /* istanbul ignore next */cov_dsu7d9qvm.s[26]++;\n  planet.push(planet); /* istanbul ignore next */cov_dsu7d9qvm.s[27]++;\n  sendJSON(response, 200, planet);\n}","timestamp":"2017-12-07T00:16:18.652Z"}
{"level":"info","message":"__REQUEST_ERROR","timestamp":"2017-12-07T00:16:18.653Z"}
{"message":"planet.push is not a function","stack":"TypeError: planet.push is not a function\n    at Object.<anonymous>.router.post (/home/seth/codefellows/401/lab/08-09-vanilla-rest-server/lab-seth/route/planet-router.js:45:10)\n    at requestParser.parse.then.request (/home/seth/codefellows/401/lab/08-09-vanilla-rest-server/lab-seth/lib/router.js:54:89)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T00:16:18.653Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T00:18:12.297Z"}
{"level":"info","message":"/api/planet","timestamp":"2017-12-07T00:18:12.298Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[2]++;cov_dsu7d9qvm.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_dsu7d9qvm.b[0][0]++;cov_dsu7d9qvm.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[0][1]++;}cov_dsu7d9qvm.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_dsu7d9qvm.b[1][0]++;cov_dsu7d9qvm.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[1][1]++;}cov_dsu7d9qvm.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_dsu7d9qvm.b[2][0]++;cov_dsu7d9qvm.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[2][1]++;}\n  //can create my planet since all test pass\n  let planet = /* istanbul ignore next */(cov_dsu7d9qvm.s[25]++, new Planet(request.body.name, request.body.content)); /* istanbul ignore next */cov_dsu7d9qvm.s[26]++;\n  planets.push(planet); /* istanbul ignore next */cov_dsu7d9qvm.s[27]++;\n  sendJSON(response, 200, planet);\n}","timestamp":"2017-12-07T00:18:12.298Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T00:18:12.362Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T00:18:12.440Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T00:18:12.442Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[2]++;cov_dsu7d9qvm.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_dsu7d9qvm.b[0][0]++;cov_dsu7d9qvm.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[0][1]++;}cov_dsu7d9qvm.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_dsu7d9qvm.b[1][0]++;cov_dsu7d9qvm.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[1][1]++;}cov_dsu7d9qvm.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_dsu7d9qvm.b[2][0]++;cov_dsu7d9qvm.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[2][1]++;}\n  //can create my planet since all test pass\n  let planet = /* istanbul ignore next */(cov_dsu7d9qvm.s[25]++, new Planet(request.body.name, request.body.content)); /* istanbul ignore next */cov_dsu7d9qvm.s[26]++;\n  planets.push(planet); /* istanbul ignore next */cov_dsu7d9qvm.s[27]++;\n  sendJSON(response, 200, planet);\n}","timestamp":"2017-12-07T00:18:12.442Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T00:18:12.444Z"}
{"id":"1c8c12b0-dae4-11e7-93e8-f557062ed815","discoverDate":"2017-05-12T12:19:19.359Z","name":"BD032562b","content":"11h50m1555sDeclination02d45m365s","level":"info","message":"","timestamp":"2017-12-07T00:18:12.444Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T00:21:26.947Z"}
{"level":"info","message":"/api/planet","timestamp":"2017-12-07T00:21:26.948Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[2]++;cov_dsu7d9qvm.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_dsu7d9qvm.b[0][0]++;cov_dsu7d9qvm.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[0][1]++;}cov_dsu7d9qvm.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_dsu7d9qvm.b[1][0]++;cov_dsu7d9qvm.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[1][1]++;}cov_dsu7d9qvm.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_dsu7d9qvm.b[2][0]++;cov_dsu7d9qvm.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[2][1]++;}\n  //can create my planet since all test pass\n  let planet = /* istanbul ignore next */(cov_dsu7d9qvm.s[25]++, new Planet(request.body.name, request.body.content)); /* istanbul ignore next */cov_dsu7d9qvm.s[26]++;\n  planets.push(planet); /* istanbul ignore next */cov_dsu7d9qvm.s[27]++;\n  sendJSON(response, 200, planet);\n}","timestamp":"2017-12-07T00:21:26.948Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T00:21:26.995Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T00:21:27.051Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T00:21:27.053Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[2]++;cov_dsu7d9qvm.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_dsu7d9qvm.b[0][0]++;cov_dsu7d9qvm.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[0][1]++;}cov_dsu7d9qvm.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_dsu7d9qvm.b[1][0]++;cov_dsu7d9qvm.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[1][1]++;}cov_dsu7d9qvm.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_dsu7d9qvm.b[2][0]++;cov_dsu7d9qvm.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[2][1]++;}\n  //can create my planet since all test pass\n  let planet = /* istanbul ignore next */(cov_dsu7d9qvm.s[25]++, new Planet(request.body.name, request.body.content)); /* istanbul ignore next */cov_dsu7d9qvm.s[26]++;\n  planets.push(planet); /* istanbul ignore next */cov_dsu7d9qvm.s[27]++;\n  sendJSON(response, 200, planet);\n}","timestamp":"2017-12-07T00:21:27.053Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T00:21:27.054Z"}
{"id":"908b33d0-dae4-11e7-9590-5b5a2c9ab532","discoverDate":"2017-06-17T08:59:49.857Z","name":"BD032562b","content":"11h50m1555sDeclination02d45m365s","level":"info","message":"","timestamp":"2017-12-07T00:21:27.054Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T00:23:29.841Z"}
{"level":"info","message":"/api/planet","timestamp":"2017-12-07T00:23:29.841Z"}
{"level":"info","message":"(request,response) => {\n  // Here, I know that my request has been pre-parsed\n  if(!request.body){\n    sendStatus(response,400,'body not found');\n    return;\n  }\n  if(!request.body.name){\n    sendStatus(response,400,'name not found');\n    return;\n  }\n  if(!request.body.content){\n    sendStatus(response,400,'content not found');\n    return;\n  }\n  //can create my planet since all test pass\n  let planet = new Planet(request.body.name,request.body.content);\n  planets.push(planet);\n  sendJSON(response,200,planet);\n}","timestamp":"2017-12-07T00:23:29.841Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T00:23:29.847Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T00:49:30.462Z"}
{"level":"info","message":"/api/planet","timestamp":"2017-12-07T00:49:30.462Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[2]++;cov_dsu7d9qvm.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_dsu7d9qvm.b[0][0]++;cov_dsu7d9qvm.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[0][1]++;}cov_dsu7d9qvm.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_dsu7d9qvm.b[1][0]++;cov_dsu7d9qvm.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[1][1]++;}cov_dsu7d9qvm.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_dsu7d9qvm.b[2][0]++;cov_dsu7d9qvm.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[2][1]++;}\n  //can create my planet since all test pass\n  let planet = /* istanbul ignore next */(cov_dsu7d9qvm.s[25]++, new Planet(request.body.name, request.body.content)); /* istanbul ignore next */cov_dsu7d9qvm.s[26]++;\n  planets.push(planet); /* istanbul ignore next */cov_dsu7d9qvm.s[27]++;\n  sendJSON(response, 200, planet);\n}","timestamp":"2017-12-07T00:49:30.462Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T00:49:30.462Z"}
{"level":"info","message":"/api/planet","timestamp":"2017-12-07T00:49:30.462Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.body.id');\n    // sendStatus(response,200,planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;sendJSON(response, 200, planets); /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[33]++;\n  if (!planets.includes(request.body.id)) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[34]++;\n    console.log('Hit .get at specific request.body.id not in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[35]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[36]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[37]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;sendJSON(response, 200, planets[request.body.id]); /* istanbul ignore next */cov_dsu7d9qvm.s[39]++;\n    return;\n  }\n}","timestamp":"2017-12-07T00:49:30.462Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T00:49:30.503Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T00:49:30.561Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T00:49:30.562Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[2]++;cov_dsu7d9qvm.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_dsu7d9qvm.b[0][0]++;cov_dsu7d9qvm.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[0][1]++;}cov_dsu7d9qvm.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_dsu7d9qvm.b[1][0]++;cov_dsu7d9qvm.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[1][1]++;}cov_dsu7d9qvm.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_dsu7d9qvm.b[2][0]++;cov_dsu7d9qvm.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[2][1]++;}\n  //can create my planet since all test pass\n  let planet = /* istanbul ignore next */(cov_dsu7d9qvm.s[25]++, new Planet(request.body.name, request.body.content)); /* istanbul ignore next */cov_dsu7d9qvm.s[26]++;\n  planets.push(planet); /* istanbul ignore next */cov_dsu7d9qvm.s[27]++;\n  sendJSON(response, 200, planet);\n}","timestamp":"2017-12-07T00:49:30.562Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T00:49:30.563Z"}
{"id":"7bfe4a20-dae8-11e7-ad1c-7f52b404299b","discoverDate":"2017-04-22T21:25:00.356Z","name":"BD032562b","content":"11h50m1555sDeclination02d45m365s","level":"info","message":"","timestamp":"2017-12-07T00:49:30.563Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T01:02:21.560Z"}
{"level":"info","message":"/api/planet","timestamp":"2017-12-07T01:02:21.560Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[2]++;cov_dsu7d9qvm.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_dsu7d9qvm.b[0][0]++;cov_dsu7d9qvm.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[0][1]++;}cov_dsu7d9qvm.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_dsu7d9qvm.b[1][0]++;cov_dsu7d9qvm.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[1][1]++;}cov_dsu7d9qvm.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_dsu7d9qvm.b[2][0]++;cov_dsu7d9qvm.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[2][1]++;}\n  //can create my planet since all test pass\n  let planet = /* istanbul ignore next */(cov_dsu7d9qvm.s[25]++, new Planet(request.body.name, request.body.content)); /* istanbul ignore next */cov_dsu7d9qvm.s[26]++;\n  planets.push(planet); /* istanbul ignore next */cov_dsu7d9qvm.s[27]++;\n  sendJSON(response, 200, planet);\n}","timestamp":"2017-12-07T01:02:21.560Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T01:02:21.561Z"}
{"level":"info","message":"/api/planet","timestamp":"2017-12-07T01:02:21.561Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.body.id');\n    // sendStatus(response,200,planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;sendJSON(response, 200, planets); /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[33]++;\n  if (!planets.includes(request.body.id)) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[34]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[35]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[36]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[37]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;sendJSON(response, 200, planets[request.body.id]); /* istanbul ignore next */cov_dsu7d9qvm.s[39]++;\n    return;\n  }\n}","timestamp":"2017-12-07T01:02:21.561Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T01:02:21.618Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T01:02:21.696Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T01:02:21.699Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[2]++;cov_dsu7d9qvm.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_dsu7d9qvm.b[0][0]++;cov_dsu7d9qvm.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[0][1]++;}cov_dsu7d9qvm.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_dsu7d9qvm.b[1][0]++;cov_dsu7d9qvm.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[1][1]++;}cov_dsu7d9qvm.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_dsu7d9qvm.b[2][0]++;cov_dsu7d9qvm.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[2][1]++;}\n  //can create my planet since all test pass\n  let planet = /* istanbul ignore next */(cov_dsu7d9qvm.s[25]++, new Planet(request.body.name, request.body.content)); /* istanbul ignore next */cov_dsu7d9qvm.s[26]++;\n  planets.push(planet); /* istanbul ignore next */cov_dsu7d9qvm.s[27]++;\n  sendJSON(response, 200, planet);\n}","timestamp":"2017-12-07T01:02:21.700Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T01:02:21.701Z"}
{"id":"47a09c40-daea-11e7-b49b-2988ee2c3d81","discoverDate":"2017-10-10T14:17:21.942Z","name":"BD032562b","content":"11h50m1555sDeclination02d45m365s","level":"info","message":"","timestamp":"2017-12-07T01:02:21.701Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T01:02:21.713Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T01:02:21.713Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.body.id');\n    // sendStatus(response,200,planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;sendJSON(response, 200, planets); /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[33]++;\n  if (!planets.includes(request.body.id)) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[34]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[35]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[36]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[37]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;sendJSON(response, 200, planets[request.body.id]); /* istanbul ignore next */cov_dsu7d9qvm.s[39]++;\n    return;\n  }\n}","timestamp":"2017-12-07T01:02:21.713Z"}
{"level":"info","message":"__REQUEST_ERROR","timestamp":"2017-12-07T01:02:21.714Z"}
{"message":"Cannot read property 'id' of undefined","stack":"TypeError: Cannot read property 'id' of undefined\n    at Object.<anonymous>.router.get (/home/seth/codefellows/401/lab/08-09-vanilla-rest-server/lab-seth/route/planet-router.js:57:21)\n    at requestParser.parse.then.request (/home/seth/codefellows/401/lab/08-09-vanilla-rest-server/lab-seth/lib/router.js:54:89)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T01:02:21.714Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T01:07:47.750Z"}
{"level":"info","message":"/api/planet","timestamp":"2017-12-07T01:07:47.751Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[2]++;cov_dsu7d9qvm.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_dsu7d9qvm.b[0][0]++;cov_dsu7d9qvm.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[0][1]++;}cov_dsu7d9qvm.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_dsu7d9qvm.b[1][0]++;cov_dsu7d9qvm.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[1][1]++;}cov_dsu7d9qvm.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_dsu7d9qvm.b[2][0]++;cov_dsu7d9qvm.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[2][1]++;}\n  //can create my planet since all test pass\n  let planet = /* istanbul ignore next */(cov_dsu7d9qvm.s[25]++, new Planet(request.body.name, request.body.content)); /* istanbul ignore next */cov_dsu7d9qvm.s[26]++;\n  planets.push(planet); /* istanbul ignore next */cov_dsu7d9qvm.s[27]++;\n  sendJSON(response, 200, planet);\n}","timestamp":"2017-12-07T01:07:47.751Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T01:07:47.751Z"}
{"level":"info","message":"/api/planet","timestamp":"2017-12-07T01:07:47.751Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.body.id');\n    // sendStatus(response,200,planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;sendJSON(response, 200, planets); /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[33]++;\n  if (!planets.includes(request.body.id)) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[34]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[35]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[36]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[37]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;sendJSON(response, 200, planets[request.body.id]); /* istanbul ignore next */cov_dsu7d9qvm.s[39]++;\n    return;\n  }\n}","timestamp":"2017-12-07T01:07:47.751Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T01:07:47.791Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T01:07:47.848Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T01:07:47.850Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[2]++;cov_dsu7d9qvm.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_dsu7d9qvm.b[0][0]++;cov_dsu7d9qvm.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[0][1]++;}cov_dsu7d9qvm.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_dsu7d9qvm.b[1][0]++;cov_dsu7d9qvm.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[1][1]++;}cov_dsu7d9qvm.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_dsu7d9qvm.b[2][0]++;cov_dsu7d9qvm.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[2][1]++;}\n  //can create my planet since all test pass\n  let planet = /* istanbul ignore next */(cov_dsu7d9qvm.s[25]++, new Planet(request.body.name, request.body.content)); /* istanbul ignore next */cov_dsu7d9qvm.s[26]++;\n  planets.push(planet); /* istanbul ignore next */cov_dsu7d9qvm.s[27]++;\n  sendJSON(response, 200, planet);\n}","timestamp":"2017-12-07T01:07:47.850Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T01:07:47.850Z"}
{"id":"0a0726a0-daeb-11e7-8717-992f3e911a3b","discoverDate":"2017-09-02T13:23:55.654Z","name":"BD032562b","content":"11h50m1555sDeclination02d45m365s","level":"info","message":"","timestamp":"2017-12-07T01:07:47.851Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T01:07:47.859Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T01:07:47.859Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.body.id');\n    // sendStatus(response,200,planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;sendJSON(response, 200, planets); /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[33]++;\n  if (!planets.includes(request.body.id)) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[34]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[35]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[36]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[37]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;sendJSON(response, 200, planets[request.body.id]); /* istanbul ignore next */cov_dsu7d9qvm.s[39]++;\n    return;\n  }\n}","timestamp":"2017-12-07T01:07:47.860Z"}
{"level":"info","message":"__REQUEST_ERROR","timestamp":"2017-12-07T01:07:47.860Z"}
{"message":"Cannot read property 'id' of undefined","stack":"TypeError: Cannot read property 'id' of undefined\n    at Object.<anonymous>.router.get (/home/seth/codefellows/401/lab/08-09-vanilla-rest-server/lab-seth/route/planet-router.js:57:21)\n    at requestParser.parse.then.request (/home/seth/codefellows/401/lab/08-09-vanilla-rest-server/lab-seth/lib/router.js:54:89)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T01:07:47.860Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T01:14:03.171Z"}
{"level":"info","message":"/api/planet","timestamp":"2017-12-07T01:14:03.171Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[2]++;cov_dsu7d9qvm.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_dsu7d9qvm.b[0][0]++;cov_dsu7d9qvm.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[0][1]++;}cov_dsu7d9qvm.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_dsu7d9qvm.b[1][0]++;cov_dsu7d9qvm.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[1][1]++;}cov_dsu7d9qvm.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_dsu7d9qvm.b[2][0]++;cov_dsu7d9qvm.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[2][1]++;}\n  //can create my planet since all test pass\n  let planet = /* istanbul ignore next */(cov_dsu7d9qvm.s[25]++, new Planet(request.body.name, request.body.content)); /* istanbul ignore next */cov_dsu7d9qvm.s[26]++;\n  planets.push(planet); /* istanbul ignore next */cov_dsu7d9qvm.s[27]++;\n  sendJSON(response, 200, planet);\n}","timestamp":"2017-12-07T01:14:03.172Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T01:14:03.172Z"}
{"level":"info","message":"/api/planet","timestamp":"2017-12-07T01:14:03.172Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.body.id');\n    // sendStatus(response,200,planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;sendJSON(response, 200, planets); /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[33]++;\n  if (!planets.includes(request.body.id)) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[34]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[35]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[36]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[37]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;sendJSON(response, 200, planets[request.body.id]); /* istanbul ignore next */cov_dsu7d9qvm.s[39]++;\n    return;\n  }\n}","timestamp":"2017-12-07T01:14:03.172Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T01:14:03.231Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T01:14:03.302Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T01:14:03.305Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[2]++;cov_dsu7d9qvm.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_dsu7d9qvm.b[0][0]++;cov_dsu7d9qvm.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[0][1]++;}cov_dsu7d9qvm.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_dsu7d9qvm.b[1][0]++;cov_dsu7d9qvm.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[1][1]++;}cov_dsu7d9qvm.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_dsu7d9qvm.b[2][0]++;cov_dsu7d9qvm.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[2][1]++;}\n  //can create my planet since all test pass\n  let planet = /* istanbul ignore next */(cov_dsu7d9qvm.s[25]++, new Planet(request.body.name, request.body.content)); /* istanbul ignore next */cov_dsu7d9qvm.s[26]++;\n  planets.push(planet); /* istanbul ignore next */cov_dsu7d9qvm.s[27]++;\n  sendJSON(response, 200, planet);\n}","timestamp":"2017-12-07T01:14:03.305Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T01:14:03.306Z"}
{"id":"e9d10990-daeb-11e7-a160-81f5bdf55deb","discoverDate":"2017-08-09T03:08:48.816Z","name":"BD032562b","content":"11h50m1555sDeclination02d45m365s","level":"info","message":"","timestamp":"2017-12-07T01:14:03.306Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T01:14:03.319Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T01:14:03.320Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.body.id');\n    // sendStatus(response,200,planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;sendJSON(response, 200, planets); /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[33]++;\n  if (!planets.includes(request.body.id)) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[34]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[35]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[36]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[37]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;sendJSON(response, 200, planets[request.body.id]); /* istanbul ignore next */cov_dsu7d9qvm.s[39]++;\n    return;\n  }\n}","timestamp":"2017-12-07T01:14:03.320Z"}
{"level":"info","message":"__REQUEST_ERROR","timestamp":"2017-12-07T01:14:03.320Z"}
{"message":"Cannot read property 'id' of undefined","stack":"TypeError: Cannot read property 'id' of undefined\n    at Object.<anonymous>.router.get (/home/seth/codefellows/401/lab/08-09-vanilla-rest-server/lab-seth/route/planet-router.js:57:21)\n    at requestParser.parse.then.request (/home/seth/codefellows/401/lab/08-09-vanilla-rest-server/lab-seth/lib/router.js:54:89)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T01:14:03.320Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T01:15:28.022Z"}
{"level":"info","message":"/api/planet","timestamp":"2017-12-07T01:15:28.022Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[2]++;cov_dsu7d9qvm.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_dsu7d9qvm.b[0][0]++;cov_dsu7d9qvm.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[0][1]++;}cov_dsu7d9qvm.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_dsu7d9qvm.b[1][0]++;cov_dsu7d9qvm.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[1][1]++;}cov_dsu7d9qvm.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_dsu7d9qvm.b[2][0]++;cov_dsu7d9qvm.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[2][1]++;}\n  //can create my planet since all test pass\n  let planet = /* istanbul ignore next */(cov_dsu7d9qvm.s[25]++, new Planet(request.body.name, request.body.content)); /* istanbul ignore next */cov_dsu7d9qvm.s[26]++;\n  planets.push(planet); /* istanbul ignore next */cov_dsu7d9qvm.s[27]++;\n  sendJSON(response, 200, planet);\n}","timestamp":"2017-12-07T01:15:28.022Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T01:15:28.022Z"}
{"level":"info","message":"/api/planet","timestamp":"2017-12-07T01:15:28.022Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.body.id');\n    // sendStatus(response,200,planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;sendJSON(response, 200, planets); /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[33]++;\n  if (!planets.includes(request.body.id)) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[34]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[35]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[36]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[37]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;sendJSON(response, 200, planets[request.body.id]); /* istanbul ignore next */cov_dsu7d9qvm.s[39]++;\n    return;\n  }\n}","timestamp":"2017-12-07T01:15:28.023Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T01:15:28.065Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T01:15:28.123Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T01:15:28.124Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[2]++;cov_dsu7d9qvm.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_dsu7d9qvm.b[0][0]++;cov_dsu7d9qvm.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[0][1]++;}cov_dsu7d9qvm.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_dsu7d9qvm.b[1][0]++;cov_dsu7d9qvm.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[1][1]++;}cov_dsu7d9qvm.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_dsu7d9qvm.b[2][0]++;cov_dsu7d9qvm.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[2][1]++;}\n  //can create my planet since all test pass\n  let planet = /* istanbul ignore next */(cov_dsu7d9qvm.s[25]++, new Planet(request.body.name, request.body.content)); /* istanbul ignore next */cov_dsu7d9qvm.s[26]++;\n  planets.push(planet); /* istanbul ignore next */cov_dsu7d9qvm.s[27]++;\n  sendJSON(response, 200, planet);\n}","timestamp":"2017-12-07T01:15:28.124Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T01:15:28.125Z"}
{"id":"1c5f8ad0-daec-11e7-9adc-136876990972","discoverDate":"2016-12-15T06:10:17.455Z","name":"BD032562b","content":"11h50m1555sDeclination02d45m365s","level":"info","message":"","timestamp":"2017-12-07T01:15:28.125Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T01:15:28.134Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T01:15:28.134Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.body.id');\n    // sendStatus(response,200,planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;sendJSON(response, 200, planets); /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[33]++;\n  if (!planets.includes(request.body.id)) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[34]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[35]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[36]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[37]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;sendJSON(response, 200, planets[request.body.id]); /* istanbul ignore next */cov_dsu7d9qvm.s[39]++;\n    return;\n  }\n}","timestamp":"2017-12-07T01:15:28.135Z"}
{"level":"info","message":"__REQUEST_ERROR","timestamp":"2017-12-07T01:15:28.135Z"}
{"message":"Cannot read property 'id' of undefined","stack":"TypeError: Cannot read property 'id' of undefined\n    at Object.<anonymous>.router.get (/home/seth/codefellows/401/lab/08-09-vanilla-rest-server/lab-seth/route/planet-router.js:57:21)\n    at requestParser.parse.then.request (/home/seth/codefellows/401/lab/08-09-vanilla-rest-server/lab-seth/lib/router.js:54:89)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T01:15:28.135Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T16:30:29.203Z"}
{"level":"info","message":"/api/planet","timestamp":"2017-12-07T16:30:29.204Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[2]++;cov_dsu7d9qvm.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_dsu7d9qvm.b[0][0]++;cov_dsu7d9qvm.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[0][1]++;}cov_dsu7d9qvm.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_dsu7d9qvm.b[1][0]++;cov_dsu7d9qvm.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[1][1]++;}cov_dsu7d9qvm.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_dsu7d9qvm.b[2][0]++;cov_dsu7d9qvm.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[2][1]++;}\n  //can create my planet since all test pass\n  let planet = /* istanbul ignore next */(cov_dsu7d9qvm.s[25]++, new Planet(request.body.name, request.body.content)); /* istanbul ignore next */cov_dsu7d9qvm.s[26]++;\n  planets.push(planet); /* istanbul ignore next */cov_dsu7d9qvm.s[27]++;\n  sendJSON(response, 200, planet);\n}","timestamp":"2017-12-07T16:30:29.204Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T16:30:29.204Z"}
{"level":"info","message":"/api/planet","timestamp":"2017-12-07T16:30:29.204Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.body.id');\n    // sendStatus(response,200,planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;sendJSON(response, 200, planets); /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[33]++;\n  if (!planets.includes(request.body.id)) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[34]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[35]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[36]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[37]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;sendJSON(response, 200, planets[request.body.id]); /* istanbul ignore next */cov_dsu7d9qvm.s[39]++;\n    return;\n  }\n}","timestamp":"2017-12-07T16:30:29.204Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T16:30:29.263Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T16:30:29.313Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T16:30:29.314Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[2]++;cov_dsu7d9qvm.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_dsu7d9qvm.b[0][0]++;cov_dsu7d9qvm.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[0][1]++;}cov_dsu7d9qvm.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_dsu7d9qvm.b[1][0]++;cov_dsu7d9qvm.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[1][1]++;}cov_dsu7d9qvm.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_dsu7d9qvm.b[2][0]++;cov_dsu7d9qvm.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[2][1]++;}\n  //can create my planet since all test pass\n  let planet = /* istanbul ignore next */(cov_dsu7d9qvm.s[25]++, new Planet(request.body.name, request.body.content)); /* istanbul ignore next */cov_dsu7d9qvm.s[26]++;\n  planets.push(planet); /* istanbul ignore next */cov_dsu7d9qvm.s[27]++;\n  sendJSON(response, 200, planet);\n}","timestamp":"2017-12-07T16:30:29.314Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T16:30:29.315Z"}
{"id":"f0082a20-db6b-11e7-abf3-c51fc50e1f39","discoverDate":"2017-02-13T00:29:26.573Z","name":"BD032562b","content":"11h50m1555sDeclination02d45m365s","level":"info","message":"","timestamp":"2017-12-07T16:30:29.315Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T16:30:29.325Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T16:30:29.325Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.body.id');\n    // sendStatus(response,200,planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;sendJSON(response, 200, planets); /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[33]++;\n  if (!planets.includes(request.body.id)) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[34]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[35]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[36]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[37]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;sendJSON(response, 200, planets[request.body.id]); /* istanbul ignore next */cov_dsu7d9qvm.s[39]++;\n    return;\n  }\n}","timestamp":"2017-12-07T16:30:29.325Z"}
{"level":"info","message":"__REQUEST_ERROR","timestamp":"2017-12-07T16:30:29.326Z"}
{"message":"Cannot read property 'id' of undefined","stack":"TypeError: Cannot read property 'id' of undefined\n    at Object.<anonymous>.router.get (/home/seth/codefellows/401/lab/08-09-vanilla-rest-server/lab-seth/route/planet-router.js:57:21)\n    at requestParser.parse.then.request (/home/seth/codefellows/401/lab/08-09-vanilla-rest-server/lab-seth/lib/router.js:54:89)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T16:30:29.326Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T16:31:05.230Z"}
{"level":"info","message":"/api/planet","timestamp":"2017-12-07T16:31:05.231Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[2]++;cov_dsu7d9qvm.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_dsu7d9qvm.b[0][0]++;cov_dsu7d9qvm.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[0][1]++;}cov_dsu7d9qvm.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_dsu7d9qvm.b[1][0]++;cov_dsu7d9qvm.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[1][1]++;}cov_dsu7d9qvm.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_dsu7d9qvm.b[2][0]++;cov_dsu7d9qvm.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[2][1]++;}\n  //can create my planet since all test pass\n  let planet = /* istanbul ignore next */(cov_dsu7d9qvm.s[25]++, new Planet(request.body.name, request.body.content)); /* istanbul ignore next */cov_dsu7d9qvm.s[26]++;\n  planets.push(planet); /* istanbul ignore next */cov_dsu7d9qvm.s[27]++;\n  sendJSON(response, 200, planet);\n}","timestamp":"2017-12-07T16:31:05.231Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T16:31:05.231Z"}
{"level":"info","message":"/api/planet","timestamp":"2017-12-07T16:31:05.231Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.body.id'); /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;\n    sendStatus(response, 200, planets);\n    // sendJSON(response,200,planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[33]++;\n  if (!planets.includes(request.body.id)) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[34]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[35]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[36]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[37]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;sendJSON(response, 200, planets[request.body.id]); /* istanbul ignore next */cov_dsu7d9qvm.s[39]++;\n    return;\n  }\n}","timestamp":"2017-12-07T16:31:05.231Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T16:31:05.299Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T16:31:05.382Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T16:31:05.384Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[2]++;cov_dsu7d9qvm.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_dsu7d9qvm.b[0][0]++;cov_dsu7d9qvm.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[0][1]++;}cov_dsu7d9qvm.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_dsu7d9qvm.b[1][0]++;cov_dsu7d9qvm.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[1][1]++;}cov_dsu7d9qvm.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_dsu7d9qvm.b[2][0]++;cov_dsu7d9qvm.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[2][1]++;}\n  //can create my planet since all test pass\n  let planet = /* istanbul ignore next */(cov_dsu7d9qvm.s[25]++, new Planet(request.body.name, request.body.content)); /* istanbul ignore next */cov_dsu7d9qvm.s[26]++;\n  planets.push(planet); /* istanbul ignore next */cov_dsu7d9qvm.s[27]++;\n  sendJSON(response, 200, planet);\n}","timestamp":"2017-12-07T16:31:05.384Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T16:31:05.385Z"}
{"id":"05880280-db6c-11e7-b0dc-ff61fbe8a03a","discoverDate":"2017-11-30T20:38:34.263Z","name":"BD032562b","content":"11h50m1555sDeclination02d45m365s","level":"info","message":"","timestamp":"2017-12-07T16:31:05.385Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T16:31:05.394Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T16:31:05.394Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.body.id'); /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;\n    sendStatus(response, 200, planets);\n    // sendJSON(response,200,planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[33]++;\n  if (!planets.includes(request.body.id)) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[34]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[35]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[36]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[37]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;sendJSON(response, 200, planets[request.body.id]); /* istanbul ignore next */cov_dsu7d9qvm.s[39]++;\n    return;\n  }\n}","timestamp":"2017-12-07T16:31:05.394Z"}
{"level":"info","message":"__REQUEST_ERROR","timestamp":"2017-12-07T16:31:05.395Z"}
{"message":"Cannot read property 'id' of undefined","stack":"TypeError: Cannot read property 'id' of undefined\n    at Object.<anonymous>.router.get (/home/seth/codefellows/401/lab/08-09-vanilla-rest-server/lab-seth/route/planet-router.js:57:21)\n    at requestParser.parse.then.request (/home/seth/codefellows/401/lab/08-09-vanilla-rest-server/lab-seth/lib/router.js:54:89)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T16:31:05.395Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T16:35:27.498Z"}
{"level":"info","message":"/api/planet","timestamp":"2017-12-07T16:35:27.499Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[2]++;cov_dsu7d9qvm.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_dsu7d9qvm.b[0][0]++;cov_dsu7d9qvm.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[0][1]++;}cov_dsu7d9qvm.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_dsu7d9qvm.b[1][0]++;cov_dsu7d9qvm.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[1][1]++;}cov_dsu7d9qvm.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_dsu7d9qvm.b[2][0]++;cov_dsu7d9qvm.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[2][1]++;}\n  //can create my planet since all test pass\n  let planet = /* istanbul ignore next */(cov_dsu7d9qvm.s[25]++, new Planet(request.body.name, request.body.content)); /* istanbul ignore next */cov_dsu7d9qvm.s[26]++;\n  planets.push(planet); /* istanbul ignore next */cov_dsu7d9qvm.s[27]++;\n  sendJSON(response, 200, planet);\n}","timestamp":"2017-12-07T16:35:27.499Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T16:35:27.499Z"}
{"level":"info","message":"/api/planet","timestamp":"2017-12-07T16:35:27.499Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.body.id'); /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;\n    sendStatus(response, 200, planets);\n    // sendJSON(response,200,planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[33]++;\n  if (!planets.includes(request.id)) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[34]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[35]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[36]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[37]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;sendJSON(response, 200, planets[request.id]); /* istanbul ignore next */cov_dsu7d9qvm.s[39]++;\n    return;\n  }\n}","timestamp":"2017-12-07T16:35:27.499Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T16:35:27.562Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T16:35:27.649Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T16:35:27.651Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[2]++;cov_dsu7d9qvm.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_dsu7d9qvm.b[0][0]++;cov_dsu7d9qvm.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[0][1]++;}cov_dsu7d9qvm.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_dsu7d9qvm.b[1][0]++;cov_dsu7d9qvm.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[1][1]++;}cov_dsu7d9qvm.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_dsu7d9qvm.b[2][0]++;cov_dsu7d9qvm.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[2][1]++;}\n  //can create my planet since all test pass\n  let planet = /* istanbul ignore next */(cov_dsu7d9qvm.s[25]++, new Planet(request.body.name, request.body.content)); /* istanbul ignore next */cov_dsu7d9qvm.s[26]++;\n  planets.push(planet); /* istanbul ignore next */cov_dsu7d9qvm.s[27]++;\n  sendJSON(response, 200, planet);\n}","timestamp":"2017-12-07T16:35:27.651Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T16:35:27.652Z"}
{"id":"a1daee40-db6c-11e7-9b48-f7a656bb07cc","discoverDate":"2017-03-05T23:21:08.442Z","name":"BD032562b","content":"11h50m1555sDeclination02d45m365s","level":"info","message":"","timestamp":"2017-12-07T16:35:27.653Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T16:35:27.667Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T16:35:27.667Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.body.id'); /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;\n    sendStatus(response, 200, planets);\n    // sendJSON(response,200,planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[33]++;\n  if (!planets.includes(request.id)) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[34]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[35]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[36]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[37]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;sendJSON(response, 200, planets[request.id]); /* istanbul ignore next */cov_dsu7d9qvm.s[39]++;\n    return;\n  }\n}","timestamp":"2017-12-07T16:35:27.667Z"}
{"level":"info","message":"Responding with a 200 code due to [object Object]","timestamp":"2017-12-07T16:35:27.668Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T16:42:27.464Z"}
{"level":"info","message":"/api/planet","timestamp":"2017-12-07T16:42:27.464Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[2]++;cov_dsu7d9qvm.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_dsu7d9qvm.b[0][0]++;cov_dsu7d9qvm.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[0][1]++;}cov_dsu7d9qvm.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_dsu7d9qvm.b[1][0]++;cov_dsu7d9qvm.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[1][1]++;}cov_dsu7d9qvm.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_dsu7d9qvm.b[2][0]++;cov_dsu7d9qvm.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[2][1]++;}\n  //can create my planet since all test pass\n  let planet = /* istanbul ignore next */(cov_dsu7d9qvm.s[25]++, new Planet(request.body.name, request.body.content)); /* istanbul ignore next */cov_dsu7d9qvm.s[26]++;\n  planets.push(planet); /* istanbul ignore next */cov_dsu7d9qvm.s[27]++;\n  sendJSON(response, 200, planet);\n}","timestamp":"2017-12-07T16:42:27.464Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T16:42:27.465Z"}
{"level":"info","message":"/api/planet","timestamp":"2017-12-07T16:42:27.465Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.body.id');\n    // sendStatus(response,200,'good');\n    /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;sendJSON(response, 200, planets); /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[33]++;\n  if (!planets.includes(request.body.id)) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[34]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[35]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[36]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[37]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;sendJSON(response, 200, planets[request.body.id]); /* istanbul ignore next */cov_dsu7d9qvm.s[39]++;\n    return;\n  }\n}","timestamp":"2017-12-07T16:42:27.465Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T16:42:27.509Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T16:42:27.566Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T16:42:27.568Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[2]++;cov_dsu7d9qvm.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_dsu7d9qvm.b[0][0]++;cov_dsu7d9qvm.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[0][1]++;}cov_dsu7d9qvm.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_dsu7d9qvm.b[1][0]++;cov_dsu7d9qvm.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[1][1]++;}cov_dsu7d9qvm.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_dsu7d9qvm.b[2][0]++;cov_dsu7d9qvm.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[2][1]++;}\n  //can create my planet since all test pass\n  let planet = /* istanbul ignore next */(cov_dsu7d9qvm.s[25]++, new Planet(request.body.name, request.body.content)); /* istanbul ignore next */cov_dsu7d9qvm.s[26]++;\n  planets.push(planet); /* istanbul ignore next */cov_dsu7d9qvm.s[27]++;\n  sendJSON(response, 200, planet);\n}","timestamp":"2017-12-07T16:42:27.568Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T16:42:27.569Z"}
{"id":"9c250700-db6d-11e7-b1cd-69dc5abde08c","discoverDate":"2017-04-11T16:36:55.357Z","name":"BD032562b","content":"11h50m1555sDeclination02d45m365s","level":"info","message":"","timestamp":"2017-12-07T16:42:27.569Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T16:42:27.577Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T16:42:27.578Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.body.id');\n    // sendStatus(response,200,'good');\n    /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;sendJSON(response, 200, planets); /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[33]++;\n  if (!planets.includes(request.body.id)) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[34]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[35]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[36]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[37]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;sendJSON(response, 200, planets[request.body.id]); /* istanbul ignore next */cov_dsu7d9qvm.s[39]++;\n    return;\n  }\n}","timestamp":"2017-12-07T16:42:27.578Z"}
{"level":"info","message":"__REQUEST_ERROR","timestamp":"2017-12-07T16:42:27.578Z"}
{"message":"Cannot read property 'id' of undefined","stack":"TypeError: Cannot read property 'id' of undefined\n    at Object.<anonymous>.router.get (/home/seth/codefellows/401/lab/08-09-vanilla-rest-server/lab-seth/route/planet-router.js:57:21)\n    at requestParser.parse.then.request (/home/seth/codefellows/401/lab/08-09-vanilla-rest-server/lab-seth/lib/router.js:54:89)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T16:42:27.578Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T16:44:13.753Z"}
{"level":"info","message":"/api/planet","timestamp":"2017-12-07T16:44:13.753Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[2]++;cov_dsu7d9qvm.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_dsu7d9qvm.b[0][0]++;cov_dsu7d9qvm.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[0][1]++;}cov_dsu7d9qvm.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_dsu7d9qvm.b[1][0]++;cov_dsu7d9qvm.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[1][1]++;}cov_dsu7d9qvm.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_dsu7d9qvm.b[2][0]++;cov_dsu7d9qvm.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[2][1]++;}\n  //can create my planet since all test pass\n  let planet = /* istanbul ignore next */(cov_dsu7d9qvm.s[25]++, new Planet(request.body.name, request.body.content)); /* istanbul ignore next */cov_dsu7d9qvm.s[26]++;\n  planets.push(planet); /* istanbul ignore next */cov_dsu7d9qvm.s[27]++;\n  sendJSON(response, 200, planet);\n}","timestamp":"2017-12-07T16:44:13.754Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T16:44:13.754Z"}
{"level":"info","message":"/api/planet","timestamp":"2017-12-07T16:44:13.754Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.body.id');\n    // sendStatus(response,200,'good');\n    /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;sendJSON(response, 200, planets); /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[33]++;\n  if (!planets.includes(request.body.id)) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[34]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[35]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[36]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[37]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;sendJSON(response, 200, planets[request.body.id]); /* istanbul ignore next */cov_dsu7d9qvm.s[39]++;\n    return;\n  }\n}","timestamp":"2017-12-07T16:44:13.754Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T16:44:13.819Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T16:44:13.886Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T16:44:13.887Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[2]++;cov_dsu7d9qvm.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_dsu7d9qvm.b[0][0]++;cov_dsu7d9qvm.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[0][1]++;}cov_dsu7d9qvm.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_dsu7d9qvm.b[1][0]++;cov_dsu7d9qvm.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[1][1]++;}cov_dsu7d9qvm.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_dsu7d9qvm.b[2][0]++;cov_dsu7d9qvm.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[2][1]++;}\n  //can create my planet since all test pass\n  let planet = /* istanbul ignore next */(cov_dsu7d9qvm.s[25]++, new Planet(request.body.name, request.body.content)); /* istanbul ignore next */cov_dsu7d9qvm.s[26]++;\n  planets.push(planet); /* istanbul ignore next */cov_dsu7d9qvm.s[27]++;\n  sendJSON(response, 200, planet);\n}","timestamp":"2017-12-07T16:44:13.888Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T16:44:13.888Z"}
{"id":"db842c00-db6d-11e7-be20-15acdeee97af","discoverDate":"2016-12-07T17:24:32.332Z","name":"BD032562b","content":"11h50m1555sDeclination02d45m365s","level":"info","message":"","timestamp":"2017-12-07T16:44:13.888Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T16:44:13.898Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T16:44:13.898Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.body.id');\n    // sendStatus(response,200,'good');\n    /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;sendJSON(response, 200, planets); /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[33]++;\n  if (!planets.includes(request.body.id)) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[34]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[35]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[36]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[37]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;sendJSON(response, 200, planets[request.body.id]); /* istanbul ignore next */cov_dsu7d9qvm.s[39]++;\n    return;\n  }\n}","timestamp":"2017-12-07T16:44:13.899Z"}
{"level":"info","message":"__REQUEST_ERROR","timestamp":"2017-12-07T16:44:13.899Z"}
{"message":"Cannot read property 'id' of undefined","stack":"TypeError: Cannot read property 'id' of undefined\n    at Object.<anonymous>.router.get (/home/seth/codefellows/401/lab/08-09-vanilla-rest-server/lab-seth/route/planet-router.js:57:21)\n    at requestParser.parse.then.request (/home/seth/codefellows/401/lab/08-09-vanilla-rest-server/lab-seth/lib/router.js:54:89)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T16:44:13.899Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T16:44:33.946Z"}
{"level":"info","message":"/api/planet","timestamp":"2017-12-07T16:44:33.947Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[2]++;cov_dsu7d9qvm.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_dsu7d9qvm.b[0][0]++;cov_dsu7d9qvm.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[0][1]++;}cov_dsu7d9qvm.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_dsu7d9qvm.b[1][0]++;cov_dsu7d9qvm.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[1][1]++;}cov_dsu7d9qvm.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_dsu7d9qvm.b[2][0]++;cov_dsu7d9qvm.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[2][1]++;}\n  //can create my planet since all test pass\n  let planet = /* istanbul ignore next */(cov_dsu7d9qvm.s[25]++, new Planet(request.body.name, request.body.content)); /* istanbul ignore next */cov_dsu7d9qvm.s[26]++;\n  planets.push(planet); /* istanbul ignore next */cov_dsu7d9qvm.s[27]++;\n  sendJSON(response, 200, planet);\n}","timestamp":"2017-12-07T16:44:33.947Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T16:44:33.947Z"}
{"level":"info","message":"/api/planet","timestamp":"2017-12-07T16:44:33.947Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.body.id'); /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;\n    sendStatus(response, 200, 'good');\n    // sendJSON(response,200,planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[33]++;\n  if (!planets.includes(request.body.id)) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[34]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[35]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[36]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[37]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;sendJSON(response, 200, planets[request.body.id]); /* istanbul ignore next */cov_dsu7d9qvm.s[39]++;\n    return;\n  }\n}","timestamp":"2017-12-07T16:44:33.947Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T16:44:33.992Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T16:44:34.050Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T16:44:34.051Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[2]++;cov_dsu7d9qvm.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_dsu7d9qvm.b[0][0]++;cov_dsu7d9qvm.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[0][1]++;}cov_dsu7d9qvm.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_dsu7d9qvm.b[1][0]++;cov_dsu7d9qvm.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[1][1]++;}cov_dsu7d9qvm.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_dsu7d9qvm.b[2][0]++;cov_dsu7d9qvm.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[2][1]++;}\n  //can create my planet since all test pass\n  let planet = /* istanbul ignore next */(cov_dsu7d9qvm.s[25]++, new Planet(request.body.name, request.body.content)); /* istanbul ignore next */cov_dsu7d9qvm.s[26]++;\n  planets.push(planet); /* istanbul ignore next */cov_dsu7d9qvm.s[27]++;\n  sendJSON(response, 200, planet);\n}","timestamp":"2017-12-07T16:44:34.051Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T16:44:34.052Z"}
{"id":"e788f440-db6d-11e7-b23a-438b66443aad","discoverDate":"2017-10-02T14:42:53.680Z","name":"BD032562b","content":"11h50m1555sDeclination02d45m365s","level":"info","message":"","timestamp":"2017-12-07T16:44:34.052Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T16:44:34.061Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T16:44:34.062Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.body.id'); /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;\n    sendStatus(response, 200, 'good');\n    // sendJSON(response,200,planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[33]++;\n  if (!planets.includes(request.body.id)) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[34]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[35]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[36]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[37]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;sendJSON(response, 200, planets[request.body.id]); /* istanbul ignore next */cov_dsu7d9qvm.s[39]++;\n    return;\n  }\n}","timestamp":"2017-12-07T16:44:34.062Z"}
{"level":"info","message":"__REQUEST_ERROR","timestamp":"2017-12-07T16:44:34.062Z"}
{"message":"Cannot read property 'id' of undefined","stack":"TypeError: Cannot read property 'id' of undefined\n    at Object.<anonymous>.router.get (/home/seth/codefellows/401/lab/08-09-vanilla-rest-server/lab-seth/route/planet-router.js:57:21)\n    at requestParser.parse.then.request (/home/seth/codefellows/401/lab/08-09-vanilla-rest-server/lab-seth/lib/router.js:54:89)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T16:44:34.062Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T16:45:25.511Z"}
{"level":"info","message":"/api/planet","timestamp":"2017-12-07T16:45:25.511Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[2]++;cov_dsu7d9qvm.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_dsu7d9qvm.b[0][0]++;cov_dsu7d9qvm.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[0][1]++;}cov_dsu7d9qvm.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_dsu7d9qvm.b[1][0]++;cov_dsu7d9qvm.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[1][1]++;}cov_dsu7d9qvm.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_dsu7d9qvm.b[2][0]++;cov_dsu7d9qvm.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[2][1]++;}\n  //can create my planet since all test pass\n  let planet = /* istanbul ignore next */(cov_dsu7d9qvm.s[25]++, new Planet(request.body.name, request.body.content)); /* istanbul ignore next */cov_dsu7d9qvm.s[26]++;\n  planets.push(planet); /* istanbul ignore next */cov_dsu7d9qvm.s[27]++;\n  sendJSON(response, 200, planet);\n}","timestamp":"2017-12-07T16:45:25.511Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T16:45:25.511Z"}
{"level":"info","message":"/api/planet","timestamp":"2017-12-07T16:45:25.511Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.body.id'); /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;\n    sendStatus(response, 200, planets);\n    // sendJSON(response,200,planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[33]++;\n  if (!planets.includes(request.body.id)) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[34]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[35]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[36]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[37]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;sendJSON(response, 200, planets[request.body.id]); /* istanbul ignore next */cov_dsu7d9qvm.s[39]++;\n    return;\n  }\n}","timestamp":"2017-12-07T16:45:25.511Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T16:45:25.555Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T16:45:25.612Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T16:45:25.614Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[2]++;cov_dsu7d9qvm.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_dsu7d9qvm.b[0][0]++;cov_dsu7d9qvm.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[0][1]++;}cov_dsu7d9qvm.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_dsu7d9qvm.b[1][0]++;cov_dsu7d9qvm.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[1][1]++;}cov_dsu7d9qvm.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_dsu7d9qvm.b[2][0]++;cov_dsu7d9qvm.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[2][1]++;}\n  //can create my planet since all test pass\n  let planet = /* istanbul ignore next */(cov_dsu7d9qvm.s[25]++, new Planet(request.body.name, request.body.content)); /* istanbul ignore next */cov_dsu7d9qvm.s[26]++;\n  planets.push(planet); /* istanbul ignore next */cov_dsu7d9qvm.s[27]++;\n  sendJSON(response, 200, planet);\n}","timestamp":"2017-12-07T16:45:25.614Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T16:45:25.614Z"}
{"id":"0644b0e0-db6e-11e7-bfcd-d3eedf16c687","discoverDate":"2017-09-08T04:23:46.008Z","name":"BD032562b","content":"11h50m1555sDeclination02d45m365s","level":"info","message":"","timestamp":"2017-12-07T16:45:25.614Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T16:45:25.623Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T16:45:25.624Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.body.id'); /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;\n    sendStatus(response, 200, planets);\n    // sendJSON(response,200,planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[33]++;\n  if (!planets.includes(request.body.id)) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[34]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[35]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[36]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[37]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;sendJSON(response, 200, planets[request.body.id]); /* istanbul ignore next */cov_dsu7d9qvm.s[39]++;\n    return;\n  }\n}","timestamp":"2017-12-07T16:45:25.624Z"}
{"level":"info","message":"__REQUEST_ERROR","timestamp":"2017-12-07T16:45:25.624Z"}
{"message":"Cannot read property 'id' of undefined","stack":"TypeError: Cannot read property 'id' of undefined\n    at Object.<anonymous>.router.get (/home/seth/codefellows/401/lab/08-09-vanilla-rest-server/lab-seth/route/planet-router.js:57:21)\n    at requestParser.parse.then.request (/home/seth/codefellows/401/lab/08-09-vanilla-rest-server/lab-seth/lib/router.js:54:89)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T16:45:25.624Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T16:46:06.806Z"}
{"level":"info","message":"/api/planet","timestamp":"2017-12-07T16:46:06.806Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[2]++;cov_dsu7d9qvm.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_dsu7d9qvm.b[0][0]++;cov_dsu7d9qvm.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[0][1]++;}cov_dsu7d9qvm.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_dsu7d9qvm.b[1][0]++;cov_dsu7d9qvm.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[1][1]++;}cov_dsu7d9qvm.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_dsu7d9qvm.b[2][0]++;cov_dsu7d9qvm.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[2][1]++;}\n  //can create my planet since all test pass\n  let planet = /* istanbul ignore next */(cov_dsu7d9qvm.s[25]++, new Planet(request.body.name, request.body.content)); /* istanbul ignore next */cov_dsu7d9qvm.s[26]++;\n  planets.push(planet); /* istanbul ignore next */cov_dsu7d9qvm.s[27]++;\n  sendJSON(response, 200, planet);\n}","timestamp":"2017-12-07T16:46:06.806Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T16:46:06.806Z"}
{"level":"info","message":"/api/planet","timestamp":"2017-12-07T16:46:06.806Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.body.id'); /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;\n    sendStatus(response, 200, 'good');\n    // sendJSON(response,200,planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[33]++;\n  if (!planets.includes(request.body.id)) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[34]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[35]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[36]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[37]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;sendJSON(response, 200, planets[request.body.id]); /* istanbul ignore next */cov_dsu7d9qvm.s[39]++;\n    return;\n  }\n}","timestamp":"2017-12-07T16:46:06.806Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T16:46:06.850Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T16:46:06.900Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T16:46:06.902Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[2]++;cov_dsu7d9qvm.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_dsu7d9qvm.b[0][0]++;cov_dsu7d9qvm.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[0][1]++;}cov_dsu7d9qvm.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_dsu7d9qvm.b[1][0]++;cov_dsu7d9qvm.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[1][1]++;}cov_dsu7d9qvm.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_dsu7d9qvm.b[2][0]++;cov_dsu7d9qvm.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[2][1]++;}\n  //can create my planet since all test pass\n  let planet = /* istanbul ignore next */(cov_dsu7d9qvm.s[25]++, new Planet(request.body.name, request.body.content)); /* istanbul ignore next */cov_dsu7d9qvm.s[26]++;\n  planets.push(planet); /* istanbul ignore next */cov_dsu7d9qvm.s[27]++;\n  sendJSON(response, 200, planet);\n}","timestamp":"2017-12-07T16:46:06.902Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T16:46:06.902Z"}
{"id":"1ee0bd60-db6e-11e7-8245-272a7f5415ab","discoverDate":"2017-03-30T22:12:22.992Z","name":"BD032562b","content":"11h50m1555sDeclination02d45m365s","level":"info","message":"","timestamp":"2017-12-07T16:46:06.903Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T16:46:06.912Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T16:46:06.912Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.body.id'); /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;\n    sendStatus(response, 200, 'good');\n    // sendJSON(response,200,planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[33]++;\n  if (!planets.includes(request.body.id)) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[34]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[35]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[36]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[37]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;sendJSON(response, 200, planets[request.body.id]); /* istanbul ignore next */cov_dsu7d9qvm.s[39]++;\n    return;\n  }\n}","timestamp":"2017-12-07T16:46:06.912Z"}
{"level":"info","message":"__REQUEST_ERROR","timestamp":"2017-12-07T16:46:06.913Z"}
{"message":"Cannot read property 'id' of undefined","stack":"TypeError: Cannot read property 'id' of undefined\n    at Object.<anonymous>.router.get (/home/seth/codefellows/401/lab/08-09-vanilla-rest-server/lab-seth/route/planet-router.js:57:21)\n    at requestParser.parse.then.request (/home/seth/codefellows/401/lab/08-09-vanilla-rest-server/lab-seth/lib/router.js:54:89)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T16:46:06.913Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T16:47:52.127Z"}
{"level":"info","message":"/api/planet","timestamp":"2017-12-07T16:47:52.128Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[2]++;cov_dsu7d9qvm.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_dsu7d9qvm.b[0][0]++;cov_dsu7d9qvm.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[0][1]++;}cov_dsu7d9qvm.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_dsu7d9qvm.b[1][0]++;cov_dsu7d9qvm.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[1][1]++;}cov_dsu7d9qvm.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_dsu7d9qvm.b[2][0]++;cov_dsu7d9qvm.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[2][1]++;}\n  //can create my planet since all test pass\n  let planet = /* istanbul ignore next */(cov_dsu7d9qvm.s[25]++, new Planet(request.body.name, request.body.content)); /* istanbul ignore next */cov_dsu7d9qvm.s[26]++;\n  planets.push(planet); /* istanbul ignore next */cov_dsu7d9qvm.s[27]++;\n  sendJSON(response, 200, planet);\n}","timestamp":"2017-12-07T16:47:52.128Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T16:47:52.128Z"}
{"level":"info","message":"/api/planet","timestamp":"2017-12-07T16:47:52.128Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.body.id'); /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;\n    sendStatus(response, 200, 'good');\n    // sendJSON(response,200,planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[33]++;\n  if (!planets.includes(request.body.id)) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[34]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[35]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[36]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[37]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;sendJSON(response, 200, planets[request.body.id]); /* istanbul ignore next */cov_dsu7d9qvm.s[39]++;\n    return;\n  }\n}","timestamp":"2017-12-07T16:47:52.128Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T16:47:52.192Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T16:47:52.263Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T16:47:52.265Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[2]++;cov_dsu7d9qvm.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_dsu7d9qvm.b[0][0]++;cov_dsu7d9qvm.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[0][1]++;}cov_dsu7d9qvm.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_dsu7d9qvm.b[1][0]++;cov_dsu7d9qvm.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[1][1]++;}cov_dsu7d9qvm.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_dsu7d9qvm.b[2][0]++;cov_dsu7d9qvm.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[2][1]++;}\n  //can create my planet since all test pass\n  let planet = /* istanbul ignore next */(cov_dsu7d9qvm.s[25]++, new Planet(request.body.name, request.body.content)); /* istanbul ignore next */cov_dsu7d9qvm.s[26]++;\n  planets.push(planet); /* istanbul ignore next */cov_dsu7d9qvm.s[27]++;\n  sendJSON(response, 200, planet);\n}","timestamp":"2017-12-07T16:47:52.265Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T16:47:52.266Z"}
{"id":"5daddb90-db6e-11e7-9ae3-b532b99461ad","discoverDate":"2017-10-13T05:41:36.930Z","name":"BD032562b","content":"11h50m1555sDeclination02d45m365s","level":"info","message":"","timestamp":"2017-12-07T16:47:52.266Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T16:47:52.279Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T16:47:52.279Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.body.id'); /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;\n    sendStatus(response, 200, 'good');\n    // sendJSON(response,200,planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[33]++;\n  if (!planets.includes(request.body.id)) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[34]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[35]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[36]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[37]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;sendJSON(response, 200, planets[request.body.id]); /* istanbul ignore next */cov_dsu7d9qvm.s[39]++;\n    return;\n  }\n}","timestamp":"2017-12-07T16:47:52.279Z"}
{"level":"info","message":"__REQUEST_ERROR","timestamp":"2017-12-07T16:47:52.280Z"}
{"message":"Cannot read property 'id' of undefined","stack":"TypeError: Cannot read property 'id' of undefined\n    at Object.<anonymous>.router.get (/home/seth/codefellows/401/lab/08-09-vanilla-rest-server/lab-seth/route/planet-router.js:57:21)\n    at requestParser.parse.then.request (/home/seth/codefellows/401/lab/08-09-vanilla-rest-server/lab-seth/lib/router.js:54:89)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T16:47:52.280Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T16:49:30.940Z"}
{"level":"info","message":"/api/planet","timestamp":"2017-12-07T16:49:30.941Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[2]++;cov_dsu7d9qvm.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_dsu7d9qvm.b[0][0]++;cov_dsu7d9qvm.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[0][1]++;}cov_dsu7d9qvm.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_dsu7d9qvm.b[1][0]++;cov_dsu7d9qvm.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[1][1]++;}cov_dsu7d9qvm.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_dsu7d9qvm.b[2][0]++;cov_dsu7d9qvm.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[2][1]++;}\n  //can create my planet since all test pass\n  let planet = /* istanbul ignore next */(cov_dsu7d9qvm.s[25]++, new Planet(request.body.name, request.body.content)); /* istanbul ignore next */cov_dsu7d9qvm.s[26]++;\n  planets.push(planet); /* istanbul ignore next */cov_dsu7d9qvm.s[27]++;\n  sendJSON(response, 200, planet);\n}","timestamp":"2017-12-07T16:49:30.941Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T16:49:30.941Z"}
{"level":"info","message":"/api/planet","timestamp":"2017-12-07T16:49:30.941Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.body.id'); /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;\n    sendStatus(response, 200, 'good');\n    // sendJSON(response,200,planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;return;\n    // }\n    // if(!planets.includes(request.body.id)){\n    //   console.log('Hit .get at specific request.body.id NOT in planets')\n    //   // sendStatus(response,200,planets[request.id]);\n    //   sendStatus(response, 404, 'Planet ID not found');\n    //   return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[3][1]++;cov_dsu7d9qvm.s[33]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[34]++;sendJSON(response, 200, planets[request.body.id]); /* istanbul ignore next */cov_dsu7d9qvm.s[35]++;\n    return;\n  }\n}","timestamp":"2017-12-07T16:49:30.941Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T16:49:30.986Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T16:49:31.042Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T16:49:31.043Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[2]++;cov_dsu7d9qvm.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_dsu7d9qvm.b[0][0]++;cov_dsu7d9qvm.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[0][1]++;}cov_dsu7d9qvm.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_dsu7d9qvm.b[1][0]++;cov_dsu7d9qvm.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[1][1]++;}cov_dsu7d9qvm.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_dsu7d9qvm.b[2][0]++;cov_dsu7d9qvm.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[2][1]++;}\n  //can create my planet since all test pass\n  let planet = /* istanbul ignore next */(cov_dsu7d9qvm.s[25]++, new Planet(request.body.name, request.body.content)); /* istanbul ignore next */cov_dsu7d9qvm.s[26]++;\n  planets.push(planet); /* istanbul ignore next */cov_dsu7d9qvm.s[27]++;\n  sendJSON(response, 200, planet);\n}","timestamp":"2017-12-07T16:49:31.043Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T16:49:31.044Z"}
{"id":"988e2f30-db6e-11e7-94f0-ddc57685d4b5","discoverDate":"2017-09-05T08:17:19.639Z","name":"BD032562b","content":"11h50m1555sDeclination02d45m365s","level":"info","message":"","timestamp":"2017-12-07T16:49:31.044Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T16:49:31.053Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T16:49:31.053Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.body.id'); /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;\n    sendStatus(response, 200, 'good');\n    // sendJSON(response,200,planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;return;\n    // }\n    // if(!planets.includes(request.body.id)){\n    //   console.log('Hit .get at specific request.body.id NOT in planets')\n    //   // sendStatus(response,200,planets[request.id]);\n    //   sendStatus(response, 404, 'Planet ID not found');\n    //   return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[3][1]++;cov_dsu7d9qvm.s[33]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[34]++;sendJSON(response, 200, planets[request.body.id]); /* istanbul ignore next */cov_dsu7d9qvm.s[35]++;\n    return;\n  }\n}","timestamp":"2017-12-07T16:49:31.053Z"}
{"level":"info","message":"__REQUEST_ERROR","timestamp":"2017-12-07T16:49:31.053Z"}
{"message":"Cannot read property 'id' of undefined","stack":"TypeError: Cannot read property 'id' of undefined\n    at Object.<anonymous>.router.get (/home/seth/codefellows/401/lab/08-09-vanilla-rest-server/lab-seth/route/planet-router.js:57:21)\n    at requestParser.parse.then.request (/home/seth/codefellows/401/lab/08-09-vanilla-rest-server/lab-seth/lib/router.js:54:89)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T16:49:31.054Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T16:54:01.650Z"}
{"level":"info","message":"/api/planet","timestamp":"2017-12-07T16:54:01.650Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[2]++;cov_dsu7d9qvm.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_dsu7d9qvm.b[0][0]++;cov_dsu7d9qvm.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[0][1]++;}cov_dsu7d9qvm.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_dsu7d9qvm.b[1][0]++;cov_dsu7d9qvm.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[1][1]++;}cov_dsu7d9qvm.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_dsu7d9qvm.b[2][0]++;cov_dsu7d9qvm.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[2][1]++;}\n  //can create my planet since all test pass\n  let planet = /* istanbul ignore next */(cov_dsu7d9qvm.s[25]++, new Planet(request.body.name, request.body.content)); /* istanbul ignore next */cov_dsu7d9qvm.s[26]++;\n  planets.push(planet); /* istanbul ignore next */cov_dsu7d9qvm.s[27]++;\n  sendJSON(response, 200, planet);\n}","timestamp":"2017-12-07T16:54:01.650Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T16:54:01.650Z"}
{"level":"info","message":"/api/planet","timestamp":"2017-12-07T16:54:01.650Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.body.id'); /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;\n    sendStatus(response, 200, 'good');\n    // sendJSON(response,200,planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;return;\n    // }\n    // if(!planets.includes(request.body.id)){\n    //   console.log('Hit .get at specific request.body.id NOT in planets')\n    //   // sendStatus(response,200,planets[request.id]);\n    //   sendStatus(response, 404, 'Planet ID not found');\n    //   return;\n    // } else { //if(request.body.id)\n    //   console.log('Hit .get at specific & correct request.body.id')\n    //   // sendStatus(response,200,planets[request.id]);\n    //   sendJSON(response, 200, planets[request.body.id]);\n    //   return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}\n}","timestamp":"2017-12-07T16:54:01.651Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T16:54:01.698Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T16:54:01.752Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T16:54:01.754Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[2]++;cov_dsu7d9qvm.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_dsu7d9qvm.b[0][0]++;cov_dsu7d9qvm.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[0][1]++;}cov_dsu7d9qvm.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_dsu7d9qvm.b[1][0]++;cov_dsu7d9qvm.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[1][1]++;}cov_dsu7d9qvm.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_dsu7d9qvm.b[2][0]++;cov_dsu7d9qvm.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[2][1]++;}\n  //can create my planet since all test pass\n  let planet = /* istanbul ignore next */(cov_dsu7d9qvm.s[25]++, new Planet(request.body.name, request.body.content)); /* istanbul ignore next */cov_dsu7d9qvm.s[26]++;\n  planets.push(planet); /* istanbul ignore next */cov_dsu7d9qvm.s[27]++;\n  sendJSON(response, 200, planet);\n}","timestamp":"2017-12-07T16:54:01.754Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T16:54:01.755Z"}
{"id":"39e967a0-db6f-11e7-9c41-63a2adb81d19","discoverDate":"2017-08-04T02:01:34.494Z","name":"BD032562b","content":"11h50m1555sDeclination02d45m365s","level":"info","message":"","timestamp":"2017-12-07T16:54:01.755Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T16:54:01.764Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T16:54:01.764Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.body.id'); /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;\n    sendStatus(response, 200, 'good');\n    // sendJSON(response,200,planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;return;\n    // }\n    // if(!planets.includes(request.body.id)){\n    //   console.log('Hit .get at specific request.body.id NOT in planets')\n    //   // sendStatus(response,200,planets[request.id]);\n    //   sendStatus(response, 404, 'Planet ID not found');\n    //   return;\n    // } else { //if(request.body.id)\n    //   console.log('Hit .get at specific & correct request.body.id')\n    //   // sendStatus(response,200,planets[request.id]);\n    //   sendJSON(response, 200, planets[request.body.id]);\n    //   return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}\n}","timestamp":"2017-12-07T16:54:01.764Z"}
{"level":"info","message":"__REQUEST_ERROR","timestamp":"2017-12-07T16:54:01.764Z"}
{"message":"Cannot read property 'id' of undefined","stack":"TypeError: Cannot read property 'id' of undefined\n    at Object.<anonymous>.router.get (/home/seth/codefellows/401/lab/08-09-vanilla-rest-server/lab-seth/route/planet-router.js:57:21)\n    at requestParser.parse.then.request (/home/seth/codefellows/401/lab/08-09-vanilla-rest-server/lab-seth/lib/router.js:54:89)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T16:54:01.764Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T16:55:51.158Z"}
{"level":"info","message":"/api/planet","timestamp":"2017-12-07T16:55:51.159Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[2]++;cov_dsu7d9qvm.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_dsu7d9qvm.b[0][0]++;cov_dsu7d9qvm.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[0][1]++;}cov_dsu7d9qvm.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_dsu7d9qvm.b[1][0]++;cov_dsu7d9qvm.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[1][1]++;}cov_dsu7d9qvm.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_dsu7d9qvm.b[2][0]++;cov_dsu7d9qvm.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[2][1]++;}\n  //can create my planet since all test pass\n  let planet = /* istanbul ignore next */(cov_dsu7d9qvm.s[25]++, new Planet(request.body.name, request.body.content)); /* istanbul ignore next */cov_dsu7d9qvm.s[26]++;\n  planets.push(planet); /* istanbul ignore next */cov_dsu7d9qvm.s[27]++;\n  sendJSON(response, 200, planet);\n}","timestamp":"2017-12-07T16:55:51.159Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T16:55:51.159Z"}
{"level":"info","message":"/api/planet","timestamp":"2017-12-07T16:55:51.159Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.body.id'); /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;\n    sendStatus(response, 200, 'good');\n    // sendJSON(response,200,planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[33]++;\n  if (!planets.includes(request.body.id)) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[34]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[35]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[36]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[37]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;sendJSON(response, 200, planets[request.body.id]); /* istanbul ignore next */cov_dsu7d9qvm.s[39]++;\n    return;\n  }\n}","timestamp":"2017-12-07T16:55:51.159Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T16:55:51.203Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T16:55:51.253Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T16:55:51.254Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[2]++;cov_dsu7d9qvm.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_dsu7d9qvm.b[0][0]++;cov_dsu7d9qvm.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[0][1]++;}cov_dsu7d9qvm.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_dsu7d9qvm.b[1][0]++;cov_dsu7d9qvm.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[1][1]++;}cov_dsu7d9qvm.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_dsu7d9qvm.b[2][0]++;cov_dsu7d9qvm.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[2][1]++;}\n  //can create my planet since all test pass\n  let planet = /* istanbul ignore next */(cov_dsu7d9qvm.s[25]++, new Planet(request.body.name, request.body.content)); /* istanbul ignore next */cov_dsu7d9qvm.s[26]++;\n  planets.push(planet); /* istanbul ignore next */cov_dsu7d9qvm.s[27]++;\n  sendJSON(response, 200, planet);\n}","timestamp":"2017-12-07T16:55:51.254Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T16:55:51.255Z"}
{"id":"7b2dee70-db6f-11e7-b59a-b151b6bda917","discoverDate":"2017-06-23T08:47:32.422Z","name":"BD032562b","content":"11h50m1555sDeclination02d45m365s","level":"info","message":"","timestamp":"2017-12-07T16:55:51.255Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T16:55:51.264Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T16:55:51.264Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.body.id'); /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;\n    sendStatus(response, 200, 'good');\n    // sendJSON(response,200,planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[33]++;\n  if (!planets.includes(request.body.id)) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[34]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[35]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[36]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[37]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;sendJSON(response, 200, planets[request.body.id]); /* istanbul ignore next */cov_dsu7d9qvm.s[39]++;\n    return;\n  }\n}","timestamp":"2017-12-07T16:55:51.264Z"}
{"level":"info","message":"__REQUEST_ERROR","timestamp":"2017-12-07T16:55:51.265Z"}
{"message":"Cannot read property 'id' of undefined","stack":"TypeError: Cannot read property 'id' of undefined\n    at Object.<anonymous>.router.get (/home/seth/codefellows/401/lab/08-09-vanilla-rest-server/lab-seth/route/planet-router.js:57:21)\n    at requestParser.parse.then.request (/home/seth/codefellows/401/lab/08-09-vanilla-rest-server/lab-seth/lib/router.js:54:89)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T16:55:51.265Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T16:56:07.499Z"}
{"level":"info","message":"/api/planet","timestamp":"2017-12-07T16:56:07.500Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[2]++;cov_dsu7d9qvm.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_dsu7d9qvm.b[0][0]++;cov_dsu7d9qvm.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[0][1]++;}cov_dsu7d9qvm.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_dsu7d9qvm.b[1][0]++;cov_dsu7d9qvm.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[1][1]++;}cov_dsu7d9qvm.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_dsu7d9qvm.b[2][0]++;cov_dsu7d9qvm.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[2][1]++;}\n  //can create my planet since all test pass\n  let planet = /* istanbul ignore next */(cov_dsu7d9qvm.s[25]++, new Planet(request.body.name, request.body.content)); /* istanbul ignore next */cov_dsu7d9qvm.s[26]++;\n  planets.push(planet); /* istanbul ignore next */cov_dsu7d9qvm.s[27]++;\n  sendJSON(response, 200, planet);\n}","timestamp":"2017-12-07T16:56:07.500Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T16:56:07.500Z"}
{"level":"info","message":"/api/planet","timestamp":"2017-12-07T16:56:07.500Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.body.id'); /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;\n    sendStatus(response, 200, 'good');\n    // sendJSON(response,200,planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[33]++;\n  if (!planets.includes(request.body.id)) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[34]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[35]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[36]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[37]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;sendJSON(response, 200, planets[request.body.id]); /* istanbul ignore next */cov_dsu7d9qvm.s[39]++;\n    return;\n  }\n}","timestamp":"2017-12-07T16:56:07.500Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T16:56:07.542Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T16:56:07.593Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T16:56:07.594Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[2]++;cov_dsu7d9qvm.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_dsu7d9qvm.b[0][0]++;cov_dsu7d9qvm.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[0][1]++;}cov_dsu7d9qvm.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_dsu7d9qvm.b[1][0]++;cov_dsu7d9qvm.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[1][1]++;}cov_dsu7d9qvm.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_dsu7d9qvm.b[2][0]++;cov_dsu7d9qvm.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[2][1]++;}\n  //can create my planet since all test pass\n  let planet = /* istanbul ignore next */(cov_dsu7d9qvm.s[25]++, new Planet(request.body.name, request.body.content)); /* istanbul ignore next */cov_dsu7d9qvm.s[26]++;\n  planets.push(planet); /* istanbul ignore next */cov_dsu7d9qvm.s[27]++;\n  sendJSON(response, 200, planet);\n}","timestamp":"2017-12-07T16:56:07.594Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T16:56:07.595Z"}
{"id":"84eb37b0-db6f-11e7-8d3f-95a4f29b6f33","discoverDate":"2017-03-30T16:06:51.420Z","name":"BD032562b","content":"11h50m1555sDeclination02d45m365s","level":"info","message":"","timestamp":"2017-12-07T16:56:07.595Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T16:56:07.604Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T16:56:07.604Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.body.id'); /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;\n    sendStatus(response, 200, 'good');\n    // sendJSON(response,200,planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[33]++;\n  if (!planets.includes(request.body.id)) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[34]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[35]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[36]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[37]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;sendJSON(response, 200, planets[request.body.id]); /* istanbul ignore next */cov_dsu7d9qvm.s[39]++;\n    return;\n  }\n}","timestamp":"2017-12-07T16:56:07.605Z"}
{"level":"info","message":"__REQUEST_ERROR","timestamp":"2017-12-07T16:56:07.605Z"}
{"message":"Cannot read property 'id' of undefined","stack":"TypeError: Cannot read property 'id' of undefined\n    at Object.<anonymous>.router.get (/home/seth/codefellows/401/lab/08-09-vanilla-rest-server/lab-seth/route/planet-router.js:57:21)\n    at requestParser.parse.then.request (/home/seth/codefellows/401/lab/08-09-vanilla-rest-server/lab-seth/lib/router.js:54:89)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T16:56:07.605Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T16:59:49.335Z"}
{"level":"info","message":"/api/planet","timestamp":"2017-12-07T16:59:49.335Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[2]++;cov_dsu7d9qvm.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_dsu7d9qvm.b[0][0]++;cov_dsu7d9qvm.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[0][1]++;}cov_dsu7d9qvm.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_dsu7d9qvm.b[1][0]++;cov_dsu7d9qvm.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[1][1]++;}cov_dsu7d9qvm.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_dsu7d9qvm.b[2][0]++;cov_dsu7d9qvm.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[2][1]++;}\n  //can create my planet since all test pass\n  let planet = /* istanbul ignore next */(cov_dsu7d9qvm.s[25]++, new Planet(request.body.name, request.body.content)); /* istanbul ignore next */cov_dsu7d9qvm.s[26]++;\n  planets.push(planet); /* istanbul ignore next */cov_dsu7d9qvm.s[27]++;\n  sendJSON(response, 200, planet);\n}","timestamp":"2017-12-07T16:59:49.335Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T16:59:49.335Z"}
{"level":"info","message":"/api/planet","timestamp":"2017-12-07T16:59:49.335Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.body.id'); /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;\n    sendStatus(response, 200, 'good');\n    // sendJSON(response,200,planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[33]++;\n  if (!planets.includes(request.body.id)) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[34]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[35]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[36]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[37]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;sendJSON(response, 200, planets[request.body.id]); /* istanbul ignore next */cov_dsu7d9qvm.s[39]++;\n    return;\n  }\n}","timestamp":"2017-12-07T16:59:49.335Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T16:59:49.381Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T16:59:49.437Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T16:59:49.438Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[2]++;cov_dsu7d9qvm.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_dsu7d9qvm.b[0][0]++;cov_dsu7d9qvm.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[0][1]++;}cov_dsu7d9qvm.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_dsu7d9qvm.b[1][0]++;cov_dsu7d9qvm.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[1][1]++;}cov_dsu7d9qvm.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_dsu7d9qvm.b[2][0]++;cov_dsu7d9qvm.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[2][1]++;}\n  //can create my planet since all test pass\n  let planet = /* istanbul ignore next */(cov_dsu7d9qvm.s[25]++, new Planet(request.body.name, request.body.content)); /* istanbul ignore next */cov_dsu7d9qvm.s[26]++;\n  planets.push(planet); /* istanbul ignore next */cov_dsu7d9qvm.s[27]++;\n  sendJSON(response, 200, planet);\n}","timestamp":"2017-12-07T16:59:49.438Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T16:59:49.439Z"}
{"id":"0925c5e0-db70-11e7-be35-35747ed83c8d","discoverDate":"2017-10-21T06:17:16.299Z","name":"BD032562b","content":"11h50m1555sDeclination02d45m365s","level":"info","message":"","timestamp":"2017-12-07T16:59:49.439Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T16:59:49.447Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T16:59:49.447Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.body.id'); /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;\n    sendStatus(response, 200, 'good');\n    // sendJSON(response,200,planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[33]++;\n  if (!planets.includes(request.body.id)) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[34]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[35]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[36]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[37]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;sendJSON(response, 200, planets[request.body.id]); /* istanbul ignore next */cov_dsu7d9qvm.s[39]++;\n    return;\n  }\n}","timestamp":"2017-12-07T16:59:49.447Z"}
{"level":"info","message":"Responding with a 200 code due to good","timestamp":"2017-12-07T16:59:49.448Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T17:00:39.119Z"}
{"level":"info","message":"/api/planet","timestamp":"2017-12-07T17:00:39.120Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[2]++;cov_dsu7d9qvm.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_dsu7d9qvm.b[0][0]++;cov_dsu7d9qvm.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[0][1]++;}cov_dsu7d9qvm.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_dsu7d9qvm.b[1][0]++;cov_dsu7d9qvm.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[1][1]++;}cov_dsu7d9qvm.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_dsu7d9qvm.b[2][0]++;cov_dsu7d9qvm.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[2][1]++;}\n  //can create my planet since all test pass\n  let planet = /* istanbul ignore next */(cov_dsu7d9qvm.s[25]++, new Planet(request.body.name, request.body.content)); /* istanbul ignore next */cov_dsu7d9qvm.s[26]++;\n  planets.push(planet); /* istanbul ignore next */cov_dsu7d9qvm.s[27]++;\n  sendJSON(response, 200, planet);\n}","timestamp":"2017-12-07T17:00:39.120Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T17:00:39.120Z"}
{"level":"info","message":"/api/planet","timestamp":"2017-12-07T17:00:39.120Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.url.query.id'); /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;\n    sendStatus(response, 200, planets);\n    // sendJSON(response,200,planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[33]++;\n  if (!planets.includes(request.body.id)) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[34]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[35]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[36]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[37]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;sendJSON(response, 200, planets[request.body.id]); /* istanbul ignore next */cov_dsu7d9qvm.s[39]++;\n    return;\n  }\n}","timestamp":"2017-12-07T17:00:39.120Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T17:00:39.164Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T17:00:39.220Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T17:00:39.221Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[2]++;cov_dsu7d9qvm.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_dsu7d9qvm.b[0][0]++;cov_dsu7d9qvm.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[0][1]++;}cov_dsu7d9qvm.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_dsu7d9qvm.b[1][0]++;cov_dsu7d9qvm.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[1][1]++;}cov_dsu7d9qvm.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_dsu7d9qvm.b[2][0]++;cov_dsu7d9qvm.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[2][1]++;}\n  //can create my planet since all test pass\n  let planet = /* istanbul ignore next */(cov_dsu7d9qvm.s[25]++, new Planet(request.body.name, request.body.content)); /* istanbul ignore next */cov_dsu7d9qvm.s[26]++;\n  planets.push(planet); /* istanbul ignore next */cov_dsu7d9qvm.s[27]++;\n  sendJSON(response, 200, planet);\n}","timestamp":"2017-12-07T17:00:39.221Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T17:00:39.222Z"}
{"id":"26d20e50-db70-11e7-b89b-57f9d30b04d0","discoverDate":"2017-06-19T01:14:46.504Z","name":"BD032562b","content":"11h50m1555sDeclination02d45m365s","level":"info","message":"","timestamp":"2017-12-07T17:00:39.222Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T17:00:39.230Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T17:00:39.231Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.url.query.id'); /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;\n    sendStatus(response, 200, planets);\n    // sendJSON(response,200,planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[33]++;\n  if (!planets.includes(request.body.id)) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[34]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[35]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[36]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[37]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;sendJSON(response, 200, planets[request.body.id]); /* istanbul ignore next */cov_dsu7d9qvm.s[39]++;\n    return;\n  }\n}","timestamp":"2017-12-07T17:00:39.231Z"}
{"level":"info","message":"Responding with a 200 code due to [object Object]","timestamp":"2017-12-07T17:00:39.231Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T17:01:04.459Z"}
{"level":"info","message":"/api/planet","timestamp":"2017-12-07T17:01:04.459Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[2]++;cov_dsu7d9qvm.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_dsu7d9qvm.b[0][0]++;cov_dsu7d9qvm.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[0][1]++;}cov_dsu7d9qvm.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_dsu7d9qvm.b[1][0]++;cov_dsu7d9qvm.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[1][1]++;}cov_dsu7d9qvm.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_dsu7d9qvm.b[2][0]++;cov_dsu7d9qvm.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[2][1]++;}\n  //can create my planet since all test pass\n  let planet = /* istanbul ignore next */(cov_dsu7d9qvm.s[25]++, new Planet(request.body.name, request.body.content)); /* istanbul ignore next */cov_dsu7d9qvm.s[26]++;\n  planets.push(planet); /* istanbul ignore next */cov_dsu7d9qvm.s[27]++;\n  sendJSON(response, 200, planet);\n}","timestamp":"2017-12-07T17:01:04.459Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T17:01:04.459Z"}
{"level":"info","message":"/api/planet","timestamp":"2017-12-07T17:01:04.459Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.url.query.id'); /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;\n    sendStatus(response, 200, planets);\n    // sendJSON(response,200,planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[33]++;\n  if (!planets.includes(request.body.id)) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[34]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[35]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[36]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[37]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;sendJSON(response, 200, planets[request.body.id]); /* istanbul ignore next */cov_dsu7d9qvm.s[39]++;\n    return;\n  }\n}","timestamp":"2017-12-07T17:01:04.460Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T17:01:04.499Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T17:01:04.554Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T17:01:04.556Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[2]++;cov_dsu7d9qvm.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_dsu7d9qvm.b[0][0]++;cov_dsu7d9qvm.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[0][1]++;}cov_dsu7d9qvm.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_dsu7d9qvm.b[1][0]++;cov_dsu7d9qvm.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[1][1]++;}cov_dsu7d9qvm.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_dsu7d9qvm.b[2][0]++;cov_dsu7d9qvm.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[2][1]++;}\n  //can create my planet since all test pass\n  let planet = /* istanbul ignore next */(cov_dsu7d9qvm.s[25]++, new Planet(request.body.name, request.body.content)); /* istanbul ignore next */cov_dsu7d9qvm.s[26]++;\n  planets.push(planet); /* istanbul ignore next */cov_dsu7d9qvm.s[27]++;\n  sendJSON(response, 200, planet);\n}","timestamp":"2017-12-07T17:01:04.556Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T17:01:04.556Z"}
{"id":"35ebdec0-db70-11e7-a7e8-8fb36f8ae859","discoverDate":"2017-10-10T13:28:12.499Z","name":"BD032562b","content":"11h50m1555sDeclination02d45m365s","level":"info","message":"","timestamp":"2017-12-07T17:01:04.557Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T17:01:04.565Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T17:01:04.565Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.url.query.id'); /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;\n    sendStatus(response, 200, planets);\n    // sendJSON(response,200,planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[33]++;\n  if (!planets.includes(request.body.id)) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[34]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[35]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[36]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[37]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;sendJSON(response, 200, planets[request.body.id]); /* istanbul ignore next */cov_dsu7d9qvm.s[39]++;\n    return;\n  }\n}","timestamp":"2017-12-07T17:01:04.565Z"}
{"level":"info","message":"Responding with a 200 code due to [object Object]","timestamp":"2017-12-07T17:01:04.566Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T17:01:33.795Z"}
{"level":"info","message":"/api/planet","timestamp":"2017-12-07T17:01:33.796Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[2]++;cov_dsu7d9qvm.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_dsu7d9qvm.b[0][0]++;cov_dsu7d9qvm.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[0][1]++;}cov_dsu7d9qvm.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_dsu7d9qvm.b[1][0]++;cov_dsu7d9qvm.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[1][1]++;}cov_dsu7d9qvm.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_dsu7d9qvm.b[2][0]++;cov_dsu7d9qvm.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[2][1]++;}\n  //can create my planet since all test pass\n  let planet = /* istanbul ignore next */(cov_dsu7d9qvm.s[25]++, new Planet(request.body.name, request.body.content)); /* istanbul ignore next */cov_dsu7d9qvm.s[26]++;\n  planets.push(planet); /* istanbul ignore next */cov_dsu7d9qvm.s[27]++;\n  sendJSON(response, 200, planet);\n}","timestamp":"2017-12-07T17:01:33.796Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T17:01:33.796Z"}
{"level":"info","message":"/api/planet","timestamp":"2017-12-07T17:01:33.796Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.url.query.id'); /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;\n    sendStatus(response, 200, planets);\n    // sendJSON(response,200,planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[33]++;\n  if (!planets.includes(request.body.id)) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[34]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[35]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[36]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[37]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;sendJSON(response, 200, planets[request.body.id]); /* istanbul ignore next */cov_dsu7d9qvm.s[39]++;\n    return;\n  }\n}","timestamp":"2017-12-07T17:01:33.796Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T17:01:33.836Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T17:01:33.892Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T17:01:33.893Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[2]++;cov_dsu7d9qvm.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_dsu7d9qvm.b[0][0]++;cov_dsu7d9qvm.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[0][1]++;}cov_dsu7d9qvm.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_dsu7d9qvm.b[1][0]++;cov_dsu7d9qvm.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[1][1]++;}cov_dsu7d9qvm.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_dsu7d9qvm.b[2][0]++;cov_dsu7d9qvm.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[2][1]++;}\n  //can create my planet since all test pass\n  let planet = /* istanbul ignore next */(cov_dsu7d9qvm.s[25]++, new Planet(request.body.name, request.body.content)); /* istanbul ignore next */cov_dsu7d9qvm.s[26]++;\n  planets.push(planet); /* istanbul ignore next */cov_dsu7d9qvm.s[27]++;\n  sendJSON(response, 200, planet);\n}","timestamp":"2017-12-07T17:01:33.893Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T17:01:33.894Z"}
{"id":"47687e60-db70-11e7-9ce6-21c71d235aca","discoverDate":"2017-11-12T04:19:59.450Z","name":"BD032562b","content":"11h50m1555sDeclination02d45m365s","level":"info","message":"","timestamp":"2017-12-07T17:01:33.894Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T17:01:33.902Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T17:01:33.903Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.url.query.id'); /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;\n    sendStatus(response, 200, planets);\n    // sendJSON(response,200,planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[33]++;\n  if (!planets.includes(request.body.id)) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[34]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[35]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[36]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[37]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;sendJSON(response, 200, planets[request.body.id]); /* istanbul ignore next */cov_dsu7d9qvm.s[39]++;\n    return;\n  }\n}","timestamp":"2017-12-07T17:01:33.903Z"}
{"level":"info","message":"Responding with a 200 code due to [object Object]","timestamp":"2017-12-07T17:01:33.903Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T17:02:59.027Z"}
{"level":"info","message":"/api/planet","timestamp":"2017-12-07T17:02:59.028Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[2]++;cov_dsu7d9qvm.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_dsu7d9qvm.b[0][0]++;cov_dsu7d9qvm.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[0][1]++;}cov_dsu7d9qvm.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_dsu7d9qvm.b[1][0]++;cov_dsu7d9qvm.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[1][1]++;}cov_dsu7d9qvm.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_dsu7d9qvm.b[2][0]++;cov_dsu7d9qvm.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[2][1]++;}\n  //can create my planet since all test pass\n  let planet = /* istanbul ignore next */(cov_dsu7d9qvm.s[25]++, new Planet(request.body.name, request.body.content)); /* istanbul ignore next */cov_dsu7d9qvm.s[26]++;\n  planets.push(planet); /* istanbul ignore next */cov_dsu7d9qvm.s[27]++;\n  sendJSON(response, 200, planet);\n}","timestamp":"2017-12-07T17:02:59.028Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T17:02:59.028Z"}
{"level":"info","message":"/api/planet","timestamp":"2017-12-07T17:02:59.028Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.url.query.id'); /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;\n    sendStatus(response, 200, planets);\n    // sendJSON(response,200,planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[33]++;\n  if (!planets.includes(request.body.id)) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[34]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[35]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[36]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[37]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;sendJSON(response, 200, planets[request.body.id]); /* istanbul ignore next */cov_dsu7d9qvm.s[39]++;\n    return;\n  }\n}","timestamp":"2017-12-07T17:02:59.028Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T17:02:59.084Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T17:02:59.167Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T17:02:59.168Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[2]++;cov_dsu7d9qvm.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_dsu7d9qvm.b[0][0]++;cov_dsu7d9qvm.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[0][1]++;}cov_dsu7d9qvm.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_dsu7d9qvm.b[1][0]++;cov_dsu7d9qvm.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[1][1]++;}cov_dsu7d9qvm.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_dsu7d9qvm.b[2][0]++;cov_dsu7d9qvm.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[2][1]++;}\n  //can create my planet since all test pass\n  let planet = /* istanbul ignore next */(cov_dsu7d9qvm.s[25]++, new Planet(request.body.name, request.body.content)); /* istanbul ignore next */cov_dsu7d9qvm.s[26]++;\n  planets.push(planet); /* istanbul ignore next */cov_dsu7d9qvm.s[27]++;\n  sendJSON(response, 200, planet);\n}","timestamp":"2017-12-07T17:02:59.169Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T17:02:59.170Z"}
{"id":"7a3c9420-db70-11e7-8aa6-f7a375c10cec","discoverDate":"2017-04-17T10:41:22.252Z","name":"BD032562b","content":"11h50m1555sDeclination02d45m365s","level":"info","message":"","timestamp":"2017-12-07T17:02:59.170Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T17:02:59.183Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T17:02:59.184Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.url.query.id'); /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;\n    sendStatus(response, 200, planets);\n    // sendJSON(response,200,planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[33]++;\n  if (!planets.includes(request.body.id)) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[34]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[35]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[36]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[37]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;sendJSON(response, 200, planets[request.body.id]); /* istanbul ignore next */cov_dsu7d9qvm.s[39]++;\n    return;\n  }\n}","timestamp":"2017-12-07T17:02:59.184Z"}
{"level":"info","message":"Responding with a 200 code due to [object Object]","timestamp":"2017-12-07T17:02:59.184Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T17:03:41.585Z"}
{"level":"info","message":"/api/planet","timestamp":"2017-12-07T17:03:41.585Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[2]++;cov_dsu7d9qvm.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_dsu7d9qvm.b[0][0]++;cov_dsu7d9qvm.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[0][1]++;}cov_dsu7d9qvm.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_dsu7d9qvm.b[1][0]++;cov_dsu7d9qvm.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[1][1]++;}cov_dsu7d9qvm.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_dsu7d9qvm.b[2][0]++;cov_dsu7d9qvm.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[2][1]++;}\n  //can create my planet since all test pass\n  let planet = /* istanbul ignore next */(cov_dsu7d9qvm.s[25]++, new Planet(request.body.name, request.body.content)); /* istanbul ignore next */cov_dsu7d9qvm.s[26]++;\n  planets.push(planet); /* istanbul ignore next */cov_dsu7d9qvm.s[27]++;\n  sendJSON(response, 200, planet);\n}","timestamp":"2017-12-07T17:03:41.585Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T17:03:41.586Z"}
{"level":"info","message":"/api/planet","timestamp":"2017-12-07T17:03:41.586Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.url.query.id');\n    // sendStatus(response, 200, planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;sendJSON(response, 200, planets); /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[33]++;\n  if (!planets.includes(request.body.id)) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[34]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[35]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[36]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[37]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;sendJSON(response, 200, planets[request.body.id]); /* istanbul ignore next */cov_dsu7d9qvm.s[39]++;\n    return;\n  }\n}","timestamp":"2017-12-07T17:03:41.586Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T17:03:41.629Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T17:03:41.685Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T17:03:41.686Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[2]++;cov_dsu7d9qvm.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_dsu7d9qvm.b[0][0]++;cov_dsu7d9qvm.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[0][1]++;}cov_dsu7d9qvm.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_dsu7d9qvm.b[1][0]++;cov_dsu7d9qvm.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[1][1]++;}cov_dsu7d9qvm.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_dsu7d9qvm.b[2][0]++;cov_dsu7d9qvm.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[2][1]++;}\n  //can create my planet since all test pass\n  let planet = /* istanbul ignore next */(cov_dsu7d9qvm.s[25]++, new Planet(request.body.name, request.body.content)); /* istanbul ignore next */cov_dsu7d9qvm.s[26]++;\n  planets.push(planet); /* istanbul ignore next */cov_dsu7d9qvm.s[27]++;\n  sendJSON(response, 200, planet);\n}","timestamp":"2017-12-07T17:03:41.686Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T17:03:41.687Z"}
{"id":"93942870-db70-11e7-b828-294125f7aa1c","discoverDate":"2017-01-24T08:50:53.816Z","name":"BD032562b","content":"11h50m1555sDeclination02d45m365s","level":"info","message":"","timestamp":"2017-12-07T17:03:41.687Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T17:03:41.696Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T17:03:41.696Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.url.query.id');\n    // sendStatus(response, 200, planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;sendJSON(response, 200, planets); /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[33]++;\n  if (!planets.includes(request.body.id)) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[34]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[35]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[36]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[37]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;sendJSON(response, 200, planets[request.body.id]); /* istanbul ignore next */cov_dsu7d9qvm.s[39]++;\n    return;\n  }\n}","timestamp":"2017-12-07T17:03:41.696Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T17:03:41.697Z"}
[{"id":"93942870-db70-11e7-b828-294125f7aa1c","discoverDate":"2017-01-24T08:50:53.816Z","name":"BD032562b","content":"11h50m1555sDeclination02d45m365s"}]
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T17:05:19.388Z"}
{"level":"info","message":"/api/planet","timestamp":"2017-12-07T17:05:19.389Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[2]++;cov_dsu7d9qvm.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_dsu7d9qvm.b[0][0]++;cov_dsu7d9qvm.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[0][1]++;}cov_dsu7d9qvm.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_dsu7d9qvm.b[1][0]++;cov_dsu7d9qvm.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[1][1]++;}cov_dsu7d9qvm.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_dsu7d9qvm.b[2][0]++;cov_dsu7d9qvm.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[2][1]++;}\n  //can create my planet since all test pass\n  let planet = /* istanbul ignore next */(cov_dsu7d9qvm.s[25]++, new Planet(request.body.name, request.body.content)); /* istanbul ignore next */cov_dsu7d9qvm.s[26]++;\n  planets.push(planet); /* istanbul ignore next */cov_dsu7d9qvm.s[27]++;\n  sendJSON(response, 200, planet);\n}","timestamp":"2017-12-07T17:05:19.389Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T17:05:19.389Z"}
{"level":"info","message":"/api/planet","timestamp":"2017-12-07T17:05:19.389Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.url.query.id');\n    // sendStatus(response, 200, planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;sendJSON(response, 200, planets); /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[33]++;\n  if (!planets.includes(request.body.id)) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[34]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[35]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[36]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[37]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;sendJSON(response, 200, planets[request.body.id]); /* istanbul ignore next */cov_dsu7d9qvm.s[39]++;\n    return;\n  }\n}","timestamp":"2017-12-07T17:05:19.389Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T17:05:19.429Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T17:05:19.485Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T17:05:19.486Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[2]++;cov_dsu7d9qvm.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_dsu7d9qvm.b[0][0]++;cov_dsu7d9qvm.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[0][1]++;}cov_dsu7d9qvm.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_dsu7d9qvm.b[1][0]++;cov_dsu7d9qvm.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[1][1]++;}cov_dsu7d9qvm.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_dsu7d9qvm.b[2][0]++;cov_dsu7d9qvm.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[2][1]++;}\n  //can create my planet since all test pass\n  let planet = /* istanbul ignore next */(cov_dsu7d9qvm.s[25]++, new Planet(request.body.name, request.body.content)); /* istanbul ignore next */cov_dsu7d9qvm.s[26]++;\n  planets.push(planet); /* istanbul ignore next */cov_dsu7d9qvm.s[27]++;\n  sendJSON(response, 200, planet);\n}","timestamp":"2017-12-07T17:05:19.486Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T17:05:19.487Z"}
{"id":"cddf40f0-db70-11e7-b349-c5a8171a716d","discoverDate":"2017-05-06T16:45:24.905Z","name":"BD032562b","content":"11h50m1555sDeclination02d45m365s","level":"info","message":"","timestamp":"2017-12-07T17:05:19.487Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T17:05:19.496Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T17:05:19.497Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.url.query.id');\n    // sendStatus(response, 200, planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;sendJSON(response, 200, planets); /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[33]++;\n  if (!planets.includes(request.body.id)) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[34]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[35]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[36]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[37]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;sendJSON(response, 200, planets[request.body.id]); /* istanbul ignore next */cov_dsu7d9qvm.s[39]++;\n    return;\n  }\n}","timestamp":"2017-12-07T17:05:19.497Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T17:05:19.497Z"}
[{"id":"cddf40f0-db70-11e7-b349-c5a8171a716d","discoverDate":"2017-05-06T16:45:24.905Z","name":"BD032562b","content":"11h50m1555sDeclination02d45m365s"}]
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T17:30:08.841Z"}
{"level":"info","message":"/api/planet","timestamp":"2017-12-07T17:30:08.841Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[2]++;cov_dsu7d9qvm.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_dsu7d9qvm.b[0][0]++;cov_dsu7d9qvm.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[0][1]++;}cov_dsu7d9qvm.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_dsu7d9qvm.b[1][0]++;cov_dsu7d9qvm.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[1][1]++;}cov_dsu7d9qvm.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_dsu7d9qvm.b[2][0]++;cov_dsu7d9qvm.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[2][1]++;}\n  //can create my planet since all test pass\n  let planet = /* istanbul ignore next */(cov_dsu7d9qvm.s[25]++, new Planet(request.body.name, request.body.content)); /* istanbul ignore next */cov_dsu7d9qvm.s[26]++;\n  planets.push(planet); /* istanbul ignore next */cov_dsu7d9qvm.s[27]++;\n  sendJSON(response, 200, planet);\n}","timestamp":"2017-12-07T17:30:08.841Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T17:30:08.842Z"}
{"level":"info","message":"/api/planet","timestamp":"2017-12-07T17:30:08.842Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.url.query.id');\n    // sendStatus(response, 200, planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;sendJSON(response, 200, planets); /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[33]++;\n  if (!planets.includes(request.body.id)) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[34]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[35]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[36]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[37]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;sendJSON(response, 200, planets[request.body.id]); /* istanbul ignore next */cov_dsu7d9qvm.s[39]++;\n    return;\n  }\n}","timestamp":"2017-12-07T17:30:08.842Z"}
{"level":"error","message":"__SERVER_ERROR__ PORT variable is not configured","timestamp":"2017-12-07T17:30:08.899Z"}
{"level":"error","message":"__SERVER_ERROR__ server is already off","timestamp":"2017-12-07T17:30:08.972Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T17:32:52.767Z"}
{"level":"info","message":"/api/planet","timestamp":"2017-12-07T17:32:52.768Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[2]++;cov_dsu7d9qvm.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_dsu7d9qvm.b[0][0]++;cov_dsu7d9qvm.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[0][1]++;}cov_dsu7d9qvm.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_dsu7d9qvm.b[1][0]++;cov_dsu7d9qvm.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[1][1]++;}cov_dsu7d9qvm.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_dsu7d9qvm.b[2][0]++;cov_dsu7d9qvm.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[2][1]++;}\n  //can create my planet since all test pass\n  let planet = /* istanbul ignore next */(cov_dsu7d9qvm.s[25]++, new Planet(request.body.name, request.body.content)); /* istanbul ignore next */cov_dsu7d9qvm.s[26]++;\n  planets.push(planet); /* istanbul ignore next */cov_dsu7d9qvm.s[27]++;\n  sendJSON(response, 200, planet);\n}","timestamp":"2017-12-07T17:32:52.768Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T17:32:52.768Z"}
{"level":"info","message":"/api/planet","timestamp":"2017-12-07T17:32:52.768Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.url.query.id');\n    // sendStatus(response, 200, planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;sendJSON(response, 200, planets); /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[33]++;\n  if (!planets.includes(request.body.id)) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[34]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[35]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[36]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[37]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;sendJSON(response, 200, planets[request.body.id]); /* istanbul ignore next */cov_dsu7d9qvm.s[39]++;\n    return;\n  }\n}","timestamp":"2017-12-07T17:32:52.768Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T17:32:52.813Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T17:32:52.869Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T17:32:52.870Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[2]++;cov_dsu7d9qvm.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_dsu7d9qvm.b[0][0]++;cov_dsu7d9qvm.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[0][1]++;}cov_dsu7d9qvm.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_dsu7d9qvm.b[1][0]++;cov_dsu7d9qvm.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[1][1]++;}cov_dsu7d9qvm.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_dsu7d9qvm.b[2][0]++;cov_dsu7d9qvm.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[2][1]++;}\n  //can create my planet since all test pass\n  let planet = /* istanbul ignore next */(cov_dsu7d9qvm.s[25]++, new Planet(request.body.name, request.body.content)); /* istanbul ignore next */cov_dsu7d9qvm.s[26]++;\n  planets.push(planet); /* istanbul ignore next */cov_dsu7d9qvm.s[27]++;\n  sendJSON(response, 200, planet);\n}","timestamp":"2017-12-07T17:32:52.870Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T17:32:52.871Z"}
{"id":"a75da170-db74-11e7-8390-0109b9dc5ae6","discoverDate":"2017-03-24T13:55:18.200Z","name":"BD032562b","content":"11h50m1555sDeclination02d45m365s","level":"info","message":"","timestamp":"2017-12-07T17:32:52.871Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T17:32:52.880Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T17:32:52.880Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.url.query.id');\n    // sendStatus(response, 200, planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;sendJSON(response, 200, planets); /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[33]++;\n  if (!planets.includes(request.body.id)) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[34]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[35]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[36]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[37]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;sendJSON(response, 200, planets[request.body.id]); /* istanbul ignore next */cov_dsu7d9qvm.s[39]++;\n    return;\n  }\n}","timestamp":"2017-12-07T17:32:52.880Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T17:32:52.881Z"}
[{"id":"a75da170-db74-11e7-8390-0109b9dc5ae6","discoverDate":"2017-03-24T13:55:18.200Z","name":"BD032562b","content":"11h50m1555sDeclination02d45m365s"}]
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T17:34:48.023Z"}
{"level":"info","message":"/api/planet","timestamp":"2017-12-07T17:34:48.024Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[2]++;cov_dsu7d9qvm.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_dsu7d9qvm.b[0][0]++;cov_dsu7d9qvm.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[0][1]++;}cov_dsu7d9qvm.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_dsu7d9qvm.b[1][0]++;cov_dsu7d9qvm.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[1][1]++;}cov_dsu7d9qvm.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_dsu7d9qvm.b[2][0]++;cov_dsu7d9qvm.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[2][1]++;}\n  //can create my planet since all test pass\n  let planet = /* istanbul ignore next */(cov_dsu7d9qvm.s[25]++, new Planet(request.body.name, request.body.content)); /* istanbul ignore next */cov_dsu7d9qvm.s[26]++;\n  planets.push(planet); /* istanbul ignore next */cov_dsu7d9qvm.s[27]++;\n  sendJSON(response, 200, planet);\n}","timestamp":"2017-12-07T17:34:48.024Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T17:34:48.024Z"}
{"level":"info","message":"/api/planet","timestamp":"2017-12-07T17:34:48.024Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.url.query.id');\n    // sendStatus(response, 200, planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;sendJSON(response, 200, [planets]); /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[33]++;\n  if (!planets.includes(request.body.id)) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[34]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[35]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[36]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[37]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;sendJSON(response, 200, planets[request.body.id]); /* istanbul ignore next */cov_dsu7d9qvm.s[39]++;\n    return;\n  }\n}","timestamp":"2017-12-07T17:34:48.024Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T17:34:48.094Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T17:34:48.175Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T17:34:48.179Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[2]++;cov_dsu7d9qvm.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_dsu7d9qvm.b[0][0]++;cov_dsu7d9qvm.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[0][1]++;}cov_dsu7d9qvm.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_dsu7d9qvm.b[1][0]++;cov_dsu7d9qvm.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[1][1]++;}cov_dsu7d9qvm.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_dsu7d9qvm.b[2][0]++;cov_dsu7d9qvm.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[2][1]++;}\n  //can create my planet since all test pass\n  let planet = /* istanbul ignore next */(cov_dsu7d9qvm.s[25]++, new Planet(request.body.name, request.body.content)); /* istanbul ignore next */cov_dsu7d9qvm.s[26]++;\n  planets.push(planet); /* istanbul ignore next */cov_dsu7d9qvm.s[27]++;\n  sendJSON(response, 200, planet);\n}","timestamp":"2017-12-07T17:34:48.179Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T17:34:48.180Z"}
{"id":"ec183c30-db74-11e7-ab01-33b6e3d8ff3f","discoverDate":"2017-07-07T20:28:56.184Z","name":"BD032562b","content":"11h50m1555sDeclination02d45m365s","level":"info","message":"","timestamp":"2017-12-07T17:34:48.180Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T17:34:48.191Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T17:34:48.193Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.url.query.id');\n    // sendStatus(response, 200, planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;sendJSON(response, 200, [planets]); /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[33]++;\n  if (!planets.includes(request.body.id)) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[34]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[35]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[36]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[37]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;sendJSON(response, 200, planets[request.body.id]); /* istanbul ignore next */cov_dsu7d9qvm.s[39]++;\n    return;\n  }\n}","timestamp":"2017-12-07T17:34:48.193Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T17:34:48.194Z"}
[[{"id":"ec183c30-db74-11e7-ab01-33b6e3d8ff3f","discoverDate":"2017-07-07T20:28:56.184Z","name":"BD032562b","content":"11h50m1555sDeclination02d45m365s"}]]
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T17:38:04.975Z"}
{"level":"info","message":"/api/planet","timestamp":"2017-12-07T17:38:04.977Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[2]++;cov_dsu7d9qvm.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_dsu7d9qvm.b[0][0]++;cov_dsu7d9qvm.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[0][1]++;}cov_dsu7d9qvm.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_dsu7d9qvm.b[1][0]++;cov_dsu7d9qvm.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[1][1]++;}cov_dsu7d9qvm.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_dsu7d9qvm.b[2][0]++;cov_dsu7d9qvm.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[2][1]++;}\n  //can create my planet since all test pass\n  let planet = /* istanbul ignore next */(cov_dsu7d9qvm.s[25]++, new Planet(request.body.name, request.body.content)); /* istanbul ignore next */cov_dsu7d9qvm.s[26]++;\n  planets.push(planet); /* istanbul ignore next */cov_dsu7d9qvm.s[27]++;\n  sendJSON(response, 200, planet);\n}","timestamp":"2017-12-07T17:38:04.977Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T17:38:04.977Z"}
{"level":"info","message":"/api/planet","timestamp":"2017-12-07T17:38:04.977Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.url.query.id');\n    // sendStatus(response, 200, planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;sendJSON(response, 200, planets); /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[33]++;\n  if (!planets.includes(request.body.id)) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[34]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[35]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[36]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[37]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;sendJSON(response, 200, planets[request.body.id]); /* istanbul ignore next */cov_dsu7d9qvm.s[39]++;\n    return;\n  }\n}","timestamp":"2017-12-07T17:38:04.977Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T17:38:05.039Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T17:38:05.119Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T17:38:05.122Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[2]++;cov_dsu7d9qvm.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_dsu7d9qvm.b[0][0]++;cov_dsu7d9qvm.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[0][1]++;}cov_dsu7d9qvm.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_dsu7d9qvm.b[1][0]++;cov_dsu7d9qvm.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[1][1]++;}cov_dsu7d9qvm.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_dsu7d9qvm.b[2][0]++;cov_dsu7d9qvm.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[2][1]++;}\n  //can create my planet since all test pass\n  let planet = /* istanbul ignore next */(cov_dsu7d9qvm.s[25]++, new Planet(request.body.name, request.body.content)); /* istanbul ignore next */cov_dsu7d9qvm.s[26]++;\n  planets.push(planet); /* istanbul ignore next */cov_dsu7d9qvm.s[27]++;\n  sendJSON(response, 200, planet);\n}","timestamp":"2017-12-07T17:38:05.122Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T17:38:05.123Z"}
{"id":"617b5a20-db75-11e7-8eee-3d4d8e349adb","discoverDate":"2017-07-08T22:52:53.414Z","name":"BD032562b","content":"11h50m1555sDeclination02d45m365s","level":"info","message":"","timestamp":"2017-12-07T17:38:05.123Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T17:38:05.137Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T17:38:05.137Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.url.query.id');\n    // sendStatus(response, 200, planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;sendJSON(response, 200, planets); /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[33]++;\n  if (!planets.includes(request.body.id)) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[34]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[35]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[36]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[37]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;sendJSON(response, 200, planets[request.body.id]); /* istanbul ignore next */cov_dsu7d9qvm.s[39]++;\n    return;\n  }\n}","timestamp":"2017-12-07T17:38:05.138Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T17:38:05.138Z"}
[{"id":"617b5a20-db75-11e7-8eee-3d4d8e349adb","discoverDate":"2017-07-08T22:52:53.414Z","name":"BD032562b","content":"11h50m1555sDeclination02d45m365s"}]
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T17:40:47.806Z"}
{"level":"info","message":"/api/planet","timestamp":"2017-12-07T17:40:47.806Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[2]++;cov_dsu7d9qvm.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_dsu7d9qvm.b[0][0]++;cov_dsu7d9qvm.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[0][1]++;}cov_dsu7d9qvm.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_dsu7d9qvm.b[1][0]++;cov_dsu7d9qvm.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[1][1]++;}cov_dsu7d9qvm.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_dsu7d9qvm.b[2][0]++;cov_dsu7d9qvm.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[2][1]++;}\n  //can create my planet since all test pass\n  let planet = /* istanbul ignore next */(cov_dsu7d9qvm.s[25]++, new Planet(request.body.name, request.body.content)); /* istanbul ignore next */cov_dsu7d9qvm.s[26]++;\n  planets.push(planet); /* istanbul ignore next */cov_dsu7d9qvm.s[27]++;\n  sendJSON(response, 200, planet);\n}","timestamp":"2017-12-07T17:40:47.806Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T17:40:47.806Z"}
{"level":"info","message":"/api/planet","timestamp":"2017-12-07T17:40:47.806Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.url.query.id');\n    // sendStatus(response, 200, planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;sendJSON(response, 200, planets); /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[33]++;\n  if (!planets.includes(request.body.id)) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[34]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[35]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[36]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[37]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;sendJSON(response, 200, planets[request.body.id]); /* istanbul ignore next */cov_dsu7d9qvm.s[39]++;\n    return;\n  }\n}","timestamp":"2017-12-07T17:40:47.806Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T17:40:47.865Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T17:40:47.940Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T17:40:47.944Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[2]++;cov_dsu7d9qvm.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_dsu7d9qvm.b[0][0]++;cov_dsu7d9qvm.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[0][1]++;}cov_dsu7d9qvm.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_dsu7d9qvm.b[1][0]++;cov_dsu7d9qvm.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[1][1]++;}cov_dsu7d9qvm.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_dsu7d9qvm.b[2][0]++;cov_dsu7d9qvm.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[2][1]++;}\n  //can create my planet since all test pass\n  let planet = /* istanbul ignore next */(cov_dsu7d9qvm.s[25]++, new Planet(request.body.name, request.body.content)); /* istanbul ignore next */cov_dsu7d9qvm.s[26]++;\n  planets.push(planet); /* istanbul ignore next */cov_dsu7d9qvm.s[27]++;\n  sendJSON(response, 200, planet);\n}","timestamp":"2017-12-07T17:40:47.944Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T17:40:47.945Z"}
{"id":"c2882b90-db75-11e7-9018-8f80c22cfe13","discoverDate":"2017-08-14T06:17:58.646Z","name":"BD032562b","content":"11h50m1555sDeclination02d45m365s","level":"info","message":"","timestamp":"2017-12-07T17:40:47.945Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T17:40:47.956Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T17:40:47.957Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.url.query.id');\n    // sendStatus(response, 200, planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;sendJSON(response, 200, planets); /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[33]++;\n  if (!planets.includes(request.body.id)) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[34]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[35]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[36]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[37]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;sendJSON(response, 200, planets[request.body.id]); /* istanbul ignore next */cov_dsu7d9qvm.s[39]++;\n    return;\n  }\n}","timestamp":"2017-12-07T17:40:47.957Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T17:40:47.957Z"}
[{"id":"c2882b90-db75-11e7-9018-8f80c22cfe13","discoverDate":"2017-08-14T06:17:58.646Z","name":"BD032562b","content":"11h50m1555sDeclination02d45m365s"}]
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T17:41:39.720Z"}
{"level":"info","message":"/api/planet","timestamp":"2017-12-07T17:41:39.720Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[2]++;cov_dsu7d9qvm.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_dsu7d9qvm.b[0][0]++;cov_dsu7d9qvm.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[0][1]++;}cov_dsu7d9qvm.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_dsu7d9qvm.b[1][0]++;cov_dsu7d9qvm.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[1][1]++;}cov_dsu7d9qvm.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_dsu7d9qvm.b[2][0]++;cov_dsu7d9qvm.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[2][1]++;}\n  //can create my planet since all test pass\n  let planet = /* istanbul ignore next */(cov_dsu7d9qvm.s[25]++, new Planet(request.body.name, request.body.content)); /* istanbul ignore next */cov_dsu7d9qvm.s[26]++;\n  planets.push(planet); /* istanbul ignore next */cov_dsu7d9qvm.s[27]++;\n  sendJSON(response, 200, planet);\n}","timestamp":"2017-12-07T17:41:39.720Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T17:41:39.720Z"}
{"level":"info","message":"/api/planet","timestamp":"2017-12-07T17:41:39.720Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.url.query.id');\n    // sendStatus(response, 200, planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;sendJSON(response, 200, planets); /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[33]++;\n  if (!planets.includes(request.body.id)) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[34]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[35]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[36]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[37]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;sendJSON(response, 200, planets[request.body.id]); /* istanbul ignore next */cov_dsu7d9qvm.s[39]++;\n    return;\n  }\n}","timestamp":"2017-12-07T17:41:39.720Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T17:41:39.760Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T17:41:39.815Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T17:41:39.817Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[2]++;cov_dsu7d9qvm.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_dsu7d9qvm.b[0][0]++;cov_dsu7d9qvm.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[0][1]++;}cov_dsu7d9qvm.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_dsu7d9qvm.b[1][0]++;cov_dsu7d9qvm.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[1][1]++;}cov_dsu7d9qvm.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_dsu7d9qvm.b[2][0]++;cov_dsu7d9qvm.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[2][1]++;}\n  //can create my planet since all test pass\n  let planet = /* istanbul ignore next */(cov_dsu7d9qvm.s[25]++, new Planet(request.body.name, request.body.content)); /* istanbul ignore next */cov_dsu7d9qvm.s[26]++;\n  planets.push(planet); /* istanbul ignore next */cov_dsu7d9qvm.s[27]++;\n  sendJSON(response, 200, planet);\n}","timestamp":"2017-12-07T17:41:39.817Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T17:41:39.817Z"}
{"id":"e1733590-db75-11e7-a126-a7f3e7c0e54f","discoverDate":"2017-05-09T03:33:47.404Z","name":"BD032562b","content":"11h50m1555sDeclination02d45m365s","level":"info","message":"","timestamp":"2017-12-07T17:41:39.817Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T17:41:39.826Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T17:41:39.826Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.url.query.id');\n    // sendStatus(response, 200, planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;sendJSON(response, 200, planets); /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[33]++;\n  if (!planets.includes(request.body.id)) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[34]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[35]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[36]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[37]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;sendJSON(response, 200, planets[request.body.id]); /* istanbul ignore next */cov_dsu7d9qvm.s[39]++;\n    return;\n  }\n}","timestamp":"2017-12-07T17:41:39.826Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T17:41:39.827Z"}
[{"id":"e1733590-db75-11e7-a126-a7f3e7c0e54f","discoverDate":"2017-05-09T03:33:47.404Z","name":"BD032562b","content":"11h50m1555sDeclination02d45m365s"}]
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T17:42:42.748Z"}
{"level":"info","message":"/api/planet","timestamp":"2017-12-07T17:42:42.749Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[2]++;cov_dsu7d9qvm.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_dsu7d9qvm.b[0][0]++;cov_dsu7d9qvm.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[0][1]++;}cov_dsu7d9qvm.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_dsu7d9qvm.b[1][0]++;cov_dsu7d9qvm.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[1][1]++;}cov_dsu7d9qvm.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_dsu7d9qvm.b[2][0]++;cov_dsu7d9qvm.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[2][1]++;}\n  //can create my planet since all test pass\n  let planet = /* istanbul ignore next */(cov_dsu7d9qvm.s[25]++, new Planet(request.body.name, request.body.content)); /* istanbul ignore next */cov_dsu7d9qvm.s[26]++;\n  planets.push(planet); /* istanbul ignore next */cov_dsu7d9qvm.s[27]++;\n  sendJSON(response, 200, planet);\n}","timestamp":"2017-12-07T17:42:42.749Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T17:42:42.749Z"}
{"level":"info","message":"/api/planet","timestamp":"2017-12-07T17:42:42.749Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.url.query.id');\n    // sendStatus(response, 200, planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;console.log(planets); /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;\n    sendJSON(response, 200, planets); /* istanbul ignore next */cov_dsu7d9qvm.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[34]++;\n  if (!planets.includes(request.body.id)) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[35]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[36]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[37]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[38]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[39]++;sendJSON(response, 200, planets[request.body.id]); /* istanbul ignore next */cov_dsu7d9qvm.s[40]++;\n    return;\n  }\n}","timestamp":"2017-12-07T17:42:42.749Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T17:42:42.790Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T17:42:42.845Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T17:42:42.846Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[2]++;cov_dsu7d9qvm.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_dsu7d9qvm.b[0][0]++;cov_dsu7d9qvm.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[0][1]++;}cov_dsu7d9qvm.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_dsu7d9qvm.b[1][0]++;cov_dsu7d9qvm.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[1][1]++;}cov_dsu7d9qvm.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_dsu7d9qvm.b[2][0]++;cov_dsu7d9qvm.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[2][1]++;}\n  //can create my planet since all test pass\n  let planet = /* istanbul ignore next */(cov_dsu7d9qvm.s[25]++, new Planet(request.body.name, request.body.content)); /* istanbul ignore next */cov_dsu7d9qvm.s[26]++;\n  planets.push(planet); /* istanbul ignore next */cov_dsu7d9qvm.s[27]++;\n  sendJSON(response, 200, planet);\n}","timestamp":"2017-12-07T17:42:42.846Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T17:42:42.847Z"}
{"id":"0704d2f0-db76-11e7-b27c-8f2fe573ec4f","discoverDate":"2017-09-13T03:34:30.222Z","name":"BD032562b","content":"11h50m1555sDeclination02d45m365s","level":"info","message":"","timestamp":"2017-12-07T17:42:42.847Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T17:42:42.856Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T17:42:42.856Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.url.query.id');\n    // sendStatus(response, 200, planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;console.log(planets); /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;\n    sendJSON(response, 200, planets); /* istanbul ignore next */cov_dsu7d9qvm.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[34]++;\n  if (!planets.includes(request.body.id)) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[35]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[36]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[37]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[38]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[39]++;sendJSON(response, 200, planets[request.body.id]); /* istanbul ignore next */cov_dsu7d9qvm.s[40]++;\n    return;\n  }\n}","timestamp":"2017-12-07T17:42:42.856Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T17:42:42.858Z"}
[{"id":"0704d2f0-db76-11e7-b27c-8f2fe573ec4f","discoverDate":"2017-09-13T03:34:30.222Z","name":"BD032562b","content":"11h50m1555sDeclination02d45m365s"}]
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T17:44:01.213Z"}
{"level":"info","message":"/api/planet","timestamp":"2017-12-07T17:44:01.213Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[2]++;cov_dsu7d9qvm.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_dsu7d9qvm.b[0][0]++;cov_dsu7d9qvm.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[0][1]++;}cov_dsu7d9qvm.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_dsu7d9qvm.b[1][0]++;cov_dsu7d9qvm.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[1][1]++;}cov_dsu7d9qvm.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_dsu7d9qvm.b[2][0]++;cov_dsu7d9qvm.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[2][1]++;}\n  //can create my planet since all test pass\n  let planet = /* istanbul ignore next */(cov_dsu7d9qvm.s[25]++, new Planet(request.body.name, request.body.content)); /* istanbul ignore next */cov_dsu7d9qvm.s[26]++;\n  planets.push(planet); /* istanbul ignore next */cov_dsu7d9qvm.s[27]++;\n  sendJSON(response, 200, planet);\n}","timestamp":"2017-12-07T17:44:01.213Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T17:44:01.213Z"}
{"level":"info","message":"/api/planet","timestamp":"2017-12-07T17:44:01.213Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.url.query.id');\n    // sendStatus(response, 200, planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;console.log(planets); /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;\n    sendJSON(response, 200, planets); /* istanbul ignore next */cov_dsu7d9qvm.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[34]++;\n  if (!planets.includes(request.url.query.id)) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[35]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[36]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[37]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[38]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[39]++;sendJSON(response, 200, planets[request.url.query.id]); /* istanbul ignore next */cov_dsu7d9qvm.s[40]++;\n    return;\n  }\n}","timestamp":"2017-12-07T17:44:01.213Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T17:44:01.260Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T17:44:01.317Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T17:44:01.318Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[2]++;cov_dsu7d9qvm.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_dsu7d9qvm.b[0][0]++;cov_dsu7d9qvm.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[0][1]++;}cov_dsu7d9qvm.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_dsu7d9qvm.b[1][0]++;cov_dsu7d9qvm.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[1][1]++;}cov_dsu7d9qvm.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_dsu7d9qvm.b[2][0]++;cov_dsu7d9qvm.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[2][1]++;}\n  //can create my planet since all test pass\n  let planet = /* istanbul ignore next */(cov_dsu7d9qvm.s[25]++, new Planet(request.body.name, request.body.content)); /* istanbul ignore next */cov_dsu7d9qvm.s[26]++;\n  planets.push(planet); /* istanbul ignore next */cov_dsu7d9qvm.s[27]++;\n  sendJSON(response, 200, planet);\n}","timestamp":"2017-12-07T17:44:01.318Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T17:44:01.319Z"}
{"id":"35ca8c60-db76-11e7-b968-4b1fcede7e8e","discoverDate":"2017-04-05T19:05:49.457Z","name":"BD032562b","content":"11h50m1555sDeclination02d45m365s","level":"info","message":"","timestamp":"2017-12-07T17:44:01.319Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T17:44:01.328Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T17:44:01.328Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.url.query.id');\n    // sendStatus(response, 200, planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;console.log(planets); /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;\n    sendJSON(response, 200, planets); /* istanbul ignore next */cov_dsu7d9qvm.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[34]++;\n  if (!planets.includes(request.url.query.id)) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[35]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[36]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[37]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[38]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[39]++;sendJSON(response, 200, planets[request.url.query.id]); /* istanbul ignore next */cov_dsu7d9qvm.s[40]++;\n    return;\n  }\n}","timestamp":"2017-12-07T17:44:01.328Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T17:44:01.330Z"}
[{"id":"35ca8c60-db76-11e7-b968-4b1fcede7e8e","discoverDate":"2017-04-05T19:05:49.457Z","name":"BD032562b","content":"11h50m1555sDeclination02d45m365s"}]
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T18:13:11.972Z"}
{"level":"info","message":"/api/planet","timestamp":"2017-12-07T18:13:11.972Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[2]++;cov_dsu7d9qvm.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_dsu7d9qvm.b[0][0]++;cov_dsu7d9qvm.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[0][1]++;}cov_dsu7d9qvm.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_dsu7d9qvm.b[1][0]++;cov_dsu7d9qvm.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[1][1]++;}cov_dsu7d9qvm.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_dsu7d9qvm.b[2][0]++;cov_dsu7d9qvm.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[2][1]++;}\n  //can create my planet since all test pass\n  let planet = /* istanbul ignore next */(cov_dsu7d9qvm.s[25]++, new Planet(request.body.name, request.body.content)); /* istanbul ignore next */cov_dsu7d9qvm.s[26]++;\n  planets.push(planet); /* istanbul ignore next */cov_dsu7d9qvm.s[27]++;\n  sendJSON(response, 200, planet);\n}","timestamp":"2017-12-07T18:13:11.972Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T18:13:11.972Z"}
{"level":"info","message":"/api/planet","timestamp":"2017-12-07T18:13:11.972Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.url.query.id');\n    // sendStatus(response, 200, planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;console.log(planets); /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;\n    sendJSON(response, 200, planets); /* istanbul ignore next */cov_dsu7d9qvm.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[34]++;\n  if (!planets['id'].includes(request.url.query.id)) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[35]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[36]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[37]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[38]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[39]++;sendJSON(response, 200, planets[request.url.query.id]); /* istanbul ignore next */cov_dsu7d9qvm.s[40]++;\n    return;\n  }\n}","timestamp":"2017-12-07T18:13:11.972Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T18:13:12.015Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T18:13:12.074Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T18:13:12.076Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[2]++;cov_dsu7d9qvm.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_dsu7d9qvm.b[0][0]++;cov_dsu7d9qvm.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[0][1]++;}cov_dsu7d9qvm.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_dsu7d9qvm.b[1][0]++;cov_dsu7d9qvm.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[1][1]++;}cov_dsu7d9qvm.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_dsu7d9qvm.b[2][0]++;cov_dsu7d9qvm.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[2][1]++;}\n  //can create my planet since all test pass\n  let planet = /* istanbul ignore next */(cov_dsu7d9qvm.s[25]++, new Planet(request.body.name, request.body.content)); /* istanbul ignore next */cov_dsu7d9qvm.s[26]++;\n  planets.push(planet); /* istanbul ignore next */cov_dsu7d9qvm.s[27]++;\n  sendJSON(response, 200, planet);\n}","timestamp":"2017-12-07T18:13:12.076Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T18:13:12.077Z"}
{"id":"495304c0-db7a-11e7-b20e-4f1565fe8123","discoverDate":"2017-03-04T02:38:32.872Z","name":"BD032562b","content":"11h50m1555sDeclination02d45m365s","level":"info","message":"","timestamp":"2017-12-07T18:13:12.077Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T18:13:12.085Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T18:13:12.085Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.url.query.id');\n    // sendStatus(response, 200, planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;console.log(planets); /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;\n    sendJSON(response, 200, planets); /* istanbul ignore next */cov_dsu7d9qvm.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[34]++;\n  if (!planets['id'].includes(request.url.query.id)) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[35]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[36]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[37]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[38]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[39]++;sendJSON(response, 200, planets[request.url.query.id]); /* istanbul ignore next */cov_dsu7d9qvm.s[40]++;\n    return;\n  }\n}","timestamp":"2017-12-07T18:13:12.085Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T18:13:12.087Z"}
[{"id":"495304c0-db7a-11e7-b20e-4f1565fe8123","discoverDate":"2017-03-04T02:38:32.872Z","name":"BD032562b","content":"11h50m1555sDeclination02d45m365s"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T18:13:12.090Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T18:13:12.091Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.url.query.id');\n    // sendStatus(response, 200, planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;console.log(planets); /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;\n    sendJSON(response, 200, planets); /* istanbul ignore next */cov_dsu7d9qvm.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[34]++;\n  if (!planets['id'].includes(request.url.query.id)) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[35]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[36]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[37]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[38]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[39]++;sendJSON(response, 200, planets[request.url.query.id]); /* istanbul ignore next */cov_dsu7d9qvm.s[40]++;\n    return;\n  }\n}","timestamp":"2017-12-07T18:13:12.091Z"}
{"level":"info","message":"__REQUEST_ERROR","timestamp":"2017-12-07T18:13:12.091Z"}
{"message":"Cannot read property 'includes' of undefined","stack":"TypeError: Cannot read property 'includes' of undefined\n    at Object.<anonymous>.router.get (/home/seth/codefellows/401/lab/08-09-vanilla-rest-server/lab-seth/route/planet-router.js:64:22)\n    at requestParser.parse.then.request (/home/seth/codefellows/401/lab/08-09-vanilla-rest-server/lab-seth/lib/router.js:54:89)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T18:13:12.091Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T18:13:40.037Z"}
{"level":"info","message":"/api/planet","timestamp":"2017-12-07T18:13:40.038Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[2]++;cov_dsu7d9qvm.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_dsu7d9qvm.b[0][0]++;cov_dsu7d9qvm.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[0][1]++;}cov_dsu7d9qvm.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_dsu7d9qvm.b[1][0]++;cov_dsu7d9qvm.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[1][1]++;}cov_dsu7d9qvm.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_dsu7d9qvm.b[2][0]++;cov_dsu7d9qvm.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[2][1]++;}\n  //can create my planet since all test pass\n  let planet = /* istanbul ignore next */(cov_dsu7d9qvm.s[25]++, new Planet(request.body.name, request.body.content)); /* istanbul ignore next */cov_dsu7d9qvm.s[26]++;\n  planets.push(planet); /* istanbul ignore next */cov_dsu7d9qvm.s[27]++;\n  sendJSON(response, 200, planet);\n}","timestamp":"2017-12-07T18:13:40.038Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T18:13:40.038Z"}
{"level":"info","message":"/api/planet","timestamp":"2017-12-07T18:13:40.038Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.url.query.id');\n    // sendStatus(response, 200, planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;console.log(planets); /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;\n    sendJSON(response, 200, planets); /* istanbul ignore next */cov_dsu7d9qvm.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[34]++;\n  if (!planets['id'].includes(request.url.query.id)) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[35]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[36]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[37]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[38]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[39]++;sendJSON(response, 200, planets[request.url.query.id]); /* istanbul ignore next */cov_dsu7d9qvm.s[40]++;\n    return;\n  }\n}","timestamp":"2017-12-07T18:13:40.038Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T18:13:40.079Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T18:13:40.136Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T18:13:40.137Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[2]++;cov_dsu7d9qvm.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_dsu7d9qvm.b[0][0]++;cov_dsu7d9qvm.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[0][1]++;}cov_dsu7d9qvm.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_dsu7d9qvm.b[1][0]++;cov_dsu7d9qvm.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[1][1]++;}cov_dsu7d9qvm.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_dsu7d9qvm.b[2][0]++;cov_dsu7d9qvm.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[2][1]++;}\n  //can create my planet since all test pass\n  let planet = /* istanbul ignore next */(cov_dsu7d9qvm.s[25]++, new Planet(request.body.name, request.body.content)); /* istanbul ignore next */cov_dsu7d9qvm.s[26]++;\n  planets.push(planet); /* istanbul ignore next */cov_dsu7d9qvm.s[27]++;\n  sendJSON(response, 200, planet);\n}","timestamp":"2017-12-07T18:13:40.137Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T18:13:40.138Z"}
{"id":"5a0cc990-db7a-11e7-ae9f-b99083f43e54","discoverDate":"2017-09-09T00:52:33.098Z","name":"BD032562b","content":"11h50m1555sDeclination02d45m365s","level":"info","message":"","timestamp":"2017-12-07T18:13:40.138Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T18:13:40.147Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T18:13:40.147Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.url.query.id');\n    // sendStatus(response, 200, planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;console.log(planets); /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;\n    sendJSON(response, 200, planets); /* istanbul ignore next */cov_dsu7d9qvm.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[34]++;\n  if (!planets['id'].includes(request.url.query.id)) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[35]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[36]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[37]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[38]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[39]++;sendJSON(response, 200, planets[request.url.query.id]); /* istanbul ignore next */cov_dsu7d9qvm.s[40]++;\n    return;\n  }\n}","timestamp":"2017-12-07T18:13:40.147Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T18:13:40.150Z"}
[{"id":"5a0cc990-db7a-11e7-ae9f-b99083f43e54","discoverDate":"2017-09-09T00:52:33.098Z","name":"BD032562b","content":"11h50m1555sDeclination02d45m365s"}]
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T18:13:48.148Z"}
{"level":"info","message":"/api/planet","timestamp":"2017-12-07T18:13:48.150Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[2]++;cov_dsu7d9qvm.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_dsu7d9qvm.b[0][0]++;cov_dsu7d9qvm.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[0][1]++;}cov_dsu7d9qvm.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_dsu7d9qvm.b[1][0]++;cov_dsu7d9qvm.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[1][1]++;}cov_dsu7d9qvm.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_dsu7d9qvm.b[2][0]++;cov_dsu7d9qvm.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[2][1]++;}\n  //can create my planet since all test pass\n  let planet = /* istanbul ignore next */(cov_dsu7d9qvm.s[25]++, new Planet(request.body.name, request.body.content)); /* istanbul ignore next */cov_dsu7d9qvm.s[26]++;\n  planets.push(planet); /* istanbul ignore next */cov_dsu7d9qvm.s[27]++;\n  sendJSON(response, 200, planet);\n}","timestamp":"2017-12-07T18:13:48.150Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T18:13:48.151Z"}
{"level":"info","message":"/api/planet","timestamp":"2017-12-07T18:13:48.151Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.url.query.id');\n    // sendStatus(response, 200, planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;console.log(planets); /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;\n    sendJSON(response, 200, planets); /* istanbul ignore next */cov_dsu7d9qvm.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[34]++;\n  if (!planets['id'].includes(request.url.query.id)) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[35]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[36]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[37]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[38]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[39]++;sendJSON(response, 200, planets[request.url.query.id]); /* istanbul ignore next */cov_dsu7d9qvm.s[40]++;\n    return;\n  }\n}","timestamp":"2017-12-07T18:13:48.151Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T18:13:48.211Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T18:13:48.287Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T18:13:48.290Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[2]++;cov_dsu7d9qvm.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_dsu7d9qvm.b[0][0]++;cov_dsu7d9qvm.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[0][1]++;}cov_dsu7d9qvm.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_dsu7d9qvm.b[1][0]++;cov_dsu7d9qvm.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[1][1]++;}cov_dsu7d9qvm.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_dsu7d9qvm.b[2][0]++;cov_dsu7d9qvm.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[2][1]++;}\n  //can create my planet since all test pass\n  let planet = /* istanbul ignore next */(cov_dsu7d9qvm.s[25]++, new Planet(request.body.name, request.body.content)); /* istanbul ignore next */cov_dsu7d9qvm.s[26]++;\n  planets.push(planet); /* istanbul ignore next */cov_dsu7d9qvm.s[27]++;\n  sendJSON(response, 200, planet);\n}","timestamp":"2017-12-07T18:13:48.290Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T18:13:48.292Z"}
{"id":"5ee8fd30-db7a-11e7-a172-696b914e2121","discoverDate":"2017-06-28T03:13:20.697Z","name":"BD032562b","content":"11h50m1555sDeclination02d45m365s","level":"info","message":"","timestamp":"2017-12-07T18:13:48.292Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T18:13:48.304Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T18:13:48.304Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.url.query.id');\n    // sendStatus(response, 200, planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;console.log(planets); /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;\n    sendJSON(response, 200, planets); /* istanbul ignore next */cov_dsu7d9qvm.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[34]++;\n  if (!planets['id'].includes(request.url.query.id)) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[35]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[36]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[37]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[38]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[39]++;sendJSON(response, 200, planets[request.url.query.id]); /* istanbul ignore next */cov_dsu7d9qvm.s[40]++;\n    return;\n  }\n}","timestamp":"2017-12-07T18:13:48.305Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T18:13:48.308Z"}
[{"id":"5ee8fd30-db7a-11e7-a172-696b914e2121","discoverDate":"2017-06-28T03:13:20.697Z","name":"BD032562b","content":"11h50m1555sDeclination02d45m365s"}]
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T19:34:05.156Z"}
{"level":"info","message":"/api/planet","timestamp":"2017-12-07T19:34:05.157Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[2]++;cov_dsu7d9qvm.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_dsu7d9qvm.b[0][0]++;cov_dsu7d9qvm.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[0][1]++;}cov_dsu7d9qvm.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_dsu7d9qvm.b[1][0]++;cov_dsu7d9qvm.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[1][1]++;}cov_dsu7d9qvm.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_dsu7d9qvm.b[2][0]++;cov_dsu7d9qvm.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[2][1]++;}\n  //can create my planet since all test pass\n  let planet = /* istanbul ignore next */(cov_dsu7d9qvm.s[25]++, new Planet(request.body.name, request.body.content)); /* istanbul ignore next */cov_dsu7d9qvm.s[26]++;\n  planets.push(planet); /* istanbul ignore next */cov_dsu7d9qvm.s[27]++;\n  sendJSON(response, 200, planet);\n}","timestamp":"2017-12-07T19:34:05.157Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T19:34:05.157Z"}
{"level":"info","message":"/api/planet","timestamp":"2017-12-07T19:34:05.157Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.url.query.id');\n    // sendStatus(response, 200, planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;console.log(planets); /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;\n    sendJSON(response, 200, planets); /* istanbul ignore next */cov_dsu7d9qvm.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[34]++;\n  if (!planets.find(id => {/* istanbul ignore next */cov_dsu7d9qvm.f[4]++;cov_dsu7d9qvm.s[35]++;return id === request.url.query.id;})) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[36]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[37]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[39]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[40]++;sendJSON(response, 200, planets[request.url.query.id]); /* istanbul ignore next */cov_dsu7d9qvm.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-07T19:34:05.157Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T19:34:05.199Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T19:34:05.255Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T19:34:05.256Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[2]++;cov_dsu7d9qvm.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_dsu7d9qvm.b[0][0]++;cov_dsu7d9qvm.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[0][1]++;}cov_dsu7d9qvm.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_dsu7d9qvm.b[1][0]++;cov_dsu7d9qvm.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[1][1]++;}cov_dsu7d9qvm.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_dsu7d9qvm.b[2][0]++;cov_dsu7d9qvm.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[2][1]++;}\n  //can create my planet since all test pass\n  let planet = /* istanbul ignore next */(cov_dsu7d9qvm.s[25]++, new Planet(request.body.name, request.body.content)); /* istanbul ignore next */cov_dsu7d9qvm.s[26]++;\n  planets.push(planet); /* istanbul ignore next */cov_dsu7d9qvm.s[27]++;\n  sendJSON(response, 200, planet);\n}","timestamp":"2017-12-07T19:34:05.256Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T19:34:05.257Z"}
{"id":"960b8480-db85-11e7-9013-47286ee539cd","discoverDate":"2017-02-20T22:35:44.565Z","name":"BD032562b","content":"11h50m1555sDeclination02d45m365s","level":"info","message":"","timestamp":"2017-12-07T19:34:05.257Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T19:34:05.265Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T19:34:05.265Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.url.query.id');\n    // sendStatus(response, 200, planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;console.log(planets); /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;\n    sendJSON(response, 200, planets); /* istanbul ignore next */cov_dsu7d9qvm.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[34]++;\n  if (!planets.find(id => {/* istanbul ignore next */cov_dsu7d9qvm.f[4]++;cov_dsu7d9qvm.s[35]++;return id === request.url.query.id;})) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[36]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[37]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[39]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[40]++;sendJSON(response, 200, planets[request.url.query.id]); /* istanbul ignore next */cov_dsu7d9qvm.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-07T19:34:05.265Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T19:34:05.267Z"}
[{"id":"960b8480-db85-11e7-9013-47286ee539cd","discoverDate":"2017-02-20T22:35:44.565Z","name":"BD032562b","content":"11h50m1555sDeclination02d45m365s"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T19:34:05.271Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T19:34:05.271Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.url.query.id');\n    // sendStatus(response, 200, planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;console.log(planets); /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;\n    sendJSON(response, 200, planets); /* istanbul ignore next */cov_dsu7d9qvm.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[34]++;\n  if (!planets.find(id => {/* istanbul ignore next */cov_dsu7d9qvm.f[4]++;cov_dsu7d9qvm.s[35]++;return id === request.url.query.id;})) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[36]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[37]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[39]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[40]++;sendJSON(response, 200, planets[request.url.query.id]); /* istanbul ignore next */cov_dsu7d9qvm.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-07T19:34:05.272Z"}
{"level":"info","message":"Responding with a 404 code due to Planet ID not found","timestamp":"2017-12-07T19:34:05.272Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T19:34:13.832Z"}
{"level":"info","message":"/api/planet","timestamp":"2017-12-07T19:34:13.832Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[2]++;cov_dsu7d9qvm.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_dsu7d9qvm.b[0][0]++;cov_dsu7d9qvm.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[0][1]++;}cov_dsu7d9qvm.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_dsu7d9qvm.b[1][0]++;cov_dsu7d9qvm.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[1][1]++;}cov_dsu7d9qvm.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_dsu7d9qvm.b[2][0]++;cov_dsu7d9qvm.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[2][1]++;}\n  //can create my planet since all test pass\n  let planet = /* istanbul ignore next */(cov_dsu7d9qvm.s[25]++, new Planet(request.body.name, request.body.content)); /* istanbul ignore next */cov_dsu7d9qvm.s[26]++;\n  planets.push(planet); /* istanbul ignore next */cov_dsu7d9qvm.s[27]++;\n  sendJSON(response, 200, planet);\n}","timestamp":"2017-12-07T19:34:13.832Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T19:34:13.832Z"}
{"level":"info","message":"/api/planet","timestamp":"2017-12-07T19:34:13.832Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.url.query.id');\n    // sendStatus(response, 200, planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;console.log(planets); /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;\n    sendJSON(response, 200, planets); /* istanbul ignore next */cov_dsu7d9qvm.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[34]++;\n  if (!planets.find(id => {/* istanbul ignore next */cov_dsu7d9qvm.f[4]++;cov_dsu7d9qvm.s[35]++;return id === request.url.query.id;})) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[36]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[37]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[39]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[40]++;sendJSON(response, 200, planets[request.url.query.id]); /* istanbul ignore next */cov_dsu7d9qvm.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-07T19:34:13.832Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T19:34:13.874Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T19:34:13.925Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T19:34:13.926Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[2]++;cov_dsu7d9qvm.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_dsu7d9qvm.b[0][0]++;cov_dsu7d9qvm.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[0][1]++;}cov_dsu7d9qvm.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_dsu7d9qvm.b[1][0]++;cov_dsu7d9qvm.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[1][1]++;}cov_dsu7d9qvm.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_dsu7d9qvm.b[2][0]++;cov_dsu7d9qvm.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[2][1]++;}\n  //can create my planet since all test pass\n  let planet = /* istanbul ignore next */(cov_dsu7d9qvm.s[25]++, new Planet(request.body.name, request.body.content)); /* istanbul ignore next */cov_dsu7d9qvm.s[26]++;\n  planets.push(planet); /* istanbul ignore next */cov_dsu7d9qvm.s[27]++;\n  sendJSON(response, 200, planet);\n}","timestamp":"2017-12-07T19:34:13.926Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T19:34:13.927Z"}
{"id":"9b369b70-db85-11e7-a639-09b531fc80dc","discoverDate":"2017-03-23T12:49:28.273Z","name":"BD032562b","content":"11h50m1555sDeclination02d45m365s","level":"info","message":"","timestamp":"2017-12-07T19:34:13.927Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T19:34:13.936Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T19:34:13.936Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.url.query.id');\n    // sendStatus(response, 200, planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;console.log(planets); /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;\n    sendJSON(response, 200, planets); /* istanbul ignore next */cov_dsu7d9qvm.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[34]++;\n  if (!planets.find(id => {/* istanbul ignore next */cov_dsu7d9qvm.f[4]++;cov_dsu7d9qvm.s[35]++;return id === request.url.query.id;})) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[36]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[37]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[39]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[40]++;sendJSON(response, 200, planets[request.url.query.id]); /* istanbul ignore next */cov_dsu7d9qvm.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-07T19:34:13.936Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T19:34:13.938Z"}
[{"id":"9b369b70-db85-11e7-a639-09b531fc80dc","discoverDate":"2017-03-23T12:49:28.273Z","name":"BD032562b","content":"11h50m1555sDeclination02d45m365s"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T19:34:13.941Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T19:34:13.942Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.url.query.id');\n    // sendStatus(response, 200, planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;console.log(planets); /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;\n    sendJSON(response, 200, planets); /* istanbul ignore next */cov_dsu7d9qvm.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[34]++;\n  if (!planets.find(id => {/* istanbul ignore next */cov_dsu7d9qvm.f[4]++;cov_dsu7d9qvm.s[35]++;return id === request.url.query.id;})) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[36]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[37]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[39]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[40]++;sendJSON(response, 200, planets[request.url.query.id]); /* istanbul ignore next */cov_dsu7d9qvm.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-07T19:34:13.942Z"}
{"level":"info","message":"Responding with a 404 code due to Planet ID not found","timestamp":"2017-12-07T19:34:13.942Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T19:38:41.103Z"}
{"level":"info","message":"/api/planet","timestamp":"2017-12-07T19:38:41.104Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[2]++;cov_dsu7d9qvm.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_dsu7d9qvm.b[0][0]++;cov_dsu7d9qvm.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[0][1]++;}cov_dsu7d9qvm.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_dsu7d9qvm.b[1][0]++;cov_dsu7d9qvm.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[1][1]++;}cov_dsu7d9qvm.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_dsu7d9qvm.b[2][0]++;cov_dsu7d9qvm.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[2][1]++;}\n  //can create my planet since all test pass\n  let planet = /* istanbul ignore next */(cov_dsu7d9qvm.s[25]++, new Planet(request.body.name, request.body.content)); /* istanbul ignore next */cov_dsu7d9qvm.s[26]++;\n  planets.push(planet); /* istanbul ignore next */cov_dsu7d9qvm.s[27]++;\n  sendJSON(response, 200, planet);\n}","timestamp":"2017-12-07T19:38:41.104Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T19:38:41.104Z"}
{"level":"info","message":"/api/planet","timestamp":"2017-12-07T19:38:41.104Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.url.query.id');\n    // sendStatus(response, 200, planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;console.log(planets); /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;\n    sendJSON(response, 200, planets); /* istanbul ignore next */cov_dsu7d9qvm.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[34]++;\n  if (!planets.find(id => {/* istanbul ignore next */cov_dsu7d9qvm.f[4]++;cov_dsu7d9qvm.s[35]++;return id === request.url.query.id;})) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[36]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[37]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[39]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[40]++;sendJSON(response, 200, planets[request.url.query.id]); /* istanbul ignore next */cov_dsu7d9qvm.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-07T19:38:41.104Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T19:38:41.144Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T19:38:41.202Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T19:38:41.203Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[2]++;cov_dsu7d9qvm.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_dsu7d9qvm.b[0][0]++;cov_dsu7d9qvm.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[0][1]++;}cov_dsu7d9qvm.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_dsu7d9qvm.b[1][0]++;cov_dsu7d9qvm.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[1][1]++;}cov_dsu7d9qvm.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_dsu7d9qvm.b[2][0]++;cov_dsu7d9qvm.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[2][1]++;}\n  //can create my planet since all test pass\n  let planet = /* istanbul ignore next */(cov_dsu7d9qvm.s[25]++, new Planet(request.body.name, request.body.content)); /* istanbul ignore next */cov_dsu7d9qvm.s[26]++;\n  planets.push(planet); /* istanbul ignore next */cov_dsu7d9qvm.s[27]++;\n  sendJSON(response, 200, planet);\n}","timestamp":"2017-12-07T19:38:41.203Z"}
{"level":"info","message":"Responding with a 400 code due to name not found","timestamp":"2017-12-07T19:38:41.203Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T19:38:41.210Z"}
{"level":"info","message":"__REQUEST_ERROR","timestamp":"2017-12-07T19:38:41.210Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/home/seth/codefellows/401/lab/08-09-vanilla-rest-server/lab-seth/lib/request-parser.js:29:31)\n    at emitNone (events.js:106:13)\n    at IncomingMessage.emit (events.js:208:7)\n    at endReadableNT (_stream_readable.js:1056:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-07T19:38:41.210Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T19:38:41.212Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T19:38:41.212Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.url.query.id');\n    // sendStatus(response, 200, planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;console.log(planets); /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;\n    sendJSON(response, 200, planets); /* istanbul ignore next */cov_dsu7d9qvm.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[34]++;\n  if (!planets.find(id => {/* istanbul ignore next */cov_dsu7d9qvm.f[4]++;cov_dsu7d9qvm.s[35]++;return id === request.url.query.id;})) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[36]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[37]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[39]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[40]++;sendJSON(response, 200, planets[request.url.query.id]); /* istanbul ignore next */cov_dsu7d9qvm.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-07T19:38:41.212Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T19:38:41.213Z"}
[]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T19:38:41.218Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T19:38:41.218Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.url.query.id');\n    // sendStatus(response, 200, planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;console.log(planets); /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;\n    sendJSON(response, 200, planets); /* istanbul ignore next */cov_dsu7d9qvm.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[34]++;\n  if (!planets.find(id => {/* istanbul ignore next */cov_dsu7d9qvm.f[4]++;cov_dsu7d9qvm.s[35]++;return id === request.url.query.id;})) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[36]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[37]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[39]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[40]++;sendJSON(response, 200, planets[request.url.query.id]); /* istanbul ignore next */cov_dsu7d9qvm.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-07T19:38:41.218Z"}
{"level":"info","message":"Responding with a 404 code due to Planet ID not found","timestamp":"2017-12-07T19:38:41.218Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T19:40:08.219Z"}
{"level":"info","message":"/api/planet","timestamp":"2017-12-07T19:40:08.220Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[2]++;cov_dsu7d9qvm.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_dsu7d9qvm.b[0][0]++;cov_dsu7d9qvm.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[0][1]++;}cov_dsu7d9qvm.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_dsu7d9qvm.b[1][0]++;cov_dsu7d9qvm.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[1][1]++;}cov_dsu7d9qvm.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_dsu7d9qvm.b[2][0]++;cov_dsu7d9qvm.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[2][1]++;}\n  //can create my planet since all test pass\n  let planet = /* istanbul ignore next */(cov_dsu7d9qvm.s[25]++, new Planet(request.body.name, request.body.content)); /* istanbul ignore next */cov_dsu7d9qvm.s[26]++;\n  planets.push(planet); /* istanbul ignore next */cov_dsu7d9qvm.s[27]++;\n  sendJSON(response, 200, planet);\n}","timestamp":"2017-12-07T19:40:08.220Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T19:40:08.220Z"}
{"level":"info","message":"/api/planet","timestamp":"2017-12-07T19:40:08.220Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.url.query.id');\n    // sendStatus(response, 200, planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;console.log(planets); /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;\n    sendJSON(response, 200, planets); /* istanbul ignore next */cov_dsu7d9qvm.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[34]++;\n  if (!planets.find(id => {/* istanbul ignore next */cov_dsu7d9qvm.f[4]++;cov_dsu7d9qvm.s[35]++;return id === request.url.query.id;})) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[36]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[37]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[39]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[40]++;sendJSON(response, 200, planets[request.url.query.id]); /* istanbul ignore next */cov_dsu7d9qvm.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-07T19:40:08.220Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T19:40:08.265Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T19:40:08.321Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T19:40:08.322Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[2]++;cov_dsu7d9qvm.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_dsu7d9qvm.b[0][0]++;cov_dsu7d9qvm.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[0][1]++;}cov_dsu7d9qvm.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_dsu7d9qvm.b[1][0]++;cov_dsu7d9qvm.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[1][1]++;}cov_dsu7d9qvm.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_dsu7d9qvm.b[2][0]++;cov_dsu7d9qvm.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[2][1]++;}\n  //can create my planet since all test pass\n  let planet = /* istanbul ignore next */(cov_dsu7d9qvm.s[25]++, new Planet(request.body.name, request.body.content)); /* istanbul ignore next */cov_dsu7d9qvm.s[26]++;\n  planets.push(planet); /* istanbul ignore next */cov_dsu7d9qvm.s[27]++;\n  sendJSON(response, 200, planet);\n}","timestamp":"2017-12-07T19:40:08.322Z"}
{"level":"info","message":"Responding with a 400 code due to name not found","timestamp":"2017-12-07T19:40:08.322Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T19:40:08.329Z"}
{"level":"info","message":"__REQUEST_ERROR","timestamp":"2017-12-07T19:40:08.329Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/home/seth/codefellows/401/lab/08-09-vanilla-rest-server/lab-seth/lib/request-parser.js:29:31)\n    at emitNone (events.js:106:13)\n    at IncomingMessage.emit (events.js:208:7)\n    at endReadableNT (_stream_readable.js:1056:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-07T19:40:08.329Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T19:40:08.331Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T19:40:08.331Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.url.query.id');\n    // sendStatus(response, 200, planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;console.log(planets); /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;\n    sendJSON(response, 200, planets); /* istanbul ignore next */cov_dsu7d9qvm.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[34]++;\n  if (!planets.find(id => {/* istanbul ignore next */cov_dsu7d9qvm.f[4]++;cov_dsu7d9qvm.s[35]++;return id === request.url.query.id;})) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[36]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[37]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[39]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[40]++;sendJSON(response, 200, planets[request.url.query.id]); /* istanbul ignore next */cov_dsu7d9qvm.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-07T19:40:08.331Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T19:40:08.333Z"}
[]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T19:40:08.337Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T19:40:08.337Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.url.query.id');\n    // sendStatus(response, 200, planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;console.log(planets); /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;\n    sendJSON(response, 200, planets); /* istanbul ignore next */cov_dsu7d9qvm.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[34]++;\n  if (!planets.find(id => {/* istanbul ignore next */cov_dsu7d9qvm.f[4]++;cov_dsu7d9qvm.s[35]++;return id === request.url.query.id;})) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[36]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[37]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[39]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[40]++;sendJSON(response, 200, planets[request.url.query.id]); /* istanbul ignore next */cov_dsu7d9qvm.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-07T19:40:08.337Z"}
{"level":"info","message":"Responding with a 404 code due to Planet ID not found","timestamp":"2017-12-07T19:40:08.338Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T19:40:35.027Z"}
{"level":"info","message":"/api/planet","timestamp":"2017-12-07T19:40:35.028Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[2]++;cov_dsu7d9qvm.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_dsu7d9qvm.b[0][0]++;cov_dsu7d9qvm.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[0][1]++;}cov_dsu7d9qvm.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_dsu7d9qvm.b[1][0]++;cov_dsu7d9qvm.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[1][1]++;}cov_dsu7d9qvm.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_dsu7d9qvm.b[2][0]++;cov_dsu7d9qvm.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[2][1]++;}\n  //can create my planet since all test pass\n  let planet = /* istanbul ignore next */(cov_dsu7d9qvm.s[25]++, new Planet(request.body.name, request.body.content)); /* istanbul ignore next */cov_dsu7d9qvm.s[26]++;\n  planets.push(planet); /* istanbul ignore next */cov_dsu7d9qvm.s[27]++;\n  sendJSON(response, 200, planet);\n}","timestamp":"2017-12-07T19:40:35.028Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T19:40:35.028Z"}
{"level":"info","message":"/api/planet","timestamp":"2017-12-07T19:40:35.028Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.url.query.id');\n    // sendStatus(response, 200, planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;console.log(planets); /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;\n    sendJSON(response, 200, planets); /* istanbul ignore next */cov_dsu7d9qvm.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[34]++;\n  if (!planets.find(id => {/* istanbul ignore next */cov_dsu7d9qvm.f[4]++;cov_dsu7d9qvm.s[35]++;return id === request.url.query.id;})) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[36]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[37]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[39]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[40]++;sendJSON(response, 200, planets[request.url.query.id]); /* istanbul ignore next */cov_dsu7d9qvm.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-07T19:40:35.028Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T19:40:35.069Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T19:40:35.125Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T19:40:35.126Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[2]++;cov_dsu7d9qvm.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_dsu7d9qvm.b[0][0]++;cov_dsu7d9qvm.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[0][1]++;}cov_dsu7d9qvm.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_dsu7d9qvm.b[1][0]++;cov_dsu7d9qvm.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[1][1]++;}cov_dsu7d9qvm.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_dsu7d9qvm.b[2][0]++;cov_dsu7d9qvm.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[2][1]++;}\n  //can create my planet since all test pass\n  let planet = /* istanbul ignore next */(cov_dsu7d9qvm.s[25]++, new Planet(request.body.name, request.body.content)); /* istanbul ignore next */cov_dsu7d9qvm.s[26]++;\n  planets.push(planet); /* istanbul ignore next */cov_dsu7d9qvm.s[27]++;\n  sendJSON(response, 200, planet);\n}","timestamp":"2017-12-07T19:40:35.127Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T19:40:35.127Z"}
{"id":"7e6d1c70-db86-11e7-99cc-cb1586d85cd1","discoverDate":"2017-11-17T18:05:35.652Z","name":"BD032562b","content":"11h50m1555sDeclination02d45m365s","level":"info","message":"","timestamp":"2017-12-07T19:40:35.127Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T19:40:35.136Z"}
{"level":"info","message":"__REQUEST_ERROR","timestamp":"2017-12-07T19:40:35.136Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/home/seth/codefellows/401/lab/08-09-vanilla-rest-server/lab-seth/lib/request-parser.js:29:31)\n    at emitNone (events.js:106:13)\n    at IncomingMessage.emit (events.js:208:7)\n    at endReadableNT (_stream_readable.js:1056:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-07T19:40:35.136Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T19:40:35.139Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T19:40:35.139Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.url.query.id');\n    // sendStatus(response, 200, planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;console.log(planets); /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;\n    sendJSON(response, 200, planets); /* istanbul ignore next */cov_dsu7d9qvm.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[34]++;\n  if (!planets.find(id => {/* istanbul ignore next */cov_dsu7d9qvm.f[4]++;cov_dsu7d9qvm.s[35]++;return id === request.url.query.id;})) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[36]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[37]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[39]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[40]++;sendJSON(response, 200, planets[request.url.query.id]); /* istanbul ignore next */cov_dsu7d9qvm.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-07T19:40:35.139Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T19:40:35.141Z"}
[{"id":"7e6d1c70-db86-11e7-99cc-cb1586d85cd1","discoverDate":"2017-11-17T18:05:35.652Z","name":"BD032562b","content":"11h50m1555sDeclination02d45m365s"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T19:40:35.144Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T19:40:35.144Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.url.query.id');\n    // sendStatus(response, 200, planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;console.log(planets); /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;\n    sendJSON(response, 200, planets); /* istanbul ignore next */cov_dsu7d9qvm.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[34]++;\n  if (!planets.find(id => {/* istanbul ignore next */cov_dsu7d9qvm.f[4]++;cov_dsu7d9qvm.s[35]++;return id === request.url.query.id;})) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[36]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[37]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[39]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[40]++;sendJSON(response, 200, planets[request.url.query.id]); /* istanbul ignore next */cov_dsu7d9qvm.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-07T19:40:35.144Z"}
{"level":"info","message":"Responding with a 404 code due to Planet ID not found","timestamp":"2017-12-07T19:40:35.145Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T19:40:55.400Z"}
{"level":"info","message":"/api/planet","timestamp":"2017-12-07T19:40:55.401Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[2]++;cov_dsu7d9qvm.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_dsu7d9qvm.b[0][0]++;cov_dsu7d9qvm.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[0][1]++;}cov_dsu7d9qvm.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_dsu7d9qvm.b[1][0]++;cov_dsu7d9qvm.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[1][1]++;}cov_dsu7d9qvm.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_dsu7d9qvm.b[2][0]++;cov_dsu7d9qvm.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[2][1]++;}\n  //can create my planet since all test pass\n  let planet = /* istanbul ignore next */(cov_dsu7d9qvm.s[25]++, new Planet(request.body.name, request.body.content)); /* istanbul ignore next */cov_dsu7d9qvm.s[26]++;\n  planets.push(planet); /* istanbul ignore next */cov_dsu7d9qvm.s[27]++;\n  sendJSON(response, 200, planet);\n}","timestamp":"2017-12-07T19:40:55.401Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T19:40:55.401Z"}
{"level":"info","message":"/api/planet","timestamp":"2017-12-07T19:40:55.401Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.url.query.id');\n    // sendStatus(response, 200, planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;console.log(planets); /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;\n    sendJSON(response, 200, planets); /* istanbul ignore next */cov_dsu7d9qvm.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[34]++;\n  if (!planets.find(id => {/* istanbul ignore next */cov_dsu7d9qvm.f[4]++;cov_dsu7d9qvm.s[35]++;return id === request.url.query.id;})) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[36]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[37]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[39]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[40]++;sendJSON(response, 200, planets[request.url.query.id]); /* istanbul ignore next */cov_dsu7d9qvm.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-07T19:40:55.401Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T19:40:55.442Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T19:40:55.498Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T19:40:55.499Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[2]++;cov_dsu7d9qvm.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_dsu7d9qvm.b[0][0]++;cov_dsu7d9qvm.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[0][1]++;}cov_dsu7d9qvm.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_dsu7d9qvm.b[1][0]++;cov_dsu7d9qvm.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[1][1]++;}cov_dsu7d9qvm.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_dsu7d9qvm.b[2][0]++;cov_dsu7d9qvm.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[2][1]++;}\n  //can create my planet since all test pass\n  let planet = /* istanbul ignore next */(cov_dsu7d9qvm.s[25]++, new Planet(request.body.name, request.body.content)); /* istanbul ignore next */cov_dsu7d9qvm.s[26]++;\n  planets.push(planet); /* istanbul ignore next */cov_dsu7d9qvm.s[27]++;\n  sendJSON(response, 200, planet);\n}","timestamp":"2017-12-07T19:40:55.499Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T19:40:55.500Z"}
{"id":"8a91c8c0-db86-11e7-9f82-8b08fe5b8ae2","discoverDate":"2017-01-27T02:01:31.870Z","name":"BD032562b","content":"11h50m1555sDeclination02d45m365s","level":"info","message":"","timestamp":"2017-12-07T19:40:55.500Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T19:40:55.509Z"}
{"level":"info","message":"__REQUEST_ERROR","timestamp":"2017-12-07T19:40:55.510Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/home/seth/codefellows/401/lab/08-09-vanilla-rest-server/lab-seth/lib/request-parser.js:29:31)\n    at emitNone (events.js:106:13)\n    at IncomingMessage.emit (events.js:208:7)\n    at endReadableNT (_stream_readable.js:1056:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-07T19:40:55.510Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T19:40:55.512Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T19:40:55.513Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.url.query.id');\n    // sendStatus(response, 200, planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;console.log(planets); /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;\n    sendJSON(response, 200, planets); /* istanbul ignore next */cov_dsu7d9qvm.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[34]++;\n  if (!planets.find(id => {/* istanbul ignore next */cov_dsu7d9qvm.f[4]++;cov_dsu7d9qvm.s[35]++;return id === request.url.query.id;})) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[36]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[37]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[39]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[40]++;sendJSON(response, 200, planets[request.url.query.id]); /* istanbul ignore next */cov_dsu7d9qvm.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-07T19:40:55.513Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T19:40:55.515Z"}
[{"id":"8a91c8c0-db86-11e7-9f82-8b08fe5b8ae2","discoverDate":"2017-01-27T02:01:31.870Z","name":"BD032562b","content":"11h50m1555sDeclination02d45m365s"}]
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T19:41:23.697Z"}
{"level":"info","message":"/api/planet","timestamp":"2017-12-07T19:41:23.697Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[2]++;cov_dsu7d9qvm.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_dsu7d9qvm.b[0][0]++;cov_dsu7d9qvm.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[0][1]++;}cov_dsu7d9qvm.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_dsu7d9qvm.b[1][0]++;cov_dsu7d9qvm.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[1][1]++;}cov_dsu7d9qvm.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_dsu7d9qvm.b[2][0]++;cov_dsu7d9qvm.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[2][1]++;}\n  //can create my planet since all test pass\n  let planet = /* istanbul ignore next */(cov_dsu7d9qvm.s[25]++, new Planet(request.body.name, request.body.content)); /* istanbul ignore next */cov_dsu7d9qvm.s[26]++;\n  planets.push(planet); /* istanbul ignore next */cov_dsu7d9qvm.s[27]++;\n  sendJSON(response, 200, planet);\n}","timestamp":"2017-12-07T19:41:23.698Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T19:41:23.698Z"}
{"level":"info","message":"/api/planet","timestamp":"2017-12-07T19:41:23.698Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.url.query.id');\n    // sendStatus(response, 200, planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;console.log(planets); /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;\n    sendJSON(response, 200, planets); /* istanbul ignore next */cov_dsu7d9qvm.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[34]++;\n  if (!planets.find(id => {/* istanbul ignore next */cov_dsu7d9qvm.f[4]++;cov_dsu7d9qvm.s[35]++;return id === request.url.query.id;})) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[36]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[37]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[39]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[40]++;sendJSON(response, 200, planets[request.url.query.id]); /* istanbul ignore next */cov_dsu7d9qvm.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-07T19:41:23.698Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T19:41:23.741Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T19:41:23.795Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T19:41:23.796Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[2]++;cov_dsu7d9qvm.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_dsu7d9qvm.b[0][0]++;cov_dsu7d9qvm.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[0][1]++;}cov_dsu7d9qvm.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_dsu7d9qvm.b[1][0]++;cov_dsu7d9qvm.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[1][1]++;}cov_dsu7d9qvm.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_dsu7d9qvm.b[2][0]++;cov_dsu7d9qvm.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[2][1]++;}\n  //can create my planet since all test pass\n  let planet = /* istanbul ignore next */(cov_dsu7d9qvm.s[25]++, new Planet(request.body.name, request.body.content)); /* istanbul ignore next */cov_dsu7d9qvm.s[26]++;\n  planets.push(planet); /* istanbul ignore next */cov_dsu7d9qvm.s[27]++;\n  sendJSON(response, 200, planet);\n}","timestamp":"2017-12-07T19:41:23.796Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T19:41:23.797Z"}
{"id":"9b6f9050-db86-11e7-94c7-b3aaf2814e7b","discoverDate":"2017-10-30T12:48:12.834Z","name":"BD032562b","content":"11h50m1555sDeclination02d45m365s","level":"info","message":"","timestamp":"2017-12-07T19:41:23.797Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T19:41:23.807Z"}
{"level":"info","message":"__REQUEST_ERROR","timestamp":"2017-12-07T19:41:23.807Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/home/seth/codefellows/401/lab/08-09-vanilla-rest-server/lab-seth/lib/request-parser.js:29:31)\n    at emitNone (events.js:106:13)\n    at IncomingMessage.emit (events.js:208:7)\n    at endReadableNT (_stream_readable.js:1056:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-07T19:41:23.808Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T19:41:23.811Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T19:41:23.811Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.url.query.id');\n    // sendStatus(response, 200, planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;console.log(planets); /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;\n    sendJSON(response, 200, planets); /* istanbul ignore next */cov_dsu7d9qvm.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[34]++;\n  if (!planets.find(id => {/* istanbul ignore next */cov_dsu7d9qvm.f[4]++;cov_dsu7d9qvm.s[35]++;return id === request.url.query.id;})) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[36]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[37]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[39]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[40]++;sendJSON(response, 200, planets[request.url.query.id]); /* istanbul ignore next */cov_dsu7d9qvm.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-07T19:41:23.811Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T19:41:23.813Z"}
[{"id":"9b6f9050-db86-11e7-94c7-b3aaf2814e7b","discoverDate":"2017-10-30T12:48:12.834Z","name":"BD032562b","content":"11h50m1555sDeclination02d45m365s"}]
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T19:43:30.349Z"}
{"level":"info","message":"/api/planet","timestamp":"2017-12-07T19:43:30.349Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[2]++;cov_dsu7d9qvm.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_dsu7d9qvm.b[0][0]++;cov_dsu7d9qvm.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[0][1]++;}cov_dsu7d9qvm.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_dsu7d9qvm.b[1][0]++;cov_dsu7d9qvm.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[1][1]++;}cov_dsu7d9qvm.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_dsu7d9qvm.b[2][0]++;cov_dsu7d9qvm.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[2][1]++;}\n  //can create my planet since all test pass\n  let planet = /* istanbul ignore next */(cov_dsu7d9qvm.s[25]++, new Planet(request.body.name, request.body.content)); /* istanbul ignore next */cov_dsu7d9qvm.s[26]++;\n  planets.push(planet); /* istanbul ignore next */cov_dsu7d9qvm.s[27]++;\n  sendJSON(response, 200, planet);\n}","timestamp":"2017-12-07T19:43:30.349Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T19:43:30.350Z"}
{"level":"info","message":"/api/planet","timestamp":"2017-12-07T19:43:30.350Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.url.query.id');\n    // sendStatus(response, 200, planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;console.log(planets); /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;\n    sendJSON(response, 200, planets); /* istanbul ignore next */cov_dsu7d9qvm.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[34]++;\n  if (!planets.find(id => {/* istanbul ignore next */cov_dsu7d9qvm.f[4]++;cov_dsu7d9qvm.s[35]++;return id === request.url.query.id;})) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[36]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[37]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[39]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[40]++;sendJSON(response, 200, planets[request.url.query.id]); /* istanbul ignore next */cov_dsu7d9qvm.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-07T19:43:30.350Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T19:43:30.408Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T19:43:30.488Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T19:43:30.491Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[2]++;cov_dsu7d9qvm.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_dsu7d9qvm.b[0][0]++;cov_dsu7d9qvm.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[0][1]++;}cov_dsu7d9qvm.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_dsu7d9qvm.b[1][0]++;cov_dsu7d9qvm.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[1][1]++;}cov_dsu7d9qvm.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_dsu7d9qvm.b[2][0]++;cov_dsu7d9qvm.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[2][1]++;}\n  //can create my planet since all test pass\n  let planet = /* istanbul ignore next */(cov_dsu7d9qvm.s[25]++, new Planet(request.body.name, request.body.content)); /* istanbul ignore next */cov_dsu7d9qvm.s[26]++;\n  planets.push(planet); /* istanbul ignore next */cov_dsu7d9qvm.s[27]++;\n  sendJSON(response, 200, planet);\n}","timestamp":"2017-12-07T19:43:30.491Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T19:43:30.493Z"}
{"id":"e6f3afc0-db86-11e7-b1a5-7919ddcb68d6","discoverDate":"2017-12-06T07:27:34.610Z","name":"BD032562b","content":"11h50m1555sDeclination02d45m365s","level":"info","message":"","timestamp":"2017-12-07T19:43:30.493Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T19:43:30.505Z"}
{"level":"info","message":"__REQUEST_ERROR","timestamp":"2017-12-07T19:43:30.505Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/home/seth/codefellows/401/lab/08-09-vanilla-rest-server/lab-seth/lib/request-parser.js:29:31)\n    at emitNone (events.js:106:13)\n    at IncomingMessage.emit (events.js:208:7)\n    at endReadableNT (_stream_readable.js:1056:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-07T19:43:30.505Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T19:43:30.512Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T19:43:30.513Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.url.query.id');\n    // sendStatus(response, 200, planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;console.log(planets); /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;\n    sendJSON(response, 200, planets); /* istanbul ignore next */cov_dsu7d9qvm.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[34]++;\n  if (!planets.find(id => {/* istanbul ignore next */cov_dsu7d9qvm.f[4]++;cov_dsu7d9qvm.s[35]++;return id === request.url.query.id;})) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[36]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[37]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[39]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[40]++;sendJSON(response, 200, planets[request.url.query.id]); /* istanbul ignore next */cov_dsu7d9qvm.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-07T19:43:30.513Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T19:43:30.517Z"}
[{"id":"e6f3afc0-db86-11e7-b1a5-7919ddcb68d6","discoverDate":"2017-12-06T07:27:34.610Z","name":"BD032562b","content":"11h50m1555sDeclination02d45m365s"}]
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T19:43:49.304Z"}
{"level":"info","message":"/api/planet","timestamp":"2017-12-07T19:43:49.305Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[2]++;cov_dsu7d9qvm.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_dsu7d9qvm.b[0][0]++;cov_dsu7d9qvm.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[0][1]++;}cov_dsu7d9qvm.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_dsu7d9qvm.b[1][0]++;cov_dsu7d9qvm.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[1][1]++;}cov_dsu7d9qvm.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_dsu7d9qvm.b[2][0]++;cov_dsu7d9qvm.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[2][1]++;}\n  //can create my planet since all test pass\n  let planet = /* istanbul ignore next */(cov_dsu7d9qvm.s[25]++, new Planet(request.body.name, request.body.content)); /* istanbul ignore next */cov_dsu7d9qvm.s[26]++;\n  planets.push(planet); /* istanbul ignore next */cov_dsu7d9qvm.s[27]++;\n  sendJSON(response, 200, planet);\n}","timestamp":"2017-12-07T19:43:49.305Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T19:43:49.305Z"}
{"level":"info","message":"/api/planet","timestamp":"2017-12-07T19:43:49.305Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.url.query.id');\n    // sendStatus(response, 200, planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;console.log(planets); /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;\n    sendJSON(response, 200, planets); /* istanbul ignore next */cov_dsu7d9qvm.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[34]++;\n  if (!planets.find(id => {/* istanbul ignore next */cov_dsu7d9qvm.f[4]++;cov_dsu7d9qvm.s[35]++;return id === request.url.query.id;})) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[36]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[37]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[39]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[40]++;sendJSON(response, 200, planets[request.url.query.id]); /* istanbul ignore next */cov_dsu7d9qvm.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-07T19:43:49.305Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T19:43:49.346Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T19:43:49.404Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T19:43:49.406Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[2]++;cov_dsu7d9qvm.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_dsu7d9qvm.b[0][0]++;cov_dsu7d9qvm.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[0][1]++;}cov_dsu7d9qvm.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_dsu7d9qvm.b[1][0]++;cov_dsu7d9qvm.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[1][1]++;}cov_dsu7d9qvm.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_dsu7d9qvm.b[2][0]++;cov_dsu7d9qvm.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[2][1]++;}\n  //can create my planet since all test pass\n  let planet = /* istanbul ignore next */(cov_dsu7d9qvm.s[25]++, new Planet(request.body.name, request.body.content)); /* istanbul ignore next */cov_dsu7d9qvm.s[26]++;\n  planets.push(planet); /* istanbul ignore next */cov_dsu7d9qvm.s[27]++;\n  sendJSON(response, 200, planet);\n}","timestamp":"2017-12-07T19:43:49.406Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T19:43:49.406Z"}
{"id":"f239bbe0-db86-11e7-8e45-7b8c1f294aea","discoverDate":"2017-11-26T19:04:39.817Z","name":"BD032562b","content":"11h50m1555sDeclination02d45m365s","level":"info","message":"","timestamp":"2017-12-07T19:43:49.406Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T19:43:49.416Z"}
{"level":"info","message":"__REQUEST_ERROR","timestamp":"2017-12-07T19:43:49.417Z"}
{"message":"Unexpected token b in JSON at position 2","stack":"SyntaxError: Unexpected token b in JSON at position 2\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/home/seth/codefellows/401/lab/08-09-vanilla-rest-server/lab-seth/lib/request-parser.js:29:31)\n    at emitNone (events.js:106:13)\n    at IncomingMessage.emit (events.js:208:7)\n    at endReadableNT (_stream_readable.js:1056:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-07T19:43:49.417Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T19:43:49.420Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T19:43:49.420Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.url.query.id');\n    // sendStatus(response, 200, planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;console.log(planets); /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;\n    sendJSON(response, 200, planets); /* istanbul ignore next */cov_dsu7d9qvm.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[34]++;\n  if (!planets.find(id => {/* istanbul ignore next */cov_dsu7d9qvm.f[4]++;cov_dsu7d9qvm.s[35]++;return id === request.url.query.id;})) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[36]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[37]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[39]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[40]++;sendJSON(response, 200, planets[request.url.query.id]); /* istanbul ignore next */cov_dsu7d9qvm.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-07T19:43:49.420Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T19:43:49.422Z"}
[{"id":"f239bbe0-db86-11e7-8e45-7b8c1f294aea","discoverDate":"2017-11-26T19:04:39.817Z","name":"BD032562b","content":"11h50m1555sDeclination02d45m365s"}]
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T19:45:59.866Z"}
{"level":"info","message":"/api/planet","timestamp":"2017-12-07T19:45:59.867Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[2]++;cov_dsu7d9qvm.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_dsu7d9qvm.b[0][0]++;cov_dsu7d9qvm.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[0][1]++;}cov_dsu7d9qvm.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_dsu7d9qvm.b[1][0]++;cov_dsu7d9qvm.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[1][1]++;}cov_dsu7d9qvm.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_dsu7d9qvm.b[2][0]++;cov_dsu7d9qvm.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[2][1]++;}\n  //can create my planet since all test pass\n  let planet = /* istanbul ignore next */(cov_dsu7d9qvm.s[25]++, new Planet(request.body.name, request.body.content)); /* istanbul ignore next */cov_dsu7d9qvm.s[26]++;\n  planets.push(planet); /* istanbul ignore next */cov_dsu7d9qvm.s[27]++;\n  sendJSON(response, 200, planet);\n}","timestamp":"2017-12-07T19:45:59.867Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T19:45:59.867Z"}
{"level":"info","message":"/api/planet","timestamp":"2017-12-07T19:45:59.867Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.url.query.id');\n    // sendStatus(response, 200, planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;console.log(planets); /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;\n    sendJSON(response, 200, planets); /* istanbul ignore next */cov_dsu7d9qvm.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[34]++;\n  if (!planets.find(id => {/* istanbul ignore next */cov_dsu7d9qvm.f[4]++;cov_dsu7d9qvm.s[35]++;return id === request.url.query.id;})) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[36]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[37]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[39]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[40]++;sendJSON(response, 200, planets[request.url.query.id]); /* istanbul ignore next */cov_dsu7d9qvm.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-07T19:45:59.868Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T19:45:59.927Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T19:46:00.004Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T19:46:00.005Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[2]++;cov_dsu7d9qvm.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_dsu7d9qvm.b[0][0]++;cov_dsu7d9qvm.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[0][1]++;}cov_dsu7d9qvm.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_dsu7d9qvm.b[1][0]++;cov_dsu7d9qvm.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[1][1]++;}cov_dsu7d9qvm.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_dsu7d9qvm.b[2][0]++;cov_dsu7d9qvm.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[2][1]++;}\n  //can create my planet since all test pass\n  let planet = /* istanbul ignore next */(cov_dsu7d9qvm.s[25]++, new Planet(request.body.name, request.body.content)); /* istanbul ignore next */cov_dsu7d9qvm.s[26]++;\n  planets.push(planet); /* istanbul ignore next */cov_dsu7d9qvm.s[27]++;\n  sendJSON(response, 200, planet);\n}","timestamp":"2017-12-07T19:46:00.005Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T19:46:00.006Z"}
{"id":"4011b660-db87-11e7-861a-4f601b1fb1cd","discoverDate":"2017-07-02T04:26:35.894Z","name":"BD032562b","content":"11h50m1555sDeclination02d45m365s","level":"info","message":"","timestamp":"2017-12-07T19:46:00.006Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T19:46:00.015Z"}
{"level":"info","message":"__REQUEST_ERROR","timestamp":"2017-12-07T19:46:00.016Z"}
{"message":"Unexpected token b in JSON at position 2","stack":"SyntaxError: Unexpected token b in JSON at position 2\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/home/seth/codefellows/401/lab/08-09-vanilla-rest-server/lab-seth/lib/request-parser.js:29:31)\n    at emitNone (events.js:106:13)\n    at IncomingMessage.emit (events.js:208:7)\n    at endReadableNT (_stream_readable.js:1056:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-07T19:46:00.016Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T19:46:00.018Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T19:46:00.019Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.url.query.id');\n    // sendStatus(response, 200, planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;console.log(planets); /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;\n    sendJSON(response, 200, planets); /* istanbul ignore next */cov_dsu7d9qvm.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[34]++;\n  if (!planets.find(id => {/* istanbul ignore next */cov_dsu7d9qvm.f[4]++;cov_dsu7d9qvm.s[35]++;return id === request.url.query.id;})) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[36]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[37]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[39]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[40]++;sendJSON(response, 200, planets[request.url.query.id]); /* istanbul ignore next */cov_dsu7d9qvm.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-07T19:46:00.019Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T19:46:00.021Z"}
[{"id":"4011b660-db87-11e7-861a-4f601b1fb1cd","discoverDate":"2017-07-02T04:26:35.894Z","name":"BD032562b","content":"11h50m1555sDeclination02d45m365s"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T19:46:00.023Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T19:46:00.024Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.url.query.id');\n    // sendStatus(response, 200, planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;console.log(planets); /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;\n    sendJSON(response, 200, planets); /* istanbul ignore next */cov_dsu7d9qvm.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[34]++;\n  if (!planets.find(id => {/* istanbul ignore next */cov_dsu7d9qvm.f[4]++;cov_dsu7d9qvm.s[35]++;return id === request.url.query.id;})) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[36]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[37]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[39]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[40]++;sendJSON(response, 200, planets[request.url.query.id]); /* istanbul ignore next */cov_dsu7d9qvm.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-07T19:46:00.024Z"}
{"level":"info","message":"Responding with a 404 code due to Planet ID not found","timestamp":"2017-12-07T19:46:00.025Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T19:50:46.964Z"}
{"level":"info","message":"/api/planet","timestamp":"2017-12-07T19:50:46.965Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[2]++;cov_dsu7d9qvm.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_dsu7d9qvm.b[0][0]++;cov_dsu7d9qvm.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[0][1]++;}cov_dsu7d9qvm.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_dsu7d9qvm.b[1][0]++;cov_dsu7d9qvm.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[1][1]++;}cov_dsu7d9qvm.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_dsu7d9qvm.b[2][0]++;cov_dsu7d9qvm.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[2][1]++;}\n  //can create my planet since all test pass\n  let planet = /* istanbul ignore next */(cov_dsu7d9qvm.s[25]++, new Planet(request.body.name, request.body.content)); /* istanbul ignore next */cov_dsu7d9qvm.s[26]++;\n  planets.push(planet); /* istanbul ignore next */cov_dsu7d9qvm.s[27]++;\n  sendJSON(response, 200, planet);\n}","timestamp":"2017-12-07T19:50:46.965Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T19:50:46.965Z"}
{"level":"info","message":"/api/planet","timestamp":"2017-12-07T19:50:46.965Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.url.query.id');\n    // sendStatus(response, 200, planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;console.log(planets); /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;\n    sendJSON(response, 200, planets); /* istanbul ignore next */cov_dsu7d9qvm.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[34]++;\n  if (!planets.find(id => {/* istanbul ignore next */cov_dsu7d9qvm.f[4]++;cov_dsu7d9qvm.s[35]++;return id === request.url.query.id;})) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[36]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[37]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[39]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[40]++;sendJSON(response, 200, planets[request.url.query.id]); /* istanbul ignore next */cov_dsu7d9qvm.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-07T19:50:46.965Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T19:50:47.005Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T19:50:47.061Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T19:50:47.063Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[2]++;cov_dsu7d9qvm.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_dsu7d9qvm.b[0][0]++;cov_dsu7d9qvm.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[0][1]++;}cov_dsu7d9qvm.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_dsu7d9qvm.b[1][0]++;cov_dsu7d9qvm.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[1][1]++;}cov_dsu7d9qvm.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_dsu7d9qvm.b[2][0]++;cov_dsu7d9qvm.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[2][1]++;}\n  //can create my planet since all test pass\n  let planet = /* istanbul ignore next */(cov_dsu7d9qvm.s[25]++, new Planet(request.body.name, request.body.content)); /* istanbul ignore next */cov_dsu7d9qvm.s[26]++;\n  planets.push(planet); /* istanbul ignore next */cov_dsu7d9qvm.s[27]++;\n  sendJSON(response, 200, planet);\n}","timestamp":"2017-12-07T19:50:47.063Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T19:50:47.063Z"}
{"id":"eb2b2270-db87-11e7-ba8f-678614d0a634","discoverDate":"2017-03-01T17:37:42.938Z","name":"BD032562b","content":"11h50m1555sDeclination02d45m365s","level":"info","message":"","timestamp":"2017-12-07T19:50:47.063Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T19:50:47.073Z"}
{"level":"info","message":"__REQUEST_ERROR","timestamp":"2017-12-07T19:50:47.074Z"}
{"message":"Unexpected token b in JSON at position 2","stack":"SyntaxError: Unexpected token b in JSON at position 2\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/home/seth/codefellows/401/lab/08-09-vanilla-rest-server/lab-seth/lib/request-parser.js:29:31)\n    at emitNone (events.js:106:13)\n    at IncomingMessage.emit (events.js:208:7)\n    at endReadableNT (_stream_readable.js:1056:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-07T19:50:47.074Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T19:50:47.076Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T19:50:47.076Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.url.query.id');\n    // sendStatus(response, 200, planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;console.log(planets); /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;\n    sendJSON(response, 200, planets); /* istanbul ignore next */cov_dsu7d9qvm.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[34]++;\n  if (!planets.find(id => {/* istanbul ignore next */cov_dsu7d9qvm.f[4]++;cov_dsu7d9qvm.s[35]++;return id === request.url.query.id;})) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[36]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[37]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[39]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[40]++;sendJSON(response, 200, planets[request.url.query.id]); /* istanbul ignore next */cov_dsu7d9qvm.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-07T19:50:47.076Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T19:50:47.077Z"}
[{"id":"eb2b2270-db87-11e7-ba8f-678614d0a634","discoverDate":"2017-03-01T17:37:42.938Z","name":"BD032562b","content":"11h50m1555sDeclination02d45m365s"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T19:50:47.082Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T19:50:47.083Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.url.query.id');\n    // sendStatus(response, 200, planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;console.log(planets); /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;\n    sendJSON(response, 200, planets); /* istanbul ignore next */cov_dsu7d9qvm.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[34]++;\n  if (!planets.find(id => {/* istanbul ignore next */cov_dsu7d9qvm.f[4]++;cov_dsu7d9qvm.s[35]++;return id === request.url.query.id;})) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[36]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[37]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[39]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[40]++;sendJSON(response, 200, planets[request.url.query.id]); /* istanbul ignore next */cov_dsu7d9qvm.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-07T19:50:47.083Z"}
{"level":"info","message":"Responding with a 404 code due to Planet ID not found","timestamp":"2017-12-07T19:50:47.083Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T19:52:08.921Z"}
{"level":"info","message":"/api/planet","timestamp":"2017-12-07T19:52:08.922Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[2]++;cov_dsu7d9qvm.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_dsu7d9qvm.b[0][0]++;cov_dsu7d9qvm.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[0][1]++;}cov_dsu7d9qvm.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_dsu7d9qvm.b[1][0]++;cov_dsu7d9qvm.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[1][1]++;}cov_dsu7d9qvm.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_dsu7d9qvm.b[2][0]++;cov_dsu7d9qvm.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[2][1]++;}\n  //can create my planet since all test pass\n  let planet = /* istanbul ignore next */(cov_dsu7d9qvm.s[25]++, new Planet(request.body.name, request.body.content)); /* istanbul ignore next */cov_dsu7d9qvm.s[26]++;\n  planets.push(planet); /* istanbul ignore next */cov_dsu7d9qvm.s[27]++;\n  sendJSON(response, 200, planet);\n}","timestamp":"2017-12-07T19:52:08.922Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T19:52:08.922Z"}
{"level":"info","message":"/api/planet","timestamp":"2017-12-07T19:52:08.923Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.url.query.id');\n    // sendStatus(response, 200, planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;console.log(planets); /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;\n    sendJSON(response, 200, planets); /* istanbul ignore next */cov_dsu7d9qvm.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[34]++;\n  if (!planets.find(id => {/* istanbul ignore next */cov_dsu7d9qvm.f[4]++;cov_dsu7d9qvm.s[35]++;return id === request.url.query.id;})) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[36]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[37]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[39]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[40]++;sendJSON(response, 200, planets[request.url.query.id]); /* istanbul ignore next */cov_dsu7d9qvm.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-07T19:52:08.923Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T19:52:08.982Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T19:52:09.062Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T19:52:09.065Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[2]++;cov_dsu7d9qvm.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_dsu7d9qvm.b[0][0]++;cov_dsu7d9qvm.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[0][1]++;}cov_dsu7d9qvm.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_dsu7d9qvm.b[1][0]++;cov_dsu7d9qvm.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[1][1]++;}cov_dsu7d9qvm.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_dsu7d9qvm.b[2][0]++;cov_dsu7d9qvm.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[2][1]++;}\n  //can create my planet since all test pass\n  let planet = /* istanbul ignore next */(cov_dsu7d9qvm.s[25]++, new Planet(request.body.name, request.body.content)); /* istanbul ignore next */cov_dsu7d9qvm.s[26]++;\n  planets.push(planet); /* istanbul ignore next */cov_dsu7d9qvm.s[27]++;\n  sendJSON(response, 200, planet);\n}","timestamp":"2017-12-07T19:52:09.065Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T19:52:09.066Z"}
{"id":"1c0ba590-db88-11e7-a11d-d98ba53e29c9","discoverDate":"2017-04-21T23:24:37.186Z","name":"BD032562b","content":"11h50m1555sDeclination02d45m365s","level":"info","message":"","timestamp":"2017-12-07T19:52:09.066Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T19:52:09.082Z"}
{"level":"info","message":"__REQUEST_ERROR","timestamp":"2017-12-07T19:52:09.083Z"}
{"message":"Unexpected token b in JSON at position 2","stack":"SyntaxError: Unexpected token b in JSON at position 2\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/home/seth/codefellows/401/lab/08-09-vanilla-rest-server/lab-seth/lib/request-parser.js:29:31)\n    at emitNone (events.js:106:13)\n    at IncomingMessage.emit (events.js:208:7)\n    at endReadableNT (_stream_readable.js:1056:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-07T19:52:09.083Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T19:52:09.092Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T19:52:09.092Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.url.query.id');\n    // sendStatus(response, 200, planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;console.log(planets); /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;\n    sendJSON(response, 200, planets); /* istanbul ignore next */cov_dsu7d9qvm.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[34]++;\n  if (!planets.find(id => {/* istanbul ignore next */cov_dsu7d9qvm.f[4]++;cov_dsu7d9qvm.s[35]++;return id === request.url.query.id;})) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[36]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[37]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[39]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[40]++;sendJSON(response, 200, planets[request.url.query.id]); /* istanbul ignore next */cov_dsu7d9qvm.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-07T19:52:09.092Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T19:52:09.093Z"}
[{"id":"1c0ba590-db88-11e7-a11d-d98ba53e29c9","discoverDate":"2017-04-21T23:24:37.186Z","name":"BD032562b","content":"11h50m1555sDeclination02d45m365s"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T19:52:09.099Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T19:52:09.101Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.url.query.id');\n    // sendStatus(response, 200, planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;console.log(planets); /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;\n    sendJSON(response, 200, planets); /* istanbul ignore next */cov_dsu7d9qvm.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[34]++;\n  if (!planets.find(id => {/* istanbul ignore next */cov_dsu7d9qvm.f[4]++;cov_dsu7d9qvm.s[35]++;return id === request.url.query.id;})) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[36]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[37]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[39]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[40]++;sendJSON(response, 200, planets[request.url.query.id]); /* istanbul ignore next */cov_dsu7d9qvm.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-07T19:52:09.101Z"}
{"level":"info","message":"Responding with a 404 code due to Planet ID not found","timestamp":"2017-12-07T19:52:09.102Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T19:52:41.323Z"}
{"level":"info","message":"/api/planet","timestamp":"2017-12-07T19:52:41.324Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[2]++;cov_dsu7d9qvm.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_dsu7d9qvm.b[0][0]++;cov_dsu7d9qvm.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[0][1]++;}cov_dsu7d9qvm.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_dsu7d9qvm.b[1][0]++;cov_dsu7d9qvm.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[1][1]++;}cov_dsu7d9qvm.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_dsu7d9qvm.b[2][0]++;cov_dsu7d9qvm.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[2][1]++;}\n  //can create my planet since all test pass\n  let planet = /* istanbul ignore next */(cov_dsu7d9qvm.s[25]++, new Planet(request.body.name, request.body.content)); /* istanbul ignore next */cov_dsu7d9qvm.s[26]++;\n  planets.push(planet); /* istanbul ignore next */cov_dsu7d9qvm.s[27]++;\n  sendJSON(response, 200, planet);\n}","timestamp":"2017-12-07T19:52:41.324Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T19:52:41.324Z"}
{"level":"info","message":"/api/planet","timestamp":"2017-12-07T19:52:41.324Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.url.query.id');\n    // sendStatus(response, 200, planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;console.log(planets); /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;\n    sendJSON(response, 200, planets); /* istanbul ignore next */cov_dsu7d9qvm.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[34]++;\n  if (!planets.find(id => {/* istanbul ignore next */cov_dsu7d9qvm.f[4]++;cov_dsu7d9qvm.s[35]++;return id === request.url.query.id;})) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[36]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[37]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[39]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[40]++;sendJSON(response, 200, planets[request.url.query.id]); /* istanbul ignore next */cov_dsu7d9qvm.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-07T19:52:41.324Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T19:52:41.365Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T19:52:41.421Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T19:52:41.423Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[2]++;cov_dsu7d9qvm.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_dsu7d9qvm.b[0][0]++;cov_dsu7d9qvm.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[0][1]++;}cov_dsu7d9qvm.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_dsu7d9qvm.b[1][0]++;cov_dsu7d9qvm.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[1][1]++;}cov_dsu7d9qvm.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_dsu7d9qvm.b[2][0]++;cov_dsu7d9qvm.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[2][1]++;}\n  //can create my planet since all test pass\n  let planet = /* istanbul ignore next */(cov_dsu7d9qvm.s[25]++, new Planet(request.body.name, request.body.content)); /* istanbul ignore next */cov_dsu7d9qvm.s[26]++;\n  planets.push(planet); /* istanbul ignore next */cov_dsu7d9qvm.s[27]++;\n  sendJSON(response, 200, planet);\n}","timestamp":"2017-12-07T19:52:41.423Z"}
{"level":"info","message":"__REQUEST_ERROR","timestamp":"2017-12-07T19:52:41.424Z"}
{"message":"planets.push is not a function","stack":"TypeError: planets.push is not a function\n    at Object.<anonymous>.router.post (/home/seth/codefellows/401/lab/08-09-vanilla-rest-server/lab-seth/route/planet-router.js:45:11)\n    at requestParser.parse.then.request (/home/seth/codefellows/401/lab/08-09-vanilla-rest-server/lab-seth/lib/router.js:54:89)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T19:52:41.424Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T19:52:41.431Z"}
{"level":"info","message":"__REQUEST_ERROR","timestamp":"2017-12-07T19:52:41.432Z"}
{"message":"Unexpected token b in JSON at position 2","stack":"SyntaxError: Unexpected token b in JSON at position 2\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/home/seth/codefellows/401/lab/08-09-vanilla-rest-server/lab-seth/lib/request-parser.js:29:31)\n    at emitNone (events.js:106:13)\n    at IncomingMessage.emit (events.js:208:7)\n    at endReadableNT (_stream_readable.js:1056:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-07T19:52:41.432Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T19:52:41.436Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T19:52:41.436Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.url.query.id');\n    // sendStatus(response, 200, planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;console.log(planets); /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;\n    sendJSON(response, 200, planets); /* istanbul ignore next */cov_dsu7d9qvm.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[34]++;\n  if (!planets.find(id => {/* istanbul ignore next */cov_dsu7d9qvm.f[4]++;cov_dsu7d9qvm.s[35]++;return id === request.url.query.id;})) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[36]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[37]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[39]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[40]++;sendJSON(response, 200, planets[request.url.query.id]); /* istanbul ignore next */cov_dsu7d9qvm.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-07T19:52:41.436Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T19:52:41.438Z"}
{"level":"info","message":"","timestamp":"2017-12-07T19:52:41.438Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T19:52:41.441Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T19:52:41.442Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.url.query.id');\n    // sendStatus(response, 200, planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;console.log(planets); /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;\n    sendJSON(response, 200, planets); /* istanbul ignore next */cov_dsu7d9qvm.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[34]++;\n  if (!planets.find(id => {/* istanbul ignore next */cov_dsu7d9qvm.f[4]++;cov_dsu7d9qvm.s[35]++;return id === request.url.query.id;})) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[36]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[37]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[39]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[40]++;sendJSON(response, 200, planets[request.url.query.id]); /* istanbul ignore next */cov_dsu7d9qvm.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-07T19:52:41.442Z"}
{"level":"info","message":"__REQUEST_ERROR","timestamp":"2017-12-07T19:52:41.442Z"}
{"message":"planets.find is not a function","stack":"TypeError: planets.find is not a function\n    at Object.<anonymous>.router.get (/home/seth/codefellows/401/lab/08-09-vanilla-rest-server/lab-seth/route/planet-router.js:64:16)\n    at requestParser.parse.then.request (/home/seth/codefellows/401/lab/08-09-vanilla-rest-server/lab-seth/lib/router.js:54:89)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T19:52:41.442Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T19:53:05.663Z"}
{"level":"info","message":"/api/planet","timestamp":"2017-12-07T19:53:05.664Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[2]++;cov_dsu7d9qvm.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_dsu7d9qvm.b[0][0]++;cov_dsu7d9qvm.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[0][1]++;}cov_dsu7d9qvm.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_dsu7d9qvm.b[1][0]++;cov_dsu7d9qvm.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[1][1]++;}cov_dsu7d9qvm.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_dsu7d9qvm.b[2][0]++;cov_dsu7d9qvm.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[2][1]++;}\n  //can create my planet since all test pass\n  let planet = /* istanbul ignore next */(cov_dsu7d9qvm.s[25]++, new Planet(request.body.name, request.body.content)); /* istanbul ignore next */cov_dsu7d9qvm.s[26]++;\n  planets.push(planet); /* istanbul ignore next */cov_dsu7d9qvm.s[27]++;\n  sendJSON(response, 200, planet);\n}","timestamp":"2017-12-07T19:53:05.664Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T19:53:05.664Z"}
{"level":"info","message":"/api/planet","timestamp":"2017-12-07T19:53:05.664Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.url.query.id');\n    // sendStatus(response, 200, planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;console.log(planets); /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;\n    sendJSON(response, 200, planets); /* istanbul ignore next */cov_dsu7d9qvm.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[34]++;\n  if (!planets.find(id => {/* istanbul ignore next */cov_dsu7d9qvm.f[4]++;cov_dsu7d9qvm.s[35]++;return id === request.url.query.id;})) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[36]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[37]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[39]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[40]++;sendJSON(response, 200, planets[request.url.query.id]); /* istanbul ignore next */cov_dsu7d9qvm.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-07T19:53:05.664Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T19:53:05.706Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T19:53:05.760Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T19:53:05.761Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[2]++;cov_dsu7d9qvm.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_dsu7d9qvm.b[0][0]++;cov_dsu7d9qvm.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[0][1]++;}cov_dsu7d9qvm.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_dsu7d9qvm.b[1][0]++;cov_dsu7d9qvm.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[1][1]++;}cov_dsu7d9qvm.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_dsu7d9qvm.b[2][0]++;cov_dsu7d9qvm.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[2][1]++;}\n  //can create my planet since all test pass\n  let planet = /* istanbul ignore next */(cov_dsu7d9qvm.s[25]++, new Planet(request.body.name, request.body.content)); /* istanbul ignore next */cov_dsu7d9qvm.s[26]++;\n  planets.push(planet); /* istanbul ignore next */cov_dsu7d9qvm.s[27]++;\n  sendJSON(response, 200, planet);\n}","timestamp":"2017-12-07T19:53:05.761Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T19:53:05.762Z"}
{"id":"3dd6ec20-db88-11e7-adfe-33522c3160d3","discoverDate":"2017-01-03T17:06:35.620Z","name":"BD032562b","content":"11h50m1555sDeclination02d45m365s","level":"info","message":"","timestamp":"2017-12-07T19:53:05.762Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T19:53:05.773Z"}
{"level":"info","message":"__REQUEST_ERROR","timestamp":"2017-12-07T19:53:05.774Z"}
{"message":"Unexpected token b in JSON at position 2","stack":"SyntaxError: Unexpected token b in JSON at position 2\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/home/seth/codefellows/401/lab/08-09-vanilla-rest-server/lab-seth/lib/request-parser.js:29:31)\n    at emitNone (events.js:106:13)\n    at IncomingMessage.emit (events.js:208:7)\n    at endReadableNT (_stream_readable.js:1056:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-07T19:53:05.774Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T19:53:05.777Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T19:53:05.778Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.url.query.id');\n    // sendStatus(response, 200, planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;console.log(planets); /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;\n    sendJSON(response, 200, planets); /* istanbul ignore next */cov_dsu7d9qvm.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[34]++;\n  if (!planets.find(id => {/* istanbul ignore next */cov_dsu7d9qvm.f[4]++;cov_dsu7d9qvm.s[35]++;return id === request.url.query.id;})) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[36]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[37]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[39]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[40]++;sendJSON(response, 200, planets[request.url.query.id]); /* istanbul ignore next */cov_dsu7d9qvm.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-07T19:53:05.778Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T19:53:05.778Z"}
[{"id":"3dd6ec20-db88-11e7-adfe-33522c3160d3","discoverDate":"2017-01-03T17:06:35.620Z","name":"BD032562b","content":"11h50m1555sDeclination02d45m365s"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T19:53:05.784Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T19:53:05.785Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.url.query.id');\n    // sendStatus(response, 200, planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;console.log(planets); /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;\n    sendJSON(response, 200, planets); /* istanbul ignore next */cov_dsu7d9qvm.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[34]++;\n  if (!planets.find(id => {/* istanbul ignore next */cov_dsu7d9qvm.f[4]++;cov_dsu7d9qvm.s[35]++;return id === request.url.query.id;})) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[36]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[37]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[39]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[40]++;sendJSON(response, 200, planets[request.url.query.id]); /* istanbul ignore next */cov_dsu7d9qvm.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-07T19:53:05.785Z"}
{"level":"info","message":"Responding with a 404 code due to Planet ID not found","timestamp":"2017-12-07T19:53:05.785Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T19:59:58.170Z"}
{"level":"info","message":"/api/planet","timestamp":"2017-12-07T19:59:58.171Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[2]++;cov_dsu7d9qvm.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_dsu7d9qvm.b[0][0]++;cov_dsu7d9qvm.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[0][1]++;}cov_dsu7d9qvm.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_dsu7d9qvm.b[1][0]++;cov_dsu7d9qvm.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[1][1]++;}cov_dsu7d9qvm.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_dsu7d9qvm.b[2][0]++;cov_dsu7d9qvm.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[2][1]++;}\n  //can create my planet since all test pass\n  let planet = /* istanbul ignore next */(cov_dsu7d9qvm.s[25]++, new Planet(request.body.name, request.body.content)); /* istanbul ignore next */cov_dsu7d9qvm.s[26]++;\n  planets.push(planet); /* istanbul ignore next */cov_dsu7d9qvm.s[27]++;\n  sendJSON(response, 200, planet);\n}","timestamp":"2017-12-07T19:59:58.171Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T19:59:58.171Z"}
{"level":"info","message":"/api/planet","timestamp":"2017-12-07T19:59:58.171Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.url.query.id');\n    // sendStatus(response, 200, planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;console.log(planets); /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;\n    sendJSON(response, 200, planets); /* istanbul ignore next */cov_dsu7d9qvm.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[34]++;\n  if (!planets.find(id => {/* istanbul ignore next */cov_dsu7d9qvm.f[4]++;cov_dsu7d9qvm.s[35]++;return id === request.url.query.id;})) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[36]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[37]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[39]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[40]++;sendJSON(response, 200, planets[request.url.query.id]); /* istanbul ignore next */cov_dsu7d9qvm.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-07T19:59:58.171Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T19:59:58.211Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T19:59:58.268Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T19:59:58.270Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[2]++;cov_dsu7d9qvm.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_dsu7d9qvm.b[0][0]++;cov_dsu7d9qvm.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[0][1]++;}cov_dsu7d9qvm.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_dsu7d9qvm.b[1][0]++;cov_dsu7d9qvm.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[1][1]++;}cov_dsu7d9qvm.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_dsu7d9qvm.b[2][0]++;cov_dsu7d9qvm.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[2][1]++;}\n  //can create my planet since all test pass\n  let planet = /* istanbul ignore next */(cov_dsu7d9qvm.s[25]++, new Planet(request.body.name, request.body.content)); /* istanbul ignore next */cov_dsu7d9qvm.s[26]++;\n  planets.push(planet); /* istanbul ignore next */cov_dsu7d9qvm.s[27]++;\n  sendJSON(response, 200, planet);\n}","timestamp":"2017-12-07T19:59:58.270Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T19:59:58.270Z"}
{"id":"33b6a5e0-db89-11e7-bc51-09f6a5e973d1","discoverDate":"2017-02-01T19:36:38.006Z","name":"BD032562b","content":"11h50m1555sDeclination02d45m365s","level":"info","message":"","timestamp":"2017-12-07T19:59:58.270Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T19:59:58.279Z"}
{"level":"info","message":"__REQUEST_ERROR","timestamp":"2017-12-07T19:59:58.280Z"}
{"message":"Unexpected token b in JSON at position 2","stack":"SyntaxError: Unexpected token b in JSON at position 2\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/home/seth/codefellows/401/lab/08-09-vanilla-rest-server/lab-seth/lib/request-parser.js:29:31)\n    at emitNone (events.js:106:13)\n    at IncomingMessage.emit (events.js:208:7)\n    at endReadableNT (_stream_readable.js:1056:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-07T19:59:58.280Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T19:59:58.282Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T19:59:58.283Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.url.query.id');\n    // sendStatus(response, 200, planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;console.log(planets); /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;\n    sendJSON(response, 200, planets); /* istanbul ignore next */cov_dsu7d9qvm.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[34]++;\n  if (!planets.find(id => {/* istanbul ignore next */cov_dsu7d9qvm.f[4]++;cov_dsu7d9qvm.s[35]++;return id === request.url.query.id;})) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[36]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[37]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[39]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[40]++;sendJSON(response, 200, planets[request.url.query.id]); /* istanbul ignore next */cov_dsu7d9qvm.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-07T19:59:58.283Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T19:59:58.285Z"}
[{"id":"33b6a5e0-db89-11e7-bc51-09f6a5e973d1","discoverDate":"2017-02-01T19:36:38.006Z","name":"BD032562b","content":"11h50m1555sDeclination02d45m365s"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T19:59:58.290Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T19:59:58.291Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.url.query.id');\n    // sendStatus(response, 200, planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;console.log(planets); /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;\n    sendJSON(response, 200, planets); /* istanbul ignore next */cov_dsu7d9qvm.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[34]++;\n  if (!planets.find(id => {/* istanbul ignore next */cov_dsu7d9qvm.f[4]++;cov_dsu7d9qvm.s[35]++;return id === request.url.query.id;})) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[36]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[37]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[39]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[40]++;sendJSON(response, 200, planets[request.url.query.id]); /* istanbul ignore next */cov_dsu7d9qvm.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-07T19:59:58.292Z"}
{"level":"info","message":"Responding with a 404 code due to Planet ID not found","timestamp":"2017-12-07T19:59:58.292Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T19:59:58.294Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T19:59:58.294Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.url.query.id');\n    // sendStatus(response, 200, planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;console.log(planets); /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;\n    sendJSON(response, 200, planets); /* istanbul ignore next */cov_dsu7d9qvm.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[34]++;\n  if (!planets.find(id => {/* istanbul ignore next */cov_dsu7d9qvm.f[4]++;cov_dsu7d9qvm.s[35]++;return id === request.url.query.id;})) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[36]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[37]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[39]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[40]++;sendJSON(response, 200, planets[request.url.query.id]); /* istanbul ignore next */cov_dsu7d9qvm.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-07T19:59:58.294Z"}
{"level":"info","message":"Responding with a 404 code due to Planet ID not found","timestamp":"2017-12-07T19:59:58.294Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T20:00:10.148Z"}
{"level":"info","message":"/api/planet","timestamp":"2017-12-07T20:00:10.149Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[2]++;cov_dsu7d9qvm.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_dsu7d9qvm.b[0][0]++;cov_dsu7d9qvm.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[0][1]++;}cov_dsu7d9qvm.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_dsu7d9qvm.b[1][0]++;cov_dsu7d9qvm.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[1][1]++;}cov_dsu7d9qvm.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_dsu7d9qvm.b[2][0]++;cov_dsu7d9qvm.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[2][1]++;}\n  //can create my planet since all test pass\n  let planet = /* istanbul ignore next */(cov_dsu7d9qvm.s[25]++, new Planet(request.body.name, request.body.content)); /* istanbul ignore next */cov_dsu7d9qvm.s[26]++;\n  planets.push(planet); /* istanbul ignore next */cov_dsu7d9qvm.s[27]++;\n  sendJSON(response, 200, planet);\n}","timestamp":"2017-12-07T20:00:10.149Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T20:00:10.149Z"}
{"level":"info","message":"/api/planet","timestamp":"2017-12-07T20:00:10.149Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.url.query.id');\n    // sendStatus(response, 200, planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;console.log(planets); /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;\n    sendJSON(response, 200, planets); /* istanbul ignore next */cov_dsu7d9qvm.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[34]++;\n  if (!planets.find(id => {/* istanbul ignore next */cov_dsu7d9qvm.f[4]++;cov_dsu7d9qvm.s[35]++;return id === request.url.query.id;})) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[36]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[37]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[39]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[40]++;sendJSON(response, 200, planets[request.url.query.id]); /* istanbul ignore next */cov_dsu7d9qvm.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-07T20:00:10.149Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T20:00:10.190Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T20:00:10.248Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T20:00:10.250Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[2]++;cov_dsu7d9qvm.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_dsu7d9qvm.b[0][0]++;cov_dsu7d9qvm.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[0][1]++;}cov_dsu7d9qvm.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_dsu7d9qvm.b[1][0]++;cov_dsu7d9qvm.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[1][1]++;}cov_dsu7d9qvm.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_dsu7d9qvm.b[2][0]++;cov_dsu7d9qvm.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[2][1]++;}\n  //can create my planet since all test pass\n  let planet = /* istanbul ignore next */(cov_dsu7d9qvm.s[25]++, new Planet(request.body.name, request.body.content)); /* istanbul ignore next */cov_dsu7d9qvm.s[26]++;\n  planets.push(planet); /* istanbul ignore next */cov_dsu7d9qvm.s[27]++;\n  sendJSON(response, 200, planet);\n}","timestamp":"2017-12-07T20:00:10.250Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T20:00:10.251Z"}
{"id":"3adaa6a0-db89-11e7-a576-bdceb5adc659","discoverDate":"2016-12-17T08:46:34.635Z","name":"BD032562b","content":"11h50m1555sDeclination02d45m365s","level":"info","message":"","timestamp":"2017-12-07T20:00:10.251Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T20:00:10.259Z"}
{"level":"info","message":"__REQUEST_ERROR","timestamp":"2017-12-07T20:00:10.260Z"}
{"message":"Unexpected token b in JSON at position 2","stack":"SyntaxError: Unexpected token b in JSON at position 2\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/home/seth/codefellows/401/lab/08-09-vanilla-rest-server/lab-seth/lib/request-parser.js:29:31)\n    at emitNone (events.js:106:13)\n    at IncomingMessage.emit (events.js:208:7)\n    at endReadableNT (_stream_readable.js:1056:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-07T20:00:10.260Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T20:00:10.262Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T20:00:10.263Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.url.query.id');\n    // sendStatus(response, 200, planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;console.log(planets); /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;\n    sendJSON(response, 200, planets); /* istanbul ignore next */cov_dsu7d9qvm.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[34]++;\n  if (!planets.find(id => {/* istanbul ignore next */cov_dsu7d9qvm.f[4]++;cov_dsu7d9qvm.s[35]++;return id === request.url.query.id;})) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[36]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[37]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[39]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[40]++;sendJSON(response, 200, planets[request.url.query.id]); /* istanbul ignore next */cov_dsu7d9qvm.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-07T20:00:10.263Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T20:00:10.264Z"}
[{"id":"3adaa6a0-db89-11e7-a576-bdceb5adc659","discoverDate":"2016-12-17T08:46:34.635Z","name":"BD032562b","content":"11h50m1555sDeclination02d45m365s"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T20:00:10.267Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T20:00:10.268Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.url.query.id');\n    // sendStatus(response, 200, planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;console.log(planets); /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;\n    sendJSON(response, 200, planets); /* istanbul ignore next */cov_dsu7d9qvm.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[34]++;\n  if (!planets.find(id => {/* istanbul ignore next */cov_dsu7d9qvm.f[4]++;cov_dsu7d9qvm.s[35]++;return id === request.url.query.id;})) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[36]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[37]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[39]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[40]++;sendJSON(response, 200, planets[request.url.query.id]); /* istanbul ignore next */cov_dsu7d9qvm.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-07T20:00:10.268Z"}
{"level":"info","message":"Responding with a 404 code due to Planet ID not found","timestamp":"2017-12-07T20:00:10.268Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T20:00:10.271Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T20:00:10.271Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.url.query.id');\n    // sendStatus(response, 200, planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;console.log(planets); /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;\n    sendJSON(response, 200, planets); /* istanbul ignore next */cov_dsu7d9qvm.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[34]++;\n  if (!planets.find(id => {/* istanbul ignore next */cov_dsu7d9qvm.f[4]++;cov_dsu7d9qvm.s[35]++;return id === request.url.query.id;})) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[36]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[37]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[39]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[40]++;sendJSON(response, 200, planets[request.url.query.id]); /* istanbul ignore next */cov_dsu7d9qvm.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-07T20:00:10.271Z"}
{"level":"info","message":"Responding with a 404 code due to Planet ID not found","timestamp":"2017-12-07T20:00:10.271Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T20:02:44.534Z"}
{"level":"info","message":"/api/planet","timestamp":"2017-12-07T20:02:44.535Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[2]++;cov_dsu7d9qvm.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_dsu7d9qvm.b[0][0]++;cov_dsu7d9qvm.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[0][1]++;}cov_dsu7d9qvm.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_dsu7d9qvm.b[1][0]++;cov_dsu7d9qvm.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[1][1]++;}cov_dsu7d9qvm.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_dsu7d9qvm.b[2][0]++;cov_dsu7d9qvm.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[2][1]++;}\n  //can create my planet since all test pass\n  let planet = /* istanbul ignore next */(cov_dsu7d9qvm.s[25]++, new Planet(request.body.name, request.body.content)); /* istanbul ignore next */cov_dsu7d9qvm.s[26]++;\n  planets.push(planet); /* istanbul ignore next */cov_dsu7d9qvm.s[27]++;\n  sendJSON(response, 200, planet);\n}","timestamp":"2017-12-07T20:02:44.535Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T20:02:44.535Z"}
{"level":"info","message":"/api/planet","timestamp":"2017-12-07T20:02:44.535Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.url.query.id');\n    // sendStatus(response, 200, planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;console.log(planets); /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;\n    sendJSON(response, 200, planets); /* istanbul ignore next */cov_dsu7d9qvm.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[34]++;\n  if (!planets.find(id => {/* istanbul ignore next */cov_dsu7d9qvm.f[4]++;cov_dsu7d9qvm.s[35]++;return id === request.url.query.id;})) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[36]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[37]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[39]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[40]++;sendJSON(response, 200, planets.find(id => {/* istanbul ignore next */cov_dsu7d9qvm.f[5]++;cov_dsu7d9qvm.s[41]++;return id === request.url.query.id;})); /* istanbul ignore next */cov_dsu7d9qvm.s[42]++;\n    return;\n  }\n}","timestamp":"2017-12-07T20:02:44.535Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T20:02:44.580Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T20:02:44.637Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T20:02:44.638Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[2]++;cov_dsu7d9qvm.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_dsu7d9qvm.b[0][0]++;cov_dsu7d9qvm.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[0][1]++;}cov_dsu7d9qvm.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_dsu7d9qvm.b[1][0]++;cov_dsu7d9qvm.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[1][1]++;}cov_dsu7d9qvm.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_dsu7d9qvm.b[2][0]++;cov_dsu7d9qvm.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[2][1]++;}\n  //can create my planet since all test pass\n  let planet = /* istanbul ignore next */(cov_dsu7d9qvm.s[25]++, new Planet(request.body.name, request.body.content)); /* istanbul ignore next */cov_dsu7d9qvm.s[26]++;\n  planets.push(planet); /* istanbul ignore next */cov_dsu7d9qvm.s[27]++;\n  sendJSON(response, 200, planet);\n}","timestamp":"2017-12-07T20:02:44.638Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T20:02:44.639Z"}
{"id":"96e08af0-db89-11e7-baa1-cdc0c2365f88","discoverDate":"2017-03-04T15:52:23.327Z","name":"BD032562b","content":"11h50m1555sDeclination02d45m365s","level":"info","message":"","timestamp":"2017-12-07T20:02:44.639Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T20:02:44.648Z"}
{"level":"info","message":"__REQUEST_ERROR","timestamp":"2017-12-07T20:02:44.649Z"}
{"message":"Unexpected token b in JSON at position 2","stack":"SyntaxError: Unexpected token b in JSON at position 2\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/home/seth/codefellows/401/lab/08-09-vanilla-rest-server/lab-seth/lib/request-parser.js:29:31)\n    at emitNone (events.js:106:13)\n    at IncomingMessage.emit (events.js:208:7)\n    at endReadableNT (_stream_readable.js:1056:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-07T20:02:44.649Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T20:02:44.651Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T20:02:44.651Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.url.query.id');\n    // sendStatus(response, 200, planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;console.log(planets); /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;\n    sendJSON(response, 200, planets); /* istanbul ignore next */cov_dsu7d9qvm.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[34]++;\n  if (!planets.find(id => {/* istanbul ignore next */cov_dsu7d9qvm.f[4]++;cov_dsu7d9qvm.s[35]++;return id === request.url.query.id;})) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[36]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[37]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[39]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[40]++;sendJSON(response, 200, planets.find(id => {/* istanbul ignore next */cov_dsu7d9qvm.f[5]++;cov_dsu7d9qvm.s[41]++;return id === request.url.query.id;})); /* istanbul ignore next */cov_dsu7d9qvm.s[42]++;\n    return;\n  }\n}","timestamp":"2017-12-07T20:02:44.652Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T20:02:44.653Z"}
[{"id":"96e08af0-db89-11e7-baa1-cdc0c2365f88","discoverDate":"2017-03-04T15:52:23.327Z","name":"BD032562b","content":"11h50m1555sDeclination02d45m365s"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T20:02:44.656Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T20:02:44.657Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.url.query.id');\n    // sendStatus(response, 200, planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;console.log(planets); /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;\n    sendJSON(response, 200, planets); /* istanbul ignore next */cov_dsu7d9qvm.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[34]++;\n  if (!planets.find(id => {/* istanbul ignore next */cov_dsu7d9qvm.f[4]++;cov_dsu7d9qvm.s[35]++;return id === request.url.query.id;})) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[36]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[37]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[39]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[40]++;sendJSON(response, 200, planets.find(id => {/* istanbul ignore next */cov_dsu7d9qvm.f[5]++;cov_dsu7d9qvm.s[41]++;return id === request.url.query.id;})); /* istanbul ignore next */cov_dsu7d9qvm.s[42]++;\n    return;\n  }\n}","timestamp":"2017-12-07T20:02:44.657Z"}
{"level":"info","message":"Responding with a 404 code due to Planet ID not found","timestamp":"2017-12-07T20:02:44.657Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T20:02:44.660Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T20:02:44.660Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.url.query.id');\n    // sendStatus(response, 200, planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;console.log(planets); /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;\n    sendJSON(response, 200, planets); /* istanbul ignore next */cov_dsu7d9qvm.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[34]++;\n  if (!planets.find(id => {/* istanbul ignore next */cov_dsu7d9qvm.f[4]++;cov_dsu7d9qvm.s[35]++;return id === request.url.query.id;})) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[36]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[37]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[39]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[40]++;sendJSON(response, 200, planets.find(id => {/* istanbul ignore next */cov_dsu7d9qvm.f[5]++;cov_dsu7d9qvm.s[41]++;return id === request.url.query.id;})); /* istanbul ignore next */cov_dsu7d9qvm.s[42]++;\n    return;\n  }\n}","timestamp":"2017-12-07T20:02:44.661Z"}
{"level":"info","message":"Responding with a 404 code due to Planet ID not found","timestamp":"2017-12-07T20:02:44.661Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T21:21:56.800Z"}
{"level":"info","message":"/api/planet","timestamp":"2017-12-07T21:21:56.800Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[2]++;cov_dsu7d9qvm.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_dsu7d9qvm.b[0][0]++;cov_dsu7d9qvm.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[0][1]++;}cov_dsu7d9qvm.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_dsu7d9qvm.b[1][0]++;cov_dsu7d9qvm.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[1][1]++;}cov_dsu7d9qvm.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_dsu7d9qvm.b[2][0]++;cov_dsu7d9qvm.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[2][1]++;}\n  //can create my planet since all test pass\n  let planet = /* istanbul ignore next */(cov_dsu7d9qvm.s[25]++, new Planet(request.body.name, request.body.content)); /* istanbul ignore next */cov_dsu7d9qvm.s[26]++;\n  planets.push(planet); /* istanbul ignore next */cov_dsu7d9qvm.s[27]++;\n  sendJSON(response, 200, planet);\n}","timestamp":"2017-12-07T21:21:56.800Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T21:21:56.801Z"}
{"level":"info","message":"/api/planet","timestamp":"2017-12-07T21:21:56.801Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.url.query.id');\n    // sendStatus(response, 200, planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;console.log(planets); /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;\n    sendJSON(response, 200, planets); /* istanbul ignore next */cov_dsu7d9qvm.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[34]++;\n  if (!planets.find(id => {/* istanbul ignore next */cov_dsu7d9qvm.f[4]++;cov_dsu7d9qvm.s[35]++;return id === request.url.query.id;})) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[36]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[37]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[39]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[40]++;sendJSON(response, 200, planets.find(id => {/* istanbul ignore next */cov_dsu7d9qvm.f[5]++;cov_dsu7d9qvm.s[41]++;return id === request.url.query.id;})); /* istanbul ignore next */cov_dsu7d9qvm.s[42]++;\n    return;\n  }\n}","timestamp":"2017-12-07T21:21:56.801Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T21:21:56.841Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T21:21:56.897Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T21:21:56.898Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[2]++;cov_dsu7d9qvm.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_dsu7d9qvm.b[0][0]++;cov_dsu7d9qvm.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[0][1]++;}cov_dsu7d9qvm.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_dsu7d9qvm.b[1][0]++;cov_dsu7d9qvm.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[1][1]++;}cov_dsu7d9qvm.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_dsu7d9qvm.b[2][0]++;cov_dsu7d9qvm.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[2][1]++;}\n  //can create my planet since all test pass\n  let planet = /* istanbul ignore next */(cov_dsu7d9qvm.s[25]++, new Planet(request.body.name, request.body.content)); /* istanbul ignore next */cov_dsu7d9qvm.s[26]++;\n  planets.push(planet); /* istanbul ignore next */cov_dsu7d9qvm.s[27]++;\n  sendJSON(response, 200, planet);\n}","timestamp":"2017-12-07T21:21:56.898Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T21:21:56.899Z"}
{"id":"a771b820-db94-11e7-83de-83885b07b587","discoverDate":"2017-04-05T17:30:04.827Z","name":"BD032562b","content":"11h50m1555sDeclination02d45m365s","level":"info","message":"","timestamp":"2017-12-07T21:21:56.899Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T21:21:56.908Z"}
{"level":"info","message":"__REQUEST_ERROR","timestamp":"2017-12-07T21:21:56.909Z"}
{"message":"Unexpected token b in JSON at position 2","stack":"SyntaxError: Unexpected token b in JSON at position 2\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/home/seth/codefellows/401/lab/08-09-vanilla-rest-server/lab-seth/lib/request-parser.js:29:31)\n    at emitNone (events.js:106:13)\n    at IncomingMessage.emit (events.js:208:7)\n    at endReadableNT (_stream_readable.js:1056:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-07T21:21:56.909Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T21:21:56.912Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T21:21:56.912Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.url.query.id');\n    // sendStatus(response, 200, planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;console.log(planets); /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;\n    sendJSON(response, 200, planets); /* istanbul ignore next */cov_dsu7d9qvm.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[34]++;\n  if (!planets.find(id => {/* istanbul ignore next */cov_dsu7d9qvm.f[4]++;cov_dsu7d9qvm.s[35]++;return id === request.url.query.id;})) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[36]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[37]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[39]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[40]++;sendJSON(response, 200, planets.find(id => {/* istanbul ignore next */cov_dsu7d9qvm.f[5]++;cov_dsu7d9qvm.s[41]++;return id === request.url.query.id;})); /* istanbul ignore next */cov_dsu7d9qvm.s[42]++;\n    return;\n  }\n}","timestamp":"2017-12-07T21:21:56.912Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T21:21:56.914Z"}
[{"id":"a771b820-db94-11e7-83de-83885b07b587","discoverDate":"2017-04-05T17:30:04.827Z","name":"BD032562b","content":"11h50m1555sDeclination02d45m365s"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T21:21:56.917Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T21:21:56.918Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.url.query.id');\n    // sendStatus(response, 200, planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;console.log(planets); /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;\n    sendJSON(response, 200, planets); /* istanbul ignore next */cov_dsu7d9qvm.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[34]++;\n  if (!planets.find(id => {/* istanbul ignore next */cov_dsu7d9qvm.f[4]++;cov_dsu7d9qvm.s[35]++;return id === request.url.query.id;})) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[36]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[37]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[39]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[40]++;sendJSON(response, 200, planets.find(id => {/* istanbul ignore next */cov_dsu7d9qvm.f[5]++;cov_dsu7d9qvm.s[41]++;return id === request.url.query.id;})); /* istanbul ignore next */cov_dsu7d9qvm.s[42]++;\n    return;\n  }\n}","timestamp":"2017-12-07T21:21:56.918Z"}
{"level":"info","message":"Responding with a 404 code due to Planet ID not found","timestamp":"2017-12-07T21:21:56.918Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T21:21:56.921Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T21:21:56.921Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.url.query.id');\n    // sendStatus(response, 200, planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;console.log(planets); /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;\n    sendJSON(response, 200, planets); /* istanbul ignore next */cov_dsu7d9qvm.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[34]++;\n  if (!planets.find(id => {/* istanbul ignore next */cov_dsu7d9qvm.f[4]++;cov_dsu7d9qvm.s[35]++;return id === request.url.query.id;})) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[36]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[37]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[39]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[40]++;sendJSON(response, 200, planets.find(id => {/* istanbul ignore next */cov_dsu7d9qvm.f[5]++;cov_dsu7d9qvm.s[41]++;return id === request.url.query.id;})); /* istanbul ignore next */cov_dsu7d9qvm.s[42]++;\n    return;\n  }\n}","timestamp":"2017-12-07T21:21:56.921Z"}
{"level":"info","message":"Responding with a 404 code due to Planet ID not found","timestamp":"2017-12-07T21:21:56.921Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T21:25:04.252Z"}
{"level":"info","message":"/api/planet","timestamp":"2017-12-07T21:25:04.252Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[2]++;cov_dsu7d9qvm.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_dsu7d9qvm.b[0][0]++;cov_dsu7d9qvm.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[0][1]++;}cov_dsu7d9qvm.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_dsu7d9qvm.b[1][0]++;cov_dsu7d9qvm.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[1][1]++;}cov_dsu7d9qvm.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_dsu7d9qvm.b[2][0]++;cov_dsu7d9qvm.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[2][1]++;}\n  //can create my planet since all test pass\n  let planet = /* istanbul ignore next */(cov_dsu7d9qvm.s[25]++, new Planet(request.body.name, request.body.content)); /* istanbul ignore next */cov_dsu7d9qvm.s[26]++;\n  planets.push(planet); /* istanbul ignore next */cov_dsu7d9qvm.s[27]++;\n  sendJSON(response, 200, planet);\n}","timestamp":"2017-12-07T21:25:04.252Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T21:25:04.252Z"}
{"level":"info","message":"/api/planet","timestamp":"2017-12-07T21:25:04.252Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.url.query.id');\n    // sendStatus(response, 200, planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;console.log(planets); /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;\n    sendJSON(response, 200, planets); /* istanbul ignore next */cov_dsu7d9qvm.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[34]++;\n  if (!planets.find(id => {/* istanbul ignore next */cov_dsu7d9qvm.f[4]++;cov_dsu7d9qvm.s[35]++;return id === request.url.query.id;})) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[36]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[37]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[39]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[40]++;sendJSON(response, 200, planets.find(id => {/* istanbul ignore next */cov_dsu7d9qvm.f[5]++;cov_dsu7d9qvm.s[41]++;return id === request.url.query.id;})); /* istanbul ignore next */cov_dsu7d9qvm.s[42]++;\n    return;\n  }\n}","timestamp":"2017-12-07T21:25:04.252Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T21:25:04.298Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T21:25:04.351Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T21:25:04.353Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[2]++;cov_dsu7d9qvm.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_dsu7d9qvm.b[0][0]++;cov_dsu7d9qvm.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[0][1]++;}cov_dsu7d9qvm.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_dsu7d9qvm.b[1][0]++;cov_dsu7d9qvm.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[1][1]++;}cov_dsu7d9qvm.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_dsu7d9qvm.b[2][0]++;cov_dsu7d9qvm.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[2][1]++;}\n  //can create my planet since all test pass\n  let planet = /* istanbul ignore next */(cov_dsu7d9qvm.s[25]++, new Planet(request.body.name, request.body.content)); /* istanbul ignore next */cov_dsu7d9qvm.s[26]++;\n  planets.push(planet); /* istanbul ignore next */cov_dsu7d9qvm.s[27]++;\n  sendJSON(response, 200, planet);\n}","timestamp":"2017-12-07T21:25:04.353Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T21:25:04.354Z"}
{"id":"172d3c20-db95-11e7-a1af-bf75d2eae71b","discoverDate":"2017-10-27T01:06:12.317Z","name":"BD032562b","content":"11h50m1555sDeclination02d45m365s","level":"info","message":"","timestamp":"2017-12-07T21:25:04.354Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T21:25:04.363Z"}
{"level":"info","message":"__REQUEST_ERROR","timestamp":"2017-12-07T21:25:04.363Z"}
{"message":"Unexpected token b in JSON at position 2","stack":"SyntaxError: Unexpected token b in JSON at position 2\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/home/seth/codefellows/401/lab/08-09-vanilla-rest-server/lab-seth/lib/request-parser.js:29:31)\n    at emitNone (events.js:106:13)\n    at IncomingMessage.emit (events.js:208:7)\n    at endReadableNT (_stream_readable.js:1056:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-07T21:25:04.363Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T21:25:04.366Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T21:25:04.366Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.url.query.id');\n    // sendStatus(response, 200, planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;console.log(planets); /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;\n    sendJSON(response, 200, planets); /* istanbul ignore next */cov_dsu7d9qvm.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[34]++;\n  if (!planets.find(id => {/* istanbul ignore next */cov_dsu7d9qvm.f[4]++;cov_dsu7d9qvm.s[35]++;return id === request.url.query.id;})) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[36]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[37]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[39]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[40]++;sendJSON(response, 200, planets.find(id => {/* istanbul ignore next */cov_dsu7d9qvm.f[5]++;cov_dsu7d9qvm.s[41]++;return id === request.url.query.id;})); /* istanbul ignore next */cov_dsu7d9qvm.s[42]++;\n    return;\n  }\n}","timestamp":"2017-12-07T21:25:04.366Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T21:25:04.368Z"}
[{"id":"172d3c20-db95-11e7-a1af-bf75d2eae71b","discoverDate":"2017-10-27T01:06:12.317Z","name":"BD032562b","content":"11h50m1555sDeclination02d45m365s"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T21:25:04.370Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T21:25:04.371Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.url.query.id');\n    // sendStatus(response, 200, planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;console.log(planets); /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;\n    sendJSON(response, 200, planets); /* istanbul ignore next */cov_dsu7d9qvm.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[34]++;\n  if (!planets.find(id => {/* istanbul ignore next */cov_dsu7d9qvm.f[4]++;cov_dsu7d9qvm.s[35]++;return id === request.url.query.id;})) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[36]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[37]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[39]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[40]++;sendJSON(response, 200, planets.find(id => {/* istanbul ignore next */cov_dsu7d9qvm.f[5]++;cov_dsu7d9qvm.s[41]++;return id === request.url.query.id;})); /* istanbul ignore next */cov_dsu7d9qvm.s[42]++;\n    return;\n  }\n}","timestamp":"2017-12-07T21:25:04.371Z"}
{"level":"info","message":"Responding with a 404 code due to Planet ID not found","timestamp":"2017-12-07T21:25:04.371Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T21:25:04.373Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T21:25:04.374Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.url.query.id');\n    // sendStatus(response, 200, planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;console.log(planets); /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;\n    sendJSON(response, 200, planets); /* istanbul ignore next */cov_dsu7d9qvm.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[34]++;\n  if (!planets.find(id => {/* istanbul ignore next */cov_dsu7d9qvm.f[4]++;cov_dsu7d9qvm.s[35]++;return id === request.url.query.id;})) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[36]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[37]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[39]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[40]++;sendJSON(response, 200, planets.find(id => {/* istanbul ignore next */cov_dsu7d9qvm.f[5]++;cov_dsu7d9qvm.s[41]++;return id === request.url.query.id;})); /* istanbul ignore next */cov_dsu7d9qvm.s[42]++;\n    return;\n  }\n}","timestamp":"2017-12-07T21:25:04.374Z"}
{"level":"info","message":"Responding with a 404 code due to Planet ID not found","timestamp":"2017-12-07T21:25:04.374Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T21:28:58.361Z"}
{"level":"info","message":"/api/planet","timestamp":"2017-12-07T21:28:58.361Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[2]++;cov_dsu7d9qvm.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_dsu7d9qvm.b[0][0]++;cov_dsu7d9qvm.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[0][1]++;}cov_dsu7d9qvm.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_dsu7d9qvm.b[1][0]++;cov_dsu7d9qvm.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[1][1]++;}cov_dsu7d9qvm.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_dsu7d9qvm.b[2][0]++;cov_dsu7d9qvm.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[2][1]++;}\n  //can create my planet since all test pass\n  let planet = /* istanbul ignore next */(cov_dsu7d9qvm.s[25]++, new Planet(request.body.name, request.body.content)); /* istanbul ignore next */cov_dsu7d9qvm.s[26]++;\n  planets.push(planet); /* istanbul ignore next */cov_dsu7d9qvm.s[27]++;\n  sendJSON(response, 200, planet);\n}","timestamp":"2017-12-07T21:28:58.361Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T21:28:58.361Z"}
{"level":"info","message":"/api/planet","timestamp":"2017-12-07T21:28:58.361Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.url.query.id');\n    // sendStatus(response, 200, planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;console.log(planets); /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;\n    sendJSON(response, 200, planets); /* istanbul ignore next */cov_dsu7d9qvm.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[34]++;\n  if (!planets.find(id => {/* istanbul ignore next */cov_dsu7d9qvm.f[4]++;cov_dsu7d9qvm.s[35]++;return id === request.url.query.id;})) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[36]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[37]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[39]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[40]++;sendJSON(response, 200, planets.find(id => {/* istanbul ignore next */cov_dsu7d9qvm.f[5]++;cov_dsu7d9qvm.s[41]++;return id === request.url.query.id;})); /* istanbul ignore next */cov_dsu7d9qvm.s[42]++;\n    return;\n  }\n}","timestamp":"2017-12-07T21:28:58.361Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T21:28:58.405Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T21:28:58.462Z"}
{"level":"info","message":"__REQUEST_ERROR","timestamp":"2017-12-07T21:28:58.463Z"}
{"message":"Cannot read property 'indexOf' of undefined","stack":"TypeError: Cannot read property 'indexOf' of undefined\n    at IncomingMessage.request.on (/home/seth/codefellows/401/lab/08-09-vanilla-rest-server/lab-seth/lib/request-parser.js:28:45)\n    at emitNone (events.js:106:13)\n    at IncomingMessage.emit (events.js:208:7)\n    at endReadableNT (_stream_readable.js:1056:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-07T21:28:58.463Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T21:28:58.470Z"}
{"level":"info","message":"__REQUEST_ERROR","timestamp":"2017-12-07T21:28:58.470Z"}
{"message":"Cannot read property 'indexOf' of undefined","stack":"TypeError: Cannot read property 'indexOf' of undefined\n    at IncomingMessage.request.on (/home/seth/codefellows/401/lab/08-09-vanilla-rest-server/lab-seth/lib/request-parser.js:28:45)\n    at emitNone (events.js:106:13)\n    at IncomingMessage.emit (events.js:208:7)\n    at endReadableNT (_stream_readable.js:1056:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-07T21:28:58.470Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T21:28:58.474Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T21:28:58.474Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.url.query.id');\n    // sendStatus(response, 200, planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;console.log(planets); /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;\n    sendJSON(response, 200, planets); /* istanbul ignore next */cov_dsu7d9qvm.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[34]++;\n  if (!planets.find(id => {/* istanbul ignore next */cov_dsu7d9qvm.f[4]++;cov_dsu7d9qvm.s[35]++;return id === request.url.query.id;})) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[36]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[37]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[39]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[40]++;sendJSON(response, 200, planets.find(id => {/* istanbul ignore next */cov_dsu7d9qvm.f[5]++;cov_dsu7d9qvm.s[41]++;return id === request.url.query.id;})); /* istanbul ignore next */cov_dsu7d9qvm.s[42]++;\n    return;\n  }\n}","timestamp":"2017-12-07T21:28:58.474Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T21:28:58.476Z"}
[]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T21:28:58.478Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T21:28:58.479Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.url.query.id');\n    // sendStatus(response, 200, planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;console.log(planets); /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;\n    sendJSON(response, 200, planets); /* istanbul ignore next */cov_dsu7d9qvm.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[34]++;\n  if (!planets.find(id => {/* istanbul ignore next */cov_dsu7d9qvm.f[4]++;cov_dsu7d9qvm.s[35]++;return id === request.url.query.id;})) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[36]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[37]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[39]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[40]++;sendJSON(response, 200, planets.find(id => {/* istanbul ignore next */cov_dsu7d9qvm.f[5]++;cov_dsu7d9qvm.s[41]++;return id === request.url.query.id;})); /* istanbul ignore next */cov_dsu7d9qvm.s[42]++;\n    return;\n  }\n}","timestamp":"2017-12-07T21:28:58.479Z"}
{"level":"info","message":"Responding with a 404 code due to Planet ID not found","timestamp":"2017-12-07T21:28:58.480Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T21:28:58.481Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T21:28:58.481Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.url.query.id');\n    // sendStatus(response, 200, planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;console.log(planets); /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;\n    sendJSON(response, 200, planets); /* istanbul ignore next */cov_dsu7d9qvm.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[34]++;\n  if (!planets.find(id => {/* istanbul ignore next */cov_dsu7d9qvm.f[4]++;cov_dsu7d9qvm.s[35]++;return id === request.url.query.id;})) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[36]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[37]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[39]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[40]++;sendJSON(response, 200, planets.find(id => {/* istanbul ignore next */cov_dsu7d9qvm.f[5]++;cov_dsu7d9qvm.s[41]++;return id === request.url.query.id;})); /* istanbul ignore next */cov_dsu7d9qvm.s[42]++;\n    return;\n  }\n}","timestamp":"2017-12-07T21:28:58.481Z"}
{"level":"info","message":"Responding with a 404 code due to Planet ID not found","timestamp":"2017-12-07T21:28:58.482Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T21:29:06.810Z"}
{"level":"info","message":"/api/planet","timestamp":"2017-12-07T21:29:06.810Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[2]++;cov_dsu7d9qvm.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_dsu7d9qvm.b[0][0]++;cov_dsu7d9qvm.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[0][1]++;}cov_dsu7d9qvm.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_dsu7d9qvm.b[1][0]++;cov_dsu7d9qvm.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[1][1]++;}cov_dsu7d9qvm.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_dsu7d9qvm.b[2][0]++;cov_dsu7d9qvm.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[2][1]++;}\n  //can create my planet since all test pass\n  let planet = /* istanbul ignore next */(cov_dsu7d9qvm.s[25]++, new Planet(request.body.name, request.body.content)); /* istanbul ignore next */cov_dsu7d9qvm.s[26]++;\n  planets.push(planet); /* istanbul ignore next */cov_dsu7d9qvm.s[27]++;\n  sendJSON(response, 200, planet);\n}","timestamp":"2017-12-07T21:29:06.810Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T21:29:06.810Z"}
{"level":"info","message":"/api/planet","timestamp":"2017-12-07T21:29:06.811Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.url.query.id');\n    // sendStatus(response, 200, planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;console.log(planets); /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;\n    sendJSON(response, 200, planets); /* istanbul ignore next */cov_dsu7d9qvm.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[34]++;\n  if (!planets.find(id => {/* istanbul ignore next */cov_dsu7d9qvm.f[4]++;cov_dsu7d9qvm.s[35]++;return id === request.url.query.id;})) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[36]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[37]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[39]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[40]++;sendJSON(response, 200, planets.find(id => {/* istanbul ignore next */cov_dsu7d9qvm.f[5]++;cov_dsu7d9qvm.s[41]++;return id === request.url.query.id;})); /* istanbul ignore next */cov_dsu7d9qvm.s[42]++;\n    return;\n  }\n}","timestamp":"2017-12-07T21:29:06.811Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T21:29:06.874Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T21:29:06.941Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T21:29:06.944Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[2]++;cov_dsu7d9qvm.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_dsu7d9qvm.b[0][0]++;cov_dsu7d9qvm.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[0][1]++;}cov_dsu7d9qvm.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_dsu7d9qvm.b[1][0]++;cov_dsu7d9qvm.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[1][1]++;}cov_dsu7d9qvm.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_dsu7d9qvm.b[2][0]++;cov_dsu7d9qvm.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[2][1]++;}\n  //can create my planet since all test pass\n  let planet = /* istanbul ignore next */(cov_dsu7d9qvm.s[25]++, new Planet(request.body.name, request.body.content)); /* istanbul ignore next */cov_dsu7d9qvm.s[26]++;\n  planets.push(planet); /* istanbul ignore next */cov_dsu7d9qvm.s[27]++;\n  sendJSON(response, 200, planet);\n}","timestamp":"2017-12-07T21:29:06.944Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T21:29:06.945Z"}
{"id":"a7c58800-db95-11e7-b05c-d580ad913414","discoverDate":"2017-07-09T02:04:57.890Z","name":"BD032562b","content":"11h50m1555sDeclination02d45m365s","level":"info","message":"","timestamp":"2017-12-07T21:29:06.945Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T21:29:06.958Z"}
{"level":"info","message":"__REQUEST_ERROR","timestamp":"2017-12-07T21:29:06.959Z"}
{"message":"Unexpected token b in JSON at position 2","stack":"SyntaxError: Unexpected token b in JSON at position 2\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/home/seth/codefellows/401/lab/08-09-vanilla-rest-server/lab-seth/lib/request-parser.js:29:31)\n    at emitNone (events.js:106:13)\n    at IncomingMessage.emit (events.js:208:7)\n    at endReadableNT (_stream_readable.js:1056:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-07T21:29:06.959Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T21:29:06.961Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T21:29:06.962Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.url.query.id');\n    // sendStatus(response, 200, planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;console.log(planets); /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;\n    sendJSON(response, 200, planets); /* istanbul ignore next */cov_dsu7d9qvm.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[34]++;\n  if (!planets.find(id => {/* istanbul ignore next */cov_dsu7d9qvm.f[4]++;cov_dsu7d9qvm.s[35]++;return id === request.url.query.id;})) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[36]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[37]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[39]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[40]++;sendJSON(response, 200, planets.find(id => {/* istanbul ignore next */cov_dsu7d9qvm.f[5]++;cov_dsu7d9qvm.s[41]++;return id === request.url.query.id;})); /* istanbul ignore next */cov_dsu7d9qvm.s[42]++;\n    return;\n  }\n}","timestamp":"2017-12-07T21:29:06.962Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T21:29:06.964Z"}
[{"id":"a7c58800-db95-11e7-b05c-d580ad913414","discoverDate":"2017-07-09T02:04:57.890Z","name":"BD032562b","content":"11h50m1555sDeclination02d45m365s"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T21:29:06.969Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T21:29:06.970Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.url.query.id');\n    // sendStatus(response, 200, planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;console.log(planets); /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;\n    sendJSON(response, 200, planets); /* istanbul ignore next */cov_dsu7d9qvm.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[34]++;\n  if (!planets.find(id => {/* istanbul ignore next */cov_dsu7d9qvm.f[4]++;cov_dsu7d9qvm.s[35]++;return id === request.url.query.id;})) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[36]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[37]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[39]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[40]++;sendJSON(response, 200, planets.find(id => {/* istanbul ignore next */cov_dsu7d9qvm.f[5]++;cov_dsu7d9qvm.s[41]++;return id === request.url.query.id;})); /* istanbul ignore next */cov_dsu7d9qvm.s[42]++;\n    return;\n  }\n}","timestamp":"2017-12-07T21:29:06.971Z"}
{"level":"info","message":"Responding with a 404 code due to Planet ID not found","timestamp":"2017-12-07T21:29:06.972Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T21:29:06.975Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T21:29:06.975Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.url.query.id');\n    // sendStatus(response, 200, planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;console.log(planets); /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;\n    sendJSON(response, 200, planets); /* istanbul ignore next */cov_dsu7d9qvm.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[34]++;\n  if (!planets.find(id => {/* istanbul ignore next */cov_dsu7d9qvm.f[4]++;cov_dsu7d9qvm.s[35]++;return id === request.url.query.id;})) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[36]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[37]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[39]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[40]++;sendJSON(response, 200, planets.find(id => {/* istanbul ignore next */cov_dsu7d9qvm.f[5]++;cov_dsu7d9qvm.s[41]++;return id === request.url.query.id;})); /* istanbul ignore next */cov_dsu7d9qvm.s[42]++;\n    return;\n  }\n}","timestamp":"2017-12-07T21:29:06.975Z"}
{"level":"info","message":"Responding with a 404 code due to Planet ID not found","timestamp":"2017-12-07T21:29:06.975Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T21:30:42.824Z"}
{"level":"info","message":"/api/planet","timestamp":"2017-12-07T21:30:42.825Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[2]++;cov_dsu7d9qvm.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_dsu7d9qvm.b[0][0]++;cov_dsu7d9qvm.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[0][1]++;}cov_dsu7d9qvm.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_dsu7d9qvm.b[1][0]++;cov_dsu7d9qvm.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[1][1]++;}cov_dsu7d9qvm.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_dsu7d9qvm.b[2][0]++;cov_dsu7d9qvm.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[2][1]++;}\n  //can create my planet since all test pass\n  let planet = /* istanbul ignore next */(cov_dsu7d9qvm.s[25]++, new Planet(request.body.name, request.body.content)); /* istanbul ignore next */cov_dsu7d9qvm.s[26]++;\n  planets.push(planet); /* istanbul ignore next */cov_dsu7d9qvm.s[27]++;\n  sendJSON(response, 200, planet);\n}","timestamp":"2017-12-07T21:30:42.825Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T21:30:42.825Z"}
{"level":"info","message":"/api/planet","timestamp":"2017-12-07T21:30:42.825Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.url.query.id');\n    // sendStatus(response, 200, planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;console.log(planets); /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;\n    sendJSON(response, 200, planets); /* istanbul ignore next */cov_dsu7d9qvm.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[34]++;\n  if (!planets.find(id => {/* istanbul ignore next */cov_dsu7d9qvm.f[4]++;cov_dsu7d9qvm.s[35]++;return id === request.url.query.id;})) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[36]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[37]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[39]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[40]++;sendJSON(response, 200, planets.find(id => {/* istanbul ignore next */cov_dsu7d9qvm.f[5]++;cov_dsu7d9qvm.s[41]++;return id === request.url.query.id;})); /* istanbul ignore next */cov_dsu7d9qvm.s[42]++;\n    return;\n  }\n}","timestamp":"2017-12-07T21:30:42.825Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T21:30:42.865Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T21:30:42.919Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T21:30:42.921Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[2]++;cov_dsu7d9qvm.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_dsu7d9qvm.b[0][0]++;cov_dsu7d9qvm.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[0][1]++;}cov_dsu7d9qvm.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_dsu7d9qvm.b[1][0]++;cov_dsu7d9qvm.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[1][1]++;}cov_dsu7d9qvm.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_dsu7d9qvm.b[2][0]++;cov_dsu7d9qvm.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[2][1]++;}\n  //can create my planet since all test pass\n  let planet = /* istanbul ignore next */(cov_dsu7d9qvm.s[25]++, new Planet(request.body.name, request.body.content)); /* istanbul ignore next */cov_dsu7d9qvm.s[26]++;\n  planets.push(planet); /* istanbul ignore next */cov_dsu7d9qvm.s[27]++;\n  sendJSON(response, 200, planet);\n}","timestamp":"2017-12-07T21:30:42.921Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T21:30:42.922Z"}
{"id":"e0fa7590-db95-11e7-b6ef-bb78ebf82667","discoverDate":"2017-04-24T15:24:03.745Z","name":"BD032562b","content":"11h50m1555sDeclination02d45m365s","level":"info","message":"","timestamp":"2017-12-07T21:30:42.922Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T21:30:42.931Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T21:30:42.931Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.url.query.id');\n    // sendStatus(response, 200, planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;console.log(planets); /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;\n    sendJSON(response, 200, planets); /* istanbul ignore next */cov_dsu7d9qvm.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[34]++;\n  if (!planets.find(id => {/* istanbul ignore next */cov_dsu7d9qvm.f[4]++;cov_dsu7d9qvm.s[35]++;return id === request.url.query.id;})) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[36]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[37]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[39]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[40]++;sendJSON(response, 200, planets.find(id => {/* istanbul ignore next */cov_dsu7d9qvm.f[5]++;cov_dsu7d9qvm.s[41]++;return id === request.url.query.id;})); /* istanbul ignore next */cov_dsu7d9qvm.s[42]++;\n    return;\n  }\n}","timestamp":"2017-12-07T21:30:42.931Z"}
{"level":"info","message":"Responding with a 404 code due to Planet ID not found","timestamp":"2017-12-07T21:30:42.932Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T21:30:42.934Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T21:30:42.935Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.url.query.id');\n    // sendStatus(response, 200, planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;console.log(planets); /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;\n    sendJSON(response, 200, planets); /* istanbul ignore next */cov_dsu7d9qvm.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[34]++;\n  if (!planets.find(id => {/* istanbul ignore next */cov_dsu7d9qvm.f[4]++;cov_dsu7d9qvm.s[35]++;return id === request.url.query.id;})) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[36]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[37]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[39]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[40]++;sendJSON(response, 200, planets.find(id => {/* istanbul ignore next */cov_dsu7d9qvm.f[5]++;cov_dsu7d9qvm.s[41]++;return id === request.url.query.id;})); /* istanbul ignore next */cov_dsu7d9qvm.s[42]++;\n    return;\n  }\n}","timestamp":"2017-12-07T21:30:42.935Z"}
{"level":"info","message":"Responding with a 404 code due to Planet ID not found","timestamp":"2017-12-07T21:30:42.935Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T21:32:42.461Z"}
{"level":"info","message":"/api/planet","timestamp":"2017-12-07T21:32:42.462Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[2]++;cov_dsu7d9qvm.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_dsu7d9qvm.b[0][0]++;cov_dsu7d9qvm.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[0][1]++;}cov_dsu7d9qvm.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_dsu7d9qvm.b[1][0]++;cov_dsu7d9qvm.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[1][1]++;}cov_dsu7d9qvm.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_dsu7d9qvm.b[2][0]++;cov_dsu7d9qvm.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[2][1]++;}\n  //can create my planet since all test pass\n  let planet = /* istanbul ignore next */(cov_dsu7d9qvm.s[25]++, new Planet(request.body.name, request.body.content)); /* istanbul ignore next */cov_dsu7d9qvm.s[26]++;\n  planets.push(planet); /* istanbul ignore next */cov_dsu7d9qvm.s[27]++;\n  sendJSON(response, 200, planet);\n}","timestamp":"2017-12-07T21:32:42.462Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T21:32:42.462Z"}
{"level":"info","message":"/api/planet","timestamp":"2017-12-07T21:32:42.462Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.url.query.id');\n    // sendStatus(response, 200, planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;console.log(planets); /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;\n    sendJSON(response, 200, planets); /* istanbul ignore next */cov_dsu7d9qvm.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[34]++;\n  if (!planets.find(id => {/* istanbul ignore next */cov_dsu7d9qvm.f[4]++;cov_dsu7d9qvm.s[35]++;return id === request.url.query.id;})) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[36]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[37]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[39]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[40]++;sendJSON(response, 200, planets.find(id => {/* istanbul ignore next */cov_dsu7d9qvm.f[5]++;cov_dsu7d9qvm.s[41]++;return id === request.url.query.id;})); /* istanbul ignore next */cov_dsu7d9qvm.s[42]++;\n    return;\n  }\n}","timestamp":"2017-12-07T21:32:42.462Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T21:32:42.502Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T21:32:42.558Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T21:32:42.559Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[2]++;cov_dsu7d9qvm.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_dsu7d9qvm.b[0][0]++;cov_dsu7d9qvm.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[0][1]++;}cov_dsu7d9qvm.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_dsu7d9qvm.b[1][0]++;cov_dsu7d9qvm.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[1][1]++;}cov_dsu7d9qvm.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_dsu7d9qvm.b[2][0]++;cov_dsu7d9qvm.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[2][1]++;}\n  //can create my planet since all test pass\n  let planet = /* istanbul ignore next */(cov_dsu7d9qvm.s[25]++, new Planet(request.body.name, request.body.content)); /* istanbul ignore next */cov_dsu7d9qvm.s[26]++;\n  planets.push(planet); /* istanbul ignore next */cov_dsu7d9qvm.s[27]++;\n  sendJSON(response, 200, planet);\n}","timestamp":"2017-12-07T21:32:42.559Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T21:32:42.560Z"}
{"id":"2849ec00-db96-11e7-98c7-39f1111845c6","discoverDate":"2017-05-03T07:47:54.477Z","name":"BD032562b","content":"11h50m1555sDeclination02d45m365s","level":"info","message":"","timestamp":"2017-12-07T21:32:42.560Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T21:32:42.570Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T21:32:42.571Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.url.query.id');\n    // sendStatus(response, 200, planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;console.log(planets); /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;\n    sendJSON(response, 200, planets); /* istanbul ignore next */cov_dsu7d9qvm.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[34]++;\n  if (!planets.find(id => {/* istanbul ignore next */cov_dsu7d9qvm.f[4]++;cov_dsu7d9qvm.s[35]++;return id === request.url.query.id;})) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[36]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[37]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[39]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[40]++;sendJSON(response, 200, planets.find(id => {/* istanbul ignore next */cov_dsu7d9qvm.f[5]++;cov_dsu7d9qvm.s[41]++;return id === request.url.query.id;})); /* istanbul ignore next */cov_dsu7d9qvm.s[42]++;\n    return;\n  }\n}","timestamp":"2017-12-07T21:32:42.571Z"}
{"level":"info","message":"Responding with a 404 code due to Planet ID not found","timestamp":"2017-12-07T21:32:42.572Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T21:32:42.574Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T21:32:42.574Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.url.query.id');\n    // sendStatus(response, 200, planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;console.log(planets); /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;\n    sendJSON(response, 200, planets); /* istanbul ignore next */cov_dsu7d9qvm.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[34]++;\n  if (!planets.find(id => {/* istanbul ignore next */cov_dsu7d9qvm.f[4]++;cov_dsu7d9qvm.s[35]++;return id === request.url.query.id;})) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[36]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[37]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[39]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[40]++;sendJSON(response, 200, planets.find(id => {/* istanbul ignore next */cov_dsu7d9qvm.f[5]++;cov_dsu7d9qvm.s[41]++;return id === request.url.query.id;})); /* istanbul ignore next */cov_dsu7d9qvm.s[42]++;\n    return;\n  }\n}","timestamp":"2017-12-07T21:32:42.574Z"}
{"level":"info","message":"Responding with a 404 code due to Planet ID not found","timestamp":"2017-12-07T21:32:42.575Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T21:33:31.507Z"}
{"level":"info","message":"/api/planet","timestamp":"2017-12-07T21:33:31.508Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[2]++;cov_dsu7d9qvm.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_dsu7d9qvm.b[0][0]++;cov_dsu7d9qvm.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[0][1]++;}cov_dsu7d9qvm.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_dsu7d9qvm.b[1][0]++;cov_dsu7d9qvm.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[1][1]++;}cov_dsu7d9qvm.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_dsu7d9qvm.b[2][0]++;cov_dsu7d9qvm.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[2][1]++;}\n  //can create my planet since all test pass\n  let planet = /* istanbul ignore next */(cov_dsu7d9qvm.s[25]++, new Planet(request.body.name, request.body.content)); /* istanbul ignore next */cov_dsu7d9qvm.s[26]++;\n  planets.push(planet); /* istanbul ignore next */cov_dsu7d9qvm.s[27]++;\n  sendJSON(response, 200, planet);\n}","timestamp":"2017-12-07T21:33:31.508Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T21:33:31.508Z"}
{"level":"info","message":"/api/planet","timestamp":"2017-12-07T21:33:31.508Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.url.query.id');\n    // sendStatus(response, 200, planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;console.log(planets); /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;\n    sendJSON(response, 200, planets); /* istanbul ignore next */cov_dsu7d9qvm.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[34]++;\n  if (!planets.find(id => {/* istanbul ignore next */cov_dsu7d9qvm.f[4]++;cov_dsu7d9qvm.s[35]++;return id === request.url.query.id;})) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[36]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[37]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[39]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[40]++;sendJSON(response, 200, planets.find(id => {/* istanbul ignore next */cov_dsu7d9qvm.f[5]++;cov_dsu7d9qvm.s[41]++;return id === request.url.query.id;})); /* istanbul ignore next */cov_dsu7d9qvm.s[42]++;\n    return;\n  }\n}","timestamp":"2017-12-07T21:33:31.508Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T21:33:31.548Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T21:33:31.606Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T21:33:31.608Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[2]++;cov_dsu7d9qvm.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_dsu7d9qvm.b[0][0]++;cov_dsu7d9qvm.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[0][1]++;}cov_dsu7d9qvm.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_dsu7d9qvm.b[1][0]++;cov_dsu7d9qvm.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[1][1]++;}cov_dsu7d9qvm.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_dsu7d9qvm.b[2][0]++;cov_dsu7d9qvm.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[2][1]++;}\n  //can create my planet since all test pass\n  let planet = /* istanbul ignore next */(cov_dsu7d9qvm.s[25]++, new Planet(request.body.name, request.body.content)); /* istanbul ignore next */cov_dsu7d9qvm.s[26]++;\n  planets.push(planet); /* istanbul ignore next */cov_dsu7d9qvm.s[27]++;\n  sendJSON(response, 200, planet);\n}","timestamp":"2017-12-07T21:33:31.608Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T21:33:31.608Z"}
{"id":"45860d80-db96-11e7-84bf-b9be5fe11e85","discoverDate":"2017-11-03T00:01:38.594Z","name":"BD032562b","content":"11h50m1555sDeclination02d45m365s","level":"info","message":"","timestamp":"2017-12-07T21:33:31.609Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T21:33:31.615Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T21:33:31.616Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.url.query.id');\n    // sendStatus(response, 200, planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;console.log(planets); /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;\n    sendJSON(response, 200, planets); /* istanbul ignore next */cov_dsu7d9qvm.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[34]++;\n  if (!planets.find(id => {/* istanbul ignore next */cov_dsu7d9qvm.f[4]++;cov_dsu7d9qvm.s[35]++;return id === request.url.query.id;})) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[36]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[37]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[39]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[40]++;sendJSON(response, 200, planets.find(id => {/* istanbul ignore next */cov_dsu7d9qvm.f[5]++;cov_dsu7d9qvm.s[41]++;return id === request.url.query.id;})); /* istanbul ignore next */cov_dsu7d9qvm.s[42]++;\n    return;\n  }\n}","timestamp":"2017-12-07T21:33:31.616Z"}
{"level":"info","message":"Responding with a 404 code due to Planet ID not found","timestamp":"2017-12-07T21:33:31.617Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T21:33:31.619Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T21:33:31.619Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.url.query.id');\n    // sendStatus(response, 200, planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;console.log(planets); /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;\n    sendJSON(response, 200, planets); /* istanbul ignore next */cov_dsu7d9qvm.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[34]++;\n  if (!planets.find(id => {/* istanbul ignore next */cov_dsu7d9qvm.f[4]++;cov_dsu7d9qvm.s[35]++;return id === request.url.query.id;})) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[36]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[37]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[39]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[40]++;sendJSON(response, 200, planets.find(id => {/* istanbul ignore next */cov_dsu7d9qvm.f[5]++;cov_dsu7d9qvm.s[41]++;return id === request.url.query.id;})); /* istanbul ignore next */cov_dsu7d9qvm.s[42]++;\n    return;\n  }\n}","timestamp":"2017-12-07T21:33:31.619Z"}
{"level":"info","message":"Responding with a 404 code due to Planet ID not found","timestamp":"2017-12-07T21:33:31.620Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T21:33:52.684Z"}
{"level":"info","message":"/api/planet","timestamp":"2017-12-07T21:33:52.685Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[2]++;cov_dsu7d9qvm.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_dsu7d9qvm.b[0][0]++;cov_dsu7d9qvm.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[0][1]++;}cov_dsu7d9qvm.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_dsu7d9qvm.b[1][0]++;cov_dsu7d9qvm.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[1][1]++;}cov_dsu7d9qvm.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_dsu7d9qvm.b[2][0]++;cov_dsu7d9qvm.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[2][1]++;}\n  //can create my planet since all test pass\n  let planet = /* istanbul ignore next */(cov_dsu7d9qvm.s[25]++, new Planet(request.body.name, request.body.content)); /* istanbul ignore next */cov_dsu7d9qvm.s[26]++;\n  planets.push(planet); /* istanbul ignore next */cov_dsu7d9qvm.s[27]++;\n  sendJSON(response, 200, planet);\n}","timestamp":"2017-12-07T21:33:52.685Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T21:33:52.685Z"}
{"level":"info","message":"/api/planet","timestamp":"2017-12-07T21:33:52.685Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.url.query.id');\n    // sendStatus(response, 200, planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;console.log(planets); /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;\n    sendJSON(response, 200, planets); /* istanbul ignore next */cov_dsu7d9qvm.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[34]++;\n  if (!planets.find(id => {/* istanbul ignore next */cov_dsu7d9qvm.f[4]++;cov_dsu7d9qvm.s[35]++;return id === request.url.query.id;})) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[36]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[37]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[39]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[40]++;sendJSON(response, 200, planets.find(id => {/* istanbul ignore next */cov_dsu7d9qvm.f[5]++;cov_dsu7d9qvm.s[41]++;return id === request.url.query.id;})); /* istanbul ignore next */cov_dsu7d9qvm.s[42]++;\n    return;\n  }\n}","timestamp":"2017-12-07T21:33:52.685Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T21:33:52.726Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T21:33:52.784Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T21:33:52.785Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[2]++;cov_dsu7d9qvm.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_dsu7d9qvm.b[0][0]++;cov_dsu7d9qvm.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[0][1]++;}cov_dsu7d9qvm.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_dsu7d9qvm.b[1][0]++;cov_dsu7d9qvm.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[1][1]++;}cov_dsu7d9qvm.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_dsu7d9qvm.b[2][0]++;cov_dsu7d9qvm.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[2][1]++;}\n  //can create my planet since all test pass\n  let planet = /* istanbul ignore next */(cov_dsu7d9qvm.s[25]++, new Planet(request.body.name, request.body.content)); /* istanbul ignore next */cov_dsu7d9qvm.s[26]++;\n  planets.push(planet); /* istanbul ignore next */cov_dsu7d9qvm.s[27]++;\n  sendJSON(response, 200, planet);\n}","timestamp":"2017-12-07T21:33:52.785Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T21:33:52.786Z"}
{"id":"52258f20-db96-11e7-a232-c79c3f444cbd","discoverDate":"2017-08-09T18:12:56.986Z","name":"BD032562b","content":"11h50m1555sDeclination02d45m365s","level":"info","message":"","timestamp":"2017-12-07T21:33:52.786Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T21:33:52.793Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T21:33:52.794Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.url.query.id');\n    // sendStatus(response, 200, planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;console.log(planets); /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;\n    sendJSON(response, 200, planets); /* istanbul ignore next */cov_dsu7d9qvm.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[34]++;\n  if (!planets.find(id => {/* istanbul ignore next */cov_dsu7d9qvm.f[4]++;cov_dsu7d9qvm.s[35]++;return id === request.url.query.id;})) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[36]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[37]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[39]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[40]++;sendJSON(response, 200, planets.find(id => {/* istanbul ignore next */cov_dsu7d9qvm.f[5]++;cov_dsu7d9qvm.s[41]++;return id === request.url.query.id;})); /* istanbul ignore next */cov_dsu7d9qvm.s[42]++;\n    return;\n  }\n}","timestamp":"2017-12-07T21:33:52.794Z"}
{"level":"info","message":"Responding with a 404 code due to Planet ID not found","timestamp":"2017-12-07T21:33:52.795Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T21:33:52.797Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T21:33:52.797Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.url.query.id');\n    // sendStatus(response, 200, planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;console.log(planets); /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;\n    sendJSON(response, 200, planets); /* istanbul ignore next */cov_dsu7d9qvm.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[34]++;\n  if (!planets.find(id => {/* istanbul ignore next */cov_dsu7d9qvm.f[4]++;cov_dsu7d9qvm.s[35]++;return id === request.url.query.id;})) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[36]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[37]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[39]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[40]++;sendJSON(response, 200, planets.find(id => {/* istanbul ignore next */cov_dsu7d9qvm.f[5]++;cov_dsu7d9qvm.s[41]++;return id === request.url.query.id;})); /* istanbul ignore next */cov_dsu7d9qvm.s[42]++;\n    return;\n  }\n}","timestamp":"2017-12-07T21:33:52.797Z"}
{"level":"info","message":"Responding with a 404 code due to Planet ID not found","timestamp":"2017-12-07T21:33:52.798Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T21:35:59.712Z"}
{"level":"info","message":"/api/planet","timestamp":"2017-12-07T21:35:59.713Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[2]++;cov_dsu7d9qvm.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_dsu7d9qvm.b[0][0]++;cov_dsu7d9qvm.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[0][1]++;}cov_dsu7d9qvm.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_dsu7d9qvm.b[1][0]++;cov_dsu7d9qvm.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[1][1]++;}cov_dsu7d9qvm.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_dsu7d9qvm.b[2][0]++;cov_dsu7d9qvm.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[2][1]++;}\n  //can create my planet since all test pass\n  let planet = /* istanbul ignore next */(cov_dsu7d9qvm.s[25]++, new Planet(request.body.name, request.body.content)); /* istanbul ignore next */cov_dsu7d9qvm.s[26]++;\n  planets.push(planet); /* istanbul ignore next */cov_dsu7d9qvm.s[27]++;\n  sendJSON(response, 200, planet);\n}","timestamp":"2017-12-07T21:35:59.713Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T21:35:59.713Z"}
{"level":"info","message":"/api/planet","timestamp":"2017-12-07T21:35:59.713Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.url.query.id');\n    // sendStatus(response, 200, planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;console.log(planets); /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;\n    sendJSON(response, 200, planets); /* istanbul ignore next */cov_dsu7d9qvm.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[34]++;\n  if (!planets.find(id => {/* istanbul ignore next */cov_dsu7d9qvm.f[4]++;cov_dsu7d9qvm.s[35]++;return id === request.url.query.id;})) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[36]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[37]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[39]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[40]++;sendJSON(response, 200, planets.find(id => {/* istanbul ignore next */cov_dsu7d9qvm.f[5]++;cov_dsu7d9qvm.s[41]++;return id === request.url.query.id;})); /* istanbul ignore next */cov_dsu7d9qvm.s[42]++;\n    return;\n  }\n}","timestamp":"2017-12-07T21:35:59.713Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T21:35:59.756Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T21:35:59.813Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T21:35:59.814Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[2]++;cov_dsu7d9qvm.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_dsu7d9qvm.b[0][0]++;cov_dsu7d9qvm.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[0][1]++;}cov_dsu7d9qvm.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_dsu7d9qvm.b[1][0]++;cov_dsu7d9qvm.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[1][1]++;}cov_dsu7d9qvm.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_dsu7d9qvm.b[2][0]++;cov_dsu7d9qvm.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[2][1]++;}\n  //can create my planet since all test pass\n  let planet = /* istanbul ignore next */(cov_dsu7d9qvm.s[25]++, new Planet(request.body.name, request.body.content)); /* istanbul ignore next */cov_dsu7d9qvm.s[26]++;\n  planets.push(planet); /* istanbul ignore next */cov_dsu7d9qvm.s[27]++;\n  sendJSON(response, 200, planet);\n}","timestamp":"2017-12-07T21:35:59.814Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T21:35:59.815Z"}
{"id":"9ddc7e60-db96-11e7-9cb0-7fc94ca62e44","discoverDate":"2017-02-08T10:29:54.281Z","name":"BD032562b","content":"11h50m1555sDeclination02d45m365s","level":"info","message":"","timestamp":"2017-12-07T21:35:59.815Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T21:37:53.315Z"}
{"level":"info","message":"/api/planet","timestamp":"2017-12-07T21:37:53.316Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[2]++;cov_dsu7d9qvm.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_dsu7d9qvm.b[0][0]++;cov_dsu7d9qvm.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[0][1]++;}cov_dsu7d9qvm.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_dsu7d9qvm.b[1][0]++;cov_dsu7d9qvm.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[1][1]++;}cov_dsu7d9qvm.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_dsu7d9qvm.b[2][0]++;cov_dsu7d9qvm.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[2][1]++;}\n  //can create my planet since all test pass\n  let planet = /* istanbul ignore next */(cov_dsu7d9qvm.s[25]++, new Planet(request.body.name, request.body.content)); /* istanbul ignore next */cov_dsu7d9qvm.s[26]++;\n  planets.push(planet); /* istanbul ignore next */cov_dsu7d9qvm.s[27]++;\n  sendJSON(response, 200, planet);\n}","timestamp":"2017-12-07T21:37:53.316Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T21:37:53.316Z"}
{"level":"info","message":"/api/planet","timestamp":"2017-12-07T21:37:53.316Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.url.query.id');\n    // sendStatus(response, 200, planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;console.log(planets); /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;\n    sendJSON(response, 200, planets); /* istanbul ignore next */cov_dsu7d9qvm.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[34]++;\n  if (!planets.find(id => {/* istanbul ignore next */cov_dsu7d9qvm.f[4]++;cov_dsu7d9qvm.s[35]++;return id === request.url.query.id;})) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[36]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[37]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[39]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[40]++;sendJSON(response, 200, planets.find(id => {/* istanbul ignore next */cov_dsu7d9qvm.f[5]++;cov_dsu7d9qvm.s[41]++;return id === request.url.query.id;})); /* istanbul ignore next */cov_dsu7d9qvm.s[42]++;\n    return;\n  }\n}","timestamp":"2017-12-07T21:37:53.316Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T21:37:53.357Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T21:37:53.415Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T21:37:53.416Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[2]++;cov_dsu7d9qvm.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_dsu7d9qvm.b[0][0]++;cov_dsu7d9qvm.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[0][1]++;}cov_dsu7d9qvm.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_dsu7d9qvm.b[1][0]++;cov_dsu7d9qvm.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[1][1]++;}cov_dsu7d9qvm.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_dsu7d9qvm.b[2][0]++;cov_dsu7d9qvm.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[2][1]++;}\n  //can create my planet since all test pass\n  let planet = /* istanbul ignore next */(cov_dsu7d9qvm.s[25]++, new Planet(request.body.name, request.body.content)); /* istanbul ignore next */cov_dsu7d9qvm.s[26]++;\n  planets.push(planet); /* istanbul ignore next */cov_dsu7d9qvm.s[27]++;\n  sendJSON(response, 200, planet);\n}","timestamp":"2017-12-07T21:37:53.416Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T21:37:53.417Z"}
{"id":"e192c880-db96-11e7-93e0-0530f5dee47a","discoverDate":"2017-05-18T05:56:06.850Z","name":"BD032562b","content":"11h50m1555sDeclination02d45m365s","level":"info","message":"","timestamp":"2017-12-07T21:37:53.417Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T21:38:25.228Z"}
{"level":"info","message":"/api/planet","timestamp":"2017-12-07T21:38:25.229Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[2]++;cov_dsu7d9qvm.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_dsu7d9qvm.b[0][0]++;cov_dsu7d9qvm.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[0][1]++;}cov_dsu7d9qvm.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_dsu7d9qvm.b[1][0]++;cov_dsu7d9qvm.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[1][1]++;}cov_dsu7d9qvm.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_dsu7d9qvm.b[2][0]++;cov_dsu7d9qvm.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[2][1]++;}\n  //can create my planet since all test pass\n  let planet = /* istanbul ignore next */(cov_dsu7d9qvm.s[25]++, new Planet(request.body.name, request.body.content)); /* istanbul ignore next */cov_dsu7d9qvm.s[26]++;\n  planets.push(planet); /* istanbul ignore next */cov_dsu7d9qvm.s[27]++;\n  sendJSON(response, 200, planet);\n}","timestamp":"2017-12-07T21:38:25.229Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T21:38:25.229Z"}
{"level":"info","message":"/api/planet","timestamp":"2017-12-07T21:38:25.229Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.url.query.id');\n    // sendStatus(response, 200, planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;console.log(planets); /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;\n    sendJSON(response, 200, planets); /* istanbul ignore next */cov_dsu7d9qvm.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[34]++;\n  if (!planets.find(id => {/* istanbul ignore next */cov_dsu7d9qvm.f[4]++;cov_dsu7d9qvm.s[35]++;return id === request.url.query.id;})) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[36]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[37]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[39]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[40]++;sendJSON(response, 200, planets.find(id => {/* istanbul ignore next */cov_dsu7d9qvm.f[5]++;cov_dsu7d9qvm.s[41]++;return id === request.url.query.id;})); /* istanbul ignore next */cov_dsu7d9qvm.s[42]++;\n    return;\n  }\n}","timestamp":"2017-12-07T21:38:25.229Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T21:38:46.457Z"}
{"level":"info","message":"/api/planet","timestamp":"2017-12-07T21:38:46.458Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[2]++;cov_dsu7d9qvm.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_dsu7d9qvm.b[0][0]++;cov_dsu7d9qvm.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[0][1]++;}cov_dsu7d9qvm.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_dsu7d9qvm.b[1][0]++;cov_dsu7d9qvm.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[1][1]++;}cov_dsu7d9qvm.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_dsu7d9qvm.b[2][0]++;cov_dsu7d9qvm.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[2][1]++;}\n  //can create my planet since all test pass\n  let planet = /* istanbul ignore next */(cov_dsu7d9qvm.s[25]++, new Planet(request.body.name, request.body.content)); /* istanbul ignore next */cov_dsu7d9qvm.s[26]++;\n  planets.push(planet); /* istanbul ignore next */cov_dsu7d9qvm.s[27]++;\n  sendJSON(response, 200, planet);\n}","timestamp":"2017-12-07T21:38:46.458Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T21:38:46.458Z"}
{"level":"info","message":"/api/planet","timestamp":"2017-12-07T21:38:46.458Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.url.query.id');\n    // sendStatus(response, 200, planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;console.log(planets); /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;\n    sendJSON(response, 200, planets); /* istanbul ignore next */cov_dsu7d9qvm.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[34]++;\n  if (!planets.find(id => {/* istanbul ignore next */cov_dsu7d9qvm.f[4]++;cov_dsu7d9qvm.s[35]++;return id === request.url.query.id;})) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[36]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[37]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[39]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[40]++;sendJSON(response, 200, planets.find(id => {/* istanbul ignore next */cov_dsu7d9qvm.f[5]++;cov_dsu7d9qvm.s[41]++;return id === request.url.query.id;})); /* istanbul ignore next */cov_dsu7d9qvm.s[42]++;\n    return;\n  }\n}","timestamp":"2017-12-07T21:38:46.458Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T21:38:46.501Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T21:38:46.557Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T21:38:46.559Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[2]++;cov_dsu7d9qvm.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_dsu7d9qvm.b[0][0]++;cov_dsu7d9qvm.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[0][1]++;}cov_dsu7d9qvm.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_dsu7d9qvm.b[1][0]++;cov_dsu7d9qvm.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[1][1]++;}cov_dsu7d9qvm.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_dsu7d9qvm.b[2][0]++;cov_dsu7d9qvm.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[2][1]++;}\n  //can create my planet since all test pass\n  let planet = /* istanbul ignore next */(cov_dsu7d9qvm.s[25]++, new Planet(request.body.name, request.body.content)); /* istanbul ignore next */cov_dsu7d9qvm.s[26]++;\n  planets.push(planet); /* istanbul ignore next */cov_dsu7d9qvm.s[27]++;\n  sendJSON(response, 200, planet);\n}","timestamp":"2017-12-07T21:38:46.559Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T21:38:46.560Z"}
{"id":"013fc2f0-db97-11e7-ba1c-15c36f7d3af2","discoverDate":"2017-07-02T04:39:27.662Z","name":"BD032562b","content":"11h50m1555sDeclination02d45m365s","level":"info","message":"","timestamp":"2017-12-07T21:38:46.560Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T21:39:38.855Z"}
{"level":"info","message":"/api/planet","timestamp":"2017-12-07T21:39:38.855Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[2]++;cov_dsu7d9qvm.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_dsu7d9qvm.b[0][0]++;cov_dsu7d9qvm.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[0][1]++;}cov_dsu7d9qvm.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_dsu7d9qvm.b[1][0]++;cov_dsu7d9qvm.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[1][1]++;}cov_dsu7d9qvm.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_dsu7d9qvm.b[2][0]++;cov_dsu7d9qvm.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[2][1]++;}\n  //can create my planet since all test pass\n  let planet = /* istanbul ignore next */(cov_dsu7d9qvm.s[25]++, new Planet(request.body.name, request.body.content)); /* istanbul ignore next */cov_dsu7d9qvm.s[26]++;\n  planets.push(planet); /* istanbul ignore next */cov_dsu7d9qvm.s[27]++;\n  sendJSON(response, 200, planet);\n}","timestamp":"2017-12-07T21:39:38.855Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T21:39:38.856Z"}
{"level":"info","message":"/api/planet","timestamp":"2017-12-07T21:39:38.856Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.url.query.id');\n    // sendStatus(response, 200, planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;console.log(planets); /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;\n    sendJSON(response, 200, planets); /* istanbul ignore next */cov_dsu7d9qvm.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[34]++;\n  if (!planets.find(id => {/* istanbul ignore next */cov_dsu7d9qvm.f[4]++;cov_dsu7d9qvm.s[35]++;return id === request.url.query.id;})) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[36]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[37]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[39]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[40]++;sendJSON(response, 200, planets.find(id => {/* istanbul ignore next */cov_dsu7d9qvm.f[5]++;cov_dsu7d9qvm.s[41]++;return id === request.url.query.id;})); /* istanbul ignore next */cov_dsu7d9qvm.s[42]++;\n    return;\n  }\n}","timestamp":"2017-12-07T21:39:38.856Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T21:39:38.899Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T21:39:38.956Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T21:39:38.957Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[2]++;cov_dsu7d9qvm.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_dsu7d9qvm.b[0][0]++;cov_dsu7d9qvm.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[0][1]++;}cov_dsu7d9qvm.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_dsu7d9qvm.b[1][0]++;cov_dsu7d9qvm.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[1][1]++;}cov_dsu7d9qvm.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_dsu7d9qvm.b[2][0]++;cov_dsu7d9qvm.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[2][1]++;}\n  //can create my planet since all test pass\n  let planet = /* istanbul ignore next */(cov_dsu7d9qvm.s[25]++, new Planet(request.body.name, request.body.content)); /* istanbul ignore next */cov_dsu7d9qvm.s[26]++;\n  planets.push(planet); /* istanbul ignore next */cov_dsu7d9qvm.s[27]++;\n  sendJSON(response, 200, planet);\n}","timestamp":"2017-12-07T21:39:38.957Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T21:39:38.958Z"}
{"id":"207b0fd0-db97-11e7-b869-111493d8883e","discoverDate":"2016-12-10T08:30:10.974Z","name":"BD032562b","content":"11h50m1555sDeclination02d45m365s","level":"info","message":"","timestamp":"2017-12-07T21:39:38.958Z"}
{"level":"info","message":"207b0fd0-db97-11e7-b869-111493d8883e","timestamp":"2017-12-07T21:39:38.962Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T21:39:48.629Z"}
{"level":"info","message":"/api/planet","timestamp":"2017-12-07T21:39:48.629Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[2]++;cov_dsu7d9qvm.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_dsu7d9qvm.b[0][0]++;cov_dsu7d9qvm.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[0][1]++;}cov_dsu7d9qvm.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_dsu7d9qvm.b[1][0]++;cov_dsu7d9qvm.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[1][1]++;}cov_dsu7d9qvm.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_dsu7d9qvm.b[2][0]++;cov_dsu7d9qvm.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[2][1]++;}\n  //can create my planet since all test pass\n  let planet = /* istanbul ignore next */(cov_dsu7d9qvm.s[25]++, new Planet(request.body.name, request.body.content)); /* istanbul ignore next */cov_dsu7d9qvm.s[26]++;\n  planets.push(planet); /* istanbul ignore next */cov_dsu7d9qvm.s[27]++;\n  sendJSON(response, 200, planet);\n}","timestamp":"2017-12-07T21:39:48.630Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T21:39:48.630Z"}
{"level":"info","message":"/api/planet","timestamp":"2017-12-07T21:39:48.630Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.url.query.id');\n    // sendStatus(response, 200, planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;console.log(planets); /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;\n    sendJSON(response, 200, planets); /* istanbul ignore next */cov_dsu7d9qvm.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[34]++;\n  if (!planets.find(id => {/* istanbul ignore next */cov_dsu7d9qvm.f[4]++;cov_dsu7d9qvm.s[35]++;return id === request.url.query.id;})) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[36]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[37]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[39]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[40]++;sendJSON(response, 200, planets.find(id => {/* istanbul ignore next */cov_dsu7d9qvm.f[5]++;cov_dsu7d9qvm.s[41]++;return id === request.url.query.id;})); /* istanbul ignore next */cov_dsu7d9qvm.s[42]++;\n    return;\n  }\n}","timestamp":"2017-12-07T21:39:48.630Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T21:39:48.669Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T21:39:48.725Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T21:39:48.726Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[2]++;cov_dsu7d9qvm.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_dsu7d9qvm.b[0][0]++;cov_dsu7d9qvm.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[0][1]++;}cov_dsu7d9qvm.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_dsu7d9qvm.b[1][0]++;cov_dsu7d9qvm.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[1][1]++;}cov_dsu7d9qvm.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_dsu7d9qvm.b[2][0]++;cov_dsu7d9qvm.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[2][1]++;}\n  //can create my planet since all test pass\n  let planet = /* istanbul ignore next */(cov_dsu7d9qvm.s[25]++, new Planet(request.body.name, request.body.content)); /* istanbul ignore next */cov_dsu7d9qvm.s[26]++;\n  planets.push(planet); /* istanbul ignore next */cov_dsu7d9qvm.s[27]++;\n  sendJSON(response, 200, planet);\n}","timestamp":"2017-12-07T21:39:48.726Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T21:39:48.727Z"}
{"id":"264db160-db97-11e7-953f-0987e50a7a69","discoverDate":"2017-08-24T10:49:57.476Z","name":"BD032562b","content":"11h50m1555sDeclination02d45m365s","level":"info","message":"","timestamp":"2017-12-07T21:39:48.727Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T21:40:30.215Z"}
{"level":"info","message":"/api/planet","timestamp":"2017-12-07T21:40:30.216Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[2]++;cov_dsu7d9qvm.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_dsu7d9qvm.b[0][0]++;cov_dsu7d9qvm.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[0][1]++;}cov_dsu7d9qvm.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_dsu7d9qvm.b[1][0]++;cov_dsu7d9qvm.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[1][1]++;}cov_dsu7d9qvm.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_dsu7d9qvm.b[2][0]++;cov_dsu7d9qvm.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[2][1]++;}\n  //can create my planet since all test pass\n  let planet = /* istanbul ignore next */(cov_dsu7d9qvm.s[25]++, new Planet(request.body.name, request.body.content)); /* istanbul ignore next */cov_dsu7d9qvm.s[26]++;\n  planets.push(planet); /* istanbul ignore next */cov_dsu7d9qvm.s[27]++;\n  sendJSON(response, 200, planet);\n}","timestamp":"2017-12-07T21:40:30.216Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T21:40:30.216Z"}
{"level":"info","message":"/api/planet","timestamp":"2017-12-07T21:40:30.216Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.url.query.id');\n    // sendStatus(response, 200, planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;console.log(planets); /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;\n    sendJSON(response, 200, planets); /* istanbul ignore next */cov_dsu7d9qvm.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[34]++;\n  if (!planets.find(id => {/* istanbul ignore next */cov_dsu7d9qvm.f[4]++;cov_dsu7d9qvm.s[35]++;return id === request.url.query.id;})) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[36]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[37]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[39]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[40]++;sendJSON(response, 200, planets.find(id => {/* istanbul ignore next */cov_dsu7d9qvm.f[5]++;cov_dsu7d9qvm.s[41]++;return id === request.url.query.id;})); /* istanbul ignore next */cov_dsu7d9qvm.s[42]++;\n    return;\n  }\n}","timestamp":"2017-12-07T21:40:30.216Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T21:40:30.256Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T21:40:30.313Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T21:40:30.314Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[2]++;cov_dsu7d9qvm.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_dsu7d9qvm.b[0][0]++;cov_dsu7d9qvm.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[0][1]++;}cov_dsu7d9qvm.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_dsu7d9qvm.b[1][0]++;cov_dsu7d9qvm.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[1][1]++;}cov_dsu7d9qvm.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_dsu7d9qvm.b[2][0]++;cov_dsu7d9qvm.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[2][1]++;}\n  //can create my planet since all test pass\n  let planet = /* istanbul ignore next */(cov_dsu7d9qvm.s[25]++, new Planet(request.body.name, request.body.content)); /* istanbul ignore next */cov_dsu7d9qvm.s[26]++;\n  planets.push(planet); /* istanbul ignore next */cov_dsu7d9qvm.s[27]++;\n  sendJSON(response, 200, planet);\n}","timestamp":"2017-12-07T21:40:30.314Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T21:40:30.315Z"}
{"id":"3f1784a0-db97-11e7-b58f-c3b3ea2ffdda","discoverDate":"2017-01-25T11:55:32.089Z","name":"BD032562b","content":"11h50m1555sDeclination02d45m365s","level":"info","message":"","timestamp":"2017-12-07T21:40:30.315Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T21:40:30.323Z"}
{"level":"info","message":"__REQUEST_ERROR","timestamp":"2017-12-07T21:40:30.324Z"}
{"message":"Unexpected token b in JSON at position 2","stack":"SyntaxError: Unexpected token b in JSON at position 2\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/home/seth/codefellows/401/lab/08-09-vanilla-rest-server/lab-seth/lib/request-parser.js:29:31)\n    at emitNone (events.js:106:13)\n    at IncomingMessage.emit (events.js:208:7)\n    at endReadableNT (_stream_readable.js:1056:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-07T21:40:30.324Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T21:40:30.326Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T21:40:30.327Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.url.query.id');\n    // sendStatus(response, 200, planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;console.log(planets); /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;\n    sendJSON(response, 200, planets); /* istanbul ignore next */cov_dsu7d9qvm.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[34]++;\n  if (!planets.find(id => {/* istanbul ignore next */cov_dsu7d9qvm.f[4]++;cov_dsu7d9qvm.s[35]++;return id === request.url.query.id;})) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[36]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[37]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[39]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[40]++;sendJSON(response, 200, planets.find(id => {/* istanbul ignore next */cov_dsu7d9qvm.f[5]++;cov_dsu7d9qvm.s[41]++;return id === request.url.query.id;})); /* istanbul ignore next */cov_dsu7d9qvm.s[42]++;\n    return;\n  }\n}","timestamp":"2017-12-07T21:40:30.327Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T21:40:30.328Z"}
[{"id":"3f1784a0-db97-11e7-b58f-c3b3ea2ffdda","discoverDate":"2017-01-25T11:55:32.089Z","name":"BD032562b","content":"11h50m1555sDeclination02d45m365s"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T21:40:30.331Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T21:40:30.332Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.url.query.id');\n    // sendStatus(response, 200, planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;console.log(planets); /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;\n    sendJSON(response, 200, planets); /* istanbul ignore next */cov_dsu7d9qvm.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[34]++;\n  if (!planets.find(id => {/* istanbul ignore next */cov_dsu7d9qvm.f[4]++;cov_dsu7d9qvm.s[35]++;return id === request.url.query.id;})) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[36]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[37]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[39]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[40]++;sendJSON(response, 200, planets.find(id => {/* istanbul ignore next */cov_dsu7d9qvm.f[5]++;cov_dsu7d9qvm.s[41]++;return id === request.url.query.id;})); /* istanbul ignore next */cov_dsu7d9qvm.s[42]++;\n    return;\n  }\n}","timestamp":"2017-12-07T21:40:30.332Z"}
{"level":"info","message":"Responding with a 404 code due to Planet ID not found","timestamp":"2017-12-07T21:40:30.332Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T21:40:30.335Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T21:40:30.335Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.url.query.id');\n    // sendStatus(response, 200, planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;console.log(planets); /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;\n    sendJSON(response, 200, planets); /* istanbul ignore next */cov_dsu7d9qvm.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[34]++;\n  if (!planets.find(id => {/* istanbul ignore next */cov_dsu7d9qvm.f[4]++;cov_dsu7d9qvm.s[35]++;return id === request.url.query.id;})) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[36]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[37]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[39]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[40]++;sendJSON(response, 200, planets.find(id => {/* istanbul ignore next */cov_dsu7d9qvm.f[5]++;cov_dsu7d9qvm.s[41]++;return id === request.url.query.id;})); /* istanbul ignore next */cov_dsu7d9qvm.s[42]++;\n    return;\n  }\n}","timestamp":"2017-12-07T21:40:30.335Z"}
{"level":"info","message":"Responding with a 404 code due to Planet ID not found","timestamp":"2017-12-07T21:40:30.336Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T21:41:51.561Z"}
{"level":"info","message":"/api/planet","timestamp":"2017-12-07T21:41:51.562Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[2]++;cov_dsu7d9qvm.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_dsu7d9qvm.b[0][0]++;cov_dsu7d9qvm.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[0][1]++;}cov_dsu7d9qvm.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_dsu7d9qvm.b[1][0]++;cov_dsu7d9qvm.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[1][1]++;}cov_dsu7d9qvm.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_dsu7d9qvm.b[2][0]++;cov_dsu7d9qvm.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[2][1]++;}\n  //can create my planet since all test pass\n  let planet = /* istanbul ignore next */(cov_dsu7d9qvm.s[25]++, new Planet(request.body.name, request.body.content)); /* istanbul ignore next */cov_dsu7d9qvm.s[26]++;\n  planets.push(planet); /* istanbul ignore next */cov_dsu7d9qvm.s[27]++;\n  sendJSON(response, 200, planet);\n}","timestamp":"2017-12-07T21:41:51.562Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T21:41:51.562Z"}
{"level":"info","message":"/api/planet","timestamp":"2017-12-07T21:41:51.562Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.url.query.id');\n    // sendStatus(response, 200, planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;console.log(planets); /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;\n    sendJSON(response, 200, planets); /* istanbul ignore next */cov_dsu7d9qvm.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[34]++;\n  if (!planets.find(id => {/* istanbul ignore next */cov_dsu7d9qvm.f[4]++;cov_dsu7d9qvm.s[35]++;return id === request.url.query.id;})) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[36]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[37]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[39]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[40]++;sendJSON(response, 200, planets[0].id); /* istanbul ignore next */cov_dsu7d9qvm.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-07T21:41:51.562Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T21:41:51.602Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T21:41:51.666Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T21:41:51.667Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[2]++;cov_dsu7d9qvm.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_dsu7d9qvm.b[0][0]++;cov_dsu7d9qvm.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[0][1]++;}cov_dsu7d9qvm.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_dsu7d9qvm.b[1][0]++;cov_dsu7d9qvm.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[1][1]++;}cov_dsu7d9qvm.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_dsu7d9qvm.b[2][0]++;cov_dsu7d9qvm.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[2][1]++;}\n  //can create my planet since all test pass\n  let planet = /* istanbul ignore next */(cov_dsu7d9qvm.s[25]++, new Planet(request.body.name, request.body.content)); /* istanbul ignore next */cov_dsu7d9qvm.s[26]++;\n  planets.push(planet); /* istanbul ignore next */cov_dsu7d9qvm.s[27]++;\n  sendJSON(response, 200, planet);\n}","timestamp":"2017-12-07T21:41:51.668Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T21:41:51.668Z"}
{"id":"6f952740-db97-11e7-86b2-8fb9797da917","discoverDate":"2017-11-28T15:43:50.184Z","name":"BD032562b","content":"11h50m1555sDeclination02d45m365s","level":"info","message":"","timestamp":"2017-12-07T21:41:51.668Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T21:41:51.677Z"}
{"level":"info","message":"__REQUEST_ERROR","timestamp":"2017-12-07T21:41:51.678Z"}
{"message":"Unexpected token b in JSON at position 2","stack":"SyntaxError: Unexpected token b in JSON at position 2\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/home/seth/codefellows/401/lab/08-09-vanilla-rest-server/lab-seth/lib/request-parser.js:29:31)\n    at emitNone (events.js:106:13)\n    at IncomingMessage.emit (events.js:208:7)\n    at endReadableNT (_stream_readable.js:1056:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-07T21:41:51.678Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T21:41:51.680Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T21:41:51.680Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.url.query.id');\n    // sendStatus(response, 200, planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;console.log(planets); /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;\n    sendJSON(response, 200, planets); /* istanbul ignore next */cov_dsu7d9qvm.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[34]++;\n  if (!planets.find(id => {/* istanbul ignore next */cov_dsu7d9qvm.f[4]++;cov_dsu7d9qvm.s[35]++;return id === request.url.query.id;})) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[36]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[37]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[39]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[40]++;sendJSON(response, 200, planets[0].id); /* istanbul ignore next */cov_dsu7d9qvm.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-07T21:41:51.680Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T21:41:51.682Z"}
[{"id":"6f952740-db97-11e7-86b2-8fb9797da917","discoverDate":"2017-11-28T15:43:50.184Z","name":"BD032562b","content":"11h50m1555sDeclination02d45m365s"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T21:41:51.685Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T21:41:51.685Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.url.query.id');\n    // sendStatus(response, 200, planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;console.log(planets); /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;\n    sendJSON(response, 200, planets); /* istanbul ignore next */cov_dsu7d9qvm.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[34]++;\n  if (!planets.find(id => {/* istanbul ignore next */cov_dsu7d9qvm.f[4]++;cov_dsu7d9qvm.s[35]++;return id === request.url.query.id;})) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[36]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[37]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[39]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[40]++;sendJSON(response, 200, planets[0].id); /* istanbul ignore next */cov_dsu7d9qvm.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-07T21:41:51.685Z"}
{"level":"info","message":"Responding with a 404 code due to Planet ID not found","timestamp":"2017-12-07T21:41:51.686Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T21:41:51.688Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T21:41:51.688Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.url.query.id');\n    // sendStatus(response, 200, planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;console.log(planets); /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;\n    sendJSON(response, 200, planets); /* istanbul ignore next */cov_dsu7d9qvm.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[34]++;\n  if (!planets.find(id => {/* istanbul ignore next */cov_dsu7d9qvm.f[4]++;cov_dsu7d9qvm.s[35]++;return id === request.url.query.id;})) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[36]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[37]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[39]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[40]++;sendJSON(response, 200, planets[0].id); /* istanbul ignore next */cov_dsu7d9qvm.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-07T21:41:51.689Z"}
{"level":"info","message":"Responding with a 404 code due to Planet ID not found","timestamp":"2017-12-07T21:41:51.689Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T21:47:25.074Z"}
{"level":"info","message":"/api/planet","timestamp":"2017-12-07T21:47:25.074Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[2]++;cov_dsu7d9qvm.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_dsu7d9qvm.b[0][0]++;cov_dsu7d9qvm.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[0][1]++;}cov_dsu7d9qvm.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_dsu7d9qvm.b[1][0]++;cov_dsu7d9qvm.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[1][1]++;}cov_dsu7d9qvm.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_dsu7d9qvm.b[2][0]++;cov_dsu7d9qvm.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[2][1]++;}\n  //can create my planet since all test pass\n  let planet = /* istanbul ignore next */(cov_dsu7d9qvm.s[25]++, new Planet(request.body.name, request.body.content)); /* istanbul ignore next */cov_dsu7d9qvm.s[26]++;\n  planets.push(planet); /* istanbul ignore next */cov_dsu7d9qvm.s[27]++;\n  sendJSON(response, 200, planet);\n}","timestamp":"2017-12-07T21:47:25.074Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T21:47:25.074Z"}
{"level":"info","message":"/api/planet","timestamp":"2017-12-07T21:47:25.074Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.url.query.id');\n    // sendStatus(response, 200, planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;console.log(planets); /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;\n    sendJSON(response, 200, planets); /* istanbul ignore next */cov_dsu7d9qvm.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[34]++;\n  if (!planets.find(id => {/* istanbul ignore next */cov_dsu7d9qvm.f[4]++;cov_dsu7d9qvm.s[35]++;return id === request.url.query.id;}).length > 0) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[36]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[37]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[39]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[40]++;sendJSON(response, 200, planets[0].id); /* istanbul ignore next */cov_dsu7d9qvm.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-07T21:47:25.074Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T21:47:25.116Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T21:47:25.174Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T21:47:25.175Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[2]++;cov_dsu7d9qvm.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_dsu7d9qvm.b[0][0]++;cov_dsu7d9qvm.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[0][1]++;}cov_dsu7d9qvm.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_dsu7d9qvm.b[1][0]++;cov_dsu7d9qvm.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[1][1]++;}cov_dsu7d9qvm.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_dsu7d9qvm.b[2][0]++;cov_dsu7d9qvm.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[2][1]++;}\n  //can create my planet since all test pass\n  let planet = /* istanbul ignore next */(cov_dsu7d9qvm.s[25]++, new Planet(request.body.name, request.body.content)); /* istanbul ignore next */cov_dsu7d9qvm.s[26]++;\n  planets.push(planet); /* istanbul ignore next */cov_dsu7d9qvm.s[27]++;\n  sendJSON(response, 200, planet);\n}","timestamp":"2017-12-07T21:47:25.175Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T21:47:25.176Z"}
{"id":"365e6f80-db98-11e7-b1a7-3f08a635f9f8","discoverDate":"2017-08-12T05:26:29.537Z","name":"BD032562b","content":"11h50m1555sDeclination02d45m365s","level":"info","message":"","timestamp":"2017-12-07T21:47:25.177Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T21:47:25.186Z"}
{"level":"info","message":"__REQUEST_ERROR","timestamp":"2017-12-07T21:47:25.187Z"}
{"message":"Unexpected token b in JSON at position 2","stack":"SyntaxError: Unexpected token b in JSON at position 2\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/home/seth/codefellows/401/lab/08-09-vanilla-rest-server/lab-seth/lib/request-parser.js:29:31)\n    at emitNone (events.js:106:13)\n    at IncomingMessage.emit (events.js:208:7)\n    at endReadableNT (_stream_readable.js:1056:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-07T21:47:25.187Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T21:47:25.190Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T21:47:25.190Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.url.query.id');\n    // sendStatus(response, 200, planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;console.log(planets); /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;\n    sendJSON(response, 200, planets); /* istanbul ignore next */cov_dsu7d9qvm.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[34]++;\n  if (!planets.find(id => {/* istanbul ignore next */cov_dsu7d9qvm.f[4]++;cov_dsu7d9qvm.s[35]++;return id === request.url.query.id;}).length > 0) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[36]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[37]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[39]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[40]++;sendJSON(response, 200, planets[0].id); /* istanbul ignore next */cov_dsu7d9qvm.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-07T21:47:25.191Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T21:47:25.194Z"}
[{"id":"365e6f80-db98-11e7-b1a7-3f08a635f9f8","discoverDate":"2017-08-12T05:26:29.537Z","name":"BD032562b","content":"11h50m1555sDeclination02d45m365s"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T21:47:25.199Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T21:47:25.200Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.url.query.id');\n    // sendStatus(response, 200, planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;console.log(planets); /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;\n    sendJSON(response, 200, planets); /* istanbul ignore next */cov_dsu7d9qvm.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[34]++;\n  if (!planets.find(id => {/* istanbul ignore next */cov_dsu7d9qvm.f[4]++;cov_dsu7d9qvm.s[35]++;return id === request.url.query.id;}).length > 0) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[36]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[37]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[39]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[40]++;sendJSON(response, 200, planets[0].id); /* istanbul ignore next */cov_dsu7d9qvm.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-07T21:47:25.200Z"}
{"level":"info","message":"__REQUEST_ERROR","timestamp":"2017-12-07T21:47:25.201Z"}
{"message":"Cannot read property 'length' of undefined","stack":"TypeError: Cannot read property 'length' of undefined\n    at Object.<anonymous>.router.get (/home/seth/codefellows/401/lab/08-09-vanilla-rest-server/lab-seth/route/planet-router.js:64:134)\n    at requestParser.parse.then.request (/home/seth/codefellows/401/lab/08-09-vanilla-rest-server/lab-seth/lib/router.js:54:89)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T21:47:25.201Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T21:47:25.203Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T21:47:25.204Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.url.query.id');\n    // sendStatus(response, 200, planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;console.log(planets); /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;\n    sendJSON(response, 200, planets); /* istanbul ignore next */cov_dsu7d9qvm.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[34]++;\n  if (!planets.find(id => {/* istanbul ignore next */cov_dsu7d9qvm.f[4]++;cov_dsu7d9qvm.s[35]++;return id === request.url.query.id;}).length > 0) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[36]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[37]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[39]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[40]++;sendJSON(response, 200, planets[0].id); /* istanbul ignore next */cov_dsu7d9qvm.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-07T21:47:25.204Z"}
{"level":"info","message":"__REQUEST_ERROR","timestamp":"2017-12-07T21:47:25.204Z"}
{"message":"Cannot read property 'length' of undefined","stack":"TypeError: Cannot read property 'length' of undefined\n    at Object.<anonymous>.router.get (/home/seth/codefellows/401/lab/08-09-vanilla-rest-server/lab-seth/route/planet-router.js:64:134)\n    at requestParser.parse.then.request (/home/seth/codefellows/401/lab/08-09-vanilla-rest-server/lab-seth/lib/router.js:54:89)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T21:47:25.204Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T21:49:06.084Z"}
{"level":"info","message":"/api/planet","timestamp":"2017-12-07T21:49:06.085Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[2]++;cov_dsu7d9qvm.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_dsu7d9qvm.b[0][0]++;cov_dsu7d9qvm.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[0][1]++;}cov_dsu7d9qvm.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_dsu7d9qvm.b[1][0]++;cov_dsu7d9qvm.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[1][1]++;}cov_dsu7d9qvm.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_dsu7d9qvm.b[2][0]++;cov_dsu7d9qvm.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[2][1]++;}\n  //can create my planet since all test pass\n  let planet = /* istanbul ignore next */(cov_dsu7d9qvm.s[25]++, new Planet(request.body.name, request.body.content)); /* istanbul ignore next */cov_dsu7d9qvm.s[26]++;\n  planets.push(planet); /* istanbul ignore next */cov_dsu7d9qvm.s[27]++;\n  sendJSON(response, 200, planet);\n}","timestamp":"2017-12-07T21:49:06.085Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T21:49:06.085Z"}
{"level":"info","message":"/api/planet","timestamp":"2017-12-07T21:49:06.085Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.url.query.id');\n    // sendStatus(response, 200, planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;console.log(planets); /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;\n    sendJSON(response, 200, planets); /* istanbul ignore next */cov_dsu7d9qvm.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[34]++;\n  if (!planets.find(id => {/* istanbul ignore next */cov_dsu7d9qvm.f[4]++;cov_dsu7d9qvm.s[35]++;return id === request.url.query.id;}).length > 0) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[36]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[37]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[39]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[40]++;sendJSON(response, 200, planets[0].id); /* istanbul ignore next */cov_dsu7d9qvm.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-07T21:49:06.085Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T21:49:06.129Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T21:49:06.180Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T21:49:06.181Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[2]++;cov_dsu7d9qvm.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_dsu7d9qvm.b[0][0]++;cov_dsu7d9qvm.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[0][1]++;}cov_dsu7d9qvm.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_dsu7d9qvm.b[1][0]++;cov_dsu7d9qvm.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[1][1]++;}cov_dsu7d9qvm.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_dsu7d9qvm.b[2][0]++;cov_dsu7d9qvm.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[2][1]++;}\n  //can create my planet since all test pass\n  let planet = /* istanbul ignore next */(cov_dsu7d9qvm.s[25]++, new Planet(request.body.name, request.body.content)); /* istanbul ignore next */cov_dsu7d9qvm.s[26]++;\n  planets.push(planet); /* istanbul ignore next */cov_dsu7d9qvm.s[27]++;\n  sendJSON(response, 200, planet);\n}","timestamp":"2017-12-07T21:49:06.181Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T21:49:06.182Z"}
{"id":"72929350-db98-11e7-a67a-ed8b02595dd4","discoverDate":"2017-05-17T10:59:41.562Z","name":"BD032562b","content":"11h50m1555sDeclination02d45m365s","level":"info","message":"","timestamp":"2017-12-07T21:49:06.182Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T21:49:06.190Z"}
{"level":"info","message":"__REQUEST_ERROR","timestamp":"2017-12-07T21:49:06.192Z"}
{"message":"Unexpected token b in JSON at position 2","stack":"SyntaxError: Unexpected token b in JSON at position 2\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/home/seth/codefellows/401/lab/08-09-vanilla-rest-server/lab-seth/lib/request-parser.js:29:31)\n    at emitNone (events.js:106:13)\n    at IncomingMessage.emit (events.js:208:7)\n    at endReadableNT (_stream_readable.js:1056:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-07T21:49:06.192Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T21:49:06.195Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T21:49:06.195Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.url.query.id');\n    // sendStatus(response, 200, planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;console.log(planets); /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;\n    sendJSON(response, 200, planets); /* istanbul ignore next */cov_dsu7d9qvm.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[34]++;\n  if (!planets.find(id => {/* istanbul ignore next */cov_dsu7d9qvm.f[4]++;cov_dsu7d9qvm.s[35]++;return id === request.url.query.id;}).length > 0) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[36]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[37]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[39]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[40]++;sendJSON(response, 200, planets[0].id); /* istanbul ignore next */cov_dsu7d9qvm.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-07T21:49:06.195Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T21:49:06.197Z"}
[{"id":"72929350-db98-11e7-a67a-ed8b02595dd4","discoverDate":"2017-05-17T10:59:41.562Z","name":"BD032562b","content":"11h50m1555sDeclination02d45m365s"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T21:49:06.201Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T21:49:06.201Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.url.query.id');\n    // sendStatus(response, 200, planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;console.log(planets); /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;\n    sendJSON(response, 200, planets); /* istanbul ignore next */cov_dsu7d9qvm.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[34]++;\n  if (!planets.find(id => {/* istanbul ignore next */cov_dsu7d9qvm.f[4]++;cov_dsu7d9qvm.s[35]++;return id === request.url.query.id;}).length > 0) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[36]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[37]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[39]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[40]++;sendJSON(response, 200, planets[0].id); /* istanbul ignore next */cov_dsu7d9qvm.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-07T21:49:06.201Z"}
{"level":"info","message":"__REQUEST_ERROR","timestamp":"2017-12-07T21:49:06.202Z"}
{"message":"Cannot read property 'length' of undefined","stack":"TypeError: Cannot read property 'length' of undefined\n    at Object.<anonymous>.router.get (/home/seth/codefellows/401/lab/08-09-vanilla-rest-server/lab-seth/route/planet-router.js:64:134)\n    at requestParser.parse.then.request (/home/seth/codefellows/401/lab/08-09-vanilla-rest-server/lab-seth/lib/router.js:54:89)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T21:49:06.202Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T21:49:06.205Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T21:49:06.205Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.url.query.id');\n    // sendStatus(response, 200, planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;console.log(planets); /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;\n    sendJSON(response, 200, planets); /* istanbul ignore next */cov_dsu7d9qvm.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[34]++;\n  if (!planets.find(id => {/* istanbul ignore next */cov_dsu7d9qvm.f[4]++;cov_dsu7d9qvm.s[35]++;return id === request.url.query.id;}).length > 0) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[36]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[37]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[39]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[40]++;sendJSON(response, 200, planets[0].id); /* istanbul ignore next */cov_dsu7d9qvm.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-07T21:49:06.205Z"}
{"level":"info","message":"__REQUEST_ERROR","timestamp":"2017-12-07T21:49:06.205Z"}
{"message":"Cannot read property 'length' of undefined","stack":"TypeError: Cannot read property 'length' of undefined\n    at Object.<anonymous>.router.get (/home/seth/codefellows/401/lab/08-09-vanilla-rest-server/lab-seth/route/planet-router.js:64:134)\n    at requestParser.parse.then.request (/home/seth/codefellows/401/lab/08-09-vanilla-rest-server/lab-seth/lib/router.js:54:89)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T21:49:06.205Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T21:49:16.857Z"}
{"level":"info","message":"/api/planet","timestamp":"2017-12-07T21:49:16.857Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[2]++;cov_dsu7d9qvm.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_dsu7d9qvm.b[0][0]++;cov_dsu7d9qvm.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[0][1]++;}cov_dsu7d9qvm.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_dsu7d9qvm.b[1][0]++;cov_dsu7d9qvm.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[1][1]++;}cov_dsu7d9qvm.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_dsu7d9qvm.b[2][0]++;cov_dsu7d9qvm.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[2][1]++;}\n  //can create my planet since all test pass\n  let planet = /* istanbul ignore next */(cov_dsu7d9qvm.s[25]++, new Planet(request.body.name, request.body.content)); /* istanbul ignore next */cov_dsu7d9qvm.s[26]++;\n  planets.push(planet); /* istanbul ignore next */cov_dsu7d9qvm.s[27]++;\n  sendJSON(response, 200, planet);\n}","timestamp":"2017-12-07T21:49:16.857Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T21:49:16.857Z"}
{"level":"info","message":"/api/planet","timestamp":"2017-12-07T21:49:16.857Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.url.query.id');\n    // sendStatus(response, 200, planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;console.log(planets); /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;\n    sendJSON(response, 200, planets); /* istanbul ignore next */cov_dsu7d9qvm.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[34]++;\n  if (planets.find(planet => {/* istanbul ignore next */cov_dsu7d9qvm.f[4]++;cov_dsu7d9qvm.s[35]++;return planet.id === request.url.query.id;})) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[36]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[37]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[39]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[40]++;sendJSON(response, 200, planets[0].id); /* istanbul ignore next */cov_dsu7d9qvm.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-07T21:49:16.857Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T21:49:16.899Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T21:49:16.962Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T21:49:16.963Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[2]++;cov_dsu7d9qvm.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_dsu7d9qvm.b[0][0]++;cov_dsu7d9qvm.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[0][1]++;}cov_dsu7d9qvm.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_dsu7d9qvm.b[1][0]++;cov_dsu7d9qvm.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[1][1]++;}cov_dsu7d9qvm.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_dsu7d9qvm.b[2][0]++;cov_dsu7d9qvm.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[2][1]++;}\n  //can create my planet since all test pass\n  let planet = /* istanbul ignore next */(cov_dsu7d9qvm.s[25]++, new Planet(request.body.name, request.body.content)); /* istanbul ignore next */cov_dsu7d9qvm.s[26]++;\n  planets.push(planet); /* istanbul ignore next */cov_dsu7d9qvm.s[27]++;\n  sendJSON(response, 200, planet);\n}","timestamp":"2017-12-07T21:49:16.963Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T21:49:16.964Z"}
{"id":"78ffc730-db98-11e7-bb63-6b75275ae4b5","discoverDate":"2017-10-11T06:47:53.248Z","name":"BD032562b","content":"11h50m1555sDeclination02d45m365s","level":"info","message":"","timestamp":"2017-12-07T21:49:16.964Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T21:49:16.974Z"}
{"level":"info","message":"__REQUEST_ERROR","timestamp":"2017-12-07T21:49:16.974Z"}
{"message":"Unexpected token b in JSON at position 2","stack":"SyntaxError: Unexpected token b in JSON at position 2\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/home/seth/codefellows/401/lab/08-09-vanilla-rest-server/lab-seth/lib/request-parser.js:29:31)\n    at emitNone (events.js:106:13)\n    at IncomingMessage.emit (events.js:208:7)\n    at endReadableNT (_stream_readable.js:1056:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-07T21:49:16.974Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T21:49:16.978Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T21:49:16.978Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.url.query.id');\n    // sendStatus(response, 200, planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;console.log(planets); /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;\n    sendJSON(response, 200, planets); /* istanbul ignore next */cov_dsu7d9qvm.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[34]++;\n  if (planets.find(planet => {/* istanbul ignore next */cov_dsu7d9qvm.f[4]++;cov_dsu7d9qvm.s[35]++;return planet.id === request.url.query.id;})) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[36]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[37]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[39]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[40]++;sendJSON(response, 200, planets[0].id); /* istanbul ignore next */cov_dsu7d9qvm.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-07T21:49:16.978Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T21:49:16.981Z"}
[{"id":"78ffc730-db98-11e7-bb63-6b75275ae4b5","discoverDate":"2017-10-11T06:47:53.248Z","name":"BD032562b","content":"11h50m1555sDeclination02d45m365s"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T21:49:16.985Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T21:49:16.985Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.url.query.id');\n    // sendStatus(response, 200, planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;console.log(planets); /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;\n    sendJSON(response, 200, planets); /* istanbul ignore next */cov_dsu7d9qvm.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[34]++;\n  if (planets.find(planet => {/* istanbul ignore next */cov_dsu7d9qvm.f[4]++;cov_dsu7d9qvm.s[35]++;return planet.id === request.url.query.id;})) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[36]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[37]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[39]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[40]++;sendJSON(response, 200, planets[0].id); /* istanbul ignore next */cov_dsu7d9qvm.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-07T21:49:16.986Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T21:49:16.986Z"}
{"level":"info","message":"78ffc730-db98-11e7-bb63-6b75275ae4b5","timestamp":"2017-12-07T21:49:16.986Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T21:49:16.989Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T21:49:16.989Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.url.query.id');\n    // sendStatus(response, 200, planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;console.log(planets); /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;\n    sendJSON(response, 200, planets); /* istanbul ignore next */cov_dsu7d9qvm.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[34]++;\n  if (planets.find(planet => {/* istanbul ignore next */cov_dsu7d9qvm.f[4]++;cov_dsu7d9qvm.s[35]++;return planet.id === request.url.query.id;})) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[36]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[37]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[39]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[40]++;sendJSON(response, 200, planets[0].id); /* istanbul ignore next */cov_dsu7d9qvm.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-07T21:49:16.990Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T21:49:16.990Z"}
{"level":"info","message":"78ffc730-db98-11e7-bb63-6b75275ae4b5","timestamp":"2017-12-07T21:49:16.990Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T21:49:33.688Z"}
{"level":"info","message":"/api/planet","timestamp":"2017-12-07T21:49:33.688Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[2]++;cov_dsu7d9qvm.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_dsu7d9qvm.b[0][0]++;cov_dsu7d9qvm.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[0][1]++;}cov_dsu7d9qvm.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_dsu7d9qvm.b[1][0]++;cov_dsu7d9qvm.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[1][1]++;}cov_dsu7d9qvm.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_dsu7d9qvm.b[2][0]++;cov_dsu7d9qvm.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[2][1]++;}\n  //can create my planet since all test pass\n  let planet = /* istanbul ignore next */(cov_dsu7d9qvm.s[25]++, new Planet(request.body.name, request.body.content)); /* istanbul ignore next */cov_dsu7d9qvm.s[26]++;\n  planets.push(planet); /* istanbul ignore next */cov_dsu7d9qvm.s[27]++;\n  sendJSON(response, 200, planet);\n}","timestamp":"2017-12-07T21:49:33.688Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T21:49:33.688Z"}
{"level":"info","message":"/api/planet","timestamp":"2017-12-07T21:49:33.688Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.url.query.id');\n    // sendStatus(response, 200, planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;console.log(planets); /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;\n    sendJSON(response, 200, planets); /* istanbul ignore next */cov_dsu7d9qvm.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[34]++;\n  if (!planets.find(planet => {/* istanbul ignore next */cov_dsu7d9qvm.f[4]++;cov_dsu7d9qvm.s[35]++;return planet.id === request.url.query.id;})) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[36]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[37]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[39]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[40]++;sendJSON(response, 200, planets[0].id); /* istanbul ignore next */cov_dsu7d9qvm.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-07T21:49:33.688Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T21:49:33.730Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T21:49:33.785Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T21:49:33.787Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[2]++;cov_dsu7d9qvm.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_dsu7d9qvm.b[0][0]++;cov_dsu7d9qvm.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[0][1]++;}cov_dsu7d9qvm.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_dsu7d9qvm.b[1][0]++;cov_dsu7d9qvm.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[1][1]++;}cov_dsu7d9qvm.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_dsu7d9qvm.b[2][0]++;cov_dsu7d9qvm.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[2][1]++;}\n  //can create my planet since all test pass\n  let planet = /* istanbul ignore next */(cov_dsu7d9qvm.s[25]++, new Planet(request.body.name, request.body.content)); /* istanbul ignore next */cov_dsu7d9qvm.s[26]++;\n  planets.push(planet); /* istanbul ignore next */cov_dsu7d9qvm.s[27]++;\n  sendJSON(response, 200, planet);\n}","timestamp":"2017-12-07T21:49:33.787Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T21:49:33.788Z"}
{"id":"830711c0-db98-11e7-b1fe-69b98384acb1","discoverDate":"2017-02-09T11:11:05.915Z","name":"BD032562b","content":"11h50m1555sDeclination02d45m365s","level":"info","message":"","timestamp":"2017-12-07T21:49:33.788Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T21:49:33.798Z"}
{"level":"info","message":"__REQUEST_ERROR","timestamp":"2017-12-07T21:49:33.798Z"}
{"message":"Unexpected token b in JSON at position 2","stack":"SyntaxError: Unexpected token b in JSON at position 2\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/home/seth/codefellows/401/lab/08-09-vanilla-rest-server/lab-seth/lib/request-parser.js:29:31)\n    at emitNone (events.js:106:13)\n    at IncomingMessage.emit (events.js:208:7)\n    at endReadableNT (_stream_readable.js:1056:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-07T21:49:33.798Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T21:49:33.802Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T21:49:33.802Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.url.query.id');\n    // sendStatus(response, 200, planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;console.log(planets); /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;\n    sendJSON(response, 200, planets); /* istanbul ignore next */cov_dsu7d9qvm.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[34]++;\n  if (!planets.find(planet => {/* istanbul ignore next */cov_dsu7d9qvm.f[4]++;cov_dsu7d9qvm.s[35]++;return planet.id === request.url.query.id;})) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[36]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[37]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[39]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[40]++;sendJSON(response, 200, planets[0].id); /* istanbul ignore next */cov_dsu7d9qvm.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-07T21:49:33.802Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T21:49:33.804Z"}
[{"id":"830711c0-db98-11e7-b1fe-69b98384acb1","discoverDate":"2017-02-09T11:11:05.915Z","name":"BD032562b","content":"11h50m1555sDeclination02d45m365s"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T21:49:33.808Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T21:49:33.809Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.url.query.id');\n    // sendStatus(response, 200, planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;console.log(planets); /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;\n    sendJSON(response, 200, planets); /* istanbul ignore next */cov_dsu7d9qvm.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[34]++;\n  if (!planets.find(planet => {/* istanbul ignore next */cov_dsu7d9qvm.f[4]++;cov_dsu7d9qvm.s[35]++;return planet.id === request.url.query.id;})) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[36]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[37]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[39]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[40]++;sendJSON(response, 200, planets[0].id); /* istanbul ignore next */cov_dsu7d9qvm.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-07T21:49:33.809Z"}
{"level":"info","message":"Responding with a 404 code due to Planet ID not found","timestamp":"2017-12-07T21:49:33.810Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T21:49:33.812Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T21:49:33.813Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.url.query.id');\n    // sendStatus(response, 200, planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;console.log(planets); /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;\n    sendJSON(response, 200, planets); /* istanbul ignore next */cov_dsu7d9qvm.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[34]++;\n  if (!planets.find(planet => {/* istanbul ignore next */cov_dsu7d9qvm.f[4]++;cov_dsu7d9qvm.s[35]++;return planet.id === request.url.query.id;})) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[36]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[37]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[39]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[40]++;sendJSON(response, 200, planets[0].id); /* istanbul ignore next */cov_dsu7d9qvm.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-07T21:49:33.813Z"}
{"level":"info","message":"Responding with a 404 code due to Planet ID not found","timestamp":"2017-12-07T21:49:33.813Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T21:50:39.437Z"}
{"level":"info","message":"/api/planet","timestamp":"2017-12-07T21:50:39.438Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[2]++;cov_dsu7d9qvm.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_dsu7d9qvm.b[0][0]++;cov_dsu7d9qvm.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[0][1]++;}cov_dsu7d9qvm.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_dsu7d9qvm.b[1][0]++;cov_dsu7d9qvm.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[1][1]++;}cov_dsu7d9qvm.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_dsu7d9qvm.b[2][0]++;cov_dsu7d9qvm.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[2][1]++;}\n  //can create my planet since all test pass\n  let planet = /* istanbul ignore next */(cov_dsu7d9qvm.s[25]++, new Planet(request.body.name, request.body.content)); /* istanbul ignore next */cov_dsu7d9qvm.s[26]++;\n  planets.push(planet); /* istanbul ignore next */cov_dsu7d9qvm.s[27]++;\n  sendJSON(response, 200, planet);\n}","timestamp":"2017-12-07T21:50:39.438Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T21:50:39.438Z"}
{"level":"info","message":"/api/planet","timestamp":"2017-12-07T21:50:39.438Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.url.query.id');\n    // sendStatus(response, 200, planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;console.log(planets); /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;\n    sendJSON(response, 200, planets); /* istanbul ignore next */cov_dsu7d9qvm.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[34]++;\n  if (!planets.find(planet => {/* istanbul ignore next */cov_dsu7d9qvm.f[4]++;cov_dsu7d9qvm.s[35]++;return planet.id === request.url.query.id;})) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[36]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[37]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[39]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[40]++;sendJSON(response, 200, planets[0].id); /* istanbul ignore next */cov_dsu7d9qvm.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-07T21:50:39.438Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T21:50:39.479Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T21:50:39.536Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T21:50:39.537Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[2]++;cov_dsu7d9qvm.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_dsu7d9qvm.b[0][0]++;cov_dsu7d9qvm.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[0][1]++;}cov_dsu7d9qvm.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_dsu7d9qvm.b[1][0]++;cov_dsu7d9qvm.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[1][1]++;}cov_dsu7d9qvm.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_dsu7d9qvm.b[2][0]++;cov_dsu7d9qvm.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[2][1]++;}\n  //can create my planet since all test pass\n  let planet = /* istanbul ignore next */(cov_dsu7d9qvm.s[25]++, new Planet(request.body.name, request.body.content)); /* istanbul ignore next */cov_dsu7d9qvm.s[26]++;\n  planets.push(planet); /* istanbul ignore next */cov_dsu7d9qvm.s[27]++;\n  sendJSON(response, 200, planet);\n}","timestamp":"2017-12-07T21:50:39.537Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T21:50:39.538Z"}
{"id":"aa379210-db98-11e7-ac53-f5f5d7b8e565","discoverDate":"2016-12-27T19:48:34.280Z","name":"BD032562b","content":"11h50m1555sDeclination02d45m365s","level":"info","message":"","timestamp":"2017-12-07T21:50:39.538Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T21:50:39.546Z"}
{"level":"info","message":"__REQUEST_ERROR","timestamp":"2017-12-07T21:50:39.547Z"}
{"message":"Unexpected token b in JSON at position 2","stack":"SyntaxError: Unexpected token b in JSON at position 2\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/home/seth/codefellows/401/lab/08-09-vanilla-rest-server/lab-seth/lib/request-parser.js:29:31)\n    at emitNone (events.js:106:13)\n    at IncomingMessage.emit (events.js:208:7)\n    at endReadableNT (_stream_readable.js:1056:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-07T21:50:39.547Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T21:50:39.549Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T21:50:39.550Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.url.query.id');\n    // sendStatus(response, 200, planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;console.log(planets); /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;\n    sendJSON(response, 200, planets); /* istanbul ignore next */cov_dsu7d9qvm.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[34]++;\n  if (!planets.find(planet => {/* istanbul ignore next */cov_dsu7d9qvm.f[4]++;cov_dsu7d9qvm.s[35]++;return planet.id === request.url.query.id;})) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[36]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[37]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[39]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[40]++;sendJSON(response, 200, planets[0].id); /* istanbul ignore next */cov_dsu7d9qvm.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-07T21:50:39.550Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T21:50:39.552Z"}
[{"id":"aa379210-db98-11e7-ac53-f5f5d7b8e565","discoverDate":"2016-12-27T19:48:34.280Z","name":"BD032562b","content":"11h50m1555sDeclination02d45m365s"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T21:50:39.554Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T21:50:39.555Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.url.query.id');\n    // sendStatus(response, 200, planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;console.log(planets); /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;\n    sendJSON(response, 200, planets); /* istanbul ignore next */cov_dsu7d9qvm.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[34]++;\n  if (!planets.find(planet => {/* istanbul ignore next */cov_dsu7d9qvm.f[4]++;cov_dsu7d9qvm.s[35]++;return planet.id === request.url.query.id;})) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[36]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[37]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[39]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[40]++;sendJSON(response, 200, planets[0].id); /* istanbul ignore next */cov_dsu7d9qvm.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-07T21:50:39.555Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T21:50:39.555Z"}
{"level":"info","message":"aa379210-db98-11e7-ac53-f5f5d7b8e565","timestamp":"2017-12-07T21:50:39.555Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T21:50:39.559Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T21:50:39.559Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.url.query.id');\n    // sendStatus(response, 200, planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;console.log(planets); /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;\n    sendJSON(response, 200, planets); /* istanbul ignore next */cov_dsu7d9qvm.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[34]++;\n  if (!planets.find(planet => {/* istanbul ignore next */cov_dsu7d9qvm.f[4]++;cov_dsu7d9qvm.s[35]++;return planet.id === request.url.query.id;})) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[36]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[37]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[39]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[40]++;sendJSON(response, 200, planets[0].id); /* istanbul ignore next */cov_dsu7d9qvm.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-07T21:50:39.559Z"}
{"level":"info","message":"Responding with a 404 code due to Planet ID not found","timestamp":"2017-12-07T21:50:39.559Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T22:19:14.675Z"}
{"level":"info","message":"/api/planet","timestamp":"2017-12-07T22:19:14.675Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[2]++;cov_dsu7d9qvm.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_dsu7d9qvm.b[0][0]++;cov_dsu7d9qvm.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[0][1]++;}cov_dsu7d9qvm.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_dsu7d9qvm.b[1][0]++;cov_dsu7d9qvm.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[1][1]++;}cov_dsu7d9qvm.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_dsu7d9qvm.b[2][0]++;cov_dsu7d9qvm.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[2][1]++;}\n  //can create my planet since all test pass\n  let planet = /* istanbul ignore next */(cov_dsu7d9qvm.s[25]++, new Planet(request.body.name, request.body.content)); /* istanbul ignore next */cov_dsu7d9qvm.s[26]++;\n  planets.push(planet); /* istanbul ignore next */cov_dsu7d9qvm.s[27]++;\n  sendJSON(response, 200, planet);\n}","timestamp":"2017-12-07T22:19:14.675Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T22:19:14.676Z"}
{"level":"info","message":"/api/planet","timestamp":"2017-12-07T22:19:14.676Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.url.query.id');\n    // sendStatus(response, 200, planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;console.log(planets); /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;\n    sendJSON(response, 200, planets); /* istanbul ignore next */cov_dsu7d9qvm.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[34]++;\n  if (!planets.find(planet => {/* istanbul ignore next */cov_dsu7d9qvm.f[4]++;cov_dsu7d9qvm.s[35]++;return planet.id === request.url.query.id;})) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[36]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[37]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[39]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[40]++;sendJSON(response, 200, planets[0].id); /* istanbul ignore next */cov_dsu7d9qvm.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-07T22:19:14.676Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T22:19:14.717Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T22:19:14.767Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T22:19:14.768Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[2]++;cov_dsu7d9qvm.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_dsu7d9qvm.b[0][0]++;cov_dsu7d9qvm.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[0][1]++;}cov_dsu7d9qvm.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_dsu7d9qvm.b[1][0]++;cov_dsu7d9qvm.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[1][1]++;}cov_dsu7d9qvm.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_dsu7d9qvm.b[2][0]++;cov_dsu7d9qvm.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[2][1]++;}\n  //can create my planet since all test pass\n  let planet = /* istanbul ignore next */(cov_dsu7d9qvm.s[25]++, new Planet(request.body.name, request.body.content)); /* istanbul ignore next */cov_dsu7d9qvm.s[26]++;\n  planets.push(planet); /* istanbul ignore next */cov_dsu7d9qvm.s[27]++;\n  sendJSON(response, 200, planet);\n}","timestamp":"2017-12-07T22:19:14.768Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T22:19:14.769Z"}
{"id":"a8930d00-db9c-11e7-aa53-cf9242489f9d","discoverDate":"2017-05-03T00:38:47.262Z","name":"BD032562b","content":"11h50m1555sDeclination02d45m365s","level":"info","message":"","timestamp":"2017-12-07T22:19:14.769Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T22:19:14.778Z"}
{"level":"info","message":"__REQUEST_ERROR","timestamp":"2017-12-07T22:19:14.779Z"}
{"message":"Unexpected token b in JSON at position 2","stack":"SyntaxError: Unexpected token b in JSON at position 2\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/home/seth/codefellows/401/lab/08-09-vanilla-rest-server/lab-seth/lib/request-parser.js:29:31)\n    at emitNone (events.js:106:13)\n    at IncomingMessage.emit (events.js:208:7)\n    at endReadableNT (_stream_readable.js:1056:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-07T22:19:14.779Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T22:19:14.782Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T22:19:14.782Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.url.query.id');\n    // sendStatus(response, 200, planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;console.log(planets); /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;\n    sendJSON(response, 200, planets); /* istanbul ignore next */cov_dsu7d9qvm.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[34]++;\n  if (!planets.find(planet => {/* istanbul ignore next */cov_dsu7d9qvm.f[4]++;cov_dsu7d9qvm.s[35]++;return planet.id === request.url.query.id;})) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[36]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[37]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[39]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[40]++;sendJSON(response, 200, planets[0].id); /* istanbul ignore next */cov_dsu7d9qvm.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-07T22:19:14.782Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T22:19:14.784Z"}
[{"id":"a8930d00-db9c-11e7-aa53-cf9242489f9d","discoverDate":"2017-05-03T00:38:47.262Z","name":"BD032562b","content":"11h50m1555sDeclination02d45m365s"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T22:19:14.787Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T22:19:14.788Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.url.query.id');\n    // sendStatus(response, 200, planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;console.log(planets); /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;\n    sendJSON(response, 200, planets); /* istanbul ignore next */cov_dsu7d9qvm.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[34]++;\n  if (!planets.find(planet => {/* istanbul ignore next */cov_dsu7d9qvm.f[4]++;cov_dsu7d9qvm.s[35]++;return planet.id === request.url.query.id;})) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[36]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[37]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[39]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[40]++;sendJSON(response, 200, planets[0].id); /* istanbul ignore next */cov_dsu7d9qvm.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-07T22:19:14.788Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T22:19:14.788Z"}
{"level":"info","message":"a8930d00-db9c-11e7-aa53-cf9242489f9d","timestamp":"2017-12-07T22:19:14.788Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T22:19:14.792Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T22:19:14.792Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.url.query.id');\n    // sendStatus(response, 200, planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;console.log(planets); /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;\n    sendJSON(response, 200, planets); /* istanbul ignore next */cov_dsu7d9qvm.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[34]++;\n  if (!planets.find(planet => {/* istanbul ignore next */cov_dsu7d9qvm.f[4]++;cov_dsu7d9qvm.s[35]++;return planet.id === request.url.query.id;})) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[36]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[37]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[39]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[40]++;sendJSON(response, 200, planets[0].id); /* istanbul ignore next */cov_dsu7d9qvm.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-07T22:19:14.792Z"}
{"level":"info","message":"Responding with a 404 code due to Planet ID not found","timestamp":"2017-12-07T22:19:14.793Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T22:19:49.441Z"}
{"level":"info","message":"/api/planet","timestamp":"2017-12-07T22:19:49.442Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[2]++;cov_dsu7d9qvm.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_dsu7d9qvm.b[0][0]++;cov_dsu7d9qvm.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[0][1]++;}cov_dsu7d9qvm.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_dsu7d9qvm.b[1][0]++;cov_dsu7d9qvm.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[1][1]++;}cov_dsu7d9qvm.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_dsu7d9qvm.b[2][0]++;cov_dsu7d9qvm.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[2][1]++;}\n  //can create my planet since all test pass\n  let planet = /* istanbul ignore next */(cov_dsu7d9qvm.s[25]++, new Planet(request.body.name, request.body.content)); /* istanbul ignore next */cov_dsu7d9qvm.s[26]++;\n  planets.push(planet); /* istanbul ignore next */cov_dsu7d9qvm.s[27]++;\n  sendJSON(response, 200, planet);\n}","timestamp":"2017-12-07T22:19:49.442Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T22:19:49.442Z"}
{"level":"info","message":"/api/planet","timestamp":"2017-12-07T22:19:49.442Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.url.query.id');\n    // sendStatus(response, 200, planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;console.log(planets); /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;\n    sendJSON(response, 200, planets); /* istanbul ignore next */cov_dsu7d9qvm.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[34]++;\n  if (!planets.find(planet => {/* istanbul ignore next */cov_dsu7d9qvm.f[4]++;cov_dsu7d9qvm.s[35]++;return planet.id === request.url.query.id;})) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[36]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[37]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[39]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[40]++;sendJSON(response, 200, planets[0].id); /* istanbul ignore next */cov_dsu7d9qvm.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-07T22:19:49.442Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T22:19:49.482Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T22:19:49.541Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T22:19:49.542Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[2]++;cov_dsu7d9qvm.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_dsu7d9qvm.b[0][0]++;cov_dsu7d9qvm.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[0][1]++;}cov_dsu7d9qvm.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_dsu7d9qvm.b[1][0]++;cov_dsu7d9qvm.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[1][1]++;}cov_dsu7d9qvm.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_dsu7d9qvm.b[2][0]++;cov_dsu7d9qvm.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[2][1]++;}\n  //can create my planet since all test pass\n  let planet = /* istanbul ignore next */(cov_dsu7d9qvm.s[25]++, new Planet(request.body.name, request.body.content)); /* istanbul ignore next */cov_dsu7d9qvm.s[26]++;\n  planets.push(planet); /* istanbul ignore next */cov_dsu7d9qvm.s[27]++;\n  sendJSON(response, 200, planet);\n}","timestamp":"2017-12-07T22:19:49.542Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T22:19:49.543Z"}
{"id":"bd4d4b70-db9c-11e7-b29e-f5d3acd79e57","discoverDate":"2017-11-23T11:44:00.288Z","name":"BD032562b","content":"11h50m1555sDeclination02d45m365s","level":"info","message":"","timestamp":"2017-12-07T22:19:49.543Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T22:19:49.552Z"}
{"level":"info","message":"__REQUEST_ERROR","timestamp":"2017-12-07T22:19:49.552Z"}
{"message":"Unexpected token b in JSON at position 2","stack":"SyntaxError: Unexpected token b in JSON at position 2\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/home/seth/codefellows/401/lab/08-09-vanilla-rest-server/lab-seth/lib/request-parser.js:29:31)\n    at emitNone (events.js:106:13)\n    at IncomingMessage.emit (events.js:208:7)\n    at endReadableNT (_stream_readable.js:1056:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-07T22:19:49.553Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T22:19:49.555Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T22:19:49.556Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.url.query.id');\n    // sendStatus(response, 200, planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;console.log(planets); /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;\n    sendJSON(response, 200, planets); /* istanbul ignore next */cov_dsu7d9qvm.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[34]++;\n  if (!planets.find(planet => {/* istanbul ignore next */cov_dsu7d9qvm.f[4]++;cov_dsu7d9qvm.s[35]++;return planet.id === request.url.query.id;})) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[36]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[37]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[39]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[40]++;sendJSON(response, 200, planets[0].id); /* istanbul ignore next */cov_dsu7d9qvm.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-07T22:19:49.556Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T22:19:49.558Z"}
[{"id":"bd4d4b70-db9c-11e7-b29e-f5d3acd79e57","discoverDate":"2017-11-23T11:44:00.288Z","name":"BD032562b","content":"11h50m1555sDeclination02d45m365s"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T22:19:49.561Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T22:19:49.562Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.url.query.id');\n    // sendStatus(response, 200, planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;console.log(planets); /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;\n    sendJSON(response, 200, planets); /* istanbul ignore next */cov_dsu7d9qvm.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[34]++;\n  if (!planets.find(planet => {/* istanbul ignore next */cov_dsu7d9qvm.f[4]++;cov_dsu7d9qvm.s[35]++;return planet.id === request.url.query.id;})) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[36]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[37]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[39]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[40]++;sendJSON(response, 200, planets[0].id); /* istanbul ignore next */cov_dsu7d9qvm.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-07T22:19:49.562Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T22:19:49.562Z"}
{"level":"info","message":"bd4d4b70-db9c-11e7-b29e-f5d3acd79e57","timestamp":"2017-12-07T22:19:49.562Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T22:19:49.566Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T22:19:49.566Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.url.query.id');\n    // sendStatus(response, 200, planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;console.log(planets); /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;\n    sendJSON(response, 200, planets); /* istanbul ignore next */cov_dsu7d9qvm.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[34]++;\n  if (!planets.find(planet => {/* istanbul ignore next */cov_dsu7d9qvm.f[4]++;cov_dsu7d9qvm.s[35]++;return planet.id === request.url.query.id;})) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[36]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[37]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[39]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[40]++;sendJSON(response, 200, planets[0].id); /* istanbul ignore next */cov_dsu7d9qvm.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-07T22:19:49.567Z"}
{"level":"info","message":"Responding with a 404 code due to Planet ID not found","timestamp":"2017-12-07T22:19:49.567Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T22:20:06.706Z"}
{"level":"info","message":"/api/planet","timestamp":"2017-12-07T22:20:06.707Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[2]++;cov_dsu7d9qvm.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_dsu7d9qvm.b[0][0]++;cov_dsu7d9qvm.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[0][1]++;}cov_dsu7d9qvm.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_dsu7d9qvm.b[1][0]++;cov_dsu7d9qvm.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[1][1]++;}cov_dsu7d9qvm.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_dsu7d9qvm.b[2][0]++;cov_dsu7d9qvm.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[2][1]++;}\n  //can create my planet since all test pass\n  let planet = /* istanbul ignore next */(cov_dsu7d9qvm.s[25]++, new Planet(request.body.name, request.body.content)); /* istanbul ignore next */cov_dsu7d9qvm.s[26]++;\n  planets.push(planet); /* istanbul ignore next */cov_dsu7d9qvm.s[27]++;\n  sendJSON(response, 200, planet);\n}","timestamp":"2017-12-07T22:20:06.707Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T22:20:06.707Z"}
{"level":"info","message":"/api/planet","timestamp":"2017-12-07T22:20:06.707Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.url.query.id');\n    // sendStatus(response, 200, planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;console.log(planets); /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;\n    sendJSON(response, 200, planets); /* istanbul ignore next */cov_dsu7d9qvm.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[34]++;\n  if (!planets.find(planet => {/* istanbul ignore next */cov_dsu7d9qvm.f[4]++;cov_dsu7d9qvm.s[35]++;return planet.id === request.url.query.id;})) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[36]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[37]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[39]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[40]++;sendJSON(response, 200, planets[0].id); /* istanbul ignore next */cov_dsu7d9qvm.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-07T22:20:06.707Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T22:20:06.748Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T22:20:06.805Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T22:20:06.806Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[2]++;cov_dsu7d9qvm.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_dsu7d9qvm.b[0][0]++;cov_dsu7d9qvm.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[0][1]++;}cov_dsu7d9qvm.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_dsu7d9qvm.b[1][0]++;cov_dsu7d9qvm.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[1][1]++;}cov_dsu7d9qvm.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_dsu7d9qvm.b[2][0]++;cov_dsu7d9qvm.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[2][1]++;}\n  //can create my planet since all test pass\n  let planet = /* istanbul ignore next */(cov_dsu7d9qvm.s[25]++, new Planet(request.body.name, request.body.content)); /* istanbul ignore next */cov_dsu7d9qvm.s[26]++;\n  planets.push(planet); /* istanbul ignore next */cov_dsu7d9qvm.s[27]++;\n  sendJSON(response, 200, planet);\n}","timestamp":"2017-12-07T22:20:06.806Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T22:20:06.807Z"}
{"id":"c7979270-db9c-11e7-ac32-d5f5f65df533","discoverDate":"2017-04-11T23:24:36.706Z","name":"BD032562b","content":"11h50m1555sDeclination02d45m365s","level":"info","message":"","timestamp":"2017-12-07T22:20:06.807Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T22:20:06.816Z"}
{"level":"info","message":"__REQUEST_ERROR","timestamp":"2017-12-07T22:20:06.816Z"}
{"message":"Unexpected token b in JSON at position 2","stack":"SyntaxError: Unexpected token b in JSON at position 2\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/home/seth/codefellows/401/lab/08-09-vanilla-rest-server/lab-seth/lib/request-parser.js:29:31)\n    at emitNone (events.js:106:13)\n    at IncomingMessage.emit (events.js:208:7)\n    at endReadableNT (_stream_readable.js:1056:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-07T22:20:06.816Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T22:20:06.819Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T22:20:06.819Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.url.query.id');\n    // sendStatus(response, 200, planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;console.log(planets); /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;\n    sendJSON(response, 200, planets); /* istanbul ignore next */cov_dsu7d9qvm.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[34]++;\n  if (!planets.find(planet => {/* istanbul ignore next */cov_dsu7d9qvm.f[4]++;cov_dsu7d9qvm.s[35]++;return planet.id === request.url.query.id;})) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[36]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[37]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[39]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[40]++;sendJSON(response, 200, planets[0].id); /* istanbul ignore next */cov_dsu7d9qvm.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-07T22:20:06.819Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T22:20:06.821Z"}
[{"id":"c7979270-db9c-11e7-ac32-d5f5f65df533","discoverDate":"2017-04-11T23:24:36.706Z","name":"BD032562b","content":"11h50m1555sDeclination02d45m365s"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T22:20:06.824Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T22:20:06.825Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.url.query.id');\n    // sendStatus(response, 200, planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;console.log(planets); /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;\n    sendJSON(response, 200, planets); /* istanbul ignore next */cov_dsu7d9qvm.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[34]++;\n  if (!planets.find(planet => {/* istanbul ignore next */cov_dsu7d9qvm.f[4]++;cov_dsu7d9qvm.s[35]++;return planet.id === request.url.query.id;})) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[36]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[37]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[39]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[40]++;sendJSON(response, 200, planets[0].id); /* istanbul ignore next */cov_dsu7d9qvm.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-07T22:20:06.825Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T22:20:06.825Z"}
{"level":"info","message":"c7979270-db9c-11e7-ac32-d5f5f65df533","timestamp":"2017-12-07T22:20:06.825Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T22:20:06.828Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T22:20:06.828Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.url.query.id');\n    // sendStatus(response, 200, planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;console.log(planets); /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;\n    sendJSON(response, 200, planets); /* istanbul ignore next */cov_dsu7d9qvm.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[34]++;\n  if (!planets.find(planet => {/* istanbul ignore next */cov_dsu7d9qvm.f[4]++;cov_dsu7d9qvm.s[35]++;return planet.id === request.url.query.id;})) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[36]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[37]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[39]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[40]++;sendJSON(response, 200, planets[0].id); /* istanbul ignore next */cov_dsu7d9qvm.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-07T22:20:06.828Z"}
{"level":"info","message":"Responding with a 404 code due to Planet ID not found","timestamp":"2017-12-07T22:20:06.828Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T22:20:29.129Z"}
{"level":"info","message":"/api/planet","timestamp":"2017-12-07T22:20:29.130Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[2]++;cov_dsu7d9qvm.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_dsu7d9qvm.b[0][0]++;cov_dsu7d9qvm.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[0][1]++;}cov_dsu7d9qvm.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_dsu7d9qvm.b[1][0]++;cov_dsu7d9qvm.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[1][1]++;}cov_dsu7d9qvm.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_dsu7d9qvm.b[2][0]++;cov_dsu7d9qvm.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[2][1]++;}\n  //can create my planet since all test pass\n  let planet = /* istanbul ignore next */(cov_dsu7d9qvm.s[25]++, new Planet(request.body.name, request.body.content)); /* istanbul ignore next */cov_dsu7d9qvm.s[26]++;\n  planets.push(planet); /* istanbul ignore next */cov_dsu7d9qvm.s[27]++;\n  sendJSON(response, 200, planet);\n}","timestamp":"2017-12-07T22:20:29.130Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T22:20:29.130Z"}
{"level":"info","message":"/api/planet","timestamp":"2017-12-07T22:20:29.130Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.url.query.id');\n    // sendStatus(response, 200, planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;console.log(planets); /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;\n    sendJSON(response, 200, planets); /* istanbul ignore next */cov_dsu7d9qvm.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[34]++;\n  if (!planets.find(planet => {/* istanbul ignore next */cov_dsu7d9qvm.f[4]++;cov_dsu7d9qvm.s[35]++;return planet.id === request.url.query.id;})) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[36]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[37]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[39]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[40]++;sendJSON(response, 200, planets[0].id); /* istanbul ignore next */cov_dsu7d9qvm.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-07T22:20:29.130Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T22:20:29.170Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T22:20:29.227Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T22:20:29.229Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[2]++;cov_dsu7d9qvm.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_dsu7d9qvm.b[0][0]++;cov_dsu7d9qvm.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[0][1]++;}cov_dsu7d9qvm.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_dsu7d9qvm.b[1][0]++;cov_dsu7d9qvm.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[1][1]++;}cov_dsu7d9qvm.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_dsu7d9qvm.b[2][0]++;cov_dsu7d9qvm.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[2][1]++;}\n  //can create my planet since all test pass\n  let planet = /* istanbul ignore next */(cov_dsu7d9qvm.s[25]++, new Planet(request.body.name, request.body.content)); /* istanbul ignore next */cov_dsu7d9qvm.s[26]++;\n  planets.push(planet); /* istanbul ignore next */cov_dsu7d9qvm.s[27]++;\n  sendJSON(response, 200, planet);\n}","timestamp":"2017-12-07T22:20:29.229Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T22:20:29.229Z"}
{"id":"d4f4e5d0-db9c-11e7-b304-8b1bf74a8bbe","discoverDate":"2017-09-12T01:25:26.631Z","name":"BD032562b","content":"11h50m1555sDeclination02d45m365s","level":"info","message":"","timestamp":"2017-12-07T22:20:29.230Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T22:20:29.239Z"}
{"level":"info","message":"__REQUEST_ERROR","timestamp":"2017-12-07T22:20:29.239Z"}
{"message":"Unexpected token b in JSON at position 2","stack":"SyntaxError: Unexpected token b in JSON at position 2\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/home/seth/codefellows/401/lab/08-09-vanilla-rest-server/lab-seth/lib/request-parser.js:29:31)\n    at emitNone (events.js:106:13)\n    at IncomingMessage.emit (events.js:208:7)\n    at endReadableNT (_stream_readable.js:1056:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-07T22:20:29.239Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T22:20:29.242Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T22:20:29.243Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.url.query.id');\n    // sendStatus(response, 200, planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;console.log(planets); /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;\n    sendJSON(response, 200, planets); /* istanbul ignore next */cov_dsu7d9qvm.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[34]++;\n  if (!planets.find(planet => {/* istanbul ignore next */cov_dsu7d9qvm.f[4]++;cov_dsu7d9qvm.s[35]++;return planet.id === request.url.query.id;})) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[36]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[37]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[39]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[40]++;sendJSON(response, 200, planets[0].id); /* istanbul ignore next */cov_dsu7d9qvm.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-07T22:20:29.243Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T22:20:29.245Z"}
[{"id":"d4f4e5d0-db9c-11e7-b304-8b1bf74a8bbe","discoverDate":"2017-09-12T01:25:26.631Z","name":"BD032562b","content":"11h50m1555sDeclination02d45m365s"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T22:20:29.248Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T22:20:29.248Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.url.query.id');\n    // sendStatus(response, 200, planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;console.log(planets); /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;\n    sendJSON(response, 200, planets); /* istanbul ignore next */cov_dsu7d9qvm.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[34]++;\n  if (!planets.find(planet => {/* istanbul ignore next */cov_dsu7d9qvm.f[4]++;cov_dsu7d9qvm.s[35]++;return planet.id === request.url.query.id;})) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[36]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[37]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[39]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[40]++;sendJSON(response, 200, planets[0].id); /* istanbul ignore next */cov_dsu7d9qvm.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-07T22:20:29.249Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T22:20:29.249Z"}
{"level":"info","message":"d4f4e5d0-db9c-11e7-b304-8b1bf74a8bbe","timestamp":"2017-12-07T22:20:29.249Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T22:20:29.257Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T22:20:29.257Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.url.query.id');\n    // sendStatus(response, 200, planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;console.log(planets); /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;\n    sendJSON(response, 200, planets); /* istanbul ignore next */cov_dsu7d9qvm.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[34]++;\n  if (!planets.find(planet => {/* istanbul ignore next */cov_dsu7d9qvm.f[4]++;cov_dsu7d9qvm.s[35]++;return planet.id === request.url.query.id;})) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[36]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[37]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[39]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[40]++;sendJSON(response, 200, planets[0].id); /* istanbul ignore next */cov_dsu7d9qvm.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-07T22:20:29.257Z"}
{"level":"info","message":"Responding with a 404 code due to Planet ID not found","timestamp":"2017-12-07T22:20:29.257Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T22:20:48.278Z"}
{"level":"info","message":"/api/planet","timestamp":"2017-12-07T22:20:48.278Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[2]++;cov_dsu7d9qvm.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_dsu7d9qvm.b[0][0]++;cov_dsu7d9qvm.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[0][1]++;}cov_dsu7d9qvm.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_dsu7d9qvm.b[1][0]++;cov_dsu7d9qvm.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[1][1]++;}cov_dsu7d9qvm.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_dsu7d9qvm.b[2][0]++;cov_dsu7d9qvm.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[2][1]++;}\n  //can create my planet since all test pass\n  let planet = /* istanbul ignore next */(cov_dsu7d9qvm.s[25]++, new Planet(request.body.name, request.body.content)); /* istanbul ignore next */cov_dsu7d9qvm.s[26]++;\n  planets.push(planet); /* istanbul ignore next */cov_dsu7d9qvm.s[27]++;\n  sendJSON(response, 200, planet);\n}","timestamp":"2017-12-07T22:20:48.279Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T22:20:48.279Z"}
{"level":"info","message":"/api/planet","timestamp":"2017-12-07T22:20:48.279Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.url.query.id');\n    // sendStatus(response, 200, planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;console.log(planets); /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;\n    sendJSON(response, 200, planets); /* istanbul ignore next */cov_dsu7d9qvm.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[34]++;\n  if (!planets.find(planet => {/* istanbul ignore next */cov_dsu7d9qvm.f[4]++;cov_dsu7d9qvm.s[35]++;return planet.id === request.url.query.id;})) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[36]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[37]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[39]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[40]++;sendJSON(response, 200, planets[0].id); /* istanbul ignore next */cov_dsu7d9qvm.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-07T22:20:48.279Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T22:20:48.319Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T22:20:48.374Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T22:20:48.375Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[2]++;cov_dsu7d9qvm.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_dsu7d9qvm.b[0][0]++;cov_dsu7d9qvm.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[0][1]++;}cov_dsu7d9qvm.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_dsu7d9qvm.b[1][0]++;cov_dsu7d9qvm.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[1][1]++;}cov_dsu7d9qvm.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_dsu7d9qvm.b[2][0]++;cov_dsu7d9qvm.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[2][1]++;}\n  //can create my planet since all test pass\n  let planet = /* istanbul ignore next */(cov_dsu7d9qvm.s[25]++, new Planet(request.body.name, request.body.content)); /* istanbul ignore next */cov_dsu7d9qvm.s[26]++;\n  planets.push(planet); /* istanbul ignore next */cov_dsu7d9qvm.s[27]++;\n  sendJSON(response, 200, planet);\n}","timestamp":"2017-12-07T22:20:48.375Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T22:20:48.376Z"}
{"id":"e05e7f80-db9c-11e7-a3a1-c5ed74902cd7","discoverDate":"2017-09-26T15:47:26.304Z","name":"BD032562b","content":"11h50m1555sDeclination02d45m365s","level":"info","message":"","timestamp":"2017-12-07T22:20:48.376Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T22:20:48.386Z"}
{"level":"info","message":"__REQUEST_ERROR","timestamp":"2017-12-07T22:20:48.387Z"}
{"message":"Unexpected token b in JSON at position 2","stack":"SyntaxError: Unexpected token b in JSON at position 2\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/home/seth/codefellows/401/lab/08-09-vanilla-rest-server/lab-seth/lib/request-parser.js:29:31)\n    at emitNone (events.js:106:13)\n    at IncomingMessage.emit (events.js:208:7)\n    at endReadableNT (_stream_readable.js:1056:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-07T22:20:48.387Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T22:20:48.389Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T22:20:48.389Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.url.query.id');\n    // sendStatus(response, 200, planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;console.log(planets); /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;\n    sendJSON(response, 200, planets); /* istanbul ignore next */cov_dsu7d9qvm.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[34]++;\n  if (!planets.find(planet => {/* istanbul ignore next */cov_dsu7d9qvm.f[4]++;cov_dsu7d9qvm.s[35]++;return planet.id === request.url.query.id;})) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[36]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[37]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[39]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[40]++;sendJSON(response, 200, planets[0].id); /* istanbul ignore next */cov_dsu7d9qvm.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-07T22:20:48.389Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T22:20:48.391Z"}
[{"id":"e05e7f80-db9c-11e7-a3a1-c5ed74902cd7","discoverDate":"2017-09-26T15:47:26.304Z","name":"BD032562b","content":"11h50m1555sDeclination02d45m365s"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T22:20:48.394Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T22:20:48.395Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.url.query.id');\n    // sendStatus(response, 200, planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;console.log(planets); /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;\n    sendJSON(response, 200, planets); /* istanbul ignore next */cov_dsu7d9qvm.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[34]++;\n  if (!planets.find(planet => {/* istanbul ignore next */cov_dsu7d9qvm.f[4]++;cov_dsu7d9qvm.s[35]++;return planet.id === request.url.query.id;})) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[36]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[37]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[39]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[40]++;sendJSON(response, 200, planets[0].id); /* istanbul ignore next */cov_dsu7d9qvm.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-07T22:20:48.395Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T22:20:48.395Z"}
{"level":"info","message":"e05e7f80-db9c-11e7-a3a1-c5ed74902cd7","timestamp":"2017-12-07T22:20:48.395Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T22:20:48.398Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T22:20:48.398Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.url.query.id');\n    // sendStatus(response, 200, planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;console.log(planets); /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;\n    sendJSON(response, 200, planets); /* istanbul ignore next */cov_dsu7d9qvm.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[34]++;\n  if (!planets.find(planet => {/* istanbul ignore next */cov_dsu7d9qvm.f[4]++;cov_dsu7d9qvm.s[35]++;return planet.id === request.url.query.id;})) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[36]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[37]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[39]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[40]++;sendJSON(response, 200, planets[0].id); /* istanbul ignore next */cov_dsu7d9qvm.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-07T22:20:48.398Z"}
{"level":"info","message":"Responding with a 404 code due to Planet ID not found","timestamp":"2017-12-07T22:20:48.398Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T22:21:18.241Z"}
{"level":"info","message":"/api/planet","timestamp":"2017-12-07T22:21:18.242Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[2]++;cov_dsu7d9qvm.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_dsu7d9qvm.b[0][0]++;cov_dsu7d9qvm.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[0][1]++;}cov_dsu7d9qvm.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_dsu7d9qvm.b[1][0]++;cov_dsu7d9qvm.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[1][1]++;}cov_dsu7d9qvm.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_dsu7d9qvm.b[2][0]++;cov_dsu7d9qvm.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[2][1]++;}\n  //can create my planet since all test pass\n  let planet = /* istanbul ignore next */(cov_dsu7d9qvm.s[25]++, new Planet(request.body.name, request.body.content)); /* istanbul ignore next */cov_dsu7d9qvm.s[26]++;\n  planets.push(planet); /* istanbul ignore next */cov_dsu7d9qvm.s[27]++;\n  sendJSON(response, 200, planet);\n}","timestamp":"2017-12-07T22:21:18.242Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T22:21:18.242Z"}
{"level":"info","message":"/api/planet","timestamp":"2017-12-07T22:21:18.242Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.url.query.id');\n    // sendStatus(response, 200, planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;console.log(planets); /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;\n    sendJSON(response, 200, planets); /* istanbul ignore next */cov_dsu7d9qvm.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[34]++;\n  if (!planets.find(planet => {/* istanbul ignore next */cov_dsu7d9qvm.f[4]++;cov_dsu7d9qvm.s[35]++;return planet.id === request.url.query.id;})) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[36]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[37]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[39]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[40]++;sendJSON(response, 200, planets[0]); /* istanbul ignore next */cov_dsu7d9qvm.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-07T22:21:18.242Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T22:21:18.291Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T22:21:18.347Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T22:21:18.349Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[2]++;cov_dsu7d9qvm.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_dsu7d9qvm.b[0][0]++;cov_dsu7d9qvm.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[0][1]++;}cov_dsu7d9qvm.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_dsu7d9qvm.b[1][0]++;cov_dsu7d9qvm.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[1][1]++;}cov_dsu7d9qvm.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_dsu7d9qvm.b[2][0]++;cov_dsu7d9qvm.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[2][1]++;}\n  //can create my planet since all test pass\n  let planet = /* istanbul ignore next */(cov_dsu7d9qvm.s[25]++, new Planet(request.body.name, request.body.content)); /* istanbul ignore next */cov_dsu7d9qvm.s[26]++;\n  planets.push(planet); /* istanbul ignore next */cov_dsu7d9qvm.s[27]++;\n  sendJSON(response, 200, planet);\n}","timestamp":"2017-12-07T22:21:18.349Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T22:21:18.350Z"}
{"id":"f23c03d0-db9c-11e7-a01a-557c7624db78","discoverDate":"2017-04-10T12:27:52.706Z","name":"BD032562b","content":"11h50m1555sDeclination02d45m365s","level":"info","message":"","timestamp":"2017-12-07T22:21:18.350Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T22:21:18.360Z"}
{"level":"info","message":"__REQUEST_ERROR","timestamp":"2017-12-07T22:21:18.361Z"}
{"message":"Unexpected token b in JSON at position 2","stack":"SyntaxError: Unexpected token b in JSON at position 2\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/home/seth/codefellows/401/lab/08-09-vanilla-rest-server/lab-seth/lib/request-parser.js:29:31)\n    at emitNone (events.js:106:13)\n    at IncomingMessage.emit (events.js:208:7)\n    at endReadableNT (_stream_readable.js:1056:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-07T22:21:18.361Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T22:21:18.363Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T22:21:18.363Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.url.query.id');\n    // sendStatus(response, 200, planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;console.log(planets); /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;\n    sendJSON(response, 200, planets); /* istanbul ignore next */cov_dsu7d9qvm.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[34]++;\n  if (!planets.find(planet => {/* istanbul ignore next */cov_dsu7d9qvm.f[4]++;cov_dsu7d9qvm.s[35]++;return planet.id === request.url.query.id;})) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[36]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[37]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[39]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[40]++;sendJSON(response, 200, planets[0]); /* istanbul ignore next */cov_dsu7d9qvm.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-07T22:21:18.363Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T22:21:18.365Z"}
[{"id":"f23c03d0-db9c-11e7-a01a-557c7624db78","discoverDate":"2017-04-10T12:27:52.706Z","name":"BD032562b","content":"11h50m1555sDeclination02d45m365s"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T22:21:18.369Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T22:21:18.370Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.url.query.id');\n    // sendStatus(response, 200, planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;console.log(planets); /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;\n    sendJSON(response, 200, planets); /* istanbul ignore next */cov_dsu7d9qvm.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[34]++;\n  if (!planets.find(planet => {/* istanbul ignore next */cov_dsu7d9qvm.f[4]++;cov_dsu7d9qvm.s[35]++;return planet.id === request.url.query.id;})) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[36]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[37]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[39]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[40]++;sendJSON(response, 200, planets[0]); /* istanbul ignore next */cov_dsu7d9qvm.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-07T22:21:18.370Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T22:21:18.371Z"}
{"id":"f23c03d0-db9c-11e7-a01a-557c7624db78","discoverDate":"2017-04-10T12:27:52.706Z","name":"BD032562b","content":"11h50m1555sDeclination02d45m365s","level":"info","message":"","timestamp":"2017-12-07T22:21:18.371Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T22:21:18.373Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T22:21:18.373Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.url.query.id');\n    // sendStatus(response, 200, planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;console.log(planets); /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;\n    sendJSON(response, 200, planets); /* istanbul ignore next */cov_dsu7d9qvm.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[34]++;\n  if (!planets.find(planet => {/* istanbul ignore next */cov_dsu7d9qvm.f[4]++;cov_dsu7d9qvm.s[35]++;return planet.id === request.url.query.id;})) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[36]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[37]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[39]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[40]++;sendJSON(response, 200, planets[0]); /* istanbul ignore next */cov_dsu7d9qvm.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-07T22:21:18.373Z"}
{"level":"info","message":"Responding with a 404 code due to Planet ID not found","timestamp":"2017-12-07T22:21:18.373Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T22:21:35.805Z"}
{"level":"info","message":"/api/planet","timestamp":"2017-12-07T22:21:35.806Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[2]++;cov_dsu7d9qvm.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_dsu7d9qvm.b[0][0]++;cov_dsu7d9qvm.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[0][1]++;}cov_dsu7d9qvm.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_dsu7d9qvm.b[1][0]++;cov_dsu7d9qvm.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[1][1]++;}cov_dsu7d9qvm.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_dsu7d9qvm.b[2][0]++;cov_dsu7d9qvm.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[2][1]++;}\n  //can create my planet since all test pass\n  let planet = /* istanbul ignore next */(cov_dsu7d9qvm.s[25]++, new Planet(request.body.name, request.body.content)); /* istanbul ignore next */cov_dsu7d9qvm.s[26]++;\n  planets.push(planet); /* istanbul ignore next */cov_dsu7d9qvm.s[27]++;\n  sendJSON(response, 200, planet);\n}","timestamp":"2017-12-07T22:21:35.806Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T22:21:35.806Z"}
{"level":"info","message":"/api/planet","timestamp":"2017-12-07T22:21:35.806Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.url.query.id');\n    // sendStatus(response, 200, planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;console.log(planets); /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;\n    sendJSON(response, 200, planets); /* istanbul ignore next */cov_dsu7d9qvm.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[34]++;\n  if (!planets.find(planet => {/* istanbul ignore next */cov_dsu7d9qvm.f[4]++;cov_dsu7d9qvm.s[35]++;return planet.id === request.url.query.id;})) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[36]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[37]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[39]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[40]++;sendJSON(response, 200, planets[0]); /* istanbul ignore next */cov_dsu7d9qvm.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-07T22:21:35.806Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T22:21:35.846Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T22:21:35.905Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T22:21:35.906Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[2]++;cov_dsu7d9qvm.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_dsu7d9qvm.b[0][0]++;cov_dsu7d9qvm.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[0][1]++;}cov_dsu7d9qvm.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_dsu7d9qvm.b[1][0]++;cov_dsu7d9qvm.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[1][1]++;}cov_dsu7d9qvm.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_dsu7d9qvm.b[2][0]++;cov_dsu7d9qvm.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[2][1]++;}\n  //can create my planet since all test pass\n  let planet = /* istanbul ignore next */(cov_dsu7d9qvm.s[25]++, new Planet(request.body.name, request.body.content)); /* istanbul ignore next */cov_dsu7d9qvm.s[26]++;\n  planets.push(planet); /* istanbul ignore next */cov_dsu7d9qvm.s[27]++;\n  sendJSON(response, 200, planet);\n}","timestamp":"2017-12-07T22:21:35.906Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T22:21:35.907Z"}
{"id":"fcb32730-db9c-11e7-a801-019d43767884","discoverDate":"2017-10-03T16:24:32.424Z","name":"BD032562b","content":"11h50m1555sDeclination02d45m365s","level":"info","message":"","timestamp":"2017-12-07T22:21:35.907Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T22:21:35.916Z"}
{"level":"info","message":"__REQUEST_ERROR","timestamp":"2017-12-07T22:21:35.917Z"}
{"message":"Unexpected token b in JSON at position 2","stack":"SyntaxError: Unexpected token b in JSON at position 2\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/home/seth/codefellows/401/lab/08-09-vanilla-rest-server/lab-seth/lib/request-parser.js:29:31)\n    at emitNone (events.js:106:13)\n    at IncomingMessage.emit (events.js:208:7)\n    at endReadableNT (_stream_readable.js:1056:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-07T22:21:35.917Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T22:21:35.920Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T22:21:35.920Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.url.query.id');\n    // sendStatus(response, 200, planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;console.log(planets); /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;\n    sendJSON(response, 200, planets); /* istanbul ignore next */cov_dsu7d9qvm.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[34]++;\n  if (!planets.find(planet => {/* istanbul ignore next */cov_dsu7d9qvm.f[4]++;cov_dsu7d9qvm.s[35]++;return planet.id === request.url.query.id;})) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[36]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[37]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[39]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[40]++;sendJSON(response, 200, planets[0]); /* istanbul ignore next */cov_dsu7d9qvm.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-07T22:21:35.920Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T22:21:35.922Z"}
[{"id":"fcb32730-db9c-11e7-a801-019d43767884","discoverDate":"2017-10-03T16:24:32.424Z","name":"BD032562b","content":"11h50m1555sDeclination02d45m365s"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T22:21:35.926Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T22:21:35.927Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.url.query.id');\n    // sendStatus(response, 200, planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;console.log(planets); /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;\n    sendJSON(response, 200, planets); /* istanbul ignore next */cov_dsu7d9qvm.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[34]++;\n  if (!planets.find(planet => {/* istanbul ignore next */cov_dsu7d9qvm.f[4]++;cov_dsu7d9qvm.s[35]++;return planet.id === request.url.query.id;})) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[36]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[37]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[39]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[40]++;sendJSON(response, 200, planets[0]); /* istanbul ignore next */cov_dsu7d9qvm.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-07T22:21:35.927Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T22:21:35.927Z"}
{"id":"fcb32730-db9c-11e7-a801-019d43767884","discoverDate":"2017-10-03T16:24:32.424Z","name":"BD032562b","content":"11h50m1555sDeclination02d45m365s","level":"info","message":"","timestamp":"2017-12-07T22:21:35.927Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T22:21:35.930Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T22:21:35.930Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.url.query.id');\n    // sendStatus(response, 200, planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;console.log(planets); /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;\n    sendJSON(response, 200, planets); /* istanbul ignore next */cov_dsu7d9qvm.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[34]++;\n  if (!planets.find(planet => {/* istanbul ignore next */cov_dsu7d9qvm.f[4]++;cov_dsu7d9qvm.s[35]++;return planet.id === request.url.query.id;})) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[36]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[37]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[39]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[40]++;sendJSON(response, 200, planets[0]); /* istanbul ignore next */cov_dsu7d9qvm.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-07T22:21:35.930Z"}
{"level":"info","message":"Responding with a 404 code due to Planet ID not found","timestamp":"2017-12-07T22:21:35.931Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T22:21:47.347Z"}
{"level":"info","message":"/api/planet","timestamp":"2017-12-07T22:21:47.348Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[2]++;cov_dsu7d9qvm.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_dsu7d9qvm.b[0][0]++;cov_dsu7d9qvm.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[0][1]++;}cov_dsu7d9qvm.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_dsu7d9qvm.b[1][0]++;cov_dsu7d9qvm.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[1][1]++;}cov_dsu7d9qvm.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_dsu7d9qvm.b[2][0]++;cov_dsu7d9qvm.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[2][1]++;}\n  //can create my planet since all test pass\n  let planet = /* istanbul ignore next */(cov_dsu7d9qvm.s[25]++, new Planet(request.body.name, request.body.content)); /* istanbul ignore next */cov_dsu7d9qvm.s[26]++;\n  planets.push(planet); /* istanbul ignore next */cov_dsu7d9qvm.s[27]++;\n  sendJSON(response, 200, planet);\n}","timestamp":"2017-12-07T22:21:47.348Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T22:21:47.348Z"}
{"level":"info","message":"/api/planet","timestamp":"2017-12-07T22:21:47.348Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.url.query.id');\n    // sendStatus(response, 200, planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;console.log(planets); /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;\n    sendJSON(response, 200, planets); /* istanbul ignore next */cov_dsu7d9qvm.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[34]++;\n  if (!planets.find(planet => {/* istanbul ignore next */cov_dsu7d9qvm.f[4]++;cov_dsu7d9qvm.s[35]++;return planet.id === request.url.query.id;})) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[36]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[37]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[39]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[40]++;sendJSON(response, 200, planets[0]); /* istanbul ignore next */cov_dsu7d9qvm.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-07T22:21:47.348Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T22:21:47.393Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T22:21:47.453Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T22:21:47.454Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[2]++;cov_dsu7d9qvm.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_dsu7d9qvm.b[0][0]++;cov_dsu7d9qvm.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[0][1]++;}cov_dsu7d9qvm.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_dsu7d9qvm.b[1][0]++;cov_dsu7d9qvm.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[1][1]++;}cov_dsu7d9qvm.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_dsu7d9qvm.b[2][0]++;cov_dsu7d9qvm.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[2][1]++;}\n  //can create my planet since all test pass\n  let planet = /* istanbul ignore next */(cov_dsu7d9qvm.s[25]++, new Planet(request.body.name, request.body.content)); /* istanbul ignore next */cov_dsu7d9qvm.s[26]++;\n  planets.push(planet); /* istanbul ignore next */cov_dsu7d9qvm.s[27]++;\n  sendJSON(response, 200, planet);\n}","timestamp":"2017-12-07T22:21:47.454Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T22:21:47.455Z"}
{"id":"039515e0-db9d-11e7-b37e-05e060e4aecd","discoverDate":"2017-03-10T03:07:28.354Z","name":"BD032562b","content":"11h50m1555sDeclination02d45m365s","level":"info","message":"","timestamp":"2017-12-07T22:21:47.455Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T22:21:47.464Z"}
{"level":"info","message":"__REQUEST_ERROR","timestamp":"2017-12-07T22:21:47.465Z"}
{"message":"Unexpected token b in JSON at position 2","stack":"SyntaxError: Unexpected token b in JSON at position 2\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/home/seth/codefellows/401/lab/08-09-vanilla-rest-server/lab-seth/lib/request-parser.js:29:31)\n    at emitNone (events.js:106:13)\n    at IncomingMessage.emit (events.js:208:7)\n    at endReadableNT (_stream_readable.js:1056:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-07T22:21:47.465Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T22:21:47.468Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T22:21:47.468Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.url.query.id');\n    // sendStatus(response, 200, planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;console.log(planets); /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;\n    sendJSON(response, 200, planets); /* istanbul ignore next */cov_dsu7d9qvm.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[34]++;\n  if (!planets.find(planet => {/* istanbul ignore next */cov_dsu7d9qvm.f[4]++;cov_dsu7d9qvm.s[35]++;return planet.id === request.url.query.id;})) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[36]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[37]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[39]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[40]++;sendJSON(response, 200, planets[0]); /* istanbul ignore next */cov_dsu7d9qvm.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-07T22:21:47.468Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T22:21:47.471Z"}
[{"id":"039515e0-db9d-11e7-b37e-05e060e4aecd","discoverDate":"2017-03-10T03:07:28.354Z","name":"BD032562b","content":"11h50m1555sDeclination02d45m365s"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T22:21:47.474Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T22:21:47.475Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.url.query.id');\n    // sendStatus(response, 200, planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;console.log(planets); /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;\n    sendJSON(response, 200, planets); /* istanbul ignore next */cov_dsu7d9qvm.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[34]++;\n  if (!planets.find(planet => {/* istanbul ignore next */cov_dsu7d9qvm.f[4]++;cov_dsu7d9qvm.s[35]++;return planet.id === request.url.query.id;})) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[36]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[37]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[39]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[40]++;sendJSON(response, 200, planets[0]); /* istanbul ignore next */cov_dsu7d9qvm.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-07T22:21:47.475Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T22:21:47.475Z"}
{"id":"039515e0-db9d-11e7-b37e-05e060e4aecd","discoverDate":"2017-03-10T03:07:28.354Z","name":"BD032562b","content":"11h50m1555sDeclination02d45m365s","level":"info","message":"","timestamp":"2017-12-07T22:21:47.475Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T22:21:47.478Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T22:21:47.478Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.url.query.id');\n    // sendStatus(response, 200, planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;console.log(planets); /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;\n    sendJSON(response, 200, planets); /* istanbul ignore next */cov_dsu7d9qvm.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[34]++;\n  if (!planets.find(planet => {/* istanbul ignore next */cov_dsu7d9qvm.f[4]++;cov_dsu7d9qvm.s[35]++;return planet.id === request.url.query.id;})) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[36]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[37]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[39]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[40]++;sendJSON(response, 200, planets[0]); /* istanbul ignore next */cov_dsu7d9qvm.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-07T22:21:47.478Z"}
{"level":"info","message":"Responding with a 404 code due to Planet ID not found","timestamp":"2017-12-07T22:21:47.478Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T22:22:10.708Z"}
{"level":"info","message":"/api/planet","timestamp":"2017-12-07T22:22:10.709Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[2]++;cov_dsu7d9qvm.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_dsu7d9qvm.b[0][0]++;cov_dsu7d9qvm.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[0][1]++;}cov_dsu7d9qvm.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_dsu7d9qvm.b[1][0]++;cov_dsu7d9qvm.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[1][1]++;}cov_dsu7d9qvm.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_dsu7d9qvm.b[2][0]++;cov_dsu7d9qvm.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[2][1]++;}\n  //can create my planet since all test pass\n  let planet = /* istanbul ignore next */(cov_dsu7d9qvm.s[25]++, new Planet(request.body.name, request.body.content)); /* istanbul ignore next */cov_dsu7d9qvm.s[26]++;\n  planets.push(planet); /* istanbul ignore next */cov_dsu7d9qvm.s[27]++;\n  sendJSON(response, 200, planet);\n}","timestamp":"2017-12-07T22:22:10.709Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T22:22:10.709Z"}
{"level":"info","message":"/api/planet","timestamp":"2017-12-07T22:22:10.709Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.url.query.id');\n    // sendStatus(response, 200, planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;console.log(planets); /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;\n    sendJSON(response, 200, planets); /* istanbul ignore next */cov_dsu7d9qvm.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[34]++;\n  if (!planets.find(planet => {/* istanbul ignore next */cov_dsu7d9qvm.f[4]++;cov_dsu7d9qvm.s[35]++;return planet.id === request.url.query.id;})) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[36]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[37]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[39]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[40]++;sendJSON(response, 200, planets[0]); /* istanbul ignore next */cov_dsu7d9qvm.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-07T22:22:10.709Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T22:22:10.754Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T22:22:10.811Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T22:22:10.812Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[2]++;cov_dsu7d9qvm.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_dsu7d9qvm.b[0][0]++;cov_dsu7d9qvm.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[0][1]++;}cov_dsu7d9qvm.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_dsu7d9qvm.b[1][0]++;cov_dsu7d9qvm.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[1][1]++;}cov_dsu7d9qvm.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_dsu7d9qvm.b[2][0]++;cov_dsu7d9qvm.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[2][1]++;}\n  //can create my planet since all test pass\n  let planet = /* istanbul ignore next */(cov_dsu7d9qvm.s[25]++, new Planet(request.body.name, request.body.content)); /* istanbul ignore next */cov_dsu7d9qvm.s[26]++;\n  planets.push(planet); /* istanbul ignore next */cov_dsu7d9qvm.s[27]++;\n  sendJSON(response, 200, planet);\n}","timestamp":"2017-12-07T22:22:10.812Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T22:22:10.813Z"}
{"id":"11813bc0-db9d-11e7-a5b6-89da3cc842e5","discoverDate":"2016-12-15T03:12:42.625Z","name":"BD032562b","content":"11h50m1555sDeclination02d45m365s","level":"info","message":"","timestamp":"2017-12-07T22:22:10.813Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T22:22:10.822Z"}
{"level":"info","message":"__REQUEST_ERROR","timestamp":"2017-12-07T22:22:10.822Z"}
{"message":"Unexpected token b in JSON at position 2","stack":"SyntaxError: Unexpected token b in JSON at position 2\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/home/seth/codefellows/401/lab/08-09-vanilla-rest-server/lab-seth/lib/request-parser.js:29:31)\n    at emitNone (events.js:106:13)\n    at IncomingMessage.emit (events.js:208:7)\n    at endReadableNT (_stream_readable.js:1056:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-07T22:22:10.822Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T22:22:10.825Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T22:22:10.825Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.url.query.id');\n    // sendStatus(response, 200, planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;console.log(planets); /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;\n    sendJSON(response, 200, planets); /* istanbul ignore next */cov_dsu7d9qvm.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[34]++;\n  if (!planets.find(planet => {/* istanbul ignore next */cov_dsu7d9qvm.f[4]++;cov_dsu7d9qvm.s[35]++;return planet.id === request.url.query.id;})) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[36]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[37]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[39]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[40]++;sendJSON(response, 200, planets[0]); /* istanbul ignore next */cov_dsu7d9qvm.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-07T22:22:10.825Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T22:22:10.827Z"}
[{"id":"11813bc0-db9d-11e7-a5b6-89da3cc842e5","discoverDate":"2016-12-15T03:12:42.625Z","name":"BD032562b","content":"11h50m1555sDeclination02d45m365s"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T22:22:10.835Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T22:22:10.835Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.url.query.id');\n    // sendStatus(response, 200, planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;console.log(planets); /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;\n    sendJSON(response, 200, planets); /* istanbul ignore next */cov_dsu7d9qvm.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[34]++;\n  if (!planets.find(planet => {/* istanbul ignore next */cov_dsu7d9qvm.f[4]++;cov_dsu7d9qvm.s[35]++;return planet.id === request.url.query.id;})) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[36]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[37]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[39]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[40]++;sendJSON(response, 200, planets[0]); /* istanbul ignore next */cov_dsu7d9qvm.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-07T22:22:10.835Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T22:22:10.836Z"}
{"id":"11813bc0-db9d-11e7-a5b6-89da3cc842e5","discoverDate":"2016-12-15T03:12:42.625Z","name":"BD032562b","content":"11h50m1555sDeclination02d45m365s","level":"info","message":"","timestamp":"2017-12-07T22:22:10.836Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T22:22:10.838Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T22:22:10.838Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.url.query.id');\n    // sendStatus(response, 200, planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;console.log(planets); /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;\n    sendJSON(response, 200, planets); /* istanbul ignore next */cov_dsu7d9qvm.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[34]++;\n  if (!planets.find(planet => {/* istanbul ignore next */cov_dsu7d9qvm.f[4]++;cov_dsu7d9qvm.s[35]++;return planet.id === request.url.query.id;})) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[36]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[37]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[39]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[40]++;sendJSON(response, 200, planets[0]); /* istanbul ignore next */cov_dsu7d9qvm.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-07T22:22:10.838Z"}
{"level":"info","message":"Responding with a 404 code due to Planet ID not found","timestamp":"2017-12-07T22:22:10.838Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T22:22:44.029Z"}
{"level":"info","message":"/api/planet","timestamp":"2017-12-07T22:22:44.030Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[2]++;cov_dsu7d9qvm.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_dsu7d9qvm.b[0][0]++;cov_dsu7d9qvm.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[0][1]++;}cov_dsu7d9qvm.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_dsu7d9qvm.b[1][0]++;cov_dsu7d9qvm.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[1][1]++;}cov_dsu7d9qvm.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_dsu7d9qvm.b[2][0]++;cov_dsu7d9qvm.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[2][1]++;}\n  //can create my planet since all test pass\n  let planet = /* istanbul ignore next */(cov_dsu7d9qvm.s[25]++, new Planet(request.body.name, request.body.content)); /* istanbul ignore next */cov_dsu7d9qvm.s[26]++;\n  planets.push(planet); /* istanbul ignore next */cov_dsu7d9qvm.s[27]++;\n  sendJSON(response, 200, planet);\n}","timestamp":"2017-12-07T22:22:44.030Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T22:22:44.030Z"}
{"level":"info","message":"/api/planet","timestamp":"2017-12-07T22:22:44.030Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.url.query.id');\n    // sendStatus(response, 200, planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;console.log(planets); /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;\n    sendJSON(response, 200, planets); /* istanbul ignore next */cov_dsu7d9qvm.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[34]++;\n  if (!planets.find(planet => {/* istanbul ignore next */cov_dsu7d9qvm.f[4]++;cov_dsu7d9qvm.s[35]++;return planet.id === request.url.query.id;})) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[36]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[37]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[39]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[40]++;sendJSON(response, 200, planets[0]); /* istanbul ignore next */cov_dsu7d9qvm.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-07T22:22:44.030Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T22:22:44.071Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T22:22:44.127Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T22:22:44.128Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[2]++;cov_dsu7d9qvm.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_dsu7d9qvm.b[0][0]++;cov_dsu7d9qvm.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[0][1]++;}cov_dsu7d9qvm.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_dsu7d9qvm.b[1][0]++;cov_dsu7d9qvm.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[1][1]++;}cov_dsu7d9qvm.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_dsu7d9qvm.b[2][0]++;cov_dsu7d9qvm.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[2][1]++;}\n  //can create my planet since all test pass\n  let planet = /* istanbul ignore next */(cov_dsu7d9qvm.s[25]++, new Planet(request.body.name, request.body.content)); /* istanbul ignore next */cov_dsu7d9qvm.s[26]++;\n  planets.push(planet); /* istanbul ignore next */cov_dsu7d9qvm.s[27]++;\n  sendJSON(response, 200, planet);\n}","timestamp":"2017-12-07T22:22:44.128Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T22:22:44.129Z"}
{"id":"255d0110-db9d-11e7-b9ac-af2826bc77dd","discoverDate":"2017-01-11T15:28:45.194Z","name":"BD032562b","content":"11h50m1555sDeclination02d45m365s","level":"info","message":"","timestamp":"2017-12-07T22:22:44.129Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T22:22:44.138Z"}
{"level":"info","message":"__REQUEST_ERROR","timestamp":"2017-12-07T22:22:44.139Z"}
{"message":"Unexpected token b in JSON at position 2","stack":"SyntaxError: Unexpected token b in JSON at position 2\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/home/seth/codefellows/401/lab/08-09-vanilla-rest-server/lab-seth/lib/request-parser.js:29:31)\n    at emitNone (events.js:106:13)\n    at IncomingMessage.emit (events.js:208:7)\n    at endReadableNT (_stream_readable.js:1056:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-07T22:22:44.139Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T22:22:44.142Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T22:22:44.142Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.url.query.id');\n    // sendStatus(response, 200, planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;console.log(planets); /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;\n    sendJSON(response, 200, planets); /* istanbul ignore next */cov_dsu7d9qvm.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[34]++;\n  if (!planets.find(planet => {/* istanbul ignore next */cov_dsu7d9qvm.f[4]++;cov_dsu7d9qvm.s[35]++;return planet.id === request.url.query.id;})) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[36]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[37]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[39]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[40]++;sendJSON(response, 200, planets[0]); /* istanbul ignore next */cov_dsu7d9qvm.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-07T22:22:44.142Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T22:22:44.144Z"}
[{"id":"255d0110-db9d-11e7-b9ac-af2826bc77dd","discoverDate":"2017-01-11T15:28:45.194Z","name":"BD032562b","content":"11h50m1555sDeclination02d45m365s"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T22:22:44.148Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T22:22:44.148Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.url.query.id');\n    // sendStatus(response, 200, planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;console.log(planets); /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;\n    sendJSON(response, 200, planets); /* istanbul ignore next */cov_dsu7d9qvm.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[34]++;\n  if (!planets.find(planet => {/* istanbul ignore next */cov_dsu7d9qvm.f[4]++;cov_dsu7d9qvm.s[35]++;return planet.id === request.url.query.id;})) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[36]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[37]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[39]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[40]++;sendJSON(response, 200, planets[0]); /* istanbul ignore next */cov_dsu7d9qvm.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-07T22:22:44.148Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T22:22:44.149Z"}
{"id":"255d0110-db9d-11e7-b9ac-af2826bc77dd","discoverDate":"2017-01-11T15:28:45.194Z","name":"BD032562b","content":"11h50m1555sDeclination02d45m365s","level":"info","message":"","timestamp":"2017-12-07T22:22:44.149Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T22:22:44.152Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T22:22:44.152Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.url.query.id');\n    // sendStatus(response, 200, planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;console.log(planets); /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;\n    sendJSON(response, 200, planets); /* istanbul ignore next */cov_dsu7d9qvm.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[34]++;\n  if (!planets.find(planet => {/* istanbul ignore next */cov_dsu7d9qvm.f[4]++;cov_dsu7d9qvm.s[35]++;return planet.id === request.url.query.id;})) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[36]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[37]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[39]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[40]++;sendJSON(response, 200, planets[0]); /* istanbul ignore next */cov_dsu7d9qvm.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-07T22:22:44.152Z"}
{"level":"info","message":"Responding with a 404 code due to Planet ID not found","timestamp":"2017-12-07T22:22:44.153Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T22:58:53.330Z"}
{"level":"info","message":"/api/planet","timestamp":"2017-12-07T22:58:53.331Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[2]++;cov_dsu7d9qvm.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_dsu7d9qvm.b[0][0]++;cov_dsu7d9qvm.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[0][1]++;}cov_dsu7d9qvm.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_dsu7d9qvm.b[1][0]++;cov_dsu7d9qvm.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[1][1]++;}cov_dsu7d9qvm.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_dsu7d9qvm.b[2][0]++;cov_dsu7d9qvm.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[2][1]++;}\n  //can create my planet since all test pass\n  let planet = /* istanbul ignore next */(cov_dsu7d9qvm.s[25]++, new Planet(request.body.name, request.body.content)); /* istanbul ignore next */cov_dsu7d9qvm.s[26]++;\n  planets.push(planet); /* istanbul ignore next */cov_dsu7d9qvm.s[27]++;\n  sendJSON(response, 200, planet);\n}","timestamp":"2017-12-07T22:58:53.331Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T22:58:53.331Z"}
{"level":"info","message":"/api/planet","timestamp":"2017-12-07T22:58:53.331Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.url.query.id');\n    // sendStatus(response, 200, planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;console.log(planets); /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;\n    sendJSON(response, 200, planets); /* istanbul ignore next */cov_dsu7d9qvm.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[34]++;\n  if (!planets.find(planet => {/* istanbul ignore next */cov_dsu7d9qvm.f[4]++;cov_dsu7d9qvm.s[35]++;return planet.id === request.url.query.id;})) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[36]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[37]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[39]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[40]++;sendJSON(response, 200, planets[0]); /* istanbul ignore next */cov_dsu7d9qvm.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-07T22:58:53.331Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T22:58:53.373Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T22:58:53.423Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T22:58:53.424Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[2]++;cov_dsu7d9qvm.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_dsu7d9qvm.b[0][0]++;cov_dsu7d9qvm.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[0][1]++;}cov_dsu7d9qvm.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_dsu7d9qvm.b[1][0]++;cov_dsu7d9qvm.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[1][1]++;}cov_dsu7d9qvm.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_dsu7d9qvm.b[2][0]++;cov_dsu7d9qvm.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[2][1]++;}\n  //can create my planet since all test pass\n  let planet = /* istanbul ignore next */(cov_dsu7d9qvm.s[25]++, new Planet(request.body.name, request.body.content)); /* istanbul ignore next */cov_dsu7d9qvm.s[26]++;\n  planets.push(planet); /* istanbul ignore next */cov_dsu7d9qvm.s[27]++;\n  sendJSON(response, 200, planet);\n}","timestamp":"2017-12-07T22:58:53.424Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T22:58:53.425Z"}
{"id":"325d2700-dba2-11e7-9fa6-d98be08dc3cb","discoverDate":"2017-03-25T05:27:39.928Z","name":"BD032562b","content":"11h50m1555sDeclination02d45m365s","level":"info","message":"","timestamp":"2017-12-07T22:58:53.425Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T22:58:53.434Z"}
{"level":"info","message":"__REQUEST_ERROR","timestamp":"2017-12-07T22:58:53.434Z"}
{"message":"Unexpected token b in JSON at position 2","stack":"SyntaxError: Unexpected token b in JSON at position 2\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/home/seth/codefellows/401/lab/08-09-vanilla-rest-server/lab-seth/lib/request-parser.js:29:31)\n    at emitNone (events.js:106:13)\n    at IncomingMessage.emit (events.js:208:7)\n    at endReadableNT (_stream_readable.js:1056:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-07T22:58:53.434Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T22:58:53.437Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T22:58:53.437Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.url.query.id');\n    // sendStatus(response, 200, planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;console.log(planets); /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;\n    sendJSON(response, 200, planets); /* istanbul ignore next */cov_dsu7d9qvm.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[34]++;\n  if (!planets.find(planet => {/* istanbul ignore next */cov_dsu7d9qvm.f[4]++;cov_dsu7d9qvm.s[35]++;return planet.id === request.url.query.id;})) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[36]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[37]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[39]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[40]++;sendJSON(response, 200, planets[0]); /* istanbul ignore next */cov_dsu7d9qvm.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-07T22:58:53.437Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T22:58:53.439Z"}
[{"id":"325d2700-dba2-11e7-9fa6-d98be08dc3cb","discoverDate":"2017-03-25T05:27:39.928Z","name":"BD032562b","content":"11h50m1555sDeclination02d45m365s"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T22:58:53.442Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T22:58:53.442Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.url.query.id');\n    // sendStatus(response, 200, planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;console.log(planets); /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;\n    sendJSON(response, 200, planets); /* istanbul ignore next */cov_dsu7d9qvm.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[34]++;\n  if (!planets.find(planet => {/* istanbul ignore next */cov_dsu7d9qvm.f[4]++;cov_dsu7d9qvm.s[35]++;return planet.id === request.url.query.id;})) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[36]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[37]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[39]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[40]++;sendJSON(response, 200, planets[0]); /* istanbul ignore next */cov_dsu7d9qvm.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-07T22:58:53.442Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T22:58:53.443Z"}
{"id":"325d2700-dba2-11e7-9fa6-d98be08dc3cb","discoverDate":"2017-03-25T05:27:39.928Z","name":"BD032562b","content":"11h50m1555sDeclination02d45m365s","level":"info","message":"","timestamp":"2017-12-07T22:58:53.443Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T22:58:53.445Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T22:58:53.446Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.url.query.id');\n    // sendStatus(response, 200, planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;console.log(planets); /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;\n    sendJSON(response, 200, planets); /* istanbul ignore next */cov_dsu7d9qvm.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[34]++;\n  if (!planets.find(planet => {/* istanbul ignore next */cov_dsu7d9qvm.f[4]++;cov_dsu7d9qvm.s[35]++;return planet.id === request.url.query.id;})) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[36]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[37]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[39]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[40]++;sendJSON(response, 200, planets[0]); /* istanbul ignore next */cov_dsu7d9qvm.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-07T22:58:53.446Z"}
{"level":"info","message":"Responding with a 404 code due to Planet ID not found","timestamp":"2017-12-07T22:58:53.447Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T23:21:09.292Z"}
{"level":"info","message":"/api/planet","timestamp":"2017-12-07T23:21:09.293Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[2]++;cov_dsu7d9qvm.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_dsu7d9qvm.b[0][0]++;cov_dsu7d9qvm.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[0][1]++;}cov_dsu7d9qvm.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_dsu7d9qvm.b[1][0]++;cov_dsu7d9qvm.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[1][1]++;}cov_dsu7d9qvm.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_dsu7d9qvm.b[2][0]++;cov_dsu7d9qvm.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[2][1]++;}\n  //can create my planet since all test pass\n  let planet = /* istanbul ignore next */(cov_dsu7d9qvm.s[25]++, new Planet(request.body.name, request.body.content)); /* istanbul ignore next */cov_dsu7d9qvm.s[26]++;\n  planets.push(planet); /* istanbul ignore next */cov_dsu7d9qvm.s[27]++;\n  sendJSON(response, 200, planet);\n}","timestamp":"2017-12-07T23:21:09.293Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T23:21:09.293Z"}
{"level":"info","message":"/api/planet","timestamp":"2017-12-07T23:21:09.293Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.url.query.id');\n    // sendStatus(response, 200, planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;console.log(planets); /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;\n    sendJSON(response, 200, planets); /* istanbul ignore next */cov_dsu7d9qvm.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[34]++;\n  if (!planets.find(planet => {/* istanbul ignore next */cov_dsu7d9qvm.f[4]++;cov_dsu7d9qvm.s[35]++;return planet.id === request.url.query.id;})) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[36]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[37]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[39]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[40]++;sendJSON(response, 200, planets[0]); /* istanbul ignore next */cov_dsu7d9qvm.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-07T23:21:09.293Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-07T23:21:09.293Z"}
{"level":"info","message":"/api/planet","timestamp":"2017-12-07T23:21:09.293Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[5]++;cov_dsu7d9qvm.s[43]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[5][0]++;cov_dsu7d9qvm.s[44]++;\n    console.log('Hit .delete at NO request.url.query.id'); /* istanbul ignore next */cov_dsu7d9qvm.s[45]++;\n    sendStatus(response, 404, 'Planet not found in database'); /* istanbul ignore next */cov_dsu7d9qvm.s[46]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[5][1]++;}cov_dsu7d9qvm.s[47]++;\n  if (!planets.find(planet => {/* istanbul ignore next */cov_dsu7d9qvm.f[6]++;cov_dsu7d9qvm.s[48]++;return planet.id === request.url.query.id;})) {/* istanbul ignore next */cov_dsu7d9qvm.b[6][0]++;cov_dsu7d9qvm.s[49]++;\n    console.log('Hit .delete at specific request.body.id NOT in planets'); /* istanbul ignore next */cov_dsu7d9qvm.s[50]++;\n    sendStatus(response, 400, 'NO request id found'); /* istanbul ignore next */cov_dsu7d9qvm.s[51]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[6][1]++;cov_dsu7d9qvm.s[52]++;\n    console.log('Hit .delete at specific & correct request.body.id'); /* istanbul ignore next */cov_dsu7d9qvm.s[53]++;\n    console.log(request.url.query.id); /* istanbul ignore next */cov_dsu7d9qvm.s[54]++;\n    planets.filter(planet => {/* istanbul ignore next */cov_dsu7d9qvm.f[7]++;cov_dsu7d9qvm.s[55]++;return planet.id !== request.url.query.id;}); /* istanbul ignore next */cov_dsu7d9qvm.s[56]++;\n    sendJSON(response, 204, 'Planet removed succesfully'); /* istanbul ignore next */cov_dsu7d9qvm.s[57]++;\n    return;\n  }\n}","timestamp":"2017-12-07T23:21:09.293Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T23:21:09.335Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:21:09.393Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:21:09.394Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[2]++;cov_dsu7d9qvm.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_dsu7d9qvm.b[0][0]++;cov_dsu7d9qvm.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[0][1]++;}cov_dsu7d9qvm.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_dsu7d9qvm.b[1][0]++;cov_dsu7d9qvm.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[1][1]++;}cov_dsu7d9qvm.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_dsu7d9qvm.b[2][0]++;cov_dsu7d9qvm.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[2][1]++;}\n  //can create my planet since all test pass\n  let planet = /* istanbul ignore next */(cov_dsu7d9qvm.s[25]++, new Planet(request.body.name, request.body.content)); /* istanbul ignore next */cov_dsu7d9qvm.s[26]++;\n  planets.push(planet); /* istanbul ignore next */cov_dsu7d9qvm.s[27]++;\n  sendJSON(response, 200, planet);\n}","timestamp":"2017-12-07T23:21:09.394Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T23:21:09.395Z"}
{"id":"4ea9ff20-dba5-11e7-8f75-0f6e261582f5","discoverDate":"2017-02-28T03:45:18.928Z","name":"BD032562b","content":"11h50m1555sDeclination02d45m365s","level":"info","message":"","timestamp":"2017-12-07T23:21:09.395Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:21:09.404Z"}
{"level":"info","message":"__REQUEST_ERROR","timestamp":"2017-12-07T23:21:09.404Z"}
{"message":"Unexpected token b in JSON at position 2","stack":"SyntaxError: Unexpected token b in JSON at position 2\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/home/seth/codefellows/401/lab/08-09-vanilla-rest-server/lab-seth/lib/request-parser.js:29:31)\n    at emitNone (events.js:106:13)\n    at IncomingMessage.emit (events.js:208:7)\n    at endReadableNT (_stream_readable.js:1056:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-07T23:21:09.404Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:21:09.406Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:21:09.407Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.url.query.id');\n    // sendStatus(response, 200, planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;console.log(planets); /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;\n    sendJSON(response, 200, planets); /* istanbul ignore next */cov_dsu7d9qvm.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[34]++;\n  if (!planets.find(planet => {/* istanbul ignore next */cov_dsu7d9qvm.f[4]++;cov_dsu7d9qvm.s[35]++;return planet.id === request.url.query.id;})) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[36]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[37]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[39]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[40]++;sendJSON(response, 200, planets[0]); /* istanbul ignore next */cov_dsu7d9qvm.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-07T23:21:09.407Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T23:21:09.409Z"}
[{"id":"4ea9ff20-dba5-11e7-8f75-0f6e261582f5","discoverDate":"2017-02-28T03:45:18.928Z","name":"BD032562b","content":"11h50m1555sDeclination02d45m365s"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:21:09.411Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:21:09.412Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.url.query.id');\n    // sendStatus(response, 200, planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;console.log(planets); /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;\n    sendJSON(response, 200, planets); /* istanbul ignore next */cov_dsu7d9qvm.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[34]++;\n  if (!planets.find(planet => {/* istanbul ignore next */cov_dsu7d9qvm.f[4]++;cov_dsu7d9qvm.s[35]++;return planet.id === request.url.query.id;})) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[36]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[37]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[39]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[40]++;sendJSON(response, 200, planets[0]); /* istanbul ignore next */cov_dsu7d9qvm.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-07T23:21:09.412Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T23:21:09.412Z"}
{"id":"4ea9ff20-dba5-11e7-8f75-0f6e261582f5","discoverDate":"2017-02-28T03:45:18.928Z","name":"BD032562b","content":"11h50m1555sDeclination02d45m365s","level":"info","message":"","timestamp":"2017-12-07T23:21:09.412Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:21:09.415Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:21:09.415Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.url.query.id');\n    // sendStatus(response, 200, planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;console.log(planets); /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;\n    sendJSON(response, 200, planets); /* istanbul ignore next */cov_dsu7d9qvm.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[34]++;\n  if (!planets.find(planet => {/* istanbul ignore next */cov_dsu7d9qvm.f[4]++;cov_dsu7d9qvm.s[35]++;return planet.id === request.url.query.id;})) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[36]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[37]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[39]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[40]++;sendJSON(response, 200, planets[0]); /* istanbul ignore next */cov_dsu7d9qvm.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-07T23:21:09.415Z"}
{"level":"info","message":"Responding with a 404 code due to Planet ID not found","timestamp":"2017-12-07T23:21:09.416Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:21:09.417Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:21:09.418Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[5]++;cov_dsu7d9qvm.s[43]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[5][0]++;cov_dsu7d9qvm.s[44]++;\n    console.log('Hit .delete at NO request.url.query.id'); /* istanbul ignore next */cov_dsu7d9qvm.s[45]++;\n    sendStatus(response, 404, 'Planet not found in database'); /* istanbul ignore next */cov_dsu7d9qvm.s[46]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[5][1]++;}cov_dsu7d9qvm.s[47]++;\n  if (!planets.find(planet => {/* istanbul ignore next */cov_dsu7d9qvm.f[6]++;cov_dsu7d9qvm.s[48]++;return planet.id === request.url.query.id;})) {/* istanbul ignore next */cov_dsu7d9qvm.b[6][0]++;cov_dsu7d9qvm.s[49]++;\n    console.log('Hit .delete at specific request.body.id NOT in planets'); /* istanbul ignore next */cov_dsu7d9qvm.s[50]++;\n    sendStatus(response, 400, 'NO request id found'); /* istanbul ignore next */cov_dsu7d9qvm.s[51]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[6][1]++;cov_dsu7d9qvm.s[52]++;\n    console.log('Hit .delete at specific & correct request.body.id'); /* istanbul ignore next */cov_dsu7d9qvm.s[53]++;\n    console.log(request.url.query.id); /* istanbul ignore next */cov_dsu7d9qvm.s[54]++;\n    planets.filter(planet => {/* istanbul ignore next */cov_dsu7d9qvm.f[7]++;cov_dsu7d9qvm.s[55]++;return planet.id !== request.url.query.id;}); /* istanbul ignore next */cov_dsu7d9qvm.s[56]++;\n    sendJSON(response, 204, 'Planet removed succesfully'); /* istanbul ignore next */cov_dsu7d9qvm.s[57]++;\n    return;\n  }\n}","timestamp":"2017-12-07T23:21:09.418Z"}
{"level":"info","message":"Responding with a 204 code and the following data","timestamp":"2017-12-07T23:21:09.418Z"}
{"level":"info","message":"Planet removed succesfully","timestamp":"2017-12-07T23:21:09.418Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T23:21:56.812Z"}
{"level":"info","message":"/api/planet","timestamp":"2017-12-07T23:21:56.812Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[2]++;cov_dsu7d9qvm.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_dsu7d9qvm.b[0][0]++;cov_dsu7d9qvm.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[0][1]++;}cov_dsu7d9qvm.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_dsu7d9qvm.b[1][0]++;cov_dsu7d9qvm.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[1][1]++;}cov_dsu7d9qvm.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_dsu7d9qvm.b[2][0]++;cov_dsu7d9qvm.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[2][1]++;}\n  //can create my planet since all test pass\n  let planet = /* istanbul ignore next */(cov_dsu7d9qvm.s[25]++, new Planet(request.body.name, request.body.content)); /* istanbul ignore next */cov_dsu7d9qvm.s[26]++;\n  planets.push(planet); /* istanbul ignore next */cov_dsu7d9qvm.s[27]++;\n  sendJSON(response, 200, planet);\n}","timestamp":"2017-12-07T23:21:56.812Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T23:21:56.812Z"}
{"level":"info","message":"/api/planet","timestamp":"2017-12-07T23:21:56.812Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.url.query.id');\n    // sendStatus(response, 200, planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;console.log(planets); /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;\n    sendJSON(response, 200, planets); /* istanbul ignore next */cov_dsu7d9qvm.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[34]++;\n  if (!planets.find(planet => {/* istanbul ignore next */cov_dsu7d9qvm.f[4]++;cov_dsu7d9qvm.s[35]++;return planet.id === request.url.query.id;})) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[36]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[37]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[39]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[40]++;sendJSON(response, 200, planets[0]); /* istanbul ignore next */cov_dsu7d9qvm.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-07T23:21:56.812Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-07T23:21:56.812Z"}
{"level":"info","message":"/api/planet","timestamp":"2017-12-07T23:21:56.812Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[5]++;cov_dsu7d9qvm.s[43]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[5][0]++;cov_dsu7d9qvm.s[44]++;\n    console.log('Hit .delete at NO request.url.query.id'); /* istanbul ignore next */cov_dsu7d9qvm.s[45]++;\n    sendStatus(response, 404, 'Planet not found in database'); /* istanbul ignore next */cov_dsu7d9qvm.s[46]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[5][1]++;}cov_dsu7d9qvm.s[47]++;\n  if (!planets.find(planet => {/* istanbul ignore next */cov_dsu7d9qvm.f[6]++;cov_dsu7d9qvm.s[48]++;return planet.id === request.url.query.id;})) {/* istanbul ignore next */cov_dsu7d9qvm.b[6][0]++;cov_dsu7d9qvm.s[49]++;\n    console.log('Hit .delete at specific request.body.id NOT in planets'); /* istanbul ignore next */cov_dsu7d9qvm.s[50]++;\n    sendStatus(response, 400, 'NO request id found'); /* istanbul ignore next */cov_dsu7d9qvm.s[51]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[6][1]++;cov_dsu7d9qvm.s[52]++;\n    console.log('Hit .delete at specific & correct request.body.id'); /* istanbul ignore next */cov_dsu7d9qvm.s[53]++;\n    console.log(request.url.query.id); /* istanbul ignore next */cov_dsu7d9qvm.s[54]++;\n    planets.filter(planet => {/* istanbul ignore next */cov_dsu7d9qvm.f[7]++;cov_dsu7d9qvm.s[55]++;return planet.id !== request.url.query.id;}); /* istanbul ignore next */cov_dsu7d9qvm.s[56]++;\n    sendJSON(response, 204, 'Planet removed succesfully'); /* istanbul ignore next */cov_dsu7d9qvm.s[57]++;\n    return;\n  }\n}","timestamp":"2017-12-07T23:21:56.812Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T23:21:56.853Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:21:56.909Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:21:56.910Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[2]++;cov_dsu7d9qvm.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_dsu7d9qvm.b[0][0]++;cov_dsu7d9qvm.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[0][1]++;}cov_dsu7d9qvm.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_dsu7d9qvm.b[1][0]++;cov_dsu7d9qvm.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[1][1]++;}cov_dsu7d9qvm.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_dsu7d9qvm.b[2][0]++;cov_dsu7d9qvm.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[2][1]++;}\n  //can create my planet since all test pass\n  let planet = /* istanbul ignore next */(cov_dsu7d9qvm.s[25]++, new Planet(request.body.name, request.body.content)); /* istanbul ignore next */cov_dsu7d9qvm.s[26]++;\n  planets.push(planet); /* istanbul ignore next */cov_dsu7d9qvm.s[27]++;\n  sendJSON(response, 200, planet);\n}","timestamp":"2017-12-07T23:21:56.910Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T23:21:56.911Z"}
{"id":"6afc83f0-dba5-11e7-812a-192451fc0693","discoverDate":"2017-06-08T23:16:49.588Z","name":"BD032562b","content":"11h50m1555sDeclination02d45m365s","level":"info","message":"","timestamp":"2017-12-07T23:21:56.911Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:21:56.920Z"}
{"level":"info","message":"__REQUEST_ERROR","timestamp":"2017-12-07T23:21:56.920Z"}
{"message":"Unexpected token b in JSON at position 2","stack":"SyntaxError: Unexpected token b in JSON at position 2\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/home/seth/codefellows/401/lab/08-09-vanilla-rest-server/lab-seth/lib/request-parser.js:29:31)\n    at emitNone (events.js:106:13)\n    at IncomingMessage.emit (events.js:208:7)\n    at endReadableNT (_stream_readable.js:1056:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-07T23:21:56.920Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:21:56.923Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:21:56.923Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.url.query.id');\n    // sendStatus(response, 200, planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;console.log(planets); /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;\n    sendJSON(response, 200, planets); /* istanbul ignore next */cov_dsu7d9qvm.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[34]++;\n  if (!planets.find(planet => {/* istanbul ignore next */cov_dsu7d9qvm.f[4]++;cov_dsu7d9qvm.s[35]++;return planet.id === request.url.query.id;})) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[36]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[37]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[39]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[40]++;sendJSON(response, 200, planets[0]); /* istanbul ignore next */cov_dsu7d9qvm.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-07T23:21:56.923Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T23:21:56.925Z"}
[{"id":"6afc83f0-dba5-11e7-812a-192451fc0693","discoverDate":"2017-06-08T23:16:49.588Z","name":"BD032562b","content":"11h50m1555sDeclination02d45m365s"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:21:56.928Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:21:56.929Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.url.query.id');\n    // sendStatus(response, 200, planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;console.log(planets); /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;\n    sendJSON(response, 200, planets); /* istanbul ignore next */cov_dsu7d9qvm.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[34]++;\n  if (!planets.find(planet => {/* istanbul ignore next */cov_dsu7d9qvm.f[4]++;cov_dsu7d9qvm.s[35]++;return planet.id === request.url.query.id;})) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[36]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[37]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[39]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[40]++;sendJSON(response, 200, planets[0]); /* istanbul ignore next */cov_dsu7d9qvm.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-07T23:21:56.929Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T23:21:56.929Z"}
{"id":"6afc83f0-dba5-11e7-812a-192451fc0693","discoverDate":"2017-06-08T23:16:49.588Z","name":"BD032562b","content":"11h50m1555sDeclination02d45m365s","level":"info","message":"","timestamp":"2017-12-07T23:21:56.929Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:21:56.931Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:21:56.932Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.url.query.id');\n    // sendStatus(response, 200, planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;console.log(planets); /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;\n    sendJSON(response, 200, planets); /* istanbul ignore next */cov_dsu7d9qvm.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[34]++;\n  if (!planets.find(planet => {/* istanbul ignore next */cov_dsu7d9qvm.f[4]++;cov_dsu7d9qvm.s[35]++;return planet.id === request.url.query.id;})) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[36]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[37]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[39]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[40]++;sendJSON(response, 200, planets[0]); /* istanbul ignore next */cov_dsu7d9qvm.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-07T23:21:56.932Z"}
{"level":"info","message":"Responding with a 404 code due to Planet ID not found","timestamp":"2017-12-07T23:21:56.932Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:21:56.934Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:21:56.934Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[5]++;cov_dsu7d9qvm.s[43]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[5][0]++;cov_dsu7d9qvm.s[44]++;\n    console.log('Hit .delete at NO request.url.query.id'); /* istanbul ignore next */cov_dsu7d9qvm.s[45]++;\n    sendStatus(response, 404, 'Planet not found in database'); /* istanbul ignore next */cov_dsu7d9qvm.s[46]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[5][1]++;}cov_dsu7d9qvm.s[47]++;\n  if (!planets.find(planet => {/* istanbul ignore next */cov_dsu7d9qvm.f[6]++;cov_dsu7d9qvm.s[48]++;return planet.id === request.url.query.id;})) {/* istanbul ignore next */cov_dsu7d9qvm.b[6][0]++;cov_dsu7d9qvm.s[49]++;\n    console.log('Hit .delete at specific request.body.id NOT in planets'); /* istanbul ignore next */cov_dsu7d9qvm.s[50]++;\n    sendStatus(response, 400, 'NO request id found'); /* istanbul ignore next */cov_dsu7d9qvm.s[51]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[6][1]++;cov_dsu7d9qvm.s[52]++;\n    console.log('Hit .delete at specific & correct request.body.id'); /* istanbul ignore next */cov_dsu7d9qvm.s[53]++;\n    console.log(request.url.query.id); /* istanbul ignore next */cov_dsu7d9qvm.s[54]++;\n    planets.filter(planet => {/* istanbul ignore next */cov_dsu7d9qvm.f[7]++;cov_dsu7d9qvm.s[55]++;return planet.id !== request.url.query.id;}); /* istanbul ignore next */cov_dsu7d9qvm.s[56]++;\n    sendJSON(response, 204, 'Planet removed succesfully'); /* istanbul ignore next */cov_dsu7d9qvm.s[57]++;\n    return;\n  }\n}","timestamp":"2017-12-07T23:21:56.934Z"}
{"level":"info","message":"Responding with a 204 code and the following data","timestamp":"2017-12-07T23:21:56.935Z"}
{"level":"info","message":"Planet removed succesfully","timestamp":"2017-12-07T23:21:56.935Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T23:22:17.346Z"}
{"level":"info","message":"/api/planet","timestamp":"2017-12-07T23:22:17.347Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[2]++;cov_dsu7d9qvm.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_dsu7d9qvm.b[0][0]++;cov_dsu7d9qvm.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[0][1]++;}cov_dsu7d9qvm.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_dsu7d9qvm.b[1][0]++;cov_dsu7d9qvm.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[1][1]++;}cov_dsu7d9qvm.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_dsu7d9qvm.b[2][0]++;cov_dsu7d9qvm.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[2][1]++;}\n  //can create my planet since all test pass\n  let planet = /* istanbul ignore next */(cov_dsu7d9qvm.s[25]++, new Planet(request.body.name, request.body.content)); /* istanbul ignore next */cov_dsu7d9qvm.s[26]++;\n  planets.push(planet); /* istanbul ignore next */cov_dsu7d9qvm.s[27]++;\n  sendJSON(response, 200, planet);\n}","timestamp":"2017-12-07T23:22:17.347Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T23:22:17.347Z"}
{"level":"info","message":"/api/planet","timestamp":"2017-12-07T23:22:17.347Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.url.query.id');\n    // sendStatus(response, 200, planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;console.log(planets); /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;\n    sendJSON(response, 200, planets); /* istanbul ignore next */cov_dsu7d9qvm.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[34]++;\n  if (!planets.find(planet => {/* istanbul ignore next */cov_dsu7d9qvm.f[4]++;cov_dsu7d9qvm.s[35]++;return planet.id === request.url.query.id;})) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[36]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[37]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[39]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[40]++;sendJSON(response, 200, planets[0]); /* istanbul ignore next */cov_dsu7d9qvm.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-07T23:22:17.347Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-07T23:22:17.347Z"}
{"level":"info","message":"/api/planet","timestamp":"2017-12-07T23:22:17.347Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[5]++;cov_dsu7d9qvm.s[43]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[5][0]++;cov_dsu7d9qvm.s[44]++;\n    console.log('Hit .delete at NO request.url.query.id'); /* istanbul ignore next */cov_dsu7d9qvm.s[45]++;\n    sendStatus(response, 404, 'Planet not found in database'); /* istanbul ignore next */cov_dsu7d9qvm.s[46]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[5][1]++;}cov_dsu7d9qvm.s[47]++;\n  if (!planets.find(planet => {/* istanbul ignore next */cov_dsu7d9qvm.f[6]++;cov_dsu7d9qvm.s[48]++;return planet.id === request.url.query.id;})) {/* istanbul ignore next */cov_dsu7d9qvm.b[6][0]++;cov_dsu7d9qvm.s[49]++;\n    console.log('Hit .delete at specific request.body.id NOT in planets'); /* istanbul ignore next */cov_dsu7d9qvm.s[50]++;\n    sendStatus(response, 400, 'NO request id found'); /* istanbul ignore next */cov_dsu7d9qvm.s[51]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[6][1]++;cov_dsu7d9qvm.s[52]++;\n    console.log('Hit .delete at specific & correct request.body.id'); /* istanbul ignore next */cov_dsu7d9qvm.s[53]++;\n    console.log(request.url.query.id); /* istanbul ignore next */cov_dsu7d9qvm.s[54]++;\n    planets.filter(planet => {/* istanbul ignore next */cov_dsu7d9qvm.f[7]++;cov_dsu7d9qvm.s[55]++;return planet.id !== request.url.query.id;}); /* istanbul ignore next */cov_dsu7d9qvm.s[56]++;\n    sendJSON(response, 204, 'Planet removed succesfully'); /* istanbul ignore next */cov_dsu7d9qvm.s[57]++;\n    return;\n  }\n}","timestamp":"2017-12-07T23:22:17.347Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T23:22:17.390Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:22:17.446Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:22:17.447Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[2]++;cov_dsu7d9qvm.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_dsu7d9qvm.b[0][0]++;cov_dsu7d9qvm.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[0][1]++;}cov_dsu7d9qvm.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_dsu7d9qvm.b[1][0]++;cov_dsu7d9qvm.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[1][1]++;}cov_dsu7d9qvm.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_dsu7d9qvm.b[2][0]++;cov_dsu7d9qvm.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[2][1]++;}\n  //can create my planet since all test pass\n  let planet = /* istanbul ignore next */(cov_dsu7d9qvm.s[25]++, new Planet(request.body.name, request.body.content)); /* istanbul ignore next */cov_dsu7d9qvm.s[26]++;\n  planets.push(planet); /* istanbul ignore next */cov_dsu7d9qvm.s[27]++;\n  sendJSON(response, 200, planet);\n}","timestamp":"2017-12-07T23:22:17.447Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T23:22:17.448Z"}
{"id":"773a0f70-dba5-11e7-9c5c-8d3a4317b778","discoverDate":"2017-08-04T02:29:12.736Z","name":"BD032562b","content":"11h50m1555sDeclination02d45m365s","level":"info","message":"","timestamp":"2017-12-07T23:22:17.448Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:22:17.457Z"}
{"level":"info","message":"__REQUEST_ERROR","timestamp":"2017-12-07T23:22:17.458Z"}
{"message":"Unexpected token b in JSON at position 2","stack":"SyntaxError: Unexpected token b in JSON at position 2\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/home/seth/codefellows/401/lab/08-09-vanilla-rest-server/lab-seth/lib/request-parser.js:29:31)\n    at emitNone (events.js:106:13)\n    at IncomingMessage.emit (events.js:208:7)\n    at endReadableNT (_stream_readable.js:1056:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-07T23:22:17.458Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:22:17.460Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:22:17.460Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.url.query.id');\n    // sendStatus(response, 200, planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;console.log(planets); /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;\n    sendJSON(response, 200, planets); /* istanbul ignore next */cov_dsu7d9qvm.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[34]++;\n  if (!planets.find(planet => {/* istanbul ignore next */cov_dsu7d9qvm.f[4]++;cov_dsu7d9qvm.s[35]++;return planet.id === request.url.query.id;})) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[36]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[37]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[39]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[40]++;sendJSON(response, 200, planets[0]); /* istanbul ignore next */cov_dsu7d9qvm.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-07T23:22:17.460Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T23:22:17.462Z"}
[{"id":"773a0f70-dba5-11e7-9c5c-8d3a4317b778","discoverDate":"2017-08-04T02:29:12.736Z","name":"BD032562b","content":"11h50m1555sDeclination02d45m365s"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:22:17.465Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:22:17.466Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.url.query.id');\n    // sendStatus(response, 200, planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;console.log(planets); /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;\n    sendJSON(response, 200, planets); /* istanbul ignore next */cov_dsu7d9qvm.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[34]++;\n  if (!planets.find(planet => {/* istanbul ignore next */cov_dsu7d9qvm.f[4]++;cov_dsu7d9qvm.s[35]++;return planet.id === request.url.query.id;})) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[36]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[37]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[39]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[40]++;sendJSON(response, 200, planets[0]); /* istanbul ignore next */cov_dsu7d9qvm.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-07T23:22:17.466Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T23:22:17.466Z"}
{"id":"773a0f70-dba5-11e7-9c5c-8d3a4317b778","discoverDate":"2017-08-04T02:29:12.736Z","name":"BD032562b","content":"11h50m1555sDeclination02d45m365s","level":"info","message":"","timestamp":"2017-12-07T23:22:17.466Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:22:17.469Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:22:17.469Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.url.query.id');\n    // sendStatus(response, 200, planets);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;console.log(planets); /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;\n    sendJSON(response, 200, planets); /* istanbul ignore next */cov_dsu7d9qvm.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[34]++;\n  if (!planets.find(planet => {/* istanbul ignore next */cov_dsu7d9qvm.f[4]++;cov_dsu7d9qvm.s[35]++;return planet.id === request.url.query.id;})) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[36]++;\n    console.log('Hit .get at specific request.body.id NOT in planets');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[37]++;sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[39]++; //if(request.body.id)\n    console.log('Hit .get at specific & correct request.body.id');\n    // sendStatus(response,200,planets[request.id]);\n    /* istanbul ignore next */cov_dsu7d9qvm.s[40]++;sendJSON(response, 200, planets[0]); /* istanbul ignore next */cov_dsu7d9qvm.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-07T23:22:17.469Z"}
{"level":"info","message":"Responding with a 404 code due to Planet ID not found","timestamp":"2017-12-07T23:22:17.469Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:22:17.471Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:22:17.471Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[5]++;cov_dsu7d9qvm.s[43]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[5][0]++;cov_dsu7d9qvm.s[44]++;\n    console.log('Hit .delete at NO request.url.query.id'); /* istanbul ignore next */cov_dsu7d9qvm.s[45]++;\n    sendStatus(response, 404, 'Planet not found in database'); /* istanbul ignore next */cov_dsu7d9qvm.s[46]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[5][1]++;}cov_dsu7d9qvm.s[47]++;\n  if (!planets.find(planet => {/* istanbul ignore next */cov_dsu7d9qvm.f[6]++;cov_dsu7d9qvm.s[48]++;return planet.id === request.url.query.id;})) {/* istanbul ignore next */cov_dsu7d9qvm.b[6][0]++;cov_dsu7d9qvm.s[49]++;\n    console.log('Hit .delete at specific request.body.id NOT in planets'); /* istanbul ignore next */cov_dsu7d9qvm.s[50]++;\n    sendStatus(response, 400, 'NO request id found'); /* istanbul ignore next */cov_dsu7d9qvm.s[51]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[6][1]++;cov_dsu7d9qvm.s[52]++;\n    console.log('Hit .delete at specific & correct request.body.id'); /* istanbul ignore next */cov_dsu7d9qvm.s[53]++;\n    console.log(request.url.query.id); /* istanbul ignore next */cov_dsu7d9qvm.s[54]++;\n    planets.filter(planet => {/* istanbul ignore next */cov_dsu7d9qvm.f[7]++;cov_dsu7d9qvm.s[55]++;return planet.id !== request.url.query.id;}); /* istanbul ignore next */cov_dsu7d9qvm.s[56]++;\n    sendJSON(response, 204, 'Planet removed succesfully'); /* istanbul ignore next */cov_dsu7d9qvm.s[57]++;\n    return;\n  }\n}","timestamp":"2017-12-07T23:22:17.471Z"}
{"level":"info","message":"Responding with a 204 code and the following data","timestamp":"2017-12-07T23:22:17.472Z"}
{"level":"info","message":"Planet removed succesfully","timestamp":"2017-12-07T23:22:17.472Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T23:25:45.337Z"}
{"level":"info","message":"/api/planet","timestamp":"2017-12-07T23:25:45.338Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[2]++;cov_dsu7d9qvm.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_dsu7d9qvm.b[0][0]++;cov_dsu7d9qvm.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[0][1]++;}cov_dsu7d9qvm.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_dsu7d9qvm.b[1][0]++;cov_dsu7d9qvm.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[1][1]++;}cov_dsu7d9qvm.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_dsu7d9qvm.b[2][0]++;cov_dsu7d9qvm.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[2][1]++;}\n  let planet = /* istanbul ignore next */(cov_dsu7d9qvm.s[25]++, new Planet(request.body.name, request.body.content)); /* istanbul ignore next */cov_dsu7d9qvm.s[26]++;\n  planets.push(planet); /* istanbul ignore next */cov_dsu7d9qvm.s[27]++;\n  sendJSON(response, 200, planet);\n}","timestamp":"2017-12-07T23:25:45.338Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T23:25:45.338Z"}
{"level":"info","message":"/api/planet","timestamp":"2017-12-07T23:25:45.338Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.url.query.id'); /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;\n    console.log(planets); /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;\n    sendJSON(response, 200, planets); /* istanbul ignore next */cov_dsu7d9qvm.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[34]++;\n  if (!planets.find(planet => {/* istanbul ignore next */cov_dsu7d9qvm.f[4]++;cov_dsu7d9qvm.s[35]++;return planet.id === request.url.query.id;})) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[36]++;\n    console.log('Hit .get at specific request.body.id NOT in planets'); /* istanbul ignore next */cov_dsu7d9qvm.s[37]++;\n    sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[39]++;\n    console.log('Hit .get at specific & correct request.body.id'); /* istanbul ignore next */cov_dsu7d9qvm.s[40]++;\n    sendJSON(response, 200, planets[0]); /* istanbul ignore next */cov_dsu7d9qvm.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-07T23:25:45.338Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-07T23:25:45.338Z"}
{"level":"info","message":"/api/planet","timestamp":"2017-12-07T23:25:45.338Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[5]++;cov_dsu7d9qvm.s[43]++;\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[5][0]++;cov_dsu7d9qvm.s[44]++;\n    console.log('Hit .delete at NO request.url.query.id'); /* istanbul ignore next */cov_dsu7d9qvm.s[45]++;\n    sendStatus(response, 404, 'Planet not found in database'); /* istanbul ignore next */cov_dsu7d9qvm.s[46]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[5][1]++;}cov_dsu7d9qvm.s[47]++;\n  if (!planets.find(planet => {/* istanbul ignore next */cov_dsu7d9qvm.f[6]++;cov_dsu7d9qvm.s[48]++;return planet.id === request.url.query.id;})) {/* istanbul ignore next */cov_dsu7d9qvm.b[6][0]++;cov_dsu7d9qvm.s[49]++;\n    console.log('Hit .delete at specific request.body.id NOT in planets'); /* istanbul ignore next */cov_dsu7d9qvm.s[50]++;\n    sendStatus(response, 400, 'NO request id found'); /* istanbul ignore next */cov_dsu7d9qvm.s[51]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[6][1]++;cov_dsu7d9qvm.s[52]++;\n    console.log('Hit .delete at specific & correct request.body.id'); /* istanbul ignore next */cov_dsu7d9qvm.s[53]++;\n    console.log(request.url.query.id); /* istanbul ignore next */cov_dsu7d9qvm.s[54]++;\n    planets.filter(planet => {/* istanbul ignore next */cov_dsu7d9qvm.f[7]++;cov_dsu7d9qvm.s[55]++;return planet.id !== request.url.query.id;}); /* istanbul ignore next */cov_dsu7d9qvm.s[56]++;\n    sendJSON(response, 204, 'Planet removed succesfully'); /* istanbul ignore next */cov_dsu7d9qvm.s[57]++;\n    return;\n  }\n}","timestamp":"2017-12-07T23:25:45.338Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T23:25:45.380Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:25:45.438Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:25:45.439Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[2]++;cov_dsu7d9qvm.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_dsu7d9qvm.b[0][0]++;cov_dsu7d9qvm.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[0][1]++;}cov_dsu7d9qvm.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_dsu7d9qvm.b[1][0]++;cov_dsu7d9qvm.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[1][1]++;}cov_dsu7d9qvm.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_dsu7d9qvm.b[2][0]++;cov_dsu7d9qvm.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[2][1]++;}\n  let planet = /* istanbul ignore next */(cov_dsu7d9qvm.s[25]++, new Planet(request.body.name, request.body.content)); /* istanbul ignore next */cov_dsu7d9qvm.s[26]++;\n  planets.push(planet); /* istanbul ignore next */cov_dsu7d9qvm.s[27]++;\n  sendJSON(response, 200, planet);\n}","timestamp":"2017-12-07T23:25:45.439Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T23:25:45.440Z"}
{"id":"f3331ef0-dba5-11e7-b651-17d254a58206","discoverDate":"2017-10-16T00:32:50.998Z","name":"BD032562b","content":"11h50m1555sDeclination02d45m365s","level":"info","message":"","timestamp":"2017-12-07T23:25:45.440Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:25:45.449Z"}
{"level":"info","message":"__REQUEST_ERROR","timestamp":"2017-12-07T23:25:45.449Z"}
{"message":"Unexpected token b in JSON at position 2","stack":"SyntaxError: Unexpected token b in JSON at position 2\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/home/seth/codefellows/401/lab/08-09-vanilla-rest-server/lab-seth/lib/request-parser.js:29:31)\n    at emitNone (events.js:106:13)\n    at IncomingMessage.emit (events.js:208:7)\n    at endReadableNT (_stream_readable.js:1056:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-07T23:25:45.449Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:25:45.452Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:25:45.452Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.url.query.id'); /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;\n    console.log(planets); /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;\n    sendJSON(response, 200, planets); /* istanbul ignore next */cov_dsu7d9qvm.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[34]++;\n  if (!planets.find(planet => {/* istanbul ignore next */cov_dsu7d9qvm.f[4]++;cov_dsu7d9qvm.s[35]++;return planet.id === request.url.query.id;})) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[36]++;\n    console.log('Hit .get at specific request.body.id NOT in planets'); /* istanbul ignore next */cov_dsu7d9qvm.s[37]++;\n    sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[39]++;\n    console.log('Hit .get at specific & correct request.body.id'); /* istanbul ignore next */cov_dsu7d9qvm.s[40]++;\n    sendJSON(response, 200, planets[0]); /* istanbul ignore next */cov_dsu7d9qvm.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-07T23:25:45.452Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T23:25:45.454Z"}
[{"id":"f3331ef0-dba5-11e7-b651-17d254a58206","discoverDate":"2017-10-16T00:32:50.998Z","name":"BD032562b","content":"11h50m1555sDeclination02d45m365s"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:25:45.457Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:25:45.457Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.url.query.id'); /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;\n    console.log(planets); /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;\n    sendJSON(response, 200, planets); /* istanbul ignore next */cov_dsu7d9qvm.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[34]++;\n  if (!planets.find(planet => {/* istanbul ignore next */cov_dsu7d9qvm.f[4]++;cov_dsu7d9qvm.s[35]++;return planet.id === request.url.query.id;})) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[36]++;\n    console.log('Hit .get at specific request.body.id NOT in planets'); /* istanbul ignore next */cov_dsu7d9qvm.s[37]++;\n    sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[39]++;\n    console.log('Hit .get at specific & correct request.body.id'); /* istanbul ignore next */cov_dsu7d9qvm.s[40]++;\n    sendJSON(response, 200, planets[0]); /* istanbul ignore next */cov_dsu7d9qvm.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-07T23:25:45.457Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T23:25:45.458Z"}
{"id":"f3331ef0-dba5-11e7-b651-17d254a58206","discoverDate":"2017-10-16T00:32:50.998Z","name":"BD032562b","content":"11h50m1555sDeclination02d45m365s","level":"info","message":"","timestamp":"2017-12-07T23:25:45.458Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:25:45.460Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:25:45.461Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.url.query.id'); /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;\n    console.log(planets); /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;\n    sendJSON(response, 200, planets); /* istanbul ignore next */cov_dsu7d9qvm.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[34]++;\n  if (!planets.find(planet => {/* istanbul ignore next */cov_dsu7d9qvm.f[4]++;cov_dsu7d9qvm.s[35]++;return planet.id === request.url.query.id;})) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[36]++;\n    console.log('Hit .get at specific request.body.id NOT in planets'); /* istanbul ignore next */cov_dsu7d9qvm.s[37]++;\n    sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[39]++;\n    console.log('Hit .get at specific & correct request.body.id'); /* istanbul ignore next */cov_dsu7d9qvm.s[40]++;\n    sendJSON(response, 200, planets[0]); /* istanbul ignore next */cov_dsu7d9qvm.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-07T23:25:45.461Z"}
{"level":"info","message":"Responding with a 404 code due to Planet ID not found","timestamp":"2017-12-07T23:25:45.461Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:25:45.463Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:25:45.463Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[5]++;cov_dsu7d9qvm.s[43]++;\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[5][0]++;cov_dsu7d9qvm.s[44]++;\n    console.log('Hit .delete at NO request.url.query.id'); /* istanbul ignore next */cov_dsu7d9qvm.s[45]++;\n    sendStatus(response, 404, 'Planet not found in database'); /* istanbul ignore next */cov_dsu7d9qvm.s[46]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[5][1]++;}cov_dsu7d9qvm.s[47]++;\n  if (!planets.find(planet => {/* istanbul ignore next */cov_dsu7d9qvm.f[6]++;cov_dsu7d9qvm.s[48]++;return planet.id === request.url.query.id;})) {/* istanbul ignore next */cov_dsu7d9qvm.b[6][0]++;cov_dsu7d9qvm.s[49]++;\n    console.log('Hit .delete at specific request.body.id NOT in planets'); /* istanbul ignore next */cov_dsu7d9qvm.s[50]++;\n    sendStatus(response, 400, 'NO request id found'); /* istanbul ignore next */cov_dsu7d9qvm.s[51]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[6][1]++;cov_dsu7d9qvm.s[52]++;\n    console.log('Hit .delete at specific & correct request.body.id'); /* istanbul ignore next */cov_dsu7d9qvm.s[53]++;\n    console.log(request.url.query.id); /* istanbul ignore next */cov_dsu7d9qvm.s[54]++;\n    planets.filter(planet => {/* istanbul ignore next */cov_dsu7d9qvm.f[7]++;cov_dsu7d9qvm.s[55]++;return planet.id !== request.url.query.id;}); /* istanbul ignore next */cov_dsu7d9qvm.s[56]++;\n    sendJSON(response, 204, 'Planet removed succesfully'); /* istanbul ignore next */cov_dsu7d9qvm.s[57]++;\n    return;\n  }\n}","timestamp":"2017-12-07T23:25:45.463Z"}
{"level":"info","message":"Responding with a 204 code and the following data","timestamp":"2017-12-07T23:25:45.464Z"}
{"level":"info","message":"Planet removed succesfully","timestamp":"2017-12-07T23:25:45.464Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:25:45.465Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:25:45.465Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[5]++;cov_dsu7d9qvm.s[43]++;\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[5][0]++;cov_dsu7d9qvm.s[44]++;\n    console.log('Hit .delete at NO request.url.query.id'); /* istanbul ignore next */cov_dsu7d9qvm.s[45]++;\n    sendStatus(response, 404, 'Planet not found in database'); /* istanbul ignore next */cov_dsu7d9qvm.s[46]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[5][1]++;}cov_dsu7d9qvm.s[47]++;\n  if (!planets.find(planet => {/* istanbul ignore next */cov_dsu7d9qvm.f[6]++;cov_dsu7d9qvm.s[48]++;return planet.id === request.url.query.id;})) {/* istanbul ignore next */cov_dsu7d9qvm.b[6][0]++;cov_dsu7d9qvm.s[49]++;\n    console.log('Hit .delete at specific request.body.id NOT in planets'); /* istanbul ignore next */cov_dsu7d9qvm.s[50]++;\n    sendStatus(response, 400, 'NO request id found'); /* istanbul ignore next */cov_dsu7d9qvm.s[51]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[6][1]++;cov_dsu7d9qvm.s[52]++;\n    console.log('Hit .delete at specific & correct request.body.id'); /* istanbul ignore next */cov_dsu7d9qvm.s[53]++;\n    console.log(request.url.query.id); /* istanbul ignore next */cov_dsu7d9qvm.s[54]++;\n    planets.filter(planet => {/* istanbul ignore next */cov_dsu7d9qvm.f[7]++;cov_dsu7d9qvm.s[55]++;return planet.id !== request.url.query.id;}); /* istanbul ignore next */cov_dsu7d9qvm.s[56]++;\n    sendJSON(response, 204, 'Planet removed succesfully'); /* istanbul ignore next */cov_dsu7d9qvm.s[57]++;\n    return;\n  }\n}","timestamp":"2017-12-07T23:25:45.465Z"}
{"level":"info","message":"Responding with a 400 code due to NO request id found","timestamp":"2017-12-07T23:25:45.466Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T23:26:57.481Z"}
{"level":"info","message":"/api/planet","timestamp":"2017-12-07T23:26:57.482Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[2]++;cov_dsu7d9qvm.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_dsu7d9qvm.b[0][0]++;cov_dsu7d9qvm.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[0][1]++;}cov_dsu7d9qvm.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_dsu7d9qvm.b[1][0]++;cov_dsu7d9qvm.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[1][1]++;}cov_dsu7d9qvm.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_dsu7d9qvm.b[2][0]++;cov_dsu7d9qvm.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[2][1]++;}\n  let planet = /* istanbul ignore next */(cov_dsu7d9qvm.s[25]++, new Planet(request.body.name, request.body.content)); /* istanbul ignore next */cov_dsu7d9qvm.s[26]++;\n  planets.push(planet); /* istanbul ignore next */cov_dsu7d9qvm.s[27]++;\n  sendJSON(response, 200, planet);\n}","timestamp":"2017-12-07T23:26:57.482Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T23:26:57.482Z"}
{"level":"info","message":"/api/planet","timestamp":"2017-12-07T23:26:57.482Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.url.query.id'); /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;\n    console.log(planets); /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;\n    sendJSON(response, 200, planets); /* istanbul ignore next */cov_dsu7d9qvm.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[34]++;\n  if (!planets.find(planet => {/* istanbul ignore next */cov_dsu7d9qvm.f[4]++;cov_dsu7d9qvm.s[35]++;return planet.id === request.url.query.id;})) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[36]++;\n    console.log('Hit .get at specific request.body.id NOT in planets'); /* istanbul ignore next */cov_dsu7d9qvm.s[37]++;\n    sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[39]++;\n    console.log('Hit .get at specific & correct request.body.id'); /* istanbul ignore next */cov_dsu7d9qvm.s[40]++;\n    sendJSON(response, 200, planets[0]); /* istanbul ignore next */cov_dsu7d9qvm.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-07T23:26:57.482Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-07T23:26:57.482Z"}
{"level":"info","message":"/api/planet","timestamp":"2017-12-07T23:26:57.482Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[5]++;cov_dsu7d9qvm.s[43]++;\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[5][0]++;cov_dsu7d9qvm.s[44]++;\n    console.log('Hit .delete at NO request.url.query.id'); /* istanbul ignore next */cov_dsu7d9qvm.s[45]++;\n    sendStatus(response, 400, 'NO request id found'); /* istanbul ignore next */cov_dsu7d9qvm.s[46]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[5][1]++;}cov_dsu7d9qvm.s[47]++;\n  if (!planets.find(planet => {/* istanbul ignore next */cov_dsu7d9qvm.f[6]++;cov_dsu7d9qvm.s[48]++;return planet.id === request.url.query.id;})) {/* istanbul ignore next */cov_dsu7d9qvm.b[6][0]++;cov_dsu7d9qvm.s[49]++;\n    console.log('Hit .delete at specific request.body.id NOT in planets'); /* istanbul ignore next */cov_dsu7d9qvm.s[50]++;\n    sendStatus(response, 404, 'Planet not found in database'); /* istanbul ignore next */cov_dsu7d9qvm.s[51]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[6][1]++;cov_dsu7d9qvm.s[52]++;\n    console.log('Hit .delete at specific & correct request.body.id'); /* istanbul ignore next */cov_dsu7d9qvm.s[53]++;\n    console.log(request.url.query.id); /* istanbul ignore next */cov_dsu7d9qvm.s[54]++;\n    planets.filter(planet => {/* istanbul ignore next */cov_dsu7d9qvm.f[7]++;cov_dsu7d9qvm.s[55]++;return planet.id !== request.url.query.id;}); /* istanbul ignore next */cov_dsu7d9qvm.s[56]++;\n    sendJSON(response, 204, 'Planet removed succesfully'); /* istanbul ignore next */cov_dsu7d9qvm.s[57]++;\n    return;\n  }\n}","timestamp":"2017-12-07T23:26:57.482Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T23:26:57.525Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:26:57.583Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:26:57.584Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[2]++;cov_dsu7d9qvm.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_dsu7d9qvm.b[0][0]++;cov_dsu7d9qvm.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[0][1]++;}cov_dsu7d9qvm.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_dsu7d9qvm.b[1][0]++;cov_dsu7d9qvm.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[1][1]++;}cov_dsu7d9qvm.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_dsu7d9qvm.b[2][0]++;cov_dsu7d9qvm.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[2][1]++;}\n  let planet = /* istanbul ignore next */(cov_dsu7d9qvm.s[25]++, new Planet(request.body.name, request.body.content)); /* istanbul ignore next */cov_dsu7d9qvm.s[26]++;\n  planets.push(planet); /* istanbul ignore next */cov_dsu7d9qvm.s[27]++;\n  sendJSON(response, 200, planet);\n}","timestamp":"2017-12-07T23:26:57.584Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T23:26:57.585Z"}
{"id":"1e33ba10-dba6-11e7-955a-196fd035a695","discoverDate":"2017-11-18T03:02:16.467Z","name":"BD032562b","content":"11h50m1555sDeclination02d45m365s","level":"info","message":"","timestamp":"2017-12-07T23:26:57.585Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:26:57.594Z"}
{"level":"info","message":"__REQUEST_ERROR","timestamp":"2017-12-07T23:26:57.595Z"}
{"message":"Unexpected token b in JSON at position 2","stack":"SyntaxError: Unexpected token b in JSON at position 2\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/home/seth/codefellows/401/lab/08-09-vanilla-rest-server/lab-seth/lib/request-parser.js:29:31)\n    at emitNone (events.js:106:13)\n    at IncomingMessage.emit (events.js:208:7)\n    at endReadableNT (_stream_readable.js:1056:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-07T23:26:57.595Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:26:57.597Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:26:57.597Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.url.query.id'); /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;\n    console.log(planets); /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;\n    sendJSON(response, 200, planets); /* istanbul ignore next */cov_dsu7d9qvm.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[34]++;\n  if (!planets.find(planet => {/* istanbul ignore next */cov_dsu7d9qvm.f[4]++;cov_dsu7d9qvm.s[35]++;return planet.id === request.url.query.id;})) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[36]++;\n    console.log('Hit .get at specific request.body.id NOT in planets'); /* istanbul ignore next */cov_dsu7d9qvm.s[37]++;\n    sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[39]++;\n    console.log('Hit .get at specific & correct request.body.id'); /* istanbul ignore next */cov_dsu7d9qvm.s[40]++;\n    sendJSON(response, 200, planets[0]); /* istanbul ignore next */cov_dsu7d9qvm.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-07T23:26:57.597Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T23:26:57.599Z"}
[{"id":"1e33ba10-dba6-11e7-955a-196fd035a695","discoverDate":"2017-11-18T03:02:16.467Z","name":"BD032562b","content":"11h50m1555sDeclination02d45m365s"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:26:57.602Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:26:57.603Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.url.query.id'); /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;\n    console.log(planets); /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;\n    sendJSON(response, 200, planets); /* istanbul ignore next */cov_dsu7d9qvm.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[34]++;\n  if (!planets.find(planet => {/* istanbul ignore next */cov_dsu7d9qvm.f[4]++;cov_dsu7d9qvm.s[35]++;return planet.id === request.url.query.id;})) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[36]++;\n    console.log('Hit .get at specific request.body.id NOT in planets'); /* istanbul ignore next */cov_dsu7d9qvm.s[37]++;\n    sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[39]++;\n    console.log('Hit .get at specific & correct request.body.id'); /* istanbul ignore next */cov_dsu7d9qvm.s[40]++;\n    sendJSON(response, 200, planets[0]); /* istanbul ignore next */cov_dsu7d9qvm.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-07T23:26:57.603Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T23:26:57.603Z"}
{"id":"1e33ba10-dba6-11e7-955a-196fd035a695","discoverDate":"2017-11-18T03:02:16.467Z","name":"BD032562b","content":"11h50m1555sDeclination02d45m365s","level":"info","message":"","timestamp":"2017-12-07T23:26:57.604Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:26:57.606Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:26:57.607Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    console.log('Hit .get at NO request.url.query.id'); /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;\n    console.log(planets); /* istanbul ignore next */cov_dsu7d9qvm.s[32]++;\n    sendJSON(response, 200, planets); /* istanbul ignore next */cov_dsu7d9qvm.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[34]++;\n  if (!planets.find(planet => {/* istanbul ignore next */cov_dsu7d9qvm.f[4]++;cov_dsu7d9qvm.s[35]++;return planet.id === request.url.query.id;})) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[36]++;\n    console.log('Hit .get at specific request.body.id NOT in planets'); /* istanbul ignore next */cov_dsu7d9qvm.s[37]++;\n    sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[38]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[39]++;\n    console.log('Hit .get at specific & correct request.body.id'); /* istanbul ignore next */cov_dsu7d9qvm.s[40]++;\n    sendJSON(response, 200, planets[0]); /* istanbul ignore next */cov_dsu7d9qvm.s[41]++;\n    return;\n  }\n}","timestamp":"2017-12-07T23:26:57.607Z"}
{"level":"info","message":"Responding with a 404 code due to Planet ID not found","timestamp":"2017-12-07T23:26:57.607Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:26:57.608Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:26:57.609Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[5]++;cov_dsu7d9qvm.s[43]++;\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[5][0]++;cov_dsu7d9qvm.s[44]++;\n    console.log('Hit .delete at NO request.url.query.id'); /* istanbul ignore next */cov_dsu7d9qvm.s[45]++;\n    sendStatus(response, 400, 'NO request id found'); /* istanbul ignore next */cov_dsu7d9qvm.s[46]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[5][1]++;}cov_dsu7d9qvm.s[47]++;\n  if (!planets.find(planet => {/* istanbul ignore next */cov_dsu7d9qvm.f[6]++;cov_dsu7d9qvm.s[48]++;return planet.id === request.url.query.id;})) {/* istanbul ignore next */cov_dsu7d9qvm.b[6][0]++;cov_dsu7d9qvm.s[49]++;\n    console.log('Hit .delete at specific request.body.id NOT in planets'); /* istanbul ignore next */cov_dsu7d9qvm.s[50]++;\n    sendStatus(response, 404, 'Planet not found in database'); /* istanbul ignore next */cov_dsu7d9qvm.s[51]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[6][1]++;cov_dsu7d9qvm.s[52]++;\n    console.log('Hit .delete at specific & correct request.body.id'); /* istanbul ignore next */cov_dsu7d9qvm.s[53]++;\n    console.log(request.url.query.id); /* istanbul ignore next */cov_dsu7d9qvm.s[54]++;\n    planets.filter(planet => {/* istanbul ignore next */cov_dsu7d9qvm.f[7]++;cov_dsu7d9qvm.s[55]++;return planet.id !== request.url.query.id;}); /* istanbul ignore next */cov_dsu7d9qvm.s[56]++;\n    sendJSON(response, 204, 'Planet removed succesfully'); /* istanbul ignore next */cov_dsu7d9qvm.s[57]++;\n    return;\n  }\n}","timestamp":"2017-12-07T23:26:57.609Z"}
{"level":"info","message":"Responding with a 204 code and the following data","timestamp":"2017-12-07T23:26:57.609Z"}
{"level":"info","message":"Planet removed succesfully","timestamp":"2017-12-07T23:26:57.609Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:26:57.611Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:26:57.611Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[5]++;cov_dsu7d9qvm.s[43]++;\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[5][0]++;cov_dsu7d9qvm.s[44]++;\n    console.log('Hit .delete at NO request.url.query.id'); /* istanbul ignore next */cov_dsu7d9qvm.s[45]++;\n    sendStatus(response, 400, 'NO request id found'); /* istanbul ignore next */cov_dsu7d9qvm.s[46]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[5][1]++;}cov_dsu7d9qvm.s[47]++;\n  if (!planets.find(planet => {/* istanbul ignore next */cov_dsu7d9qvm.f[6]++;cov_dsu7d9qvm.s[48]++;return planet.id === request.url.query.id;})) {/* istanbul ignore next */cov_dsu7d9qvm.b[6][0]++;cov_dsu7d9qvm.s[49]++;\n    console.log('Hit .delete at specific request.body.id NOT in planets'); /* istanbul ignore next */cov_dsu7d9qvm.s[50]++;\n    sendStatus(response, 404, 'Planet not found in database'); /* istanbul ignore next */cov_dsu7d9qvm.s[51]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[6][1]++;cov_dsu7d9qvm.s[52]++;\n    console.log('Hit .delete at specific & correct request.body.id'); /* istanbul ignore next */cov_dsu7d9qvm.s[53]++;\n    console.log(request.url.query.id); /* istanbul ignore next */cov_dsu7d9qvm.s[54]++;\n    planets.filter(planet => {/* istanbul ignore next */cov_dsu7d9qvm.f[7]++;cov_dsu7d9qvm.s[55]++;return planet.id !== request.url.query.id;}); /* istanbul ignore next */cov_dsu7d9qvm.s[56]++;\n    sendJSON(response, 204, 'Planet removed succesfully'); /* istanbul ignore next */cov_dsu7d9qvm.s[57]++;\n    return;\n  }\n}","timestamp":"2017-12-07T23:26:57.611Z"}
{"level":"info","message":"Responding with a 404 code due to Planet not found in database","timestamp":"2017-12-07T23:26:57.611Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T23:29:51.336Z"}
{"level":"info","message":"/api/planet","timestamp":"2017-12-07T23:29:51.337Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[2]++;cov_dsu7d9qvm.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_dsu7d9qvm.b[0][0]++;cov_dsu7d9qvm.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[0][1]++;}cov_dsu7d9qvm.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_dsu7d9qvm.b[1][0]++;cov_dsu7d9qvm.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[1][1]++;}cov_dsu7d9qvm.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_dsu7d9qvm.b[2][0]++;cov_dsu7d9qvm.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[2][1]++;}\n  let planet = /* istanbul ignore next */(cov_dsu7d9qvm.s[25]++, new Planet(request.body.name, request.body.content)); /* istanbul ignore next */cov_dsu7d9qvm.s[26]++;\n  planets.push(planet); /* istanbul ignore next */cov_dsu7d9qvm.s[27]++;\n  sendJSON(response, 200, planet);\n}","timestamp":"2017-12-07T23:29:51.337Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T23:29:51.337Z"}
{"level":"info","message":"/api/planet","timestamp":"2017-12-07T23:29:51.337Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    sendJSON(response, 200, planets); /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[32]++;\n  if (!planets.find(planet => {/* istanbul ignore next */cov_dsu7d9qvm.f[4]++;cov_dsu7d9qvm.s[33]++;return planet.id === request.url.query.id;})) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[34]++;\n    sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[35]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[36]++;\n    sendJSON(response, 200, planets[0]); /* istanbul ignore next */cov_dsu7d9qvm.s[37]++;\n    return;\n  }\n}","timestamp":"2017-12-07T23:29:51.337Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-07T23:29:51.337Z"}
{"level":"info","message":"/api/planet","timestamp":"2017-12-07T23:29:51.337Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[5]++;cov_dsu7d9qvm.s[39]++;\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[5][0]++;cov_dsu7d9qvm.s[40]++;\n    sendStatus(response, 400, 'NO request id found'); /* istanbul ignore next */cov_dsu7d9qvm.s[41]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[5][1]++;}cov_dsu7d9qvm.s[42]++;\n  if (!planets.find(planet => {/* istanbul ignore next */cov_dsu7d9qvm.f[6]++;cov_dsu7d9qvm.s[43]++;return planet.id === request.url.query.id;})) {/* istanbul ignore next */cov_dsu7d9qvm.b[6][0]++;cov_dsu7d9qvm.s[44]++;\n    sendStatus(response, 404, 'Planet not found in database'); /* istanbul ignore next */cov_dsu7d9qvm.s[45]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[6][1]++;cov_dsu7d9qvm.s[46]++;\n    planets.filter(planet => {/* istanbul ignore next */cov_dsu7d9qvm.f[7]++;cov_dsu7d9qvm.s[47]++;return planet.id !== request.url.query.id;}); /* istanbul ignore next */cov_dsu7d9qvm.s[48]++;\n    sendJSON(response, 204, 'Planet removed succesfully'); /* istanbul ignore next */cov_dsu7d9qvm.s[49]++;\n    return;\n  }\n}","timestamp":"2017-12-07T23:29:51.337Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T23:29:51.389Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:29:51.440Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:29:51.441Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[2]++;cov_dsu7d9qvm.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_dsu7d9qvm.b[0][0]++;cov_dsu7d9qvm.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[0][1]++;}cov_dsu7d9qvm.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_dsu7d9qvm.b[1][0]++;cov_dsu7d9qvm.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[1][1]++;}cov_dsu7d9qvm.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_dsu7d9qvm.b[2][0]++;cov_dsu7d9qvm.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[2][1]++;}\n  let planet = /* istanbul ignore next */(cov_dsu7d9qvm.s[25]++, new Planet(request.body.name, request.body.content)); /* istanbul ignore next */cov_dsu7d9qvm.s[26]++;\n  planets.push(planet); /* istanbul ignore next */cov_dsu7d9qvm.s[27]++;\n  sendJSON(response, 200, planet);\n}","timestamp":"2017-12-07T23:29:51.441Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T23:29:51.442Z"}
{"id":"85d40c10-dba6-11e7-a81e-43e93b61a47c","discoverDate":"2017-08-27T04:56:57.673Z","name":"BD032562b","content":"11h50m1555sDeclination02d45m365s","level":"info","message":"","timestamp":"2017-12-07T23:29:51.442Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:29:51.450Z"}
{"level":"info","message":"__REQUEST_ERROR","timestamp":"2017-12-07T23:29:51.451Z"}
{"message":"Unexpected token b in JSON at position 2","stack":"SyntaxError: Unexpected token b in JSON at position 2\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/home/seth/codefellows/401/lab/08-09-vanilla-rest-server/lab-seth/lib/request-parser.js:26:31)\n    at emitNone (events.js:106:13)\n    at IncomingMessage.emit (events.js:208:7)\n    at endReadableNT (_stream_readable.js:1056:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-07T23:29:51.451Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:29:51.453Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:29:51.454Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    sendJSON(response, 200, planets); /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[32]++;\n  if (!planets.find(planet => {/* istanbul ignore next */cov_dsu7d9qvm.f[4]++;cov_dsu7d9qvm.s[33]++;return planet.id === request.url.query.id;})) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[34]++;\n    sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[35]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[36]++;\n    sendJSON(response, 200, planets[0]); /* istanbul ignore next */cov_dsu7d9qvm.s[37]++;\n    return;\n  }\n}","timestamp":"2017-12-07T23:29:51.454Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T23:29:51.454Z"}
[{"id":"85d40c10-dba6-11e7-a81e-43e93b61a47c","discoverDate":"2017-08-27T04:56:57.673Z","name":"BD032562b","content":"11h50m1555sDeclination02d45m365s"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:29:51.457Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:29:51.457Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    sendJSON(response, 200, planets); /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[32]++;\n  if (!planets.find(planet => {/* istanbul ignore next */cov_dsu7d9qvm.f[4]++;cov_dsu7d9qvm.s[33]++;return planet.id === request.url.query.id;})) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[34]++;\n    sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[35]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[36]++;\n    sendJSON(response, 200, planets[0]); /* istanbul ignore next */cov_dsu7d9qvm.s[37]++;\n    return;\n  }\n}","timestamp":"2017-12-07T23:29:51.457Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T23:29:51.457Z"}
{"id":"85d40c10-dba6-11e7-a81e-43e93b61a47c","discoverDate":"2017-08-27T04:56:57.673Z","name":"BD032562b","content":"11h50m1555sDeclination02d45m365s","level":"info","message":"","timestamp":"2017-12-07T23:29:51.458Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:29:51.459Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:29:51.460Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[3]++;cov_dsu7d9qvm.s[29]++;\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[3][0]++;cov_dsu7d9qvm.s[30]++;\n    sendJSON(response, 200, planets); /* istanbul ignore next */cov_dsu7d9qvm.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[3][1]++;}cov_dsu7d9qvm.s[32]++;\n  if (!planets.find(planet => {/* istanbul ignore next */cov_dsu7d9qvm.f[4]++;cov_dsu7d9qvm.s[33]++;return planet.id === request.url.query.id;})) {/* istanbul ignore next */cov_dsu7d9qvm.b[4][0]++;cov_dsu7d9qvm.s[34]++;\n    sendStatus(response, 404, 'Planet ID not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[35]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[4][1]++;cov_dsu7d9qvm.s[36]++;\n    sendJSON(response, 200, planets[0]); /* istanbul ignore next */cov_dsu7d9qvm.s[37]++;\n    return;\n  }\n}","timestamp":"2017-12-07T23:29:51.460Z"}
{"level":"info","message":"Responding with a 404 code due to Planet ID not found","timestamp":"2017-12-07T23:29:51.460Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:29:51.462Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:29:51.462Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[5]++;cov_dsu7d9qvm.s[39]++;\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[5][0]++;cov_dsu7d9qvm.s[40]++;\n    sendStatus(response, 400, 'NO request id found'); /* istanbul ignore next */cov_dsu7d9qvm.s[41]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[5][1]++;}cov_dsu7d9qvm.s[42]++;\n  if (!planets.find(planet => {/* istanbul ignore next */cov_dsu7d9qvm.f[6]++;cov_dsu7d9qvm.s[43]++;return planet.id === request.url.query.id;})) {/* istanbul ignore next */cov_dsu7d9qvm.b[6][0]++;cov_dsu7d9qvm.s[44]++;\n    sendStatus(response, 404, 'Planet not found in database'); /* istanbul ignore next */cov_dsu7d9qvm.s[45]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[6][1]++;cov_dsu7d9qvm.s[46]++;\n    planets.filter(planet => {/* istanbul ignore next */cov_dsu7d9qvm.f[7]++;cov_dsu7d9qvm.s[47]++;return planet.id !== request.url.query.id;}); /* istanbul ignore next */cov_dsu7d9qvm.s[48]++;\n    sendJSON(response, 204, 'Planet removed succesfully'); /* istanbul ignore next */cov_dsu7d9qvm.s[49]++;\n    return;\n  }\n}","timestamp":"2017-12-07T23:29:51.462Z"}
{"level":"info","message":"Responding with a 204 code and the following data","timestamp":"2017-12-07T23:29:51.462Z"}
{"level":"info","message":"Planet removed succesfully","timestamp":"2017-12-07T23:29:51.462Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:29:51.464Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:29:51.464Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[5]++;cov_dsu7d9qvm.s[39]++;\n  if (!request.url.query.id) {/* istanbul ignore next */cov_dsu7d9qvm.b[5][0]++;cov_dsu7d9qvm.s[40]++;\n    sendStatus(response, 400, 'NO request id found'); /* istanbul ignore next */cov_dsu7d9qvm.s[41]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[5][1]++;}cov_dsu7d9qvm.s[42]++;\n  if (!planets.find(planet => {/* istanbul ignore next */cov_dsu7d9qvm.f[6]++;cov_dsu7d9qvm.s[43]++;return planet.id === request.url.query.id;})) {/* istanbul ignore next */cov_dsu7d9qvm.b[6][0]++;cov_dsu7d9qvm.s[44]++;\n    sendStatus(response, 404, 'Planet not found in database'); /* istanbul ignore next */cov_dsu7d9qvm.s[45]++;\n    return;\n  } else {/* istanbul ignore next */cov_dsu7d9qvm.b[6][1]++;cov_dsu7d9qvm.s[46]++;\n    planets.filter(planet => {/* istanbul ignore next */cov_dsu7d9qvm.f[7]++;cov_dsu7d9qvm.s[47]++;return planet.id !== request.url.query.id;}); /* istanbul ignore next */cov_dsu7d9qvm.s[48]++;\n    sendJSON(response, 204, 'Planet removed succesfully'); /* istanbul ignore next */cov_dsu7d9qvm.s[49]++;\n    return;\n  }\n}","timestamp":"2017-12-07T23:29:51.464Z"}
{"level":"info","message":"Responding with a 404 code due to Planet not found in database","timestamp":"2017-12-07T23:29:51.464Z"}
