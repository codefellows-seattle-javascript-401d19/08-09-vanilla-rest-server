{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-08T01:57:44.557Z"}
{"level":"info","message":"/api/starTrekEpisodes","timestamp":"2017-12-08T01:57:44.558Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_an4ij1ivy.f[2]++;cov_an4ij1ivy.s[16]++;\n\n  if (!request.body) {/* istanbul ignore next */cov_an4ij1ivy.b[0][0]++;cov_an4ij1ivy.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_an4ij1ivy.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_an4ij1ivy.b[0][1]++;}cov_an4ij1ivy.s[19]++;\n  if (!request.body.episode) {/* istanbul ignore next */cov_an4ij1ivy.b[1][0]++;cov_an4ij1ivy.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_an4ij1ivy.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_an4ij1ivy.b[1][1]++;}cov_an4ij1ivy.s[22]++;\n  if (!request.body.episodeTitle) {/* istanbul ignore next */cov_an4ij1ivy.b[2][0]++;cov_an4ij1ivy.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_an4ij1ivy.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_an4ij1ivy.b[2][1]++;}cov_an4ij1ivy.s[25]++;\n  if (!request.body.episodeDescription) {/* istanbul ignore next */cov_an4ij1ivy.b[3][0]++;cov_an4ij1ivy.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_an4ij1ivy.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_an4ij1ivy.b[3][1]++;}cov_an4ij1ivy.s[28]++;\n\n  const starTrekGetById = episodeGet => {/* istanbul ignore next */cov_an4ij1ivy.f[3]++;cov_an4ij1ivy.s[29]++;\n    return episodeGet.filter(elementEpisode => {/* istanbul ignore next */cov_an4ij1ivy.f[4]++;cov_an4ij1ivy.s[30]++;return StarTrek.id === elementEpisode;})[0];\n  }; /* istanbul ignore next */cov_an4ij1ivy.s[31]++;\n\n  const starTrekRemoveById = episodeRemove => {/* istanbul ignore next */cov_an4ij1ivy.f[5]++;cov_an4ij1ivy.s[32]++;\n    return episodeRemove.filter(id => {/* istanbul ignore next */cov_an4ij1ivy.f[6]++;cov_an4ij1ivy.s[33]++;return StarTrek.id !== id;});\n  };\n\n  let starTrekEpisodes = /* istanbul ignore next */(cov_an4ij1ivy.s[34]++, new StarTrek(\n  request.body.episode,\n  request.body.episodeTitle,\n  request.body.episodeDescription)); /* istanbul ignore next */cov_an4ij1ivy.s[35]++;\n  starTrekEpisodesArr.push(starTrekEpisodes); /* istanbul ignore next */cov_an4ij1ivy.s[36]++;\n  sendJSON(response, 200, starTrekEpisodes); /* istanbul ignore next */cov_an4ij1ivy.s[37]++;\n\n  router.get(`/api/starTrekEpisodes`, (request, response) => {/* istanbul ignore next */cov_an4ij1ivy.f[7]++;\n    let id = /* istanbul ignore next */(cov_an4ij1ivy.s[38]++, request.url.query.id); /* istanbul ignore next */cov_an4ij1ivy.s[39]++;\n    if (id) {/* istanbul ignore next */cov_an4ij1ivy.b[4][0]++;\n      let getEpisode = /* istanbul ignore next */(cov_an4ij1ivy.s[40]++, starTrekGetById(id)); /* istanbul ignore next */cov_an4ij1ivy.s[41]++;\n      if (getEpisode) {/* istanbul ignore next */cov_an4ij1ivy.b[5][0]++;cov_an4ij1ivy.s[42]++;sendJSON(response, 200, getEpisode);} else\n\n        {/* istanbul ignore next */cov_an4ij1ivy.b[5][1]++;cov_an4ij1ivy.s[43]++;sendStatus(response, 404, `Missing Episode ${id}`);}\n    } else /* istanbul ignore next */{cov_an4ij1ivy.b[4][1]++;}\n  }); /* istanbul ignore next */cov_an4ij1ivy.s[44]++;\n\n  router.delete(`/api/starTrekEpisodes`, (request, response) => {/* istanbul ignore next */cov_an4ij1ivy.f[8]++;\n    let id = /* istanbul ignore next */(cov_an4ij1ivy.s[45]++, request.url.query.id); /* istanbul ignore next */cov_an4ij1ivy.s[46]++;\n    if (id) {/* istanbul ignore next */cov_an4ij1ivy.b[6][0]++;\n      let removeEpisode = /* istanbul ignore next */(cov_an4ij1ivy.s[47]++, starTrekRemoveById(id)); /* istanbul ignore next */cov_an4ij1ivy.s[48]++;\n      if (removeEpisode)\n        {/* istanbul ignore next */cov_an4ij1ivy.b[7][0]++;cov_an4ij1ivy.s[49]++;logger.log('info', `Episode with ${id} Removed from memory`);} else /* istanbul ignore next */{cov_an4ij1ivy.b[7][1]++;}\n    } else\n      {/* istanbul ignore next */cov_an4ij1ivy.b[6][1]++;cov_an4ij1ivy.s[50]++;sendStatus(response, 404, `No Episode with ${id}`);}\n  });\n\n\n\n}","timestamp":"2017-12-08T01:57:44.558Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-08T01:57:44.610Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:57:44.628Z"}
{"level":"info","message":"<------Handler Log------>","timestamp":"2017-12-08T01:57:44.630Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_an4ij1ivy.f[2]++;cov_an4ij1ivy.s[16]++;\n\n  if (!request.body) {/* istanbul ignore next */cov_an4ij1ivy.b[0][0]++;cov_an4ij1ivy.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_an4ij1ivy.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_an4ij1ivy.b[0][1]++;}cov_an4ij1ivy.s[19]++;\n  if (!request.body.episode) {/* istanbul ignore next */cov_an4ij1ivy.b[1][0]++;cov_an4ij1ivy.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_an4ij1ivy.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_an4ij1ivy.b[1][1]++;}cov_an4ij1ivy.s[22]++;\n  if (!request.body.episodeTitle) {/* istanbul ignore next */cov_an4ij1ivy.b[2][0]++;cov_an4ij1ivy.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_an4ij1ivy.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_an4ij1ivy.b[2][1]++;}cov_an4ij1ivy.s[25]++;\n  if (!request.body.episodeDescription) {/* istanbul ignore next */cov_an4ij1ivy.b[3][0]++;cov_an4ij1ivy.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_an4ij1ivy.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_an4ij1ivy.b[3][1]++;}cov_an4ij1ivy.s[28]++;\n\n  const starTrekGetById = episodeGet => {/* istanbul ignore next */cov_an4ij1ivy.f[3]++;cov_an4ij1ivy.s[29]++;\n    return episodeGet.filter(elementEpisode => {/* istanbul ignore next */cov_an4ij1ivy.f[4]++;cov_an4ij1ivy.s[30]++;return StarTrek.id === elementEpisode;})[0];\n  }; /* istanbul ignore next */cov_an4ij1ivy.s[31]++;\n\n  const starTrekRemoveById = episodeRemove => {/* istanbul ignore next */cov_an4ij1ivy.f[5]++;cov_an4ij1ivy.s[32]++;\n    return episodeRemove.filter(id => {/* istanbul ignore next */cov_an4ij1ivy.f[6]++;cov_an4ij1ivy.s[33]++;return StarTrek.id !== id;});\n  };\n\n  let starTrekEpisodes = /* istanbul ignore next */(cov_an4ij1ivy.s[34]++, new StarTrek(\n  request.body.episode,\n  request.body.episodeTitle,\n  request.body.episodeDescription)); /* istanbul ignore next */cov_an4ij1ivy.s[35]++;\n  starTrekEpisodesArr.push(starTrekEpisodes); /* istanbul ignore next */cov_an4ij1ivy.s[36]++;\n  sendJSON(response, 200, starTrekEpisodes); /* istanbul ignore next */cov_an4ij1ivy.s[37]++;\n\n  router.get(`/api/starTrekEpisodes`, (request, response) => {/* istanbul ignore next */cov_an4ij1ivy.f[7]++;\n    let id = /* istanbul ignore next */(cov_an4ij1ivy.s[38]++, request.url.query.id); /* istanbul ignore next */cov_an4ij1ivy.s[39]++;\n    if (id) {/* istanbul ignore next */cov_an4ij1ivy.b[4][0]++;\n      let getEpisode = /* istanbul ignore next */(cov_an4ij1ivy.s[40]++, starTrekGetById(id)); /* istanbul ignore next */cov_an4ij1ivy.s[41]++;\n      if (getEpisode) {/* istanbul ignore next */cov_an4ij1ivy.b[5][0]++;cov_an4ij1ivy.s[42]++;sendJSON(response, 200, getEpisode);} else\n\n        {/* istanbul ignore next */cov_an4ij1ivy.b[5][1]++;cov_an4ij1ivy.s[43]++;sendStatus(response, 404, `Missing Episode ${id}`);}\n    } else /* istanbul ignore next */{cov_an4ij1ivy.b[4][1]++;}\n  }); /* istanbul ignore next */cov_an4ij1ivy.s[44]++;\n\n  router.delete(`/api/starTrekEpisodes`, (request, response) => {/* istanbul ignore next */cov_an4ij1ivy.f[8]++;\n    let id = /* istanbul ignore next */(cov_an4ij1ivy.s[45]++, request.url.query.id); /* istanbul ignore next */cov_an4ij1ivy.s[46]++;\n    if (id) {/* istanbul ignore next */cov_an4ij1ivy.b[6][0]++;\n      let removeEpisode = /* istanbul ignore next */(cov_an4ij1ivy.s[47]++, starTrekRemoveById(id)); /* istanbul ignore next */cov_an4ij1ivy.s[48]++;\n      if (removeEpisode)\n        {/* istanbul ignore next */cov_an4ij1ivy.b[7][0]++;cov_an4ij1ivy.s[49]++;logger.log('info', `Episode with ${id} Removed from memory`);} else /* istanbul ignore next */{cov_an4ij1ivy.b[7][1]++;}\n    } else\n      {/* istanbul ignore next */cov_an4ij1ivy.b[6][1]++;cov_an4ij1ivy.s[50]++;sendStatus(response, 404, `No Episode with ${id}`);}\n  });\n\n\n\n}","timestamp":"2017-12-08T01:57:44.630Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T01:57:44.631Z"}
{"id":"2ea96470-dbbb-11e7-9e1e-07618562d8da","episode":"1","episodeTitle":"Encounter At Farpoint","episodeDescription":"In 2364, the newest flagship of the United Federation of Planets, Starfleet's USS Enterprise, travels to the planet Deneb IV for its maiden voyage.","level":"info","message":"","timestamp":"2017-12-08T01:57:44.631Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-08T01:57:44.632Z"}
{"level":"info","message":"/api/starTrekEpisodes","timestamp":"2017-12-08T01:57:44.632Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_an4ij1ivy.f[7]++;\n    let id = /* istanbul ignore next */(cov_an4ij1ivy.s[38]++, request.url.query.id); /* istanbul ignore next */cov_an4ij1ivy.s[39]++;\n    if (id) {/* istanbul ignore next */cov_an4ij1ivy.b[4][0]++;\n      let getEpisode = /* istanbul ignore next */(cov_an4ij1ivy.s[40]++, starTrekGetById(id)); /* istanbul ignore next */cov_an4ij1ivy.s[41]++;\n      if (getEpisode) {/* istanbul ignore next */cov_an4ij1ivy.b[5][0]++;cov_an4ij1ivy.s[42]++;sendJSON(response, 200, getEpisode);} else\n\n        {/* istanbul ignore next */cov_an4ij1ivy.b[5][1]++;cov_an4ij1ivy.s[43]++;sendStatus(response, 404, `Missing Episode ${id}`);}\n    } else /* istanbul ignore next */{cov_an4ij1ivy.b[4][1]++;}\n  }","timestamp":"2017-12-08T01:57:44.632Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-08T01:57:44.632Z"}
{"level":"info","message":"/api/starTrekEpisodes","timestamp":"2017-12-08T01:57:44.632Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_an4ij1ivy.f[8]++;\n    let id = /* istanbul ignore next */(cov_an4ij1ivy.s[45]++, request.url.query.id); /* istanbul ignore next */cov_an4ij1ivy.s[46]++;\n    if (id) {/* istanbul ignore next */cov_an4ij1ivy.b[6][0]++;\n      let removeEpisode = /* istanbul ignore next */(cov_an4ij1ivy.s[47]++, starTrekRemoveById(id)); /* istanbul ignore next */cov_an4ij1ivy.s[48]++;\n      if (removeEpisode)\n        {/* istanbul ignore next */cov_an4ij1ivy.b[7][0]++;cov_an4ij1ivy.s[49]++;logger.log('info', `Episode with ${id} Removed from memory`);} else /* istanbul ignore next */{cov_an4ij1ivy.b[7][1]++;}\n    } else\n      {/* istanbul ignore next */cov_an4ij1ivy.b[6][1]++;cov_an4ij1ivy.s[50]++;sendStatus(response, 404, `No Episode with ${id}`);}\n  }","timestamp":"2017-12-08T01:57:44.632Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:57:44.643Z"}
{"level":"info","message":"<------Handler Log------>","timestamp":"2017-12-08T01:57:44.644Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_an4ij1ivy.f[8]++;\n    let id = /* istanbul ignore next */(cov_an4ij1ivy.s[45]++, request.url.query.id); /* istanbul ignore next */cov_an4ij1ivy.s[46]++;\n    if (id) {/* istanbul ignore next */cov_an4ij1ivy.b[6][0]++;\n      let removeEpisode = /* istanbul ignore next */(cov_an4ij1ivy.s[47]++, starTrekRemoveById(id)); /* istanbul ignore next */cov_an4ij1ivy.s[48]++;\n      if (removeEpisode)\n        {/* istanbul ignore next */cov_an4ij1ivy.b[7][0]++;cov_an4ij1ivy.s[49]++;logger.log('info', `Episode with ${id} Removed from memory`);} else /* istanbul ignore next */{cov_an4ij1ivy.b[7][1]++;}\n    } else\n      {/* istanbul ignore next */cov_an4ij1ivy.b[6][1]++;cov_an4ij1ivy.s[50]++;sendStatus(response, 404, `No Episode with ${id}`);}\n  }","timestamp":"2017-12-08T01:57:44.644Z"}
{"level":"info","message":"Responding with a 404 code due to No Episode with undefined","timestamp":"2017-12-08T01:57:44.644Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:57:44.647Z"}
{"level":"info","message":"<------Handler Log------>","timestamp":"2017-12-08T01:57:44.647Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_an4ij1ivy.f[8]++;\n    let id = /* istanbul ignore next */(cov_an4ij1ivy.s[45]++, request.url.query.id); /* istanbul ignore next */cov_an4ij1ivy.s[46]++;\n    if (id) {/* istanbul ignore next */cov_an4ij1ivy.b[6][0]++;\n      let removeEpisode = /* istanbul ignore next */(cov_an4ij1ivy.s[47]++, starTrekRemoveById(id)); /* istanbul ignore next */cov_an4ij1ivy.s[48]++;\n      if (removeEpisode)\n        {/* istanbul ignore next */cov_an4ij1ivy.b[7][0]++;cov_an4ij1ivy.s[49]++;logger.log('info', `Episode with ${id} Removed from memory`);} else /* istanbul ignore next */{cov_an4ij1ivy.b[7][1]++;}\n    } else\n      {/* istanbul ignore next */cov_an4ij1ivy.b[6][1]++;cov_an4ij1ivy.s[50]++;sendStatus(response, 404, `No Episode with ${id}`);}\n  }","timestamp":"2017-12-08T01:57:44.647Z"}
{"level":"info","message":"Responding with a 404 code due to No Episode with undefined","timestamp":"2017-12-08T01:57:44.647Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-08T02:00:09.765Z"}
{"level":"info","message":"/api/starTrekEpisodes","timestamp":"2017-12-08T02:00:09.766Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_an4ij1ivy.f[2]++;cov_an4ij1ivy.s[16]++;\n\n  if (!request.body) {/* istanbul ignore next */cov_an4ij1ivy.b[0][0]++;cov_an4ij1ivy.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_an4ij1ivy.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_an4ij1ivy.b[0][1]++;}cov_an4ij1ivy.s[19]++;\n  if (!request.body.episode) {/* istanbul ignore next */cov_an4ij1ivy.b[1][0]++;cov_an4ij1ivy.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_an4ij1ivy.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_an4ij1ivy.b[1][1]++;}cov_an4ij1ivy.s[22]++;\n  if (!request.body.episodeTitle) {/* istanbul ignore next */cov_an4ij1ivy.b[2][0]++;cov_an4ij1ivy.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_an4ij1ivy.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_an4ij1ivy.b[2][1]++;}cov_an4ij1ivy.s[25]++;\n  if (!request.body.episodeDescription) {/* istanbul ignore next */cov_an4ij1ivy.b[3][0]++;cov_an4ij1ivy.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_an4ij1ivy.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_an4ij1ivy.b[3][1]++;}cov_an4ij1ivy.s[28]++;\n\n  const starTrekGetById = episodeGet => {/* istanbul ignore next */cov_an4ij1ivy.f[3]++;cov_an4ij1ivy.s[29]++;\n    return episodeGet.filter(elementEpisode => {/* istanbul ignore next */cov_an4ij1ivy.f[4]++;cov_an4ij1ivy.s[30]++;return StarTrek.id === elementEpisode;})[0];\n  }; /* istanbul ignore next */cov_an4ij1ivy.s[31]++;\n\n  const starTrekRemoveById = episodeRemove => {/* istanbul ignore next */cov_an4ij1ivy.f[5]++;cov_an4ij1ivy.s[32]++;\n    return episodeRemove.filter(id => {/* istanbul ignore next */cov_an4ij1ivy.f[6]++;cov_an4ij1ivy.s[33]++;return StarTrek.id !== id;});\n  };\n\n  let starTrekEpisodes = /* istanbul ignore next */(cov_an4ij1ivy.s[34]++, new StarTrek(\n  request.body.episode,\n  request.body.episodeTitle,\n  request.body.episodeDescription)); /* istanbul ignore next */cov_an4ij1ivy.s[35]++;\n  starTrekEpisodesArr.push(starTrekEpisodes); /* istanbul ignore next */cov_an4ij1ivy.s[36]++;\n  sendJSON(response, 200, starTrekEpisodes); /* istanbul ignore next */cov_an4ij1ivy.s[37]++;\n\n  router.get(`/api/starTrekEpisodes`, (request, response) => {/* istanbul ignore next */cov_an4ij1ivy.f[7]++;\n    let id = /* istanbul ignore next */(cov_an4ij1ivy.s[38]++, request.url.query.id); /* istanbul ignore next */cov_an4ij1ivy.s[39]++;\n    if (id) {/* istanbul ignore next */cov_an4ij1ivy.b[4][0]++;\n      let getEpisode = /* istanbul ignore next */(cov_an4ij1ivy.s[40]++, starTrekGetById(id)); /* istanbul ignore next */cov_an4ij1ivy.s[41]++;\n      if (getEpisode) {/* istanbul ignore next */cov_an4ij1ivy.b[5][0]++;cov_an4ij1ivy.s[42]++;sendJSON(response, 200, getEpisode);} else\n\n        {/* istanbul ignore next */cov_an4ij1ivy.b[5][1]++;cov_an4ij1ivy.s[43]++;sendStatus(response, 404, `Missing Episode ${id}`);}\n    } else /* istanbul ignore next */{cov_an4ij1ivy.b[4][1]++;}\n  }); /* istanbul ignore next */cov_an4ij1ivy.s[44]++;\n\n  router.delete(`/api/starTrekEpisodes`, (request, response) => {/* istanbul ignore next */cov_an4ij1ivy.f[8]++;\n    let id = /* istanbul ignore next */(cov_an4ij1ivy.s[45]++, request.url.query.id); /* istanbul ignore next */cov_an4ij1ivy.s[46]++;\n    if (id) {/* istanbul ignore next */cov_an4ij1ivy.b[6][0]++;\n      let removeEpisode = /* istanbul ignore next */(cov_an4ij1ivy.s[47]++, starTrekRemoveById(id)); /* istanbul ignore next */cov_an4ij1ivy.s[48]++;\n      if (removeEpisode)\n        {/* istanbul ignore next */cov_an4ij1ivy.b[7][0]++;cov_an4ij1ivy.s[49]++;logger.log('info', `Episode with ${id} Removed from memory`);} else /* istanbul ignore next */{cov_an4ij1ivy.b[7][1]++;}\n    } else\n      {/* istanbul ignore next */cov_an4ij1ivy.b[6][1]++;cov_an4ij1ivy.s[50]++;sendStatus(response, 404, `No Episode with ${id}`);}\n  });\n\n\n\n}","timestamp":"2017-12-08T02:00:09.766Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-08T02:00:09.809Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T02:00:09.825Z"}
{"level":"info","message":"<------Handler Log------>","timestamp":"2017-12-08T02:00:09.826Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_an4ij1ivy.f[2]++;cov_an4ij1ivy.s[16]++;\n\n  if (!request.body) {/* istanbul ignore next */cov_an4ij1ivy.b[0][0]++;cov_an4ij1ivy.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_an4ij1ivy.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_an4ij1ivy.b[0][1]++;}cov_an4ij1ivy.s[19]++;\n  if (!request.body.episode) {/* istanbul ignore next */cov_an4ij1ivy.b[1][0]++;cov_an4ij1ivy.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_an4ij1ivy.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_an4ij1ivy.b[1][1]++;}cov_an4ij1ivy.s[22]++;\n  if (!request.body.episodeTitle) {/* istanbul ignore next */cov_an4ij1ivy.b[2][0]++;cov_an4ij1ivy.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_an4ij1ivy.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_an4ij1ivy.b[2][1]++;}cov_an4ij1ivy.s[25]++;\n  if (!request.body.episodeDescription) {/* istanbul ignore next */cov_an4ij1ivy.b[3][0]++;cov_an4ij1ivy.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_an4ij1ivy.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_an4ij1ivy.b[3][1]++;}cov_an4ij1ivy.s[28]++;\n\n  const starTrekGetById = episodeGet => {/* istanbul ignore next */cov_an4ij1ivy.f[3]++;cov_an4ij1ivy.s[29]++;\n    return episodeGet.filter(elementEpisode => {/* istanbul ignore next */cov_an4ij1ivy.f[4]++;cov_an4ij1ivy.s[30]++;return StarTrek.id === elementEpisode;})[0];\n  }; /* istanbul ignore next */cov_an4ij1ivy.s[31]++;\n\n  const starTrekRemoveById = episodeRemove => {/* istanbul ignore next */cov_an4ij1ivy.f[5]++;cov_an4ij1ivy.s[32]++;\n    return episodeRemove.filter(id => {/* istanbul ignore next */cov_an4ij1ivy.f[6]++;cov_an4ij1ivy.s[33]++;return StarTrek.id !== id;});\n  };\n\n  let starTrekEpisodes = /* istanbul ignore next */(cov_an4ij1ivy.s[34]++, new StarTrek(\n  request.body.episode,\n  request.body.episodeTitle,\n  request.body.episodeDescription)); /* istanbul ignore next */cov_an4ij1ivy.s[35]++;\n  starTrekEpisodesArr.push(starTrekEpisodes); /* istanbul ignore next */cov_an4ij1ivy.s[36]++;\n  sendJSON(response, 200, starTrekEpisodes); /* istanbul ignore next */cov_an4ij1ivy.s[37]++;\n\n  router.get(`/api/starTrekEpisodes`, (request, response) => {/* istanbul ignore next */cov_an4ij1ivy.f[7]++;\n    let id = /* istanbul ignore next */(cov_an4ij1ivy.s[38]++, request.url.query.id); /* istanbul ignore next */cov_an4ij1ivy.s[39]++;\n    if (id) {/* istanbul ignore next */cov_an4ij1ivy.b[4][0]++;\n      let getEpisode = /* istanbul ignore next */(cov_an4ij1ivy.s[40]++, starTrekGetById(id)); /* istanbul ignore next */cov_an4ij1ivy.s[41]++;\n      if (getEpisode) {/* istanbul ignore next */cov_an4ij1ivy.b[5][0]++;cov_an4ij1ivy.s[42]++;sendJSON(response, 200, getEpisode);} else\n\n        {/* istanbul ignore next */cov_an4ij1ivy.b[5][1]++;cov_an4ij1ivy.s[43]++;sendStatus(response, 404, `Missing Episode ${id}`);}\n    } else /* istanbul ignore next */{cov_an4ij1ivy.b[4][1]++;}\n  }); /* istanbul ignore next */cov_an4ij1ivy.s[44]++;\n\n  router.delete(`/api/starTrekEpisodes`, (request, response) => {/* istanbul ignore next */cov_an4ij1ivy.f[8]++;\n    let id = /* istanbul ignore next */(cov_an4ij1ivy.s[45]++, request.url.query.id); /* istanbul ignore next */cov_an4ij1ivy.s[46]++;\n    if (id) {/* istanbul ignore next */cov_an4ij1ivy.b[6][0]++;\n      let removeEpisode = /* istanbul ignore next */(cov_an4ij1ivy.s[47]++, starTrekRemoveById(id)); /* istanbul ignore next */cov_an4ij1ivy.s[48]++;\n      if (removeEpisode)\n        {/* istanbul ignore next */cov_an4ij1ivy.b[7][0]++;cov_an4ij1ivy.s[49]++;logger.log('info', `Episode with ${id} Removed from memory`);} else /* istanbul ignore next */{cov_an4ij1ivy.b[7][1]++;}\n    } else\n      {/* istanbul ignore next */cov_an4ij1ivy.b[6][1]++;cov_an4ij1ivy.s[50]++;sendStatus(response, 404, `No Episode with ${id}`);}\n  });\n\n\n\n}","timestamp":"2017-12-08T02:00:09.826Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T02:00:09.827Z"}
{"id":"85348b30-dbbb-11e7-97c0-5d7cf8b82b0f","episode":"1","episodeTitle":"Encounter At Farpoint","episodeDescription":"In 2364, the newest flagship of the United Federation of Planets, Starfleet's USS Enterprise, travels to the planet Deneb IV for its maiden voyage.","level":"info","message":"","timestamp":"2017-12-08T02:00:09.827Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-08T02:00:09.828Z"}
{"level":"info","message":"/api/starTrekEpisodes","timestamp":"2017-12-08T02:00:09.828Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_an4ij1ivy.f[7]++;\n    let id = /* istanbul ignore next */(cov_an4ij1ivy.s[38]++, request.url.query.id); /* istanbul ignore next */cov_an4ij1ivy.s[39]++;\n    if (id) {/* istanbul ignore next */cov_an4ij1ivy.b[4][0]++;\n      let getEpisode = /* istanbul ignore next */(cov_an4ij1ivy.s[40]++, starTrekGetById(id)); /* istanbul ignore next */cov_an4ij1ivy.s[41]++;\n      if (getEpisode) {/* istanbul ignore next */cov_an4ij1ivy.b[5][0]++;cov_an4ij1ivy.s[42]++;sendJSON(response, 200, getEpisode);} else\n\n        {/* istanbul ignore next */cov_an4ij1ivy.b[5][1]++;cov_an4ij1ivy.s[43]++;sendStatus(response, 404, `Missing Episode ${id}`);}\n    } else /* istanbul ignore next */{cov_an4ij1ivy.b[4][1]++;}\n  }","timestamp":"2017-12-08T02:00:09.828Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-08T02:00:09.828Z"}
{"level":"info","message":"/api/starTrekEpisodes","timestamp":"2017-12-08T02:00:09.828Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_an4ij1ivy.f[8]++;\n    let id = /* istanbul ignore next */(cov_an4ij1ivy.s[45]++, request.url.query.id); /* istanbul ignore next */cov_an4ij1ivy.s[46]++;\n    if (id) {/* istanbul ignore next */cov_an4ij1ivy.b[6][0]++;\n      let removeEpisode = /* istanbul ignore next */(cov_an4ij1ivy.s[47]++, starTrekRemoveById(id)); /* istanbul ignore next */cov_an4ij1ivy.s[48]++;\n      if (removeEpisode)\n        {/* istanbul ignore next */cov_an4ij1ivy.b[7][0]++;cov_an4ij1ivy.s[49]++;logger.log('info', `Episode with ${id} Removed from memory`);} else /* istanbul ignore next */{cov_an4ij1ivy.b[7][1]++;}\n    } else\n      {/* istanbul ignore next */cov_an4ij1ivy.b[6][1]++;cov_an4ij1ivy.s[50]++;sendStatus(response, 404, `No Episode with ${id}`);}\n  }","timestamp":"2017-12-08T02:00:09.828Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T02:00:09.838Z"}
{"level":"info","message":"<------Handler Log------>","timestamp":"2017-12-08T02:00:09.838Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_an4ij1ivy.f[8]++;\n    let id = /* istanbul ignore next */(cov_an4ij1ivy.s[45]++, request.url.query.id); /* istanbul ignore next */cov_an4ij1ivy.s[46]++;\n    if (id) {/* istanbul ignore next */cov_an4ij1ivy.b[6][0]++;\n      let removeEpisode = /* istanbul ignore next */(cov_an4ij1ivy.s[47]++, starTrekRemoveById(id)); /* istanbul ignore next */cov_an4ij1ivy.s[48]++;\n      if (removeEpisode)\n        {/* istanbul ignore next */cov_an4ij1ivy.b[7][0]++;cov_an4ij1ivy.s[49]++;logger.log('info', `Episode with ${id} Removed from memory`);} else /* istanbul ignore next */{cov_an4ij1ivy.b[7][1]++;}\n    } else\n      {/* istanbul ignore next */cov_an4ij1ivy.b[6][1]++;cov_an4ij1ivy.s[50]++;sendStatus(response, 404, `No Episode with ${id}`);}\n  }","timestamp":"2017-12-08T02:00:09.838Z"}
{"level":"info","message":"Responding with a 404 code due to No Episode with undefined","timestamp":"2017-12-08T02:00:09.838Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T02:00:09.841Z"}
{"level":"info","message":"<------Handler Log------>","timestamp":"2017-12-08T02:00:09.842Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_an4ij1ivy.f[8]++;\n    let id = /* istanbul ignore next */(cov_an4ij1ivy.s[45]++, request.url.query.id); /* istanbul ignore next */cov_an4ij1ivy.s[46]++;\n    if (id) {/* istanbul ignore next */cov_an4ij1ivy.b[6][0]++;\n      let removeEpisode = /* istanbul ignore next */(cov_an4ij1ivy.s[47]++, starTrekRemoveById(id)); /* istanbul ignore next */cov_an4ij1ivy.s[48]++;\n      if (removeEpisode)\n        {/* istanbul ignore next */cov_an4ij1ivy.b[7][0]++;cov_an4ij1ivy.s[49]++;logger.log('info', `Episode with ${id} Removed from memory`);} else /* istanbul ignore next */{cov_an4ij1ivy.b[7][1]++;}\n    } else\n      {/* istanbul ignore next */cov_an4ij1ivy.b[6][1]++;cov_an4ij1ivy.s[50]++;sendStatus(response, 404, `No Episode with ${id}`);}\n  }","timestamp":"2017-12-08T02:00:09.842Z"}
{"level":"info","message":"Responding with a 404 code due to No Episode with undefined","timestamp":"2017-12-08T02:00:09.842Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-08T02:01:58.743Z"}
{"level":"info","message":"/api/starTrekEpisodes","timestamp":"2017-12-08T02:01:58.744Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_an4ij1ivy.f[2]++;cov_an4ij1ivy.s[16]++;\n\n  if (!request.body) {/* istanbul ignore next */cov_an4ij1ivy.b[0][0]++;cov_an4ij1ivy.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_an4ij1ivy.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_an4ij1ivy.b[0][1]++;}cov_an4ij1ivy.s[19]++;\n  if (!request.body.episode) {/* istanbul ignore next */cov_an4ij1ivy.b[1][0]++;cov_an4ij1ivy.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_an4ij1ivy.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_an4ij1ivy.b[1][1]++;}cov_an4ij1ivy.s[22]++;\n  if (!request.body.episodeTitle) {/* istanbul ignore next */cov_an4ij1ivy.b[2][0]++;cov_an4ij1ivy.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_an4ij1ivy.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_an4ij1ivy.b[2][1]++;}cov_an4ij1ivy.s[25]++;\n  if (!request.body.episodeDescription) {/* istanbul ignore next */cov_an4ij1ivy.b[3][0]++;cov_an4ij1ivy.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_an4ij1ivy.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_an4ij1ivy.b[3][1]++;}cov_an4ij1ivy.s[28]++;\n\n  const starTrekGetById = episodeGet => {/* istanbul ignore next */cov_an4ij1ivy.f[3]++;cov_an4ij1ivy.s[29]++;\n    return episodeGet.filter(elementEpisode => {/* istanbul ignore next */cov_an4ij1ivy.f[4]++;cov_an4ij1ivy.s[30]++;return StarTrek.id === elementEpisode;})[0];\n  }; /* istanbul ignore next */cov_an4ij1ivy.s[31]++;\n\n  const starTrekRemoveById = episodeRemove => {/* istanbul ignore next */cov_an4ij1ivy.f[5]++;cov_an4ij1ivy.s[32]++;\n    return episodeRemove.filter(id => {/* istanbul ignore next */cov_an4ij1ivy.f[6]++;cov_an4ij1ivy.s[33]++;return StarTrek.id !== id;});\n  };\n\n  let starTrekEpisodes = /* istanbul ignore next */(cov_an4ij1ivy.s[34]++, new StarTrek(\n  request.body.episode,\n  request.body.episodeTitle,\n  request.body.episodeDescription)); /* istanbul ignore next */cov_an4ij1ivy.s[35]++;\n  starTrekEpisodesArr.push(starTrekEpisodes); /* istanbul ignore next */cov_an4ij1ivy.s[36]++;\n  sendJSON(response, 200, starTrekEpisodes); /* istanbul ignore next */cov_an4ij1ivy.s[37]++;\n\n  router.get(`/api/starTrekEpisodes`, (request, response) => {/* istanbul ignore next */cov_an4ij1ivy.f[7]++;\n    let id = /* istanbul ignore next */(cov_an4ij1ivy.s[38]++, request.url.query.id); /* istanbul ignore next */cov_an4ij1ivy.s[39]++;\n    if (id) {/* istanbul ignore next */cov_an4ij1ivy.b[4][0]++;\n      let getEpisode = /* istanbul ignore next */(cov_an4ij1ivy.s[40]++, starTrekGetById(id)); /* istanbul ignore next */cov_an4ij1ivy.s[41]++;\n      if (getEpisode) {/* istanbul ignore next */cov_an4ij1ivy.b[5][0]++;cov_an4ij1ivy.s[42]++;sendJSON(response, 200, getEpisode);} else\n\n        {/* istanbul ignore next */cov_an4ij1ivy.b[5][1]++;cov_an4ij1ivy.s[43]++;sendStatus(response, 404, `Missing Episode ${id}`);}\n    } else /* istanbul ignore next */{cov_an4ij1ivy.b[4][1]++;}\n  }); /* istanbul ignore next */cov_an4ij1ivy.s[44]++;\n\n  router.delete(`/api/starTrekEpisodes`, (request, response) => {/* istanbul ignore next */cov_an4ij1ivy.f[8]++;\n    let id = /* istanbul ignore next */(cov_an4ij1ivy.s[45]++, request.url.query.id); /* istanbul ignore next */cov_an4ij1ivy.s[46]++;\n    if (id) {/* istanbul ignore next */cov_an4ij1ivy.b[6][0]++;\n      let removeEpisode = /* istanbul ignore next */(cov_an4ij1ivy.s[47]++, starTrekRemoveById(id)); /* istanbul ignore next */cov_an4ij1ivy.s[48]++;\n      if (removeEpisode)\n        {/* istanbul ignore next */cov_an4ij1ivy.b[7][0]++;cov_an4ij1ivy.s[49]++;logger.log('info', `Episode with ${id} Removed from memory`);} else /* istanbul ignore next */{cov_an4ij1ivy.b[7][1]++;}\n    } else\n      {/* istanbul ignore next */cov_an4ij1ivy.b[6][1]++;cov_an4ij1ivy.s[50]++;sendStatus(response, 404, `No Episode with ${id}`);}\n  });\n\n\n\n}","timestamp":"2017-12-08T02:01:58.744Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-08T02:01:58.787Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T02:01:58.804Z"}
{"level":"info","message":"<------Handler Log------>","timestamp":"2017-12-08T02:01:58.806Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_an4ij1ivy.f[2]++;cov_an4ij1ivy.s[16]++;\n\n  if (!request.body) {/* istanbul ignore next */cov_an4ij1ivy.b[0][0]++;cov_an4ij1ivy.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_an4ij1ivy.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_an4ij1ivy.b[0][1]++;}cov_an4ij1ivy.s[19]++;\n  if (!request.body.episode) {/* istanbul ignore next */cov_an4ij1ivy.b[1][0]++;cov_an4ij1ivy.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_an4ij1ivy.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_an4ij1ivy.b[1][1]++;}cov_an4ij1ivy.s[22]++;\n  if (!request.body.episodeTitle) {/* istanbul ignore next */cov_an4ij1ivy.b[2][0]++;cov_an4ij1ivy.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_an4ij1ivy.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_an4ij1ivy.b[2][1]++;}cov_an4ij1ivy.s[25]++;\n  if (!request.body.episodeDescription) {/* istanbul ignore next */cov_an4ij1ivy.b[3][0]++;cov_an4ij1ivy.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_an4ij1ivy.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_an4ij1ivy.b[3][1]++;}cov_an4ij1ivy.s[28]++;\n\n  const starTrekGetById = episodeGet => {/* istanbul ignore next */cov_an4ij1ivy.f[3]++;cov_an4ij1ivy.s[29]++;\n    return episodeGet.filter(elementEpisode => {/* istanbul ignore next */cov_an4ij1ivy.f[4]++;cov_an4ij1ivy.s[30]++;return StarTrek.id === elementEpisode;})[0];\n  }; /* istanbul ignore next */cov_an4ij1ivy.s[31]++;\n\n  const starTrekRemoveById = episodeRemove => {/* istanbul ignore next */cov_an4ij1ivy.f[5]++;cov_an4ij1ivy.s[32]++;\n    return episodeRemove.filter(id => {/* istanbul ignore next */cov_an4ij1ivy.f[6]++;cov_an4ij1ivy.s[33]++;return StarTrek.id !== id;});\n  };\n\n  let starTrekEpisodes = /* istanbul ignore next */(cov_an4ij1ivy.s[34]++, new StarTrek(\n  request.body.episode,\n  request.body.episodeTitle,\n  request.body.episodeDescription)); /* istanbul ignore next */cov_an4ij1ivy.s[35]++;\n  starTrekEpisodesArr.push(starTrekEpisodes); /* istanbul ignore next */cov_an4ij1ivy.s[36]++;\n  sendJSON(response, 200, starTrekEpisodes); /* istanbul ignore next */cov_an4ij1ivy.s[37]++;\n\n  router.get(`/api/starTrekEpisodes`, (request, response) => {/* istanbul ignore next */cov_an4ij1ivy.f[7]++;\n    let id = /* istanbul ignore next */(cov_an4ij1ivy.s[38]++, request.url.query.id); /* istanbul ignore next */cov_an4ij1ivy.s[39]++;\n    if (id) {/* istanbul ignore next */cov_an4ij1ivy.b[4][0]++;\n      let getEpisode = /* istanbul ignore next */(cov_an4ij1ivy.s[40]++, starTrekGetById(id)); /* istanbul ignore next */cov_an4ij1ivy.s[41]++;\n      if (getEpisode) {/* istanbul ignore next */cov_an4ij1ivy.b[5][0]++;cov_an4ij1ivy.s[42]++;sendJSON(response, 200, getEpisode);} else\n\n        {/* istanbul ignore next */cov_an4ij1ivy.b[5][1]++;cov_an4ij1ivy.s[43]++;sendStatus(response, 404, `Missing Episode ${id}`);}\n    } else /* istanbul ignore next */{cov_an4ij1ivy.b[4][1]++;}\n  }); /* istanbul ignore next */cov_an4ij1ivy.s[44]++;\n\n  router.delete(`/api/starTrekEpisodes`, (request, response) => {/* istanbul ignore next */cov_an4ij1ivy.f[8]++;\n    let id = /* istanbul ignore next */(cov_an4ij1ivy.s[45]++, request.url.query.id); /* istanbul ignore next */cov_an4ij1ivy.s[46]++;\n    if (id) {/* istanbul ignore next */cov_an4ij1ivy.b[6][0]++;\n      let removeEpisode = /* istanbul ignore next */(cov_an4ij1ivy.s[47]++, starTrekRemoveById(id)); /* istanbul ignore next */cov_an4ij1ivy.s[48]++;\n      if (removeEpisode)\n        {/* istanbul ignore next */cov_an4ij1ivy.b[7][0]++;cov_an4ij1ivy.s[49]++;logger.log('info', `Episode with ${id} Removed from memory`);} else /* istanbul ignore next */{cov_an4ij1ivy.b[7][1]++;}\n    } else\n      {/* istanbul ignore next */cov_an4ij1ivy.b[6][1]++;cov_an4ij1ivy.s[50]++;sendStatus(response, 404, `No Episode with ${id}`);}\n  });\n\n\n\n}","timestamp":"2017-12-08T02:01:58.806Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T02:01:58.807Z"}
{"id":"c6296b60-dbbb-11e7-92d4-2d1a80da38a0","episode":"1","episodeTitle":"Encounter At Farpoint","episodeDescription":"In 2364, the newest flagship of the United Federation of Planets, Starfleet's USS Enterprise, travels to the planet Deneb IV for its maiden voyage.","level":"info","message":"","timestamp":"2017-12-08T02:01:58.807Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-08T02:01:58.807Z"}
{"level":"info","message":"/api/starTrekEpisodes","timestamp":"2017-12-08T02:01:58.808Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_an4ij1ivy.f[7]++;\n    let id = /* istanbul ignore next */(cov_an4ij1ivy.s[38]++, request.url.query.id); /* istanbul ignore next */cov_an4ij1ivy.s[39]++;\n    if (id) {/* istanbul ignore next */cov_an4ij1ivy.b[4][0]++;\n      let getEpisode = /* istanbul ignore next */(cov_an4ij1ivy.s[40]++, starTrekGetById(id)); /* istanbul ignore next */cov_an4ij1ivy.s[41]++;\n      if (getEpisode) {/* istanbul ignore next */cov_an4ij1ivy.b[5][0]++;cov_an4ij1ivy.s[42]++;sendJSON(response, 200, getEpisode);} else\n\n        {/* istanbul ignore next */cov_an4ij1ivy.b[5][1]++;cov_an4ij1ivy.s[43]++;sendStatus(response, 404, `Missing Episode ${id}`);}\n    } else /* istanbul ignore next */{cov_an4ij1ivy.b[4][1]++;}\n  }","timestamp":"2017-12-08T02:01:58.808Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-08T02:01:58.808Z"}
{"level":"info","message":"/api/starTrekEpisodes","timestamp":"2017-12-08T02:01:58.808Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_an4ij1ivy.f[8]++;\n    let id = /* istanbul ignore next */(cov_an4ij1ivy.s[45]++, request.url.query.id); /* istanbul ignore next */cov_an4ij1ivy.s[46]++;\n    if (id) {/* istanbul ignore next */cov_an4ij1ivy.b[6][0]++;\n      let removeEpisode = /* istanbul ignore next */(cov_an4ij1ivy.s[47]++, starTrekRemoveById(id)); /* istanbul ignore next */cov_an4ij1ivy.s[48]++;\n      if (removeEpisode)\n        {/* istanbul ignore next */cov_an4ij1ivy.b[7][0]++;cov_an4ij1ivy.s[49]++;logger.log('info', `Episode with ${id} Removed from memory`);} else /* istanbul ignore next */{cov_an4ij1ivy.b[7][1]++;}\n    } else\n      {/* istanbul ignore next */cov_an4ij1ivy.b[6][1]++;cov_an4ij1ivy.s[50]++;sendStatus(response, 404, `No Episode with ${id}`);}\n  }","timestamp":"2017-12-08T02:01:58.808Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T02:01:58.819Z"}
{"level":"info","message":"<------Handler Log------>","timestamp":"2017-12-08T02:01:58.820Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_an4ij1ivy.f[8]++;\n    let id = /* istanbul ignore next */(cov_an4ij1ivy.s[45]++, request.url.query.id); /* istanbul ignore next */cov_an4ij1ivy.s[46]++;\n    if (id) {/* istanbul ignore next */cov_an4ij1ivy.b[6][0]++;\n      let removeEpisode = /* istanbul ignore next */(cov_an4ij1ivy.s[47]++, starTrekRemoveById(id)); /* istanbul ignore next */cov_an4ij1ivy.s[48]++;\n      if (removeEpisode)\n        {/* istanbul ignore next */cov_an4ij1ivy.b[7][0]++;cov_an4ij1ivy.s[49]++;logger.log('info', `Episode with ${id} Removed from memory`);} else /* istanbul ignore next */{cov_an4ij1ivy.b[7][1]++;}\n    } else\n      {/* istanbul ignore next */cov_an4ij1ivy.b[6][1]++;cov_an4ij1ivy.s[50]++;sendStatus(response, 404, `No Episode with ${id}`);}\n  }","timestamp":"2017-12-08T02:01:58.820Z"}
{"level":"info","message":"Responding with a 404 code due to No Episode with undefined","timestamp":"2017-12-08T02:01:58.820Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T02:01:58.824Z"}
{"level":"info","message":"<------Handler Log------>","timestamp":"2017-12-08T02:01:58.824Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_an4ij1ivy.f[8]++;\n    let id = /* istanbul ignore next */(cov_an4ij1ivy.s[45]++, request.url.query.id); /* istanbul ignore next */cov_an4ij1ivy.s[46]++;\n    if (id) {/* istanbul ignore next */cov_an4ij1ivy.b[6][0]++;\n      let removeEpisode = /* istanbul ignore next */(cov_an4ij1ivy.s[47]++, starTrekRemoveById(id)); /* istanbul ignore next */cov_an4ij1ivy.s[48]++;\n      if (removeEpisode)\n        {/* istanbul ignore next */cov_an4ij1ivy.b[7][0]++;cov_an4ij1ivy.s[49]++;logger.log('info', `Episode with ${id} Removed from memory`);} else /* istanbul ignore next */{cov_an4ij1ivy.b[7][1]++;}\n    } else\n      {/* istanbul ignore next */cov_an4ij1ivy.b[6][1]++;cov_an4ij1ivy.s[50]++;sendStatus(response, 404, `No Episode with ${id}`);}\n  }","timestamp":"2017-12-08T02:01:58.824Z"}
{"level":"info","message":"Responding with a 404 code due to No Episode with undefined","timestamp":"2017-12-08T02:01:58.824Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-08T02:04:03.044Z"}
{"level":"info","message":"/api/starTrekEpisodes","timestamp":"2017-12-08T02:04:03.045Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_an4ij1ivy.f[2]++;cov_an4ij1ivy.s[16]++;\n\n  if (!request.body) {/* istanbul ignore next */cov_an4ij1ivy.b[0][0]++;cov_an4ij1ivy.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_an4ij1ivy.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_an4ij1ivy.b[0][1]++;}cov_an4ij1ivy.s[19]++;\n  if (!request.body.episode) {/* istanbul ignore next */cov_an4ij1ivy.b[1][0]++;cov_an4ij1ivy.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_an4ij1ivy.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_an4ij1ivy.b[1][1]++;}cov_an4ij1ivy.s[22]++;\n  if (!request.body.episodeTitle) {/* istanbul ignore next */cov_an4ij1ivy.b[2][0]++;cov_an4ij1ivy.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_an4ij1ivy.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_an4ij1ivy.b[2][1]++;}cov_an4ij1ivy.s[25]++;\n  if (!request.body.episodeDescription) {/* istanbul ignore next */cov_an4ij1ivy.b[3][0]++;cov_an4ij1ivy.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_an4ij1ivy.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_an4ij1ivy.b[3][1]++;}cov_an4ij1ivy.s[28]++;\n\n  const starTrekGetById = episodeGet => {/* istanbul ignore next */cov_an4ij1ivy.f[3]++;cov_an4ij1ivy.s[29]++;\n    return episodeGet.filter(elementEpisode => {/* istanbul ignore next */cov_an4ij1ivy.f[4]++;cov_an4ij1ivy.s[30]++;return StarTrek.id === elementEpisode;})[0];\n  }; /* istanbul ignore next */cov_an4ij1ivy.s[31]++;\n\n  const starTrekRemoveById = episodeRemove => {/* istanbul ignore next */cov_an4ij1ivy.f[5]++;cov_an4ij1ivy.s[32]++;\n    return episodeRemove.filter(id => {/* istanbul ignore next */cov_an4ij1ivy.f[6]++;cov_an4ij1ivy.s[33]++;return StarTrek.id !== id;});\n  };\n\n  let starTrekEpisodes = /* istanbul ignore next */(cov_an4ij1ivy.s[34]++, new StarTrek(\n  request.body.episode,\n  request.body.episodeTitle,\n  request.body.episodeDescription)); /* istanbul ignore next */cov_an4ij1ivy.s[35]++;\n  starTrekEpisodesArr.push(starTrekEpisodes); /* istanbul ignore next */cov_an4ij1ivy.s[36]++;\n  sendJSON(response, 200, starTrekEpisodes); /* istanbul ignore next */cov_an4ij1ivy.s[37]++;\n\n  router.get(`/api/starTrekEpisodes`, (request, response) => {/* istanbul ignore next */cov_an4ij1ivy.f[7]++;\n    let id = /* istanbul ignore next */(cov_an4ij1ivy.s[38]++, request.url.query.id); /* istanbul ignore next */cov_an4ij1ivy.s[39]++;\n    if (id) {/* istanbul ignore next */cov_an4ij1ivy.b[4][0]++;\n      let getEpisode = /* istanbul ignore next */(cov_an4ij1ivy.s[40]++, starTrekGetById(id)); /* istanbul ignore next */cov_an4ij1ivy.s[41]++;\n      if (getEpisode) {/* istanbul ignore next */cov_an4ij1ivy.b[5][0]++;cov_an4ij1ivy.s[42]++;sendJSON(response, 200, getEpisode);} else\n\n        {/* istanbul ignore next */cov_an4ij1ivy.b[5][1]++;cov_an4ij1ivy.s[43]++;sendStatus(response, 404, `Missing Episode ${id}`);}\n    } else /* istanbul ignore next */{cov_an4ij1ivy.b[4][1]++;}\n  }); /* istanbul ignore next */cov_an4ij1ivy.s[44]++;\n\n  router.delete(`/api/starTrekEpisodes`, (request, response) => {/* istanbul ignore next */cov_an4ij1ivy.f[8]++;\n    let id = /* istanbul ignore next */(cov_an4ij1ivy.s[45]++, request.url.query.id); /* istanbul ignore next */cov_an4ij1ivy.s[46]++;\n    if (id) {/* istanbul ignore next */cov_an4ij1ivy.b[6][0]++;\n      let removeEpisode = /* istanbul ignore next */(cov_an4ij1ivy.s[47]++, starTrekRemoveById(id)); /* istanbul ignore next */cov_an4ij1ivy.s[48]++;\n      if (removeEpisode)\n        {/* istanbul ignore next */cov_an4ij1ivy.b[7][0]++;cov_an4ij1ivy.s[49]++;logger.log('info', `Episode with ${id} Removed from memory`);} else /* istanbul ignore next */{cov_an4ij1ivy.b[7][1]++;}\n    } else\n      {/* istanbul ignore next */cov_an4ij1ivy.b[6][1]++;cov_an4ij1ivy.s[50]++;sendStatus(response, 404, `No Episode with ${id}`);}\n  });\n\n\n\n}","timestamp":"2017-12-08T02:04:03.045Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-08T02:04:03.089Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T02:04:03.106Z"}
{"level":"info","message":"<------Handler Log------>","timestamp":"2017-12-08T02:04:03.108Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_an4ij1ivy.f[2]++;cov_an4ij1ivy.s[16]++;\n\n  if (!request.body) {/* istanbul ignore next */cov_an4ij1ivy.b[0][0]++;cov_an4ij1ivy.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_an4ij1ivy.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_an4ij1ivy.b[0][1]++;}cov_an4ij1ivy.s[19]++;\n  if (!request.body.episode) {/* istanbul ignore next */cov_an4ij1ivy.b[1][0]++;cov_an4ij1ivy.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_an4ij1ivy.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_an4ij1ivy.b[1][1]++;}cov_an4ij1ivy.s[22]++;\n  if (!request.body.episodeTitle) {/* istanbul ignore next */cov_an4ij1ivy.b[2][0]++;cov_an4ij1ivy.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_an4ij1ivy.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_an4ij1ivy.b[2][1]++;}cov_an4ij1ivy.s[25]++;\n  if (!request.body.episodeDescription) {/* istanbul ignore next */cov_an4ij1ivy.b[3][0]++;cov_an4ij1ivy.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_an4ij1ivy.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_an4ij1ivy.b[3][1]++;}cov_an4ij1ivy.s[28]++;\n\n  const starTrekGetById = episodeGet => {/* istanbul ignore next */cov_an4ij1ivy.f[3]++;cov_an4ij1ivy.s[29]++;\n    return episodeGet.filter(elementEpisode => {/* istanbul ignore next */cov_an4ij1ivy.f[4]++;cov_an4ij1ivy.s[30]++;return StarTrek.id === elementEpisode;})[0];\n  }; /* istanbul ignore next */cov_an4ij1ivy.s[31]++;\n\n  const starTrekRemoveById = episodeRemove => {/* istanbul ignore next */cov_an4ij1ivy.f[5]++;cov_an4ij1ivy.s[32]++;\n    return episodeRemove.filter(id => {/* istanbul ignore next */cov_an4ij1ivy.f[6]++;cov_an4ij1ivy.s[33]++;return StarTrek.id !== id;});\n  };\n\n  let starTrekEpisodes = /* istanbul ignore next */(cov_an4ij1ivy.s[34]++, new StarTrek(\n  request.body.episode,\n  request.body.episodeTitle,\n  request.body.episodeDescription)); /* istanbul ignore next */cov_an4ij1ivy.s[35]++;\n  starTrekEpisodesArr.push(starTrekEpisodes); /* istanbul ignore next */cov_an4ij1ivy.s[36]++;\n  sendJSON(response, 200, starTrekEpisodes); /* istanbul ignore next */cov_an4ij1ivy.s[37]++;\n\n  router.get(`/api/starTrekEpisodes`, (request, response) => {/* istanbul ignore next */cov_an4ij1ivy.f[7]++;\n    let id = /* istanbul ignore next */(cov_an4ij1ivy.s[38]++, request.url.query.id); /* istanbul ignore next */cov_an4ij1ivy.s[39]++;\n    if (id) {/* istanbul ignore next */cov_an4ij1ivy.b[4][0]++;\n      let getEpisode = /* istanbul ignore next */(cov_an4ij1ivy.s[40]++, starTrekGetById(id)); /* istanbul ignore next */cov_an4ij1ivy.s[41]++;\n      if (getEpisode) {/* istanbul ignore next */cov_an4ij1ivy.b[5][0]++;cov_an4ij1ivy.s[42]++;sendJSON(response, 200, getEpisode);} else\n\n        {/* istanbul ignore next */cov_an4ij1ivy.b[5][1]++;cov_an4ij1ivy.s[43]++;sendStatus(response, 404, `Missing Episode ${id}`);}\n    } else /* istanbul ignore next */{cov_an4ij1ivy.b[4][1]++;}\n  }); /* istanbul ignore next */cov_an4ij1ivy.s[44]++;\n\n  router.delete(`/api/starTrekEpisodes`, (request, response) => {/* istanbul ignore next */cov_an4ij1ivy.f[8]++;\n    let id = /* istanbul ignore next */(cov_an4ij1ivy.s[45]++, request.url.query.id); /* istanbul ignore next */cov_an4ij1ivy.s[46]++;\n    if (id) {/* istanbul ignore next */cov_an4ij1ivy.b[6][0]++;\n      let removeEpisode = /* istanbul ignore next */(cov_an4ij1ivy.s[47]++, starTrekRemoveById(id)); /* istanbul ignore next */cov_an4ij1ivy.s[48]++;\n      if (removeEpisode)\n        {/* istanbul ignore next */cov_an4ij1ivy.b[7][0]++;cov_an4ij1ivy.s[49]++;logger.log('info', `Episode with ${id} Removed from memory`);} else /* istanbul ignore next */{cov_an4ij1ivy.b[7][1]++;}\n    } else\n      {/* istanbul ignore next */cov_an4ij1ivy.b[6][1]++;cov_an4ij1ivy.s[50]++;sendStatus(response, 404, `No Episode with ${id}`);}\n  });\n\n\n\n}","timestamp":"2017-12-08T02:04:03.108Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T02:04:03.109Z"}
{"id":"10408d50-dbbc-11e7-823e-99f01e66e116","episode":"2","episodeTitle":"Encounter at Farpoint Part 2","episodeDescription":"The Enterprise crew tries to solve the riddle of Farpoint Station to avoid being condemned by Q's tribunal.","level":"info","message":"","timestamp":"2017-12-08T02:04:03.109Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-08T02:04:03.110Z"}
{"level":"info","message":"/api/starTrekEpisodes","timestamp":"2017-12-08T02:04:03.110Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_an4ij1ivy.f[7]++;\n    let id = /* istanbul ignore next */(cov_an4ij1ivy.s[38]++, request.url.query.id); /* istanbul ignore next */cov_an4ij1ivy.s[39]++;\n    if (id) {/* istanbul ignore next */cov_an4ij1ivy.b[4][0]++;\n      let getEpisode = /* istanbul ignore next */(cov_an4ij1ivy.s[40]++, starTrekGetById(id)); /* istanbul ignore next */cov_an4ij1ivy.s[41]++;\n      if (getEpisode) {/* istanbul ignore next */cov_an4ij1ivy.b[5][0]++;cov_an4ij1ivy.s[42]++;sendJSON(response, 200, getEpisode);} else\n\n        {/* istanbul ignore next */cov_an4ij1ivy.b[5][1]++;cov_an4ij1ivy.s[43]++;sendStatus(response, 404, `Missing Episode ${id}`);}\n    } else /* istanbul ignore next */{cov_an4ij1ivy.b[4][1]++;}\n  }","timestamp":"2017-12-08T02:04:03.110Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-08T02:04:03.110Z"}
{"level":"info","message":"/api/starTrekEpisodes","timestamp":"2017-12-08T02:04:03.110Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_an4ij1ivy.f[8]++;\n    let id = /* istanbul ignore next */(cov_an4ij1ivy.s[45]++, request.url.query.id); /* istanbul ignore next */cov_an4ij1ivy.s[46]++;\n    if (id) {/* istanbul ignore next */cov_an4ij1ivy.b[6][0]++;\n      let removeEpisode = /* istanbul ignore next */(cov_an4ij1ivy.s[47]++, starTrekRemoveById(id)); /* istanbul ignore next */cov_an4ij1ivy.s[48]++;\n      if (removeEpisode)\n        {/* istanbul ignore next */cov_an4ij1ivy.b[7][0]++;cov_an4ij1ivy.s[49]++;logger.log('info', `Episode with ${id} Removed from memory`);} else /* istanbul ignore next */{cov_an4ij1ivy.b[7][1]++;}\n    } else\n      {/* istanbul ignore next */cov_an4ij1ivy.b[6][1]++;cov_an4ij1ivy.s[50]++;sendStatus(response, 404, `No Episode with ${id}`);}\n  }","timestamp":"2017-12-08T02:04:03.110Z"}
