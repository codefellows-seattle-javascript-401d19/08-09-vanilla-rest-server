382c8e4d922cb6457ecea1aa9b685849
'use strict'; /* istanbul ignore next */var cov_17iwyeiy26 = function () {var path = '/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/route/user-router.js',hash = '0598303bd228eb795330ea23c99b9ebaaa99b388',global = new Function('return this')(),gcv = '__coverage__',coverageData = { path: '/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/route/user-router.js', statementMap: { '0': { start: { line: 3, column: 13 }, end: { line: 3, column: 37 } }, '1': { start: { line: 4, column: 15 }, end: { line: 4, column: 39 } }, '2': { start: { line: 5, column: 15 }, end: { line: 5, column: 39 } }, '3': { start: { line: 6, column: 16 }, end: { line: 6, column: 41 } }, '4': { start: { line: 8, column: 19 }, end: { line: 13, column: 1 } }, '5': { start: { line: 9, column: 2 }, end: { line: 9, column: 74 } }, '6': { start: { line: 11, column: 2 }, end: { line: 11, column: 29 } }, '7': { start: { line: 12, column: 2 }, end: { line: 12, column: 17 } }, '8': { start: { line: 15, column: 17 }, end: { line: 25, column: 1 } }, '9': { start: { line: 16, column: 2 }, end: { line: 16, column: 80 } }, '10': { start: { line: 17, column: 2 }, end: { line: 17, column: 31 } }, '11': { start: { line: 18, column: 2 }, end: { line: 20, column: 5 } }, '12': { start: { line: 22, column: 2 }, end: { line: 22, column: 43 } }, '13': { start: { line: 23, column: 2 }, end: { line: 23, column: 17 } }, '14': { start: { line: 24, column: 2 }, end: { line: 24, column: 9 } }, '15': { start: { line: 27, column: 23 }, end: { line: 34, column: 1 } }, '16': { start: { line: 28, column: 2 }, end: { line: 32, column: 3 } }, '17': { start: { line: 29, column: 4 }, end: { line: 31, column: 5 } }, '18': { start: { line: 30, column: 6 }, end: { line: 30, column: 22 } }, '19': { start: { line: 33, column: 2 }, end: { line: 33, column: 14 } }, '20': { start: { line: 36, column: 0 }, end: { line: 51, column: 3 } }, '21': { start: { line: 37, column: 17 }, end: { line: 37, column: 37 } }, '22': { start: { line: 38, column: 19 }, end: { line: 38, column: 37 } }, '23': { start: { line: 40, column: 2 }, end: { line: 48, column: 3 } }, '24': { start: { line: 41, column: 28 }, end: { line: 41, column: 60 } }, '25': { start: { line: 43, column: 4 }, end: { line: 45, column: 48 } }, '26': { start: { line: 47, column: 4 }, end: { line: 47, column: 11 } }, '27': { start: { line: 50, column: 2 }, end: { line: 50, column: 36 } }, '28': { start: { line: 53, column: 0 }, end: { line: 76, column: 3 } }, '29': { start: { line: 54, column: 2 }, end: { line: 57, column: 3 } }, '30': { start: { line: 55, column: 4 }, end: { line: 55, column: 48 } }, '31': { start: { line: 56, column: 4 }, end: { line: 56, column: 11 } }, '32': { start: { line: 58, column: 2 }, end: { line: 61, column: 3 } }, '33': { start: { line: 59, column: 4 }, end: { line: 59, column: 49 } }, '34': { start: { line: 60, column: 4 }, end: { line: 60, column: 11 } }, '35': { start: { line: 62, column: 2 }, end: { line: 65, column: 3 } }, '36': { start: { line: 63, column: 4 }, end: { line: 63, column: 51 } }, '37': { start: { line: 64, column: 4 }, end: { line: 64, column: 11 } }, '38': { start: { line: 67, column: 13 }, end: { line: 67, column: 66 } }, '39': { start: { line: 68, column: 2 }, end: { line: 75, column: 7 } }, '40': { start: { line: 70, column: 6 }, end: { line: 70, column: 36 } }, '41': { start: { line: 73, column: 6 }, end: { line: 73, column: 25 } }, '42': { start: { line: 74, column: 6 }, end: { line: 74, column: 39 } }, '43': { start: { line: 78, column: 0 }, end: { line: 96, column: 3 } }, '44': { start: { line: 79, column: 2 }, end: { line: 95, column: 3 } }, '45': { start: { line: 80, column: 28 }, end: { line: 80, column: 64 } }, '46': { start: { line: 81, column: 4 }, end: { line: 91, column: 5 } }, '47': { start: { line: 82, column: 27 }, end: { line: 85, column: 8 } }, '48': { start: { line: 83, column: 8 }, end: { line: 83, column: 57 } }, '49': { start: { line: 84, column: 8 }, end: { line: 84, column: 54 } }, '50': { start: { line: 86, column: 6 }, end: { line: 86, column: 27 } }, '51': { start: { line: 87, column: 6 }, end: { line: 87, column: 37 } }, '52': { start: { line: 88, column: 6 }, end: { line: 88, column: 13 } }, '53': { start: { line: 90, column: 6 }, end: { line: 90, column: 52 } }, '54': { start: { line: 93, column: 4 }, end: { line: 93, column: 48 } }, '55': { start: { line: 94, column: 4 }, end: { line: 94, column: 11 } } }, fnMap: { '0': { name: '(anonymous_0)', decl: { start: { line: 8, column: 19 }, end: { line: 8, column: 20 } }, loc: { start: { line: 8, column: 50 }, end: { line: 13, column: 1 } }, line: 8 }, '1': { name: '(anonymous_1)', decl: { start: { line: 15, column: 17 }, end: { line: 15, column: 18 } }, loc: { start: { line: 15, column: 49 }, end: { line: 25, column: 1 } }, line: 15 }, '2': { name: '(anonymous_2)', decl: { start: { line: 27, column: 23 }, end: { line: 27, column: 24 } }, loc: { start: { line: 27, column: 47 }, end: { line: 34, column: 1 } }, line: 27 }, '3': { name: '(anonymous_3)', decl: { start: { line: 36, column: 25 }, end: { line: 36, column: 26 } }, loc: { start: { line: 36, column: 48 }, end: { line: 51, column: 1 } }, line: 36 }, '4': { name: '(anonymous_4)', decl: { start: { line: 53, column: 26 }, end: { line: 53, column: 27 } }, loc: { start: { line: 53, column: 49 }, end: { line: 76, column: 1 } }, line: 53 }, '5': { name: '(anonymous_5)', decl: { start: { line: 69, column: 10 }, end: { line: 69, column: 11 } }, loc: { start: { line: 69, column: 16 }, end: { line: 71, column: 5 } }, line: 69 }, '6': { name: '(anonymous_6)', decl: { start: { line: 72, column: 11 }, end: { line: 72, column: 12 } }, loc: { start: { line: 72, column: 20 }, end: { line: 75, column: 5 } }, line: 72 }, '7': { name: '(anonymous_7)', decl: { start: { line: 78, column: 28 }, end: { line: 78, column: 29 } }, loc: { start: { line: 78, column: 51 }, end: { line: 96, column: 1 } }, line: 78 }, '8': { name: '(anonymous_8)', decl: { start: { line: 82, column: 40 }, end: { line: 82, column: 41 } }, loc: { start: { line: 82, column: 48 }, end: { line: 85, column: 7 } }, line: 82 } }, branchMap: { '0': { loc: { start: { line: 29, column: 4 }, end: { line: 31, column: 5 } }, type: 'if', locations: [{ start: { line: 29, column: 4 }, end: { line: 31, column: 5 } }, { start: { line: 29, column: 4 }, end: { line: 31, column: 5 } }], line: 29 }, '1': { loc: { start: { line: 40, column: 2 }, end: { line: 48, column: 3 } }, type: 'if', locations: [{ start: { line: 40, column: 2 }, end: { line: 48, column: 3 } }, { start: { line: 40, column: 2 }, end: { line: 48, column: 3 } }], line: 40 }, '2': { loc: { start: { line: 43, column: 4 }, end: { line: 45, column: 47 } }, type: 'cond-expr', locations: [{ start: { line: 44, column: 6 }, end: { line: 44, column: 46 } }, { start: { line: 45, column: 6 }, end: { line: 45, column: 47 } }], line: 43 }, '3': { loc: { start: { line: 54, column: 2 }, end: { line: 57, column: 3 } }, type: 'if', locations: [{ start: { line: 54, column: 2 }, end: { line: 57, column: 3 } }, { start: { line: 54, column: 2 }, end: { line: 57, column: 3 } }], line: 54 }, '4': { loc: { start: { line: 58, column: 2 }, end: { line: 61, column: 3 } }, type: 'if', locations: [{ start: { line: 58, column: 2 }, end: { line: 61, column: 3 } }, { start: { line: 58, column: 2 }, end: { line: 61, column: 3 } }], line: 58 }, '5': { loc: { start: { line: 62, column: 2 }, end: { line: 65, column: 3 } }, type: 'if', locations: [{ start: { line: 62, column: 2 }, end: { line: 65, column: 3 } }, { start: { line: 62, column: 2 }, end: { line: 65, column: 3 } }], line: 62 }, '6': { loc: { start: { line: 79, column: 2 }, end: { line: 95, column: 3 } }, type: 'if', locations: [{ start: { line: 79, column: 2 }, end: { line: 95, column: 3 } }, { start: { line: 79, column: 2 }, end: { line: 95, column: 3 } }], line: 79 }, '7': { loc: { start: { line: 81, column: 4 }, end: { line: 91, column: 5 } }, type: 'if', locations: [{ start: { line: 81, column: 4 }, end: { line: 91, column: 5 } }, { start: { line: 81, column: 4 }, end: { line: 91, column: 5 } }], line: 81 } }, s: { '0': 0, '1': 0, '2': 0, '3': 0, '4': 0, '5': 0, '6': 0, '7': 0, '8': 0, '9': 0, '10': 0, '11': 0, '12': 0, '13': 0, '14': 0, '15': 0, '16': 0, '17': 0, '18': 0, '19': 0, '20': 0, '21': 0, '22': 0, '23': 0, '24': 0, '25': 0, '26': 0, '27': 0, '28': 0, '29': 0, '30': 0, '31': 0, '32': 0, '33': 0, '34': 0, '35': 0, '36': 0, '37': 0, '38': 0, '39': 0, '40': 0, '41': 0, '42': 0, '43': 0, '44': 0, '45': 0, '46': 0, '47': 0, '48': 0, '49': 0, '50': 0, '51': 0, '52': 0, '53': 0, '54': 0, '55': 0 }, f: { '0': 0, '1': 0, '2': 0, '3': 0, '4': 0, '5': 0, '6': 0, '7': 0, '8': 0 }, b: { '0': [0, 0], '1': [0, 0], '2': [0, 0], '3': [0, 0], '4': [0, 0], '5': [0, 0], '6': [0, 0], '7': [0, 0] }, _coverageSchema: '332fd63041d2c1bcb487cc26dd0d5f7d97098a6c' },coverage = global[gcv] || (global[gcv] = {});if (coverage[path] && coverage[path].hash === hash) {return coverage[path];}coverageData.hash = hash;return coverage[path] = coverageData;}();

const User = /* istanbul ignore next */(cov_17iwyeiy26.s[0]++, require('../model/user'));
const router = /* istanbul ignore next */(cov_17iwyeiy26.s[1]++, require('../lib/router'));
const logger = /* istanbul ignore next */(cov_17iwyeiy26.s[2]++, require('../lib/logger'));
const storage = /* istanbul ignore next */(cov_17iwyeiy26.s[3]++, require('../lib/storage')); /* istanbul ignore next */cov_17iwyeiy26.s[4]++;

const sendStatus = (response, status, message) => {/* istanbul ignore next */cov_17iwyeiy26.f[0]++;cov_17iwyeiy26.s[5]++;
  logger.log('info', `Responding with a ${status} code due to ${message}`); /* istanbul ignore next */cov_17iwyeiy26.s[6]++;

  response.writeHead(status); /* istanbul ignore next */cov_17iwyeiy26.s[7]++;
  response.end();
}; /* istanbul ignore next */cov_17iwyeiy26.s[8]++;

const sendJSON = (response, status, jsonData) => {/* istanbul ignore next */cov_17iwyeiy26.f[1]++;cov_17iwyeiy26.s[9]++;
  logger.log('info', `Responding with a ${status} code and the following data`); /* istanbul ignore next */cov_17iwyeiy26.s[10]++;
  logger.log('info', jsonData); /* istanbul ignore next */cov_17iwyeiy26.s[11]++;
  response.writeHead(status, {
    'Content-Type': 'application/json' }); /* istanbul ignore next */cov_17iwyeiy26.s[12]++;


  response.write(JSON.stringify(jsonData)); /* istanbul ignore next */cov_17iwyeiy26.s[13]++;
  response.end(); /* istanbul ignore next */cov_17iwyeiy26.s[14]++;
  return;
}; /* istanbul ignore next */cov_17iwyeiy26.s[15]++;

const findUserWithId = (querystring, users) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;
  for (let i = 0; i < users.length; i++) {/* istanbul ignore next */cov_17iwyeiy26.s[17]++;
    if (users[i].testId === querystring) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[18]++;
      return users[i];
    } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}
  } /* istanbul ignore next */cov_17iwyeiy26.s[19]++;
  return null;
}; /* istanbul ignore next */cov_17iwyeiy26.s[20]++;

router.get('/api/users', (request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;
  const userId = /* istanbul ignore next */(cov_17iwyeiy26.s[21]++, request.url.query.id);
  const allUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[22]++, storage.fetchAll()); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;

  if (userId) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;
    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[24]++, findUserWithId(userId, allUsers)); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;

    foundUserWithId ? /* istanbul ignore next */(cov_17iwyeiy26.b[2][0]++,
    sendJSON(response, 200, foundUserWithId)) : /* istanbul ignore next */(cov_17iwyeiy26.b[2][1]++,
    sendStatus(response, 404, 'id not found')); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;

    return;
  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;

  sendJSON(response, 200, allUsers);
}); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;

router.post('/api/users', (request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[29]++;
  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[30]++;
    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;
    return;
  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[32]++;
  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[33]++;
    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[34]++;
    return;
  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}cov_17iwyeiy26.s[35]++;
  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;cov_17iwyeiy26.s[36]++;
    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;
    return;
  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}

  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[38]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;
  storage.addItem(user).
  then(() => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[40]++;
    sendJSON(response, 200, user);
  }).
  catch(error => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[41]++;
    console.log(error); /* istanbul ignore next */cov_17iwyeiy26.s[42]++;
    sendStatus(response, 500, error);
  });
}); /* istanbul ignore next */cov_17iwyeiy26.s[43]++;

router.delete('/api/users', (request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[7]++;cov_17iwyeiy26.s[44]++;
  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[6][0]++;
    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[45]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;
    if (userToBeRemoved) {/* istanbul ignore next */cov_17iwyeiy26.b[7][0]++;
      const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[47]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[8]++;cov_17iwyeiy26.s[48]++;
        console.log(userToBeRemoved.testId, user.testId); /* istanbul ignore next */cov_17iwyeiy26.s[49]++;
        return userToBeRemoved.testId === user.testId;
      })); /* istanbul ignore next */cov_17iwyeiy26.s[50]++;
      users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[51]++;
      sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[52]++;
      return;
    } else {/* istanbul ignore next */cov_17iwyeiy26.b[7][1]++;cov_17iwyeiy26.s[53]++;
      sendStatus(response, 404, 'id does not exit');
    }
  } else {/* istanbul ignore next */cov_17iwyeiy26.b[6][1]++;cov_17iwyeiy26.s[54]++;
    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[55]++;
    return;
  }
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVzZXItcm91dGVyLmpzIl0sIm5hbWVzIjpbIlVzZXIiLCJyZXF1aXJlIiwicm91dGVyIiwibG9nZ2VyIiwic3RvcmFnZSIsInNlbmRTdGF0dXMiLCJyZXNwb25zZSIsInN0YXR1cyIsIm1lc3NhZ2UiLCJsb2ciLCJ3cml0ZUhlYWQiLCJlbmQiLCJzZW5kSlNPTiIsImpzb25EYXRhIiwid3JpdGUiLCJKU09OIiwic3RyaW5naWZ5IiwiZmluZFVzZXJXaXRoSWQiLCJxdWVyeXN0cmluZyIsInVzZXJzIiwiaSIsImxlbmd0aCIsInRlc3RJZCIsImdldCIsInJlcXVlc3QiLCJ1c2VySWQiLCJ1cmwiLCJxdWVyeSIsImlkIiwiYWxsVXNlcnMiLCJmZXRjaEFsbCIsImZvdW5kVXNlcldpdGhJZCIsInBvc3QiLCJib2R5IiwibmFtZSIsImRlc2NyaXB0aW9uIiwidXNlciIsImFkZEl0ZW0iLCJ0aGVuIiwiY2F0Y2giLCJlcnJvciIsImNvbnNvbGUiLCJkZWxldGUiLCJ1c2VyVG9CZVJlbW92ZWQiLCJ1cGRhdGVkVXNlcnMiLCJmaWx0ZXIiXSwibWFwcGluZ3MiOiJBQUFBLGE7O0FBRUEsTUFBTUEseURBQU9DLFFBQVEsZUFBUixDQUFQLENBQU47QUFDQSxNQUFNQywyREFBU0QsUUFBUSxlQUFSLENBQVQsQ0FBTjtBQUNBLE1BQU1FLDJEQUFTRixRQUFRLGVBQVIsQ0FBVCxDQUFOO0FBQ0EsTUFBTUcsNERBQVVILFFBQVEsZ0JBQVIsQ0FBVixDQUFOLEM7O0FBRUEsTUFBTUksYUFBYSxDQUFDQyxRQUFELEVBQVdDLE1BQVgsRUFBbUJDLE9BQW5CLEtBQStCO0FBQ2hETCxTQUFPTSxHQUFQLENBQVcsTUFBWCxFQUFtQixxQkFBb0JGLE1BQU8sZ0JBQWVDLE9BQVEsRUFBckUsRUFEZ0Q7O0FBR2hERixXQUFTSSxTQUFULENBQW1CSCxNQUFuQixFQUhnRDtBQUloREQsV0FBU0ssR0FBVDtBQUNELENBTEQsQzs7QUFPQSxNQUFNQyxXQUFXLENBQUNOLFFBQUQsRUFBV0Ms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dUI7QUFDakQsTUFBSWtCLFFBQVFFLEdBQVIsQ0FBWUMsS0FBWixDQUFrQkMsRUFBdEIsRUFBMEI7QUFDeEIsVUFBTWUscUVBQWtCMUIsZUFBZU8sUUFBUUUsR0FBUixDQUFZQyxLQUFaLENBQWtCQyxFQUFqQyxDQUFsQixDQUFOLENBRHdCO0FBRXhCLFFBQUllLGVBQUosRUFBcUI7QUFDbkIsWUFBTUMsa0VBQWV6QixNQUFNMEIsTUFBTixDQUFhVCxRQUFRO0FBQ3hDSyxnQkFBUWhDLEdBQVIsQ0FBWWtDLGdCQUFnQnJCLE1BQTVCLEVBQW9DYyxLQUFLZCxNQUF6QyxFQUR3QztBQUV4QyxlQUFPcUIsZ0JBQWdCckIsTUFBaEIsS0FBMkJjLEtBQUtkLE1BQXZDO0FBQ0QsT0FIb0IsQ0FBZixDQUFOLENBRG1CO0FBS25CSCxjQUFReUIsWUFBUixDQUxtQjtBQU1uQmhDLGVBQVNOLFFBQVQsRUFBbUIsR0FBbkIsRUFBd0JhLEtBQXhCLEVBTm1CO0FBT25CO0FBQ0QsS0FSRCxNQVFPO0FBQ0xkLGlCQUFXQyxRQUFYLEVBQXFCLEdBQXJCLEVBQTBCLGtCQUExQjtBQUNEO0FBQ0YsR0FiRCxNQWFPO0FBQ0xELGVBQVdDLFFBQVgsRUFBcUIsR0FBckIsRUFBMEIsZ0JBQTFCLEVBREs7QUFFTDtBQUNEO0FBQ0YsQ0FsQkQiLCJmaWxlIjoidXNlci1yb3V0ZXIuanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmNvbnN0IFVzZXIgPSByZXF1aXJlKCcuLi9tb2RlbC91c2VyJyk7XG5jb25zdCByb3V0ZXIgPSByZXF1aXJlKCcuLi9saWIvcm91dGVyJyk7XG5jb25zdCBsb2dnZXIgPSByZXF1aXJlKCcuLi9saWIvbG9nZ2VyJyk7XG5jb25zdCBzdG9yYWdlID0gcmVxdWlyZSgnLi4vbGliL3N0b3JhZ2UnKTtcblxuY29uc3Qgc2VuZFN0YXR1cyA9IChyZXNwb25zZSwgc3RhdHVzLCBtZXNzYWdlKSA9PiB7XG4gIGxvZ2dlci5sb2coJ2luZm8nLGBSZXNwb25kaW5nIHdpdGggYSAke3N0YXR1c30gY29kZSBkdWUgdG8gJHttZXNzYWdlfWApO1xuXG4gIHJlc3BvbnNlLndyaXRlSGVhZChzdGF0dXMpO1xuICByZXNwb25zZS5lbmQoKTtcbn07XG5cbmNvbnN0IHNlbmRKU09OID0gKHJlc3BvbnNlLCBzdGF0dXMsIGpzb25EYXRhKSA9PiB7XG4gIGxvZ2dlci5sb2coJ2luZm8nLCBgUmVzcG9uZGluZyB3aXRoIGEgJHtzdGF0dXN9IGNvZGUgYW5kIHRoZSBmb2xsb3dpbmcgZGF0YWApO1xuICBsb2dnZXIubG9nKCdpbmZvJywganNvbkRhdGEpO1xuICByZXNwb25zZS53cml0ZUhlYWQoc3RhdHVzLCB7XG4gICAgJ0NvbnRlbnQtVHlwZScgOiAnYXBwbGljYXRpb24vanNvbicsXG4gIH0pO1xuXG4gIHJlc3BvbnNlLndyaXRlKEpTT04uc3RyaW5naWZ5KGpzb25EYXRhKSk7XG4gIHJlc3BvbnNlLmVuZCgpO1xuICByZXR1cm47XG59O1xuXG5jb25zdCBmaW5kVXNlcldpdGhJZCA9IChxdWVyeXN0cmluZywgdXNlcnMpID0+IHtcbiAgZm9yIChsZXQgaSA9IDA7IGkgPCB1c2Vycy5sZW5ndGg7IGkrKykge1xuICAgIGlmICh1c2Vyc1tpXS50ZXN0SWQgPT09IHF1ZXJ5c3RyaW5nKSB7XG4gICAgICByZXR1cm4gdXNlcnNbaV07XG4gICAgfVxuICB9XG4gIHJldHVybiBudWxsO1xufTtcblxucm91dGVyLmdldCgnL2FwaS91c2VycycsIChyZXF1ZXN0LCByZXNwb25zZSkgPT4ge1xuICBjb25zdCB1c2VySWQgPSByZXF1ZXN0LnVybC5xdWVyeS5pZDtcbiAgY29uc3QgYWxsVXNlcnMgPSBzdG9yYWdlLmZldGNoQWxsKCk7XG5cbiAgaWYgKHVzZXJJZCkge1xuICAgIGNvbnN0IGZvdW5kVXNlcldpdGhJZCA9IGZpbmRVc2VyV2l0aElkKHVzZXJJZCwgYWxsVXNlcnMpO1xuXG4gICAgZm91bmRVc2VyV2l0aElkID9cbiAgICAgIHNlbmRKU09OKHJlc3BvbnNlLCAyMDAsIGZvdW5kVXNlcldpdGhJZCkgOlxuICAgICAgc2VuZFN0YXR1cyhyZXNwb25zZSwgNDA0LCAnaWQgbm90IGZvdW5kJyk7XG5cbiAgICByZXR1cm47XG4gIH1cbiAgXG4gIHNlbmRKU09OKHJlc3BvbnNlLCAyMDAsIGFsbFVzZXJzKTtcbn0pO1xuXG5yb3V0ZXIucG9zdCgnL2FwaS91c2VycycsIChyZXF1ZXN0LCByZXNwb25zZSkgPT4ge1xuICBpZiAoIXJlcXVlc3QuYm9keSkge1xuICAgIHNlbmRTdGF0dXMocmVzcG9uc2UsIDQwMCwgJ2JvZHkgbm90IGZvdW5kJyk7XG4gICAgcmV0dXJuO1xuICB9XG4gIGlmICghcmVxdWVzdC5ib2R5Lm5hbWUpIHtcbiAgICBzZW5kU3RhdHVzKHJlc3BvbnNlLCA0MDAsICd0aXRsZSBub3QgZm91bmQnKTtcbiAgICByZXR1cm47XG4gIH1cbiAgaWYgKCFyZXF1ZXN0LmJvZHkuZGVzY3JpcHRpb24pIHtcbiAgICBzZW5kU3RhdHVzKHJlc3BvbnNlLCA0MDAsICdjb250ZW50IG5vdCBmb3VuZCcpO1xuICAgIHJldHVybjtcbiAgfVxuXG4gIGxldCB1c2VyID0gbmV3IFVzZXIocmVxdWVzdC5ib2R5Lm5hbWUsIHJlcXVlc3QuYm9keS5kZXNjcmlwdGlvbik7XG4gIHN0b3JhZ2UuYWRkSXRlbSh1c2VyKVxuICAgIC50aGVuKCgpID0+IHtcbiAgICAgIHNlbmRKU09OKHJlc3BvbnNlLCAyMDAsIHVzZXIpO1xuICAgIH0pXG4gICAgLmNhdGNoKGVycm9yID0+IHtcbiAgICAgIGNvbnNvbGUubG9nKGVycm9yKTtcbiAgICAgIHNlbmRTdGF0dXMocmVzcG9uc2UsIDUwMCwgZXJyb3IpO1xuICAgIH0pO1xufSk7XG5cbnJvdXRlci5kZWxldGUoJy9hcGkvdXNlcnMnLCAocmVxdWVzdCwgcmVzcG9uc2UpID0+IHtcbiAgaWYgKHJlcXVlc3QudXJsLnF1ZXJ5LmlkKSB7XG4gICAgY29uc3QgdXNlclRvQmVSZW1vdmVkID0gZmluZFVzZXJXaXRoSWQocmVxdWVzdC51cmwucXVlcnkuaWQpO1xuICAgIGlmICh1c2VyVG9CZVJlbW92ZWQpIHtcbiAgICAgIGNvbnN0IHVwZGF0ZWRVc2VycyA9IHVzZXJzLmZpbHRlcih1c2VyID0+IHtcbiAgICAgICAgY29uc29sZS5sb2codXNlclRvQmVSZW1vdmVkLnRlc3RJZCwgdXNlci50ZXN0SWQpO1xuICAgICAgICByZXR1cm4gdXNlclRvQmVSZW1vdmVkLnRlc3RJZCA9PT0gdXNlci50ZXN0SWQ7XG4gICAgICB9KTtcbiAgICAgIHVzZXJzID0gdXBkYXRlZFVzZXJzO1xuICAgICAgc2VuZEpTT04ocmVzcG9uc2UsIDIwNCwgdXNlcnMpO1xuICAgICAgcmV0dXJuO1xuICAgIH0gZWxzZSB7XG4gICAgICBzZW5kU3RhdHVzKHJlc3BvbnNlLCA0MDQsICdpZCBkb2VzIG5vdCBleGl0Jyk7XG4gICAgfVxuICB9IGVsc2Uge1xuICAgIHNlbmRTdGF0dXMocmVzcG9uc2UsIDQwMCwgJ25vIGlkIHByb3ZpZGVkJyk7XG4gICAgcmV0dXJuO1xuICB9XG59KTtcbiJdfQ==