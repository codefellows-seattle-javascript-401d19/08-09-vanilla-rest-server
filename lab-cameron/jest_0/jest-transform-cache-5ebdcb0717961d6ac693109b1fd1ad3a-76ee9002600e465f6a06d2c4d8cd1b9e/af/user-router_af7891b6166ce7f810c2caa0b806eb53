99a5aac13980e83324cc3f7395a26a51
'use strict'; /* istanbul ignore next */var cov_17iwyeiy26 = function () {var path = '/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/route/user-router.js',hash = '0aeb2bfa8b7eef2ed87f1719964aa62215df184e',global = new Function('return this')(),gcv = '__coverage__',coverageData = { path: '/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/route/user-router.js', statementMap: { '0': { start: { line: 3, column: 13 }, end: { line: 3, column: 37 } }, '1': { start: { line: 4, column: 15 }, end: { line: 4, column: 39 } }, '2': { start: { line: 5, column: 15 }, end: { line: 5, column: 39 } }, '3': { start: { line: 6, column: 16 }, end: { line: 6, column: 41 } }, '4': { start: { line: 8, column: 19 }, end: { line: 13, column: 1 } }, '5': { start: { line: 9, column: 2 }, end: { line: 9, column: 74 } }, '6': { start: { line: 11, column: 2 }, end: { line: 11, column: 29 } }, '7': { start: { line: 12, column: 2 }, end: { line: 12, column: 17 } }, '8': { start: { line: 15, column: 17 }, end: { line: 25, column: 1 } }, '9': { start: { line: 16, column: 2 }, end: { line: 16, column: 80 } }, '10': { start: { line: 17, column: 2 }, end: { line: 17, column: 31 } }, '11': { start: { line: 18, column: 2 }, end: { line: 20, column: 5 } }, '12': { start: { line: 22, column: 2 }, end: { line: 22, column: 43 } }, '13': { start: { line: 23, column: 2 }, end: { line: 23, column: 17 } }, '14': { start: { line: 24, column: 2 }, end: { line: 24, column: 9 } }, '15': { start: { line: 27, column: 0 }, end: { line: 53, column: 3 } }, '16': { start: { line: 28, column: 17 }, end: { line: 28, column: 37 } }, '17': { start: { line: 30, column: 2 }, end: { line: 30, column: 23 } }, '18': { start: { line: 32, column: 2 }, end: { line: 52, column: 3 } }, '19': { start: { line: 33, column: 4 }, end: { line: 41, column: 9 } }, '20': { start: { line: 35, column: 8 }, end: { line: 35, column: 38 } }, '21': { start: { line: 36, column: 8 }, end: { line: 36, column: 15 } }, '22': { start: { line: 39, column: 8 }, end: { line: 39, column: 41 } }, '23': { start: { line: 40, column: 8 }, end: { line: 40, column: 15 } }, '24': { start: { line: 43, column: 4 }, end: { line: 51, column: 9 } }, '25': { start: { line: 45, column: 8 }, end: { line: 45, column: 39 } }, '26': { start: { line: 46, column: 8 }, end: { line: 46, column: 15 } }, '27': { start: { line: 49, column: 8 }, end: { line: 49, column: 41 } }, '28': { start: { line: 50, column: 8 }, end: { line: 50, column: 15 } }, '29': { start: { line: 55, column: 0 }, end: { line: 79, column: 3 } }, '30': { start: { line: 56, column: 2 }, end: { line: 59, column: 3 } }, '31': { start: { line: 57, column: 4 }, end: { line: 57, column: 48 } }, '32': { start: { line: 58, column: 4 }, end: { line: 58, column: 11 } }, '33': { start: { line: 60, column: 2 }, end: { line: 63, column: 3 } }, '34': { start: { line: 61, column: 4 }, end: { line: 61, column: 49 } }, '35': { start: { line: 62, column: 4 }, end: { line: 62, column: 11 } }, '36': { start: { line: 64, column: 2 }, end: { line: 67, column: 3 } }, '37': { start: { line: 65, column: 4 }, end: { line: 65, column: 51 } }, '38': { start: { line: 66, column: 4 }, end: { line: 66, column: 11 } }, '39': { start: { line: 69, column: 13 }, end: { line: 69, column: 66 } }, '40': { start: { line: 70, column: 2 }, end: { line: 78, column: 7 } }, '41': { start: { line: 72, column: 6 }, end: { line: 72, column: 36 } }, '42': { start: { line: 73, column: 6 }, end: { line: 73, column: 13 } }, '43': { start: { line: 76, column: 6 }, end: { line: 76, column: 39 } }, '44': { start: { line: 77, column: 6 }, end: { line: 77, column: 13 } } }, fnMap: { '0': { name: '(anonymous_0)', decl: { start: { line: 8, column: 19 }, end: { line: 8, column: 20 } }, loc: { start: { line: 8, column: 50 }, end: { line: 13, column: 1 } }, line: 8 }, '1': { name: '(anonymous_1)', decl: { start: { line: 15, column: 17 }, end: { line: 15, column: 18 } }, loc: { start: { line: 15, column: 49 }, end: { line: 25, column: 1 } }, line: 15 }, '2': { name: '(anonymous_2)', decl: { start: { line: 27, column: 25 }, end: { line: 27, column: 26 } }, loc: { start: { line: 27, column: 48 }, end: { line: 53, column: 1 } }, line: 27 }, '3': { name: '(anonymous_3)', decl: { start: { line: 34, column: 12 }, end: { line: 34, column: 13 } }, loc: { start: { line: 34, column: 20 }, end: { line: 37, column: 7 } }, line: 34 }, '4': { name: '(anonymous_4)', decl: { start: { line: 38, column: 13 }, end: { line: 38, column: 14 } }, loc: { start: { line: 38, column: 22 }, end: { line: 41, column: 7 } }, line: 38 }, '5': { name: '(anonymous_5)', decl: { start: { line: 44, column: 12 }, end: { line: 44, column: 13 } }, loc: { start: { line: 44, column: 21 }, end: { line: 47, column: 7 } }, line: 44 }, '6': { name: '(anonymous_6)', decl: { start: { line: 48, column: 13 }, end: { line: 48, column: 14 } }, loc: { start: { line: 48, column: 22 }, end: { line: 51, column: 7 } }, line: 48 }, '7': { name: '(anonymous_7)', decl: { start: { line: 55, column: 26 }, end: { line: 55, column: 27 } }, loc: { start: { line: 55, column: 49 }, end: { line: 79, column: 1 } }, line: 55 }, '8': { name: '(anonymous_8)', decl: { start: { line: 71, column: 10 }, end: { line: 71, column: 11 } }, loc: { start: { line: 71, column: 16 }, end: { line: 74, column: 5 } }, line: 71 }, '9': { name: '(anonymous_9)', decl: { start: { line: 75, column: 11 }, end: { line: 75, column: 12 } }, loc: { start: { line: 75, column: 20 }, end: { line: 78, column: 5 } }, line: 75 } }, branchMap: { '0': { loc: { start: { line: 32, column: 2 }, end: { line: 52, column: 3 } }, type: 'if', locations: [{ start: { line: 32, column: 2 }, end: { line: 52, column: 3 } }, { start: { line: 32, column: 2 }, end: { line: 52, column: 3 } }], line: 32 }, '1': { loc: { start: { line: 56, column: 2 }, end: { line: 59, column: 3 } }, type: 'if', locations: [{ start: { line: 56, column: 2 }, end: { line: 59, column: 3 } }, { start: { line: 56, column: 2 }, end: { line: 59, column: 3 } }], line: 56 }, '2': { loc: { start: { line: 60, column: 2 }, end: { line: 63, column: 3 } }, type: 'if', locations: [{ start: { line: 60, column: 2 }, end: { line: 63, column: 3 } }, { start: { line: 60, column: 2 }, end: { line: 63, column: 3 } }], line: 60 }, '3': { loc: { start: { line: 64, column: 2 }, end: { line: 67, column: 3 } }, type: 'if', locations: [{ start: { line: 64, column: 2 }, end: { line: 67, column: 3 } }, { start: { line: 64, column: 2 }, end: { line: 67, column: 3 } }], line: 64 } }, s: { '0': 0, '1': 0, '2': 0, '3': 0, '4': 0, '5': 0, '6': 0, '7': 0, '8': 0, '9': 0, '10': 0, '11': 0, '12': 0, '13': 0, '14': 0, '15': 0, '16': 0, '17': 0, '18': 0, '19': 0, '20': 0, '21': 0, '22': 0, '23': 0, '24': 0, '25': 0, '26': 0, '27': 0, '28': 0, '29': 0, '30': 0, '31': 0, '32': 0, '33': 0, '34': 0, '35': 0, '36': 0, '37': 0, '38': 0, '39': 0, '40': 0, '41': 0, '42': 0, '43': 0, '44': 0 }, f: { '0': 0, '1': 0, '2': 0, '3': 0, '4': 0, '5': 0, '6': 0, '7': 0, '8': 0, '9': 0 }, b: { '0': [0, 0], '1': [0, 0], '2': [0, 0], '3': [0, 0] }, _coverageSchema: '332fd63041d2c1bcb487cc26dd0d5f7d97098a6c' },coverage = global[gcv] || (global[gcv] = {});if (coverage[path] && coverage[path].hash === hash) {return coverage[path];}coverageData.hash = hash;return coverage[path] = coverageData;}();

const User = /* istanbul ignore next */(cov_17iwyeiy26.s[0]++, require('../model/user'));
const router = /* istanbul ignore next */(cov_17iwyeiy26.s[1]++, require('../lib/router'));
const logger = /* istanbul ignore next */(cov_17iwyeiy26.s[2]++, require('../lib/logger'));
const storage = /* istanbul ignore next */(cov_17iwyeiy26.s[3]++, require('../lib/storage')); /* istanbul ignore next */cov_17iwyeiy26.s[4]++;

const sendStatus = (response, status, message) => {/* istanbul ignore next */cov_17iwyeiy26.f[0]++;cov_17iwyeiy26.s[5]++;
  logger.log('info', `Responding with a ${status} code due to ${message}`); /* istanbul ignore next */cov_17iwyeiy26.s[6]++;

  response.writeHead(status); /* istanbul ignore next */cov_17iwyeiy26.s[7]++;
  response.end();
}; /* istanbul ignore next */cov_17iwyeiy26.s[8]++;

const sendJSON = (response, status, jsonData) => {/* istanbul ignore next */cov_17iwyeiy26.f[1]++;cov_17iwyeiy26.s[9]++;
  logger.log('info', `Responding with a ${status} code and the following data`); /* istanbul ignore next */cov_17iwyeiy26.s[10]++;
  logger.log('info', jsonData); /* istanbul ignore next */cov_17iwyeiy26.s[11]++;
  response.writeHead(status, {
    'Content-Type': 'application/json' }); /* istanbul ignore next */cov_17iwyeiy26.s[12]++;


  response.write(JSON.stringify(jsonData)); /* istanbul ignore next */cov_17iwyeiy26.s[13]++;
  response.end(); /* istanbul ignore next */cov_17iwyeiy26.s[14]++;
  return;
}; /* istanbul ignore next */cov_17iwyeiy26.s[15]++;

router.get('/api/users', (request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;
  const userId = /* istanbul ignore next */(cov_17iwyeiy26.s[16]++, request.url.query.id); /* istanbul ignore next */cov_17iwyeiy26.s[17]++;

  console.log(request); /* istanbul ignore next */cov_17iwyeiy26.s[18]++;

  if (userId) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[19]++;
    storage.fetchItem(userId).
    then(user => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[20]++;
      sendJSON(response, 200, user); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;
      return;
    }).
    catch(error => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[22]++;
      sendStatus(response, 500, error); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;
      return;
    });
  } else {/* istanbul ignore next */cov_17iwyeiy26.b[0][1]++;cov_17iwyeiy26.s[24]++;
    storage.fetchAll().
    then(users => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[25]++;
      sendJSON(response, 200, users); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;
      return;
    }).
    catch(error => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[27]++;
      sendStatus(response, 500, error); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;
      return;
    });
  }
}); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;

router.post('/api/users', (request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[7]++;cov_17iwyeiy26.s[30]++;
  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[31]++;
    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;
    return;
  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[33]++;
  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[34]++;
    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;
    return;
  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[36]++;
  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[37]++;
    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;
    return;
  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}

  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[39]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;
  storage.addItem(user).
  then(() => {/* istanbul ignore next */cov_17iwyeiy26.f[8]++;cov_17iwyeiy26.s[41]++;
    sendJSON(response, 200, user); /* istanbul ignore next */cov_17iwyeiy26.s[42]++;
    return;
  }).
  catch(error => {/* istanbul ignore next */cov_17iwyeiy26.f[9]++;cov_17iwyeiy26.s[43]++;
    sendStatus(response, 500, error); /* istanbul ignore next */cov_17iwyeiy26.s[44]++;
    return;
  });
});

// router.delete('/api/users', (request, response) => {
//   const userId = request.url.query.id;
//
//   storage.fetchAll()
//     .then(allUsers => {
//       if (userId) {
//         const foundUserWithId = findUserWithId(userId, allUsers);
//
//         foundUserWithId ?
//
//       }
//   })
//
//   if (request.url.query.id) {
//     const userToBeRemoved = findUserWithId(request.url.query.id);
//     if (userToBeRemoved) {
//       const updatedUsers = users.filter(user => {
//         console.log(userToBeRemoved.testId, user.testId);
//         return userToBeRemoved.testId === user.testId;
//       });
//       users = updatedUsers;
//       sendJSON(response, 204, users);
//       return;
//     } else {
//       sendStatus(response, 404, 'id does not exit');
//     }
//   } else {
//     sendStatus(response, 400, 'no id provided');
//     return;
//   }
// });
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVzZXItcm91dGVyLmpzIl0sIm5hbWVzIjpbIlVzZXIiLCJyZXF1aXJlIiwicm91dGVyIiwibG9nZ2VyIiwic3RvcmFnZSIsInNlbmRTdGF0dXMiLCJyZXNwb25zZSIsInN0YXR1cyIsIm1lc3NhZ2UiLCJsb2ciLCJ3cml0ZUhlYWQiLCJlbmQiLCJzZW5kSlNPTiIsImpzb25EYXRhIiwid3JpdGUiLCJKU09OIiwic3RyaW5naWZ5IiwiZ2V0IiwicmVxdWVzdCIsInVzZXJJZCIsInVybCIsInF1ZXJ5IiwiaWQiLCJjb25zb2xlIiwiZmV0Y2hJdGVtIiwidGhlbiIsInVzZXIiLCJjYXRjaCIsImVycm9yIiwiZmV0Y2hBbGwiLCJ1c2VycyIsInBvc3QiLCJib2R5IiwibmFtZSIsImRlc2NyaXB0aW9uIiwiYWRkSXRlbSJdLCJtYXBwaW5ncyI6IkFBQUEsYTs7QUFFQSxNQUFNQSx5REFBT0MsUUFBUSxlQUFSLENBQVAsQ0FBTjtBQUNBLE1BQU1DLDJEQUFTRCxRQUFRLGVBQVIsQ0FBVCxDQUFOO0FBQ0EsTUFBTUUsMkRBQVNGLFFBQVEsZUFBUixDQUFULENBQU47QUFDQSxNQUFNRyw0REFBVUgsUUFBUSxnQkFBUixDQUFWLENBQU4sQzs7QUFFQSxNQUFNSSxhQUFhLENBQUNDLFFBQUQsRUFBV0MsTUFBWCxFQUFtQkMsT0FBbkIsS0FBK0I7QUFDaERMLFNBQU9NLEdBQVAsQ0FBVyxNQUFYLEVBQW1CLHFCQUFvQkYsTUFBTyxnQkFBZUMsT0FBUSxFQUFyRSxFQURnRDs7QUFHaERGLFdBQVNJLFNBQVQsQ0FBbUJILE1BQW5CLEVBSGdEO0FBSWhERCxXQUFTSyxHQUFUO0FBQ0QsQ0FMRCxDOztBQU9BLE1BQU1DLFdBQVcsQ0FBQ04sUUFBRCxFQUFXQyxNQUFYLEVBQW1CTSxRQUFuQixLQUFnQztBQUMvQ1YsU0FBT00sR0FBUCxDQUFXLE1BQVgsRUFBb0IscUJBQW9CRixNQUFPLDhCQUEvQyxFQUQrQztBQUUvQ0osU0FBT00sR0FBUCxDQUFXLE1BQVgsRUFBbUJJLFFBQW5CLEVBRitDO0FBRy9DUCxXQUFTSSxTQUFULENBQW1CSCxNQUFuQixFQUEyQjtBQUN6QixvQkFBaUIsa0JBRFEsRUFBM0IsRUFIK0M7OztBQU8vQ0QsV0FBU1EsS0FBVCxDQUFlQyxLQUFLQyxTQUFMLENBQWVILFFBQWYsQ0FBZixFQVArQztBQVEvQ1AsV0FBU0ssR0FBVCxHQVIrQztBQVMvQztBQUNELENBVkQsQzs7QUFZQVQsT0FBT2UsR0FBUCxDQUFXLFlBQVgsRUFBeUIsQ0FBQ0MsT0FBRCxFQUFVWixRQUFWLEtBQXVCO0FBQzlDLFFBQU1hLDREQUFTRCxRQUFRRSxHQUFSLENBQVlDLEtBQVosQ0FBa0JDLEVBQTNCLENBQU4sQ0FEOEM7O0FBRzlDQyxVQUFRZCxHQUFSLENBQVlTLE9BQVosRUFIOEM7O0FBSzlDLE1BQUlDLE1BQUosRUFBWTtBQUNWZixZQUFRb0IsU0FBUixDQUFrQkwsTUFBbEI7QUFDR00sUUFESCxDQUNRQyxRQUFRO0FBQ1pkLGVBQVNOLFFBQVQsRUFBbUIsR0FBbkIsRUFBd0JvQixJQUF4QixFQURZO0FBRVo7QUFDRCxLQUpIO0FBS0dDLFNBTEgsQ0FLU0MsU0FBUztBQUNkdkIsaUJBQVdDLFFBQVgsRUFBcUIsR0FBckIsRUFBMEJzQixLQUExQixFQURjO0FBRWQ7QUFDRCxLQVJIO0FBU0QsR0FWRCxNQVVPO0FBQ0x4QixZQUFReUIsUUFBUjtBQUNHSixRQURILENBQ1FLLFNBQVM7QUFDYmxCLGVBQVNOLFFBQVQsRUFBbUIsR0FBbkIsRUFBd0J3QixLQUF4QixFQURhO0FBRWI7QUFDRCxLQUpIO0FBS0dILFNBTEgsQ0FLU0MsU0FBUztBQUNkdkIsaUJBQVdDLFFBQVgsRUFBcUIsR0FBckIsRUFBMEJzQixLQUExQixFQURjO0FBRWQ7QUFDRCxLQVJIO0FBU0Q7QUFDRixDQTFCRCxFOztBQTRCQTFCLE9BQU82QixJQUFQLENBQVksWUFBWixFQUEwQixDQUFDYixPQUFELEVBQVVaLFFBQVYsS0FBdUI7QUFDL0MsTUFBSSxDQUFDWSxRQUFRYyxJQUFiLEVBQW1CO0FBQ2pCM0IsZUFBV0MsUUFBWCxFQUFxQixHQUFyQixFQUEwQixnQkFBMUIsRUFEaUI7QUFFakI7QUFDRCxHQUhELDJEQUQrQztBQUsvQyxNQUFJLENBQUNZLFFBQVFjLElBQVIsQ0FBYUMsSUFBbEIsRUFBd0I7QUFDdEI1QixlQUFXQyxRQUFYLEVBQXFCLEdBQXJCLEVBQTBCLGlCQUExQixFQURzQjtBQUV0QjtBQUNELEdBSEQsMkRBTCtDO0FBUy9DLE1BQUksQ0FBQ1ksUUFBUWMsSUFBUixDQUFhRSxXQUFsQixFQUErQjtBQUM3QjdCLGVBQVdDLFFBQVgsRUFBcUIsR0FBckIsRUFBMEIsbUJBQTFCLEVBRDZCO0FBRTdCO0FBQ0QsR0FIRDs7QUFLQSxNQUFJb0IsMERBQU8sSUFBSTFCLElBQUosQ0FBU2tCLFFBQVFjLElBQVIsQ0FBYUMsSUFBdEIsRUFBNEJmLFFBQVFjLElBQVIsQ0FBYUUsV0FBekMsQ0FBUCxDQUFKLENBZCtDO0FBZS9DOUIsVUFBUStCLE9BQVIsQ0FBZ0JULElBQWhCO0FBQ0dELE1BREgsQ0FDUSxNQUFNO0FBQ1ZiLGFBQVNOLFFBQVQsRUFBbUIsR0FBbkIsRUFBd0JvQixJQUF4QixFQURVO0FBRVY7QUFDRCxHQUpIO0FBS0dDLE9BTEgsQ0FLU0MsU0FBUztBQUNkdkIsZUFBV0MsUUFBWCxFQUFxQixHQUFyQixFQUEwQnNCLEtBQTFCLEVBRGM7QUFFZDtBQUNELEdBUkg7QUFTRCxDQXhCRDs7QUEwQkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoidXNlci1yb3V0ZXIuanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmNvbnN0IFVzZXIgPSByZXF1aXJlKCcuLi9tb2RlbC91c2VyJyk7XG5jb25zdCByb3V0ZXIgPSByZXF1aXJlKCcuLi9saWIvcm91dGVyJyk7XG5jb25zdCBsb2dnZXIgPSByZXF1aXJlKCcuLi9saWIvbG9nZ2VyJyk7XG5jb25zdCBzdG9yYWdlID0gcmVxdWlyZSgnLi4vbGliL3N0b3JhZ2UnKTtcblxuY29uc3Qgc2VuZFN0YXR1cyA9IChyZXNwb25zZSwgc3RhdHVzLCBtZXNzYWdlKSA9PiB7XG4gIGxvZ2dlci5sb2coJ2luZm8nLGBSZXNwb25kaW5nIHdpdGggYSAke3N0YXR1c30gY29kZSBkdWUgdG8gJHttZXNzYWdlfWApO1xuXG4gIHJlc3BvbnNlLndyaXRlSGVhZChzdGF0dXMpO1xuICByZXNwb25zZS5lbmQoKTtcbn07XG5cbmNvbnN0IHNlbmRKU09OID0gKHJlc3BvbnNlLCBzdGF0dXMsIGpzb25EYXRhKSA9PiB7XG4gIGxvZ2dlci5sb2coJ2luZm8nLCBgUmVzcG9uZGluZyB3aXRoIGEgJHtzdGF0dXN9IGNvZGUgYW5kIHRoZSBmb2xsb3dpbmcgZGF0YWApO1xuICBsb2dnZXIubG9nKCdpbmZvJywganNvbkRhdGEpO1xuICByZXNwb25zZS53cml0ZUhlYWQoc3RhdHVzLCB7XG4gICAgJ0NvbnRlbnQtVHlwZScgOiAnYXBwbGljYXRpb24vanNvbicsXG4gIH0pO1xuXG4gIHJlc3BvbnNlLndyaXRlKEpTT04uc3RyaW5naWZ5KGpzb25EYXRhKSk7XG4gIHJlc3BvbnNlLmVuZCgpO1xuICByZXR1cm47XG59O1xuXG5yb3V0ZXIuZ2V0KCcvYXBpL3VzZXJzJywgKHJlcXVlc3QsIHJlc3BvbnNlKSA9PiB7XG4gIGNvbnN0IHVzZXJJZCA9IHJlcXVlc3QudXJsLnF1ZXJ5LmlkO1xuXG4gIGNvbnNvbGUubG9nKHJlcXVlc3QpO1xuXG4gIGlmICh1c2VySWQpIHtcbiAgICBzdG9yYWdlLmZldGNoSXRlbSh1c2VySWQpXG4gICAgICAudGhlbih1c2VyID0+IHtcbiAgICAgICAgc2VuZEpTT04ocmVzcG9uc2UsIDIwMCwgdXNlcik7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH0pXG4gICAgICAuY2F0Y2goZXJyb3IgPT4ge1xuICAgICAgICBzZW5kU3RhdHVzKHJlc3BvbnNlLCA1MDAsIGVycm9yKTtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfSk7XG4gIH0gZWxzZSB7XG4gICAgc3RvcmFnZS5mZXRjaEFsbCgpXG4gICAgICAudGhlbih1c2VycyA9PiB7XG4gICAgICAgIHNlbmRKU09OKHJlc3BvbnNlLCAyMDAsIHVzZXJzKTtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfSlcbiAgICAgIC5jYXRjaChlcnJvciA9PiB7XG4gICAgICAgIHNlbmRTdGF0dXMocmVzcG9uc2UsIDUwMCwgZXJyb3IpO1xuICAgICAgICByZXR1cm47XG4gICAgICB9KTtcbiAgfVxufSk7XG5cbnJvdXRlci5wb3N0KCcvYXBpL3VzZXJzJywgKHJlcXVlc3QsIHJlc3BvbnNlKSA9PiB7XG4gIGlmICghcmVxdWVzdC5ib2R5KSB7XG4gICAgc2VuZFN0YXR1cyhyZXNwb25zZSwgNDAwLCAnYm9keSBub3QgZm91bmQnKTtcbiAgICByZXR1cm47XG4gIH1cbiAgaWYgKCFyZXF1ZXN0LmJvZHkubmFtZSkge1xuICAgIHNlbmRTdGF0dXMocmVzcG9uc2UsIDQwMCwgJ3RpdGxlIG5vdCBmb3VuZCcpO1xuICAgIHJldHVybjtcbiAgfVxuICBpZiAoIXJlcXVlc3QuYm9keS5kZXNjcmlwdGlvbikge1xuICAgIHNlbmRTdGF0dXMocmVzcG9uc2UsIDQwMCwgJ2NvbnRlbnQgbm90IGZvdW5kJyk7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgbGV0IHVzZXIgPSBuZXcgVXNlcihyZXF1ZXN0LmJvZHkubmFtZSwgcmVxdWVzdC5ib2R5LmRlc2NyaXB0aW9uKTtcbiAgc3RvcmFnZS5hZGRJdGVtKHVzZXIpXG4gICAgLnRoZW4oKCkgPT4ge1xuICAgICAgc2VuZEpTT04ocmVzcG9uc2UsIDIwMCwgdXNlcik7XG4gICAgICByZXR1cm47XG4gICAgfSlcbiAgICAuY2F0Y2goZXJyb3IgPT4ge1xuICAgICAgc2VuZFN0YXR1cyhyZXNwb25zZSwgNTAwLCBlcnJvcik7XG4gICAgICByZXR1cm47XG4gICAgfSk7XG59KTtcblxuLy8gcm91dGVyLmRlbGV0ZSgnL2FwaS91c2VycycsIChyZXF1ZXN0LCByZXNwb25zZSkgPT4ge1xuLy8gICBjb25zdCB1c2VySWQgPSByZXF1ZXN0LnVybC5xdWVyeS5pZDtcbi8vXG4vLyAgIHN0b3JhZ2UuZmV0Y2hBbGwoKVxuLy8gICAgIC50aGVuKGFsbFVzZXJzID0+IHtcbi8vICAgICAgIGlmICh1c2VySWQpIHtcbi8vICAgICAgICAgY29uc3QgZm91bmRVc2VyV2l0aElkID0gZmluZFVzZXJXaXRoSWQodXNlcklkLCBhbGxVc2Vycyk7XG4vL1xuLy8gICAgICAgICBmb3VuZFVzZXJXaXRoSWQgP1xuLy9cbi8vICAgICAgIH1cbi8vICAgfSlcbi8vXG4vLyAgIGlmIChyZXF1ZXN0LnVybC5xdWVyeS5pZCkge1xuLy8gICAgIGNvbnN0IHVzZXJUb0JlUmVtb3ZlZCA9IGZpbmRVc2VyV2l0aElkKHJlcXVlc3QudXJsLnF1ZXJ5LmlkKTtcbi8vICAgICBpZiAodXNlclRvQmVSZW1vdmVkKSB7XG4vLyAgICAgICBjb25zdCB1cGRhdGVkVXNlcnMgPSB1c2Vycy5maWx0ZXIodXNlciA9PiB7XG4vLyAgICAgICAgIGNvbnNvbGUubG9nKHVzZXJUb0JlUmVtb3ZlZC50ZXN0SWQsIHVzZXIudGVzdElkKTtcbi8vICAgICAgICAgcmV0dXJuIHVzZXJUb0JlUmVtb3ZlZC50ZXN0SWQgPT09IHVzZXIudGVzdElkO1xuLy8gICAgICAgfSk7XG4vLyAgICAgICB1c2VycyA9IHVwZGF0ZWRVc2Vycztcbi8vICAgICAgIHNlbmRKU09OKHJlc3BvbnNlLCAyMDQsIHVzZXJzKTtcbi8vICAgICAgIHJldHVybjtcbi8vICAgICB9IGVsc2Uge1xuLy8gICAgICAgc2VuZFN0YXR1cyhyZXNwb25zZSwgNDA0LCAnaWQgZG9lcyBub3QgZXhpdCcpO1xuLy8gICAgIH1cbi8vICAgfSBlbHNlIHtcbi8vICAgICBzZW5kU3RhdHVzKHJlc3BvbnNlLCA0MDAsICdubyBpZCBwcm92aWRlZCcpO1xuLy8gICAgIHJldHVybjtcbi8vICAgfVxuLy8gfSk7XG4iXX0=