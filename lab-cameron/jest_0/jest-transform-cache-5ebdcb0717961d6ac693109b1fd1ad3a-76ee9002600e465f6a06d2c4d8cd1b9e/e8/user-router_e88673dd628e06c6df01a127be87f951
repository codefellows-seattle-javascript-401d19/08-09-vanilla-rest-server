c55f8406a4fb1fc7d2dc3b1bd8fd5bd3
'use strict'; /* istanbul ignore next */var cov_17iwyeiy26 = function () {var path = '/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/route/user-router.js',hash = '0b9fb1dd9ce69542c7858c52a55965d05739fb89',global = new Function('return this')(),gcv = '__coverage__',coverageData = { path: '/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/route/user-router.js', statementMap: { '0': { start: { line: 3, column: 13 }, end: { line: 3, column: 37 } }, '1': { start: { line: 4, column: 15 }, end: { line: 4, column: 39 } }, '2': { start: { line: 5, column: 15 }, end: { line: 5, column: 39 } }, '3': { start: { line: 6, column: 16 }, end: { line: 6, column: 41 } }, '4': { start: { line: 8, column: 19 }, end: { line: 13, column: 1 } }, '5': { start: { line: 9, column: 2 }, end: { line: 9, column: 74 } }, '6': { start: { line: 11, column: 2 }, end: { line: 11, column: 29 } }, '7': { start: { line: 12, column: 2 }, end: { line: 12, column: 17 } }, '8': { start: { line: 15, column: 17 }, end: { line: 25, column: 1 } }, '9': { start: { line: 16, column: 2 }, end: { line: 16, column: 80 } }, '10': { start: { line: 17, column: 2 }, end: { line: 17, column: 31 } }, '11': { start: { line: 18, column: 2 }, end: { line: 20, column: 5 } }, '12': { start: { line: 22, column: 2 }, end: { line: 22, column: 43 } }, '13': { start: { line: 23, column: 2 }, end: { line: 23, column: 17 } }, '14': { start: { line: 24, column: 2 }, end: { line: 24, column: 9 } }, '15': { start: { line: 27, column: 23 }, end: { line: 34, column: 1 } }, '16': { start: { line: 28, column: 2 }, end: { line: 32, column: 3 } }, '17': { start: { line: 29, column: 4 }, end: { line: 31, column: 5 } }, '18': { start: { line: 30, column: 6 }, end: { line: 30, column: 22 } }, '19': { start: { line: 33, column: 2 }, end: { line: 33, column: 14 } }, '20': { start: { line: 36, column: 0 }, end: { line: 60, column: 3 } }, '21': { start: { line: 37, column: 17 }, end: { line: 37, column: 37 } }, '22': { start: { line: 39, column: 2 }, end: { line: 59, column: 3 } }, '23': { start: { line: 40, column: 4 }, end: { line: 48, column: 9 } }, '24': { start: { line: 42, column: 8 }, end: { line: 42, column: 38 } }, '25': { start: { line: 43, column: 8 }, end: { line: 43, column: 15 } }, '26': { start: { line: 46, column: 8 }, end: { line: 46, column: 41 } }, '27': { start: { line: 47, column: 8 }, end: { line: 47, column: 15 } }, '28': { start: { line: 50, column: 4 }, end: { line: 58, column: 9 } }, '29': { start: { line: 52, column: 8 }, end: { line: 52, column: 39 } }, '30': { start: { line: 53, column: 8 }, end: { line: 53, column: 15 } }, '31': { start: { line: 56, column: 8 }, end: { line: 56, column: 41 } }, '32': { start: { line: 57, column: 8 }, end: { line: 57, column: 15 } }, '33': { start: { line: 62, column: 0 }, end: { line: 86, column: 3 } }, '34': { start: { line: 63, column: 2 }, end: { line: 66, column: 3 } }, '35': { start: { line: 64, column: 4 }, end: { line: 64, column: 48 } }, '36': { start: { line: 65, column: 4 }, end: { line: 65, column: 11 } }, '37': { start: { line: 67, column: 2 }, end: { line: 70, column: 3 } }, '38': { start: { line: 68, column: 4 }, end: { line: 68, column: 49 } }, '39': { start: { line: 69, column: 4 }, end: { line: 69, column: 11 } }, '40': { start: { line: 71, column: 2 }, end: { line: 74, column: 3 } }, '41': { start: { line: 72, column: 4 }, end: { line: 72, column: 51 } }, '42': { start: { line: 73, column: 4 }, end: { line: 73, column: 11 } }, '43': { start: { line: 76, column: 13 }, end: { line: 76, column: 66 } }, '44': { start: { line: 77, column: 2 }, end: { line: 85, column: 7 } }, '45': { start: { line: 79, column: 6 }, end: { line: 79, column: 36 } }, '46': { start: { line: 80, column: 6 }, end: { line: 80, column: 13 } }, '47': { start: { line: 83, column: 6 }, end: { line: 83, column: 39 } }, '48': { start: { line: 84, column: 6 }, end: { line: 84, column: 13 } } }, fnMap: { '0': { name: '(anonymous_0)', decl: { start: { line: 8, column: 19 }, end: { line: 8, column: 20 } }, loc: { start: { line: 8, column: 50 }, end: { line: 13, column: 1 } }, line: 8 }, '1': { name: '(anonymous_1)', decl: { start: { line: 15, column: 17 }, end: { line: 15, column: 18 } }, loc: { start: { line: 15, column: 49 }, end: { line: 25, column: 1 } }, line: 15 }, '2': { name: '(anonymous_2)', decl: { start: { line: 27, column: 23 }, end: { line: 27, column: 24 } }, loc: { start: { line: 27, column: 47 }, end: { line: 34, column: 1 } }, line: 27 }, '3': { name: '(anonymous_3)', decl: { start: { line: 36, column: 25 }, end: { line: 36, column: 26 } }, loc: { start: { line: 36, column: 48 }, end: { line: 60, column: 1 } }, line: 36 }, '4': { name: '(anonymous_4)', decl: { start: { line: 41, column: 12 }, end: { line: 41, column: 13 } }, loc: { start: { line: 41, column: 20 }, end: { line: 44, column: 7 } }, line: 41 }, '5': { name: '(anonymous_5)', decl: { start: { line: 45, column: 13 }, end: { line: 45, column: 14 } }, loc: { start: { line: 45, column: 22 }, end: { line: 48, column: 7 } }, line: 45 }, '6': { name: '(anonymous_6)', decl: { start: { line: 51, column: 12 }, end: { line: 51, column: 13 } }, loc: { start: { line: 51, column: 21 }, end: { line: 54, column: 7 } }, line: 51 }, '7': { name: '(anonymous_7)', decl: { start: { line: 55, column: 13 }, end: { line: 55, column: 14 } }, loc: { start: { line: 55, column: 22 }, end: { line: 58, column: 7 } }, line: 55 }, '8': { name: '(anonymous_8)', decl: { start: { line: 62, column: 26 }, end: { line: 62, column: 27 } }, loc: { start: { line: 62, column: 49 }, end: { line: 86, column: 1 } }, line: 62 }, '9': { name: '(anonymous_9)', decl: { start: { line: 78, column: 10 }, end: { line: 78, column: 11 } }, loc: { start: { line: 78, column: 16 }, end: { line: 81, column: 5 } }, line: 78 }, '10': { name: '(anonymous_10)', decl: { start: { line: 82, column: 11 }, end: { line: 82, column: 12 } }, loc: { start: { line: 82, column: 20 }, end: { line: 85, column: 5 } }, line: 82 } }, branchMap: { '0': { loc: { start: { line: 29, column: 4 }, end: { line: 31, column: 5 } }, type: 'if', locations: [{ start: { line: 29, column: 4 }, end: { line: 31, column: 5 } }, { start: { line: 29, column: 4 }, end: { line: 31, column: 5 } }], line: 29 }, '1': { loc: { start: { line: 39, column: 2 }, end: { line: 59, column: 3 } }, type: 'if', locations: [{ start: { line: 39, column: 2 }, end: { line: 59, column: 3 } }, { start: { line: 39, column: 2 }, end: { line: 59, column: 3 } }], line: 39 }, '2': { loc: { start: { line: 63, column: 2 }, end: { line: 66, column: 3 } }, type: 'if', locations: [{ start: { line: 63, column: 2 }, end: { line: 66, column: 3 } }, { start: { line: 63, column: 2 }, end: { line: 66, column: 3 } }], line: 63 }, '3': { loc: { start: { line: 67, column: 2 }, end: { line: 70, column: 3 } }, type: 'if', locations: [{ start: { line: 67, column: 2 }, end: { line: 70, column: 3 } }, { start: { line: 67, column: 2 }, end: { line: 70, column: 3 } }], line: 67 }, '4': { loc: { start: { line: 71, column: 2 }, end: { line: 74, column: 3 } }, type: 'if', locations: [{ start: { line: 71, column: 2 }, end: { line: 74, column: 3 } }, { start: { line: 71, column: 2 }, end: { line: 74, column: 3 } }], line: 71 } }, s: { '0': 0, '1': 0, '2': 0, '3': 0, '4': 0, '5': 0, '6': 0, '7': 0, '8': 0, '9': 0, '10': 0, '11': 0, '12': 0, '13': 0, '14': 0, '15': 0, '16': 0, '17': 0, '18': 0, '19': 0, '20': 0, '21': 0, '22': 0, '23': 0, '24': 0, '25': 0, '26': 0, '27': 0, '28': 0, '29': 0, '30': 0, '31': 0, '32': 0, '33': 0, '34': 0, '35': 0, '36': 0, '37': 0, '38': 0, '39': 0, '40': 0, '41': 0, '42': 0, '43': 0, '44': 0, '45': 0, '46': 0, '47': 0, '48': 0 }, f: { '0': 0, '1': 0, '2': 0, '3': 0, '4': 0, '5': 0, '6': 0, '7': 0, '8': 0, '9': 0, '10': 0 }, b: { '0': [0, 0], '1': [0, 0], '2': [0, 0], '3': [0, 0], '4': [0, 0] }, _coverageSchema: '332fd63041d2c1bcb487cc26dd0d5f7d97098a6c' },coverage = global[gcv] || (global[gcv] = {});if (coverage[path] && coverage[path].hash === hash) {return coverage[path];}coverageData.hash = hash;return coverage[path] = coverageData;}();

const User = /* istanbul ignore next */(cov_17iwyeiy26.s[0]++, require('../model/user'));
const router = /* istanbul ignore next */(cov_17iwyeiy26.s[1]++, require('../lib/router'));
const logger = /* istanbul ignore next */(cov_17iwyeiy26.s[2]++, require('../lib/logger'));
const storage = /* istanbul ignore next */(cov_17iwyeiy26.s[3]++, require('../lib/storage')); /* istanbul ignore next */cov_17iwyeiy26.s[4]++;

const sendStatus = (response, status, message) => {/* istanbul ignore next */cov_17iwyeiy26.f[0]++;cov_17iwyeiy26.s[5]++;
  logger.log('info', `Responding with a ${status} code due to ${message}`); /* istanbul ignore next */cov_17iwyeiy26.s[6]++;

  response.writeHead(status); /* istanbul ignore next */cov_17iwyeiy26.s[7]++;
  response.end();
}; /* istanbul ignore next */cov_17iwyeiy26.s[8]++;

const sendJSON = (response, status, jsonData) => {/* istanbul ignore next */cov_17iwyeiy26.f[1]++;cov_17iwyeiy26.s[9]++;
  logger.log('info', `Responding with a ${status} code and the following data`); /* istanbul ignore next */cov_17iwyeiy26.s[10]++;
  logger.log('info', jsonData); /* istanbul ignore next */cov_17iwyeiy26.s[11]++;
  response.writeHead(status, {
    'Content-Type': 'application/json' }); /* istanbul ignore next */cov_17iwyeiy26.s[12]++;


  response.write(JSON.stringify(jsonData)); /* istanbul ignore next */cov_17iwyeiy26.s[13]++;
  response.end(); /* istanbul ignore next */cov_17iwyeiy26.s[14]++;
  return;
}; /* istanbul ignore next */cov_17iwyeiy26.s[15]++;

const findUserWithId = (querystring, users) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;
  for (let i = 0; i < users.length; i++) {/* istanbul ignore next */cov_17iwyeiy26.s[17]++;
    if (users[i].testId === querystring) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[18]++;
      return users[i];
    } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}
  } /* istanbul ignore next */cov_17iwyeiy26.s[19]++;
  return null;
}; /* istanbul ignore next */cov_17iwyeiy26.s[20]++;

router.get('/api/users', (request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;
  const userId = /* istanbul ignore next */(cov_17iwyeiy26.s[21]++, request.url.query.id); /* istanbul ignore next */cov_17iwyeiy26.s[22]++;

  if (userId) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[23]++;
    storage.fetchItem(userId).
    then(user => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[24]++;
      sendJSON(response, 200, user); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;
      return;
    }).
    catch(error => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[26]++;
      sendStatus(response, 500, error); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;
      return;
    });
  } else {/* istanbul ignore next */cov_17iwyeiy26.b[1][1]++;cov_17iwyeiy26.s[28]++;
    storage.fetchAll().
    then(users => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[29]++;
      sendJSON(response, 200, users); /* istanbul ignore next */cov_17iwyeiy26.s[30]++;
      return;
    }).
    catch(error => {/* istanbul ignore next */cov_17iwyeiy26.f[7]++;cov_17iwyeiy26.s[31]++;
      sendStatus(response, 500, error); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;
      return;
    });
  }
}); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;

router.post('/api/users', (request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[8]++;cov_17iwyeiy26.s[34]++;
  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[35]++;
    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[36]++;
    return;
  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[37]++;
  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[38]++;
    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;
    return;
  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[40]++;
  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[41]++;
    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[42]++;
    return;
  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}

  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[43]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[44]++;
  storage.addItem(user).
  then(() => {/* istanbul ignore next */cov_17iwyeiy26.f[9]++;cov_17iwyeiy26.s[45]++;
    sendJSON(response, 200, user); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;
    return;
  }).
  catch(error => {/* istanbul ignore next */cov_17iwyeiy26.f[10]++;cov_17iwyeiy26.s[47]++;
    sendStatus(response, 500, error); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;
    return;
  });
});

// router.delete('/api/users', (request, response) => {
//   const userId = request.url.query.id;
//
//   storage.fetchAll()
//     .then(allUsers => {
//       if (userId) {
//         const foundUserWithId = findUserWithId(userId, allUsers);
//
//         foundUserWithId ?
//
//       }
//   })
//
//   if (request.url.query.id) {
//     const userToBeRemoved = findUserWithId(request.url.query.id);
//     if (userToBeRemoved) {
//       const updatedUsers = users.filter(user => {
//         console.log(userToBeRemoved.testId, user.testId);
//         return userToBeRemoved.testId === user.testId;
//       });
//       users = updatedUsers;
//       sendJSON(response, 204, users);
//       return;
//     } else {
//       sendStatus(response, 404, 'id does not exit');
//     }
//   } else {
//     sendStatus(response, 400, 'no id provided');
//     return;
//   }
// });
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVzZXItcm91dGVyLmpzIl0sIm5hbWVzIjpbIlVzZXIiLCJyZXF1aXJlIiwicm91dGVyIiwibG9nZ2VyIiwic3RvcmFnZSIsInNlbmRTdGF0dXMiLCJyZXNwb25zZSIsInN0YXR1cyIsIm1lc3NhZ2UiLCJsb2ciLCJ3cml0ZUhlYWQiLCJlbmQiLCJzZW5kSlNPTiIsImpzb25EYXRhIiwid3JpdGUiLCJKU09OIiwic3RyaW5naWZ5IiwiZmluZFVzZXJXaXRoSWQiLCJxdWVyeXN0cmluZyIsInVzZXJzIiwiaSIsImxlbmd0aCIsInRlc3RJZCIsImdldCIsInJlcXVlc3QiLCJ1c2VySWQiLCJ1cmwiLCJxdWVyeSIsImlkIiwiZmV0Y2hJdGVtIiwidGhlbiIsInVzZXIiLCJjYXRjaCIsImVycm9yIiwiZmV0Y2hBbGwiLCJwb3N0IiwiYm9keSIsIm5hbWUiLCJkZXNjcmlwdGlvbiIsImFkZEl0ZW0iXSwibWFwcGluZ3MiOiJBQUFBLGE7O0FBRUEsTUFBTUEseURBQU9DLFFBQVEsZUFBUixDQUFQLENBQU47QUFDQSxNQUFNQywyREFBU0QsUUFBUSxlQUFSLENBQVQsQ0FBTjtBQUNBLE1BQU1FLDJEQUFTRixRQUFRLGVBQVIsQ0FBVCxDQUFOO0FBQ0EsTUFBTUcsNERBQVVILFFBQVEsZ0JBQVIsQ0FBVixDQUFOLEM7O0FBRUEsTUFBTUksYUFBYSxDQUFDQyxRQUFELEVBQVdDLE1BQVgsRUFBbUJDLE9BQW5CLEtBQStCO0FBQ2hETCxTQUFPTSxHQUFQLENBQVcsTUFBWCxFQUFtQixxQkFBb0JGLE1BQU8sZ0JBQWVDLE9BQVEsRUFBckUsRUFEZ0Q7O0FBR2hERixXQUFTSSxTQUFULENBQW1CSCxNQUFuQixFQUhnRDtBQUloREQsV0FBU0ssR0FBVDtBQUNELENBTEQsQzs7QUFPQSxNQUFNQyxXQUFXLENBQUNOLFFBQUQsRUFBV0MsTUFBWCxFQUFtQk0sUUFBbkIsS0FBZ0M7QUFDL0NWLFNBQU9NLEdBQVAsQ0FBVyxNQUFYLEVBQW9CLHFCQUFvQkYsTUFBTyw4QkFBL0Ms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Q0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoidXNlci1yb3V0ZXIuanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmNvbnN0IFVzZXIgPSByZXF1aXJlKCcuLi9tb2RlbC91c2VyJyk7XG5jb25zdCByb3V0ZXIgPSByZXF1aXJlKCcuLi9saWIvcm91dGVyJyk7XG5jb25zdCBsb2dnZXIgPSByZXF1aXJlKCcuLi9saWIvbG9nZ2VyJyk7XG5jb25zdCBzdG9yYWdlID0gcmVxdWlyZSgnLi4vbGliL3N0b3JhZ2UnKTtcblxuY29uc3Qgc2VuZFN0YXR1cyA9IChyZXNwb25zZSwgc3RhdHVzLCBtZXNzYWdlKSA9PiB7XG4gIGxvZ2dlci5sb2coJ2luZm8nLGBSZXNwb25kaW5nIHdpdGggYSAke3N0YXR1c30gY29kZSBkdWUgdG8gJHttZXNzYWdlfWApO1xuXG4gIHJlc3BvbnNlLndyaXRlSGVhZChzdGF0dXMpO1xuICByZXNwb25zZS5lbmQoKTtcbn07XG5cbmNvbnN0IHNlbmRKU09OID0gKHJlc3BvbnNlLCBzdGF0dXMsIGpzb25EYXRhKSA9PiB7XG4gIGxvZ2dlci5sb2coJ2luZm8nLCBgUmVzcG9uZGluZyB3aXRoIGEgJHtzdGF0dXN9IGNvZGUgYW5kIHRoZSBmb2xsb3dpbmcgZGF0YWApO1xuICBsb2dnZXIubG9nKCdpbmZvJywganNvbkRhdGEpO1xuICByZXNwb25zZS53cml0ZUhlYWQoc3RhdHVzLCB7XG4gICAgJ0NvbnRlbnQtVHlwZScgOiAnYXBwbGljYXRpb24vanNvbicsXG4gIH0pO1xuXG4gIHJlc3BvbnNlLndyaXRlKEpTT04uc3RyaW5naWZ5KGpzb25EYXRhKSk7XG4gIHJlc3BvbnNlLmVuZCgpO1xuICByZXR1cm47XG59O1xuXG5jb25zdCBmaW5kVXNlcldpdGhJZCA9IChxdWVyeXN0cmluZywgdXNlcnMpID0+IHtcbiAgZm9yIChsZXQgaSA9IDA7IGkgPCB1c2Vycy5sZW5ndGg7IGkrKykge1xuICAgIGlmICh1c2Vyc1tpXS50ZXN0SWQgPT09IHF1ZXJ5c3RyaW5nKSB7XG4gICAgICByZXR1cm4gdXNlcnNbaV07XG4gICAgfVxuICB9XG4gIHJldHVybiBudWxsO1xufTtcblxucm91dGVyLmdldCgnL2FwaS91c2VycycsIChyZXF1ZXN0LCByZXNwb25zZSkgPT4ge1xuICBjb25zdCB1c2VySWQgPSByZXF1ZXN0LnVybC5xdWVyeS5pZDtcblxuICBpZiAodXNlcklkKSB7XG4gICAgc3RvcmFnZS5mZXRjaEl0ZW0odXNlcklkKVxuICAgICAgLnRoZW4odXNlciA9PiB7XG4gICAgICAgIHNlbmRKU09OKHJlc3BvbnNlLCAyMDAsIHVzZXIpO1xuICAgICAgICByZXR1cm47XG4gICAgICB9KVxuICAgICAgLmNhdGNoKGVycm9yID0+IHtcbiAgICAgICAgc2VuZFN0YXR1cyhyZXNwb25zZSwgNTAwLCBlcnJvcik7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH0pO1xuICB9IGVsc2Uge1xuICAgIHN0b3JhZ2UuZmV0Y2hBbGwoKVxuICAgICAgLnRoZW4odXNlcnMgPT4ge1xuICAgICAgICBzZW5kSlNPTihyZXNwb25zZSwgMjAwLCB1c2Vycyk7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH0pXG4gICAgICAuY2F0Y2goZXJyb3IgPT4ge1xuICAgICAgICBzZW5kU3RhdHVzKHJlc3BvbnNlLCA1MDAsIGVycm9yKTtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfSk7XG4gIH1cbn0pO1xuXG5yb3V0ZXIucG9zdCgnL2FwaS91c2VycycsIChyZXF1ZXN0LCByZXNwb25zZSkgPT4ge1xuICBpZiAoIXJlcXVlc3QuYm9keSkge1xuICAgIHNlbmRTdGF0dXMocmVzcG9uc2UsIDQwMCwgJ2JvZHkgbm90IGZvdW5kJyk7XG4gICAgcmV0dXJuO1xuICB9XG4gIGlmICghcmVxdWVzdC5ib2R5Lm5hbWUpIHtcbiAgICBzZW5kU3RhdHVzKHJlc3BvbnNlLCA0MDAsICd0aXRsZSBub3QgZm91bmQnKTtcbiAgICByZXR1cm47XG4gIH1cbiAgaWYgKCFyZXF1ZXN0LmJvZHkuZGVzY3JpcHRpb24pIHtcbiAgICBzZW5kU3RhdHVzKHJlc3BvbnNlLCA0MDAsICdjb250ZW50IG5vdCBmb3VuZCcpO1xuICAgIHJldHVybjtcbiAgfVxuXG4gIGxldCB1c2VyID0gbmV3IFVzZXIocmVxdWVzdC5ib2R5Lm5hbWUsIHJlcXVlc3QuYm9keS5kZXNjcmlwdGlvbik7XG4gIHN0b3JhZ2UuYWRkSXRlbSh1c2VyKVxuICAgIC50aGVuKCgpID0+IHtcbiAgICAgIHNlbmRKU09OKHJlc3BvbnNlLCAyMDAsIHVzZXIpO1xuICAgICAgcmV0dXJuO1xuICAgIH0pXG4gICAgLmNhdGNoKGVycm9yID0+IHtcbiAgICAgIHNlbmRTdGF0dXMocmVzcG9uc2UsIDUwMCwgZXJyb3IpO1xuICAgICAgcmV0dXJuO1xuICAgIH0pO1xufSk7XG5cbi8vIHJvdXRlci5kZWxldGUoJy9hcGkvdXNlcnMnLCAocmVxdWVzdCwgcmVzcG9uc2UpID0+IHtcbi8vICAgY29uc3QgdXNlcklkID0gcmVxdWVzdC51cmwucXVlcnkuaWQ7XG4vL1xuLy8gICBzdG9yYWdlLmZldGNoQWxsKClcbi8vICAgICAudGhlbihhbGxVc2VycyA9PiB7XG4vLyAgICAgICBpZiAodXNlcklkKSB7XG4vLyAgICAgICAgIGNvbnN0IGZvdW5kVXNlcldpdGhJZCA9IGZpbmRVc2VyV2l0aElkKHVzZXJJZCwgYWxsVXNlcnMpO1xuLy9cbi8vICAgICAgICAgZm91bmRVc2VyV2l0aElkID9cbi8vXG4vLyAgICAgICB9XG4vLyAgIH0pXG4vL1xuLy8gICBpZiAocmVxdWVzdC51cmwucXVlcnkuaWQpIHtcbi8vICAgICBjb25zdCB1c2VyVG9CZVJlbW92ZWQgPSBmaW5kVXNlcldpdGhJZChyZXF1ZXN0LnVybC5xdWVyeS5pZCk7XG4vLyAgICAgaWYgKHVzZXJUb0JlUmVtb3ZlZCkge1xuLy8gICAgICAgY29uc3QgdXBkYXRlZFVzZXJzID0gdXNlcnMuZmlsdGVyKHVzZXIgPT4ge1xuLy8gICAgICAgICBjb25zb2xlLmxvZyh1c2VyVG9CZVJlbW92ZWQudGVzdElkLCB1c2VyLnRlc3RJZCk7XG4vLyAgICAgICAgIHJldHVybiB1c2VyVG9CZVJlbW92ZWQudGVzdElkID09PSB1c2VyLnRlc3RJZDtcbi8vICAgICAgIH0pO1xuLy8gICAgICAgdXNlcnMgPSB1cGRhdGVkVXNlcnM7XG4vLyAgICAgICBzZW5kSlNPTihyZXNwb25zZSwgMjA0LCB1c2Vycyk7XG4vLyAgICAgICByZXR1cm47XG4vLyAgICAgfSBlbHNlIHtcbi8vICAgICAgIHNlbmRTdGF0dXMocmVzcG9uc2UsIDQwNCwgJ2lkIGRvZXMgbm90IGV4aXQnKTtcbi8vICAgICB9XG4vLyAgIH0gZWxzZSB7XG4vLyAgICAgc2VuZFN0YXR1cyhyZXNwb25zZSwgNDAwLCAnbm8gaWQgcHJvdmlkZWQnKTtcbi8vICAgICByZXR1cm47XG4vLyAgIH1cbi8vIH0pO1xuIl19