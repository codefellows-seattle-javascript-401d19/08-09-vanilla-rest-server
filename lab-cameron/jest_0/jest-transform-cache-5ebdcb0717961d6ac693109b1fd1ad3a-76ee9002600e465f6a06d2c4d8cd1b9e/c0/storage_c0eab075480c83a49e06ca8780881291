8ec1a36277456c77c73e5c3f15d370ee
'use strict'; /* istanbul ignore next */var cov_1c27dld0r5 = function () {var path = '/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/storage.js',hash = 'f0b7181626211aa271cc49f001fb69a01f015778',global = new Function('return this')(),gcv = '__coverage__',coverageData = { path: '/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/storage.js', statementMap: { '0': { start: { line: 3, column: 15 }, end: { line: 3, column: 34 } }, '1': { start: { line: 4, column: 16 }, end: { line: 4, column: 35 } }, '2': { start: { line: 6, column: 16 }, end: { line: 6, column: 35 } }, '3': { start: { line: 8, column: 0 }, end: { line: 14, column: 5 } }, '4': { start: { line: 10, column: 4 }, end: { line: 13, column: 5 } }, '5': { start: { line: 11, column: 6 }, end: { line: 11, column: 64 } }, '6': { start: { line: 12, column: 6 }, end: { line: 12, column: 54 } }, '7': { start: { line: 16, column: 0 }, end: { line: 20, column: 2 } }, '8': { start: { line: 17, column: 2 }, end: { line: 17, column: 52 } }, '9': { start: { line: 18, column: 2 }, end: { line: 18, column: 56 } }, '10': { start: { line: 19, column: 2 }, end: { line: 19, column: 52 } }, '11': { start: { line: 22, column: 0 }, end: { line: 34, column: 2 } }, '12': { start: { line: 23, column: 2 }, end: { line: 23, column: 63 } }, '13': { start: { line: 24, column: 2 }, end: { line: 24, column: 30 } }, '14': { start: { line: 26, column: 2 }, end: { line: 28, column: 3 } }, '15': { start: { line: 27, column: 4 }, end: { line: 27, column: 79 } }, '16': { start: { line: 30, column: 2 }, end: { line: 33, column: 7 } }, '17': { start: { line: 32, column: 6 }, end: { line: 32, column: 78 } }, '18': { start: { line: 36, column: 0 }, end: { line: 49, column: 2 } }, '19': { start: { line: 37, column: 2 }, end: { line: 37, column: 71 } }, '20': { start: { line: 38, column: 2 }, end: { line: 48, column: 7 } }, '21': { start: { line: 40, column: 6 }, end: { line: 40, column: 56 } }, '22': { start: { line: 40, column: 36 }, end: { line: 40, column: 54 } }, '23': { start: { line: 43, column: 6 }, end: { line: 45, column: 7 } }, '24': { start: { line: 44, column: 8 }, end: { line: 44, column: 60 } }, '25': { start: { line: 47, column: 6 }, end: { line: 47, column: 18 } }, '26': { start: { line: 51, column: 0 }, end: { line: 61, column: 2 } }, '27': { start: { line: 52, column: 2 }, end: { line: 52, column: 68 } }, '28': { start: { line: 54, column: 2 }, end: { line: 60, column: 7 } }, '29': { start: { line: 56, column: 6 }, end: { line: 56, column: 53 } }, '30': { start: { line: 56, column: 37 }, end: { line: 56, column: 51 } }, '31': { start: { line: 59, column: 6 }, end: { line: 59, column: 72 } } }, fnMap: { '0': { name: '(anonymous_0)', decl: { start: { line: 9, column: 8 }, end: { line: 9, column: 9 } }, loc: { start: { line: 9, column: 18 }, end: { line: 14, column: 3 } }, line: 9 }, '1': { name: '(anonymous_1)', decl: { start: { line: 16, column: 19 }, end: { line: 16, column: 20 } }, loc: { start: { line: 16, column: 25 }, end: { line: 20, column: 1 } }, line: 16 }, '2': { name: '(anonymous_2)', decl: { start: { line: 22, column: 18 }, end: { line: 22, column: 19 } }, loc: { start: { line: 22, column: 26 }, end: { line: 34, column: 1 } }, line: 22 }, '3': { name: '(anonymous_3)', decl: { start: { line: 31, column: 10 }, end: { line: 31, column: 11 } }, loc: { start: { line: 31, column: 22 }, end: { line: 33, column: 5 } }, line: 31 }, '4': { name: '(anonymous_4)', decl: { start: { line: 36, column: 20 }, end: { line: 36, column: 21 } }, loc: { start: { line: 36, column: 26 }, end: { line: 49, column: 1 } }, line: 36 }, '5': { name: '(anonymous_5)', decl: { start: { line: 39, column: 10 }, end: { line: 39, column: 11 } }, loc: { start: { line: 39, column: 22 }, end: { line: 41, column: 5 } }, line: 39 }, '6': { name: '(anonymous_6)', decl: { start: { line: 40, column: 27 }, end: { line: 40, column: 28 } }, loc: { start: { line: 40, column: 36 }, end: { line: 40, column: 54 } }, line: 40 }, '7': { name: '(anonymous_7)', decl: { start: { line: 42, column: 10 }, end: { line: 42, column: 11 } }, loc: { start: { line: 42, column: 18 }, end: { line: 48, column: 5 } }, line: 42 }, '8': { name: '(anonymous_8)', decl: { start: { line: 51, column: 21 }, end: { line: 51, column: 22 } }, loc: { start: { line: 51, column: 27 }, end: { line: 61, column: 1 } }, line: 51 }, '9': { name: '(anonymous_9)', decl: { start: { line: 55, column: 10 }, end: { line: 55, column: 11 } }, loc: { start: { line: 55, column: 22 }, end: { line: 57, column: 5 } }, line: 55 }, '10': { name: '(anonymous_10)', decl: { start: { line: 56, column: 29 }, end: { line: 56, column: 30 } }, loc: { start: { line: 56, column: 37 }, end: { line: 56, column: 51 } }, line: 56 }, '11': { name: '(anonymous_11)', decl: { start: { line: 58, column: 10 }, end: { line: 58, column: 11 } }, loc: { start: { line: 58, column: 27 }, end: { line: 60, column: 5 } }, line: 58 } }, branchMap: { '0': { loc: { start: { line: 10, column: 4 }, end: { line: 13, column: 5 } }, type: 'if', locations: [{ start: { line: 10, column: 4 }, end: { line: 13, column: 5 } }, { start: { line: 10, column: 4 }, end: { line: 13, column: 5 } }], line: 10 }, '1': { loc: { start: { line: 26, column: 2 }, end: { line: 28, column: 3 } }, type: 'if', locations: [{ start: { line: 26, column: 2 }, end: { line: 28, column: 3 } }, { start: { line: 26, column: 2 }, end: { line: 28, column: 3 } }], line: 26 }, '2': { loc: { start: { line: 43, column: 6 }, end: { line: 45, column: 7 } }, type: 'if', locations: [{ start: { line: 43, column: 6 }, end: { line: 45, column: 7 } }, { start: { line: 43, column: 6 }, end: { line: 45, column: 7 } }], line: 43 } }, s: { '0': 0, '1': 0, '2': 0, '3': 0, '4': 0, '5': 0, '6': 0, '7': 0, '8': 0, '9': 0, '10': 0, '11': 0, '12': 0, '13': 0, '14': 0, '15': 0, '16': 0, '17': 0, '18': 0, '19': 0, '20': 0, '21': 0, '22': 0, '23': 0, '24': 0, '25': 0, '26': 0, '27': 0, '28': 0, '29': 0, '30': 0, '31': 0 }, f: { '0': 0, '1': 0, '2': 0, '3': 0, '4': 0, '5': 0, '6': 0, '7': 0, '8': 0, '9': 0, '10': 0, '11': 0 }, b: { '0': [0, 0], '1': [0, 0], '2': [0, 0] }, _coverageSchema: '332fd63041d2c1bcb487cc26dd0d5f7d97098a6c' },coverage = global[gcv] || (global[gcv] = {});if (coverage[path] && coverage[path].hash === hash) {return coverage[path];}coverageData.hash = hash;return coverage[path] = coverageData;}();

const logger = /* istanbul ignore next */(cov_1c27dld0r5.s[0]++, require('./logger'));
const fsExtra = /* istanbul ignore next */(cov_1c27dld0r5.s[1]++, require('fs-extra'));

const storage = /* istanbul ignore next */(cov_1c27dld0r5.s[2]++, module.exports = {}); /* istanbul ignore next */cov_1c27dld0r5.s[3]++;

fsExtra.pathExists(process.env.STORAGE_PATH).
then(result => {/* istanbul ignore next */cov_1c27dld0r5.f[0]++;cov_1c27dld0r5.s[4]++;
  if (!result) {/* istanbul ignore next */cov_1c27dld0r5.b[0][0]++;cov_1c27dld0r5.s[5]++;
    logger.log('verbose', 'STORAGE - creating an empty file'); /* istanbul ignore next */cov_1c27dld0r5.s[6]++;
    fsExtra.writeJSON(process.env.STORAGE_PATH, []);
  } else /* istanbul ignore next */{cov_1c27dld0r5.b[0][1]++;}
}); /* istanbul ignore next */cov_1c27dld0r5.s[7]++;

storage.fetchAll = () => {/* istanbul ignore next */cov_1c27dld0r5.f[1]++;cov_1c27dld0r5.s[8]++;
  console.log('AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA'); /* istanbul ignore next */cov_1c27dld0r5.s[9]++;
  logger.log('verbose', 'STORAGE - fetching all files'); /* istanbul ignore next */cov_1c27dld0r5.s[10]++;
  return fsExtra.readJSON(process.env.STORAGE_PATH);
}; /* istanbul ignore next */cov_1c27dld0r5.s[11]++;

storage.addItem = user => {/* istanbul ignore next */cov_1c27dld0r5.f[2]++;cov_1c27dld0r5.s[12]++;
  logger.log('verbose', 'STORAGE - adding the following user'); /* istanbul ignore next */cov_1c27dld0r5.s[13]++;
  logger.log('verbose', user); /* istanbul ignore next */cov_1c27dld0r5.s[14]++;

  if (!user.testId) {/* istanbul ignore next */cov_1c27dld0r5.b[1][0]++;cov_1c27dld0r5.s[15]++;
    return Promise.reject(new Error('__STORAGE_ERROR__ item must have an id'));
  } else /* istanbul ignore next */{cov_1c27dld0r5.b[1][1]++;}cov_1c27dld0r5.s[16]++;

  return storage.fetchAll().
  then(database => {/* istanbul ignore next */cov_1c27dld0r5.f[3]++;cov_1c27dld0r5.s[17]++;
    return fsExtra.writeJSON(process.env.STORAGE_PATH, [...database, user]);
  });
}; /* istanbul ignore next */cov_1c27dld0r5.s[18]++;

storage.fetchItem = id => {/* istanbul ignore next */cov_1c27dld0r5.f[4]++;cov_1c27dld0r5.s[19]++;
  logger.log('verbose', `STORAGE - fetching an item with an id ${id}`); /* istanbul ignore next */cov_1c27dld0r5.s[20]++;
  return storage.fetchAll().
  then(database => {/* istanbul ignore next */cov_1c27dld0r5.f[5]++;cov_1c27dld0r5.s[21]++;
    return database.find(user => {/* istanbul ignore next */cov_1c27dld0r5.f[6]++;cov_1c27dld0r5.s[22]++;return user.testId === id;});
  }).
  then(user => {/* istanbul ignore next */cov_1c27dld0r5.f[7]++;cov_1c27dld0r5.s[23]++;
    if (user === undefined) {/* istanbul ignore next */cov_1c27dld0r5.b[2][0]++;cov_1c27dld0r5.s[24]++;
      throw new Error('__STORAGE_ERROR__ item not found');
    } else /* istanbul ignore next */{cov_1c27dld0r5.b[2][1]++;}cov_1c27dld0r5.s[25]++;

    return user;
  });
}; /* istanbul ignore next */cov_1c27dld0r5.s[26]++;

storage.deleteItem = id => {/* istanbul ignore next */cov_1c27dld0r5.f[8]++;cov_1c27dld0r5.s[27]++;
  logger.log('verbose', `STORAGE - deleting an item with id ${id}`); /* istanbul ignore next */cov_1c27dld0r5.s[28]++;

  return storage.fetchAll().
  then(database => {/* istanbul ignore next */cov_1c27dld0r5.f[9]++;cov_1c27dld0r5.s[29]++;
    return database.filter(item => {/* istanbul ignore next */cov_1c27dld0r5.f[10]++;cov_1c27dld0r5.s[30]++;return item.id !== id;});
  }).
  then(filteredItems => {/* istanbul ignore next */cov_1c27dld0r5.f[11]++;cov_1c27dld0r5.s[31]++;
    return fsExtra.writeJSON(process.env.STORAGE_PATH, filteredItems);
  });
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInN0b3JhZ2UuanMiXSwibmFtZXMiOlsibG9nZ2VyIiwicmVxdWlyZSIsImZzRXh0cmEiLCJzdG9yYWdlIiwibW9kdWxlIiwiZXhwb3J0cyIsInBhdGhFeGlzdHMiLCJwcm9jZXNzIiwiZW52IiwiU1RPUkFHRV9QQVRIIiwidGhlbiIsInJlc3VsdCIsImxvZyIsIndyaXRlSlNPTiIsImZldGNoQWxsIiwiY29uc29sZSIsInJlYWRKU09OIiwiYWRkSXRlbSIsInVzZXIiLCJ0ZXN0SWQiLCJQcm9taXNlIiwicmVqZWN0IiwiRXJyb3IiLCJkYXRhYmFzZSIsImZldGNoSXRlbSIsImlkIiwiZmluZCIsInVuZGVmaW5lZCIsImRlbGV0ZUl0ZW0iLCJmaWx0ZXIiLCJpdGVtIiwiZmlsdGVyZWRJdGVtcyJdLCJtYXBwaW5ncyI6IkFBQUEsYTs7QUFFQSxNQUFNQSwyREFBU0MsUUFBUSxVQUFSLENBQVQsQ0FBTjtBQUNBLE1BQU1DLDREQUFVRCxRQUFRLFVBQVIsQ0FBVixDQUFOOztBQUVBLE1BQU1FLDREQUFVQyxPQUFPQyxPQUFQLEdBQWlCLEVBQTNCLENBQU4sQzs7QUFFQUgsUUFBUUksVUFBUixDQUFtQkMsUUFBUUMsR0FBUixDQUFZQyxZQUEvQjtBQUNHQyxJQURILENBQ1FDLFVBQVU7QUFDZCxNQUFJLENBQUNBLE1BQUwsRUFBYTtBQUNYWCxXQUFPWSxHQUFQLENBQVcsU0FBWCxFQUFzQixrQ0FBdEIsRUFEVztBQUVYVixZQUFRVyxTQUFSLENBQWtCTixRQUFRQyxHQUFSLENBQVlDLFlBQTlCLEVBQTRDLEVBQTVDO0FBQ0QsR0FIRDtBQUlELENBTkgsRTs7QUFRQU4sUUFBUVcsUUFBUixHQUFtQixNQUFNO0FBQ3ZCQyxVQUFRSCxHQUFSLENBQVksb0NBQVosRUFEdUI7QUFFdkJaLFNBQU9ZLEdBQVAsQ0FBVyxTQUFYLEVBQXNCLDhCQUF0QixFQUZ1QjtBQUd2QixTQUFPVixRQUFRYyxRQUFSLENBQWlCVCxRQUFRQyxHQUFSLENBQVlDLFlBQTdCLENBQVA7QUFDRCxDQUpELEM7O0FBTUFOLFFBQVFjLE9BQVIsR0FBa0JDLFFBQVE7QUFDeEJsQixTQUFPWSxHQUFQLENBQVcsU0FBWCxFQUFzQixxQ0FBdEIsRUFEd0I7QUFFeEJaLFNBQU9ZLEdBQVAsQ0FBVyxTQUFYLEVBQXNCTSxJQUF0QixFQUZ3Qjs7QUFJeEIsTUFBSSxDQUFDQSxLQUFLQyxNQUFWLEVBQWtCO0FBQ2hCLFdBQU9DLFFBQVFDLE1BQVIsQ0FBZSxJQUFJQyxLQUFKLENBQVUsd0NBQVYsQ0FBZixDQUFQO0FBQ0QsR0FGRCwyREFKd0I7O0FBUXhCLFNBQU9uQixRQUFRVyxRQUFSO0FBQ0pKLE1BREksQ0FDQ2EsWUFBWTtBQUNoQixXQUFPckIsUUFBUVcsU0FBUixDQUFrQk4sUUFBUUMsR0FBUixDQUFZQyxZQUE5QixFQUE0QyxDQUFDLEdBQUdjLFFBQUosRUFBY0wsSUFBZCxDQUE1QyxDQUFQO0FBQ0QsR0FISSxDQUFQO0FBSUQsQ0FaRCxDOztBQWNBZixRQUFRcUIsU0FBUixHQUFvQkMsTUFBTTtBQUN4QnpCLFNBQU9ZLEdBQVAsQ0FBVyxTQUFYLEVBQXVCLHlDQUF3Q2EsRUFBRyxFQUFsRSxFQUR3QjtBQUV4QixTQUFPdEIsUUFBUVcsUUFBUjtBQUNKSixNQURJLENBQ0NhLFlBQVk7QUFDaEIsV0FBT0EsU0FBU0csSUFBVCxDQUFjUixRQUFTLG9GQUFLQyxNQUFMLEtBQWdCTSxFQUFoQixDQUFrQixDQUF6QyxDQUFQO0FBQ0QsR0FISTtBQUlKZixNQUpJLENBSUNRLFFBQVE7QUFDWixRQUFJQSxTQUFTUyxTQUFiLEVBQXdCO0FBQ3RCLFlBQU0sSUFBSUwsS0FBSixDQUFVLGtDQUFWLENBQU47QUFDRCxLQUZELDJEQURZOztBQUtaLFdBQU9KLElBQVA7QUFDRCxHQVZJLENBQVA7QUFXRCxDQWJELEM7O0FBZUFmLFFBQVF5QixVQUFSLEdBQXFCSCxNQUFNO0FBQ3pCekIsU0FBT1ksR0FBUCxDQUFXLFNBQVgsRUFBdUIsc0NBQXFDYSxFQUFHLEVBQS9ELEVBRHlCOztBQUd6QixTQUFPdEIsUUFBUVcsUUFBUjtBQUNKSixNQURJLENBQ0NhLFlBQVk7QUFDaEIsV0FBT0EsU0FBU00sTUFBVCxDQUFnQkMsUUFBUSxxRkFBS0wsRUFBTCxLQUFZQSxFQUFaLENBQWMsQ0FBdEMsQ0FBUDtBQUNELEdBSEk7QUFJSmYsTUFKSSxDQUlDcUIsaUJBQWlCO0FBQ3JCLFdBQU83QixRQUFRVyxTQUFSLENBQWtCTixRQUFRQyxHQUFSLENBQVlDLFlBQTlCLEVBQTRDc0IsYUFBNUMsQ0FBUDtBQUNELEdBTkksQ0FBUDtBQU9ELENBVkQiLCJmaWxlIjoic3RvcmFnZS5qcyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuY29uc3QgbG9nZ2VyID0gcmVxdWlyZSgnLi9sb2dnZXInKTtcbmNvbnN0IGZzRXh0cmEgPSByZXF1aXJlKCdmcy1leHRyYScpO1xuXG5jb25zdCBzdG9yYWdlID0gbW9kdWxlLmV4cG9ydHMgPSB7fTtcblxuZnNFeHRyYS5wYXRoRXhpc3RzKHByb2Nlc3MuZW52LlNUT1JBR0VfUEFUSClcbiAgLnRoZW4ocmVzdWx0ID0+IHtcbiAgICBpZiAoIXJlc3VsdCkge1xuICAgICAgbG9nZ2VyLmxvZygndmVyYm9zZScsICdTVE9SQUdFIC0gY3JlYXRpbmcgYW4gZW1wdHkgZmlsZScpO1xuICAgICAgZnNFeHRyYS53cml0ZUpTT04ocHJvY2Vzcy5lbnYuU1RPUkFHRV9QQVRILCBbXSk7XG4gICAgfVxuICB9KTtcblxuc3RvcmFnZS5mZXRjaEFsbCA9ICgpID0+IHtcbiAgY29uc29sZS5sb2coJ0FBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUEnKTtcbiAgbG9nZ2VyLmxvZygndmVyYm9zZScsICdTVE9SQUdFIC0gZmV0Y2hpbmcgYWxsIGZpbGVzJyk7XG4gIHJldHVybiBmc0V4dHJhLnJlYWRKU09OKHByb2Nlc3MuZW52LlNUT1JBR0VfUEFUSCk7XG59O1xuXG5zdG9yYWdlLmFkZEl0ZW0gPSB1c2VyID0+IHtcbiAgbG9nZ2VyLmxvZygndmVyYm9zZScsICdTVE9SQUdFIC0gYWRkaW5nIHRoZSBmb2xsb3dpbmcgdXNlcicpO1xuICBsb2dnZXIubG9nKCd2ZXJib3NlJywgdXNlcik7XG5cbiAgaWYgKCF1c2VyLnRlc3RJZCkge1xuICAgIHJldHVybiBQcm9taXNlLnJlamVjdChuZXcgRXJyb3IoJ19fU1RPUkFHRV9FUlJPUl9fIGl0ZW0gbXVzdCBoYXZlIGFuIGlkJykpO1xuICB9XG5cbiAgcmV0dXJuIHN0b3JhZ2UuZmV0Y2hBbGwoKVxuICAgIC50aGVuKGRhdGFiYXNlID0+IHtcbiAgICAgIHJldHVybiBmc0V4dHJhLndyaXRlSlNPTihwcm9jZXNzLmVudi5TVE9SQUdFX1BBVEgsIFsuLi5kYXRhYmFzZSwgdXNlcl0pO1xuICAgIH0pO1xufTtcblxuc3RvcmFnZS5mZXRjaEl0ZW0gPSBpZCA9PiB7XG4gIGxvZ2dlci5sb2coJ3ZlcmJvc2UnLCBgU1RPUkFHRSAtIGZldGNoaW5nIGFuIGl0ZW0gd2l0aCBhbiBpZCAke2lkfWApO1xuICByZXR1cm4gc3RvcmFnZS5mZXRjaEFsbCgpXG4gICAgLnRoZW4oZGF0YWJhc2UgPT4ge1xuICAgICAgcmV0dXJuIGRhdGFiYXNlLmZpbmQodXNlciA9PiAgdXNlci50ZXN0SWQgPT09IGlkKTtcbiAgICB9KVxuICAgIC50aGVuKHVzZXIgPT4ge1xuICAgICAgaWYgKHVzZXIgPT09IHVuZGVmaW5lZCkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ19fU1RPUkFHRV9FUlJPUl9fIGl0ZW0gbm90IGZvdW5kJyk7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiB1c2VyO1xuICAgIH0pO1xufTtcblxuc3RvcmFnZS5kZWxldGVJdGVtID0gaWQgPT4ge1xuICBsb2dnZXIubG9nKCd2ZXJib3NlJywgYFNUT1JBR0UgLSBkZWxldGluZyBhbiBpdGVtIHdpdGggaWQgJHtpZH1gKTtcblxuICByZXR1cm4gc3RvcmFnZS5mZXRjaEFsbCgpXG4gICAgLnRoZW4oZGF0YWJhc2UgPT4ge1xuICAgICAgcmV0dXJuIGRhdGFiYXNlLmZpbHRlcihpdGVtID0+IGl0ZW0uaWQgIT09IGlkKTtcbiAgICB9KVxuICAgIC50aGVuKGZpbHRlcmVkSXRlbXMgPT4ge1xuICAgICAgcmV0dXJuIGZzRXh0cmEud3JpdGVKU09OKHByb2Nlc3MuZW52LlNUT1JBR0VfUEFUSCwgZmlsdGVyZWRJdGVtcyk7XG4gICAgfSk7XG59O1xuIl19