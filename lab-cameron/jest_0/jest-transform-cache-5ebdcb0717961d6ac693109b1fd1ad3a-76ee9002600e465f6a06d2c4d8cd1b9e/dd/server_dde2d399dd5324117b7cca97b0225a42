9cdbce1d5ddd3f6124bd7809bb648c64
'use strict'; /* istanbul ignore next */var cov_143y90mr = function () {var path = '/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/server.js',hash = '7af1d6c1ef2aa46da28a0368134db87313bd6abd',global = new Function('return this')(),gcv = '__coverage__',coverageData = { path: '/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/server.js', statementMap: { '0': { start: { line: 3, column: 0 }, end: { line: 3, column: 27 } }, '1': { start: { line: 5, column: 13 }, end: { line: 5, column: 28 } }, '2': { start: { line: 6, column: 15 }, end: { line: 6, column: 34 } }, '3': { start: { line: 7, column: 15 }, end: { line: 7, column: 34 } }, '4': { start: { line: 9, column: 13 }, end: { line: 9, column: 29 } }, '5': { start: { line: 11, column: 0 }, end: { line: 11, column: 32 } }, '6': { start: { line: 13, column: 12 }, end: { line: 13, column: 43 } }, '7': { start: { line: 15, column: 17 }, end: { line: 15, column: 22 } }, '8': { start: { line: 17, column: 15 }, end: { line: 17, column: 34 } }, '9': { start: { line: 19, column: 0 }, end: { line: 40, column: 2 } }, '10': { start: { line: 20, column: 2 }, end: { line: 39, column: 5 } }, '11': { start: { line: 21, column: 4 }, end: { line: 24, column: 5 } }, '12': { start: { line: 22, column: 6 }, end: { line: 22, column: 72 } }, '13': { start: { line: 23, column: 6 }, end: { line: 23, column: 77 } }, '14': { start: { line: 25, column: 4 }, end: { line: 28, column: 5 } }, '15': { start: { line: 26, column: 6 }, end: { line: 26, column: 69 } }, '16': { start: { line: 27, column: 6 }, end: { line: 27, column: 74 } }, '17': { start: { line: 29, column: 4 }, end: { line: 38, column: 7 } }, '18': { start: { line: 30, column: 6 }, end: { line: 32, column: 7 } }, '19': { start: { line: 31, column: 8 }, end: { line: 31, column: 29 } }, '20': { start: { line: 34, column: 6 }, end: { line: 34, column: 24 } }, '21': { start: { line: 35, column: 6 }, end: { line: 35, column: 73 } }, '22': { start: { line: 36, column: 6 }, end: { line: 36, column: 66 } }, '23': { start: { line: 37, column: 6 }, end: { line: 37, column: 23 } }, '24': { start: { line: 42, column: 0 }, end: { line: 59, column: 2 } }, '25': { start: { line: 43, column: 2 }, end: { line: 58, column: 5 } }, '26': { start: { line: 44, column: 4 }, end: { line: 47, column: 5 } }, '27': { start: { line: 45, column: 6 }, end: { line: 45, column: 68 } }, '28': { start: { line: 46, column: 6 }, end: { line: 46, column: 73 } }, '29': { start: { line: 48, column: 4 }, end: { line: 57, column: 7 } }, '30': { start: { line: 49, column: 6 }, end: { line: 54, column: 7 } }, '31': { start: { line: 50, column: 8 }, end: { line: 50, column: 70 } }, '32': { start: { line: 51, column: 8 }, end: { line: 51, column: 35 } }, '33': { start: { line: 53, column: 8 }, end: { line: 53, column: 29 } }, '34': { start: { line: 55, column: 6 }, end: { line: 55, column: 25 } }, '35': { start: { line: 56, column: 6 }, end: { line: 56, column: 23 } } }, fnMap: { '0': { name: '(anonymous_0)', decl: { start: { line: 19, column: 15 }, end: { line: 19, column: 16 } }, loc: { start: { line: 19, column: 21 }, end: { line: 40, column: 1 } }, line: 19 }, '1': { name: '(anonymous_1)', decl: { start: { line: 20, column: 21 }, end: { line: 20, column: 22 } }, loc: { start: { line: 20, column: 42 }, end: { line: 39, column: 3 } }, line: 20 }, '2': { name: '(anonymous_2)', decl: { start: { line: 29, column: 21 }, end: { line: 29, column: 22 } }, loc: { start: { line: 29, column: 30 }, end: { line: 38, column: 5 } }, line: 29 }, '3': { name: '(anonymous_3)', decl: { start: { line: 42, column: 14 }, end: { line: 42, column: 15 } }, loc: { start: { line: 42, column: 20 }, end: { line: 59, column: 1 } }, line: 42 }, '4': { name: '(anonymous_4)', decl: { start: { line: 43, column: 21 }, end: { line: 43, column: 22 } }, loc: { start: { line: 43, column: 42 }, end: { line: 58, column: 3 } }, line: 43 }, '5': { name: '(anonymous_5)', decl: { start: { line: 48, column: 14 }, end: { line: 48, column: 15 } }, loc: { start: { line: 48, column: 23 }, end: { line: 57, column: 5 } }, line: 48 } }, branchMap: { '0': { loc: { start: { line: 21, column: 4 }, end: { line: 24, column: 5 } }, type: 'if', locations: [{ start: { line: 21, column: 4 }, end: { line: 24, column: 5 } }, { start: { line: 21, column: 4 }, end: { line: 24, column: 5 } }], line: 21 }, '1': { loc: { start: { line: 25, column: 4 }, end: { line: 28, column: 5 } }, type: 'if', locations: [{ start: { line: 25, column: 4 }, end: { line: 28, column: 5 } }, { start: { line: 25, column: 4 }, end: { line: 28, column: 5 } }], line: 25 }, '2': { loc: { start: { line: 30, column: 6 }, end: { line: 32, column: 7 } }, type: 'if', locations: [{ start: { line: 30, column: 6 }, end: { line: 32, column: 7 } }, { start: { line: 30, column: 6 }, end: { line: 32, column: 7 } }], line: 30 }, '3': { loc: { start: { line: 44, column: 4 }, end: { line: 47, column: 5 } }, type: 'if', locations: [{ start: { line: 44, column: 4 }, end: { line: 47, column: 5 } }, { start: { line: 44, column: 4 }, end: { line: 47, column: 5 } }], line: 44 }, '4': { loc: { start: { line: 49, column: 6 }, end: { line: 54, column: 7 } }, type: 'if', locations: [{ start: { line: 49, column: 6 }, end: { line: 54, column: 7 } }, { start: { line: 49, column: 6 }, end: { line: 54, column: 7 } }], line: 49 } }, s: { '0': 0, '1': 0, '2': 0, '3': 0, '4': 0, '5': 0, '6': 0, '7': 0, '8': 0, '9': 0, '10': 0, '11': 0, '12': 0, '13': 0, '14': 0, '15': 0, '16': 0, '17': 0, '18': 0, '19': 0, '20': 0, '21': 0, '22': 0, '23': 0, '24': 0, '25': 0, '26': 0, '27': 0, '28': 0, '29': 0, '30': 0, '31': 0, '32': 0, '33': 0, '34': 0, '35': 0 }, f: { '0': 0, '1': 0, '2': 0, '3': 0, '4': 0, '5': 0 }, b: { '0': [0, 0], '1': [0, 0], '2': [0, 0], '3': [0, 0], '4': [0, 0] }, _coverageSchema: '332fd63041d2c1bcb487cc26dd0d5f7d97098a6c' },coverage = global[gcv] || (global[gcv] = {});if (coverage[path] && coverage[path].hash === hash) {return coverage[path];}coverageData.hash = hash;return coverage[path] = coverageData;}();cov_143y90mr.s[0]++;

require('dotenv').config();

const http = /* istanbul ignore next */(cov_143y90mr.s[1]++, require('http'));
const logger = /* istanbul ignore next */(cov_143y90mr.s[2]++, require('./logger'));
const router = /* istanbul ignore next */(cov_143y90mr.s[3]++, require('./router'));

const PORT = /* istanbul ignore next */(cov_143y90mr.s[4]++, process.env.PORT); /* istanbul ignore next */cov_143y90mr.s[5]++;

require('../route/user-router');

const app = /* istanbul ignore next */(cov_143y90mr.s[6]++, http.createServer(router.route));

let isServerOn = /* istanbul ignore next */(cov_143y90mr.s[7]++, false);

const server = /* istanbul ignore next */(cov_143y90mr.s[8]++, module.exports = {}); /* istanbul ignore next */cov_143y90mr.s[9]++;

server.start = () => {/* istanbul ignore next */cov_143y90mr.f[0]++;cov_143y90mr.s[10]++;
  return new Promise((resolve, reject) => {/* istanbul ignore next */cov_143y90mr.f[1]++;cov_143y90mr.s[11]++;
    if (isServerOn) {/* istanbul ignore next */cov_143y90mr.b[0][0]++;cov_143y90mr.s[12]++;
      logger.log('error', '__SERVER_ERROR__ server is already running'); /* istanbul ignore next */cov_143y90mr.s[13]++;
      return reject(new Error('__SERVER_ERROR__ server is already running'));
    } else /* istanbul ignore next */{cov_143y90mr.b[0][1]++;}cov_143y90mr.s[14]++;
    if (!PORT) {/* istanbul ignore next */cov_143y90mr.b[1][0]++;cov_143y90mr.s[15]++;
      logger.log('error', '__SERVER_ERROR__ PORT is not configured'); /* istanbul ignore next */cov_143y90mr.s[16]++;
      return reject(new Error('__SERVER_ERROR__ PORT is not configured'));
    } else /* istanbul ignore next */{cov_143y90mr.b[1][1]++;}cov_143y90mr.s[17]++;
    app.listen(PORT, error => {/* istanbul ignore next */cov_143y90mr.f[2]++;cov_143y90mr.s[18]++;
      if (error) {/* istanbul ignore next */cov_143y90mr.b[2][0]++;cov_143y90mr.s[19]++;
        return reject(error);
      } else /* istanbul ignore next */{cov_143y90mr.b[2][1]++;}cov_143y90mr.s[20]++;

      isServerOn = true; /* istanbul ignore next */cov_143y90mr.s[21]++;
      logger.log('info', `Server is online on port ${process.env.PORT}`); /* istanbul ignore next */cov_143y90mr.s[22]++;
      console.log(`Server is online on port ${process.env.PORT}`); /* istanbul ignore next */cov_143y90mr.s[23]++;
      return resolve();
    });
  });
}; /* istanbul ignore next */cov_143y90mr.s[24]++;

server.stop = () => {/* istanbul ignore next */cov_143y90mr.f[3]++;cov_143y90mr.s[25]++;
  return new Promise((resolve, reject) => {/* istanbul ignore next */cov_143y90mr.f[4]++;cov_143y90mr.s[26]++;
    if (!isServerOn) {/* istanbul ignore next */cov_143y90mr.b[3][0]++;cov_143y90mr.s[27]++;
      logger.log('error', '__SERVER_ERROR__ server is already off'); /* istanbul ignore next */cov_143y90mr.s[28]++;
      return reject(new Error('__SERVER_ERROR__ server is already off'));
    } else /* istanbul ignore next */{cov_143y90mr.b[3][1]++;}cov_143y90mr.s[29]++;
    app.close(error => {/* istanbul ignore next */cov_143y90mr.f[5]++;cov_143y90mr.s[30]++;
      if (!isServerOn) {/* istanbul ignore next */cov_143y90mr.b[4][0]++;cov_143y90mr.s[31]++;
        logger.log('error', '__SERVER_ERROR__ server is already off'); /* istanbul ignore next */cov_143y90mr.s[32]++;
        logger.log('error', error); /* istanbul ignore next */cov_143y90mr.s[33]++;

        return reject(error);
      } else /* istanbul ignore next */{cov_143y90mr.b[4][1]++;}cov_143y90mr.s[34]++;
      isServerOn = false; /* istanbul ignore next */cov_143y90mr.s[35]++;
      return resolve();
    });
  });
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlcnZlci5qcyJdLCJuYW1lcyI6WyJyZXF1aXJlIiwiY29uZmlnIiwiaHR0cCIsImxvZ2dlciIsInJvdXRlciIsIlBPUlQiLCJwcm9jZXNzIiwiZW52IiwiYXBwIiwiY3JlYXRlU2VydmVyIiwicm91dGUiLCJpc1NlcnZlck9uIiwic2VydmVyIiwibW9kdWxlIiwiZXhwb3J0cyIsInN0YXJ0IiwiUHJvbWlzZSIsInJlc29sdmUiLCJyZWplY3QiLCJsb2ciLCJFcnJvciIsImxpc3RlbiIsImVycm9yIiwiY29uc29sZSIsInN0b3AiLCJjbG9zZSJdLCJtYXBwaW5ncyI6IkFBQUEsYTs7QUFFQUEsUUFBUSxRQUFSLEVBQWtCQyxNQUFsQjs7QUFFQSxNQUFNQyx1REFBT0YsUUFBUSxNQUFSLENBQVAsQ0FBTjtBQUNBLE1BQU1HLHlEQUFTSCxRQUFRLFVBQVIsQ0FBVCxDQUFOO0FBQ0EsTUFBTUkseURBQVNKLFFBQVEsVUFBUixDQUFULENBQU47O0FBRUEsTUFBTUssdURBQU9DLFFBQVFDLEdBQVIsQ0FBWUYsSUFBbkIsQ0FBTixDOztBQUVBTCxRQUFRLHNCQUFSOztBQUVBLE1BQU1RLHNEQUFNTixLQUFLTyxZQUFMLENBQWtCTCxPQUFPTSxLQUF6QixDQUFOLENBQU47O0FBRUEsSUFBSUMsNkRBQWEsS0FBYixDQUFKOztBQUVBLE1BQU1DLHlEQUFTQyxPQUFPQyxPQUFQLEdBQWlCLEVBQTFCLENBQU4sQzs7QUFFQUYsT0FBT0csS0FBUCxHQUFlLE1BQU07QUFDbkIsU0FBTyxJQUFJQyxPQUFKLENBQVksQ0FBQ0MsT0FBRCxFQUFVQyxNQUFWLEtBQXFCO0FBQ3RDLFFBQUlQLFVBQUosRUFBZ0I7QUFDZFIsYUFBT2dCLEdBQVAsQ0FBVyxPQUFYLEVBQW9CLDRDQUFwQixFQURjO0FBRWQsYUFBT0QsT0FBTyxJQUFJRSxLQUFKLENBQVUsNENBQVYsQ0FBUCxDQUFQO0FBQ0QsS0FIRCx5REFEc0M7QUFLdEMsUUFBSSxDQUFDZixJQUFMLEVBQVc7QUFDVEYsYUFBT2dCLEdBQVAsQ0FBVyxPQUFYLEVBQW9CLHlDQUFwQixFQURTO0FBRVQsYUFBT0QsT0FBTyxJQUFJRSxLQUFKLENBQVUseUNBQVYsQ0FBUCxDQUFQO0FBQ0QsS0FIRCx5REFMc0M7QUFTdENaLFFBQUlhLE1BQUosQ0FBV2hCLElBQVgsRUFBaUJpQixTQUFTO0FBQ3hCLFVBQUlBLEtBQUosRUFBVztBQUNULGVBQU9KLE9BQU9JLEtBQVAsQ0FBUDtBQUNELE9BRkQseURBRHdCOztBQUt4QlgsbUJBQWEsSUFBYixDQUx3QjtBQU14QlIsYUFBT2dCLEdBQVAsQ0FBVyxNQUFYLEVBQW9CLDRCQUEyQmIsUUFBUUMsR0FBUixDQUFZRixJQUFLLEVBQWhFLEVBTndCO0FBT3hCa0IsY0FBUUosR0FBUixDQUFhLDRCQUEyQmIsUUFBUUMsR0FBUixDQUFZRixJQUFLLEVBQXpELEVBUHdCO0FBUXhCLGFBQU9ZLFNBQVA7QUFDRCxLQVREO0FBVUQsR0FuQk0sQ0FBUDtBQW9CRCxDQXJCRCxDOztBQXVCQUwsT0FBT1ksSUFBUCxHQUFjLE1BQU07QUFDbEIsU0FBTyxJQUFJUixPQUFKLENBQVksQ0FBQ0MsT0FBRCxFQUFVQyxNQUFWLEtBQXFCO0FBQ3RDLFFBQUksQ0FBQ1AsVUFBTCxFQUFpQjtBQUNmUixhQUFPZ0IsR0FBUCxDQUFXLE9BQVgsRUFBb0Isd0NBQXBCLEVBRGU7QUFFZixhQUFPRCxPQUFPLElBQUlFLEtBQUosQ0FBVSx3Q0FBVixDQUFQLENBQVA7QUFDRCxLQUhELHlEQURzQztBQUt0Q1osUUFBSWlCLEtBQUosQ0FBVUgsU0FBUztBQUNqQixVQUFJLENBQUNYLFVBQUwsRUFBaUI7QUFDZlIsZUFBT2dCLEdBQVAsQ0FBVyxPQUFYLEVBQW9CLHdDQUFwQixFQURlO0FBRWZoQixlQUFPZ0IsR0FBUCxDQUFXLE9BQVgsRUFBb0JHLEtBQXBCLEVBRmU7O0FBSWYsZUFBT0osT0FBT0ksS0FBUCxDQUFQO0FBQ0QsT0FMRCx5REFEaUI7QUFPakJYLG1CQUFhLEtBQWIsQ0FQaUI7QUFRakIsYUFBT00sU0FBUDtBQUNELEtBVEQ7QUFVRCxHQWZNLENBQVA7QUFnQkQsQ0FqQkQiLCJmaWxlIjoic2VydmVyLmpzIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5yZXF1aXJlKCdkb3RlbnYnKS5jb25maWcoKTtcblxuY29uc3QgaHR0cCA9IHJlcXVpcmUoJ2h0dHAnKTtcbmNvbnN0IGxvZ2dlciA9IHJlcXVpcmUoJy4vbG9nZ2VyJyk7XG5jb25zdCByb3V0ZXIgPSByZXF1aXJlKCcuL3JvdXRlcicpO1xuXG5jb25zdCBQT1JUID0gcHJvY2Vzcy5lbnYuUE9SVDtcblxucmVxdWlyZSgnLi4vcm91dGUvdXNlci1yb3V0ZXInKTtcblxuY29uc3QgYXBwID0gaHR0cC5jcmVhdGVTZXJ2ZXIocm91dGVyLnJvdXRlKTtcblxubGV0IGlzU2VydmVyT24gPSBmYWxzZTtcblxuY29uc3Qgc2VydmVyID0gbW9kdWxlLmV4cG9ydHMgPSB7fTtcblxuc2VydmVyLnN0YXJ0ID0gKCkgPT4ge1xuICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuICAgIGlmIChpc1NlcnZlck9uKSB7XG4gICAgICBsb2dnZXIubG9nKCdlcnJvcicsICdfX1NFUlZFUl9FUlJPUl9fIHNlcnZlciBpcyBhbHJlYWR5IHJ1bm5pbmcnKTtcbiAgICAgIHJldHVybiByZWplY3QobmV3IEVycm9yKCdfX1NFUlZFUl9FUlJPUl9fIHNlcnZlciBpcyBhbHJlYWR5IHJ1bm5pbmcnKSk7XG4gICAgfVxuICAgIGlmICghUE9SVCkge1xuICAgICAgbG9nZ2VyLmxvZygnZXJyb3InLCAnX19TRVJWRVJfRVJST1JfXyBQT1JUIGlzIG5vdCBjb25maWd1cmVkJyk7XG4gICAgICByZXR1cm4gcmVqZWN0KG5ldyBFcnJvcignX19TRVJWRVJfRVJST1JfXyBQT1JUIGlzIG5vdCBjb25maWd1cmVkJykpO1xuICAgIH1cbiAgICBhcHAubGlzdGVuKFBPUlQsIGVycm9yID0+IHtcbiAgICAgIGlmIChlcnJvcikge1xuICAgICAgICByZXR1cm4gcmVqZWN0KGVycm9yKTtcbiAgICAgIH1cblxuICAgICAgaXNTZXJ2ZXJPbiA9IHRydWU7XG4gICAgICBsb2dnZXIubG9nKCdpbmZvJywgYFNlcnZlciBpcyBvbmxpbmUgb24gcG9ydCAke3Byb2Nlc3MuZW52LlBPUlR9YCk7XG4gICAgICBjb25zb2xlLmxvZyhgU2VydmVyIGlzIG9ubGluZSBvbiBwb3J0ICR7cHJvY2Vzcy5lbnYuUE9SVH1gKTtcbiAgICAgIHJldHVybiByZXNvbHZlKCk7XG4gICAgfSk7XG4gIH0pO1xufTtcblxuc2VydmVyLnN0b3AgPSAoKSA9PiB7XG4gIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG4gICAgaWYgKCFpc1NlcnZlck9uKSB7XG4gICAgICBsb2dnZXIubG9nKCdlcnJvcicsICdfX1NFUlZFUl9FUlJPUl9fIHNlcnZlciBpcyBhbHJlYWR5IG9mZicpO1xuICAgICAgcmV0dXJuIHJlamVjdChuZXcgRXJyb3IoJ19fU0VSVkVSX0VSUk9SX18gc2VydmVyIGlzIGFscmVhZHkgb2ZmJykpO1xuICAgIH1cbiAgICBhcHAuY2xvc2UoZXJyb3IgPT4ge1xuICAgICAgaWYgKCFpc1NlcnZlck9uKSB7XG4gICAgICAgIGxvZ2dlci5sb2coJ2Vycm9yJywgJ19fU0VSVkVSX0VSUk9SX18gc2VydmVyIGlzIGFscmVhZHkgb2ZmJyk7XG4gICAgICAgIGxvZ2dlci5sb2coJ2Vycm9yJywgZXJyb3IpO1xuXG4gICAgICAgIHJldHVybiByZWplY3QoZXJyb3IpO1xuICAgICAgfVxuICAgICAgaXNTZXJ2ZXJPbiA9IGZhbHNlO1xuICAgICAgcmV0dXJuIHJlc29sdmUoKTtcbiAgICB9KTtcbiAgfSk7XG59O1xuIl19