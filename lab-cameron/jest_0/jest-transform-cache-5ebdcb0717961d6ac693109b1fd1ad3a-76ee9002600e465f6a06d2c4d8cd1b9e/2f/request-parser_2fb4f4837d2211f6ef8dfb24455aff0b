780a9f46578deeb170556a7915fa3827
'use strict'; /* istanbul ignore next */var cov_1x5j0hv4dy = function () {var path = '/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/request-parser.js',hash = 'a7da8f75049de4238639339ca8d4c7f7c63637e8',global = new Function('return this')(),gcv = '__coverage__',coverageData = { path: '/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/request-parser.js', statementMap: { '0': { start: { line: 3, column: 18 }, end: { line: 3, column: 32 } }, '1': { start: { line: 4, column: 15 }, end: { line: 4, column: 34 } }, '2': { start: { line: 6, column: 22 }, end: { line: 6, column: 41 } }, '3': { start: { line: 8, column: 0 }, end: { line: 35, column: 2 } }, '4': { start: { line: 9, column: 2 }, end: { line: 34, column: 5 } }, '5': { start: { line: 10, column: 4 }, end: { line: 10, column: 72 } }, '6': { start: { line: 11, column: 4 }, end: { line: 11, column: 53 } }, '7': { start: { line: 12, column: 4 }, end: { line: 12, column: 70 } }, '8': { start: { line: 14, column: 4 }, end: { line: 16, column: 5 } }, '9': { start: { line: 15, column: 6 }, end: { line: 15, column: 30 } }, '10': { start: { line: 17, column: 19 }, end: { line: 17, column: 21 } }, '11': { start: { line: 18, column: 4 }, end: { line: 20, column: 7 } }, '12': { start: { line: 19, column: 6 }, end: { line: 19, column: 36 } }, '13': { start: { line: 22, column: 4 }, end: { line: 33, column: 7 } }, '14': { start: { line: 23, column: 6 }, end: { line: 32, column: 7 } }, '15': { start: { line: 24, column: 8 }, end: { line: 29, column: 9 } }, '16': { start: { line: 25, column: 10 }, end: { line: 25, column: 46 } }, '17': { start: { line: 26, column: 10 }, end: { line: 26, column: 34 } }, '18': { start: { line: 28, column: 10 }, end: { line: 28, column: 33 } }, '19': { start: { line: 31, column: 8 }, end: { line: 31, column: 29 } } }, fnMap: { '0': { name: '(anonymous_0)', decl: { start: { line: 8, column: 22 }, end: { line: 8, column: 23 } }, loc: { start: { line: 8, column: 35 }, end: { line: 35, column: 1 } }, line: 8 }, '1': { name: '(anonymous_1)', decl: { start: { line: 9, column: 21 }, end: { line: 9, column: 22 } }, loc: { start: { line: 9, column: 42 }, end: { line: 34, column: 3 } }, line: 9 }, '2': { name: '(anonymous_2)', decl: { start: { line: 18, column: 23 }, end: { line: 18, column: 24 } }, loc: { start: { line: 18, column: 33 }, end: { line: 20, column: 5 } }, line: 18 }, '3': { name: '(anonymous_3)', decl: { start: { line: 22, column: 22 }, end: { line: 22, column: 23 } }, loc: { start: { line: 22, column: 28 }, end: { line: 33, column: 5 } }, line: 22 } }, branchMap: { '0': { loc: { start: { line: 14, column: 4 }, end: { line: 16, column: 5 } }, type: 'if', locations: [{ start: { line: 14, column: 4 }, end: { line: 16, column: 5 } }, { start: { line: 14, column: 4 }, end: { line: 16, column: 5 } }], line: 14 }, '1': { loc: { start: { line: 14, column: 8 }, end: { line: 14, column: 61 } }, type: 'binary-expr', locations: [{ start: { line: 14, column: 8 }, end: { line: 14, column: 33 } }, { start: { line: 14, column: 37 }, end: { line: 14, column: 61 } }], line: 14 }, '2': { loc: { start: { line: 24, column: 8 }, end: { line: 29, column: 9 } }, type: 'if', locations: [{ start: { line: 24, column: 8 }, end: { line: 29, column: 9 } }, { start: { line: 24, column: 8 }, end: { line: 29, column: 9 } }], line: 24 } }, s: { '0': 0, '1': 0, '2': 0, '3': 0, '4': 0, '5': 0, '6': 0, '7': 0, '8': 0, '9': 0, '10': 0, '11': 0, '12': 0, '13': 0, '14': 0, '15': 0, '16': 0, '17': 0, '18': 0, '19': 0 }, f: { '0': 0, '1': 0, '2': 0, '3': 0 }, b: { '0': [0, 0], '1': [0, 0], '2': [0, 0] }, _coverageSchema: '332fd63041d2c1bcb487cc26dd0d5f7d97098a6c' },coverage = global[gcv] || (global[gcv] = {});if (coverage[path] && coverage[path].hash === hash) {return coverage[path];}coverageData.hash = hash;return coverage[path] = coverageData;}();

const urlModule = /* istanbul ignore next */(cov_1x5j0hv4dy.s[0]++, require('url'));
const logger = /* istanbul ignore next */(cov_1x5j0hv4dy.s[1]++, require('./logger'));

const requestParser = /* istanbul ignore next */(cov_1x5j0hv4dy.s[2]++, module.exports = {}); /* istanbul ignore next */cov_1x5j0hv4dy.s[3]++;

requestParser.parse = request => {/* istanbul ignore next */cov_1x5j0hv4dy.f[0]++;cov_1x5j0hv4dy.s[4]++;
  return new Promise((resolve, reject) => {/* istanbul ignore next */cov_1x5j0hv4dy.f[1]++;cov_1x5j0hv4dy.s[5]++;
    logger.log('debug', `Original URL: ${JSON.stringify(request.url)}`); /* istanbul ignore next */cov_1x5j0hv4dy.s[6]++;
    request.url = urlModule.parse(request.url, true); /* istanbul ignore next */cov_1x5j0hv4dy.s[7]++;
    logger.log('debug', `Parsed URL: ${JSON.stringify(request.url)}`); /* istanbul ignore next */cov_1x5j0hv4dy.s[8]++;

    if ( /* istanbul ignore next */(cov_1x5j0hv4dy.b[1][0]++, request.method !== 'POST') && /* istanbul ignore next */(cov_1x5j0hv4dy.b[1][1]++, request.method !== 'PUT')) {/* istanbul ignore next */cov_1x5j0hv4dy.b[0][0]++;cov_1x5j0hv4dy.s[9]++;
      return resolve(request);
    } else /* istanbul ignore next */{cov_1x5j0hv4dy.b[0][1]++;}
    let sentText = /* istanbul ignore next */(cov_1x5j0hv4dy.s[10]++, ''); /* istanbul ignore next */cov_1x5j0hv4dy.s[11]++;
    request.on('data', buffer => {/* istanbul ignore next */cov_1x5j0hv4dy.f[2]++;cov_1x5j0hv4dy.s[12]++;
      sentText += buffer.toString();
    }); /* istanbul ignore next */cov_1x5j0hv4dy.s[13]++;

    request.on('end', () => {/* istanbul ignore next */cov_1x5j0hv4dy.f[3]++;cov_1x5j0hv4dy.s[14]++;
      try {/* istanbul ignore next */cov_1x5j0hv4dy.s[15]++;
        if (request.headers['content-type'].indexOf('application/json') > -1) {/* istanbul ignore next */cov_1x5j0hv4dy.b[2][0]++;cov_1x5j0hv4dy.s[16]++;
          request.body = JSON.parse(sentText); /* istanbul ignore next */cov_1x5j0hv4dy.s[17]++;
          return resolve(request);
        } else {/* istanbul ignore next */cov_1x5j0hv4dy.b[2][1]++;cov_1x5j0hv4dy.s[18]++;
          return reject(request);
        }
      } catch (error) {/* istanbul ignore next */cov_1x5j0hv4dy.s[19]++;
        return reject(error);
      }
    });
  });
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJlcXVlc3QtcGFyc2VyLmpzIl0sIm5hbWVzIjpbInVybE1vZHVsZSIsInJlcXVpcmUiLCJsb2dnZXIiLCJyZXF1ZXN0UGFyc2VyIiwibW9kdWxlIiwiZXhwb3J0cyIsInBhcnNlIiwicmVxdWVzdCIsIlByb21pc2UiLCJyZXNvbHZlIiwicmVqZWN0IiwibG9nIiwiSlNPTiIsInN0cmluZ2lmeSIsInVybCIsIm1ldGhvZCIsInNlbnRUZXh0Iiwib24iLCJidWZmZXIiLCJ0b1N0cmluZyIsImhlYWRlcnMiLCJpbmRleE9mIiwiYm9keSIsImVycm9yIl0sIm1hcHBpbmdzIjoiQUFBQSxhOztBQUVBLE1BQU1BLDhEQUFZQyxRQUFRLEtBQVIsQ0FBWixDQUFOO0FBQ0EsTUFBTUMsMkRBQVNELFFBQVEsVUFBUixDQUFULENBQU47O0FBRUEsTUFBTUUsa0VBQWdCQyxPQUFPQyxPQUFQLEdBQWlCLEVBQWpDLENBQU4sQzs7QUFFQUYsY0FBY0csS0FBZCxHQUF1QkMsT0FBRCxJQUFhO0FBQ2pDLFNBQU8sSUFBSUMsT0FBSixDQUFZLENBQUNDLE9BQUQsRUFBVUMsTUFBVixLQUFxQjtBQUN0Q1IsV0FBT1MsR0FBUCxDQUFXLE9BQVgsRUFBcUIsaUJBQWdCQyxLQUFLQyxTQUFMLENBQWVOLFFBQVFPLEdBQXZCLENBQTRCLEVBQWpFLEVBRHNDO0FBRXRDUCxZQUFRTyxHQUFSLEdBQWNkLFVBQVVNLEtBQVYsQ0FBZ0JDLFFBQVFPLEdBQXhCLEVBQTZCLElBQTdCLENBQWQsQ0FGc0M7QUFHdENaLFdBQU9TLEdBQVAsQ0FBVyxPQUFYLEVBQXFCLGVBQWNDLEtBQUtDLFNBQUwsQ0FBZU4sUUFBUU8sR0FBdkIsQ0FBNEIsRUFBL0QsRUFIc0M7O0FBS3RDLFFBQUksOERBQVFDLE1BQVIsS0FBbUIsTUFBbkIsMERBQTZCUixRQUFRUSxNQUFSLEtBQW1CLEtBQWhELENBQUosRUFBMkQ7QUFDekQsYUFBT04sUUFBUUYsT0FBUixDQUFQO0FBQ0QsS0FGRDtBQUdBLFFBQUlTLDhEQUFXLEVBQVgsQ0FBSixDQVJzQztBQVN0Q1QsWUFBUVUsRUFBUixDQUFXLE1BQVgsRUFBbUJDLFVBQVU7QUFDM0JGLGtCQUFZRSxPQUFPQyxRQUFQLEVBQVo7QUFDRCxLQUZELEVBVHNDOztBQWF0Q1osWUFBUVUsRUFBUixDQUFXLEtBQVgsRUFBa0IsTUFBTTtBQUN0QixVQUFHO0FBQ0QsWUFBR1YsUUFBUWEsT0FBUixDQUFnQixjQUFoQixFQUFnQ0MsT0FBaEMsQ0FBd0Msa0JBQXhDLElBQThELENBQUMsQ0FBbEUsRUFBcUU7QUFDbkVkLGtCQUFRZSxJQUFSLEdBQWVWLEtBQUtOLEtBQUwsQ0FBV1UsUUFBWCxDQUFmLENBRG1FO0FBRW5FLGlCQUFPUCxRQUFRRixPQUFSLENBQVA7QUFDRCxTQUhELE1BR087QUFDTCxpQkFBT0csT0FBT0gsT0FBUCxDQUFQO0FBQ0Q7QUFDRixPQVBELENBT0UsT0FBT2dCLEtBQVAsRUFBYztBQUNkLGVBQU9iLE9BQU9hLEtBQVAsQ0FBUDtBQUNEO0FBQ0YsS0FYRDtBQVlELEdBekJNLENBQVA7QUEwQkQsQ0EzQkQiLCJmaWxlIjoicmVxdWVzdC1wYXJzZXIuanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmNvbnN0IHVybE1vZHVsZSA9IHJlcXVpcmUoJ3VybCcpO1xuY29uc3QgbG9nZ2VyID0gcmVxdWlyZSgnLi9sb2dnZXInKTtcblxuY29uc3QgcmVxdWVzdFBhcnNlciA9IG1vZHVsZS5leHBvcnRzID0ge307XG5cbnJlcXVlc3RQYXJzZXIucGFyc2UgPSAocmVxdWVzdCkgPT4ge1xuICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuICAgIGxvZ2dlci5sb2coJ2RlYnVnJywgYE9yaWdpbmFsIFVSTDogJHtKU09OLnN0cmluZ2lmeShyZXF1ZXN0LnVybCl9YCk7XG4gICAgcmVxdWVzdC51cmwgPSB1cmxNb2R1bGUucGFyc2UocmVxdWVzdC51cmwsIHRydWUpO1xuICAgIGxvZ2dlci5sb2coJ2RlYnVnJywgYFBhcnNlZCBVUkw6ICR7SlNPTi5zdHJpbmdpZnkocmVxdWVzdC51cmwpfWApO1xuXG4gICAgaWYgKHJlcXVlc3QubWV0aG9kICE9PSAnUE9TVCcgJiYgcmVxdWVzdC5tZXRob2QgIT09ICdQVVQnKSB7XG4gICAgICByZXR1cm4gcmVzb2x2ZShyZXF1ZXN0KTtcbiAgICB9XG4gICAgbGV0IHNlbnRUZXh0ID0gJyc7XG4gICAgcmVxdWVzdC5vbignZGF0YScsIGJ1ZmZlciA9PiB7XG4gICAgICBzZW50VGV4dCArPSBidWZmZXIudG9TdHJpbmcoKTtcbiAgICB9KTtcblxuICAgIHJlcXVlc3Qub24oJ2VuZCcsICgpID0+IHtcbiAgICAgIHRyeXtcbiAgICAgICAgaWYocmVxdWVzdC5oZWFkZXJzWydjb250ZW50LXR5cGUnXS5pbmRleE9mKCdhcHBsaWNhdGlvbi9qc29uJykgPiAtMSkge1xuICAgICAgICAgIHJlcXVlc3QuYm9keSA9IEpTT04ucGFyc2Uoc2VudFRleHQpO1xuICAgICAgICAgIHJldHVybiByZXNvbHZlKHJlcXVlc3QpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHJldHVybiByZWplY3QocmVxdWVzdCk7XG4gICAgICAgIH1cbiAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgIHJldHVybiByZWplY3QoZXJyb3IpO1xuICAgICAgfVxuICAgIH0pO1xuICB9KTtcbn07XG4iXX0=