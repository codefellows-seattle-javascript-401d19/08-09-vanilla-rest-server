{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T06:06:40.998Z"}
{"level":"info","message":"/api/wizards","timestamp":"2017-12-07T06:06:40.999Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22avey43vl.f[2]++;cov_22avey43vl.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_22avey43vl.b[0][0]++;cov_22avey43vl.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_22avey43vl.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_22avey43vl.b[0][1]++;}cov_22avey43vl.s[19]++;\n  if (!request.body.title) {/* istanbul ignore next */cov_22avey43vl.b[1][0]++;cov_22avey43vl.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_22avey43vl.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_22avey43vl.b[1][1]++;}cov_22avey43vl.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_22avey43vl.b[2][0]++;cov_22avey43vl.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_22avey43vl.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_22avey43vl.b[2][1]++;}\n\n  let wizard = /* istanbul ignore next */(cov_22avey43vl.s[25]++, new Wizard(request.body.title, request.body.content)); /* istanbul ignore next */cov_22avey43vl.s[26]++;\n  wizards.push(wizard); /* istanbul ignore next */cov_22avey43vl.s[27]++;\n  sendJSON(response, 200, wizard);\n}","timestamp":"2017-12-07T06:06:40.999Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T06:06:41.065Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T06:06:41.132Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T06:06:41.133Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22avey43vl.f[2]++;cov_22avey43vl.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_22avey43vl.b[0][0]++;cov_22avey43vl.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_22avey43vl.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_22avey43vl.b[0][1]++;}cov_22avey43vl.s[19]++;\n  if (!request.body.title) {/* istanbul ignore next */cov_22avey43vl.b[1][0]++;cov_22avey43vl.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_22avey43vl.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_22avey43vl.b[1][1]++;}cov_22avey43vl.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_22avey43vl.b[2][0]++;cov_22avey43vl.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_22avey43vl.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_22avey43vl.b[2][1]++;}\n\n  let wizard = /* istanbul ignore next */(cov_22avey43vl.s[25]++, new Wizard(request.body.title, request.body.content)); /* istanbul ignore next */cov_22avey43vl.s[26]++;\n  wizards.push(wizard); /* istanbul ignore next */cov_22avey43vl.s[27]++;\n  sendJSON(response, 200, wizard);\n}","timestamp":"2017-12-07T06:06:41.133Z"}
{"level":"info","message":"Responding with a 400 code due to title not found","timestamp":"2017-12-07T06:06:41.133Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T06:08:56.249Z"}
{"level":"info","message":"/api/wizards","timestamp":"2017-12-07T06:08:56.250Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22avey43vl.f[2]++;cov_22avey43vl.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_22avey43vl.b[0][0]++;cov_22avey43vl.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_22avey43vl.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_22avey43vl.b[0][1]++;}cov_22avey43vl.s[19]++;\n  if (!request.body.title) {/* istanbul ignore next */cov_22avey43vl.b[1][0]++;cov_22avey43vl.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_22avey43vl.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_22avey43vl.b[1][1]++;}cov_22avey43vl.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_22avey43vl.b[2][0]++;cov_22avey43vl.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_22avey43vl.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_22avey43vl.b[2][1]++;}\n\n  let wizard = /* istanbul ignore next */(cov_22avey43vl.s[25]++, new Wizard(request.body.title, request.body.content)); /* istanbul ignore next */cov_22avey43vl.s[26]++;\n  wizards.push(wizard); /* istanbul ignore next */cov_22avey43vl.s[27]++;\n  sendJSON(response, 200, wizard);\n}","timestamp":"2017-12-07T06:08:56.250Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T06:08:56.321Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T06:08:56.340Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T06:08:56.342Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22avey43vl.f[2]++;cov_22avey43vl.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_22avey43vl.b[0][0]++;cov_22avey43vl.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_22avey43vl.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_22avey43vl.b[0][1]++;}cov_22avey43vl.s[19]++;\n  if (!request.body.title) {/* istanbul ignore next */cov_22avey43vl.b[1][0]++;cov_22avey43vl.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_22avey43vl.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_22avey43vl.b[1][1]++;}cov_22avey43vl.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_22avey43vl.b[2][0]++;cov_22avey43vl.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_22avey43vl.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_22avey43vl.b[2][1]++;}\n\n  let wizard = /* istanbul ignore next */(cov_22avey43vl.s[25]++, new Wizard(request.body.title, request.body.content)); /* istanbul ignore next */cov_22avey43vl.s[26]++;\n  wizards.push(wizard); /* istanbul ignore next */cov_22avey43vl.s[27]++;\n  sendJSON(response, 200, wizard);\n}","timestamp":"2017-12-07T06:08:56.342Z"}
{"level":"info","message":"Responding with a 400 code due to title not found","timestamp":"2017-12-07T06:08:56.343Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T06:13:21.762Z"}
{"level":"info","message":"/api/wizards","timestamp":"2017-12-07T06:13:21.763Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22avey43vl.f[2]++;cov_22avey43vl.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_22avey43vl.b[0][0]++;cov_22avey43vl.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_22avey43vl.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_22avey43vl.b[0][1]++;}cov_22avey43vl.s[19]++;\n  if (!request.body.title) {/* istanbul ignore next */cov_22avey43vl.b[1][0]++;cov_22avey43vl.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_22avey43vl.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_22avey43vl.b[1][1]++;}cov_22avey43vl.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_22avey43vl.b[2][0]++;cov_22avey43vl.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_22avey43vl.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_22avey43vl.b[2][1]++;}\n\n  let wizard = /* istanbul ignore next */(cov_22avey43vl.s[25]++, new Wizard(request.body.title, request.body.content)); /* istanbul ignore next */cov_22avey43vl.s[26]++;\n  wizards.push(wizard); /* istanbul ignore next */cov_22avey43vl.s[27]++;\n  sendJSON(response, 200, wizard);\n}","timestamp":"2017-12-07T06:13:21.763Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T06:13:21.834Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T06:13:21.852Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T06:13:21.854Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22avey43vl.f[2]++;cov_22avey43vl.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_22avey43vl.b[0][0]++;cov_22avey43vl.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_22avey43vl.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_22avey43vl.b[0][1]++;}cov_22avey43vl.s[19]++;\n  if (!request.body.title) {/* istanbul ignore next */cov_22avey43vl.b[1][0]++;cov_22avey43vl.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_22avey43vl.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_22avey43vl.b[1][1]++;}cov_22avey43vl.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_22avey43vl.b[2][0]++;cov_22avey43vl.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_22avey43vl.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_22avey43vl.b[2][1]++;}\n\n  let wizard = /* istanbul ignore next */(cov_22avey43vl.s[25]++, new Wizard(request.body.title, request.body.content)); /* istanbul ignore next */cov_22avey43vl.s[26]++;\n  wizards.push(wizard); /* istanbul ignore next */cov_22avey43vl.s[27]++;\n  sendJSON(response, 200, wizard);\n}","timestamp":"2017-12-07T06:13:21.854Z"}
{"level":"info","message":"Responding with a 400 code due to title not found","timestamp":"2017-12-07T06:13:21.854Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T06:15:28.376Z"}
{"level":"info","message":"/api/wizards","timestamp":"2017-12-07T06:15:28.377Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22avey43vl.f[2]++;cov_22avey43vl.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_22avey43vl.b[0][0]++;cov_22avey43vl.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_22avey43vl.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_22avey43vl.b[0][1]++;}cov_22avey43vl.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_22avey43vl.b[1][0]++;cov_22avey43vl.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_22avey43vl.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_22avey43vl.b[1][1]++;}cov_22avey43vl.s[22]++;\n  if (!request.body.origin) {/* istanbul ignore next */cov_22avey43vl.b[2][0]++;cov_22avey43vl.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_22avey43vl.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_22avey43vl.b[2][1]++;}\n\n  let wizard = /* istanbul ignore next */(cov_22avey43vl.s[25]++, new Wizard(request.body.title, request.body.content)); /* istanbul ignore next */cov_22avey43vl.s[26]++;\n  wizards.push(wizard); /* istanbul ignore next */cov_22avey43vl.s[27]++;\n  sendJSON(response, 200, wizard);\n}","timestamp":"2017-12-07T06:15:28.377Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T06:15:28.441Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T06:15:28.461Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T06:15:28.463Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22avey43vl.f[2]++;cov_22avey43vl.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_22avey43vl.b[0][0]++;cov_22avey43vl.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_22avey43vl.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_22avey43vl.b[0][1]++;}cov_22avey43vl.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_22avey43vl.b[1][0]++;cov_22avey43vl.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_22avey43vl.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_22avey43vl.b[1][1]++;}cov_22avey43vl.s[22]++;\n  if (!request.body.origin) {/* istanbul ignore next */cov_22avey43vl.b[2][0]++;cov_22avey43vl.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_22avey43vl.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_22avey43vl.b[2][1]++;}\n\n  let wizard = /* istanbul ignore next */(cov_22avey43vl.s[25]++, new Wizard(request.body.title, request.body.content)); /* istanbul ignore next */cov_22avey43vl.s[26]++;\n  wizards.push(wizard); /* istanbul ignore next */cov_22avey43vl.s[27]++;\n  sendJSON(response, 200, wizard);\n}","timestamp":"2017-12-07T06:15:28.463Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T06:15:28.463Z"}
{"id":"056925f0-db16-11e7-a1d8-7947ac1f0646","timestamp":"2017-12-07T06:15:28.463Z","level":"info","message":""}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T06:17:49.791Z"}
{"level":"info","message":"/api/wizards","timestamp":"2017-12-07T06:17:49.791Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22avey43vl.f[2]++;cov_22avey43vl.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_22avey43vl.b[0][0]++;cov_22avey43vl.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_22avey43vl.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_22avey43vl.b[0][1]++;}cov_22avey43vl.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_22avey43vl.b[1][0]++;cov_22avey43vl.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_22avey43vl.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_22avey43vl.b[1][1]++;}cov_22avey43vl.s[22]++;\n  if (!request.body.origin) {/* istanbul ignore next */cov_22avey43vl.b[2][0]++;cov_22avey43vl.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_22avey43vl.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_22avey43vl.b[2][1]++;}\n\n  let wizard = /* istanbul ignore next */(cov_22avey43vl.s[25]++, new Wizard(request.body.title, request.body.content)); /* istanbul ignore next */cov_22avey43vl.s[26]++;\n  wizards.push(wizard); /* istanbul ignore next */cov_22avey43vl.s[27]++;\n  sendJSON(response, 200, wizard);\n}","timestamp":"2017-12-07T06:17:49.792Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T06:17:49.863Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T06:17:49.882Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T06:17:49.884Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22avey43vl.f[2]++;cov_22avey43vl.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_22avey43vl.b[0][0]++;cov_22avey43vl.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_22avey43vl.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_22avey43vl.b[0][1]++;}cov_22avey43vl.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_22avey43vl.b[1][0]++;cov_22avey43vl.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_22avey43vl.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_22avey43vl.b[1][1]++;}cov_22avey43vl.s[22]++;\n  if (!request.body.origin) {/* istanbul ignore next */cov_22avey43vl.b[2][0]++;cov_22avey43vl.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_22avey43vl.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_22avey43vl.b[2][1]++;}\n\n  let wizard = /* istanbul ignore next */(cov_22avey43vl.s[25]++, new Wizard(request.body.title, request.body.content)); /* istanbul ignore next */cov_22avey43vl.s[26]++;\n  wizards.push(wizard); /* istanbul ignore next */cov_22avey43vl.s[27]++;\n  sendJSON(response, 200, wizard);\n}","timestamp":"2017-12-07T06:17:49.884Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T06:17:49.885Z"}
{"id":"59b46ed0-db16-11e7-a1f7-5dbae9016350","timestamp":"2017-12-07T06:17:49.885Z","level":"info","message":""}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T06:18:54.751Z"}
{"level":"info","message":"/api/wizards","timestamp":"2017-12-07T06:18:54.751Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22avey43vl.f[2]++;cov_22avey43vl.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_22avey43vl.b[0][0]++;cov_22avey43vl.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_22avey43vl.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_22avey43vl.b[0][1]++;}cov_22avey43vl.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_22avey43vl.b[1][0]++;cov_22avey43vl.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_22avey43vl.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_22avey43vl.b[1][1]++;}cov_22avey43vl.s[22]++;\n  if (!request.body.origin) {/* istanbul ignore next */cov_22avey43vl.b[2][0]++;cov_22avey43vl.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_22avey43vl.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_22avey43vl.b[2][1]++;}\n\n  let wizard = /* istanbul ignore next */(cov_22avey43vl.s[25]++, new Wizard(request.body.title, request.body.content)); /* istanbul ignore next */cov_22avey43vl.s[26]++;\n  wizards.push(wizard); /* istanbul ignore next */cov_22avey43vl.s[27]++;\n  sendJSON(response, 200, wizard);\n}","timestamp":"2017-12-07T06:18:54.751Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T06:18:54.799Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T06:18:54.816Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T06:18:54.818Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22avey43vl.f[2]++;cov_22avey43vl.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_22avey43vl.b[0][0]++;cov_22avey43vl.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_22avey43vl.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_22avey43vl.b[0][1]++;}cov_22avey43vl.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_22avey43vl.b[1][0]++;cov_22avey43vl.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_22avey43vl.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_22avey43vl.b[1][1]++;}cov_22avey43vl.s[22]++;\n  if (!request.body.origin) {/* istanbul ignore next */cov_22avey43vl.b[2][0]++;cov_22avey43vl.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_22avey43vl.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_22avey43vl.b[2][1]++;}\n\n  let wizard = /* istanbul ignore next */(cov_22avey43vl.s[25]++, new Wizard(request.body.title, request.body.content)); /* istanbul ignore next */cov_22avey43vl.s[26]++;\n  wizards.push(wizard); /* istanbul ignore next */cov_22avey43vl.s[27]++;\n  sendJSON(response, 200, wizard);\n}","timestamp":"2017-12-07T06:18:54.818Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T06:18:54.819Z"}
{"id":"80689330-db16-11e7-b0ae-ff1e4af85807","timestamp":"2017-12-07T06:18:54.819Z","level":"info","message":""}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T06:23:18.826Z"}
{"level":"info","message":"/api/wizards","timestamp":"2017-12-07T06:23:18.827Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22avey43vl.f[2]++;cov_22avey43vl.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_22avey43vl.b[0][0]++;cov_22avey43vl.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_22avey43vl.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_22avey43vl.b[0][1]++;}cov_22avey43vl.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_22avey43vl.b[1][0]++;cov_22avey43vl.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_22avey43vl.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_22avey43vl.b[1][1]++;}cov_22avey43vl.s[22]++;\n  if (!request.body.origin) {/* istanbul ignore next */cov_22avey43vl.b[2][0]++;cov_22avey43vl.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_22avey43vl.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_22avey43vl.b[2][1]++;}\n\n  let wizard = /* istanbul ignore next */(cov_22avey43vl.s[25]++, new Wizard(request.body.title, request.body.content)); /* istanbul ignore next */cov_22avey43vl.s[26]++;\n  wizards.push(wizard); /* istanbul ignore next */cov_22avey43vl.s[27]++;\n  sendJSON(response, 200, wizard);\n}","timestamp":"2017-12-07T06:23:18.827Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T06:23:18.889Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T06:23:18.908Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T06:23:18.910Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22avey43vl.f[2]++;cov_22avey43vl.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_22avey43vl.b[0][0]++;cov_22avey43vl.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_22avey43vl.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_22avey43vl.b[0][1]++;}cov_22avey43vl.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_22avey43vl.b[1][0]++;cov_22avey43vl.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_22avey43vl.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_22avey43vl.b[1][1]++;}cov_22avey43vl.s[22]++;\n  if (!request.body.origin) {/* istanbul ignore next */cov_22avey43vl.b[2][0]++;cov_22avey43vl.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_22avey43vl.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_22avey43vl.b[2][1]++;}\n\n  let wizard = /* istanbul ignore next */(cov_22avey43vl.s[25]++, new Wizard(request.body.title, request.body.content)); /* istanbul ignore next */cov_22avey43vl.s[26]++;\n  wizards.push(wizard); /* istanbul ignore next */cov_22avey43vl.s[27]++;\n  sendJSON(response, 200, wizard);\n}","timestamp":"2017-12-07T06:23:18.910Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T06:23:18.911Z"}
{"id":"1dd1d0f0-db17-11e7-a107-c35818412709","timestamp":"2017-12-07T06:23:18.911Z","level":"info","message":""}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T06:24:07.989Z"}
{"level":"info","message":"/api/wizards","timestamp":"2017-12-07T06:24:07.989Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22avey43vl.f[2]++;cov_22avey43vl.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_22avey43vl.b[0][0]++;cov_22avey43vl.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_22avey43vl.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_22avey43vl.b[0][1]++;}cov_22avey43vl.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_22avey43vl.b[1][0]++;cov_22avey43vl.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_22avey43vl.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_22avey43vl.b[1][1]++;}cov_22avey43vl.s[22]++;\n  if (!request.body.origin) {/* istanbul ignore next */cov_22avey43vl.b[2][0]++;cov_22avey43vl.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_22avey43vl.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_22avey43vl.b[2][1]++;}\n\n  let wizard = /* istanbul ignore next */(cov_22avey43vl.s[25]++, new Wizard(request.body.title, request.body.content)); /* istanbul ignore next */cov_22avey43vl.s[26]++;\n  wizards.push(wizard); /* istanbul ignore next */cov_22avey43vl.s[27]++;\n  sendJSON(response, 200, wizard);\n}","timestamp":"2017-12-07T06:24:07.990Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T06:24:08.035Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T06:26:25.241Z"}
{"level":"info","message":"/api/wizards","timestamp":"2017-12-07T06:26:25.241Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22avey43vl.f[2]++;cov_22avey43vl.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_22avey43vl.b[0][0]++;cov_22avey43vl.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_22avey43vl.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_22avey43vl.b[0][1]++;}cov_22avey43vl.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_22avey43vl.b[1][0]++;cov_22avey43vl.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_22avey43vl.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_22avey43vl.b[1][1]++;}cov_22avey43vl.s[22]++;\n  if (!request.body.origin) {/* istanbul ignore next */cov_22avey43vl.b[2][0]++;cov_22avey43vl.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_22avey43vl.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_22avey43vl.b[2][1]++;}\n\n  let wizard = /* istanbul ignore next */(cov_22avey43vl.s[25]++, new Wizard(request.body.title, request.body.content)); /* istanbul ignore next */cov_22avey43vl.s[26]++;\n  wizards.push(wizard); /* istanbul ignore next */cov_22avey43vl.s[27]++;\n  sendJSON(response, 200, wizard);\n}","timestamp":"2017-12-07T06:26:25.241Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T06:26:25.305Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T06:26:25.326Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T06:26:25.328Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22avey43vl.f[2]++;cov_22avey43vl.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_22avey43vl.b[0][0]++;cov_22avey43vl.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_22avey43vl.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_22avey43vl.b[0][1]++;}cov_22avey43vl.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_22avey43vl.b[1][0]++;cov_22avey43vl.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_22avey43vl.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_22avey43vl.b[1][1]++;}cov_22avey43vl.s[22]++;\n  if (!request.body.origin) {/* istanbul ignore next */cov_22avey43vl.b[2][0]++;cov_22avey43vl.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_22avey43vl.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_22avey43vl.b[2][1]++;}\n\n  let wizard = /* istanbul ignore next */(cov_22avey43vl.s[25]++, new Wizard(request.body.title, request.body.content)); /* istanbul ignore next */cov_22avey43vl.s[26]++;\n  wizards.push(wizard); /* istanbul ignore next */cov_22avey43vl.s[27]++;\n  sendJSON(response, 200, wizard);\n}","timestamp":"2017-12-07T06:26:25.328Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T06:26:25.330Z"}
{"id":"8ceef210-db17-11e7-9724-87d606d5d500","timestamp":"2017-12-07T06:26:25.330Z","level":"info","message":""}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T06:28:56.630Z"}
{"level":"info","message":"/api/wizards","timestamp":"2017-12-07T06:28:56.631Z"}
{"level":"info","message":"(request,response) => {\n    // Here, I know that my request has been pre-parsed\n    if(!request.body){\n      sendStatus(response,400,'body not found');\n      return;\n    }\n    if(!request.body.name){\n      sendStatus(response,400,'title not found');\n      return;\n    }\n    if(!request.body.origin){\n      sendStatus(response,400,'content not found');\n      return;\n    }\n    \n    let wizard = new Wizard(request.body.title, request.body.content);\n    wizards.push(wizard);\n    sendJSON(response,200,wizard);\n  }","timestamp":"2017-12-07T06:28:56.631Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T06:28:56.638Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-13T22:08:31.779Z"}
{"level":"info","message":"/api/wizards","timestamp":"2017-12-13T22:08:31.780Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22avey43vl.f[2]++;cov_22avey43vl.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_22avey43vl.b[0][0]++;cov_22avey43vl.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_22avey43vl.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_22avey43vl.b[0][1]++;}cov_22avey43vl.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_22avey43vl.b[1][0]++;cov_22avey43vl.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_22avey43vl.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_22avey43vl.b[1][1]++;}cov_22avey43vl.s[22]++;\n  if (!request.body.origin) {/* istanbul ignore next */cov_22avey43vl.b[2][0]++;cov_22avey43vl.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_22avey43vl.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_22avey43vl.b[2][1]++;}\n\n  let wizard = /* istanbul ignore next */(cov_22avey43vl.s[25]++, new Wizard(request.body.title, request.body.content)); /* istanbul ignore next */cov_22avey43vl.s[26]++;\n  wizards.push(wizard); /* istanbul ignore next */cov_22avey43vl.s[27]++;\n  sendJSON(response, 200, wizard);\n}","timestamp":"2017-12-13T22:08:31.780Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-13T22:08:31.871Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-13T22:08:31.894Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-13T22:08:31.895Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22avey43vl.f[2]++;cov_22avey43vl.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_22avey43vl.b[0][0]++;cov_22avey43vl.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_22avey43vl.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_22avey43vl.b[0][1]++;}cov_22avey43vl.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_22avey43vl.b[1][0]++;cov_22avey43vl.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_22avey43vl.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_22avey43vl.b[1][1]++;}cov_22avey43vl.s[22]++;\n  if (!request.body.origin) {/* istanbul ignore next */cov_22avey43vl.b[2][0]++;cov_22avey43vl.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_22avey43vl.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_22avey43vl.b[2][1]++;}\n\n  let wizard = /* istanbul ignore next */(cov_22avey43vl.s[25]++, new Wizard(request.body.title, request.body.content)); /* istanbul ignore next */cov_22avey43vl.s[26]++;\n  wizards.push(wizard); /* istanbul ignore next */cov_22avey43vl.s[27]++;\n  sendJSON(response, 200, wizard);\n}","timestamp":"2017-12-13T22:08:31.895Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-13T22:08:31.896Z"}
{"id":"27df1180-e052-11e7-8f19-3d86d72d4f3b","timestamp":"2017-12-13T22:08:31.896Z","level":"info","message":""}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-14T00:19:31.783Z"}
{"level":"info","message":"/api/wizards","timestamp":"2017-12-14T00:19:31.784Z"}
{"level":"info","message":"(request,response) => {\n    // Here, I know that my request has been pre-parsed\n    if(!request.body){\n      sendStatus(response,400,'body not found');\n      return;\n    }\n    if(!request.body.name){\n      sendStatus(response,400,'title not found');\n      return;\n    }\n    if(!request.body.origin){\n      sendStatus(response,400,'content not found');\n      return;\n    }\n    \n    let wizard = new Wizard(request.body.title, request.body.content);\n    wizards.push(wizard);\n    sendJSON(response,200,wizard);\n  }","timestamp":"2017-12-14T00:19:31.784Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-14T00:19:31.784Z"}
{"level":"info","message":"/api/wizards","timestamp":"2017-12-14T00:19:31.784Z"}
{"level":"info","message":"(request, response) => {\n  if(request.url.query.id) {\n    storage.fetchItem(request.url.query.id)\n      .then((result) => {\n        sendJSON(response, 200, result);\n      })\n      .catch(error => {\n        sendStatus(response, 404, error);\n      });\n \n  } else {\n    storage.fetchAll()\n      .then((result) => {\n        sendJSON(response, 200, result);\n      })\n      .catch(error => {\n        sendStatus(response, 500, error);\n      });\n  }\n}","timestamp":"2017-12-14T00:19:31.784Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-14T00:19:31.784Z"}
{"level":"info","message":"/api/wizards","timestamp":"2017-12-14T00:19:31.784Z"}
{"level":"info","message":"(request, response) => {\n  if(!request.url.query.id) {\n    sendStatus(response, 400, 'ID Not Provided');\n    return;\n  }\n  storage.deleteItem(request.url.query.id)\n    .then((result) => {\n      sendJSON(response, 204, result);\n    });\n}","timestamp":"2017-12-14T00:19:31.784Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-14T00:19:31.791Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-14T00:20:32.668Z"}
{"level":"info","message":"/api/wizards","timestamp":"2017-12-14T00:20:32.669Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22avey43vl.f[2]++;cov_22avey43vl.s[17]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_22avey43vl.b[0][0]++;cov_22avey43vl.s[18]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_22avey43vl.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_22avey43vl.b[0][1]++;}cov_22avey43vl.s[20]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_22avey43vl.b[1][0]++;cov_22avey43vl.s[21]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_22avey43vl.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_22avey43vl.b[1][1]++;}cov_22avey43vl.s[23]++;\n  if (!request.body.origin) {/* istanbul ignore next */cov_22avey43vl.b[2][0]++;cov_22avey43vl.s[24]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_22avey43vl.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_22avey43vl.b[2][1]++;}\n\n  let wizard = /* istanbul ignore next */(cov_22avey43vl.s[26]++, new Wizard(request.body.title, request.body.content)); /* istanbul ignore next */cov_22avey43vl.s[27]++;\n  wizards.push(wizard); /* istanbul ignore next */cov_22avey43vl.s[28]++;\n  sendJSON(response, 200, wizard);\n}","timestamp":"2017-12-14T00:20:32.669Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-14T00:20:32.669Z"}
{"level":"info","message":"/api/wizards","timestamp":"2017-12-14T00:20:32.669Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22avey43vl.f[3]++;cov_22avey43vl.s[30]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_22avey43vl.b[3][0]++;cov_22avey43vl.s[31]++;\n    storage.fetchItem(request.url.query.id).\n    then(result => {/* istanbul ignore next */cov_22avey43vl.f[4]++;cov_22avey43vl.s[32]++;\n      sendJSON(response, 200, result);\n    }).\n    catch(error => {/* istanbul ignore next */cov_22avey43vl.f[5]++;cov_22avey43vl.s[33]++;\n      sendStatus(response, 404, error);\n    });\n\n  } else {/* istanbul ignore next */cov_22avey43vl.b[3][1]++;cov_22avey43vl.s[34]++;\n    storage.fetchAll().\n    then(result => {/* istanbul ignore next */cov_22avey43vl.f[6]++;cov_22avey43vl.s[35]++;\n      sendJSON(response, 200, result);\n    }).\n    catch(error => {/* istanbul ignore next */cov_22avey43vl.f[7]++;cov_22avey43vl.s[36]++;\n      sendStatus(response, 500, error);\n    });\n  }\n}","timestamp":"2017-12-14T00:20:32.669Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-14T00:20:32.669Z"}
{"level":"info","message":"/api/wizards","timestamp":"2017-12-14T00:20:32.669Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22avey43vl.f[8]++;cov_22avey43vl.s[38]++;\n  if (!request.url.query.id) {/* istanbul ignore next */cov_22avey43vl.b[4][0]++;cov_22avey43vl.s[39]++;\n    sendStatus(response, 400, 'ID Not Provided'); /* istanbul ignore next */cov_22avey43vl.s[40]++;\n    return;\n  } else /* istanbul ignore next */{cov_22avey43vl.b[4][1]++;}cov_22avey43vl.s[41]++;\n  storage.deleteItem(request.url.query.id).\n  then(result => {/* istanbul ignore next */cov_22avey43vl.f[9]++;cov_22avey43vl.s[42]++;\n    sendJSON(response, 204, result);\n  });\n}","timestamp":"2017-12-14T00:20:32.669Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-14T00:20:37.747Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-14T00:20:37.749Z"}
{"level":"info","message":"(request,response) => {\n    // Here, I know that my request has been pre-parsed\n    if(!request.body){\n      sendStatus(response,400,'body not found');\n      return;\n    }\n    if(!request.body.name){\n      sendStatus(response,400,'title not found');\n      return;\n    }\n    if(!request.body.origin){\n      sendStatus(response,400,'content not found');\n      return;\n    }\n    \n    let wizard = new Wizard(request.body.title, request.body.content);\n    wizards.push(wizard);\n    sendJSON(response,200,wizard);\n  }","timestamp":"2017-12-14T00:20:37.749Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-14T00:20:37.749Z"}
{"id":"9c0c4250-e064-11e7-8b9f-cb421fe40f8c","timestamp":"2017-12-14T00:20:37.749Z","level":"info","message":""}
{"level":"error","message":"__SERVER_ERROR__ server is already off","timestamp":"2017-12-14T00:20:37.759Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-14T00:21:17.807Z"}
{"level":"info","message":"/api/wizards","timestamp":"2017-12-14T00:21:17.807Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22avey43vl.f[2]++;cov_22avey43vl.s[17]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_22avey43vl.b[0][0]++;cov_22avey43vl.s[18]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_22avey43vl.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_22avey43vl.b[0][1]++;}cov_22avey43vl.s[20]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_22avey43vl.b[1][0]++;cov_22avey43vl.s[21]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_22avey43vl.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_22avey43vl.b[1][1]++;}cov_22avey43vl.s[23]++;\n  if (!request.body.origin) {/* istanbul ignore next */cov_22avey43vl.b[2][0]++;cov_22avey43vl.s[24]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_22avey43vl.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_22avey43vl.b[2][1]++;}\n\n  let wizard = /* istanbul ignore next */(cov_22avey43vl.s[26]++, new Wizard(request.body.title, request.body.content)); /* istanbul ignore next */cov_22avey43vl.s[27]++;\n  wizards.push(wizard); /* istanbul ignore next */cov_22avey43vl.s[28]++;\n  sendJSON(response, 200, wizard);\n}","timestamp":"2017-12-14T00:21:17.807Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-14T00:21:17.808Z"}
{"level":"info","message":"/api/wizards","timestamp":"2017-12-14T00:21:17.808Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22avey43vl.f[3]++;cov_22avey43vl.s[30]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_22avey43vl.b[3][0]++;cov_22avey43vl.s[31]++;\n    storage.fetchItem(request.url.query.id).\n    then(result => {/* istanbul ignore next */cov_22avey43vl.f[4]++;cov_22avey43vl.s[32]++;\n      sendJSON(response, 200, result);\n    }).\n    catch(error => {/* istanbul ignore next */cov_22avey43vl.f[5]++;cov_22avey43vl.s[33]++;\n      sendStatus(response, 404, error);\n    });\n\n  } else {/* istanbul ignore next */cov_22avey43vl.b[3][1]++;cov_22avey43vl.s[34]++;\n    storage.fetchAll().\n    then(result => {/* istanbul ignore next */cov_22avey43vl.f[6]++;cov_22avey43vl.s[35]++;\n      sendJSON(response, 200, result);\n    }).\n    catch(error => {/* istanbul ignore next */cov_22avey43vl.f[7]++;cov_22avey43vl.s[36]++;\n      sendStatus(response, 500, error);\n    });\n  }\n}","timestamp":"2017-12-14T00:21:17.808Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-14T00:21:17.808Z"}
{"level":"info","message":"/api/wizards","timestamp":"2017-12-14T00:21:17.808Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22avey43vl.f[8]++;cov_22avey43vl.s[38]++;\n  if (!request.url.query.id) {/* istanbul ignore next */cov_22avey43vl.b[4][0]++;cov_22avey43vl.s[39]++;\n    sendStatus(response, 400, 'ID Not Provided'); /* istanbul ignore next */cov_22avey43vl.s[40]++;\n    return;\n  } else /* istanbul ignore next */{cov_22avey43vl.b[4][1]++;}cov_22avey43vl.s[41]++;\n  storage.deleteItem(request.url.query.id).\n  then(result => {/* istanbul ignore next */cov_22avey43vl.f[9]++;cov_22avey43vl.s[42]++;\n    sendJSON(response, 204, result);\n  });\n}","timestamp":"2017-12-14T00:21:17.808Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-14T00:21:17.864Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-14T00:22:30.327Z"}
{"level":"info","message":"/api/wizards","timestamp":"2017-12-14T00:22:30.328Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22avey43vl.f[2]++;cov_22avey43vl.s[17]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_22avey43vl.b[0][0]++;cov_22avey43vl.s[18]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_22avey43vl.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_22avey43vl.b[0][1]++;}cov_22avey43vl.s[20]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_22avey43vl.b[1][0]++;cov_22avey43vl.s[21]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_22avey43vl.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_22avey43vl.b[1][1]++;}cov_22avey43vl.s[23]++;\n  if (!request.body.origin) {/* istanbul ignore next */cov_22avey43vl.b[2][0]++;cov_22avey43vl.s[24]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_22avey43vl.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_22avey43vl.b[2][1]++;}\n\n  let wizard = /* istanbul ignore next */(cov_22avey43vl.s[26]++, new Wizard(request.body.title, request.body.content)); /* istanbul ignore next */cov_22avey43vl.s[27]++;\n  wizards.push(wizard); /* istanbul ignore next */cov_22avey43vl.s[28]++;\n  sendJSON(response, 200, wizard);\n}","timestamp":"2017-12-14T00:22:30.328Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-14T00:22:30.328Z"}
{"level":"info","message":"/api/wizards","timestamp":"2017-12-14T00:22:30.328Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22avey43vl.f[3]++;cov_22avey43vl.s[30]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_22avey43vl.b[3][0]++;cov_22avey43vl.s[31]++;\n    storage.fetchItem(request.url.query.id).\n    then(result => {/* istanbul ignore next */cov_22avey43vl.f[4]++;cov_22avey43vl.s[32]++;\n      sendJSON(response, 200, result);\n    }).\n    catch(error => {/* istanbul ignore next */cov_22avey43vl.f[5]++;cov_22avey43vl.s[33]++;\n      sendStatus(response, 404, error);\n    });\n\n  } else {/* istanbul ignore next */cov_22avey43vl.b[3][1]++;cov_22avey43vl.s[34]++;\n    storage.fetchAll().\n    then(result => {/* istanbul ignore next */cov_22avey43vl.f[6]++;cov_22avey43vl.s[35]++;\n      sendJSON(response, 200, result);\n    }).\n    catch(error => {/* istanbul ignore next */cov_22avey43vl.f[7]++;cov_22avey43vl.s[36]++;\n      sendStatus(response, 500, error);\n    });\n  }\n}","timestamp":"2017-12-14T00:22:30.328Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-14T00:22:30.328Z"}
{"level":"info","message":"/api/wizards","timestamp":"2017-12-14T00:22:30.328Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22avey43vl.f[8]++;cov_22avey43vl.s[38]++;\n  if (!request.url.query.id) {/* istanbul ignore next */cov_22avey43vl.b[4][0]++;cov_22avey43vl.s[39]++;\n    sendStatus(response, 400, 'ID Not Provided'); /* istanbul ignore next */cov_22avey43vl.s[40]++;\n    return;\n  } else /* istanbul ignore next */{cov_22avey43vl.b[4][1]++;}cov_22avey43vl.s[41]++;\n  storage.deleteItem(request.url.query.id).\n  then(result => {/* istanbul ignore next */cov_22avey43vl.f[9]++;cov_22avey43vl.s[42]++;\n    sendJSON(response, 204, result);\n  });\n}","timestamp":"2017-12-14T00:22:30.328Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-14T00:22:30.377Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-14T00:22:30.398Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-14T00:22:30.399Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22avey43vl.f[2]++;cov_22avey43vl.s[17]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_22avey43vl.b[0][0]++;cov_22avey43vl.s[18]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_22avey43vl.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_22avey43vl.b[0][1]++;}cov_22avey43vl.s[20]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_22avey43vl.b[1][0]++;cov_22avey43vl.s[21]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_22avey43vl.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_22avey43vl.b[1][1]++;}cov_22avey43vl.s[23]++;\n  if (!request.body.origin) {/* istanbul ignore next */cov_22avey43vl.b[2][0]++;cov_22avey43vl.s[24]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_22avey43vl.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_22avey43vl.b[2][1]++;}\n\n  let wizard = /* istanbul ignore next */(cov_22avey43vl.s[26]++, new Wizard(request.body.title, request.body.content)); /* istanbul ignore next */cov_22avey43vl.s[27]++;\n  wizards.push(wizard); /* istanbul ignore next */cov_22avey43vl.s[28]++;\n  sendJSON(response, 200, wizard);\n}","timestamp":"2017-12-14T00:22:30.399Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-14T00:22:30.399Z"}
{"id":"df3148f0-e064-11e7-acc4-bbba9c5ee8c4","timestamp":"2017-12-14T00:22:30.399Z","level":"info","message":""}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-14T00:22:30.409Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-14T00:22:30.410Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22avey43vl.f[3]++;cov_22avey43vl.s[30]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_22avey43vl.b[3][0]++;cov_22avey43vl.s[31]++;\n    storage.fetchItem(request.url.query.id).\n    then(result => {/* istanbul ignore next */cov_22avey43vl.f[4]++;cov_22avey43vl.s[32]++;\n      sendJSON(response, 200, result);\n    }).\n    catch(error => {/* istanbul ignore next */cov_22avey43vl.f[5]++;cov_22avey43vl.s[33]++;\n      sendStatus(response, 404, error);\n    });\n\n  } else {/* istanbul ignore next */cov_22avey43vl.b[3][1]++;cov_22avey43vl.s[34]++;\n    storage.fetchAll().\n    then(result => {/* istanbul ignore next */cov_22avey43vl.f[6]++;cov_22avey43vl.s[35]++;\n      sendJSON(response, 200, result);\n    }).\n    catch(error => {/* istanbul ignore next */cov_22avey43vl.f[7]++;cov_22avey43vl.s[36]++;\n      sendStatus(response, 500, error);\n    });\n  }\n}","timestamp":"2017-12-14T00:22:30.410Z"}
{"level":"info","message":"Responding with a 500 code due to Error: ENOENT: no such file or directory, open '${/Users/DaltonCarr/codefellows/401/lab-assignments/08-09-vanilla-rest-server}/db.json'","timestamp":"2017-12-14T00:22:30.411Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-14T00:22:30.414Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-14T00:22:30.414Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22avey43vl.f[3]++;cov_22avey43vl.s[30]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_22avey43vl.b[3][0]++;cov_22avey43vl.s[31]++;\n    storage.fetchItem(request.url.query.id).\n    then(result => {/* istanbul ignore next */cov_22avey43vl.f[4]++;cov_22avey43vl.s[32]++;\n      sendJSON(response, 200, result);\n    }).\n    catch(error => {/* istanbul ignore next */cov_22avey43vl.f[5]++;cov_22avey43vl.s[33]++;\n      sendStatus(response, 404, error);\n    });\n\n  } else {/* istanbul ignore next */cov_22avey43vl.b[3][1]++;cov_22avey43vl.s[34]++;\n    storage.fetchAll().\n    then(result => {/* istanbul ignore next */cov_22avey43vl.f[6]++;cov_22avey43vl.s[35]++;\n      sendJSON(response, 200, result);\n    }).\n    catch(error => {/* istanbul ignore next */cov_22avey43vl.f[7]++;cov_22avey43vl.s[36]++;\n      sendStatus(response, 500, error);\n    });\n  }\n}","timestamp":"2017-12-14T00:22:30.414Z"}
{"level":"info","message":"Responding with a 404 code due to Error: ENOENT: no such file or directory, open '${/Users/DaltonCarr/codefellows/401/lab-assignments/08-09-vanilla-rest-server}/db.json'","timestamp":"2017-12-14T00:22:30.415Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-14T00:22:30.417Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-14T00:22:30.417Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22avey43vl.f[3]++;cov_22avey43vl.s[30]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_22avey43vl.b[3][0]++;cov_22avey43vl.s[31]++;\n    storage.fetchItem(request.url.query.id).\n    then(result => {/* istanbul ignore next */cov_22avey43vl.f[4]++;cov_22avey43vl.s[32]++;\n      sendJSON(response, 200, result);\n    }).\n    catch(error => {/* istanbul ignore next */cov_22avey43vl.f[5]++;cov_22avey43vl.s[33]++;\n      sendStatus(response, 404, error);\n    });\n\n  } else {/* istanbul ignore next */cov_22avey43vl.b[3][1]++;cov_22avey43vl.s[34]++;\n    storage.fetchAll().\n    then(result => {/* istanbul ignore next */cov_22avey43vl.f[6]++;cov_22avey43vl.s[35]++;\n      sendJSON(response, 200, result);\n    }).\n    catch(error => {/* istanbul ignore next */cov_22avey43vl.f[7]++;cov_22avey43vl.s[36]++;\n      sendStatus(response, 500, error);\n    });\n  }\n}","timestamp":"2017-12-14T00:22:30.417Z"}
{"level":"info","message":"Responding with a 404 code due to Error: ENOENT: no such file or directory, open '${/Users/DaltonCarr/codefellows/401/lab-assignments/08-09-vanilla-rest-server}/db.json'","timestamp":"2017-12-14T00:22:30.417Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-14T00:22:30.419Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-14T00:22:30.419Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22avey43vl.f[8]++;cov_22avey43vl.s[38]++;\n  if (!request.url.query.id) {/* istanbul ignore next */cov_22avey43vl.b[4][0]++;cov_22avey43vl.s[39]++;\n    sendStatus(response, 400, 'ID Not Provided'); /* istanbul ignore next */cov_22avey43vl.s[40]++;\n    return;\n  } else /* istanbul ignore next */{cov_22avey43vl.b[4][1]++;}cov_22avey43vl.s[41]++;\n  storage.deleteItem(request.url.query.id).\n  then(result => {/* istanbul ignore next */cov_22avey43vl.f[9]++;cov_22avey43vl.s[42]++;\n    sendJSON(response, 204, result);\n  });\n}","timestamp":"2017-12-14T00:22:30.419Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-14T00:22:30.420Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-14T00:22:30.421Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22avey43vl.f[8]++;cov_22avey43vl.s[38]++;\n  if (!request.url.query.id) {/* istanbul ignore next */cov_22avey43vl.b[4][0]++;cov_22avey43vl.s[39]++;\n    sendStatus(response, 400, 'ID Not Provided'); /* istanbul ignore next */cov_22avey43vl.s[40]++;\n    return;\n  } else /* istanbul ignore next */{cov_22avey43vl.b[4][1]++;}cov_22avey43vl.s[41]++;\n  storage.deleteItem(request.url.query.id).\n  then(result => {/* istanbul ignore next */cov_22avey43vl.f[9]++;cov_22avey43vl.s[42]++;\n    sendJSON(response, 204, result);\n  });\n}","timestamp":"2017-12-14T00:22:30.421Z"}
{"level":"info","message":"Responding with a 400 code due to ID Not Provided","timestamp":"2017-12-14T00:22:30.421Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-14T00:28:35.458Z"}
{"level":"info","message":"/api/wizards","timestamp":"2017-12-14T00:28:35.458Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22avey43vl.f[2]++;cov_22avey43vl.s[17]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_22avey43vl.b[0][0]++;cov_22avey43vl.s[18]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_22avey43vl.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_22avey43vl.b[0][1]++;}cov_22avey43vl.s[20]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_22avey43vl.b[1][0]++;cov_22avey43vl.s[21]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_22avey43vl.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_22avey43vl.b[1][1]++;}cov_22avey43vl.s[23]++;\n  if (!request.body.origin) {/* istanbul ignore next */cov_22avey43vl.b[2][0]++;cov_22avey43vl.s[24]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_22avey43vl.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_22avey43vl.b[2][1]++;}\n\n  let wizard = /* istanbul ignore next */(cov_22avey43vl.s[26]++, new Wizard(request.body.title, request.body.content)); /* istanbul ignore next */cov_22avey43vl.s[27]++;\n  wizards.push(wizard); /* istanbul ignore next */cov_22avey43vl.s[28]++;\n  sendJSON(response, 200, wizard);\n}","timestamp":"2017-12-14T00:28:35.458Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-14T00:28:35.459Z"}
{"level":"info","message":"/api/wizards","timestamp":"2017-12-14T00:28:35.459Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22avey43vl.f[3]++;cov_22avey43vl.s[30]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_22avey43vl.b[3][0]++;cov_22avey43vl.s[31]++;\n    storage.fetchItem(request.url.query.id).\n    then(result => {/* istanbul ignore next */cov_22avey43vl.f[4]++;cov_22avey43vl.s[32]++;\n      sendJSON(response, 200, result);\n    }).\n    catch(error => {/* istanbul ignore next */cov_22avey43vl.f[5]++;cov_22avey43vl.s[33]++;\n      sendStatus(response, 404, error);\n    });\n\n  } else {/* istanbul ignore next */cov_22avey43vl.b[3][1]++;cov_22avey43vl.s[34]++;\n    storage.fetchAll().\n    then(result => {/* istanbul ignore next */cov_22avey43vl.f[6]++;cov_22avey43vl.s[35]++;\n      sendJSON(response, 200, result);\n    }).\n    catch(error => {/* istanbul ignore next */cov_22avey43vl.f[7]++;cov_22avey43vl.s[36]++;\n      sendStatus(response, 500, error);\n    });\n  }\n}","timestamp":"2017-12-14T00:28:35.459Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-14T00:28:35.459Z"}
{"level":"info","message":"/api/wizards","timestamp":"2017-12-14T00:28:35.459Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22avey43vl.f[8]++;cov_22avey43vl.s[38]++;\n  if (!request.url.query.id) {/* istanbul ignore next */cov_22avey43vl.b[4][0]++;cov_22avey43vl.s[39]++;\n    sendStatus(response, 400, 'ID Not Provided'); /* istanbul ignore next */cov_22avey43vl.s[40]++;\n    return;\n  } else /* istanbul ignore next */{cov_22avey43vl.b[4][1]++;}cov_22avey43vl.s[41]++;\n  storage.deleteItem(request.url.query.id).\n  then(result => {/* istanbul ignore next */cov_22avey43vl.f[9]++;cov_22avey43vl.s[42]++;\n    sendJSON(response, 204, result);\n  });\n}","timestamp":"2017-12-14T00:28:35.459Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-14T00:28:35.514Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-14T00:28:35.534Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-14T00:28:35.535Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22avey43vl.f[2]++;cov_22avey43vl.s[17]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_22avey43vl.b[0][0]++;cov_22avey43vl.s[18]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_22avey43vl.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_22avey43vl.b[0][1]++;}cov_22avey43vl.s[20]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_22avey43vl.b[1][0]++;cov_22avey43vl.s[21]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_22avey43vl.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_22avey43vl.b[1][1]++;}cov_22avey43vl.s[23]++;\n  if (!request.body.origin) {/* istanbul ignore next */cov_22avey43vl.b[2][0]++;cov_22avey43vl.s[24]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_22avey43vl.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_22avey43vl.b[2][1]++;}\n\n  let wizard = /* istanbul ignore next */(cov_22avey43vl.s[26]++, new Wizard(request.body.title, request.body.content)); /* istanbul ignore next */cov_22avey43vl.s[27]++;\n  wizards.push(wizard); /* istanbul ignore next */cov_22avey43vl.s[28]++;\n  sendJSON(response, 200, wizard);\n}","timestamp":"2017-12-14T00:28:35.535Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-14T00:28:35.535Z"}
{"id":"b8d49df0-e065-11e7-88ed-a3a73aaf8f56","timestamp":"2017-12-14T00:28:35.535Z","level":"info","message":""}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-14T00:28:35.544Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-14T00:28:35.544Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22avey43vl.f[3]++;cov_22avey43vl.s[30]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_22avey43vl.b[3][0]++;cov_22avey43vl.s[31]++;\n    storage.fetchItem(request.url.query.id).\n    then(result => {/* istanbul ignore next */cov_22avey43vl.f[4]++;cov_22avey43vl.s[32]++;\n      sendJSON(response, 200, result);\n    }).\n    catch(error => {/* istanbul ignore next */cov_22avey43vl.f[5]++;cov_22avey43vl.s[33]++;\n      sendStatus(response, 404, error);\n    });\n\n  } else {/* istanbul ignore next */cov_22avey43vl.b[3][1]++;cov_22avey43vl.s[34]++;\n    storage.fetchAll().\n    then(result => {/* istanbul ignore next */cov_22avey43vl.f[6]++;cov_22avey43vl.s[35]++;\n      sendJSON(response, 200, result);\n    }).\n    catch(error => {/* istanbul ignore next */cov_22avey43vl.f[7]++;cov_22avey43vl.s[36]++;\n      sendStatus(response, 500, error);\n    });\n  }\n}","timestamp":"2017-12-14T00:28:35.544Z"}
{"level":"info","message":"Responding with a 500 code due to Error: ENOENT: no such file or directory, open '${/Users/DaltonCarr/codefellows/401/lab-assignments/08-09-vanilla-rest-server/lib/storage.js}/db.json'","timestamp":"2017-12-14T00:28:35.545Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-14T00:28:35.548Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-14T00:28:35.548Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22avey43vl.f[3]++;cov_22avey43vl.s[30]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_22avey43vl.b[3][0]++;cov_22avey43vl.s[31]++;\n    storage.fetchItem(request.url.query.id).\n    then(result => {/* istanbul ignore next */cov_22avey43vl.f[4]++;cov_22avey43vl.s[32]++;\n      sendJSON(response, 200, result);\n    }).\n    catch(error => {/* istanbul ignore next */cov_22avey43vl.f[5]++;cov_22avey43vl.s[33]++;\n      sendStatus(response, 404, error);\n    });\n\n  } else {/* istanbul ignore next */cov_22avey43vl.b[3][1]++;cov_22avey43vl.s[34]++;\n    storage.fetchAll().\n    then(result => {/* istanbul ignore next */cov_22avey43vl.f[6]++;cov_22avey43vl.s[35]++;\n      sendJSON(response, 200, result);\n    }).\n    catch(error => {/* istanbul ignore next */cov_22avey43vl.f[7]++;cov_22avey43vl.s[36]++;\n      sendStatus(response, 500, error);\n    });\n  }\n}","timestamp":"2017-12-14T00:28:35.548Z"}
{"level":"info","message":"Responding with a 404 code due to Error: ENOENT: no such file or directory, open '${/Users/DaltonCarr/codefellows/401/lab-assignments/08-09-vanilla-rest-server/lib/storage.js}/db.json'","timestamp":"2017-12-14T00:28:35.549Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-14T00:28:35.550Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-14T00:28:35.551Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22avey43vl.f[3]++;cov_22avey43vl.s[30]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_22avey43vl.b[3][0]++;cov_22avey43vl.s[31]++;\n    storage.fetchItem(request.url.query.id).\n    then(result => {/* istanbul ignore next */cov_22avey43vl.f[4]++;cov_22avey43vl.s[32]++;\n      sendJSON(response, 200, result);\n    }).\n    catch(error => {/* istanbul ignore next */cov_22avey43vl.f[5]++;cov_22avey43vl.s[33]++;\n      sendStatus(response, 404, error);\n    });\n\n  } else {/* istanbul ignore next */cov_22avey43vl.b[3][1]++;cov_22avey43vl.s[34]++;\n    storage.fetchAll().\n    then(result => {/* istanbul ignore next */cov_22avey43vl.f[6]++;cov_22avey43vl.s[35]++;\n      sendJSON(response, 200, result);\n    }).\n    catch(error => {/* istanbul ignore next */cov_22avey43vl.f[7]++;cov_22avey43vl.s[36]++;\n      sendStatus(response, 500, error);\n    });\n  }\n}","timestamp":"2017-12-14T00:28:35.551Z"}
{"level":"info","message":"Responding with a 404 code due to Error: ENOENT: no such file or directory, open '${/Users/DaltonCarr/codefellows/401/lab-assignments/08-09-vanilla-rest-server/lib/storage.js}/db.json'","timestamp":"2017-12-14T00:28:35.551Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-14T00:28:35.552Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-14T00:28:35.553Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22avey43vl.f[8]++;cov_22avey43vl.s[38]++;\n  if (!request.url.query.id) {/* istanbul ignore next */cov_22avey43vl.b[4][0]++;cov_22avey43vl.s[39]++;\n    sendStatus(response, 400, 'ID Not Provided'); /* istanbul ignore next */cov_22avey43vl.s[40]++;\n    return;\n  } else /* istanbul ignore next */{cov_22avey43vl.b[4][1]++;}cov_22avey43vl.s[41]++;\n  storage.deleteItem(request.url.query.id).\n  then(result => {/* istanbul ignore next */cov_22avey43vl.f[9]++;cov_22avey43vl.s[42]++;\n    sendJSON(response, 204, result);\n  });\n}","timestamp":"2017-12-14T00:28:35.553Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-14T00:28:35.554Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-14T00:28:35.555Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22avey43vl.f[8]++;cov_22avey43vl.s[38]++;\n  if (!request.url.query.id) {/* istanbul ignore next */cov_22avey43vl.b[4][0]++;cov_22avey43vl.s[39]++;\n    sendStatus(response, 400, 'ID Not Provided'); /* istanbul ignore next */cov_22avey43vl.s[40]++;\n    return;\n  } else /* istanbul ignore next */{cov_22avey43vl.b[4][1]++;}cov_22avey43vl.s[41]++;\n  storage.deleteItem(request.url.query.id).\n  then(result => {/* istanbul ignore next */cov_22avey43vl.f[9]++;cov_22avey43vl.s[42]++;\n    sendJSON(response, 204, result);\n  });\n}","timestamp":"2017-12-14T00:28:35.555Z"}
{"level":"info","message":"Responding with a 400 code due to ID Not Provided","timestamp":"2017-12-14T00:28:35.555Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-14T00:29:11.096Z"}
{"level":"info","message":"/api/wizards","timestamp":"2017-12-14T00:29:11.097Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22avey43vl.f[2]++;cov_22avey43vl.s[17]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_22avey43vl.b[0][0]++;cov_22avey43vl.s[18]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_22avey43vl.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_22avey43vl.b[0][1]++;}cov_22avey43vl.s[20]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_22avey43vl.b[1][0]++;cov_22avey43vl.s[21]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_22avey43vl.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_22avey43vl.b[1][1]++;}cov_22avey43vl.s[23]++;\n  if (!request.body.origin) {/* istanbul ignore next */cov_22avey43vl.b[2][0]++;cov_22avey43vl.s[24]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_22avey43vl.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_22avey43vl.b[2][1]++;}\n\n  let wizard = /* istanbul ignore next */(cov_22avey43vl.s[26]++, new Wizard(request.body.title, request.body.content)); /* istanbul ignore next */cov_22avey43vl.s[27]++;\n  wizards.push(wizard); /* istanbul ignore next */cov_22avey43vl.s[28]++;\n  sendJSON(response, 200, wizard);\n}","timestamp":"2017-12-14T00:29:11.097Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-14T00:29:11.097Z"}
{"level":"info","message":"/api/wizards","timestamp":"2017-12-14T00:29:11.097Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22avey43vl.f[3]++;cov_22avey43vl.s[30]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_22avey43vl.b[3][0]++;cov_22avey43vl.s[31]++;\n    storage.fetchItem(request.url.query.id).\n    then(result => {/* istanbul ignore next */cov_22avey43vl.f[4]++;cov_22avey43vl.s[32]++;\n      sendJSON(response, 200, result);\n    }).\n    catch(error => {/* istanbul ignore next */cov_22avey43vl.f[5]++;cov_22avey43vl.s[33]++;\n      sendStatus(response, 404, error);\n    });\n\n  } else {/* istanbul ignore next */cov_22avey43vl.b[3][1]++;cov_22avey43vl.s[34]++;\n    storage.fetchAll().\n    then(result => {/* istanbul ignore next */cov_22avey43vl.f[6]++;cov_22avey43vl.s[35]++;\n      sendJSON(response, 200, result);\n    }).\n    catch(error => {/* istanbul ignore next */cov_22avey43vl.f[7]++;cov_22avey43vl.s[36]++;\n      sendStatus(response, 500, error);\n    });\n  }\n}","timestamp":"2017-12-14T00:29:11.097Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-14T00:29:11.097Z"}
{"level":"info","message":"/api/wizards","timestamp":"2017-12-14T00:29:11.097Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22avey43vl.f[8]++;cov_22avey43vl.s[38]++;\n  if (!request.url.query.id) {/* istanbul ignore next */cov_22avey43vl.b[4][0]++;cov_22avey43vl.s[39]++;\n    sendStatus(response, 400, 'ID Not Provided'); /* istanbul ignore next */cov_22avey43vl.s[40]++;\n    return;\n  } else /* istanbul ignore next */{cov_22avey43vl.b[4][1]++;}cov_22avey43vl.s[41]++;\n  storage.deleteItem(request.url.query.id).\n  then(result => {/* istanbul ignore next */cov_22avey43vl.f[9]++;cov_22avey43vl.s[42]++;\n    sendJSON(response, 204, result);\n  });\n}","timestamp":"2017-12-14T00:29:11.097Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-14T00:29:11.149Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-14T00:29:11.184Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-14T00:29:11.188Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22avey43vl.f[2]++;cov_22avey43vl.s[17]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_22avey43vl.b[0][0]++;cov_22avey43vl.s[18]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_22avey43vl.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_22avey43vl.b[0][1]++;}cov_22avey43vl.s[20]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_22avey43vl.b[1][0]++;cov_22avey43vl.s[21]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_22avey43vl.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_22avey43vl.b[1][1]++;}cov_22avey43vl.s[23]++;\n  if (!request.body.origin) {/* istanbul ignore next */cov_22avey43vl.b[2][0]++;cov_22avey43vl.s[24]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_22avey43vl.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_22avey43vl.b[2][1]++;}\n\n  let wizard = /* istanbul ignore next */(cov_22avey43vl.s[26]++, new Wizard(request.body.title, request.body.content)); /* istanbul ignore next */cov_22avey43vl.s[27]++;\n  wizards.push(wizard); /* istanbul ignore next */cov_22avey43vl.s[28]++;\n  sendJSON(response, 200, wizard);\n}","timestamp":"2017-12-14T00:29:11.188Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-14T00:29:11.189Z"}
{"id":"ce14d540-e065-11e7-90ef-a59ee1a11a54","timestamp":"2017-12-14T00:29:11.189Z","level":"info","message":""}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-14T00:29:11.201Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-14T00:29:11.201Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22avey43vl.f[3]++;cov_22avey43vl.s[30]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_22avey43vl.b[3][0]++;cov_22avey43vl.s[31]++;\n    storage.fetchItem(request.url.query.id).\n    then(result => {/* istanbul ignore next */cov_22avey43vl.f[4]++;cov_22avey43vl.s[32]++;\n      sendJSON(response, 200, result);\n    }).\n    catch(error => {/* istanbul ignore next */cov_22avey43vl.f[5]++;cov_22avey43vl.s[33]++;\n      sendStatus(response, 404, error);\n    });\n\n  } else {/* istanbul ignore next */cov_22avey43vl.b[3][1]++;cov_22avey43vl.s[34]++;\n    storage.fetchAll().\n    then(result => {/* istanbul ignore next */cov_22avey43vl.f[6]++;cov_22avey43vl.s[35]++;\n      sendJSON(response, 200, result);\n    }).\n    catch(error => {/* istanbul ignore next */cov_22avey43vl.f[7]++;cov_22avey43vl.s[36]++;\n      sendStatus(response, 500, error);\n    });\n  }\n}","timestamp":"2017-12-14T00:29:11.201Z"}
{"level":"info","message":"Responding with a 500 code due to Error: ENOENT: no such file or directory, open '${/Users/DaltonCarr/codefellows/401/lab-assignments/08-09-vanilla-rest-server/lib/storage}/db.json'","timestamp":"2017-12-14T00:29:11.202Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-14T00:29:11.205Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-14T00:29:11.205Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22avey43vl.f[3]++;cov_22avey43vl.s[30]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_22avey43vl.b[3][0]++;cov_22avey43vl.s[31]++;\n    storage.fetchItem(request.url.query.id).\n    then(result => {/* istanbul ignore next */cov_22avey43vl.f[4]++;cov_22avey43vl.s[32]++;\n      sendJSON(response, 200, result);\n    }).\n    catch(error => {/* istanbul ignore next */cov_22avey43vl.f[5]++;cov_22avey43vl.s[33]++;\n      sendStatus(response, 404, error);\n    });\n\n  } else {/* istanbul ignore next */cov_22avey43vl.b[3][1]++;cov_22avey43vl.s[34]++;\n    storage.fetchAll().\n    then(result => {/* istanbul ignore next */cov_22avey43vl.f[6]++;cov_22avey43vl.s[35]++;\n      sendJSON(response, 200, result);\n    }).\n    catch(error => {/* istanbul ignore next */cov_22avey43vl.f[7]++;cov_22avey43vl.s[36]++;\n      sendStatus(response, 500, error);\n    });\n  }\n}","timestamp":"2017-12-14T00:29:11.205Z"}
{"level":"info","message":"Responding with a 404 code due to Error: ENOENT: no such file or directory, open '${/Users/DaltonCarr/codefellows/401/lab-assignments/08-09-vanilla-rest-server/lib/storage}/db.json'","timestamp":"2017-12-14T00:29:11.206Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-14T00:29:11.207Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-14T00:29:11.208Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22avey43vl.f[3]++;cov_22avey43vl.s[30]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_22avey43vl.b[3][0]++;cov_22avey43vl.s[31]++;\n    storage.fetchItem(request.url.query.id).\n    then(result => {/* istanbul ignore next */cov_22avey43vl.f[4]++;cov_22avey43vl.s[32]++;\n      sendJSON(response, 200, result);\n    }).\n    catch(error => {/* istanbul ignore next */cov_22avey43vl.f[5]++;cov_22avey43vl.s[33]++;\n      sendStatus(response, 404, error);\n    });\n\n  } else {/* istanbul ignore next */cov_22avey43vl.b[3][1]++;cov_22avey43vl.s[34]++;\n    storage.fetchAll().\n    then(result => {/* istanbul ignore next */cov_22avey43vl.f[6]++;cov_22avey43vl.s[35]++;\n      sendJSON(response, 200, result);\n    }).\n    catch(error => {/* istanbul ignore next */cov_22avey43vl.f[7]++;cov_22avey43vl.s[36]++;\n      sendStatus(response, 500, error);\n    });\n  }\n}","timestamp":"2017-12-14T00:29:11.208Z"}
{"level":"info","message":"Responding with a 404 code due to Error: ENOENT: no such file or directory, open '${/Users/DaltonCarr/codefellows/401/lab-assignments/08-09-vanilla-rest-server/lib/storage}/db.json'","timestamp":"2017-12-14T00:29:11.208Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-14T00:29:11.210Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-14T00:29:11.210Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22avey43vl.f[8]++;cov_22avey43vl.s[38]++;\n  if (!request.url.query.id) {/* istanbul ignore next */cov_22avey43vl.b[4][0]++;cov_22avey43vl.s[39]++;\n    sendStatus(response, 400, 'ID Not Provided'); /* istanbul ignore next */cov_22avey43vl.s[40]++;\n    return;\n  } else /* istanbul ignore next */{cov_22avey43vl.b[4][1]++;}cov_22avey43vl.s[41]++;\n  storage.deleteItem(request.url.query.id).\n  then(result => {/* istanbul ignore next */cov_22avey43vl.f[9]++;cov_22avey43vl.s[42]++;\n    sendJSON(response, 204, result);\n  });\n}","timestamp":"2017-12-14T00:29:11.210Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-14T00:29:11.211Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-14T00:29:11.212Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22avey43vl.f[8]++;cov_22avey43vl.s[38]++;\n  if (!request.url.query.id) {/* istanbul ignore next */cov_22avey43vl.b[4][0]++;cov_22avey43vl.s[39]++;\n    sendStatus(response, 400, 'ID Not Provided'); /* istanbul ignore next */cov_22avey43vl.s[40]++;\n    return;\n  } else /* istanbul ignore next */{cov_22avey43vl.b[4][1]++;}cov_22avey43vl.s[41]++;\n  storage.deleteItem(request.url.query.id).\n  then(result => {/* istanbul ignore next */cov_22avey43vl.f[9]++;cov_22avey43vl.s[42]++;\n    sendJSON(response, 204, result);\n  });\n}","timestamp":"2017-12-14T00:29:11.212Z"}
{"level":"info","message":"Responding with a 400 code due to ID Not Provided","timestamp":"2017-12-14T00:29:11.212Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-14T00:30:47.283Z"}
{"level":"info","message":"/api/wizards","timestamp":"2017-12-14T00:30:47.284Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22avey43vl.f[2]++;cov_22avey43vl.s[17]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_22avey43vl.b[0][0]++;cov_22avey43vl.s[18]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_22avey43vl.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_22avey43vl.b[0][1]++;}cov_22avey43vl.s[20]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_22avey43vl.b[1][0]++;cov_22avey43vl.s[21]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_22avey43vl.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_22avey43vl.b[1][1]++;}cov_22avey43vl.s[23]++;\n  if (!request.body.origin) {/* istanbul ignore next */cov_22avey43vl.b[2][0]++;cov_22avey43vl.s[24]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_22avey43vl.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_22avey43vl.b[2][1]++;}\n\n  let wizard = /* istanbul ignore next */(cov_22avey43vl.s[26]++, new Wizard(request.body.title, request.body.content)); /* istanbul ignore next */cov_22avey43vl.s[27]++;\n  wizards.push(wizard); /* istanbul ignore next */cov_22avey43vl.s[28]++;\n  sendJSON(response, 200, wizard);\n}","timestamp":"2017-12-14T00:30:47.284Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-14T00:30:47.284Z"}
{"level":"info","message":"/api/wizards","timestamp":"2017-12-14T00:30:47.284Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22avey43vl.f[3]++;cov_22avey43vl.s[30]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_22avey43vl.b[3][0]++;cov_22avey43vl.s[31]++;\n    storage.fetchItem(request.url.query.id).\n    then(result => {/* istanbul ignore next */cov_22avey43vl.f[4]++;cov_22avey43vl.s[32]++;\n      sendJSON(response, 200, result);\n    }).\n    catch(error => {/* istanbul ignore next */cov_22avey43vl.f[5]++;cov_22avey43vl.s[33]++;\n      sendStatus(response, 404, error);\n    });\n\n  } else {/* istanbul ignore next */cov_22avey43vl.b[3][1]++;cov_22avey43vl.s[34]++;\n    storage.fetchAll().\n    then(result => {/* istanbul ignore next */cov_22avey43vl.f[6]++;cov_22avey43vl.s[35]++;\n      sendJSON(response, 200, result);\n    }).\n    catch(error => {/* istanbul ignore next */cov_22avey43vl.f[7]++;cov_22avey43vl.s[36]++;\n      sendStatus(response, 500, error);\n    });\n  }\n}","timestamp":"2017-12-14T00:30:47.284Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-14T00:30:47.284Z"}
{"level":"info","message":"/api/wizards","timestamp":"2017-12-14T00:30:47.284Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22avey43vl.f[8]++;cov_22avey43vl.s[38]++;\n  if (!request.url.query.id) {/* istanbul ignore next */cov_22avey43vl.b[4][0]++;cov_22avey43vl.s[39]++;\n    sendStatus(response, 400, 'ID Not Provided'); /* istanbul ignore next */cov_22avey43vl.s[40]++;\n    return;\n  } else /* istanbul ignore next */{cov_22avey43vl.b[4][1]++;}cov_22avey43vl.s[41]++;\n  storage.deleteItem(request.url.query.id).\n  then(result => {/* istanbul ignore next */cov_22avey43vl.f[9]++;cov_22avey43vl.s[42]++;\n    sendJSON(response, 204, result);\n  });\n}","timestamp":"2017-12-14T00:30:47.284Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-14T00:30:47.336Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-14T00:30:47.357Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-14T00:30:47.358Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22avey43vl.f[2]++;cov_22avey43vl.s[17]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_22avey43vl.b[0][0]++;cov_22avey43vl.s[18]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_22avey43vl.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_22avey43vl.b[0][1]++;}cov_22avey43vl.s[20]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_22avey43vl.b[1][0]++;cov_22avey43vl.s[21]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_22avey43vl.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_22avey43vl.b[1][1]++;}cov_22avey43vl.s[23]++;\n  if (!request.body.origin) {/* istanbul ignore next */cov_22avey43vl.b[2][0]++;cov_22avey43vl.s[24]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_22avey43vl.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_22avey43vl.b[2][1]++;}\n\n  let wizard = /* istanbul ignore next */(cov_22avey43vl.s[26]++, new Wizard(request.body.title, request.body.content)); /* istanbul ignore next */cov_22avey43vl.s[27]++;\n  wizards.push(wizard); /* istanbul ignore next */cov_22avey43vl.s[28]++;\n  sendJSON(response, 200, wizard);\n}","timestamp":"2017-12-14T00:30:47.358Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-14T00:30:47.358Z"}
{"id":"076735e0-e066-11e7-9d77-bf1c696177ba","timestamp":"2017-12-14T00:30:47.358Z","level":"info","message":""}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-14T00:30:47.367Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-14T00:30:47.368Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22avey43vl.f[3]++;cov_22avey43vl.s[30]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_22avey43vl.b[3][0]++;cov_22avey43vl.s[31]++;\n    storage.fetchItem(request.url.query.id).\n    then(result => {/* istanbul ignore next */cov_22avey43vl.f[4]++;cov_22avey43vl.s[32]++;\n      sendJSON(response, 200, result);\n    }).\n    catch(error => {/* istanbul ignore next */cov_22avey43vl.f[5]++;cov_22avey43vl.s[33]++;\n      sendStatus(response, 404, error);\n    });\n\n  } else {/* istanbul ignore next */cov_22avey43vl.b[3][1]++;cov_22avey43vl.s[34]++;\n    storage.fetchAll().\n    then(result => {/* istanbul ignore next */cov_22avey43vl.f[6]++;cov_22avey43vl.s[35]++;\n      sendJSON(response, 200, result);\n    }).\n    catch(error => {/* istanbul ignore next */cov_22avey43vl.f[7]++;cov_22avey43vl.s[36]++;\n      sendStatus(response, 500, error);\n    });\n  }\n}","timestamp":"2017-12-14T00:30:47.368Z"}
{"level":"info","message":"Responding with a 500 code due to Error: ENOENT: no such file or directory, open '${/Users/DaltonCarr/codefellows/401/lab-assignments/08-09-vanilla-rest-server}/db.json'","timestamp":"2017-12-14T00:30:47.368Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-14T00:30:47.371Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-14T00:30:47.371Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22avey43vl.f[3]++;cov_22avey43vl.s[30]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_22avey43vl.b[3][0]++;cov_22avey43vl.s[31]++;\n    storage.fetchItem(request.url.query.id).\n    then(result => {/* istanbul ignore next */cov_22avey43vl.f[4]++;cov_22avey43vl.s[32]++;\n      sendJSON(response, 200, result);\n    }).\n    catch(error => {/* istanbul ignore next */cov_22avey43vl.f[5]++;cov_22avey43vl.s[33]++;\n      sendStatus(response, 404, error);\n    });\n\n  } else {/* istanbul ignore next */cov_22avey43vl.b[3][1]++;cov_22avey43vl.s[34]++;\n    storage.fetchAll().\n    then(result => {/* istanbul ignore next */cov_22avey43vl.f[6]++;cov_22avey43vl.s[35]++;\n      sendJSON(response, 200, result);\n    }).\n    catch(error => {/* istanbul ignore next */cov_22avey43vl.f[7]++;cov_22avey43vl.s[36]++;\n      sendStatus(response, 500, error);\n    });\n  }\n}","timestamp":"2017-12-14T00:30:47.371Z"}
{"level":"info","message":"Responding with a 404 code due to Error: ENOENT: no such file or directory, open '${/Users/DaltonCarr/codefellows/401/lab-assignments/08-09-vanilla-rest-server}/db.json'","timestamp":"2017-12-14T00:30:47.372Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-14T00:30:47.374Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-14T00:30:47.374Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22avey43vl.f[3]++;cov_22avey43vl.s[30]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_22avey43vl.b[3][0]++;cov_22avey43vl.s[31]++;\n    storage.fetchItem(request.url.query.id).\n    then(result => {/* istanbul ignore next */cov_22avey43vl.f[4]++;cov_22avey43vl.s[32]++;\n      sendJSON(response, 200, result);\n    }).\n    catch(error => {/* istanbul ignore next */cov_22avey43vl.f[5]++;cov_22avey43vl.s[33]++;\n      sendStatus(response, 404, error);\n    });\n\n  } else {/* istanbul ignore next */cov_22avey43vl.b[3][1]++;cov_22avey43vl.s[34]++;\n    storage.fetchAll().\n    then(result => {/* istanbul ignore next */cov_22avey43vl.f[6]++;cov_22avey43vl.s[35]++;\n      sendJSON(response, 200, result);\n    }).\n    catch(error => {/* istanbul ignore next */cov_22avey43vl.f[7]++;cov_22avey43vl.s[36]++;\n      sendStatus(response, 500, error);\n    });\n  }\n}","timestamp":"2017-12-14T00:30:47.374Z"}
{"level":"info","message":"Responding with a 404 code due to Error: ENOENT: no such file or directory, open '${/Users/DaltonCarr/codefellows/401/lab-assignments/08-09-vanilla-rest-server}/db.json'","timestamp":"2017-12-14T00:30:47.374Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-14T00:30:47.376Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-14T00:30:47.376Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22avey43vl.f[8]++;cov_22avey43vl.s[38]++;\n  if (!request.url.query.id) {/* istanbul ignore next */cov_22avey43vl.b[4][0]++;cov_22avey43vl.s[39]++;\n    sendStatus(response, 400, 'ID Not Provided'); /* istanbul ignore next */cov_22avey43vl.s[40]++;\n    return;\n  } else /* istanbul ignore next */{cov_22avey43vl.b[4][1]++;}cov_22avey43vl.s[41]++;\n  storage.deleteItem(request.url.query.id).\n  then(result => {/* istanbul ignore next */cov_22avey43vl.f[9]++;cov_22avey43vl.s[42]++;\n    sendJSON(response, 204, result);\n  });\n}","timestamp":"2017-12-14T00:30:47.376Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-14T00:30:47.378Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-14T00:30:47.378Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22avey43vl.f[8]++;cov_22avey43vl.s[38]++;\n  if (!request.url.query.id) {/* istanbul ignore next */cov_22avey43vl.b[4][0]++;cov_22avey43vl.s[39]++;\n    sendStatus(response, 400, 'ID Not Provided'); /* istanbul ignore next */cov_22avey43vl.s[40]++;\n    return;\n  } else /* istanbul ignore next */{cov_22avey43vl.b[4][1]++;}cov_22avey43vl.s[41]++;\n  storage.deleteItem(request.url.query.id).\n  then(result => {/* istanbul ignore next */cov_22avey43vl.f[9]++;cov_22avey43vl.s[42]++;\n    sendJSON(response, 204, result);\n  });\n}","timestamp":"2017-12-14T00:30:47.378Z"}
{"level":"info","message":"Responding with a 400 code due to ID Not Provided","timestamp":"2017-12-14T00:30:47.378Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-14T00:38:29.497Z"}
{"level":"info","message":"/api/wizards","timestamp":"2017-12-14T00:38:29.498Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22avey43vl.f[2]++;cov_22avey43vl.s[17]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_22avey43vl.b[0][0]++;cov_22avey43vl.s[18]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_22avey43vl.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_22avey43vl.b[0][1]++;}cov_22avey43vl.s[20]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_22avey43vl.b[1][0]++;cov_22avey43vl.s[21]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_22avey43vl.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_22avey43vl.b[1][1]++;}cov_22avey43vl.s[23]++;\n  if (!request.body.origin) {/* istanbul ignore next */cov_22avey43vl.b[2][0]++;cov_22avey43vl.s[24]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_22avey43vl.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_22avey43vl.b[2][1]++;}\n\n  let wizard = /* istanbul ignore next */(cov_22avey43vl.s[26]++, new Wizard(request.body.title, request.body.content)); /* istanbul ignore next */cov_22avey43vl.s[27]++;\n  wizards.push(wizard); /* istanbul ignore next */cov_22avey43vl.s[28]++;\n  sendJSON(response, 200, wizard);\n}","timestamp":"2017-12-14T00:38:29.498Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-14T00:38:29.498Z"}
{"level":"info","message":"/api/wizards","timestamp":"2017-12-14T00:38:29.498Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22avey43vl.f[3]++;cov_22avey43vl.s[30]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_22avey43vl.b[3][0]++;cov_22avey43vl.s[31]++;\n    storage.fetchItem(request.url.query.id).\n    then(result => {/* istanbul ignore next */cov_22avey43vl.f[4]++;cov_22avey43vl.s[32]++;\n      sendJSON(response, 200, result);\n    }).\n    catch(error => {/* istanbul ignore next */cov_22avey43vl.f[5]++;cov_22avey43vl.s[33]++;\n      sendStatus(response, 404, error);\n    });\n\n  } else {/* istanbul ignore next */cov_22avey43vl.b[3][1]++;cov_22avey43vl.s[34]++;\n    storage.fetchAll().\n    then(result => {/* istanbul ignore next */cov_22avey43vl.f[6]++;cov_22avey43vl.s[35]++;\n      sendJSON(response, 200, result);\n    }).\n    catch(error => {/* istanbul ignore next */cov_22avey43vl.f[7]++;cov_22avey43vl.s[36]++;\n      sendStatus(response, 500, error);\n    });\n  }\n}","timestamp":"2017-12-14T00:38:29.498Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-14T00:38:29.498Z"}
{"level":"info","message":"/api/wizards","timestamp":"2017-12-14T00:38:29.498Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22avey43vl.f[8]++;cov_22avey43vl.s[38]++;\n  if (!request.url.query.id) {/* istanbul ignore next */cov_22avey43vl.b[4][0]++;cov_22avey43vl.s[39]++;\n    sendStatus(response, 400, 'ID Not Provided'); /* istanbul ignore next */cov_22avey43vl.s[40]++;\n    return;\n  } else /* istanbul ignore next */{cov_22avey43vl.b[4][1]++;}cov_22avey43vl.s[41]++;\n  storage.deleteItem(request.url.query.id).\n  then(result => {/* istanbul ignore next */cov_22avey43vl.f[9]++;cov_22avey43vl.s[42]++;\n    sendJSON(response, 204, result);\n  });\n}","timestamp":"2017-12-14T00:38:29.498Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-14T00:38:29.563Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-14T00:38:29.585Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-14T00:38:29.586Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22avey43vl.f[2]++;cov_22avey43vl.s[17]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_22avey43vl.b[0][0]++;cov_22avey43vl.s[18]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_22avey43vl.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_22avey43vl.b[0][1]++;}cov_22avey43vl.s[20]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_22avey43vl.b[1][0]++;cov_22avey43vl.s[21]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_22avey43vl.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_22avey43vl.b[1][1]++;}cov_22avey43vl.s[23]++;\n  if (!request.body.origin) {/* istanbul ignore next */cov_22avey43vl.b[2][0]++;cov_22avey43vl.s[24]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_22avey43vl.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_22avey43vl.b[2][1]++;}\n\n  let wizard = /* istanbul ignore next */(cov_22avey43vl.s[26]++, new Wizard(request.body.title, request.body.content)); /* istanbul ignore next */cov_22avey43vl.s[27]++;\n  wizards.push(wizard); /* istanbul ignore next */cov_22avey43vl.s[28]++;\n  sendJSON(response, 200, wizard);\n}","timestamp":"2017-12-14T00:38:29.586Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-14T00:38:29.586Z"}
{"id":"1ae99b20-e067-11e7-aad0-99f015ed9650","timestamp":"2017-12-14T00:38:29.586Z","level":"info","message":""}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-14T00:38:29.596Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-14T00:38:29.596Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22avey43vl.f[3]++;cov_22avey43vl.s[30]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_22avey43vl.b[3][0]++;cov_22avey43vl.s[31]++;\n    storage.fetchItem(request.url.query.id).\n    then(result => {/* istanbul ignore next */cov_22avey43vl.f[4]++;cov_22avey43vl.s[32]++;\n      sendJSON(response, 200, result);\n    }).\n    catch(error => {/* istanbul ignore next */cov_22avey43vl.f[5]++;cov_22avey43vl.s[33]++;\n      sendStatus(response, 404, error);\n    });\n\n  } else {/* istanbul ignore next */cov_22avey43vl.b[3][1]++;cov_22avey43vl.s[34]++;\n    storage.fetchAll().\n    then(result => {/* istanbul ignore next */cov_22avey43vl.f[6]++;cov_22avey43vl.s[35]++;\n      sendJSON(response, 200, result);\n    }).\n    catch(error => {/* istanbul ignore next */cov_22avey43vl.f[7]++;cov_22avey43vl.s[36]++;\n      sendStatus(response, 500, error);\n    });\n  }\n}","timestamp":"2017-12-14T00:38:29.596Z"}
{"level":"info","message":"Responding with a 500 code due to Error: ENOENT: no such file or directory, open '${/Users/DaltonCarr/codefellows/401/lab-assignments/08-09-vanilla-rest-server}/db.json'","timestamp":"2017-12-14T00:38:29.597Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-14T00:38:29.600Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-14T00:38:29.600Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22avey43vl.f[3]++;cov_22avey43vl.s[30]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_22avey43vl.b[3][0]++;cov_22avey43vl.s[31]++;\n    storage.fetchItem(request.url.query.id).\n    then(result => {/* istanbul ignore next */cov_22avey43vl.f[4]++;cov_22avey43vl.s[32]++;\n      sendJSON(response, 200, result);\n    }).\n    catch(error => {/* istanbul ignore next */cov_22avey43vl.f[5]++;cov_22avey43vl.s[33]++;\n      sendStatus(response, 404, error);\n    });\n\n  } else {/* istanbul ignore next */cov_22avey43vl.b[3][1]++;cov_22avey43vl.s[34]++;\n    storage.fetchAll().\n    then(result => {/* istanbul ignore next */cov_22avey43vl.f[6]++;cov_22avey43vl.s[35]++;\n      sendJSON(response, 200, result);\n    }).\n    catch(error => {/* istanbul ignore next */cov_22avey43vl.f[7]++;cov_22avey43vl.s[36]++;\n      sendStatus(response, 500, error);\n    });\n  }\n}","timestamp":"2017-12-14T00:38:29.600Z"}
{"level":"info","message":"Responding with a 404 code due to Error: ENOENT: no such file or directory, open '${/Users/DaltonCarr/codefellows/401/lab-assignments/08-09-vanilla-rest-server}/db.json'","timestamp":"2017-12-14T00:38:29.601Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-14T00:38:29.602Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-14T00:38:29.603Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22avey43vl.f[3]++;cov_22avey43vl.s[30]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_22avey43vl.b[3][0]++;cov_22avey43vl.s[31]++;\n    storage.fetchItem(request.url.query.id).\n    then(result => {/* istanbul ignore next */cov_22avey43vl.f[4]++;cov_22avey43vl.s[32]++;\n      sendJSON(response, 200, result);\n    }).\n    catch(error => {/* istanbul ignore next */cov_22avey43vl.f[5]++;cov_22avey43vl.s[33]++;\n      sendStatus(response, 404, error);\n    });\n\n  } else {/* istanbul ignore next */cov_22avey43vl.b[3][1]++;cov_22avey43vl.s[34]++;\n    storage.fetchAll().\n    then(result => {/* istanbul ignore next */cov_22avey43vl.f[6]++;cov_22avey43vl.s[35]++;\n      sendJSON(response, 200, result);\n    }).\n    catch(error => {/* istanbul ignore next */cov_22avey43vl.f[7]++;cov_22avey43vl.s[36]++;\n      sendStatus(response, 500, error);\n    });\n  }\n}","timestamp":"2017-12-14T00:38:29.603Z"}
{"level":"info","message":"Responding with a 404 code due to Error: ENOENT: no such file or directory, open '${/Users/DaltonCarr/codefellows/401/lab-assignments/08-09-vanilla-rest-server}/db.json'","timestamp":"2017-12-14T00:38:29.603Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-14T00:38:29.605Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-14T00:38:29.605Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22avey43vl.f[8]++;cov_22avey43vl.s[38]++;\n  if (!request.url.query.id) {/* istanbul ignore next */cov_22avey43vl.b[4][0]++;cov_22avey43vl.s[39]++;\n    sendStatus(response, 400, 'ID Not Provided'); /* istanbul ignore next */cov_22avey43vl.s[40]++;\n    return;\n  } else /* istanbul ignore next */{cov_22avey43vl.b[4][1]++;}cov_22avey43vl.s[41]++;\n  storage.deleteItem(request.url.query.id).\n  then(result => {/* istanbul ignore next */cov_22avey43vl.f[9]++;cov_22avey43vl.s[42]++;\n    sendJSON(response, 204, result);\n  });\n}","timestamp":"2017-12-14T00:38:29.605Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-14T00:38:29.608Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-14T00:38:29.608Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22avey43vl.f[8]++;cov_22avey43vl.s[38]++;\n  if (!request.url.query.id) {/* istanbul ignore next */cov_22avey43vl.b[4][0]++;cov_22avey43vl.s[39]++;\n    sendStatus(response, 400, 'ID Not Provided'); /* istanbul ignore next */cov_22avey43vl.s[40]++;\n    return;\n  } else /* istanbul ignore next */{cov_22avey43vl.b[4][1]++;}cov_22avey43vl.s[41]++;\n  storage.deleteItem(request.url.query.id).\n  then(result => {/* istanbul ignore next */cov_22avey43vl.f[9]++;cov_22avey43vl.s[42]++;\n    sendJSON(response, 204, result);\n  });\n}","timestamp":"2017-12-14T00:38:29.608Z"}
{"level":"info","message":"Responding with a 400 code due to ID Not Provided","timestamp":"2017-12-14T00:38:29.608Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-14T00:41:58.632Z"}
{"level":"info","message":"/api/wizards","timestamp":"2017-12-14T00:41:58.633Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22avey43vl.f[2]++;cov_22avey43vl.s[17]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_22avey43vl.b[0][0]++;cov_22avey43vl.s[18]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_22avey43vl.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_22avey43vl.b[0][1]++;}cov_22avey43vl.s[20]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_22avey43vl.b[1][0]++;cov_22avey43vl.s[21]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_22avey43vl.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_22avey43vl.b[1][1]++;}cov_22avey43vl.s[23]++;\n  if (!request.body.origin) {/* istanbul ignore next */cov_22avey43vl.b[2][0]++;cov_22avey43vl.s[24]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_22avey43vl.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_22avey43vl.b[2][1]++;}\n\n  let wizard = /* istanbul ignore next */(cov_22avey43vl.s[26]++, new Wizard(request.body.title, request.body.content)); /* istanbul ignore next */cov_22avey43vl.s[27]++;\n  wizards.push(wizard); /* istanbul ignore next */cov_22avey43vl.s[28]++;\n  sendJSON(response, 200, wizard);\n}","timestamp":"2017-12-14T00:41:58.633Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-14T00:41:58.633Z"}
{"level":"info","message":"/api/wizards","timestamp":"2017-12-14T00:41:58.633Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22avey43vl.f[3]++;cov_22avey43vl.s[30]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_22avey43vl.b[3][0]++;cov_22avey43vl.s[31]++;\n    storage.fetchItem(request.url.query.id).\n    then(result => {/* istanbul ignore next */cov_22avey43vl.f[4]++;cov_22avey43vl.s[32]++;\n      sendJSON(response, 200, result);\n    }).\n    catch(error => {/* istanbul ignore next */cov_22avey43vl.f[5]++;cov_22avey43vl.s[33]++;\n      sendStatus(response, 404, error);\n    });\n\n  } else {/* istanbul ignore next */cov_22avey43vl.b[3][1]++;cov_22avey43vl.s[34]++;\n    storage.fetchAll().\n    then(result => {/* istanbul ignore next */cov_22avey43vl.f[6]++;cov_22avey43vl.s[35]++;\n      sendJSON(response, 200, result);\n    }).\n    catch(error => {/* istanbul ignore next */cov_22avey43vl.f[7]++;cov_22avey43vl.s[36]++;\n      sendStatus(response, 500, error);\n    });\n  }\n}","timestamp":"2017-12-14T00:41:58.633Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-14T00:41:58.633Z"}
{"level":"info","message":"/api/wizards","timestamp":"2017-12-14T00:41:58.633Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22avey43vl.f[8]++;cov_22avey43vl.s[38]++;\n  if (!request.url.query.id) {/* istanbul ignore next */cov_22avey43vl.b[4][0]++;cov_22avey43vl.s[39]++;\n    sendStatus(response, 400, 'ID Not Provided'); /* istanbul ignore next */cov_22avey43vl.s[40]++;\n    return;\n  } else /* istanbul ignore next */{cov_22avey43vl.b[4][1]++;}cov_22avey43vl.s[41]++;\n  storage.deleteItem(request.url.query.id).\n  then(result => {/* istanbul ignore next */cov_22avey43vl.f[9]++;cov_22avey43vl.s[42]++;\n    sendJSON(response, 204, result);\n  });\n}","timestamp":"2017-12-14T00:41:58.633Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-14T00:41:58.699Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-14T00:41:58.724Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-14T00:41:58.725Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22avey43vl.f[2]++;cov_22avey43vl.s[17]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_22avey43vl.b[0][0]++;cov_22avey43vl.s[18]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_22avey43vl.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_22avey43vl.b[0][1]++;}cov_22avey43vl.s[20]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_22avey43vl.b[1][0]++;cov_22avey43vl.s[21]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_22avey43vl.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_22avey43vl.b[1][1]++;}cov_22avey43vl.s[23]++;\n  if (!request.body.origin) {/* istanbul ignore next */cov_22avey43vl.b[2][0]++;cov_22avey43vl.s[24]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_22avey43vl.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_22avey43vl.b[2][1]++;}\n\n  let wizard = /* istanbul ignore next */(cov_22avey43vl.s[26]++, new Wizard(request.body.title, request.body.content)); /* istanbul ignore next */cov_22avey43vl.s[27]++;\n  wizards.push(wizard); /* istanbul ignore next */cov_22avey43vl.s[28]++;\n  sendJSON(response, 200, wizard);\n}","timestamp":"2017-12-14T00:41:58.725Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-14T00:41:58.726Z"}
{"id":"9791d660-e067-11e7-bb14-cbc27be1e768","timestamp":"2017-12-14T00:41:58.726Z","level":"info","message":""}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-14T00:41:58.733Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-14T00:41:58.734Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22avey43vl.f[3]++;cov_22avey43vl.s[30]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_22avey43vl.b[3][0]++;cov_22avey43vl.s[31]++;\n    storage.fetchItem(request.url.query.id).\n    then(result => {/* istanbul ignore next */cov_22avey43vl.f[4]++;cov_22avey43vl.s[32]++;\n      sendJSON(response, 200, result);\n    }).\n    catch(error => {/* istanbul ignore next */cov_22avey43vl.f[5]++;cov_22avey43vl.s[33]++;\n      sendStatus(response, 404, error);\n    });\n\n  } else {/* istanbul ignore next */cov_22avey43vl.b[3][1]++;cov_22avey43vl.s[34]++;\n    storage.fetchAll().\n    then(result => {/* istanbul ignore next */cov_22avey43vl.f[6]++;cov_22avey43vl.s[35]++;\n      sendJSON(response, 200, result);\n    }).\n    catch(error => {/* istanbul ignore next */cov_22avey43vl.f[7]++;cov_22avey43vl.s[36]++;\n      sendStatus(response, 500, error);\n    });\n  }\n}","timestamp":"2017-12-14T00:41:58.734Z"}
{"level":"info","message":"Responding with a 500 code due to Error: ENOENT: no such file or directory, open '${/Users/DaltonCarr/codefellows/401/lab-assignments/08-09-vanilla-rest-server/data/wizards.json}/db.json'","timestamp":"2017-12-14T00:41:58.735Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-14T00:41:58.737Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-14T00:41:58.738Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22avey43vl.f[3]++;cov_22avey43vl.s[30]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_22avey43vl.b[3][0]++;cov_22avey43vl.s[31]++;\n    storage.fetchItem(request.url.query.id).\n    then(result => {/* istanbul ignore next */cov_22avey43vl.f[4]++;cov_22avey43vl.s[32]++;\n      sendJSON(response, 200, result);\n    }).\n    catch(error => {/* istanbul ignore next */cov_22avey43vl.f[5]++;cov_22avey43vl.s[33]++;\n      sendStatus(response, 404, error);\n    });\n\n  } else {/* istanbul ignore next */cov_22avey43vl.b[3][1]++;cov_22avey43vl.s[34]++;\n    storage.fetchAll().\n    then(result => {/* istanbul ignore next */cov_22avey43vl.f[6]++;cov_22avey43vl.s[35]++;\n      sendJSON(response, 200, result);\n    }).\n    catch(error => {/* istanbul ignore next */cov_22avey43vl.f[7]++;cov_22avey43vl.s[36]++;\n      sendStatus(response, 500, error);\n    });\n  }\n}","timestamp":"2017-12-14T00:41:58.738Z"}
{"level":"info","message":"Responding with a 404 code due to Error: ENOENT: no such file or directory, open '${/Users/DaltonCarr/codefellows/401/lab-assignments/08-09-vanilla-rest-server/data/wizards.json}/db.json'","timestamp":"2017-12-14T00:41:58.738Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-14T00:41:58.740Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-14T00:41:58.740Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22avey43vl.f[3]++;cov_22avey43vl.s[30]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_22avey43vl.b[3][0]++;cov_22avey43vl.s[31]++;\n    storage.fetchItem(request.url.query.id).\n    then(result => {/* istanbul ignore next */cov_22avey43vl.f[4]++;cov_22avey43vl.s[32]++;\n      sendJSON(response, 200, result);\n    }).\n    catch(error => {/* istanbul ignore next */cov_22avey43vl.f[5]++;cov_22avey43vl.s[33]++;\n      sendStatus(response, 404, error);\n    });\n\n  } else {/* istanbul ignore next */cov_22avey43vl.b[3][1]++;cov_22avey43vl.s[34]++;\n    storage.fetchAll().\n    then(result => {/* istanbul ignore next */cov_22avey43vl.f[6]++;cov_22avey43vl.s[35]++;\n      sendJSON(response, 200, result);\n    }).\n    catch(error => {/* istanbul ignore next */cov_22avey43vl.f[7]++;cov_22avey43vl.s[36]++;\n      sendStatus(response, 500, error);\n    });\n  }\n}","timestamp":"2017-12-14T00:41:58.740Z"}
{"level":"info","message":"Responding with a 404 code due to Error: ENOENT: no such file or directory, open '${/Users/DaltonCarr/codefellows/401/lab-assignments/08-09-vanilla-rest-server/data/wizards.json}/db.json'","timestamp":"2017-12-14T00:41:58.740Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-14T00:41:58.742Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-14T00:41:58.742Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22avey43vl.f[8]++;cov_22avey43vl.s[38]++;\n  if (!request.url.query.id) {/* istanbul ignore next */cov_22avey43vl.b[4][0]++;cov_22avey43vl.s[39]++;\n    sendStatus(response, 400, 'ID Not Provided'); /* istanbul ignore next */cov_22avey43vl.s[40]++;\n    return;\n  } else /* istanbul ignore next */{cov_22avey43vl.b[4][1]++;}cov_22avey43vl.s[41]++;\n  storage.deleteItem(request.url.query.id).\n  then(result => {/* istanbul ignore next */cov_22avey43vl.f[9]++;cov_22avey43vl.s[42]++;\n    sendJSON(response, 204, result);\n  });\n}","timestamp":"2017-12-14T00:41:58.742Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-14T00:41:58.744Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-14T00:41:58.744Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_22avey43vl.f[8]++;cov_22avey43vl.s[38]++;\n  if (!request.url.query.id) {/* istanbul ignore next */cov_22avey43vl.b[4][0]++;cov_22avey43vl.s[39]++;\n    sendStatus(response, 400, 'ID Not Provided'); /* istanbul ignore next */cov_22avey43vl.s[40]++;\n    return;\n  } else /* istanbul ignore next */{cov_22avey43vl.b[4][1]++;}cov_22avey43vl.s[41]++;\n  storage.deleteItem(request.url.query.id).\n  then(result => {/* istanbul ignore next */cov_22avey43vl.f[9]++;cov_22avey43vl.s[42]++;\n    sendJSON(response, 204, result);\n  });\n}","timestamp":"2017-12-14T00:41:58.744Z"}
{"level":"info","message":"Responding with a 400 code due to ID Not Provided","timestamp":"2017-12-14T00:41:58.744Z"}
