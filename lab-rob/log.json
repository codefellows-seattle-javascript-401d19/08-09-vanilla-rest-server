{"level":"info","message":"Adding a POST url and callback.","timestamp":"2017-12-07T02:26:49.425Z"}
{"level":"info","message":"/api/trialsBikes","timestamp":"2017-12-07T02:26:49.425Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[2]++;cov_ratewsw8z.s[16]++;\n  if (!req.body) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[17]++;\n    sendStatus(res, 400, 'body not found!'); /* istanbul ignore next */cov_ratewsw8z.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[19]++;\n\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[20]++;\n    sendStatus(res, 400, 'make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[22]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[23]++;\n    sendStatus(res, 400, 'model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[25]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[26]++;\n    sendStatus(res, 400, 'year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[28]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[29]++;\n    sendStatus(res, 400, 'displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[30]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[31]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[32]++;\n    sendStatus(res, 400, 'color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[34]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[35]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[36]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T02:26:49.425Z"}
{"level":"error","message":"__SERVER_ERROR__ Server is not running, cannot stop.","timestamp":"2017-12-07T02:26:54.484Z"}
{"level":"info","message":"Adding a POST url and callback.","timestamp":"2017-12-07T02:28:01.053Z"}
{"level":"info","message":"/api/trialsBikes","timestamp":"2017-12-07T02:28:01.053Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[2]++;cov_ratewsw8z.s[16]++;\n  if (!req.body) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[17]++;\n    sendStatus(res, 400, 'body not found!'); /* istanbul ignore next */cov_ratewsw8z.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[19]++;\n\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[20]++;\n    sendStatus(res, 400, 'make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[22]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[23]++;\n    sendStatus(res, 400, 'model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[25]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[26]++;\n    sendStatus(res, 400, 'year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[28]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[29]++;\n    sendStatus(res, 400, 'displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[30]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[31]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[32]++;\n    sendStatus(res, 400, 'color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[34]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[35]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[36]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T02:28:01.053Z"}
{"level":"info","message":"Server is up on port 3000.","timestamp":"2017-12-07T02:28:01.088Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T02:28:01.101Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T02:28:01.101Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T02:28:01.101Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T02:28:01.102Z"}
{"message":"Cannot read property 'includes' of undefined","stack":"TypeError: Cannot read property 'includes' of undefined\n    at IncomingMessage.req.on (/Users/robertreed/Documents/programming/cf/401/lab/08-09-vanilla-rest-server/lab-rob/lib/req-parser.js:24:41)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-07T02:28:01.102Z"}
{"level":"info","message":"Adding a POST url and callback.","timestamp":"2017-12-07T02:31:54.620Z"}
{"level":"info","message":"/api/trialsBikes","timestamp":"2017-12-07T02:31:54.621Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[2]++;cov_ratewsw8z.s[16]++;\n  if (!req.body) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[17]++;\n    sendStatus(res, 400, 'body not found!'); /* istanbul ignore next */cov_ratewsw8z.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[19]++;\n\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[20]++;\n    sendStatus(res, 400, 'make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[22]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[23]++;\n    sendStatus(res, 400, 'model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[25]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[26]++;\n    sendStatus(res, 400, 'year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[28]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[29]++;\n    sendStatus(res, 400, 'displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[30]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[31]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[32]++;\n    sendStatus(res, 400, 'color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[34]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[35]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[36]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T02:31:54.621Z"}
{"level":"info","message":"Server is up on port 3000.","timestamp":"2017-12-07T02:31:54.660Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T02:31:54.700Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T02:31:54.700Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T02:31:54.701Z"}
{"level":"info","message":"Bad endpoint hit. 404.","timestamp":"2017-12-07T02:31:54.701Z"}
{"level":"info","message":"Adding a POST url and callback.","timestamp":"2017-12-07T02:33:37.103Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-07T02:33:37.104Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[2]++;cov_ratewsw8z.s[16]++;\n  if (!req.body) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[17]++;\n    sendStatus(res, 400, 'body not found!'); /* istanbul ignore next */cov_ratewsw8z.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[19]++;\n\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[20]++;\n    sendStatus(res, 400, 'make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[22]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[23]++;\n    sendStatus(res, 400, 'model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[25]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[26]++;\n    sendStatus(res, 400, 'year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[28]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[29]++;\n    sendStatus(res, 400, 'displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[30]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[31]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[32]++;\n    sendStatus(res, 400, 'color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[34]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[35]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[36]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T02:33:37.104Z"}
{"level":"info","message":"Server is up on port 3000.","timestamp":"2017-12-07T02:33:37.142Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T02:33:37.182Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T02:33:37.183Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T02:33:37.183Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T02:33:37.183Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[2]++;cov_ratewsw8z.s[16]++;\n  if (!req.body) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[17]++;\n    sendStatus(res, 400, 'body not found!'); /* istanbul ignore next */cov_ratewsw8z.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[19]++;\n\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[20]++;\n    sendStatus(res, 400, 'make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[22]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[23]++;\n    sendStatus(res, 400, 'model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[25]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[26]++;\n    sendStatus(res, 400, 'year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[28]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[29]++;\n    sendStatus(res, 400, 'displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[30]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[31]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[32]++;\n    sendStatus(res, 400, 'color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[34]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[35]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[36]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T02:33:37.183Z"}
{"level":"info","message":"Responding with a 200 code and the following data:","timestamp":"2017-12-07T02:33:37.184Z"}
{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"07452a00-daf7-11e7-88f0-ad429ded38f3","timestamp":"2017-12-07T02:33:37.184Z","level":"info","message":""}
{"level":"info","message":"Adding a POST url and callback.","timestamp":"2017-12-07T02:40:44.416Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-07T02:40:44.416Z"}
{"level":"info","message":"(req, res) => {\n  if(!req.body) {\n    sendStatus(res, 400, 'body not found!');\n    return;\n  }\n\n  if(!req.body.make) {\n    sendStatus(res, 400, 'make not found!');\n    return;\n  }\n  \n  if(!req.body.model) {\n    sendStatus(res, 400, 'model not found!');\n    return;\n  }\n\n  if(!req.body.year) {\n    sendStatus(res, 400, 'year not found!');\n    return;\n  }\n\n  if(!req.body.displacement) {\n    sendStatus(res, 400, 'displacement not found!');\n    return;\n  }\n\n  if(!req.body.color) {\n    sendStatus(res, 400, 'color not found!');\n    return;\n  }\n\n  let trialsBike = new TrialsBike(\n    req.body.make,\n    req.body.model,\n    req.body.year,\n    req.body.displacement,\n    req.body.color\n  );\n  \n  trialsBikes.push(trialsBike);\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T02:40:44.416Z"}
{"level":"info","message":"Server is up on port 3000.","timestamp":"2017-12-07T02:40:44.422Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T02:44:15.230Z"}
{"level":"info","message":"Original URL: \"/api/trials-bike\"","timestamp":"2017-12-07T02:44:15.230Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bike\",\"path\":\"/api/trials-bike\",\"href\":\"/api/trials-bike\"}","timestamp":"2017-12-07T02:44:15.231Z"}
{"level":"info","message":"Bad endpoint hit. 404.","timestamp":"2017-12-07T02:44:15.232Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T02:45:11.866Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T02:45:11.866Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T02:45:11.866Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T02:45:11.867Z"}
{"level":"info","message":"(req, res) => {\n  if(!req.body) {\n    sendStatus(res, 400, 'body not found!');\n    return;\n  }\n\n  if(!req.body.make) {\n    sendStatus(res, 400, 'make not found!');\n    return;\n  }\n  \n  if(!req.body.model) {\n    sendStatus(res, 400, 'model not found!');\n    return;\n  }\n\n  if(!req.body.year) {\n    sendStatus(res, 400, 'year not found!');\n    return;\n  }\n\n  if(!req.body.displacement) {\n    sendStatus(res, 400, 'displacement not found!');\n    return;\n  }\n\n  if(!req.body.color) {\n    sendStatus(res, 400, 'color not found!');\n    return;\n  }\n\n  let trialsBike = new TrialsBike(\n    req.body.make,\n    req.body.model,\n    req.body.year,\n    req.body.displacement,\n    req.body.color\n  );\n  \n  trialsBikes.push(trialsBike);\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T02:45:11.867Z"}
{"level":"info","message":"Responding with a 200 code and the following data:","timestamp":"2017-12-07T02:45:11.867Z"}
{"make":"Gas Gas","model":"TXT Race","year":2013,"displacement":280,"color":"orange","id":"a55560b0-daf8-11e7-b44b-4185e95f18ec","timestamp":"2017-12-07T02:45:11.867Z","level":"info","message":""}
{"level":"info","message":"Adding a POST url and callback.","timestamp":"2017-12-07T02:49:38.337Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-07T02:49:38.337Z"}
{"level":"info","message":"(req, res) => {\n  if(!req.body) {\n    sendStatus(res, 400, 'body not found!');\n    return;\n  }\n\n  if(!req.body.make) {\n    sendStatus(res, 400, 'make not found!');\n    return;\n  }\n  \n  if(!req.body.model) {\n    sendStatus(res, 400, 'model not found!');\n    return;\n  }\n\n  if(!req.body.year) {\n    sendStatus(res, 400, 'year not found!');\n    return;\n  }\n\n  if(!req.body.displacement) {\n    sendStatus(res, 400, 'displacement not found!');\n    return;\n  }\n\n  if(!req.body.color) {\n    sendStatus(res, 400, 'color not found!');\n    return;\n  }\n\n  let trialsBike = new TrialsBike(\n    req.body.make,\n    req.body.model,\n    req.body.year,\n    req.body.displacement,\n    req.body.color\n  );\n  \n  trialsBikes.push(trialsBike);\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T02:49:38.337Z"}
{"level":"info","message":"Server is up on port 3000.","timestamp":"2017-12-07T02:49:38.343Z"}
{"level":"info","message":"Adding a POST url and callback.","timestamp":"2017-12-07T02:53:09.219Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-07T02:53:09.219Z"}
{"level":"info","message":"(req, res) => {\n  if(!req.body) {\n    sendStatus(res, 400, 'body not found!');\n    return;\n  }\n\n  if(!req.body.make) {\n    sendStatus(res, 400, 'make not found!');\n    return;\n  }\n  \n  if(!req.body.model) {\n    sendStatus(res, 400, 'model not found!');\n    return;\n  }\n\n  if(!req.body.year) {\n    sendStatus(res, 400, 'year not found!');\n    return;\n  }\n\n  if(!req.body.displacement) {\n    sendStatus(res, 400, 'displacement not found!');\n    return;\n  }\n\n  if(!req.body.color) {\n    sendStatus(res, 400, 'color not found!');\n    return;\n  }\n\n  let trialsBike = new TrialsBike(\n    req.body.make,\n    req.body.model,\n    req.body.year,\n    req.body.displacement,\n    req.body.color\n  );\n  \n  trialsBikes.push(trialsBike);\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T02:53:09.219Z"}
{"level":"info","message":"Server is up on port 3000.","timestamp":"2017-12-07T02:53:09.225Z"}
{"level":"info","message":"Adding a POST url and callback.","timestamp":"2017-12-07T02:59:35.000Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-07T02:59:35.001Z"}
{"level":"info","message":"(req, res) => {\n  if(!req.body) {\n    sendStatus(res, 400, 'body not found!');\n    return;\n  }\n\n  if(!req.body.make) {\n    sendStatus(res, 400, 'make not found!');\n    return;\n  }\n  \n  if(!req.body.model) {\n    sendStatus(res, 400, 'model not found!');\n    return;\n  }\n\n  if(!req.body.year) {\n    sendStatus(res, 400, 'year not found!');\n    return;\n  }\n\n  if(!req.body.displacement) {\n    sendStatus(res, 400, 'displacement not found!');\n    return;\n  }\n\n  if(!req.body.color) {\n    sendStatus(res, 400, 'color not found!');\n    return;\n  }\n\n  let trialsBike = new TrialsBike(\n    req.body.make,\n    req.body.model,\n    req.body.year,\n    req.body.displacement,\n    req.body.color\n  );\n  \n  trialsBikes.push(trialsBike);\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T02:59:35.001Z"}
{"level":"info","message":"Server is up on port 3000.","timestamp":"2017-12-07T02:59:35.007Z"}
{"level":"info","message":"Adding a POST url and callback.","timestamp":"2017-12-07T03:00:23.640Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-07T03:00:23.641Z"}
{"level":"info","message":"(req, res) => {\n  if(!req.body) {\n    sendStatus(res, 400, 'body not found!');\n    return;\n  }\n\n  if(!req.body.make) {\n    sendStatus(res, 400, 'make not found!');\n    return;\n  }\n  \n  if(!req.body.model) {\n    sendStatus(res, 400, 'model not found!');\n    return;\n  }\n\n  if(!req.body.year) {\n    sendStatus(res, 400, 'year not found!');\n    return;\n  }\n\n  if(!req.body.displacement) {\n    sendStatus(res, 400, 'displacement not found!');\n    return;\n  }\n\n  if(!req.body.color) {\n    sendStatus(res, 400, 'color not found!');\n    return;\n  }\n\n  let trialsBike = new TrialsBike(\n    req.body.make,\n    req.body.model,\n    req.body.year,\n    req.body.displacement,\n    req.body.color\n  );\n  \n  trialsBikes.push(trialsBike);\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T03:00:23.641Z"}
{"level":"info","message":"Server is up on port 3000.","timestamp":"2017-12-07T03:00:23.646Z"}
{"level":"info","message":"Adding a POST url and callback.","timestamp":"2017-12-07T03:02:55.965Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-07T03:02:55.966Z"}
{"level":"info","message":"(req, res) => {\n  if(!req.body) {\n    sendStatus(res, 400, 'body not found!');\n    return;\n  }\n\n  if(!req.body.make) {\n    sendStatus(res, 400, 'make not found!');\n    return;\n  }\n  \n  if(!req.body.model) {\n    sendStatus(res, 400, 'model not found!');\n    return;\n  }\n\n  if(!req.body.year) {\n    sendStatus(res, 400, 'year not found!');\n    return;\n  }\n\n  if(!req.body.displacement) {\n    sendStatus(res, 400, 'displacement not found!');\n    return;\n  }\n\n  if(!req.body.color) {\n    sendStatus(res, 400, 'color not found!');\n    return;\n  }\n\n  let trialsBike = new TrialsBike(\n    req.body.make,\n    req.body.model,\n    req.body.year,\n    req.body.displacement,\n    req.body.color\n  );\n  \n  trialsBikes.push(trialsBike);\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T03:02:55.966Z"}
{"level":"info","message":"Server is up on port 3000.","timestamp":"2017-12-07T03:02:55.972Z"}
{"level":"info","message":"Adding a POST url and callback.","timestamp":"2017-12-07T04:48:59.799Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-07T04:48:59.799Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[2]++;cov_ratewsw8z.s[16]++;\n  if (!req.body) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[17]++;\n    sendStatus(res, 400, 'body not found!'); /* istanbul ignore next */cov_ratewsw8z.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[19]++;\n\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[20]++;\n    sendStatus(res, 400, 'make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[22]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[23]++;\n    sendStatus(res, 400, 'model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[25]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[26]++;\n    sendStatus(res, 400, 'year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[28]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[29]++;\n    sendStatus(res, 400, 'displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[30]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[31]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[32]++;\n    sendStatus(res, 400, 'color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[34]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[35]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[36]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T04:48:59.799Z"}
{"level":"info","message":"Server is up on port 3000.","timestamp":"2017-12-07T04:48:59.844Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T04:48:59.855Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T04:48:59.856Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T04:48:59.856Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T04:48:59.856Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[2]++;cov_ratewsw8z.s[16]++;\n  if (!req.body) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[17]++;\n    sendStatus(res, 400, 'body not found!'); /* istanbul ignore next */cov_ratewsw8z.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[19]++;\n\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[20]++;\n    sendStatus(res, 400, 'make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[22]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[23]++;\n    sendStatus(res, 400, 'model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[25]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[26]++;\n    sendStatus(res, 400, 'year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[28]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[29]++;\n    sendStatus(res, 400, 'displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[30]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[31]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[32]++;\n    sendStatus(res, 400, 'color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[34]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[35]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[36]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T04:48:59.856Z"}
{"level":"info","message":"Responding with a 200 code and the following data:","timestamp":"2017-12-07T04:48:59.857Z"}
{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"f0c2b410-db09-11e7-8570-7b4ca89bd471","timestamp":"2017-12-07T04:48:59.857Z","level":"info","message":""}
{"level":"info","message":"Adding a POST url and callback.","timestamp":"2017-12-07T04:53:08.825Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-07T04:53:08.826Z"}
{"level":"info","message":"(req, res) => {\n  if(!req.body) {\n    sendStatus(res, 400, 'body not found!');\n    return;\n  }\n\n  if(!req.body.make) {\n    sendStatus(res, 400, 'make not found!');\n    return;\n  }\n  \n  if(!req.body.model) {\n    sendStatus(res, 400, 'model not found!');\n    return;\n  }\n\n  if(!req.body.year) {\n    sendStatus(res, 400, 'year not found!');\n    return;\n  }\n\n  if(!req.body.displacement) {\n    sendStatus(res, 400, 'displacement not found!');\n    return;\n  }\n\n  if(!req.body.color) {\n    sendStatus(res, 400, 'color not found!');\n    return;\n  }\n\n  let trialsBike = new TrialsBike(\n    req.body.make,\n    req.body.model,\n    req.body.year,\n    req.body.displacement,\n    req.body.color\n  );\n  \n  trialsBikes.push(trialsBike);\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T04:53:08.826Z"}
{"level":"info","message":"Server is up on port 3000.","timestamp":"2017-12-07T04:53:08.832Z"}
{"level":"info","message":"Adding a POST url and callback.","timestamp":"2017-12-07T04:53:52.965Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-07T04:53:52.966Z"}
{"level":"info","message":"(req, res) => {\n  if(!req.body) {\n    sendStatus(res, 400, 'body not found!');\n    return;\n  }\n\n  if(!req.body.make) {\n    sendStatus(res, 400, 'make not found!');\n    return;\n  }\n  \n  if(!req.body.model) {\n    sendStatus(res, 400, 'model not found!');\n    return;\n  }\n\n  if(!req.body.year) {\n    sendStatus(res, 400, 'year not found!');\n    return;\n  }\n\n  if(!req.body.displacement) {\n    sendStatus(res, 400, 'displacement not found!');\n    return;\n  }\n\n  if(!req.body.color) {\n    sendStatus(res, 400, 'color not found!');\n    return;\n  }\n\n  let trialsBike = new TrialsBike(\n    req.body.make,\n    req.body.model,\n    req.body.year,\n    req.body.displacement,\n    req.body.color\n  );\n  \n  trialsBikes.push(trialsBike);\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T04:53:52.966Z"}
{"level":"info","message":"Server is up on port 3000.","timestamp":"2017-12-07T04:53:52.971Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T04:54:56.538Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T04:54:56.538Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T04:54:56.539Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T04:54:56.540Z"}
{"level":"info","message":"(req, res) => {\n  if(!req.body) {\n    sendStatus(res, 400, 'body not found!');\n    return;\n  }\n\n  if(!req.body.make) {\n    sendStatus(res, 400, 'make not found!');\n    return;\n  }\n  \n  if(!req.body.model) {\n    sendStatus(res, 400, 'model not found!');\n    return;\n  }\n\n  if(!req.body.year) {\n    sendStatus(res, 400, 'year not found!');\n    return;\n  }\n\n  if(!req.body.displacement) {\n    sendStatus(res, 400, 'displacement not found!');\n    return;\n  }\n\n  if(!req.body.color) {\n    sendStatus(res, 400, 'color not found!');\n    return;\n  }\n\n  let trialsBike = new TrialsBike(\n    req.body.make,\n    req.body.model,\n    req.body.year,\n    req.body.displacement,\n    req.body.color\n  );\n  \n  trialsBikes.push(trialsBike);\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T04:54:56.540Z"}
{"level":"info","message":"Responding with a 200 code and the following data:","timestamp":"2017-12-07T04:54:56.540Z"}
{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"c55c35c0-db0a-11e7-9fef-6ded10ed07bb","timestamp":"2017-12-07T04:54:56.540Z","level":"info","message":""}
{"level":"info","message":"Adding a POST url and callback.","timestamp":"2017-12-07T04:56:26.570Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-07T04:56:26.570Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[2]++;cov_ratewsw8z.s[16]++;\n  if (!req.body) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[17]++;\n    sendStatus(res, 400, 'body not found!'); /* istanbul ignore next */cov_ratewsw8z.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[19]++;\n\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[20]++;\n    sendStatus(res, 400, 'make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[22]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[23]++;\n    sendStatus(res, 400, 'model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[25]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[26]++;\n    sendStatus(res, 400, 'year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[28]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[29]++;\n    sendStatus(res, 400, 'displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[30]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[31]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[32]++;\n    sendStatus(res, 400, 'color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[34]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[35]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[36]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T04:56:26.570Z"}
{"level":"info","message":"Server is up on port 3000.","timestamp":"2017-12-07T04:56:26.609Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T04:56:26.620Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T04:56:26.620Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T04:56:26.620Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T04:56:26.621Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[2]++;cov_ratewsw8z.s[16]++;\n  if (!req.body) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[17]++;\n    sendStatus(res, 400, 'body not found!'); /* istanbul ignore next */cov_ratewsw8z.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[19]++;\n\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[20]++;\n    sendStatus(res, 400, 'make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[22]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[23]++;\n    sendStatus(res, 400, 'model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[25]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[26]++;\n    sendStatus(res, 400, 'year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[28]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[29]++;\n    sendStatus(res, 400, 'displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[30]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[31]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[32]++;\n    sendStatus(res, 400, 'color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[34]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[35]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[36]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T04:56:26.621Z"}
{"level":"info","message":"Responding with a 200 code and the following data:","timestamp":"2017-12-07T04:56:26.622Z"}
{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"fb0d7ad0-db0a-11e7-b6c6-e38cf296c094","timestamp":"2017-12-07T04:56:26.622Z","level":"info","message":""}
{"level":"info","message":"Adding a POST url and callback.","timestamp":"2017-12-07T04:56:57.988Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-07T04:56:57.989Z"}
{"level":"info","message":"(req, res) => {\n  if(!req.body) {\n    sendStatus(res, 400, 'body not found!');\n    return;\n  }\n\n  if(!req.body.make) {\n    sendStatus(res, 400, 'make not found!');\n    return;\n  }\n  \n  if(!req.body.model) {\n    sendStatus(res, 400, 'model not found!');\n    return;\n  }\n\n  if(!req.body.year) {\n    sendStatus(res, 400, 'year not found!');\n    return;\n  }\n\n  if(!req.body.displacement) {\n    sendStatus(res, 400, 'displacement not found!');\n    return;\n  }\n\n  if(!req.body.color) {\n    sendStatus(res, 400, 'color not found!');\n    return;\n  }\n\n  let trialsBike = new TrialsBike(\n    req.body.make,\n    req.body.model,\n    req.body.year,\n    req.body.displacement,\n    req.body.color\n  );\n  \n  trialsBikes.push(trialsBike);\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T04:56:57.989Z"}
{"level":"info","message":"Server is up on port 3000.","timestamp":"2017-12-07T04:56:57.994Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T04:57:29.886Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T04:57:29.887Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T04:57:29.887Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T04:57:29.888Z"}
{"message":"Cannot read property 'includes' of undefined","stack":"TypeError: Cannot read property 'includes' of undefined\n    at IncomingMessage.req.on (/Users/robertreed/Documents/programming/cf/401/lab/08-09-vanilla-rest-server/lab-rob/lib/req-parser.js:24:40)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-07T04:57:29.888Z"}
{"level":"info","message":"Adding a POST url and callback.","timestamp":"2017-12-07T05:00:29.145Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-07T05:00:29.145Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[2]++;cov_ratewsw8z.s[16]++;\n  if (!req.body) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[17]++;\n    sendStatus(res, 400, 'body not found!'); /* istanbul ignore next */cov_ratewsw8z.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[19]++;\n\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[20]++;\n    sendStatus(res, 400, 'make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[22]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[23]++;\n    sendStatus(res, 400, 'model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[25]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[26]++;\n    sendStatus(res, 400, 'year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[28]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[29]++;\n    sendStatus(res, 400, 'displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[30]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[31]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[32]++;\n    sendStatus(res, 400, 'color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[34]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[35]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[36]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T05:00:29.145Z"}
{"level":"info","message":"Server is up on port 3000.","timestamp":"2017-12-07T05:00:29.182Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T05:00:29.194Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T05:00:29.194Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T05:00:29.194Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T05:00:29.195Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[2]++;cov_ratewsw8z.s[16]++;\n  if (!req.body) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[17]++;\n    sendStatus(res, 400, 'body not found!'); /* istanbul ignore next */cov_ratewsw8z.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[19]++;\n\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[20]++;\n    sendStatus(res, 400, 'make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[22]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[23]++;\n    sendStatus(res, 400, 'model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[25]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[26]++;\n    sendStatus(res, 400, 'year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[28]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[29]++;\n    sendStatus(res, 400, 'displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[30]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[31]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[32]++;\n    sendStatus(res, 400, 'color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[34]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[35]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[36]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T05:00:29.195Z"}
{"level":"info","message":"Responding with a 200 code and the following data:","timestamp":"2017-12-07T05:00:29.195Z"}
{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"8ba355b0-db0b-11e7-a20c-bf1818ea8d90","timestamp":"2017-12-07T05:00:29.195Z","level":"info","message":""}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T05:00:29.203Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T05:00:29.203Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T05:00:29.203Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T05:00:29.204Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.req.on (/Users/robertreed/Documents/programming/cf/401/lab/08-09-vanilla-rest-server/lab-rob/lib/req-parser.js:25:27)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-07T05:00:29.204Z"}
{"level":"info","message":"Adding a POST url and callback.","timestamp":"2017-12-07T05:01:29.029Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-07T05:01:29.030Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[2]++;cov_ratewsw8z.s[16]++;\n  if (!req.body) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[17]++;\n    sendStatus(res, 400, 'body not found!'); /* istanbul ignore next */cov_ratewsw8z.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[19]++;\n\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[20]++;\n    sendStatus(res, 400, 'make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[22]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[23]++;\n    sendStatus(res, 400, 'model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[25]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[26]++;\n    sendStatus(res, 400, 'year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[28]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[29]++;\n    sendStatus(res, 400, 'displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[30]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[31]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[32]++;\n    sendStatus(res, 400, 'color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[34]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[35]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[36]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T05:01:29.030Z"}
{"level":"info","message":"Server is up on port 3000.","timestamp":"2017-12-07T05:01:29.065Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T05:01:29.078Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T05:01:29.078Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T05:01:29.078Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T05:01:29.079Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[2]++;cov_ratewsw8z.s[16]++;\n  if (!req.body) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[17]++;\n    sendStatus(res, 400, 'body not found!'); /* istanbul ignore next */cov_ratewsw8z.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[19]++;\n\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[20]++;\n    sendStatus(res, 400, 'make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[22]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[23]++;\n    sendStatus(res, 400, 'model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[25]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[26]++;\n    sendStatus(res, 400, 'year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[28]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[29]++;\n    sendStatus(res, 400, 'displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[30]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[31]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[32]++;\n    sendStatus(res, 400, 'color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[34]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[35]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[36]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T05:01:29.079Z"}
{"level":"info","message":"Responding with a 200 code and the following data:","timestamp":"2017-12-07T05:01:29.079Z"}
{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"af54e870-db0b-11e7-8e5e-df8d73c2bef9","timestamp":"2017-12-07T05:01:29.079Z","level":"info","message":""}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T05:01:29.086Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T05:01:29.087Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T05:01:29.087Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T05:01:29.087Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.req.on (/Users/robertreed/Documents/programming/cf/401/lab/08-09-vanilla-rest-server/lab-rob/lib/req-parser.js:25:27)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-07T05:01:29.087Z"}
{"level":"info","message":"Adding a POST url and callback.","timestamp":"2017-12-07T05:01:53.974Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-07T05:01:53.975Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[2]++;cov_ratewsw8z.s[16]++;\n  if (!req.body) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[17]++;\n    sendStatus(res, 400, 'body not found!'); /* istanbul ignore next */cov_ratewsw8z.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[19]++;\n\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[20]++;\n    sendStatus(res, 400, 'make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[22]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[23]++;\n    sendStatus(res, 400, 'model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[25]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[26]++;\n    sendStatus(res, 400, 'year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[28]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[29]++;\n    sendStatus(res, 400, 'displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[30]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[31]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[32]++;\n    sendStatus(res, 400, 'color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[34]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[35]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[36]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T05:01:53.975Z"}
{"level":"info","message":"Server is up on port 3000.","timestamp":"2017-12-07T05:01:54.013Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T05:01:54.026Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T05:01:54.027Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T05:01:54.027Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T05:01:54.027Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[2]++;cov_ratewsw8z.s[16]++;\n  if (!req.body) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[17]++;\n    sendStatus(res, 400, 'body not found!'); /* istanbul ignore next */cov_ratewsw8z.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[19]++;\n\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[20]++;\n    sendStatus(res, 400, 'make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[22]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[23]++;\n    sendStatus(res, 400, 'model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[25]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[26]++;\n    sendStatus(res, 400, 'year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[28]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[29]++;\n    sendStatus(res, 400, 'displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[30]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[31]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[32]++;\n    sendStatus(res, 400, 'color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[34]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[35]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[36]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T05:01:54.027Z"}
{"level":"info","message":"Responding with a 200 code and the following data:","timestamp":"2017-12-07T05:01:54.028Z"}
{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"be33d2c0-db0b-11e7-bc43-d17f0fdfe5ae","timestamp":"2017-12-07T05:01:54.028Z","level":"info","message":""}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T05:01:54.036Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T05:01:54.036Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T05:01:54.036Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T05:01:54.036Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.req.on (/Users/robertreed/Documents/programming/cf/401/lab/08-09-vanilla-rest-server/lab-rob/lib/req-parser.js:25:27)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-07T05:01:54.036Z"}
{"level":"info","message":"Adding a POST url and callback.","timestamp":"2017-12-07T05:02:41.883Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-07T05:02:41.883Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[2]++;cov_ratewsw8z.s[16]++;\n  if (!req.body) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[17]++;\n    sendStatus(res, 400, 'body not found!'); /* istanbul ignore next */cov_ratewsw8z.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[19]++;\n\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[20]++;\n    sendStatus(res, 400, 'make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[22]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[23]++;\n    sendStatus(res, 400, 'model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[25]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[26]++;\n    sendStatus(res, 400, 'year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[28]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[29]++;\n    sendStatus(res, 400, 'displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[30]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[31]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[32]++;\n    sendStatus(res, 400, 'color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[34]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[35]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[36]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T05:02:41.884Z"}
{"level":"info","message":"Server is up on port 3000.","timestamp":"2017-12-07T05:02:41.921Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T05:02:41.933Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T05:02:41.934Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T05:02:41.934Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T05:02:41.934Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[2]++;cov_ratewsw8z.s[16]++;\n  if (!req.body) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[17]++;\n    sendStatus(res, 400, 'body not found!'); /* istanbul ignore next */cov_ratewsw8z.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[19]++;\n\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[20]++;\n    sendStatus(res, 400, 'make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[22]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[23]++;\n    sendStatus(res, 400, 'model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[25]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[26]++;\n    sendStatus(res, 400, 'year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[28]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[29]++;\n    sendStatus(res, 400, 'displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[30]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[31]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[32]++;\n    sendStatus(res, 400, 'color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[34]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[35]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[36]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T05:02:41.934Z"}
{"level":"info","message":"Responding with a 200 code and the following data:","timestamp":"2017-12-07T05:02:41.935Z"}
{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"dac1d9f0-db0b-11e7-8297-db88ff704631","timestamp":"2017-12-07T05:02:41.935Z","level":"info","message":""}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T05:02:41.942Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T05:02:41.943Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T05:02:41.943Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T05:02:41.943Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.req.on (/Users/robertreed/Documents/programming/cf/401/lab/08-09-vanilla-rest-server/lab-rob/lib/req-parser.js:25:27)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-07T05:02:41.943Z"}
{"level":"info","message":"Adding a POST url and callback.","timestamp":"2017-12-07T05:03:36.519Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-07T05:03:36.520Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[2]++;cov_ratewsw8z.s[16]++;\n  if (!req.body) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[17]++;\n    sendStatus(res, 400, 'body not found!'); /* istanbul ignore next */cov_ratewsw8z.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[19]++;\n\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[20]++;\n    sendStatus(res, 400, 'make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[22]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[23]++;\n    sendStatus(res, 400, 'model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[25]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[26]++;\n    sendStatus(res, 400, 'year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[28]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[29]++;\n    sendStatus(res, 400, 'displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[30]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[31]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[32]++;\n    sendStatus(res, 400, 'color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[34]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[35]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[36]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T05:03:36.520Z"}
{"level":"info","message":"Server is up on port 3000.","timestamp":"2017-12-07T05:03:36.556Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T05:03:36.568Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T05:03:36.568Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T05:03:36.568Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T05:03:36.569Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[2]++;cov_ratewsw8z.s[16]++;\n  if (!req.body) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[17]++;\n    sendStatus(res, 400, 'body not found!'); /* istanbul ignore next */cov_ratewsw8z.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[19]++;\n\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[20]++;\n    sendStatus(res, 400, 'make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[22]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[23]++;\n    sendStatus(res, 400, 'model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[25]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[26]++;\n    sendStatus(res, 400, 'year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[28]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[29]++;\n    sendStatus(res, 400, 'displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[30]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[31]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[32]++;\n    sendStatus(res, 400, 'color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[34]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[35]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[36]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T05:03:36.569Z"}
{"level":"info","message":"Responding with a 200 code and the following data:","timestamp":"2017-12-07T05:03:36.570Z"}
{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"fb525690-db0b-11e7-bd30-151287018b34","timestamp":"2017-12-07T05:03:36.570Z","level":"info","message":""}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T05:03:36.577Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T05:03:36.577Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T05:03:36.577Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T05:03:36.578Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.req.on (/Users/robertreed/Documents/programming/cf/401/lab/08-09-vanilla-rest-server/lab-rob/lib/req-parser.js:25:27)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-07T05:03:36.578Z"}
{"level":"info","message":"Adding a POST url and callback.","timestamp":"2017-12-07T05:10:22.549Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-07T05:10:22.549Z"}
{"level":"info","message":"(req, res) => {\n  if(!req.body) {\n    sendStatus(res, 400, 'body not found!');\n    return;\n  }\n\n  if(!req.body.make) {\n    sendStatus(res, 400, 'make not found!');\n    return;\n  }\n  \n  if(!req.body.model) {\n    sendStatus(res, 400, 'model not found!');\n    return;\n  }\n\n  if(!req.body.year) {\n    sendStatus(res, 400, 'year not found!');\n    return;\n  }\n\n  if(!req.body.displacement) {\n    sendStatus(res, 400, 'displacement not found!');\n    return;\n  }\n\n  if(!req.body.color) {\n    sendStatus(res, 400, 'color not found!');\n    return;\n  }\n\n  let trialsBike = new TrialsBike(\n    req.body.make,\n    req.body.model,\n    req.body.year,\n    req.body.displacement,\n    req.body.color\n  );\n  \n  trialsBikes.push(trialsBike);\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T05:10:22.549Z"}
{"level":"info","message":"Server is up on port 3000.","timestamp":"2017-12-07T05:10:22.555Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T05:10:28.513Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T05:10:28.513Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T05:10:28.514Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T05:10:28.515Z"}
{"message":"Cannot read property 'includes' of undefined","stack":"TypeError: Cannot read property 'includes' of undefined\n    at IncomingMessage.req.on (/Users/robertreed/Documents/programming/cf/401/lab/08-09-vanilla-rest-server/lab-rob/lib/req-parser.js:24:40)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-07T05:10:28.515Z"}
{"level":"info","message":"Adding a POST url and callback.","timestamp":"2017-12-07T05:10:52.967Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-07T05:10:52.967Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[2]++;cov_ratewsw8z.s[16]++;\n  if (!req.body) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[17]++;\n    sendStatus(res, 400, 'body not found!'); /* istanbul ignore next */cov_ratewsw8z.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[19]++;\n\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[20]++;\n    sendStatus(res, 400, 'make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[22]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[23]++;\n    sendStatus(res, 400, 'model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[25]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[26]++;\n    sendStatus(res, 400, 'year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[28]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[29]++;\n    sendStatus(res, 400, 'displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[30]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[31]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[32]++;\n    sendStatus(res, 400, 'color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[34]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[35]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[36]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T05:10:52.967Z"}
{"level":"info","message":"Server is up on port 3000.","timestamp":"2017-12-07T05:10:53.003Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T05:10:53.015Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T05:10:53.015Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T05:10:53.015Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T05:10:53.016Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[2]++;cov_ratewsw8z.s[16]++;\n  if (!req.body) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[17]++;\n    sendStatus(res, 400, 'body not found!'); /* istanbul ignore next */cov_ratewsw8z.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[19]++;\n\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[20]++;\n    sendStatus(res, 400, 'make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[22]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[23]++;\n    sendStatus(res, 400, 'model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[25]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[26]++;\n    sendStatus(res, 400, 'year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[28]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[29]++;\n    sendStatus(res, 400, 'displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[30]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[31]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[32]++;\n    sendStatus(res, 400, 'color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[34]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[35]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[36]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T05:10:53.016Z"}
{"level":"info","message":"Responding with a 200 code and the following data:","timestamp":"2017-12-07T05:10:53.016Z"}
{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"ff76dd80-db0c-11e7-aecb-7d368bd0f61e","timestamp":"2017-12-07T05:10:53.016Z","level":"info","message":""}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T05:10:53.024Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T05:10:53.024Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T05:10:53.024Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T05:10:53.024Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.req.on (/Users/robertreed/Documents/programming/cf/401/lab/08-09-vanilla-rest-server/lab-rob/lib/req-parser.js:25:27)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-07T05:10:53.024Z"}
{"level":"info","message":"Adding a POST url and callback.","timestamp":"2017-12-07T05:16:04.677Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-07T05:16:04.678Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[2]++;cov_ratewsw8z.s[17]++;\n  if (!req.body) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[18]++;\n    sendStatus(res, 400, 'body not found!'); /* istanbul ignore next */cov_ratewsw8z.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[20]++;\n\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[21]++;\n    sendStatus(res, 400, 'make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[24]++;\n    sendStatus(res, 400, 'model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[27]++;\n    sendStatus(res, 400, 'year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[30]++;\n    sendStatus(res, 400, 'displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[32]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[33]++;\n    sendStatus(res, 400, 'color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[35]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[36]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[37]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T05:16:04.678Z"}
{"level":"info","message":"Server is up on port 3000.","timestamp":"2017-12-07T05:16:04.716Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T05:16:04.758Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T05:16:04.758Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T05:16:04.758Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T05:16:04.759Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[2]++;cov_ratewsw8z.s[17]++;\n  if (!req.body) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[18]++;\n    sendStatus(res, 400, 'body not found!'); /* istanbul ignore next */cov_ratewsw8z.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[20]++;\n\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[21]++;\n    sendStatus(res, 400, 'make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[24]++;\n    sendStatus(res, 400, 'model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[27]++;\n    sendStatus(res, 400, 'year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[30]++;\n    sendStatus(res, 400, 'displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[32]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[33]++;\n    sendStatus(res, 400, 'color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[35]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[36]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[37]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T05:16:04.759Z"}
{"level":"info","message":"Responding with a 200 code and the following data:","timestamp":"2017-12-07T05:16:04.759Z"}
{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"b9471270-db0d-11e7-88fb-53267f68fc92","timestamp":"2017-12-07T05:16:04.760Z","level":"info","message":""}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T05:16:04.767Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T05:16:04.767Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T05:16:04.767Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T05:16:04.767Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.req.on (/Users/robertreed/Documents/programming/cf/401/lab/08-09-vanilla-rest-server/lab-rob/lib/req-parser.js:25:27)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-07T05:16:04.768Z"}
{"level":"info","message":"Adding a POST url and callback.","timestamp":"2017-12-07T05:16:17.411Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-07T05:16:17.412Z"}
{"level":"info","message":"(req, res) => {\n  if(!req.body) {\n    sendStatus(res, 400, 'body not found!');\n    return;\n  }\n\n  if(!req.body.make) {\n    sendStatus(res, 400, 'make not found!');\n    return;\n  }\n  \n  if(!req.body.model) {\n    sendStatus(res, 400, 'model not found!');\n    return;\n  }\n\n  if(!req.body.year) {\n    sendStatus(res, 400, 'year not found!');\n    return;\n  }\n\n  if(!req.body.displacement) {\n    sendStatus(res, 400, 'displacement not found!');\n    return;\n  }\n\n  if(!req.body.color) {\n    sendStatus(res, 400, 'color not found!');\n    return;\n  }\n\n  let trialsBike = new TrialsBike(\n    req.body.make,\n    req.body.model,\n    req.body.year,\n    req.body.displacement,\n    req.body.color\n  );\n  \n  trialsBikes.push(trialsBike);\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T05:16:17.412Z"}
{"level":"info","message":"Server is up on port 3000.","timestamp":"2017-12-07T05:16:17.418Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T05:16:21.528Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T05:16:21.528Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T05:16:21.528Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T05:16:21.529Z"}
{"message":"Cannot read property 'includes' of undefined","stack":"TypeError: Cannot read property 'includes' of undefined\n    at IncomingMessage.req.on (/Users/robertreed/Documents/programming/cf/401/lab/08-09-vanilla-rest-server/lab-rob/lib/req-parser.js:24:40)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-07T05:16:21.529Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T05:16:57.734Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T05:16:57.734Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T05:16:57.734Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T05:16:57.735Z"}
{"level":"info","message":"(req, res) => {\n  if(!req.body) {\n    sendStatus(res, 400, 'body not found!');\n    return;\n  }\n\n  if(!req.body.make) {\n    sendStatus(res, 400, 'make not found!');\n    return;\n  }\n  \n  if(!req.body.model) {\n    sendStatus(res, 400, 'model not found!');\n    return;\n  }\n\n  if(!req.body.year) {\n    sendStatus(res, 400, 'year not found!');\n    return;\n  }\n\n  if(!req.body.displacement) {\n    sendStatus(res, 400, 'displacement not found!');\n    return;\n  }\n\n  if(!req.body.color) {\n    sendStatus(res, 400, 'color not found!');\n    return;\n  }\n\n  let trialsBike = new TrialsBike(\n    req.body.make,\n    req.body.model,\n    req.body.year,\n    req.body.displacement,\n    req.body.color\n  );\n  \n  trialsBikes.push(trialsBike);\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T05:16:57.735Z"}
{"level":"info","message":"Responding with a 400 code due to model not found!.","timestamp":"2017-12-07T05:16:57.735Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T05:17:29.474Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T05:17:29.474Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T05:17:29.474Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T05:17:29.474Z"}
{"level":"info","message":"(req, res) => {\n  if(!req.body) {\n    sendStatus(res, 400, 'body not found!');\n    return;\n  }\n\n  if(!req.body.make) {\n    sendStatus(res, 400, 'make not found!');\n    return;\n  }\n  \n  if(!req.body.model) {\n    sendStatus(res, 400, 'model not found!');\n    return;\n  }\n\n  if(!req.body.year) {\n    sendStatus(res, 400, 'year not found!');\n    return;\n  }\n\n  if(!req.body.displacement) {\n    sendStatus(res, 400, 'displacement not found!');\n    return;\n  }\n\n  if(!req.body.color) {\n    sendStatus(res, 400, 'color not found!');\n    return;\n  }\n\n  let trialsBike = new TrialsBike(\n    req.body.make,\n    req.body.model,\n    req.body.year,\n    req.body.displacement,\n    req.body.color\n  );\n  \n  trialsBikes.push(trialsBike);\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T05:17:29.474Z"}
{"level":"info","message":"Responding with a 400 code due to make not found!.","timestamp":"2017-12-07T05:17:29.474Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T05:17:42.008Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T05:17:42.008Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T05:17:42.008Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T05:17:42.008Z"}
{"level":"info","message":"(req, res) => {\n  if(!req.body) {\n    sendStatus(res, 400, 'body not found!');\n    return;\n  }\n\n  if(!req.body.make) {\n    sendStatus(res, 400, 'make not found!');\n    return;\n  }\n  \n  if(!req.body.model) {\n    sendStatus(res, 400, 'model not found!');\n    return;\n  }\n\n  if(!req.body.year) {\n    sendStatus(res, 400, 'year not found!');\n    return;\n  }\n\n  if(!req.body.displacement) {\n    sendStatus(res, 400, 'displacement not found!');\n    return;\n  }\n\n  if(!req.body.color) {\n    sendStatus(res, 400, 'color not found!');\n    return;\n  }\n\n  let trialsBike = new TrialsBike(\n    req.body.make,\n    req.body.model,\n    req.body.year,\n    req.body.displacement,\n    req.body.color\n  );\n  \n  trialsBikes.push(trialsBike);\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T05:17:42.008Z"}
{"level":"info","message":"Responding with a 400 code due to make not found!.","timestamp":"2017-12-07T05:17:42.008Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T05:17:49.537Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T05:17:49.537Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T05:17:49.537Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T05:17:49.538Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.req.on (/Users/robertreed/Documents/programming/cf/401/lab/08-09-vanilla-rest-server/lab-rob/lib/req-parser.js:25:27)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-07T05:17:49.538Z"}
{"level":"info","message":"Adding a POST url and callback.","timestamp":"2017-12-07T05:25:52.856Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-07T05:25:52.857Z"}
{"level":"info","message":"(req, res) => {\n  if(!req.body) {\n    sendBadStatus(res, 400, 'body not found!');\n    return;\n  }\n\n  if(!req.body.make) {\n    sendBadStatus(res, 400, 'make not found!');\n    return;\n  }\n  \n  if(!req.body.model) {\n    sendBadStatus(res, 400, 'model not found!');\n    return;\n  }\n\n  if(!req.body.year) {\n    sendBadStatus(res, 400, 'year not found!');\n    return;\n  }\n\n  if(!req.body.displacement) {\n    sendBadStatus(res, 400, 'displacement not found!');\n    return;\n  }\n\n  if(!req.body.color) {\n    sendBadStatus(res, 400, 'color not found!');\n    return;\n  }\n\n  let trialsBike = new TrialsBike(\n    req.body.make,\n    req.body.model,\n    req.body.year,\n    req.body.displacement,\n    req.body.color\n  );\n  \n  trialsBikes.push(trialsBike);\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T05:25:52.857Z"}
{"level":"info","message":"Server is up on port 3000.","timestamp":"2017-12-07T05:25:52.862Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T05:25:57.622Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T05:25:57.622Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T05:25:57.623Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T05:25:57.624Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.req.on (/Users/robertreed/Documents/programming/cf/401/lab/08-09-vanilla-rest-server/lab-rob/lib/req-parser.js:25:27)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-07T05:25:57.624Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T05:35:29.050Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T05:35:29.050Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T05:35:29.050Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T05:35:29.050Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.req.on (/Users/robertreed/Documents/programming/cf/401/lab/08-09-vanilla-rest-server/lab-rob/lib/req-parser.js:25:27)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-07T05:35:29.050Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T05:35:39.048Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T05:35:39.049Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T05:35:39.049Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T05:35:39.049Z"}
{"message":"Cannot read property 'includes' of undefined","stack":"TypeError: Cannot read property 'includes' of undefined\n    at IncomingMessage.req.on (/Users/robertreed/Documents/programming/cf/401/lab/08-09-vanilla-rest-server/lab-rob/lib/req-parser.js:24:40)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-07T05:35:39.049Z"}
{"level":"info","message":"Adding a POST url and callback.","timestamp":"2017-12-07T05:38:48.951Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-07T05:38:48.951Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[2]++;cov_ratewsw8z.s[17]++;\n  if (!req.body) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[18]++;\n    sendBadStatus(res, 400, 'body not found!'); /* istanbul ignore next */cov_ratewsw8z.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[20]++;\n\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, 'make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, 'model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, 'year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, 'displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[32]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[33]++;\n    sendBadStatus(res, 400, 'color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[35]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[36]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[37]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T05:38:48.952Z"}
{"level":"info","message":"Server is up on port 3000.","timestamp":"2017-12-07T05:38:48.989Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T05:38:49.031Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T05:38:49.031Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T05:38:49.031Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T05:38:49.032Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[2]++;cov_ratewsw8z.s[17]++;\n  if (!req.body) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[18]++;\n    sendBadStatus(res, 400, 'body not found!'); /* istanbul ignore next */cov_ratewsw8z.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[20]++;\n\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, 'make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, 'model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, 'year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, 'displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[32]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[33]++;\n    sendBadStatus(res, 400, 'color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[35]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[36]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[37]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T05:38:49.032Z"}
{"level":"info","message":"Responding with a 200 code and the following data:","timestamp":"2017-12-07T05:38:49.032Z"}
{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"e6729c80-db10-11e7-8652-5737a8ab9fc8","timestamp":"2017-12-07T05:38:49.032Z","level":"info","message":""}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T05:38:49.040Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T05:38:49.040Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T05:38:49.040Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T05:38:49.041Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.req.on (/Users/robertreed/Documents/programming/cf/401/lab/08-09-vanilla-rest-server/lab-rob/lib/req-parser.js:25:27)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-07T05:38:49.041Z"}
{"level":"info","message":"Adding a POST url and callback.","timestamp":"2017-12-07T05:39:41.468Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-07T05:39:41.469Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[2]++;cov_ratewsw8z.s[17]++;\n  if (!req.body) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[18]++;\n    sendBadStatus(res, 400, 'body not found!'); /* istanbul ignore next */cov_ratewsw8z.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[20]++;\n\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, 'make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, 'model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, 'year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, 'displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[32]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[33]++;\n    sendBadStatus(res, 400, 'color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[35]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[36]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[37]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T05:39:41.469Z"}
{"level":"info","message":"Server is up on port 3000.","timestamp":"2017-12-07T05:39:41.507Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T05:39:41.520Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T05:39:41.520Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T05:39:41.520Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T05:39:41.521Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[2]++;cov_ratewsw8z.s[17]++;\n  if (!req.body) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[18]++;\n    sendBadStatus(res, 400, 'body not found!'); /* istanbul ignore next */cov_ratewsw8z.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[20]++;\n\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, 'make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, 'model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, 'year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, 'displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[32]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[33]++;\n    sendBadStatus(res, 400, 'color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[35]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[36]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[37]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T05:39:41.521Z"}
{"level":"info","message":"Responding with a 200 code and the following data:","timestamp":"2017-12-07T05:39:41.521Z"}
{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"05bbcc10-db11-11e7-bcb9-8700591314a8","timestamp":"2017-12-07T05:39:41.521Z","level":"info","message":""}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T05:39:41.529Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T05:39:41.529Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T05:39:41.529Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T05:39:41.529Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.req.on (/Users/robertreed/Documents/programming/cf/401/lab/08-09-vanilla-rest-server/lab-rob/lib/req-parser.js:25:27)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-07T05:39:41.529Z"}
{"level":"info","message":"Adding a POST url and callback.","timestamp":"2017-12-07T05:39:51.621Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-07T05:39:51.622Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[2]++;cov_ratewsw8z.s[17]++;\n  if (!req.body) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[18]++;\n    sendBadStatus(res, 400, 'body not found!'); /* istanbul ignore next */cov_ratewsw8z.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[20]++;\n\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, 'make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, 'model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, 'year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, 'displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[32]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[33]++;\n    sendBadStatus(res, 400, 'color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[35]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[36]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[37]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T05:39:51.622Z"}
{"level":"info","message":"Server is up on port 3000.","timestamp":"2017-12-07T05:39:51.655Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T05:39:51.668Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T05:39:51.668Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T05:39:51.668Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T05:39:51.669Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[2]++;cov_ratewsw8z.s[17]++;\n  if (!req.body) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[18]++;\n    sendBadStatus(res, 400, 'body not found!'); /* istanbul ignore next */cov_ratewsw8z.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[20]++;\n\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, 'make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, 'model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, 'year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, 'displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[32]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[33]++;\n    sendBadStatus(res, 400, 'color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[35]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[36]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[37]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T05:39:51.669Z"}
{"level":"info","message":"Responding with a 200 code and the following data:","timestamp":"2017-12-07T05:39:51.669Z"}
{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"0bc84250-db11-11e7-912a-810fe11df9e4","timestamp":"2017-12-07T05:39:51.670Z","level":"info","message":""}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T05:39:51.678Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T05:39:51.678Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T05:39:51.678Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T05:39:51.678Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.req.on (/Users/robertreed/Documents/programming/cf/401/lab/08-09-vanilla-rest-server/lab-rob/lib/req-parser.js:25:27)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-07T05:39:51.678Z"}
{"level":"info","message":"Adding a POST url and callback.","timestamp":"2017-12-07T05:40:03.600Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-07T05:40:03.601Z"}
{"level":"info","message":"(req, res) => {\n  if(!req.body) {\n    sendBadStatus(res, 400, 'body not found!');\n    return;\n  }\n\n  if(!req.body.make) {\n    sendBadStatus(res, 400, 'make not found!');\n    return;\n  }\n  \n  if(!req.body.model) {\n    sendBadStatus(res, 400, 'model not found!');\n    return;\n  }\n\n  if(!req.body.year) {\n    sendBadStatus(res, 400, 'year not found!');\n    return;\n  }\n\n  if(!req.body.displacement) {\n    sendBadStatus(res, 400, 'displacement not found!');\n    return;\n  }\n\n  if(!req.body.color) {\n    sendBadStatus(res, 400, 'color not found!');\n    return;\n  }\n\n  let trialsBike = new TrialsBike(\n    req.body.make,\n    req.body.model,\n    req.body.year,\n    req.body.displacement,\n    req.body.color\n  );\n  \n  trialsBikes.push(trialsBike);\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T05:40:03.601Z"}
{"level":"info","message":"Server is up on port 3000.","timestamp":"2017-12-07T05:40:03.606Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T05:40:17.046Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T05:40:17.046Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T05:40:17.047Z"}
{"level":"info","message":"Bad endpoint hit. 404.","timestamp":"2017-12-07T05:40:17.047Z"}
{"level":"info","message":"Adding a POST url and callback.","timestamp":"2017-12-07T05:40:50.340Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-07T05:40:50.341Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[2]++;cov_ratewsw8z.s[17]++;\n  if (!req.body) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[18]++;\n    sendBadStatus(res, 400, 'body not found!'); /* istanbul ignore next */cov_ratewsw8z.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[20]++;\n\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, 'make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, 'model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, 'year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, 'displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[32]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[33]++;\n    sendBadStatus(res, 400, 'color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[35]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[36]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[37]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T05:40:50.341Z"}
{"level":"info","message":"Server is up on port 3000.","timestamp":"2017-12-07T05:40:50.375Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T05:40:50.387Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T05:40:50.388Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T05:40:50.388Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T05:40:50.388Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[2]++;cov_ratewsw8z.s[17]++;\n  if (!req.body) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[18]++;\n    sendBadStatus(res, 400, 'body not found!'); /* istanbul ignore next */cov_ratewsw8z.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[20]++;\n\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, 'make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, 'model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, 'year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, 'displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[32]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[33]++;\n    sendBadStatus(res, 400, 'color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[35]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[36]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[37]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T05:40:50.388Z"}
{"level":"info","message":"Responding with a 200 code and the following data:","timestamp":"2017-12-07T05:40:50.389Z"}
{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"2ec83850-db11-11e7-9c44-3f9a865ae705","timestamp":"2017-12-07T05:40:50.389Z","level":"info","message":""}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T05:40:50.396Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T05:40:50.397Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T05:40:50.397Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T05:40:50.397Z"}
{"message":"Cannot read property 'includes' of undefined","stack":"TypeError: Cannot read property 'includes' of undefined\n    at IncomingMessage.req.on (/Users/robertreed/Documents/programming/cf/401/lab/08-09-vanilla-rest-server/lab-rob/lib/req-parser.js:24:41)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-07T05:40:50.397Z"}
{"level":"info","message":"Adding a POST url and callback.","timestamp":"2017-12-07T05:43:44.906Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-07T05:43:44.907Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[2]++;cov_ratewsw8z.s[17]++;\n  if (!req.body) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[18]++;\n    sendBadStatus(res, 400, 'body not found!'); /* istanbul ignore next */cov_ratewsw8z.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[20]++;\n\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, 'make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, 'model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, 'year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, 'displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[32]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[33]++;\n    sendBadStatus(res, 400, 'color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[35]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[36]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[37]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T05:43:44.907Z"}
{"level":"info","message":"Server is up on port 3000.","timestamp":"2017-12-07T05:43:44.943Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T05:43:44.955Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T05:43:44.956Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T05:43:44.956Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T05:43:44.957Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[2]++;cov_ratewsw8z.s[17]++;\n  if (!req.body) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[18]++;\n    sendBadStatus(res, 400, 'body not found!'); /* istanbul ignore next */cov_ratewsw8z.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[20]++;\n\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, 'make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, 'model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, 'year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, 'displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[32]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[33]++;\n    sendBadStatus(res, 400, 'color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[35]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[36]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[37]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T05:43:44.957Z"}
{"level":"info","message":"Responding with a 200 code and the following data:","timestamp":"2017-12-07T05:43:44.957Z"}
{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"96d52ed0-db11-11e7-a473-3fd65cd00345","timestamp":"2017-12-07T05:43:44.957Z","level":"info","message":""}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T05:43:44.965Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T05:43:44.965Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T05:43:44.965Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T05:43:44.965Z"}
{"message":"Cannot read property 'includes' of undefined","stack":"TypeError: Cannot read property 'includes' of undefined\n    at IncomingMessage.req.on (/Users/robertreed/Documents/programming/cf/401/lab/08-09-vanilla-rest-server/lab-rob/lib/req-parser.js:24:41)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-07T05:43:44.965Z"}
{"level":"info","message":"Adding a POST url and callback.","timestamp":"2017-12-07T05:44:51.577Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-07T05:44:51.577Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[2]++;cov_ratewsw8z.s[17]++;\n  if (!req.body) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[18]++;\n    sendBadStatus(res, 400, 'body not found!'); /* istanbul ignore next */cov_ratewsw8z.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[20]++;\n\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, 'make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, 'model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, 'year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, 'displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[32]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[33]++;\n    sendBadStatus(res, 400, 'color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[35]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[36]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[37]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T05:44:51.577Z"}
{"level":"info","message":"Server is up on port 3000.","timestamp":"2017-12-07T05:44:51.612Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T05:44:51.625Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T05:44:51.625Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T05:44:51.625Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T05:44:51.626Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[2]++;cov_ratewsw8z.s[17]++;\n  if (!req.body) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[18]++;\n    sendBadStatus(res, 400, 'body not found!'); /* istanbul ignore next */cov_ratewsw8z.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[20]++;\n\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, 'make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, 'model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, 'year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, 'displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[32]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[33]++;\n    sendBadStatus(res, 400, 'color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[35]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[36]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[37]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T05:44:51.626Z"}
{"level":"info","message":"Responding with a 200 code and the following data:","timestamp":"2017-12-07T05:44:51.626Z"}
{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"be9210a0-db11-11e7-a6a5-6f050369d352","timestamp":"2017-12-07T05:44:51.626Z","level":"info","message":""}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T05:44:51.634Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T05:44:51.634Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T05:44:51.634Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T05:44:51.634Z"}
{"message":"Cannot read property 'includes' of undefined","stack":"TypeError: Cannot read property 'includes' of undefined\n    at IncomingMessage.req.on (/Users/robertreed/Documents/programming/cf/401/lab/08-09-vanilla-rest-server/lab-rob/lib/req-parser.js:24:41)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-07T05:44:51.634Z"}
{"level":"info","message":"Adding a POST url and callback.","timestamp":"2017-12-07T05:46:34.564Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-07T05:46:34.565Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[2]++;cov_ratewsw8z.s[17]++;\n  if (!req.body) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[18]++;\n    sendBadStatus(res, 400, 'body not found!'); /* istanbul ignore next */cov_ratewsw8z.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[20]++;\n\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, 'make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, 'model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, 'year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, 'displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[32]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[33]++;\n    sendBadStatus(res, 400, 'color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[35]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[36]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[37]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T05:46:34.565Z"}
{"level":"info","message":"Server is up on port 3000.","timestamp":"2017-12-07T05:46:34.602Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T05:46:34.614Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T05:46:34.614Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T05:46:34.614Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T05:46:34.615Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[2]++;cov_ratewsw8z.s[17]++;\n  if (!req.body) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[18]++;\n    sendBadStatus(res, 400, 'body not found!'); /* istanbul ignore next */cov_ratewsw8z.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[20]++;\n\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, 'make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, 'model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, 'year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, 'displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[32]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[33]++;\n    sendBadStatus(res, 400, 'color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[35]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[36]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[37]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T05:46:34.615Z"}
{"level":"info","message":"Responding with a 200 code and the following data:","timestamp":"2017-12-07T05:46:34.616Z"}
{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"fbf51780-db11-11e7-afeb-2db3f43e0269","timestamp":"2017-12-07T05:46:34.616Z","level":"info","message":""}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T05:46:34.623Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T05:46:34.623Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T05:46:34.623Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T05:46:34.624Z"}
{"message":"Cannot read property 'includes' of undefined","stack":"TypeError: Cannot read property 'includes' of undefined\n    at IncomingMessage.req.on (/Users/robertreed/Documents/programming/cf/401/lab/08-09-vanilla-rest-server/lab-rob/lib/req-parser.js:24:41)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-07T05:46:34.624Z"}
{"level":"info","message":"Adding a POST url and callback.","timestamp":"2017-12-07T05:49:51.725Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-07T05:49:51.726Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[2]++;cov_ratewsw8z.s[17]++;\n  if (!req.body) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[18]++;\n    sendBadStatus(res, 400, 'body not found!'); /* istanbul ignore next */cov_ratewsw8z.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[20]++;\n\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, 'make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, 'model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, 'year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, 'displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[32]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[33]++;\n    sendBadStatus(res, 400, 'color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[35]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[36]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[37]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T05:49:51.726Z"}
{"level":"info","message":"Server is up on port 3000.","timestamp":"2017-12-07T05:49:51.760Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T05:49:51.772Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T05:49:51.772Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T05:49:51.772Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T05:49:51.773Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[2]++;cov_ratewsw8z.s[17]++;\n  if (!req.body) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[18]++;\n    sendBadStatus(res, 400, 'body not found!'); /* istanbul ignore next */cov_ratewsw8z.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[20]++;\n\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, 'make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, 'model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, 'year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, 'displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[32]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[33]++;\n    sendBadStatus(res, 400, 'color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[35]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[36]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[37]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T05:49:51.773Z"}
{"level":"info","message":"Responding with a 200 code and the following data:","timestamp":"2017-12-07T05:49:51.774Z"}
{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"7178dcd0-db12-11e7-8b59-259d74c7efc0","timestamp":"2017-12-07T05:49:51.774Z","level":"info","message":""}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T05:49:51.782Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T05:49:51.782Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T05:49:51.782Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T05:49:51.782Z"}
{"message":"Cannot read property 'includes' of undefined","stack":"TypeError: Cannot read property 'includes' of undefined\n    at IncomingMessage.req.on (/Users/robertreed/Documents/programming/cf/401/lab/08-09-vanilla-rest-server/lab-rob/lib/req-parser.js:24:41)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-07T05:49:51.782Z"}
{"level":"info","message":"Adding a POST url and callback.","timestamp":"2017-12-07T05:50:27.841Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-07T05:50:27.842Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[2]++;cov_ratewsw8z.s[17]++;\n  if (!req.body) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[18]++;\n    sendBadStatus(res, 400, 'body not found!'); /* istanbul ignore next */cov_ratewsw8z.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[20]++;\n\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, 'make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, 'model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, 'year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, 'displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[32]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[33]++;\n    sendBadStatus(res, 400, 'color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[35]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[36]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[37]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T05:50:27.842Z"}
{"level":"info","message":"Server is up on port 3000.","timestamp":"2017-12-07T05:50:27.885Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T05:50:27.897Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T05:50:27.897Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T05:50:27.897Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T05:50:27.898Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[2]++;cov_ratewsw8z.s[17]++;\n  if (!req.body) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[18]++;\n    sendBadStatus(res, 400, 'body not found!'); /* istanbul ignore next */cov_ratewsw8z.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[20]++;\n\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, 'make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, 'model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, 'year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, 'displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[32]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[33]++;\n    sendBadStatus(res, 400, 'color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[35]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[36]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[37]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T05:50:27.898Z"}
{"level":"info","message":"Responding with a 200 code and the following data:","timestamp":"2017-12-07T05:50:27.899Z"}
{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"870140b0-db12-11e7-906f-11721e7cf5f2","timestamp":"2017-12-07T05:50:27.899Z","level":"info","message":""}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T05:50:27.907Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T05:50:27.907Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T05:50:27.907Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T05:50:27.907Z"}
{"message":"Cannot read property 'includes' of undefined","stack":"TypeError: Cannot read property 'includes' of undefined\n    at IncomingMessage.req.on (/Users/robertreed/Documents/programming/cf/401/lab/08-09-vanilla-rest-server/lab-rob/lib/req-parser.js:24:41)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-07T05:50:27.907Z"}
{"level":"info","message":"Adding a POST url and callback.","timestamp":"2017-12-07T05:52:02.039Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-07T05:52:02.040Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[2]++;cov_ratewsw8z.s[17]++;\n  if (!req.body) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[18]++;\n    sendBadStatus(res, 400, 'body not found!'); /* istanbul ignore next */cov_ratewsw8z.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[20]++;\n\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, 'make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, 'model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, 'year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, 'displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[32]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[33]++;\n    sendBadStatus(res, 400, 'color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[35]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[36]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[37]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T05:52:02.040Z"}
{"level":"info","message":"Server is up on port 3000.","timestamp":"2017-12-07T05:52:02.073Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T05:52:02.085Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T05:52:02.085Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T05:52:02.085Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T05:52:02.086Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[2]++;cov_ratewsw8z.s[17]++;\n  if (!req.body) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[18]++;\n    sendBadStatus(res, 400, 'body not found!'); /* istanbul ignore next */cov_ratewsw8z.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[20]++;\n\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, 'make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, 'model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, 'year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, 'displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[32]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[33]++;\n    sendBadStatus(res, 400, 'color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[35]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[36]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[37]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T05:52:02.086Z"}
{"level":"info","message":"Responding with a 200 code and the following data:","timestamp":"2017-12-07T05:52:02.086Z"}
{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"bf250c60-db12-11e7-9f7b-d104e9812cfd","timestamp":"2017-12-07T05:52:02.086Z","level":"info","message":""}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T05:52:02.094Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T05:52:02.095Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T05:52:02.095Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T05:52:02.095Z"}
{"message":"Cannot read property 'includes' of undefined","stack":"TypeError: Cannot read property 'includes' of undefined\n    at IncomingMessage.req.on (/Users/robertreed/Documents/programming/cf/401/lab/08-09-vanilla-rest-server/lab-rob/lib/req-parser.js:24:41)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-07T05:52:02.095Z"}
{"level":"info","message":"Adding a POST url and callback.","timestamp":"2017-12-07T05:53:11.161Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-07T05:53:11.162Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[2]++;cov_ratewsw8z.s[17]++;\n  if (!req.body) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[18]++;\n    sendBadStatus(res, 400, 'body not found!'); /* istanbul ignore next */cov_ratewsw8z.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[20]++;\n\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, 'make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, 'model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, 'year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, 'displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[32]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[33]++;\n    sendBadStatus(res, 400, 'color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[35]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[36]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[37]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T05:53:11.162Z"}
{"level":"info","message":"Server is up on port 3000.","timestamp":"2017-12-07T05:53:11.202Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T05:53:11.214Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T05:53:11.214Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T05:53:11.214Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T05:53:11.215Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[2]++;cov_ratewsw8z.s[17]++;\n  if (!req.body) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[18]++;\n    sendBadStatus(res, 400, 'body not found!'); /* istanbul ignore next */cov_ratewsw8z.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[20]++;\n\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, 'make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, 'model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, 'year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, 'displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[32]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[33]++;\n    sendBadStatus(res, 400, 'color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[35]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[36]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[37]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T05:53:11.215Z"}
{"level":"info","message":"Responding with a 200 code and the following data:","timestamp":"2017-12-07T05:53:11.216Z"}
{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"e8597300-db12-11e7-b0a4-bd610228db73","timestamp":"2017-12-07T05:53:11.216Z","level":"info","message":""}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T05:53:11.224Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T05:53:11.224Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T05:53:11.224Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T05:53:11.225Z"}
{"message":"Cannot read property 'includes' of undefined","stack":"TypeError: Cannot read property 'includes' of undefined\n    at IncomingMessage.req.on (/Users/robertreed/Documents/programming/cf/401/lab/08-09-vanilla-rest-server/lab-rob/lib/req-parser.js:24:41)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-07T05:53:11.225Z"}
{"level":"info","message":"Adding a POST url and callback.","timestamp":"2017-12-07T05:54:41.658Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-07T05:54:41.658Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[2]++;cov_ratewsw8z.s[17]++;\n  if (!req.body) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[18]++;\n    sendBadStatus(res, 400, 'body not found!'); /* istanbul ignore next */cov_ratewsw8z.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[20]++;\n\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, 'make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, 'model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, 'year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, 'displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[32]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[33]++;\n    sendBadStatus(res, 400, 'color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[35]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[36]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[37]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T05:54:41.658Z"}
{"level":"info","message":"Server is up on port 3000.","timestamp":"2017-12-07T05:54:41.693Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T05:54:41.706Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T05:54:41.706Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T05:54:41.706Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T05:54:41.707Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[2]++;cov_ratewsw8z.s[17]++;\n  if (!req.body) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[18]++;\n    sendBadStatus(res, 400, 'body not found!'); /* istanbul ignore next */cov_ratewsw8z.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[20]++;\n\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, 'make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, 'model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, 'year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, 'displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[32]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[33]++;\n    sendBadStatus(res, 400, 'color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[35]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[36]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[37]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T05:54:41.707Z"}
{"level":"info","message":"Responding with a 200 code and the following data:","timestamp":"2017-12-07T05:54:41.707Z"}
{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"1e4947b0-db13-11e7-8ec4-abced9fb5a20","timestamp":"2017-12-07T05:54:41.707Z","level":"info","message":""}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T05:54:41.715Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T05:54:41.715Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T05:54:41.715Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T05:54:41.716Z"}
{"message":"Cannot read property 'includes' of undefined","stack":"TypeError: Cannot read property 'includes' of undefined\n    at IncomingMessage.req.on (/Users/robertreed/Documents/programming/cf/401/lab/08-09-vanilla-rest-server/lab-rob/lib/req-parser.js:24:41)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-07T05:54:41.716Z"}
{"level":"info","message":"Adding a POST url and callback.","timestamp":"2017-12-07T05:59:08.834Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-07T05:59:08.835Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[2]++;cov_ratewsw8z.s[17]++;\n  if (!req.body) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[18]++;\n    sendBadStatus(res, 400, 'body not found!'); /* istanbul ignore next */cov_ratewsw8z.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[20]++;\n\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, 'make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, 'model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, 'year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, 'displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[32]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[33]++;\n    sendBadStatus(res, 400, 'color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[35]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[36]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[37]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T05:59:08.835Z"}
{"level":"info","message":"Server is up on port 3000.","timestamp":"2017-12-07T05:59:08.872Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T05:59:08.884Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T05:59:08.885Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T05:59:08.885Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T05:59:08.885Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[2]++;cov_ratewsw8z.s[17]++;\n  if (!req.body) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[18]++;\n    sendBadStatus(res, 400, 'body not found!'); /* istanbul ignore next */cov_ratewsw8z.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[20]++;\n\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, 'make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, 'model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, 'year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, 'displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[32]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[33]++;\n    sendBadStatus(res, 400, 'color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[35]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[36]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[37]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T05:59:08.886Z"}
{"level":"info","message":"Responding with a 200 code and the following data:","timestamp":"2017-12-07T05:59:08.886Z"}
{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"bd898f60-db13-11e7-b14d-176b53d31be7","timestamp":"2017-12-07T05:59:08.886Z","level":"info","message":""}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T05:59:08.894Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T05:59:08.894Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T05:59:08.894Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T05:59:08.894Z"}
{"message":"Cannot read property 'includes' of undefined","stack":"TypeError: Cannot read property 'includes' of undefined\n    at IncomingMessage.req.on (/Users/robertreed/Documents/programming/cf/401/lab/08-09-vanilla-rest-server/lab-rob/lib/req-parser.js:24:41)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-07T05:59:08.894Z"}
{"level":"info","message":"Adding a POST url and callback.","timestamp":"2017-12-07T05:59:25.345Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-07T05:59:25.346Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[2]++;cov_ratewsw8z.s[17]++;\n  if (!req.body) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[18]++;\n    sendBadStatus(res, 400, 'body not found!'); /* istanbul ignore next */cov_ratewsw8z.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[20]++;\n\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, 'make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, 'model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, 'year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, 'displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[32]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[33]++;\n    sendBadStatus(res, 400, 'color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[35]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[36]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[37]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T05:59:25.346Z"}
{"level":"info","message":"Server is up on port 3000.","timestamp":"2017-12-07T05:59:25.379Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T05:59:25.392Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T05:59:25.392Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T05:59:25.392Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T05:59:25.393Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[2]++;cov_ratewsw8z.s[17]++;\n  if (!req.body) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[18]++;\n    sendBadStatus(res, 400, 'body not found!'); /* istanbul ignore next */cov_ratewsw8z.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[20]++;\n\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, 'make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, 'model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, 'year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, 'displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[32]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[33]++;\n    sendBadStatus(res, 400, 'color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[35]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[36]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[37]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T05:59:25.393Z"}
{"level":"info","message":"Responding with a 200 code and the following data:","timestamp":"2017-12-07T05:59:25.393Z"}
{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"c7605410-db13-11e7-ba4a-eff84404ef3e","timestamp":"2017-12-07T05:59:25.393Z","level":"info","message":""}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T05:59:25.401Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T05:59:25.401Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T05:59:25.401Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T05:59:25.402Z"}
{"message":"Cannot read property 'includes' of undefined","stack":"TypeError: Cannot read property 'includes' of undefined\n    at IncomingMessage.req.on (/Users/robertreed/Documents/programming/cf/401/lab/08-09-vanilla-rest-server/lab-rob/lib/req-parser.js:24:41)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-07T05:59:25.402Z"}
{"level":"info","message":"Adding a POST url and callback.","timestamp":"2017-12-07T06:00:21.097Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-07T06:00:21.098Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[2]++;cov_ratewsw8z.s[17]++;\n  if (!req.body) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[18]++;\n    sendBadStatus(res, 400, 'body not found!'); /* istanbul ignore next */cov_ratewsw8z.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[20]++;\n\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, 'make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, 'model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, 'year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, 'displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[32]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[33]++;\n    sendBadStatus(res, 400, 'color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[35]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[36]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[37]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T06:00:21.098Z"}
{"level":"info","message":"Server is up on port 3000.","timestamp":"2017-12-07T06:00:21.132Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T06:00:21.145Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T06:00:21.145Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T06:00:21.145Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T06:00:21.146Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[2]++;cov_ratewsw8z.s[17]++;\n  if (!req.body) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[18]++;\n    sendBadStatus(res, 400, 'body not found!'); /* istanbul ignore next */cov_ratewsw8z.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[20]++;\n\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, 'make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, 'model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, 'year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, 'displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[32]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[33]++;\n    sendBadStatus(res, 400, 'color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[35]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[36]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[37]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T06:00:21.146Z"}
{"level":"info","message":"Responding with a 200 code and the following data:","timestamp":"2017-12-07T06:00:21.147Z"}
{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"e89bb6b0-db13-11e7-9ca5-53a3621828a9","timestamp":"2017-12-07T06:00:21.147Z","level":"info","message":""}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T06:00:21.155Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T06:00:21.155Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T06:00:21.155Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T06:00:21.155Z"}
{"message":"Cannot read property 'includes' of undefined","stack":"TypeError: Cannot read property 'includes' of undefined\n    at IncomingMessage.req.on (/Users/robertreed/Documents/programming/cf/401/lab/08-09-vanilla-rest-server/lab-rob/lib/req-parser.js:24:41)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-07T06:00:21.155Z"}
{"level":"info","message":"Adding a POST url and callback.","timestamp":"2017-12-07T06:02:31.149Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-07T06:02:31.149Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[2]++;cov_ratewsw8z.s[17]++;\n  if (!req.body) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[18]++;\n    sendBadStatus(res, 400, 'body not found!'); /* istanbul ignore next */cov_ratewsw8z.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[20]++;\n\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, 'make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, 'model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, 'year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, 'displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[32]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[33]++;\n    sendBadStatus(res, 400, 'color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[35]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[36]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[37]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T06:02:31.149Z"}
{"level":"info","message":"Server is up on port 3000.","timestamp":"2017-12-07T06:02:31.190Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T06:02:31.202Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T06:02:31.202Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T06:02:31.202Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T06:02:31.203Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[2]++;cov_ratewsw8z.s[17]++;\n  if (!req.body) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[18]++;\n    sendBadStatus(res, 400, 'body not found!'); /* istanbul ignore next */cov_ratewsw8z.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[20]++;\n\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, 'make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, 'model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, 'year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, 'displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[32]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[33]++;\n    sendBadStatus(res, 400, 'color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[35]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[36]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[37]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T06:02:31.203Z"}
{"level":"info","message":"Responding with a 200 code and the following data:","timestamp":"2017-12-07T06:02:31.204Z"}
{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"3620af30-db14-11e7-85e6-3f7e135a3060","timestamp":"2017-12-07T06:02:31.204Z","level":"info","message":""}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T06:02:31.211Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T06:02:31.211Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T06:02:31.211Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T06:02:31.212Z"}
{"message":"Cannot read property 'includes' of undefined","stack":"TypeError: Cannot read property 'includes' of undefined\n    at IncomingMessage.req.on (/Users/robertreed/Documents/programming/cf/401/lab/08-09-vanilla-rest-server/lab-rob/lib/req-parser.js:24:41)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-07T06:02:31.212Z"}
{"level":"info","message":"Adding a POST url and callback.","timestamp":"2017-12-07T06:05:42.767Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-07T06:05:42.768Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[2]++;cov_ratewsw8z.s[17]++;\n  if (!req.body) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[18]++;\n    sendBadStatus(res, 400, 'body not found!'); /* istanbul ignore next */cov_ratewsw8z.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[20]++;\n\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, 'make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, 'model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, 'year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, 'displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[32]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[33]++;\n    sendBadStatus(res, 400, 'color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[35]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[36]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[37]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T06:05:42.768Z"}
{"level":"info","message":"Server is up on port 3000.","timestamp":"2017-12-07T06:05:42.811Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T06:05:42.852Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T06:05:42.852Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T06:05:42.852Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T06:05:42.853Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[2]++;cov_ratewsw8z.s[17]++;\n  if (!req.body) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[18]++;\n    sendBadStatus(res, 400, 'body not found!'); /* istanbul ignore next */cov_ratewsw8z.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[20]++;\n\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, 'make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, 'model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, 'year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, 'displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[32]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[33]++;\n    sendBadStatus(res, 400, 'color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[35]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[36]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[37]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T06:05:42.853Z"}
{"level":"info","message":"Responding with a 200 code and the following data:","timestamp":"2017-12-07T06:05:42.853Z"}
{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"a85c2750-db14-11e7-84b4-03f8beb453cf","timestamp":"2017-12-07T06:05:42.853Z","level":"info","message":""}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T06:05:42.861Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T06:05:42.861Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T06:05:42.861Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T06:05:42.861Z"}
{"message":"Cannot read property 'indexOf' of undefined","stack":"TypeError: Cannot read property 'indexOf' of undefined\n    at IncomingMessage.req.on (/Users/robertreed/Documents/programming/cf/401/lab/08-09-vanilla-rest-server/lab-rob/lib/req-parser.js:24:41)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-07T06:05:42.861Z"}
{"level":"info","message":"Adding a POST url and callback.","timestamp":"2017-12-07T06:06:44.203Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-07T06:06:44.204Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[2]++;cov_ratewsw8z.s[17]++;\n  if (!req.body) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[18]++;\n    sendBadStatus(res, 400, 'body not found!'); /* istanbul ignore next */cov_ratewsw8z.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[20]++;\n\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, 'make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, 'model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, 'year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, 'displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[32]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[33]++;\n    sendBadStatus(res, 400, 'color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[35]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[36]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[37]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T06:06:44.204Z"}
{"level":"info","message":"Server is up on port 3000.","timestamp":"2017-12-07T06:06:44.244Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T06:06:44.285Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T06:06:44.285Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T06:06:44.285Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T06:06:44.286Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[2]++;cov_ratewsw8z.s[17]++;\n  if (!req.body) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[18]++;\n    sendBadStatus(res, 400, 'body not found!'); /* istanbul ignore next */cov_ratewsw8z.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[20]++;\n\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, 'make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, 'model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, 'year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, 'displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[32]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[33]++;\n    sendBadStatus(res, 400, 'color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[35]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[36]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[37]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T06:06:44.286Z"}
{"level":"info","message":"Responding with a 200 code and the following data:","timestamp":"2017-12-07T06:06:44.287Z"}
{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"ccfa3cf0-db14-11e7-932c-1dfc5ce9833e","timestamp":"2017-12-07T06:06:44.287Z","level":"info","message":""}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T06:06:44.294Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T06:06:44.295Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T06:06:44.295Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T06:06:44.296Z"}
{"message":"Cannot read property 'indexOf' of undefined","stack":"TypeError: Cannot read property 'indexOf' of undefined\n    at IncomingMessage.req.on (/Users/robertreed/Documents/programming/cf/401/lab/08-09-vanilla-rest-server/lab-rob/lib/req-parser.js:25:41)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-07T06:06:44.296Z"}
{"level":"info","message":"Adding a POST url and callback.","timestamp":"2017-12-07T06:08:47.492Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-07T06:08:47.493Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[2]++;cov_ratewsw8z.s[17]++;\n  if (!req.body) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[18]++;\n    sendBadStatus(res, 400, 'body not found!'); /* istanbul ignore next */cov_ratewsw8z.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[20]++;\n\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, 'make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, 'model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, 'year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, 'displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[32]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[33]++;\n    sendBadStatus(res, 400, 'color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[35]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[36]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[37]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T06:08:47.493Z"}
{"level":"info","message":"Server is up on port 3000.","timestamp":"2017-12-07T06:08:47.533Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T06:08:47.573Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T06:08:47.574Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T06:08:47.574Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T06:08:47.575Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[2]++;cov_ratewsw8z.s[17]++;\n  if (!req.body) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[18]++;\n    sendBadStatus(res, 400, 'body not found!'); /* istanbul ignore next */cov_ratewsw8z.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[20]++;\n\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, 'make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, 'model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, 'year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, 'displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[32]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[33]++;\n    sendBadStatus(res, 400, 'color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[35]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[36]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[37]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T06:08:47.575Z"}
{"level":"info","message":"Responding with a 200 code and the following data:","timestamp":"2017-12-07T06:08:47.576Z"}
{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"16767e70-db15-11e7-9260-a18ea7507108","timestamp":"2017-12-07T06:08:47.576Z","level":"info","message":""}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T06:08:47.583Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T06:08:47.583Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T06:08:47.583Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T06:08:47.583Z"}
{"message":"Cannot read property 'indexOf' of undefined","stack":"TypeError: Cannot read property 'indexOf' of undefined\n    at IncomingMessage.req.on (/Users/robertreed/Documents/programming/cf/401/lab/08-09-vanilla-rest-server/lab-rob/lib/req-parser.js:25:52)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-07T06:08:47.583Z"}
{"level":"info","message":"Adding a POST url and callback.","timestamp":"2017-12-07T06:10:20.104Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-07T06:10:20.105Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[2]++;cov_ratewsw8z.s[17]++;\n  if (!req.body) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[18]++;\n    sendBadStatus(res, 400, 'body not found!'); /* istanbul ignore next */cov_ratewsw8z.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[20]++;\n\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, 'make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, 'model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, 'year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, 'displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[32]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[33]++;\n    sendBadStatus(res, 400, 'color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[35]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[36]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[37]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T06:10:20.105Z"}
{"level":"info","message":"Server is up on port 3000.","timestamp":"2017-12-07T06:10:20.148Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T06:10:20.188Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T06:10:20.188Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T06:10:20.188Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T06:10:20.190Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[2]++;cov_ratewsw8z.s[17]++;\n  if (!req.body) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[18]++;\n    sendBadStatus(res, 400, 'body not found!'); /* istanbul ignore next */cov_ratewsw8z.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[20]++;\n\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, 'make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, 'model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, 'year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, 'displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[32]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[33]++;\n    sendBadStatus(res, 400, 'color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[35]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[36]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[37]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T06:10:20.190Z"}
{"level":"info","message":"Responding with a 200 code and the following data:","timestamp":"2017-12-07T06:10:20.190Z"}
{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"4daa6be0-db15-11e7-8b75-0f07808a2492","timestamp":"2017-12-07T06:10:20.190Z","level":"info","message":""}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T06:10:20.198Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T06:10:20.198Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T06:10:20.198Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T06:10:20.199Z"}
{"message":"Cannot read property 'indexOf' of undefined","stack":"TypeError: Cannot read property 'indexOf' of undefined\n    at IncomingMessage.req.on (/Users/robertreed/Documents/programming/cf/401/lab/08-09-vanilla-rest-server/lab-rob/lib/req-parser.js:25:52)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-07T06:10:20.199Z"}
{"level":"info","message":"Adding a POST url and callback.","timestamp":"2017-12-07T06:10:57.273Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-07T06:10:57.274Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[2]++;cov_ratewsw8z.s[17]++;\n  if (!req.body) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[18]++;\n    sendBadStatus(res, 400, 'body not found!'); /* istanbul ignore next */cov_ratewsw8z.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[20]++;\n\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, 'make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, 'model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, 'year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, 'displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[32]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[33]++;\n    sendBadStatus(res, 400, 'color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[35]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[36]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[37]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T06:10:57.274Z"}
{"level":"info","message":"Server is up on port 3000.","timestamp":"2017-12-07T06:10:57.315Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T06:10:57.357Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T06:10:57.357Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T06:10:57.357Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T06:10:57.359Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[2]++;cov_ratewsw8z.s[17]++;\n  if (!req.body) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[18]++;\n    sendBadStatus(res, 400, 'body not found!'); /* istanbul ignore next */cov_ratewsw8z.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[20]++;\n\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, 'make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, 'model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, 'year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, 'displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[32]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[33]++;\n    sendBadStatus(res, 400, 'color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[35]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[36]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[37]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T06:10:57.359Z"}
{"level":"info","message":"Responding with a 200 code and the following data:","timestamp":"2017-12-07T06:10:57.360Z"}
{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"63d1f5f0-db15-11e7-9244-db58ada6aff9","timestamp":"2017-12-07T06:10:57.360Z","level":"info","message":""}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T06:10:57.367Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T06:10:57.368Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T06:10:57.368Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T06:10:57.368Z"}
{"level":"info","message":"Adding a POST url and callback.","timestamp":"2017-12-07T06:12:30.776Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-07T06:12:30.776Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[2]++;cov_ratewsw8z.s[17]++;\n  if (!req.body) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[18]++;\n    sendBadStatus(res, 400, 'body not found!'); /* istanbul ignore next */cov_ratewsw8z.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[20]++;\n\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, 'make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, 'model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, 'year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, 'displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[32]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[33]++;\n    sendBadStatus(res, 400, 'color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[35]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[36]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[37]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T06:12:30.776Z"}
{"level":"info","message":"Server is up on port 3000.","timestamp":"2017-12-07T06:12:30.814Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T06:12:30.826Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T06:12:30.827Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T06:12:30.827Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T06:12:30.827Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[2]++;cov_ratewsw8z.s[17]++;\n  if (!req.body) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[18]++;\n    sendBadStatus(res, 400, 'body not found!'); /* istanbul ignore next */cov_ratewsw8z.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[20]++;\n\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, 'make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, 'model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, 'year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, 'displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[32]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[33]++;\n    sendBadStatus(res, 400, 'color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[35]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[36]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[37]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T06:12:30.828Z"}
{"level":"info","message":"Responding with a 200 code and the following data:","timestamp":"2017-12-07T06:12:30.828Z"}
{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"9b8832c0-db15-11e7-96ae-9f4ddb3b98dc","timestamp":"2017-12-07T06:12:30.828Z","level":"info","message":""}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T06:12:30.836Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T06:12:30.836Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T06:12:30.836Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T06:12:30.836Z"}
{"message":"Cannot read property 'indexOf' of undefined","stack":"TypeError: Cannot read property 'indexOf' of undefined\n    at IncomingMessage.req.on (/Users/robertreed/Documents/programming/cf/401/lab/08-09-vanilla-rest-server/lab-rob/lib/req-parser.js:24:41)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-07T06:12:30.836Z"}
{"level":"info","message":"Adding a POST url and callback.","timestamp":"2017-12-07T06:15:14.823Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-07T06:15:14.824Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[2]++;cov_ratewsw8z.s[17]++;\n  if (!req.body) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[18]++;\n    sendBadStatus(res, 400, 'body not found!'); /* istanbul ignore next */cov_ratewsw8z.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[20]++;\n\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, 'make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, 'model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, 'year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, 'displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[32]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[33]++;\n    sendBadStatus(res, 400, 'color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[35]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[36]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[37]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T06:15:14.824Z"}
{"level":"info","message":"Server is up on port 3000.","timestamp":"2017-12-07T06:15:14.858Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T06:15:14.871Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T06:15:14.871Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T06:15:14.871Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T06:15:14.872Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[2]++;cov_ratewsw8z.s[17]++;\n  if (!req.body) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[18]++;\n    sendBadStatus(res, 400, 'body not found!'); /* istanbul ignore next */cov_ratewsw8z.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[20]++;\n\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, 'make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, 'model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, 'year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, 'displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[32]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[33]++;\n    sendBadStatus(res, 400, 'color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[35]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[36]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[37]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T06:15:14.872Z"}
{"level":"info","message":"Responding with a 200 code and the following data:","timestamp":"2017-12-07T06:15:14.873Z"}
{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"fd4f5380-db15-11e7-b82b-4b8a16b4437e","timestamp":"2017-12-07T06:15:14.873Z","level":"info","message":""}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T06:15:14.910Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T06:15:14.910Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T06:15:14.911Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T06:15:14.911Z"}
{"message":"Cannot read property 'indexOf' of undefined","stack":"TypeError: Cannot read property 'indexOf' of undefined\n    at IncomingMessage.req.on (/Users/robertreed/Documents/programming/cf/401/lab/08-09-vanilla-rest-server/lab-rob/lib/req-parser.js:24:41)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-07T06:15:14.911Z"}
{"level":"info","message":"Adding a POST url and callback.","timestamp":"2017-12-07T06:17:44.427Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-07T06:17:44.427Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[2]++;cov_ratewsw8z.s[17]++;\n  // if(!req.body) {\n  //   sendBadStatus(res, 400, 'body not found!');\n  //   return;\n  // }\n\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[18]++;\n    sendBadStatus(res, 400, 'make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[20]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, 'model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, 'year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, 'displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, 'color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[32]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[33]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[34]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T06:17:44.427Z"}
{"level":"info","message":"Server is up on port 3000.","timestamp":"2017-12-07T06:17:44.464Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T06:17:44.504Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T06:17:44.504Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T06:17:44.504Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T06:17:44.505Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[2]++;cov_ratewsw8z.s[17]++;\n  // if(!req.body) {\n  //   sendBadStatus(res, 400, 'body not found!');\n  //   return;\n  // }\n\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[18]++;\n    sendBadStatus(res, 400, 'make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[20]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, 'model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, 'year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, 'displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, 'color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[32]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[33]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[34]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T06:17:44.505Z"}
{"level":"info","message":"Responding with a 200 code and the following data:","timestamp":"2017-12-07T06:17:44.506Z"}
{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"567fa9a0-db16-11e7-9306-172824d9b297","timestamp":"2017-12-07T06:17:44.506Z","level":"info","message":""}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T06:17:44.513Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T06:17:44.513Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T06:17:44.514Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T06:17:44.514Z"}
{"message":"Cannot read property 'indexOf' of undefined","stack":"TypeError: Cannot read property 'indexOf' of undefined\n    at IncomingMessage.req.on (/Users/robertreed/Documents/programming/cf/401/lab/08-09-vanilla-rest-server/lab-rob/lib/req-parser.js:24:41)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-07T06:17:44.514Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T06:17:44.516Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T06:17:44.516Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T06:17:44.516Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T06:17:44.516Z"}
{"message":"Cannot read property 'indexOf' of undefined","stack":"TypeError: Cannot read property 'indexOf' of undefined\n    at IncomingMessage.req.on (/Users/robertreed/Documents/programming/cf/401/lab/08-09-vanilla-rest-server/lab-rob/lib/req-parser.js:24:41)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-07T06:17:44.516Z"}
{"level":"info","message":"Adding a POST url and callback.","timestamp":"2017-12-07T06:19:57.151Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-07T06:19:57.151Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[2]++;cov_ratewsw8z.s[17]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[18]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[20]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[32]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[33]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[34]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T06:19:57.151Z"}
{"level":"info","message":"Server is up on port 3000.","timestamp":"2017-12-07T06:19:57.190Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T06:19:57.231Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T06:19:57.231Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T06:19:57.231Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T06:19:57.232Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[2]++;cov_ratewsw8z.s[17]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[18]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[20]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[32]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[33]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[34]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T06:19:57.232Z"}
{"level":"info","message":"Responding with a 200 code and the following data:","timestamp":"2017-12-07T06:19:57.232Z"}
{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"a59c0b00-db16-11e7-be3f-e1f307c0ef09","timestamp":"2017-12-07T06:19:57.232Z","level":"info","message":""}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T06:19:57.240Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T06:19:57.240Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T06:19:57.240Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T06:19:57.240Z"}
{"message":"Cannot read property 'indexOf' of undefined","stack":"TypeError: Cannot read property 'indexOf' of undefined\n    at IncomingMessage.req.on (/Users/robertreed/Documents/programming/cf/401/lab/08-09-vanilla-rest-server/lab-rob/lib/req-parser.js:24:41)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-07T06:19:57.240Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T06:19:57.242Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T06:19:57.242Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T06:19:57.242Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T06:19:57.243Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[2]++;cov_ratewsw8z.s[17]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[18]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[20]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[32]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[33]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[34]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T06:19:57.243Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, make not found!.","timestamp":"2017-12-07T06:19:57.243Z"}
{"level":"info","message":"Adding a POST url and callback.","timestamp":"2017-12-07T06:20:19.712Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-07T06:20:19.713Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[2]++;cov_ratewsw8z.s[17]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[18]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[20]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[32]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[33]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[34]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T06:20:19.713Z"}
{"level":"info","message":"Server is up on port 3000.","timestamp":"2017-12-07T06:20:19.746Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T06:20:19.758Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T06:20:19.759Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T06:20:19.759Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T06:20:19.759Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[2]++;cov_ratewsw8z.s[17]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[18]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[20]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[32]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[33]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[34]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T06:20:19.759Z"}
{"level":"info","message":"Responding with a 200 code and the following data:","timestamp":"2017-12-07T06:20:19.760Z"}
{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"b3098b00-db16-11e7-937e-f7c4a1be3b56","timestamp":"2017-12-07T06:20:19.760Z","level":"info","message":""}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T06:20:19.798Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T06:20:19.798Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T06:20:19.799Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T06:20:19.799Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.req.on (/Users/robertreed/Documents/programming/cf/401/lab/08-09-vanilla-rest-server/lab-rob/lib/req-parser.js:25:27)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-07T06:20:19.799Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T06:20:19.802Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T06:20:19.802Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T06:20:19.802Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T06:20:19.802Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[2]++;cov_ratewsw8z.s[17]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[18]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[20]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[32]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[33]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[34]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T06:20:19.802Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, make not found!.","timestamp":"2017-12-07T06:20:19.803Z"}
{"level":"info","message":"Adding a POST url and callback.","timestamp":"2017-12-07T06:21:14.956Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-07T06:21:14.957Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[2]++;cov_ratewsw8z.s[17]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[18]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[20]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[32]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[33]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[34]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T06:21:14.957Z"}
{"level":"info","message":"Server is up on port 3000.","timestamp":"2017-12-07T06:21:14.994Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T06:21:15.007Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T06:21:15.008Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T06:21:15.008Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T06:21:15.008Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[2]++;cov_ratewsw8z.s[17]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[18]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[20]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[32]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[33]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[34]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T06:21:15.008Z"}
{"level":"info","message":"Responding with a 200 code and the following data:","timestamp":"2017-12-07T06:21:15.009Z"}
{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"d3f7df10-db16-11e7-a07f-dd110eb14437","timestamp":"2017-12-07T06:21:15.009Z","level":"info","message":""}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T06:21:15.017Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T06:21:15.017Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T06:21:15.017Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T06:21:15.017Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.req.on (/Users/robertreed/Documents/programming/cf/401/lab/08-09-vanilla-rest-server/lab-rob/lib/req-parser.js:25:27)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-07T06:21:15.017Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T06:21:15.020Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T06:21:15.020Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T06:21:15.020Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T06:21:15.020Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[2]++;cov_ratewsw8z.s[17]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[18]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[20]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[32]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[33]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[34]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T06:21:15.020Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, make not found!.","timestamp":"2017-12-07T06:21:15.020Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T06:21:15.053Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T06:21:15.053Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T06:21:15.053Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T06:21:15.053Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[2]++;cov_ratewsw8z.s[17]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[18]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[20]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[32]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[33]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[34]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T06:21:15.053Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, model not found!.","timestamp":"2017-12-07T06:21:15.053Z"}
{"level":"info","message":"Adding a POST url and callback.","timestamp":"2017-12-07T06:22:18.248Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-07T06:22:18.249Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[2]++;cov_ratewsw8z.s[17]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[18]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[20]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[32]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[33]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[34]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T06:22:18.249Z"}
{"level":"info","message":"Server is up on port 3000.","timestamp":"2017-12-07T06:22:18.291Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T06:22:18.331Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T06:22:18.331Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T06:22:18.331Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T06:22:18.332Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[2]++;cov_ratewsw8z.s[17]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[18]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[20]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[32]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[33]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[34]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T06:22:18.332Z"}
{"level":"info","message":"Responding with a 200 code and the following data:","timestamp":"2017-12-07T06:22:18.333Z"}
{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"f9b631c0-db16-11e7-b6f0-75a7e60660e1","timestamp":"2017-12-07T06:22:18.333Z","level":"info","message":""}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T06:22:18.340Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T06:22:18.340Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T06:22:18.340Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T06:22:18.340Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.req.on (/Users/robertreed/Documents/programming/cf/401/lab/08-09-vanilla-rest-server/lab-rob/lib/req-parser.js:25:27)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-07T06:22:18.340Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T06:22:18.343Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T06:22:18.343Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T06:22:18.343Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T06:22:18.343Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[2]++;cov_ratewsw8z.s[17]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[18]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[20]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[32]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[33]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[34]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T06:22:18.343Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, make not found!.","timestamp":"2017-12-07T06:22:18.343Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T06:22:18.345Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T06:22:18.345Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T06:22:18.345Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T06:22:18.345Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[2]++;cov_ratewsw8z.s[17]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[18]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[20]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[32]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[33]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[34]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T06:22:18.345Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, model not found!.","timestamp":"2017-12-07T06:22:18.345Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T06:22:18.346Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T06:22:18.347Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T06:22:18.347Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T06:22:18.347Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[2]++;cov_ratewsw8z.s[17]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[18]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[20]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[32]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[33]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[34]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T06:22:18.347Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, year not found!.","timestamp":"2017-12-07T06:22:18.347Z"}
{"level":"info","message":"Adding a POST url and callback.","timestamp":"2017-12-07T06:23:12.562Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-07T06:23:12.563Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[2]++;cov_ratewsw8z.s[17]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[18]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[20]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[32]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[33]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[34]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T06:23:12.563Z"}
{"level":"info","message":"Server is up on port 3000.","timestamp":"2017-12-07T06:23:12.601Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T06:23:12.642Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T06:23:12.642Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T06:23:12.642Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T06:23:12.643Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[2]++;cov_ratewsw8z.s[17]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[18]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[20]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[32]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[33]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[34]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T06:23:12.643Z"}
{"level":"info","message":"Responding with a 200 code and the following data:","timestamp":"2017-12-07T06:23:12.643Z"}
{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"1a156530-db17-11e7-b98f-8fdf154c0abf","timestamp":"2017-12-07T06:23:12.643Z","level":"info","message":""}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T06:23:12.651Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T06:23:12.651Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T06:23:12.651Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T06:23:12.651Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.req.on (/Users/robertreed/Documents/programming/cf/401/lab/08-09-vanilla-rest-server/lab-rob/lib/req-parser.js:25:27)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-07T06:23:12.651Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T06:23:12.653Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T06:23:12.653Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T06:23:12.653Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T06:23:12.653Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[2]++;cov_ratewsw8z.s[17]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[18]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[20]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[32]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[33]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[34]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T06:23:12.654Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, make not found!.","timestamp":"2017-12-07T06:23:12.654Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T06:23:12.655Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T06:23:12.655Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T06:23:12.655Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T06:23:12.655Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[2]++;cov_ratewsw8z.s[17]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[18]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[20]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[32]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[33]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[34]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T06:23:12.655Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, model not found!.","timestamp":"2017-12-07T06:23:12.656Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T06:23:12.657Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T06:23:12.657Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T06:23:12.657Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T06:23:12.657Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[2]++;cov_ratewsw8z.s[17]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[18]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[20]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[32]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[33]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[34]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T06:23:12.657Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, year not found!.","timestamp":"2017-12-07T06:23:12.657Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T06:23:12.659Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T06:23:12.659Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T06:23:12.659Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T06:23:12.659Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[2]++;cov_ratewsw8z.s[17]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[18]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[20]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[32]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[33]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[34]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T06:23:12.659Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, displacement not found!.","timestamp":"2017-12-07T06:23:12.659Z"}
{"level":"info","message":"Adding a POST url and callback.","timestamp":"2017-12-07T06:24:10.426Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-07T06:24:10.427Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[2]++;cov_ratewsw8z.s[17]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[18]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[20]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[32]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[33]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[34]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T06:24:10.427Z"}
{"level":"info","message":"Server is up on port 3000.","timestamp":"2017-12-07T06:24:10.466Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T06:24:10.505Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T06:24:10.505Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T06:24:10.506Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T06:24:10.506Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[2]++;cov_ratewsw8z.s[17]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[18]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[20]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[32]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[33]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[34]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T06:24:10.506Z"}
{"level":"info","message":"Responding with a 200 code and the following data:","timestamp":"2017-12-07T06:24:10.507Z"}
{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"3c92bdb0-db17-11e7-b212-c728d7b33cae","timestamp":"2017-12-07T06:24:10.507Z","level":"info","message":""}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T06:24:10.514Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T06:24:10.514Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T06:24:10.514Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T06:24:10.515Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.req.on (/Users/robertreed/Documents/programming/cf/401/lab/08-09-vanilla-rest-server/lab-rob/lib/req-parser.js:25:27)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-07T06:24:10.515Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T06:24:10.517Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T06:24:10.517Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T06:24:10.517Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T06:24:10.517Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[2]++;cov_ratewsw8z.s[17]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[18]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[20]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[32]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[33]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[34]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T06:24:10.517Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, make not found!.","timestamp":"2017-12-07T06:24:10.517Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T06:24:10.519Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T06:24:10.519Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T06:24:10.519Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T06:24:10.519Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[2]++;cov_ratewsw8z.s[17]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[18]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[20]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[32]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[33]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[34]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T06:24:10.519Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, model not found!.","timestamp":"2017-12-07T06:24:10.519Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T06:24:10.521Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T06:24:10.521Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T06:24:10.521Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T06:24:10.521Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[2]++;cov_ratewsw8z.s[17]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[18]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[20]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[32]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[33]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[34]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T06:24:10.521Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, year not found!.","timestamp":"2017-12-07T06:24:10.521Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T06:24:10.523Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T06:24:10.523Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T06:24:10.523Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T06:24:10.523Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[2]++;cov_ratewsw8z.s[17]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[18]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[20]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[32]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[33]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[34]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T06:24:10.523Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, displacement not found!.","timestamp":"2017-12-07T06:24:10.523Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T06:24:10.524Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T06:24:10.525Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T06:24:10.525Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T06:24:10.525Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[2]++;cov_ratewsw8z.s[17]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[18]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[20]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[32]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[33]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[34]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T06:24:10.525Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, color not found!.","timestamp":"2017-12-07T06:24:10.525Z"}
{"level":"info","message":"Adding a POST url and callback.","timestamp":"2017-12-07T06:30:37.351Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-07T06:30:37.352Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[2]++;cov_ratewsw8z.s[17]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[18]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[20]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[32]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[33]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[34]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T06:30:37.352Z"}
{"level":"info","message":"Server is up on port 3000.","timestamp":"2017-12-07T06:30:37.392Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T06:30:37.431Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T06:30:37.432Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T06:30:37.432Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T06:30:37.432Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[2]++;cov_ratewsw8z.s[17]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[18]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[20]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[32]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[33]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[34]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T06:30:37.432Z"}
{"level":"info","message":"Responding with a 200 code and the following data:","timestamp":"2017-12-07T06:30:37.433Z"}
{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"2332f690-db18-11e7-a303-8921e6ab9885","timestamp":"2017-12-07T06:30:37.433Z","level":"info","message":""}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T06:30:37.440Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T06:30:37.441Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T06:30:37.441Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T06:30:37.441Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.req.on (/Users/robertreed/Documents/programming/cf/401/lab/08-09-vanilla-rest-server/lab-rob/lib/req-parser.js:25:27)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-07T06:30:37.441Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T06:30:37.443Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T06:30:37.443Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T06:30:37.443Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T06:30:37.443Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[2]++;cov_ratewsw8z.s[17]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[18]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[20]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[32]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[33]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[34]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T06:30:37.443Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, make not found!.","timestamp":"2017-12-07T06:30:37.444Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T06:30:37.445Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T06:30:37.445Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T06:30:37.445Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T06:30:37.445Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[2]++;cov_ratewsw8z.s[17]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[18]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[20]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[32]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[33]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[34]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T06:30:37.445Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, model not found!.","timestamp":"2017-12-07T06:30:37.445Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T06:30:37.447Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T06:30:37.447Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T06:30:37.447Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T06:30:37.447Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[2]++;cov_ratewsw8z.s[17]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[18]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[20]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[32]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[33]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[34]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T06:30:37.447Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, year not found!.","timestamp":"2017-12-07T06:30:37.447Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T06:30:37.449Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T06:30:37.449Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T06:30:37.449Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T06:30:37.449Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[2]++;cov_ratewsw8z.s[17]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[18]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[20]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[32]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[33]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[34]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T06:30:37.449Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, displacement not found!.","timestamp":"2017-12-07T06:30:37.449Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T06:30:37.450Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T06:30:37.450Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T06:30:37.450Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T06:30:37.451Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[2]++;cov_ratewsw8z.s[17]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[18]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[20]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[32]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[33]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[34]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T06:30:37.451Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, color not found!.","timestamp":"2017-12-07T06:30:37.451Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T06:30:37.452Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T06:30:37.452Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T06:30:37.452Z"}
{"level":"info","message":"Bad endpoint hit. 404.","timestamp":"2017-12-07T06:30:37.452Z"}
{"level":"info","message":"Adding a POST url and callback.","timestamp":"2017-12-07T06:33:11.991Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-07T06:33:11.992Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[2]++;cov_ratewsw8z.s[17]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[18]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[20]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[32]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[33]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[34]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T06:33:11.992Z"}
{"level":"info","message":"Adding a GET url and callback.","timestamp":"2017-12-07T06:33:11.992Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-07T06:33:11.992Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[3]++;cov_ratewsw8z.s[36]++;\n  sendJSON(res, 200, trialsBikes);\n}","timestamp":"2017-12-07T06:33:11.992Z"}
{"level":"info","message":"Server is up on port 3000.","timestamp":"2017-12-07T06:33:12.031Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T06:33:12.070Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T06:33:12.071Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T06:33:12.071Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T06:33:12.071Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[2]++;cov_ratewsw8z.s[17]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[18]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[20]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[32]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[33]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[34]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T06:33:12.072Z"}
{"level":"info","message":"Responding with a 200 code and the following data:","timestamp":"2017-12-07T06:33:12.072Z"}
{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"7f5f0080-db18-11e7-ad17-77224ca1969a","timestamp":"2017-12-07T06:33:12.072Z","level":"info","message":""}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T06:33:12.080Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T06:33:12.080Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T06:33:12.080Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T06:33:12.080Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.req.on (/Users/robertreed/Documents/programming/cf/401/lab/08-09-vanilla-rest-server/lab-rob/lib/req-parser.js:25:27)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-07T06:33:12.080Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T06:33:12.082Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T06:33:12.083Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T06:33:12.083Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T06:33:12.083Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[2]++;cov_ratewsw8z.s[17]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[18]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[20]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[32]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[33]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[34]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T06:33:12.083Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, make not found!.","timestamp":"2017-12-07T06:33:12.083Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T06:33:12.084Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T06:33:12.084Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T06:33:12.085Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T06:33:12.085Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[2]++;cov_ratewsw8z.s[17]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[18]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[20]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[32]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[33]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[34]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T06:33:12.085Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, model not found!.","timestamp":"2017-12-07T06:33:12.085Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T06:33:12.086Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T06:33:12.086Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T06:33:12.086Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T06:33:12.087Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[2]++;cov_ratewsw8z.s[17]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[18]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[20]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[32]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[33]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[34]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T06:33:12.087Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, year not found!.","timestamp":"2017-12-07T06:33:12.087Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T06:33:12.088Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T06:33:12.088Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T06:33:12.088Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T06:33:12.088Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[2]++;cov_ratewsw8z.s[17]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[18]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[20]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[32]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[33]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[34]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T06:33:12.088Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, displacement not found!.","timestamp":"2017-12-07T06:33:12.088Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T06:33:12.090Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T06:33:12.090Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T06:33:12.090Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T06:33:12.090Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[2]++;cov_ratewsw8z.s[17]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[18]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[20]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[32]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[33]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[34]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T06:33:12.090Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, color not found!.","timestamp":"2017-12-07T06:33:12.090Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T06:33:12.091Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T06:33:12.092Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T06:33:12.092Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T06:33:12.092Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[3]++;cov_ratewsw8z.s[36]++;\n  sendJSON(res, 200, trialsBikes);\n}","timestamp":"2017-12-07T06:33:12.092Z"}
{"level":"info","message":"Responding with a 200 code and the following data:","timestamp":"2017-12-07T06:33:12.092Z"}
[{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"7f5f0080-db18-11e7-ad17-77224ca1969a","timestamp":"2017-12-07T06:33:12.072Z"}]
{"level":"info","message":"Adding a POST url and callback.","timestamp":"2017-12-07T06:33:31.182Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-07T06:33:31.182Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[2]++;cov_ratewsw8z.s[17]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[18]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[20]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[32]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[33]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[34]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T06:33:31.182Z"}
{"level":"info","message":"Adding a GET url and callback.","timestamp":"2017-12-07T06:33:31.182Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-07T06:33:31.182Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[3]++;cov_ratewsw8z.s[36]++;\n  sendJSON(res, 200, trialsBikes);\n}","timestamp":"2017-12-07T06:33:31.182Z"}
{"level":"info","message":"Server is up on port 3000.","timestamp":"2017-12-07T06:33:31.223Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T06:33:31.263Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T06:33:31.263Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T06:33:31.263Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T06:33:31.264Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[2]++;cov_ratewsw8z.s[17]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[18]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[20]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[32]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[33]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[34]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T06:33:31.264Z"}
{"level":"info","message":"Responding with a 200 code and the following data:","timestamp":"2017-12-07T06:33:31.264Z"}
{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"8acf7800-db18-11e7-9848-5388e7611ffe","timestamp":"2017-12-07T06:33:31.264Z","level":"info","message":""}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T06:33:31.272Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T06:33:31.272Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T06:33:31.272Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T06:33:31.272Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.req.on (/Users/robertreed/Documents/programming/cf/401/lab/08-09-vanilla-rest-server/lab-rob/lib/req-parser.js:25:27)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-07T06:33:31.273Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T06:33:31.275Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T06:33:31.275Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T06:33:31.275Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T06:33:31.275Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[2]++;cov_ratewsw8z.s[17]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[18]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[20]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[32]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[33]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[34]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T06:33:31.275Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, make not found!.","timestamp":"2017-12-07T06:33:31.275Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T06:33:31.277Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T06:33:31.277Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T06:33:31.277Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T06:33:31.277Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[2]++;cov_ratewsw8z.s[17]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[18]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[20]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[32]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[33]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[34]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T06:33:31.277Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, model not found!.","timestamp":"2017-12-07T06:33:31.277Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T06:33:31.279Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T06:33:31.279Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T06:33:31.279Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T06:33:31.279Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[2]++;cov_ratewsw8z.s[17]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[18]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[20]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[32]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[33]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[34]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T06:33:31.279Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, year not found!.","timestamp":"2017-12-07T06:33:31.279Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T06:33:31.280Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T06:33:31.281Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T06:33:31.281Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T06:33:31.281Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[2]++;cov_ratewsw8z.s[17]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[18]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[20]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[32]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[33]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[34]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T06:33:31.281Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, displacement not found!.","timestamp":"2017-12-07T06:33:31.281Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T06:33:31.282Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T06:33:31.282Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T06:33:31.282Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T06:33:31.282Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[2]++;cov_ratewsw8z.s[17]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[18]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[20]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[32]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[33]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[34]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T06:33:31.282Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, color not found!.","timestamp":"2017-12-07T06:33:31.283Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T06:33:31.284Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T06:33:31.284Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T06:33:31.284Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T06:33:31.284Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[3]++;cov_ratewsw8z.s[36]++;\n  sendJSON(res, 200, trialsBikes);\n}","timestamp":"2017-12-07T06:33:31.284Z"}
{"level":"info","message":"Responding with a 200 code and the following data:","timestamp":"2017-12-07T06:33:31.284Z"}
[{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"8acf7800-db18-11e7-9848-5388e7611ffe","timestamp":"2017-12-07T06:33:31.264Z"}]
{"level":"info","message":"Adding a POST url and callback.","timestamp":"2017-12-07T06:33:47.186Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-07T06:33:47.187Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[2]++;cov_ratewsw8z.s[17]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[18]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[20]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[32]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[33]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[34]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T06:33:47.187Z"}
{"level":"info","message":"Adding a GET url and callback.","timestamp":"2017-12-07T06:33:47.187Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-07T06:33:47.187Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[3]++;cov_ratewsw8z.s[36]++;\n  sendJSON(res, 200, trialsBikes);\n}","timestamp":"2017-12-07T06:33:47.187Z"}
{"level":"info","message":"Server is up on port 3000.","timestamp":"2017-12-07T06:33:47.230Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T06:33:47.268Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T06:33:47.268Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T06:33:47.268Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T06:33:47.269Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[2]++;cov_ratewsw8z.s[17]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[18]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[20]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[32]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[33]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[34]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T06:33:47.269Z"}
{"level":"info","message":"Responding with a 200 code and the following data:","timestamp":"2017-12-07T06:33:47.269Z"}
{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"9459a350-db18-11e7-988c-7d28c7da5884","timestamp":"2017-12-07T06:33:47.269Z","level":"info","message":""}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T06:33:47.277Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T06:33:47.277Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T06:33:47.277Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T06:33:47.277Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.req.on (/Users/robertreed/Documents/programming/cf/401/lab/08-09-vanilla-rest-server/lab-rob/lib/req-parser.js:25:27)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-07T06:33:47.277Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T06:33:47.280Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T06:33:47.280Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T06:33:47.280Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T06:33:47.280Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[2]++;cov_ratewsw8z.s[17]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[18]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[20]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[32]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[33]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[34]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T06:33:47.280Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, make not found!.","timestamp":"2017-12-07T06:33:47.280Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T06:33:47.282Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T06:33:47.282Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T06:33:47.282Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T06:33:47.282Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[2]++;cov_ratewsw8z.s[17]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[18]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[20]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[32]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[33]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[34]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T06:33:47.282Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, model not found!.","timestamp":"2017-12-07T06:33:47.282Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T06:33:47.284Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T06:33:47.284Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T06:33:47.284Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T06:33:47.284Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[2]++;cov_ratewsw8z.s[17]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[18]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[20]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[32]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[33]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[34]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T06:33:47.284Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, year not found!.","timestamp":"2017-12-07T06:33:47.284Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T06:33:47.285Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T06:33:47.285Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T06:33:47.285Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T06:33:47.286Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[2]++;cov_ratewsw8z.s[17]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[18]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[20]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[32]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[33]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[34]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T06:33:47.286Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, displacement not found!.","timestamp":"2017-12-07T06:33:47.286Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T06:33:47.287Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T06:33:47.287Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T06:33:47.287Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T06:33:47.287Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[2]++;cov_ratewsw8z.s[17]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[18]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[20]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[32]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[33]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[34]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T06:33:47.287Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, color not found!.","timestamp":"2017-12-07T06:33:47.287Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T06:33:47.289Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T06:33:47.289Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T06:33:47.289Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T06:33:47.289Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[3]++;cov_ratewsw8z.s[36]++;\n  sendJSON(res, 200, trialsBikes);\n}","timestamp":"2017-12-07T06:33:47.289Z"}
{"level":"info","message":"Responding with a 200 code and the following data:","timestamp":"2017-12-07T06:33:47.289Z"}
[{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"9459a350-db18-11e7-988c-7d28c7da5884","timestamp":"2017-12-07T06:33:47.269Z"}]
{"level":"info","message":"Adding a POST url and callback.","timestamp":"2017-12-07T06:35:31.237Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-07T06:35:31.237Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[2]++;cov_ratewsw8z.s[17]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[18]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[20]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[32]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[33]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[34]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T06:35:31.237Z"}
{"level":"info","message":"Adding a GET url and callback.","timestamp":"2017-12-07T06:35:31.237Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-07T06:35:31.237Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[3]++;cov_ratewsw8z.s[36]++;\n  sendJSON(res, 200, trialsBikes);\n}","timestamp":"2017-12-07T06:35:31.238Z"}
{"level":"info","message":"Server is up on port 3000.","timestamp":"2017-12-07T06:35:31.276Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T06:35:31.315Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T06:35:31.316Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T06:35:31.316Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T06:35:31.316Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[2]++;cov_ratewsw8z.s[17]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[18]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[20]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[32]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[33]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[34]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T06:35:31.316Z"}
{"level":"info","message":"Responding with a 200 code and the following data:","timestamp":"2017-12-07T06:35:31.317Z"}
{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"d25e1a50-db18-11e7-b0cc-859c810bfc87","timestamp":"2017-12-07T06:35:31.317Z","level":"info","message":""}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T06:35:31.324Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T06:35:31.325Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T06:35:31.325Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T06:35:31.325Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.req.on (/Users/robertreed/Documents/programming/cf/401/lab/08-09-vanilla-rest-server/lab-rob/lib/req-parser.js:25:27)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-07T06:35:31.325Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T06:35:31.327Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T06:35:31.327Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T06:35:31.327Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T06:35:31.327Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[2]++;cov_ratewsw8z.s[17]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[18]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[20]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[32]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[33]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[34]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T06:35:31.327Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, make not found!.","timestamp":"2017-12-07T06:35:31.328Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T06:35:31.329Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T06:35:31.329Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T06:35:31.329Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T06:35:31.329Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[2]++;cov_ratewsw8z.s[17]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[18]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[20]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[32]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[33]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[34]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T06:35:31.329Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, model not found!.","timestamp":"2017-12-07T06:35:31.329Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T06:35:31.331Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T06:35:31.331Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T06:35:31.331Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T06:35:31.331Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[2]++;cov_ratewsw8z.s[17]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[18]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[20]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[32]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[33]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[34]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T06:35:31.331Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, year not found!.","timestamp":"2017-12-07T06:35:31.331Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T06:35:31.333Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T06:35:31.333Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T06:35:31.333Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T06:35:31.333Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[2]++;cov_ratewsw8z.s[17]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[18]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[20]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[32]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[33]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[34]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T06:35:31.333Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, displacement not found!.","timestamp":"2017-12-07T06:35:31.333Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T06:35:31.334Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T06:35:31.334Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T06:35:31.335Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T06:35:31.335Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[2]++;cov_ratewsw8z.s[17]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[18]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[20]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[32]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[33]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[34]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T06:35:31.335Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, color not found!.","timestamp":"2017-12-07T06:35:31.335Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T06:35:31.336Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T06:35:31.336Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T06:35:31.336Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T06:35:31.336Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[3]++;cov_ratewsw8z.s[36]++;\n  sendJSON(res, 200, trialsBikes);\n}","timestamp":"2017-12-07T06:35:31.336Z"}
{"level":"info","message":"Responding with a 200 code and the following data:","timestamp":"2017-12-07T06:35:31.336Z"}
[{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"d25e1a50-db18-11e7-b0cc-859c810bfc87","timestamp":"2017-12-07T06:35:31.317Z"}]
{"level":"info","message":"Adding a POST url and callback.","timestamp":"2017-12-07T06:38:02.712Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-07T06:38:02.712Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[2]++;cov_ratewsw8z.s[17]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[18]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[20]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[32]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[33]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[34]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T06:38:02.712Z"}
{"level":"info","message":"Adding a GET url and callback.","timestamp":"2017-12-07T06:38:02.712Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-07T06:38:02.712Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[3]++;cov_ratewsw8z.s[36]++;\n  sendJSON(res, 200, trialsBikes);\n}","timestamp":"2017-12-07T06:38:02.712Z"}
{"level":"info","message":"Server is up on port 3000.","timestamp":"2017-12-07T06:38:02.753Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T06:38:02.793Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T06:38:02.794Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T06:38:02.794Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T06:38:02.794Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[2]++;cov_ratewsw8z.s[17]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[18]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[20]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[32]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[33]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[34]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T06:38:02.794Z"}
{"level":"info","message":"Responding with a 200 code and the following data:","timestamp":"2017-12-07T06:38:02.795Z"}
{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"2ca7cfb0-db19-11e7-822c-4d0149e723f3","timestamp":"2017-12-07T06:38:02.795Z","level":"info","message":""}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T06:38:02.802Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T06:38:02.802Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T06:38:02.803Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T06:38:02.803Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.req.on (/Users/robertreed/Documents/programming/cf/401/lab/08-09-vanilla-rest-server/lab-rob/lib/req-parser.js:25:27)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-07T06:38:02.803Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T06:38:02.805Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T06:38:02.805Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T06:38:02.805Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T06:38:02.805Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[2]++;cov_ratewsw8z.s[17]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[18]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[20]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[32]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[33]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[34]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T06:38:02.805Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, make not found!.","timestamp":"2017-12-07T06:38:02.805Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T06:38:02.807Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T06:38:02.807Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T06:38:02.807Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T06:38:02.807Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[2]++;cov_ratewsw8z.s[17]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[18]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[20]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[32]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[33]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[34]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T06:38:02.807Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, model not found!.","timestamp":"2017-12-07T06:38:02.807Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T06:38:02.809Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T06:38:02.809Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T06:38:02.809Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T06:38:02.809Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[2]++;cov_ratewsw8z.s[17]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[18]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[20]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[32]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[33]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[34]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T06:38:02.809Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, year not found!.","timestamp":"2017-12-07T06:38:02.809Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T06:38:02.811Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T06:38:02.811Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T06:38:02.811Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T06:38:02.811Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[2]++;cov_ratewsw8z.s[17]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[18]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[20]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[32]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[33]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[34]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T06:38:02.811Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, displacement not found!.","timestamp":"2017-12-07T06:38:02.811Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T06:38:02.812Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T06:38:02.812Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T06:38:02.812Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T06:38:02.813Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[2]++;cov_ratewsw8z.s[17]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[18]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[20]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[32]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[33]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[34]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T06:38:02.813Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, color not found!.","timestamp":"2017-12-07T06:38:02.813Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T06:38:02.814Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T06:38:02.814Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T06:38:02.814Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T06:38:02.814Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[3]++;cov_ratewsw8z.s[36]++;\n  sendJSON(res, 200, trialsBikes);\n}","timestamp":"2017-12-07T06:38:02.814Z"}
{"level":"info","message":"Responding with a 200 code and the following data:","timestamp":"2017-12-07T06:38:02.814Z"}
[{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"2ca7cfb0-db19-11e7-822c-4d0149e723f3","timestamp":"2017-12-07T06:38:02.795Z"}]
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T06:38:02.816Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes?id=2ca7cfb0-db19-11e7-822c-4d0149e723f3\"","timestamp":"2017-12-07T06:38:02.816Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=2ca7cfb0-db19-11e7-822c-4d0149e723f3\",\"query\":{\"id\":\"2ca7cfb0-db19-11e7-822c-4d0149e723f3\"},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes?id=2ca7cfb0-db19-11e7-822c-4d0149e723f3\",\"href\":\"/api/trials-bikes?id=2ca7cfb0-db19-11e7-822c-4d0149e723f3\"}","timestamp":"2017-12-07T06:38:02.817Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T06:38:02.817Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[3]++;cov_ratewsw8z.s[36]++;\n  sendJSON(res, 200, trialsBikes);\n}","timestamp":"2017-12-07T06:38:02.817Z"}
{"level":"info","message":"Responding with a 200 code and the following data:","timestamp":"2017-12-07T06:38:02.817Z"}
[{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"2ca7cfb0-db19-11e7-822c-4d0149e723f3","timestamp":"2017-12-07T06:38:02.795Z"}]
{"level":"info","message":"Adding a POST url and callback.","timestamp":"2017-12-07T06:40:30.323Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-07T06:40:30.323Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[2]++;cov_ratewsw8z.s[17]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[18]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[20]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[32]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[33]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[34]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T06:40:30.323Z"}
{"level":"info","message":"Adding a GET url and callback.","timestamp":"2017-12-07T06:40:30.323Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-07T06:40:30.323Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[3]++;cov_ratewsw8z.s[36]++;\n  if (req.url.query.id)\n    {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[37]++;console.log('found id!');} else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}cov_ratewsw8z.s[38]++;\n  sendJSON(res, 200, trialsBikes);\n}","timestamp":"2017-12-07T06:40:30.323Z"}
{"level":"info","message":"Server is up on port 3000.","timestamp":"2017-12-07T06:40:30.362Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T06:40:30.403Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T06:40:30.404Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T06:40:30.404Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T06:40:30.405Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[2]++;cov_ratewsw8z.s[17]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[18]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[20]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[32]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[33]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[34]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T06:40:30.405Z"}
{"level":"info","message":"Responding with a 200 code and the following data:","timestamp":"2017-12-07T06:40:30.405Z"}
{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"84a34f50-db19-11e7-b769-837e915da3eb","timestamp":"2017-12-07T06:40:30.405Z","level":"info","message":""}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T06:40:30.413Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T06:40:30.413Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T06:40:30.413Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T06:40:30.414Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.req.on (/Users/robertreed/Documents/programming/cf/401/lab/08-09-vanilla-rest-server/lab-rob/lib/req-parser.js:25:27)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-07T06:40:30.414Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T06:40:30.416Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T06:40:30.416Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T06:40:30.416Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T06:40:30.416Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[2]++;cov_ratewsw8z.s[17]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[18]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[20]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[32]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[33]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[34]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T06:40:30.416Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, make not found!.","timestamp":"2017-12-07T06:40:30.417Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T06:40:30.418Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T06:40:30.418Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T06:40:30.418Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T06:40:30.418Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[2]++;cov_ratewsw8z.s[17]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[18]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[20]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[32]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[33]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[34]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T06:40:30.418Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, model not found!.","timestamp":"2017-12-07T06:40:30.418Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T06:40:30.420Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T06:40:30.420Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T06:40:30.420Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T06:40:30.420Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[2]++;cov_ratewsw8z.s[17]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[18]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[20]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[32]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[33]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[34]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T06:40:30.420Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, year not found!.","timestamp":"2017-12-07T06:40:30.420Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T06:40:30.422Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T06:40:30.422Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T06:40:30.422Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T06:40:30.422Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[2]++;cov_ratewsw8z.s[17]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[18]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[20]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[32]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[33]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[34]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T06:40:30.422Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, displacement not found!.","timestamp":"2017-12-07T06:40:30.422Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T06:40:30.424Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T06:40:30.424Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T06:40:30.424Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T06:40:30.424Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[2]++;cov_ratewsw8z.s[17]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[18]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[20]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[32]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[33]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[34]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T06:40:30.424Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, color not found!.","timestamp":"2017-12-07T06:40:30.424Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T06:40:30.426Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T06:40:30.426Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T06:40:30.426Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T06:40:30.426Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[3]++;cov_ratewsw8z.s[36]++;\n  if (req.url.query.id)\n    {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[37]++;console.log('found id!');} else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}cov_ratewsw8z.s[38]++;\n  sendJSON(res, 200, trialsBikes);\n}","timestamp":"2017-12-07T06:40:30.426Z"}
{"level":"info","message":"Responding with a 200 code and the following data:","timestamp":"2017-12-07T06:40:30.426Z"}
[{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"84a34f50-db19-11e7-b769-837e915da3eb","timestamp":"2017-12-07T06:40:30.405Z"}]
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T06:40:30.428Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes?id=84a34f50-db19-11e7-b769-837e915da3eb\"","timestamp":"2017-12-07T06:40:30.428Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=84a34f50-db19-11e7-b769-837e915da3eb\",\"query\":{\"id\":\"84a34f50-db19-11e7-b769-837e915da3eb\"},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes?id=84a34f50-db19-11e7-b769-837e915da3eb\",\"href\":\"/api/trials-bikes?id=84a34f50-db19-11e7-b769-837e915da3eb\"}","timestamp":"2017-12-07T06:40:30.429Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T06:40:30.429Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[3]++;cov_ratewsw8z.s[36]++;\n  if (req.url.query.id)\n    {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[37]++;console.log('found id!');} else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}cov_ratewsw8z.s[38]++;\n  sendJSON(res, 200, trialsBikes);\n}","timestamp":"2017-12-07T06:40:30.429Z"}
{"level":"info","message":"Responding with a 200 code and the following data:","timestamp":"2017-12-07T06:40:30.429Z"}
[{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"84a34f50-db19-11e7-b769-837e915da3eb","timestamp":"2017-12-07T06:40:30.405Z"}]
{"level":"info","message":"Adding a POST url and callback.","timestamp":"2017-12-07T06:49:26.131Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-07T06:49:26.132Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[4]++;cov_ratewsw8z.s[20]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[32]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[33]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[35]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[36]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[37]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T06:49:26.132Z"}
{"level":"info","message":"Adding a GET url and callback.","timestamp":"2017-12-07T06:49:26.132Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-07T06:49:26.132Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[5]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[39]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[40]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;\n    let requestedBike = /* istanbul ignore next */(cov_ratewsw8z.s[41]++, getBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[42]++;\n    if (requestedBike)\n      {/* istanbul ignore next */cov_ratewsw8z.b[6][0]++;cov_ratewsw8z.s[43]++;sendJSON(res, 200, requestedBike);} else\n\n      {/* istanbul ignore next */cov_ratewsw8z.b[6][1]++;cov_ratewsw8z.s[44]++;sendBadStatus(res, 404, `No bike with id ${id}.`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[5][1]++;cov_ratewsw8z.s[45]++;sendJSON(res, 200, trialsBikes);}\n}","timestamp":"2017-12-07T06:49:26.132Z"}
{"level":"info","message":"Server is up on port 3000.","timestamp":"2017-12-07T06:49:26.170Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T06:49:26.211Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T06:49:26.211Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T06:49:26.211Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T06:49:26.212Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[4]++;cov_ratewsw8z.s[20]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[32]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[33]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[35]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[36]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[37]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T06:49:26.212Z"}
{"level":"info","message":"Responding with a 200 code and the following data:","timestamp":"2017-12-07T06:49:26.212Z"}
{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"c400f840-db1a-11e7-9500-616a4a52154b","timestamp":"2017-12-07T06:49:26.212Z","level":"info","message":""}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T06:49:26.220Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T06:49:26.220Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T06:49:26.220Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T06:49:26.221Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.req.on (/Users/robertreed/Documents/programming/cf/401/lab/08-09-vanilla-rest-server/lab-rob/lib/req-parser.js:25:27)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-07T06:49:26.221Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T06:49:26.223Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T06:49:26.223Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T06:49:26.223Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T06:49:26.223Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[4]++;cov_ratewsw8z.s[20]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[32]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[33]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[35]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[36]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[37]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T06:49:26.223Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, make not found!.","timestamp":"2017-12-07T06:49:26.223Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T06:49:26.225Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T06:49:26.225Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T06:49:26.225Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T06:49:26.225Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[4]++;cov_ratewsw8z.s[20]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[32]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[33]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[35]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[36]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[37]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T06:49:26.225Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, model not found!.","timestamp":"2017-12-07T06:49:26.225Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T06:49:26.227Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T06:49:26.227Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T06:49:26.227Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T06:49:26.227Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[4]++;cov_ratewsw8z.s[20]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[32]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[33]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[35]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[36]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[37]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T06:49:26.227Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, year not found!.","timestamp":"2017-12-07T06:49:26.227Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T06:49:26.229Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T06:49:26.229Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T06:49:26.229Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T06:49:26.229Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[4]++;cov_ratewsw8z.s[20]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[32]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[33]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[35]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[36]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[37]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T06:49:26.229Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, displacement not found!.","timestamp":"2017-12-07T06:49:26.229Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T06:49:26.230Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T06:49:26.230Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T06:49:26.230Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T06:49:26.231Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[4]++;cov_ratewsw8z.s[20]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[32]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[33]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[35]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[36]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[37]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T06:49:26.231Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, color not found!.","timestamp":"2017-12-07T06:49:26.231Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T06:49:26.232Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T06:49:26.232Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T06:49:26.232Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T06:49:26.232Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[5]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[39]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[40]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;\n    let requestedBike = /* istanbul ignore next */(cov_ratewsw8z.s[41]++, getBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[42]++;\n    if (requestedBike)\n      {/* istanbul ignore next */cov_ratewsw8z.b[6][0]++;cov_ratewsw8z.s[43]++;sendJSON(res, 200, requestedBike);} else\n\n      {/* istanbul ignore next */cov_ratewsw8z.b[6][1]++;cov_ratewsw8z.s[44]++;sendBadStatus(res, 404, `No bike with id ${id}.`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[5][1]++;cov_ratewsw8z.s[45]++;sendJSON(res, 200, trialsBikes);}\n}","timestamp":"2017-12-07T06:49:26.232Z"}
{"level":"info","message":"Responding with a 200 code and the following data:","timestamp":"2017-12-07T06:49:26.232Z"}
[{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"c400f840-db1a-11e7-9500-616a4a52154b","timestamp":"2017-12-07T06:49:26.212Z"}]
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T06:49:26.234Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes?id=c400f840-db1a-11e7-9500-616a4a52154b\"","timestamp":"2017-12-07T06:49:26.234Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=c400f840-db1a-11e7-9500-616a4a52154b\",\"query\":{\"id\":\"c400f840-db1a-11e7-9500-616a4a52154b\"},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes?id=c400f840-db1a-11e7-9500-616a4a52154b\",\"href\":\"/api/trials-bikes?id=c400f840-db1a-11e7-9500-616a4a52154b\"}","timestamp":"2017-12-07T06:49:26.235Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T06:49:26.235Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[5]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[39]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[40]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;\n    let requestedBike = /* istanbul ignore next */(cov_ratewsw8z.s[41]++, getBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[42]++;\n    if (requestedBike)\n      {/* istanbul ignore next */cov_ratewsw8z.b[6][0]++;cov_ratewsw8z.s[43]++;sendJSON(res, 200, requestedBike);} else\n\n      {/* istanbul ignore next */cov_ratewsw8z.b[6][1]++;cov_ratewsw8z.s[44]++;sendBadStatus(res, 404, `No bike with id ${id}.`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[5][1]++;cov_ratewsw8z.s[45]++;sendJSON(res, 200, trialsBikes);}\n}","timestamp":"2017-12-07T06:49:26.235Z"}
{"level":"info","message":"Responding with a 200 code and the following data:","timestamp":"2017-12-07T06:49:26.235Z"}
{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"c400f840-db1a-11e7-9500-616a4a52154b","timestamp":"2017-12-07T06:49:26.235Z","level":"info","message":""}
{"level":"info","message":"Adding a POST url and callback.","timestamp":"2017-12-07T06:51:03.453Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-07T06:51:03.454Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[4]++;cov_ratewsw8z.s[20]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[32]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[33]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[35]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[36]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[37]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T06:51:03.454Z"}
{"level":"info","message":"Adding a GET url and callback.","timestamp":"2017-12-07T06:51:03.454Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-07T06:51:03.454Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[5]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[39]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[40]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;\n    let requestedBike = /* istanbul ignore next */(cov_ratewsw8z.s[41]++, getBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[42]++;\n    if (requestedBike)\n      {/* istanbul ignore next */cov_ratewsw8z.b[6][0]++;cov_ratewsw8z.s[43]++;sendJSON(res, 200, requestedBike);} else\n\n      {/* istanbul ignore next */cov_ratewsw8z.b[6][1]++;cov_ratewsw8z.s[44]++;sendBadStatus(res, 404, `No bike with id ${id}.`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[5][1]++;cov_ratewsw8z.s[45]++;sendJSON(res, 200, trialsBikes);}\n}","timestamp":"2017-12-07T06:51:03.454Z"}
{"level":"info","message":"Server is up on port 3000.","timestamp":"2017-12-07T06:51:03.499Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T06:51:03.540Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T06:51:03.540Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T06:51:03.540Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T06:51:03.541Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[4]++;cov_ratewsw8z.s[20]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[32]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[33]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[35]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[36]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[37]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T06:51:03.541Z"}
{"level":"info","message":"Responding with a 200 code and the following data:","timestamp":"2017-12-07T06:51:03.541Z"}
{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"fe043250-db1a-11e7-87e6-8fb7152cb665","timestamp":"2017-12-07T06:51:03.541Z","level":"info","message":""}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T06:51:03.549Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T06:51:03.549Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T06:51:03.549Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T06:51:03.549Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.req.on (/Users/robertreed/Documents/programming/cf/401/lab/08-09-vanilla-rest-server/lab-rob/lib/req-parser.js:25:27)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-07T06:51:03.549Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T06:51:03.551Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T06:51:03.551Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T06:51:03.551Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T06:51:03.552Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[4]++;cov_ratewsw8z.s[20]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[32]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[33]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[35]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[36]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[37]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T06:51:03.552Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, make not found!.","timestamp":"2017-12-07T06:51:03.552Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T06:51:03.553Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T06:51:03.553Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T06:51:03.553Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T06:51:03.553Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[4]++;cov_ratewsw8z.s[20]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[32]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[33]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[35]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[36]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[37]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T06:51:03.554Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, model not found!.","timestamp":"2017-12-07T06:51:03.554Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T06:51:03.555Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T06:51:03.555Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T06:51:03.555Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T06:51:03.555Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[4]++;cov_ratewsw8z.s[20]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[32]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[33]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[35]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[36]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[37]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T06:51:03.555Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, year not found!.","timestamp":"2017-12-07T06:51:03.555Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T06:51:03.557Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T06:51:03.557Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T06:51:03.557Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T06:51:03.557Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[4]++;cov_ratewsw8z.s[20]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[32]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[33]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[35]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[36]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[37]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T06:51:03.557Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, displacement not found!.","timestamp":"2017-12-07T06:51:03.557Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T06:51:03.558Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T06:51:03.559Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T06:51:03.559Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T06:51:03.559Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[4]++;cov_ratewsw8z.s[20]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[32]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[33]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[35]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[36]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[37]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T06:51:03.559Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, color not found!.","timestamp":"2017-12-07T06:51:03.559Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T06:51:03.560Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T06:51:03.560Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T06:51:03.560Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T06:51:03.560Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[5]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[39]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[40]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;\n    let requestedBike = /* istanbul ignore next */(cov_ratewsw8z.s[41]++, getBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[42]++;\n    if (requestedBike)\n      {/* istanbul ignore next */cov_ratewsw8z.b[6][0]++;cov_ratewsw8z.s[43]++;sendJSON(res, 200, requestedBike);} else\n\n      {/* istanbul ignore next */cov_ratewsw8z.b[6][1]++;cov_ratewsw8z.s[44]++;sendBadStatus(res, 404, `No bike with id ${id}.`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[5][1]++;cov_ratewsw8z.s[45]++;sendJSON(res, 200, trialsBikes);}\n}","timestamp":"2017-12-07T06:51:03.560Z"}
{"level":"info","message":"Responding with a 200 code and the following data:","timestamp":"2017-12-07T06:51:03.561Z"}
[{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"fe043250-db1a-11e7-87e6-8fb7152cb665","timestamp":"2017-12-07T06:51:03.541Z"}]
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T06:51:03.562Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes?id=fe043250-db1a-11e7-87e6-8fb7152cb665\"","timestamp":"2017-12-07T06:51:03.563Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=fe043250-db1a-11e7-87e6-8fb7152cb665\",\"query\":{\"id\":\"fe043250-db1a-11e7-87e6-8fb7152cb665\"},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes?id=fe043250-db1a-11e7-87e6-8fb7152cb665\",\"href\":\"/api/trials-bikes?id=fe043250-db1a-11e7-87e6-8fb7152cb665\"}","timestamp":"2017-12-07T06:51:03.563Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T06:51:03.563Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[5]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[39]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[40]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;\n    let requestedBike = /* istanbul ignore next */(cov_ratewsw8z.s[41]++, getBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[42]++;\n    if (requestedBike)\n      {/* istanbul ignore next */cov_ratewsw8z.b[6][0]++;cov_ratewsw8z.s[43]++;sendJSON(res, 200, requestedBike);} else\n\n      {/* istanbul ignore next */cov_ratewsw8z.b[6][1]++;cov_ratewsw8z.s[44]++;sendBadStatus(res, 404, `No bike with id ${id}.`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[5][1]++;cov_ratewsw8z.s[45]++;sendJSON(res, 200, trialsBikes);}\n}","timestamp":"2017-12-07T06:51:03.563Z"}
{"level":"info","message":"Responding with a 200 code and the following data:","timestamp":"2017-12-07T06:51:03.563Z"}
{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"fe043250-db1a-11e7-87e6-8fb7152cb665","timestamp":"2017-12-07T06:51:03.563Z","level":"info","message":""}
{"level":"info","message":"Adding a POST url and callback.","timestamp":"2017-12-07T06:55:00.963Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-07T06:55:00.963Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[4]++;cov_ratewsw8z.s[20]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[32]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[33]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[35]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[36]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[37]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T06:55:00.963Z"}
{"level":"info","message":"Adding a GET url and callback.","timestamp":"2017-12-07T06:55:00.964Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-07T06:55:00.964Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[5]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[39]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[40]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;\n    let requestedBike = /* istanbul ignore next */(cov_ratewsw8z.s[41]++, getBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[42]++;\n    if (requestedBike)\n      {/* istanbul ignore next */cov_ratewsw8z.b[6][0]++;cov_ratewsw8z.s[43]++;sendJSON(res, 200, requestedBike);} else\n\n      {/* istanbul ignore next */cov_ratewsw8z.b[6][1]++;cov_ratewsw8z.s[44]++;sendBadStatus(res, 404, `No bike with id ${id}.`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[5][1]++;cov_ratewsw8z.s[45]++;sendJSON(res, 200, trialsBikes);}\n}","timestamp":"2017-12-07T06:55:00.964Z"}
{"level":"info","message":"Server is up on port 3000.","timestamp":"2017-12-07T06:55:01.004Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T06:55:01.045Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T06:55:01.045Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T06:55:01.046Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T06:55:01.046Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[4]++;cov_ratewsw8z.s[20]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[32]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[33]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[35]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[36]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[37]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T06:55:01.046Z"}
{"level":"info","message":"Responding with a 200 code and the following data:","timestamp":"2017-12-07T06:55:01.047Z"}
{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"8b94bc70-db1b-11e7-912d-3ba389ce1e7e","timestamp":"2017-12-07T06:55:01.047Z","level":"info","message":""}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T06:55:01.054Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T06:55:01.055Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T06:55:01.055Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T06:55:01.055Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.req.on (/Users/robertreed/Documents/programming/cf/401/lab/08-09-vanilla-rest-server/lab-rob/lib/req-parser.js:25:27)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-07T06:55:01.055Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T06:55:01.057Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T06:55:01.058Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T06:55:01.058Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T06:55:01.058Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[4]++;cov_ratewsw8z.s[20]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[32]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[33]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[35]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[36]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[37]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T06:55:01.058Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, make not found!.","timestamp":"2017-12-07T06:55:01.058Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T06:55:01.060Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T06:55:01.060Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T06:55:01.060Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T06:55:01.060Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[4]++;cov_ratewsw8z.s[20]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[32]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[33]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[35]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[36]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[37]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T06:55:01.060Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, model not found!.","timestamp":"2017-12-07T06:55:01.060Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T06:55:01.062Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T06:55:01.062Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T06:55:01.062Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T06:55:01.062Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[4]++;cov_ratewsw8z.s[20]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[32]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[33]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[35]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[36]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[37]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T06:55:01.062Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, year not found!.","timestamp":"2017-12-07T06:55:01.062Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T06:55:01.064Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T06:55:01.064Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T06:55:01.064Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T06:55:01.064Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[4]++;cov_ratewsw8z.s[20]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[32]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[33]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[35]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[36]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[37]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T06:55:01.064Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, displacement not found!.","timestamp":"2017-12-07T06:55:01.064Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T06:55:01.065Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T06:55:01.065Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T06:55:01.065Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T06:55:01.066Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[4]++;cov_ratewsw8z.s[20]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[32]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[33]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[35]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[36]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[37]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T06:55:01.066Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, color not found!.","timestamp":"2017-12-07T06:55:01.066Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T06:55:01.067Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T06:55:01.067Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T06:55:01.067Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T06:55:01.067Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[5]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[39]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[40]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;\n    let requestedBike = /* istanbul ignore next */(cov_ratewsw8z.s[41]++, getBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[42]++;\n    if (requestedBike)\n      {/* istanbul ignore next */cov_ratewsw8z.b[6][0]++;cov_ratewsw8z.s[43]++;sendJSON(res, 200, requestedBike);} else\n\n      {/* istanbul ignore next */cov_ratewsw8z.b[6][1]++;cov_ratewsw8z.s[44]++;sendBadStatus(res, 404, `No bike with id ${id}.`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[5][1]++;cov_ratewsw8z.s[45]++;sendJSON(res, 200, trialsBikes);}\n}","timestamp":"2017-12-07T06:55:01.067Z"}
{"level":"info","message":"Responding with a 200 code and the following data:","timestamp":"2017-12-07T06:55:01.068Z"}
[{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"8b94bc70-db1b-11e7-912d-3ba389ce1e7e","timestamp":"2017-12-07T06:55:01.047Z"}]
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T06:55:01.070Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes?id=8b94bc70-db1b-11e7-912d-3ba389ce1e7e\"","timestamp":"2017-12-07T06:55:01.070Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=8b94bc70-db1b-11e7-912d-3ba389ce1e7e\",\"query\":{\"id\":\"8b94bc70-db1b-11e7-912d-3ba389ce1e7e\"},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes?id=8b94bc70-db1b-11e7-912d-3ba389ce1e7e\",\"href\":\"/api/trials-bikes?id=8b94bc70-db1b-11e7-912d-3ba389ce1e7e\"}","timestamp":"2017-12-07T06:55:01.070Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T06:55:01.070Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[5]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[39]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[40]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;\n    let requestedBike = /* istanbul ignore next */(cov_ratewsw8z.s[41]++, getBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[42]++;\n    if (requestedBike)\n      {/* istanbul ignore next */cov_ratewsw8z.b[6][0]++;cov_ratewsw8z.s[43]++;sendJSON(res, 200, requestedBike);} else\n\n      {/* istanbul ignore next */cov_ratewsw8z.b[6][1]++;cov_ratewsw8z.s[44]++;sendBadStatus(res, 404, `No bike with id ${id}.`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[5][1]++;cov_ratewsw8z.s[45]++;sendJSON(res, 200, trialsBikes);}\n}","timestamp":"2017-12-07T06:55:01.070Z"}
{"level":"info","message":"Responding with a 200 code and the following data:","timestamp":"2017-12-07T06:55:01.070Z"}
{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"8b94bc70-db1b-11e7-912d-3ba389ce1e7e","timestamp":"2017-12-07T06:55:01.070Z","level":"info","message":""}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T06:55:01.072Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes?id=hamburger\"","timestamp":"2017-12-07T06:55:01.072Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=hamburger\",\"query\":{\"id\":\"hamburger\"},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes?id=hamburger\",\"href\":\"/api/trials-bikes?id=hamburger\"}","timestamp":"2017-12-07T06:55:01.072Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T06:55:01.072Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[5]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[39]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[40]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;\n    let requestedBike = /* istanbul ignore next */(cov_ratewsw8z.s[41]++, getBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[42]++;\n    if (requestedBike)\n      {/* istanbul ignore next */cov_ratewsw8z.b[6][0]++;cov_ratewsw8z.s[43]++;sendJSON(res, 200, requestedBike);} else\n\n      {/* istanbul ignore next */cov_ratewsw8z.b[6][1]++;cov_ratewsw8z.s[44]++;sendBadStatus(res, 404, `No bike with id ${id}.`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[5][1]++;cov_ratewsw8z.s[45]++;sendJSON(res, 200, trialsBikes);}\n}","timestamp":"2017-12-07T06:55:01.072Z"}
{"level":"info","message":"Responding with a 404 code due to No bike with id hamburger..","timestamp":"2017-12-07T06:55:01.072Z"}
{"level":"info","message":"Adding a POST url and callback.","timestamp":"2017-12-07T06:56:49.981Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-07T06:56:49.982Z"}
{"level":"info","message":"(req, res) => {\n  if(!req.body.make) {\n    sendBadStatus(res, 400, 'bad request, make not found!');\n    return;\n  }\n  \n  if(!req.body.model) {\n    sendBadStatus(res, 400, 'bad request, model not found!');\n    return;\n  }\n\n  if(!req.body.year) {\n    sendBadStatus(res, 400, 'bad request, year not found!');\n    return;\n  }\n\n  if(!req.body.displacement) {\n    sendBadStatus(res, 400, 'bad request, displacement not found!');\n    return;\n  }\n\n  if(!req.body.color) {\n    sendBadStatus(res, 400, 'bad request, color not found!');\n    return;\n  }\n\n  let trialsBike = new TrialsBike(\n    req.body.make,\n    req.body.model,\n    req.body.year,\n    req.body.displacement,\n    req.body.color\n  );\n  \n  trialsBikes.push(trialsBike);\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T06:56:49.982Z"}
{"level":"info","message":"Adding a GET url and callback.","timestamp":"2017-12-07T06:56:49.982Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-07T06:56:49.982Z"}
{"level":"info","message":"(req, res) => {\n  let id = req.url.query.id;\n  if(id) {\n    let requestedBike = getBikeById(id);\n    if(requestedBike)\n      sendJSON(res, 200, requestedBike);\n    else\n      sendBadStatus(res, 404, `No bike with id ${id}.`);\n  } else\n    sendJSON(res, 200, trialsBikes);\n}","timestamp":"2017-12-07T06:56:49.982Z"}
{"level":"info","message":"Server is up on port 3000.","timestamp":"2017-12-07T06:56:49.988Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T06:57:16.211Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T06:57:16.211Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T06:57:16.211Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T06:57:16.212Z"}
{"level":"info","message":"(req, res) => {\n  if(!req.body.make) {\n    sendBadStatus(res, 400, 'bad request, make not found!');\n    return;\n  }\n  \n  if(!req.body.model) {\n    sendBadStatus(res, 400, 'bad request, model not found!');\n    return;\n  }\n\n  if(!req.body.year) {\n    sendBadStatus(res, 400, 'bad request, year not found!');\n    return;\n  }\n\n  if(!req.body.displacement) {\n    sendBadStatus(res, 400, 'bad request, displacement not found!');\n    return;\n  }\n\n  if(!req.body.color) {\n    sendBadStatus(res, 400, 'bad request, color not found!');\n    return;\n  }\n\n  let trialsBike = new TrialsBike(\n    req.body.make,\n    req.body.model,\n    req.body.year,\n    req.body.displacement,\n    req.body.color\n  );\n  \n  trialsBikes.push(trialsBike);\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T06:57:16.212Z"}
{"level":"info","message":"Responding with a 200 code and the following data:","timestamp":"2017-12-07T06:57:16.213Z"}
{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"dc256e50-db1b-11e7-9f4a-2bb8540a5ffc","timestamp":"2017-12-07T06:57:16.213Z","level":"info","message":""}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T06:57:42.102Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T06:57:42.102Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T06:57:42.102Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T06:57:42.102Z"}
{"level":"info","message":"(req, res) => {\n  let id = req.url.query.id;\n  if(id) {\n    let requestedBike = getBikeById(id);\n    if(requestedBike)\n      sendJSON(res, 200, requestedBike);\n    else\n      sendBadStatus(res, 404, `No bike with id ${id}.`);\n  } else\n    sendJSON(res, 200, trialsBikes);\n}","timestamp":"2017-12-07T06:57:42.102Z"}
{"level":"info","message":"Responding with a 200 code and the following data:","timestamp":"2017-12-07T06:57:42.102Z"}
[{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"dc256e50-db1b-11e7-9f4a-2bb8540a5ffc","timestamp":"2017-12-07T06:57:16.213Z"}]
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T06:58:08.130Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes?id=dc256e50-db1b-11e7-9f4a-2bb8540a5ffc\"","timestamp":"2017-12-07T06:58:08.130Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=dc256e50-db1b-11e7-9f4a-2bb8540a5ffc\",\"query\":{\"id\":\"dc256e50-db1b-11e7-9f4a-2bb8540a5ffc\"},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes?id=dc256e50-db1b-11e7-9f4a-2bb8540a5ffc\",\"href\":\"/api/trials-bikes?id=dc256e50-db1b-11e7-9f4a-2bb8540a5ffc\"}","timestamp":"2017-12-07T06:58:08.130Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T06:58:08.131Z"}
{"level":"info","message":"(req, res) => {\n  let id = req.url.query.id;\n  if(id) {\n    let requestedBike = getBikeById(id);\n    if(requestedBike)\n      sendJSON(res, 200, requestedBike);\n    else\n      sendBadStatus(res, 404, `No bike with id ${id}.`);\n  } else\n    sendJSON(res, 200, trialsBikes);\n}","timestamp":"2017-12-07T06:58:08.131Z"}
{"level":"info","message":"Responding with a 200 code and the following data:","timestamp":"2017-12-07T06:58:08.131Z"}
{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"dc256e50-db1b-11e7-9f4a-2bb8540a5ffc","timestamp":"2017-12-07T06:58:08.131Z","level":"info","message":""}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T06:58:15.145Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes?id=dc256e50-db1b-11e7-9f4a-2bb8540a5f\"","timestamp":"2017-12-07T06:58:15.145Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=dc256e50-db1b-11e7-9f4a-2bb8540a5f\",\"query\":{\"id\":\"dc256e50-db1b-11e7-9f4a-2bb8540a5f\"},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes?id=dc256e50-db1b-11e7-9f4a-2bb8540a5f\",\"href\":\"/api/trials-bikes?id=dc256e50-db1b-11e7-9f4a-2bb8540a5f\"}","timestamp":"2017-12-07T06:58:15.145Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T06:58:15.145Z"}
{"level":"info","message":"(req, res) => {\n  let id = req.url.query.id;\n  if(id) {\n    let requestedBike = getBikeById(id);\n    if(requestedBike)\n      sendJSON(res, 200, requestedBike);\n    else\n      sendBadStatus(res, 404, `No bike with id ${id}.`);\n  } else\n    sendJSON(res, 200, trialsBikes);\n}","timestamp":"2017-12-07T06:58:15.145Z"}
{"level":"info","message":"Responding with a 404 code due to No bike with id dc256e50-db1b-11e7-9f4a-2bb8540a5f..","timestamp":"2017-12-07T06:58:15.145Z"}
{"level":"info","message":"Adding a POST url and callback.","timestamp":"2017-12-07T06:59:21.435Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-07T06:59:21.436Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[4]++;cov_ratewsw8z.s[20]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[32]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[33]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[35]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[36]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[37]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T06:59:21.436Z"}
{"level":"info","message":"Adding a GET url and callback.","timestamp":"2017-12-07T06:59:21.436Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-07T06:59:21.436Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[5]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[39]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[40]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;\n    let requestedBike = /* istanbul ignore next */(cov_ratewsw8z.s[41]++, getBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[42]++;\n    if (requestedBike)\n      {/* istanbul ignore next */cov_ratewsw8z.b[6][0]++;cov_ratewsw8z.s[43]++;sendJSON(res, 200, requestedBike);} else\n\n      {/* istanbul ignore next */cov_ratewsw8z.b[6][1]++;cov_ratewsw8z.s[44]++;sendBadStatus(res, 404, `No bike with id ${id}.`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[5][1]++;cov_ratewsw8z.s[45]++;sendJSON(res, 200, trialsBikes);}\n}","timestamp":"2017-12-07T06:59:21.436Z"}
{"level":"info","message":"Server is up on port 3000.","timestamp":"2017-12-07T06:59:21.479Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T06:59:21.518Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T06:59:21.518Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T06:59:21.518Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T06:59:21.519Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[4]++;cov_ratewsw8z.s[20]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[32]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[33]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[35]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[36]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[37]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T06:59:21.519Z"}
{"level":"info","message":"Responding with a 200 code and the following data:","timestamp":"2017-12-07T06:59:21.520Z"}
{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"26d59bf0-db1c-11e7-b5b7-cbff745e2ad4","timestamp":"2017-12-07T06:59:21.520Z","level":"info","message":""}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T06:59:21.527Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T06:59:21.527Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T06:59:21.527Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T06:59:21.528Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.req.on (/Users/robertreed/Documents/programming/cf/401/lab/08-09-vanilla-rest-server/lab-rob/lib/req-parser.js:25:27)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-07T06:59:21.528Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T06:59:21.530Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T06:59:21.530Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T06:59:21.530Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T06:59:21.530Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[4]++;cov_ratewsw8z.s[20]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[32]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[33]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[35]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[36]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[37]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T06:59:21.530Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, make not found!.","timestamp":"2017-12-07T06:59:21.530Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T06:59:21.532Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T06:59:21.532Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T06:59:21.532Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T06:59:21.532Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[4]++;cov_ratewsw8z.s[20]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[32]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[33]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[35]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[36]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[37]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T06:59:21.532Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, model not found!.","timestamp":"2017-12-07T06:59:21.532Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T06:59:21.534Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T06:59:21.534Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T06:59:21.534Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T06:59:21.534Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[4]++;cov_ratewsw8z.s[20]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[32]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[33]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[35]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[36]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[37]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T06:59:21.534Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, year not found!.","timestamp":"2017-12-07T06:59:21.534Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T06:59:21.535Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T06:59:21.535Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T06:59:21.536Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T06:59:21.536Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[4]++;cov_ratewsw8z.s[20]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[32]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[33]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[35]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[36]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[37]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T06:59:21.536Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, displacement not found!.","timestamp":"2017-12-07T06:59:21.536Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T06:59:21.537Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T06:59:21.537Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T06:59:21.537Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T06:59:21.537Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[4]++;cov_ratewsw8z.s[20]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[32]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[33]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[35]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[36]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[37]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T06:59:21.537Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, color not found!.","timestamp":"2017-12-07T06:59:21.537Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T06:59:21.539Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T06:59:21.539Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T06:59:21.539Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T06:59:21.539Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[5]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[39]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[40]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;\n    let requestedBike = /* istanbul ignore next */(cov_ratewsw8z.s[41]++, getBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[42]++;\n    if (requestedBike)\n      {/* istanbul ignore next */cov_ratewsw8z.b[6][0]++;cov_ratewsw8z.s[43]++;sendJSON(res, 200, requestedBike);} else\n\n      {/* istanbul ignore next */cov_ratewsw8z.b[6][1]++;cov_ratewsw8z.s[44]++;sendBadStatus(res, 404, `No bike with id ${id}.`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[5][1]++;cov_ratewsw8z.s[45]++;sendJSON(res, 200, trialsBikes);}\n}","timestamp":"2017-12-07T06:59:21.539Z"}
{"level":"info","message":"Responding with a 200 code and the following data:","timestamp":"2017-12-07T06:59:21.539Z"}
[{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"26d59bf0-db1c-11e7-b5b7-cbff745e2ad4","timestamp":"2017-12-07T06:59:21.519Z"}]
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T06:59:21.541Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes?id=26d59bf0-db1c-11e7-b5b7-cbff745e2ad4\"","timestamp":"2017-12-07T06:59:21.541Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=26d59bf0-db1c-11e7-b5b7-cbff745e2ad4\",\"query\":{\"id\":\"26d59bf0-db1c-11e7-b5b7-cbff745e2ad4\"},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes?id=26d59bf0-db1c-11e7-b5b7-cbff745e2ad4\",\"href\":\"/api/trials-bikes?id=26d59bf0-db1c-11e7-b5b7-cbff745e2ad4\"}","timestamp":"2017-12-07T06:59:21.542Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T06:59:21.542Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[5]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[39]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[40]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;\n    let requestedBike = /* istanbul ignore next */(cov_ratewsw8z.s[41]++, getBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[42]++;\n    if (requestedBike)\n      {/* istanbul ignore next */cov_ratewsw8z.b[6][0]++;cov_ratewsw8z.s[43]++;sendJSON(res, 200, requestedBike);} else\n\n      {/* istanbul ignore next */cov_ratewsw8z.b[6][1]++;cov_ratewsw8z.s[44]++;sendBadStatus(res, 404, `No bike with id ${id}.`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[5][1]++;cov_ratewsw8z.s[45]++;sendJSON(res, 200, trialsBikes);}\n}","timestamp":"2017-12-07T06:59:21.542Z"}
{"level":"info","message":"Responding with a 200 code and the following data:","timestamp":"2017-12-07T06:59:21.542Z"}
{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"26d59bf0-db1c-11e7-b5b7-cbff745e2ad4","timestamp":"2017-12-07T06:59:21.542Z","level":"info","message":""}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T06:59:21.543Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes?id=hamburger\"","timestamp":"2017-12-07T06:59:21.543Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=hamburger\",\"query\":{\"id\":\"hamburger\"},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes?id=hamburger\",\"href\":\"/api/trials-bikes?id=hamburger\"}","timestamp":"2017-12-07T06:59:21.544Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T06:59:21.544Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[5]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[39]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[40]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;\n    let requestedBike = /* istanbul ignore next */(cov_ratewsw8z.s[41]++, getBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[42]++;\n    if (requestedBike)\n      {/* istanbul ignore next */cov_ratewsw8z.b[6][0]++;cov_ratewsw8z.s[43]++;sendJSON(res, 200, requestedBike);} else\n\n      {/* istanbul ignore next */cov_ratewsw8z.b[6][1]++;cov_ratewsw8z.s[44]++;sendBadStatus(res, 404, `No bike with id ${id}.`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[5][1]++;cov_ratewsw8z.s[45]++;sendJSON(res, 200, trialsBikes);}\n}","timestamp":"2017-12-07T06:59:21.544Z"}
{"level":"info","message":"Responding with a 404 code due to No bike with id hamburger..","timestamp":"2017-12-07T06:59:21.544Z"}
{"level":"info","message":"Adding a POST url and callback.","timestamp":"2017-12-07T06:59:50.664Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-07T06:59:50.664Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[4]++;cov_ratewsw8z.s[20]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[32]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[33]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[35]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[36]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[37]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T06:59:50.664Z"}
{"level":"info","message":"Adding a GET url and callback.","timestamp":"2017-12-07T06:59:50.664Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-07T06:59:50.664Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[5]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[39]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[40]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;\n    let requestedBike = /* istanbul ignore next */(cov_ratewsw8z.s[41]++, getBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[42]++;\n    if (requestedBike)\n      {/* istanbul ignore next */cov_ratewsw8z.b[6][0]++;cov_ratewsw8z.s[43]++;sendJSON(res, 200, requestedBike);} else\n\n      {/* istanbul ignore next */cov_ratewsw8z.b[6][1]++;cov_ratewsw8z.s[44]++;sendBadStatus(res, 404, `No bike with id ${id}.`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[5][1]++;cov_ratewsw8z.s[45]++;sendJSON(res, 200, trialsBikes);}\n}","timestamp":"2017-12-07T06:59:50.664Z"}
{"level":"info","message":"Server is up on port 3000.","timestamp":"2017-12-07T06:59:50.705Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T06:59:50.745Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T06:59:50.745Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T06:59:50.745Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T06:59:50.746Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[4]++;cov_ratewsw8z.s[20]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[32]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[33]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[35]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[36]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[37]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T06:59:50.746Z"}
{"level":"info","message":"Responding with a 200 code and the following data:","timestamp":"2017-12-07T06:59:50.746Z"}
{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"38414ba0-db1c-11e7-a9c9-eb5ae2c6514a","timestamp":"2017-12-07T06:59:50.746Z","level":"info","message":""}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T06:59:50.754Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T06:59:50.754Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T06:59:50.754Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T06:59:50.755Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.req.on (/Users/robertreed/Documents/programming/cf/401/lab/08-09-vanilla-rest-server/lab-rob/lib/req-parser.js:25:27)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-07T06:59:50.755Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T06:59:50.757Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T06:59:50.757Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T06:59:50.757Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T06:59:50.757Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[4]++;cov_ratewsw8z.s[20]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[32]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[33]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[35]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[36]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[37]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T06:59:50.757Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, make not found!.","timestamp":"2017-12-07T06:59:50.757Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T06:59:50.759Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T06:59:50.759Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T06:59:50.759Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T06:59:50.759Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[4]++;cov_ratewsw8z.s[20]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[32]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[33]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[35]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[36]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[37]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T06:59:50.759Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, model not found!.","timestamp":"2017-12-07T06:59:50.759Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T06:59:50.761Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T06:59:50.761Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T06:59:50.761Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T06:59:50.761Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[4]++;cov_ratewsw8z.s[20]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[32]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[33]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[35]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[36]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[37]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T06:59:50.761Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, year not found!.","timestamp":"2017-12-07T06:59:50.761Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T06:59:50.763Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T06:59:50.763Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T06:59:50.763Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T06:59:50.763Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[4]++;cov_ratewsw8z.s[20]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[32]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[33]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[35]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[36]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[37]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T06:59:50.763Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, displacement not found!.","timestamp":"2017-12-07T06:59:50.763Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T06:59:50.764Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T06:59:50.764Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T06:59:50.764Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T06:59:50.764Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[4]++;cov_ratewsw8z.s[20]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[32]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[33]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[35]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[36]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[37]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T06:59:50.765Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, color not found!.","timestamp":"2017-12-07T06:59:50.765Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T06:59:50.766Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T06:59:50.766Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T06:59:50.766Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T06:59:50.766Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[5]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[39]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[40]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;\n    let requestedBike = /* istanbul ignore next */(cov_ratewsw8z.s[41]++, getBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[42]++;\n    if (requestedBike)\n      {/* istanbul ignore next */cov_ratewsw8z.b[6][0]++;cov_ratewsw8z.s[43]++;sendJSON(res, 200, requestedBike);} else\n\n      {/* istanbul ignore next */cov_ratewsw8z.b[6][1]++;cov_ratewsw8z.s[44]++;sendBadStatus(res, 404, `No bike with id ${id}.`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[5][1]++;cov_ratewsw8z.s[45]++;sendJSON(res, 200, trialsBikes);}\n}","timestamp":"2017-12-07T06:59:50.766Z"}
{"level":"info","message":"Responding with a 200 code and the following data:","timestamp":"2017-12-07T06:59:50.766Z"}
[{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"38414ba0-db1c-11e7-a9c9-eb5ae2c6514a","timestamp":"2017-12-07T06:59:50.746Z"}]
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T06:59:50.768Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes?id=38414ba0-db1c-11e7-a9c9-eb5ae2c6514a\"","timestamp":"2017-12-07T06:59:50.768Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=38414ba0-db1c-11e7-a9c9-eb5ae2c6514a\",\"query\":{\"id\":\"38414ba0-db1c-11e7-a9c9-eb5ae2c6514a\"},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes?id=38414ba0-db1c-11e7-a9c9-eb5ae2c6514a\",\"href\":\"/api/trials-bikes?id=38414ba0-db1c-11e7-a9c9-eb5ae2c6514a\"}","timestamp":"2017-12-07T06:59:50.769Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T06:59:50.769Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[5]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[39]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[40]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;\n    let requestedBike = /* istanbul ignore next */(cov_ratewsw8z.s[41]++, getBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[42]++;\n    if (requestedBike)\n      {/* istanbul ignore next */cov_ratewsw8z.b[6][0]++;cov_ratewsw8z.s[43]++;sendJSON(res, 200, requestedBike);} else\n\n      {/* istanbul ignore next */cov_ratewsw8z.b[6][1]++;cov_ratewsw8z.s[44]++;sendBadStatus(res, 404, `No bike with id ${id}.`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[5][1]++;cov_ratewsw8z.s[45]++;sendJSON(res, 200, trialsBikes);}\n}","timestamp":"2017-12-07T06:59:50.769Z"}
{"level":"info","message":"Responding with a 200 code and the following data:","timestamp":"2017-12-07T06:59:50.769Z"}
{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"38414ba0-db1c-11e7-a9c9-eb5ae2c6514a","timestamp":"2017-12-07T06:59:50.769Z","level":"info","message":""}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T06:59:50.771Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes?id=hamburger\"","timestamp":"2017-12-07T06:59:50.771Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=hamburger\",\"query\":{\"id\":\"hamburger\"},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes?id=hamburger\",\"href\":\"/api/trials-bikes?id=hamburger\"}","timestamp":"2017-12-07T06:59:50.771Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T06:59:50.771Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[5]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[39]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[40]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;\n    let requestedBike = /* istanbul ignore next */(cov_ratewsw8z.s[41]++, getBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[42]++;\n    if (requestedBike)\n      {/* istanbul ignore next */cov_ratewsw8z.b[6][0]++;cov_ratewsw8z.s[43]++;sendJSON(res, 200, requestedBike);} else\n\n      {/* istanbul ignore next */cov_ratewsw8z.b[6][1]++;cov_ratewsw8z.s[44]++;sendBadStatus(res, 404, `No bike with id ${id}.`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[5][1]++;cov_ratewsw8z.s[45]++;sendJSON(res, 200, trialsBikes);}\n}","timestamp":"2017-12-07T06:59:50.771Z"}
{"level":"info","message":"Responding with a 404 code due to No bike with id hamburger..","timestamp":"2017-12-07T06:59:50.771Z"}
{"level":"info","message":"Adding a POST url and callback.","timestamp":"2017-12-07T07:00:34.442Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-07T07:00:34.442Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[4]++;cov_ratewsw8z.s[20]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[32]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[33]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[35]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[36]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[37]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T07:00:34.442Z"}
{"level":"info","message":"Adding a GET url and callback.","timestamp":"2017-12-07T07:00:34.442Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-07T07:00:34.442Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[5]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[39]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[40]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;\n    let requestedBike = /* istanbul ignore next */(cov_ratewsw8z.s[41]++, getBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[42]++;\n    if (requestedBike)\n      {/* istanbul ignore next */cov_ratewsw8z.b[6][0]++;cov_ratewsw8z.s[43]++;sendJSON(res, 200, requestedBike);} else\n\n      {/* istanbul ignore next */cov_ratewsw8z.b[6][1]++;cov_ratewsw8z.s[44]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[5][1]++;cov_ratewsw8z.s[45]++;sendJSON(res, 200, trialsBikes);}\n}","timestamp":"2017-12-07T07:00:34.443Z"}
{"level":"info","message":"Server is up on port 3000.","timestamp":"2017-12-07T07:00:34.480Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T07:00:34.521Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T07:00:34.521Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T07:00:34.521Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T07:00:34.522Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[4]++;cov_ratewsw8z.s[20]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[32]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[33]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[35]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[36]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[37]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T07:00:34.522Z"}
{"level":"info","message":"Responding with a 200 code and the following data:","timestamp":"2017-12-07T07:00:34.522Z"}
{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"5258fba0-db1c-11e7-a51a-65510f6519ad","timestamp":"2017-12-07T07:00:34.522Z","level":"info","message":""}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T07:00:34.530Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T07:00:34.530Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T07:00:34.530Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T07:00:34.530Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.req.on (/Users/robertreed/Documents/programming/cf/401/lab/08-09-vanilla-rest-server/lab-rob/lib/req-parser.js:25:27)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-07T07:00:34.530Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T07:00:34.533Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T07:00:34.533Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T07:00:34.533Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T07:00:34.533Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[4]++;cov_ratewsw8z.s[20]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[32]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[33]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[35]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[36]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[37]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T07:00:34.533Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, make not found!.","timestamp":"2017-12-07T07:00:34.533Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T07:00:34.535Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T07:00:34.535Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T07:00:34.535Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T07:00:34.535Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[4]++;cov_ratewsw8z.s[20]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[32]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[33]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[35]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[36]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[37]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T07:00:34.535Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, model not found!.","timestamp":"2017-12-07T07:00:34.535Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T07:00:34.537Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T07:00:34.537Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T07:00:34.537Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T07:00:34.537Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[4]++;cov_ratewsw8z.s[20]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[32]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[33]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[35]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[36]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[37]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T07:00:34.537Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, year not found!.","timestamp":"2017-12-07T07:00:34.537Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T07:00:34.538Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T07:00:34.538Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T07:00:34.539Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T07:00:34.539Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[4]++;cov_ratewsw8z.s[20]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[32]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[33]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[35]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[36]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[37]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T07:00:34.539Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, displacement not found!.","timestamp":"2017-12-07T07:00:34.539Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T07:00:34.540Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T07:00:34.540Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T07:00:34.540Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T07:00:34.540Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[4]++;cov_ratewsw8z.s[20]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[32]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[33]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[35]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[36]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[37]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T07:00:34.541Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, color not found!.","timestamp":"2017-12-07T07:00:34.541Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T07:00:34.542Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T07:00:34.542Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T07:00:34.542Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T07:00:34.542Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[5]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[39]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[40]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;\n    let requestedBike = /* istanbul ignore next */(cov_ratewsw8z.s[41]++, getBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[42]++;\n    if (requestedBike)\n      {/* istanbul ignore next */cov_ratewsw8z.b[6][0]++;cov_ratewsw8z.s[43]++;sendJSON(res, 200, requestedBike);} else\n\n      {/* istanbul ignore next */cov_ratewsw8z.b[6][1]++;cov_ratewsw8z.s[44]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[5][1]++;cov_ratewsw8z.s[45]++;sendJSON(res, 200, trialsBikes);}\n}","timestamp":"2017-12-07T07:00:34.542Z"}
{"level":"info","message":"Responding with a 200 code and the following data:","timestamp":"2017-12-07T07:00:34.542Z"}
[{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"5258fba0-db1c-11e7-a51a-65510f6519ad","timestamp":"2017-12-07T07:00:34.522Z"}]
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T07:00:34.544Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes?id=5258fba0-db1c-11e7-a51a-65510f6519ad\"","timestamp":"2017-12-07T07:00:34.544Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=5258fba0-db1c-11e7-a51a-65510f6519ad\",\"query\":{\"id\":\"5258fba0-db1c-11e7-a51a-65510f6519ad\"},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes?id=5258fba0-db1c-11e7-a51a-65510f6519ad\",\"href\":\"/api/trials-bikes?id=5258fba0-db1c-11e7-a51a-65510f6519ad\"}","timestamp":"2017-12-07T07:00:34.545Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T07:00:34.545Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[5]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[39]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[40]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;\n    let requestedBike = /* istanbul ignore next */(cov_ratewsw8z.s[41]++, getBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[42]++;\n    if (requestedBike)\n      {/* istanbul ignore next */cov_ratewsw8z.b[6][0]++;cov_ratewsw8z.s[43]++;sendJSON(res, 200, requestedBike);} else\n\n      {/* istanbul ignore next */cov_ratewsw8z.b[6][1]++;cov_ratewsw8z.s[44]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[5][1]++;cov_ratewsw8z.s[45]++;sendJSON(res, 200, trialsBikes);}\n}","timestamp":"2017-12-07T07:00:34.545Z"}
{"level":"info","message":"Responding with a 200 code and the following data:","timestamp":"2017-12-07T07:00:34.545Z"}
{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"5258fba0-db1c-11e7-a51a-65510f6519ad","timestamp":"2017-12-07T07:00:34.545Z","level":"info","message":""}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T07:00:34.547Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes?id=hamburger\"","timestamp":"2017-12-07T07:00:34.547Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=hamburger\",\"query\":{\"id\":\"hamburger\"},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes?id=hamburger\",\"href\":\"/api/trials-bikes?id=hamburger\"}","timestamp":"2017-12-07T07:00:34.547Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T07:00:34.547Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[5]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[39]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[40]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;\n    let requestedBike = /* istanbul ignore next */(cov_ratewsw8z.s[41]++, getBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[42]++;\n    if (requestedBike)\n      {/* istanbul ignore next */cov_ratewsw8z.b[6][0]++;cov_ratewsw8z.s[43]++;sendJSON(res, 200, requestedBike);} else\n\n      {/* istanbul ignore next */cov_ratewsw8z.b[6][1]++;cov_ratewsw8z.s[44]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[5][1]++;cov_ratewsw8z.s[45]++;sendJSON(res, 200, trialsBikes);}\n}","timestamp":"2017-12-07T07:00:34.547Z"}
{"level":"info","message":"Responding with a 404 code due to No bike with id \"hamburger\"..","timestamp":"2017-12-07T07:00:34.547Z"}
{"level":"info","message":"Adding a POST url and callback.","timestamp":"2017-12-07T07:00:57.348Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-07T07:00:57.348Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[4]++;cov_ratewsw8z.s[20]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[32]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[33]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[35]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[36]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[37]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T07:00:57.348Z"}
{"level":"info","message":"Adding a GET url and callback.","timestamp":"2017-12-07T07:00:57.348Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-07T07:00:57.348Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[5]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[39]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[40]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;\n    let requestedBike = /* istanbul ignore next */(cov_ratewsw8z.s[41]++, getBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[42]++;\n    if (requestedBike)\n      {/* istanbul ignore next */cov_ratewsw8z.b[6][0]++;cov_ratewsw8z.s[43]++;sendJSON(res, 200, requestedBike);} else\n\n      {/* istanbul ignore next */cov_ratewsw8z.b[6][1]++;cov_ratewsw8z.s[44]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[5][1]++;cov_ratewsw8z.s[45]++;sendJSON(res, 200, trialsBikes);}\n}","timestamp":"2017-12-07T07:00:57.348Z"}
{"level":"info","message":"Server is up on port 3000.","timestamp":"2017-12-07T07:00:57.386Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T07:00:57.425Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T07:00:57.425Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T07:00:57.425Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T07:00:57.426Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[4]++;cov_ratewsw8z.s[20]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[32]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[33]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[35]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[36]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[37]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T07:00:57.426Z"}
{"level":"info","message":"Responding with a 200 code and the following data:","timestamp":"2017-12-07T07:00:57.427Z"}
{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"5fffdb20-db1c-11e7-8f06-a9c9dac52260","timestamp":"2017-12-07T07:00:57.427Z","level":"info","message":""}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T07:00:57.434Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T07:00:57.434Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T07:00:57.434Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T07:00:57.434Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.req.on (/Users/robertreed/Documents/programming/cf/401/lab/08-09-vanilla-rest-server/lab-rob/lib/req-parser.js:25:27)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-07T07:00:57.435Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T07:00:57.437Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T07:00:57.437Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T07:00:57.437Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T07:00:57.437Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[4]++;cov_ratewsw8z.s[20]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[32]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[33]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[35]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[36]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[37]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T07:00:57.437Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, make not found!.","timestamp":"2017-12-07T07:00:57.437Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T07:00:57.439Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T07:00:57.439Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T07:00:57.439Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T07:00:57.439Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[4]++;cov_ratewsw8z.s[20]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[32]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[33]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[35]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[36]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[37]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T07:00:57.439Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, model not found!.","timestamp":"2017-12-07T07:00:57.439Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T07:00:57.440Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T07:00:57.440Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T07:00:57.441Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T07:00:57.441Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[4]++;cov_ratewsw8z.s[20]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[32]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[33]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[35]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[36]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[37]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T07:00:57.441Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, year not found!.","timestamp":"2017-12-07T07:00:57.441Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T07:00:57.442Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T07:00:57.442Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T07:00:57.442Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T07:00:57.443Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[4]++;cov_ratewsw8z.s[20]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[32]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[33]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[35]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[36]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[37]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T07:00:57.443Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, displacement not found!.","timestamp":"2017-12-07T07:00:57.443Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T07:00:57.444Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T07:00:57.444Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T07:00:57.444Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T07:00:57.444Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[4]++;cov_ratewsw8z.s[20]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[32]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[33]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[35]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[36]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[37]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T07:00:57.444Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, color not found!.","timestamp":"2017-12-07T07:00:57.444Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T07:00:57.446Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T07:00:57.446Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T07:00:57.446Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T07:00:57.446Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[5]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[39]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[40]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;\n    let requestedBike = /* istanbul ignore next */(cov_ratewsw8z.s[41]++, getBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[42]++;\n    if (requestedBike)\n      {/* istanbul ignore next */cov_ratewsw8z.b[6][0]++;cov_ratewsw8z.s[43]++;sendJSON(res, 200, requestedBike);} else\n\n      {/* istanbul ignore next */cov_ratewsw8z.b[6][1]++;cov_ratewsw8z.s[44]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[5][1]++;cov_ratewsw8z.s[45]++;sendJSON(res, 200, trialsBikes);}\n}","timestamp":"2017-12-07T07:00:57.446Z"}
{"level":"info","message":"Responding with a 200 code and the following data:","timestamp":"2017-12-07T07:00:57.446Z"}
[{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"5fffdb20-db1c-11e7-8f06-a9c9dac52260","timestamp":"2017-12-07T07:00:57.427Z"}]
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T07:00:57.448Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes?id=5fffdb20-db1c-11e7-8f06-a9c9dac52260\"","timestamp":"2017-12-07T07:00:57.448Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=5fffdb20-db1c-11e7-8f06-a9c9dac52260\",\"query\":{\"id\":\"5fffdb20-db1c-11e7-8f06-a9c9dac52260\"},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes?id=5fffdb20-db1c-11e7-8f06-a9c9dac52260\",\"href\":\"/api/trials-bikes?id=5fffdb20-db1c-11e7-8f06-a9c9dac52260\"}","timestamp":"2017-12-07T07:00:57.448Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T07:00:57.449Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[5]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[39]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[40]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;\n    let requestedBike = /* istanbul ignore next */(cov_ratewsw8z.s[41]++, getBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[42]++;\n    if (requestedBike)\n      {/* istanbul ignore next */cov_ratewsw8z.b[6][0]++;cov_ratewsw8z.s[43]++;sendJSON(res, 200, requestedBike);} else\n\n      {/* istanbul ignore next */cov_ratewsw8z.b[6][1]++;cov_ratewsw8z.s[44]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[5][1]++;cov_ratewsw8z.s[45]++;sendJSON(res, 200, trialsBikes);}\n}","timestamp":"2017-12-07T07:00:57.449Z"}
{"level":"info","message":"Responding with a 200 code and the following data:","timestamp":"2017-12-07T07:00:57.449Z"}
{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"5fffdb20-db1c-11e7-8f06-a9c9dac52260","timestamp":"2017-12-07T07:00:57.449Z","level":"info","message":""}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T07:00:57.450Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes?id=hamburger\"","timestamp":"2017-12-07T07:00:57.450Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=hamburger\",\"query\":{\"id\":\"hamburger\"},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes?id=hamburger\",\"href\":\"/api/trials-bikes?id=hamburger\"}","timestamp":"2017-12-07T07:00:57.450Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T07:00:57.450Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[5]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[39]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[40]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;\n    let requestedBike = /* istanbul ignore next */(cov_ratewsw8z.s[41]++, getBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[42]++;\n    if (requestedBike)\n      {/* istanbul ignore next */cov_ratewsw8z.b[6][0]++;cov_ratewsw8z.s[43]++;sendJSON(res, 200, requestedBike);} else\n\n      {/* istanbul ignore next */cov_ratewsw8z.b[6][1]++;cov_ratewsw8z.s[44]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[5][1]++;cov_ratewsw8z.s[45]++;sendJSON(res, 200, trialsBikes);}\n}","timestamp":"2017-12-07T07:00:57.450Z"}
{"level":"info","message":"Responding with a 404 code due to No bike with id \"hamburger\"..","timestamp":"2017-12-07T07:00:57.450Z"}
{"level":"info","message":"Adding a POST url and callback.","timestamp":"2017-12-07T07:01:17.785Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-07T07:01:17.785Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[4]++;cov_ratewsw8z.s[20]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[32]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[33]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[35]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[36]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[37]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T07:01:17.785Z"}
{"level":"info","message":"Adding a GET url and callback.","timestamp":"2017-12-07T07:01:17.785Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-07T07:01:17.785Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[5]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[39]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[40]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;\n    let requestedBike = /* istanbul ignore next */(cov_ratewsw8z.s[41]++, getBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[42]++;\n    if (requestedBike)\n      {/* istanbul ignore next */cov_ratewsw8z.b[6][0]++;cov_ratewsw8z.s[43]++;sendJSON(res, 200, requestedBike);} else\n\n      {/* istanbul ignore next */cov_ratewsw8z.b[6][1]++;cov_ratewsw8z.s[44]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[5][1]++;cov_ratewsw8z.s[45]++;sendJSON(res, 200, trialsBikes);}\n}","timestamp":"2017-12-07T07:01:17.785Z"}
{"level":"info","message":"Server is up on port 3000.","timestamp":"2017-12-07T07:01:17.825Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T07:01:17.865Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T07:01:17.865Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T07:01:17.865Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T07:01:17.866Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[4]++;cov_ratewsw8z.s[20]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[32]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[33]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[35]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[36]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[37]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T07:01:17.866Z"}
{"level":"info","message":"Responding with a 200 code and the following data:","timestamp":"2017-12-07T07:01:17.866Z"}
{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"6c2ec0a0-db1c-11e7-aa45-49dc533170f4","timestamp":"2017-12-07T07:01:17.866Z","level":"info","message":""}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T07:01:17.874Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T07:01:17.874Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T07:01:17.874Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T07:01:17.874Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.req.on (/Users/robertreed/Documents/programming/cf/401/lab/08-09-vanilla-rest-server/lab-rob/lib/req-parser.js:25:27)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-07T07:01:17.874Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T07:01:17.876Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T07:01:17.876Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T07:01:17.876Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T07:01:17.877Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[4]++;cov_ratewsw8z.s[20]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[32]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[33]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[35]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[36]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[37]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T07:01:17.877Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, make not found!.","timestamp":"2017-12-07T07:01:17.877Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T07:01:17.878Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T07:01:17.878Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T07:01:17.878Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T07:01:17.879Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[4]++;cov_ratewsw8z.s[20]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[32]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[33]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[35]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[36]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[37]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T07:01:17.879Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, model not found!.","timestamp":"2017-12-07T07:01:17.879Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T07:01:17.880Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T07:01:17.880Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T07:01:17.880Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T07:01:17.880Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[4]++;cov_ratewsw8z.s[20]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[32]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[33]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[35]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[36]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[37]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T07:01:17.880Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, year not found!.","timestamp":"2017-12-07T07:01:17.880Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T07:01:17.882Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T07:01:17.882Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T07:01:17.882Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T07:01:17.882Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[4]++;cov_ratewsw8z.s[20]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[32]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[33]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[35]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[36]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[37]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T07:01:17.882Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, displacement not found!.","timestamp":"2017-12-07T07:01:17.882Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T07:01:17.884Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T07:01:17.884Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T07:01:17.884Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T07:01:17.884Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[4]++;cov_ratewsw8z.s[20]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[32]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[33]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[35]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[36]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[37]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T07:01:17.884Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, color not found!.","timestamp":"2017-12-07T07:01:17.884Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T07:01:17.885Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T07:01:17.885Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T07:01:17.885Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T07:01:17.885Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[5]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[39]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[40]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;\n    let requestedBike = /* istanbul ignore next */(cov_ratewsw8z.s[41]++, getBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[42]++;\n    if (requestedBike)\n      {/* istanbul ignore next */cov_ratewsw8z.b[6][0]++;cov_ratewsw8z.s[43]++;sendJSON(res, 200, requestedBike);} else\n\n      {/* istanbul ignore next */cov_ratewsw8z.b[6][1]++;cov_ratewsw8z.s[44]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[5][1]++;cov_ratewsw8z.s[45]++;sendJSON(res, 200, trialsBikes);}\n}","timestamp":"2017-12-07T07:01:17.886Z"}
{"level":"info","message":"Responding with a 200 code and the following data:","timestamp":"2017-12-07T07:01:17.886Z"}
[{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"6c2ec0a0-db1c-11e7-aa45-49dc533170f4","timestamp":"2017-12-07T07:01:17.866Z"}]
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T07:01:17.888Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes?id=6c2ec0a0-db1c-11e7-aa45-49dc533170f4\"","timestamp":"2017-12-07T07:01:17.888Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=6c2ec0a0-db1c-11e7-aa45-49dc533170f4\",\"query\":{\"id\":\"6c2ec0a0-db1c-11e7-aa45-49dc533170f4\"},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes?id=6c2ec0a0-db1c-11e7-aa45-49dc533170f4\",\"href\":\"/api/trials-bikes?id=6c2ec0a0-db1c-11e7-aa45-49dc533170f4\"}","timestamp":"2017-12-07T07:01:17.888Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T07:01:17.888Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[5]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[39]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[40]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;\n    let requestedBike = /* istanbul ignore next */(cov_ratewsw8z.s[41]++, getBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[42]++;\n    if (requestedBike)\n      {/* istanbul ignore next */cov_ratewsw8z.b[6][0]++;cov_ratewsw8z.s[43]++;sendJSON(res, 200, requestedBike);} else\n\n      {/* istanbul ignore next */cov_ratewsw8z.b[6][1]++;cov_ratewsw8z.s[44]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[5][1]++;cov_ratewsw8z.s[45]++;sendJSON(res, 200, trialsBikes);}\n}","timestamp":"2017-12-07T07:01:17.888Z"}
{"level":"info","message":"Responding with a 200 code and the following data:","timestamp":"2017-12-07T07:01:17.888Z"}
{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"6c2ec0a0-db1c-11e7-aa45-49dc533170f4","timestamp":"2017-12-07T07:01:17.888Z","level":"info","message":""}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T07:01:17.890Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes?id=hamburger\"","timestamp":"2017-12-07T07:01:17.890Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=hamburger\",\"query\":{\"id\":\"hamburger\"},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes?id=hamburger\",\"href\":\"/api/trials-bikes?id=hamburger\"}","timestamp":"2017-12-07T07:01:17.890Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T07:01:17.890Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[5]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[39]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[40]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;\n    let requestedBike = /* istanbul ignore next */(cov_ratewsw8z.s[41]++, getBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[42]++;\n    if (requestedBike)\n      {/* istanbul ignore next */cov_ratewsw8z.b[6][0]++;cov_ratewsw8z.s[43]++;sendJSON(res, 200, requestedBike);} else\n\n      {/* istanbul ignore next */cov_ratewsw8z.b[6][1]++;cov_ratewsw8z.s[44]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[5][1]++;cov_ratewsw8z.s[45]++;sendJSON(res, 200, trialsBikes);}\n}","timestamp":"2017-12-07T07:01:17.890Z"}
{"level":"info","message":"Responding with a 404 code due to No bike with id \"hamburger\"..","timestamp":"2017-12-07T07:01:17.890Z"}
{"level":"info","message":"Adding a POST url and callback.","timestamp":"2017-12-07T07:01:32.356Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-07T07:01:32.357Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[4]++;cov_ratewsw8z.s[20]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[32]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[33]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[35]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[36]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[37]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T07:01:32.357Z"}
{"level":"info","message":"Adding a GET url and callback.","timestamp":"2017-12-07T07:01:32.357Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-07T07:01:32.357Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[5]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[39]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[40]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;\n    let requestedBike = /* istanbul ignore next */(cov_ratewsw8z.s[41]++, getBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[42]++;\n    if (requestedBike)\n      {/* istanbul ignore next */cov_ratewsw8z.b[6][0]++;cov_ratewsw8z.s[43]++;sendJSON(res, 200, requestedBike);} else\n\n      {/* istanbul ignore next */cov_ratewsw8z.b[6][1]++;cov_ratewsw8z.s[44]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[5][1]++;cov_ratewsw8z.s[45]++;sendJSON(res, 200, trialsBikes);}\n}","timestamp":"2017-12-07T07:01:32.357Z"}
{"level":"info","message":"Server is up on port 3000.","timestamp":"2017-12-07T07:01:32.396Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T07:01:32.437Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T07:01:32.438Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T07:01:32.438Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T07:01:32.438Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[4]++;cov_ratewsw8z.s[20]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[32]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[33]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[35]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[36]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[37]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T07:01:32.439Z"}
{"level":"info","message":"Responding with a 200 code and the following data:","timestamp":"2017-12-07T07:01:32.439Z"}
{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"74de6a70-db1c-11e7-8f7a-9929d37b019f","timestamp":"2017-12-07T07:01:32.439Z","level":"info","message":""}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T07:01:32.446Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T07:01:32.447Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T07:01:32.447Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T07:01:32.447Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.req.on (/Users/robertreed/Documents/programming/cf/401/lab/08-09-vanilla-rest-server/lab-rob/lib/req-parser.js:25:27)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-07T07:01:32.447Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T07:01:32.449Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T07:01:32.449Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T07:01:32.449Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T07:01:32.449Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[4]++;cov_ratewsw8z.s[20]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[32]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[33]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[35]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[36]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[37]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T07:01:32.449Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, make not found!.","timestamp":"2017-12-07T07:01:32.450Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T07:01:32.451Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T07:01:32.451Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T07:01:32.451Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T07:01:32.451Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[4]++;cov_ratewsw8z.s[20]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[32]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[33]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[35]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[36]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[37]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T07:01:32.451Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, model not found!.","timestamp":"2017-12-07T07:01:32.451Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T07:01:32.453Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T07:01:32.453Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T07:01:32.453Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T07:01:32.453Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[4]++;cov_ratewsw8z.s[20]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[32]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[33]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[35]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[36]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[37]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T07:01:32.453Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, year not found!.","timestamp":"2017-12-07T07:01:32.453Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T07:01:32.455Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T07:01:32.455Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T07:01:32.455Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T07:01:32.455Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[4]++;cov_ratewsw8z.s[20]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[32]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[33]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[35]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[36]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[37]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T07:01:32.455Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, displacement not found!.","timestamp":"2017-12-07T07:01:32.455Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T07:01:32.456Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T07:01:32.456Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T07:01:32.457Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T07:01:32.457Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[4]++;cov_ratewsw8z.s[20]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[32]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[33]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[35]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[36]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[37]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T07:01:32.457Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, color not found!.","timestamp":"2017-12-07T07:01:32.457Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T07:01:32.458Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T07:01:32.458Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T07:01:32.458Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T07:01:32.458Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[5]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[39]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[40]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;\n    let requestedBike = /* istanbul ignore next */(cov_ratewsw8z.s[41]++, getBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[42]++;\n    if (requestedBike)\n      {/* istanbul ignore next */cov_ratewsw8z.b[6][0]++;cov_ratewsw8z.s[43]++;sendJSON(res, 200, requestedBike);} else\n\n      {/* istanbul ignore next */cov_ratewsw8z.b[6][1]++;cov_ratewsw8z.s[44]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[5][1]++;cov_ratewsw8z.s[45]++;sendJSON(res, 200, trialsBikes);}\n}","timestamp":"2017-12-07T07:01:32.458Z"}
{"level":"info","message":"Responding with a 200 code and the following data:","timestamp":"2017-12-07T07:01:32.458Z"}
[{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"74de6a70-db1c-11e7-8f7a-9929d37b019f","timestamp":"2017-12-07T07:01:32.439Z"}]
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T07:01:32.461Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes?id=74de6a70-db1c-11e7-8f7a-9929d37b019f\"","timestamp":"2017-12-07T07:01:32.461Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=74de6a70-db1c-11e7-8f7a-9929d37b019f\",\"query\":{\"id\":\"74de6a70-db1c-11e7-8f7a-9929d37b019f\"},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes?id=74de6a70-db1c-11e7-8f7a-9929d37b019f\",\"href\":\"/api/trials-bikes?id=74de6a70-db1c-11e7-8f7a-9929d37b019f\"}","timestamp":"2017-12-07T07:01:32.461Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T07:01:32.461Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[5]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[39]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[40]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;\n    let requestedBike = /* istanbul ignore next */(cov_ratewsw8z.s[41]++, getBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[42]++;\n    if (requestedBike)\n      {/* istanbul ignore next */cov_ratewsw8z.b[6][0]++;cov_ratewsw8z.s[43]++;sendJSON(res, 200, requestedBike);} else\n\n      {/* istanbul ignore next */cov_ratewsw8z.b[6][1]++;cov_ratewsw8z.s[44]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[5][1]++;cov_ratewsw8z.s[45]++;sendJSON(res, 200, trialsBikes);}\n}","timestamp":"2017-12-07T07:01:32.461Z"}
{"level":"info","message":"Responding with a 200 code and the following data:","timestamp":"2017-12-07T07:01:32.461Z"}
{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"74de6a70-db1c-11e7-8f7a-9929d37b019f","timestamp":"2017-12-07T07:01:32.461Z","level":"info","message":""}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T07:01:32.463Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes?id=hamburger\"","timestamp":"2017-12-07T07:01:32.463Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=hamburger\",\"query\":{\"id\":\"hamburger\"},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes?id=hamburger\",\"href\":\"/api/trials-bikes?id=hamburger\"}","timestamp":"2017-12-07T07:01:32.463Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T07:01:32.463Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[5]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[39]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[40]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;\n    let requestedBike = /* istanbul ignore next */(cov_ratewsw8z.s[41]++, getBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[42]++;\n    if (requestedBike)\n      {/* istanbul ignore next */cov_ratewsw8z.b[6][0]++;cov_ratewsw8z.s[43]++;sendJSON(res, 200, requestedBike);} else\n\n      {/* istanbul ignore next */cov_ratewsw8z.b[6][1]++;cov_ratewsw8z.s[44]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[5][1]++;cov_ratewsw8z.s[45]++;sendJSON(res, 200, trialsBikes);}\n}","timestamp":"2017-12-07T07:01:32.463Z"}
{"level":"info","message":"Responding with a 404 code due to No bike with id \"hamburger\"..","timestamp":"2017-12-07T07:01:32.463Z"}
{"level":"info","message":"Adding a POST url and callback.","timestamp":"2017-12-07T07:02:53.426Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-07T07:02:53.427Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[4]++;cov_ratewsw8z.s[20]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[32]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[33]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[35]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[36]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[37]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T07:02:53.427Z"}
{"level":"info","message":"Adding a GET url and callback.","timestamp":"2017-12-07T07:02:53.427Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-07T07:02:53.427Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[5]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[39]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[40]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;\n    let requestedBike = /* istanbul ignore next */(cov_ratewsw8z.s[41]++, getBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[42]++;\n    if (requestedBike)\n      {/* istanbul ignore next */cov_ratewsw8z.b[6][0]++;cov_ratewsw8z.s[43]++;sendJSON(res, 200, requestedBike);} else\n\n      {/* istanbul ignore next */cov_ratewsw8z.b[6][1]++;cov_ratewsw8z.s[44]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[5][1]++;cov_ratewsw8z.s[45]++;sendJSON(res, 200, trialsBikes);}\n}","timestamp":"2017-12-07T07:02:53.427Z"}
{"level":"info","message":"Server is up on port 3000.","timestamp":"2017-12-07T07:02:53.469Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T07:02:53.509Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T07:02:53.509Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T07:02:53.510Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T07:02:53.510Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[4]++;cov_ratewsw8z.s[20]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[32]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[33]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[35]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[36]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[37]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T07:02:53.510Z"}
{"level":"info","message":"Responding with a 200 code and the following data:","timestamp":"2017-12-07T07:02:53.511Z"}
{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"a5310570-db1c-11e7-8b86-81febb541975","timestamp":"2017-12-07T07:02:53.511Z","level":"info","message":""}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T07:02:53.518Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T07:02:53.518Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T07:02:53.518Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T07:02:53.519Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.req.on (/Users/robertreed/Documents/programming/cf/401/lab/08-09-vanilla-rest-server/lab-rob/lib/req-parser.js:25:27)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-07T07:02:53.519Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T07:02:53.521Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T07:02:53.521Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T07:02:53.521Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T07:02:53.521Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[4]++;cov_ratewsw8z.s[20]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[32]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[33]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[35]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[36]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[37]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T07:02:53.521Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, make not found!.","timestamp":"2017-12-07T07:02:53.521Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T07:02:53.523Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T07:02:53.523Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T07:02:53.523Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T07:02:53.523Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[4]++;cov_ratewsw8z.s[20]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[32]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[33]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[35]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[36]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[37]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T07:02:53.523Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, model not found!.","timestamp":"2017-12-07T07:02:53.523Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T07:02:53.525Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T07:02:53.525Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T07:02:53.525Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T07:02:53.525Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[4]++;cov_ratewsw8z.s[20]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[32]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[33]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[35]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[36]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[37]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T07:02:53.525Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, year not found!.","timestamp":"2017-12-07T07:02:53.525Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T07:02:53.527Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T07:02:53.527Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T07:02:53.527Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T07:02:53.527Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[4]++;cov_ratewsw8z.s[20]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[32]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[33]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[35]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[36]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[37]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T07:02:53.527Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, displacement not found!.","timestamp":"2017-12-07T07:02:53.527Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T07:02:53.528Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T07:02:53.528Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T07:02:53.528Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T07:02:53.529Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[4]++;cov_ratewsw8z.s[20]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[32]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[33]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[35]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[36]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[37]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T07:02:53.529Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, color not found!.","timestamp":"2017-12-07T07:02:53.529Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T07:02:53.530Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T07:02:53.530Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T07:02:53.530Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T07:02:53.530Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[5]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[39]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[40]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;\n    let requestedBike = /* istanbul ignore next */(cov_ratewsw8z.s[41]++, getBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[42]++;\n    if (requestedBike)\n      {/* istanbul ignore next */cov_ratewsw8z.b[6][0]++;cov_ratewsw8z.s[43]++;sendJSON(res, 200, requestedBike);} else\n\n      {/* istanbul ignore next */cov_ratewsw8z.b[6][1]++;cov_ratewsw8z.s[44]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[5][1]++;cov_ratewsw8z.s[45]++;sendJSON(res, 200, trialsBikes);}\n}","timestamp":"2017-12-07T07:02:53.530Z"}
{"level":"info","message":"Responding with a 200 code and the following data:","timestamp":"2017-12-07T07:02:53.530Z"}
[{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"a5310570-db1c-11e7-8b86-81febb541975","timestamp":"2017-12-07T07:02:53.511Z"}]
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T07:02:53.532Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes?id=a5310570-db1c-11e7-8b86-81febb541975\"","timestamp":"2017-12-07T07:02:53.533Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=a5310570-db1c-11e7-8b86-81febb541975\",\"query\":{\"id\":\"a5310570-db1c-11e7-8b86-81febb541975\"},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes?id=a5310570-db1c-11e7-8b86-81febb541975\",\"href\":\"/api/trials-bikes?id=a5310570-db1c-11e7-8b86-81febb541975\"}","timestamp":"2017-12-07T07:02:53.533Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T07:02:53.533Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[5]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[39]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[40]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;\n    let requestedBike = /* istanbul ignore next */(cov_ratewsw8z.s[41]++, getBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[42]++;\n    if (requestedBike)\n      {/* istanbul ignore next */cov_ratewsw8z.b[6][0]++;cov_ratewsw8z.s[43]++;sendJSON(res, 200, requestedBike);} else\n\n      {/* istanbul ignore next */cov_ratewsw8z.b[6][1]++;cov_ratewsw8z.s[44]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[5][1]++;cov_ratewsw8z.s[45]++;sendJSON(res, 200, trialsBikes);}\n}","timestamp":"2017-12-07T07:02:53.533Z"}
{"level":"info","message":"Responding with a 200 code and the following data:","timestamp":"2017-12-07T07:02:53.533Z"}
{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"a5310570-db1c-11e7-8b86-81febb541975","timestamp":"2017-12-07T07:02:53.533Z","level":"info","message":""}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T07:02:53.535Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes?id=hamburger\"","timestamp":"2017-12-07T07:02:53.535Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=hamburger\",\"query\":{\"id\":\"hamburger\"},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes?id=hamburger\",\"href\":\"/api/trials-bikes?id=hamburger\"}","timestamp":"2017-12-07T07:02:53.535Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T07:02:53.535Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[5]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[39]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[40]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;\n    let requestedBike = /* istanbul ignore next */(cov_ratewsw8z.s[41]++, getBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[42]++;\n    if (requestedBike)\n      {/* istanbul ignore next */cov_ratewsw8z.b[6][0]++;cov_ratewsw8z.s[43]++;sendJSON(res, 200, requestedBike);} else\n\n      {/* istanbul ignore next */cov_ratewsw8z.b[6][1]++;cov_ratewsw8z.s[44]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[5][1]++;cov_ratewsw8z.s[45]++;sendJSON(res, 200, trialsBikes);}\n}","timestamp":"2017-12-07T07:02:53.535Z"}
{"level":"info","message":"Responding with a 404 code due to No bike with id \"hamburger\"..","timestamp":"2017-12-07T07:02:53.535Z"}
{"level":"info","message":"Adding a POST url and callback.","timestamp":"2017-12-07T07:10:15.621Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-07T07:10:15.621Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[4]++;cov_ratewsw8z.s[20]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[32]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[33]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[35]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[36]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[37]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T07:10:15.621Z"}
{"level":"info","message":"Adding a GET url and callback.","timestamp":"2017-12-07T07:10:15.622Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-07T07:10:15.622Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[5]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[39]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[40]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;\n    let requestedBike = /* istanbul ignore next */(cov_ratewsw8z.s[41]++, getBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[42]++;\n    if (requestedBike)\n      {/* istanbul ignore next */cov_ratewsw8z.b[6][0]++;cov_ratewsw8z.s[43]++;sendJSON(res, 200, requestedBike);} else\n\n      {/* istanbul ignore next */cov_ratewsw8z.b[6][1]++;cov_ratewsw8z.s[44]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[5][1]++;cov_ratewsw8z.s[45]++;sendJSON(res, 200, trialsBikes);}\n}","timestamp":"2017-12-07T07:10:15.622Z"}
{"level":"info","message":"Server is up on port 3000.","timestamp":"2017-12-07T07:10:15.667Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T07:10:15.707Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T07:10:15.707Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T07:10:15.707Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T07:10:15.708Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[4]++;cov_ratewsw8z.s[20]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[32]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[33]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[35]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[36]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[37]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T07:10:15.708Z"}
{"level":"info","message":"Responding with a 200 code and the following data:","timestamp":"2017-12-07T07:10:15.709Z"}
{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"acc2edc0-db1d-11e7-917e-ebfb40ef4602","timestamp":"2017-12-07T07:10:15.709Z","level":"info","message":""}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T07:10:15.716Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T07:10:15.716Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T07:10:15.716Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T07:10:15.717Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.req.on (/Users/robertreed/Documents/programming/cf/401/lab/08-09-vanilla-rest-server/lab-rob/lib/req-parser.js:25:27)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-07T07:10:15.717Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T07:10:15.719Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T07:10:15.719Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T07:10:15.719Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T07:10:15.720Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[4]++;cov_ratewsw8z.s[20]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[32]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[33]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[35]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[36]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[37]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T07:10:15.720Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, make not found!.","timestamp":"2017-12-07T07:10:15.720Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T07:10:15.722Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T07:10:15.722Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T07:10:15.722Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T07:10:15.722Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[4]++;cov_ratewsw8z.s[20]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[32]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[33]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[35]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[36]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[37]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T07:10:15.722Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, model not found!.","timestamp":"2017-12-07T07:10:15.722Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T07:10:15.723Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T07:10:15.723Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T07:10:15.723Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T07:10:15.724Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[4]++;cov_ratewsw8z.s[20]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[32]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[33]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[35]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[36]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[37]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T07:10:15.724Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, year not found!.","timestamp":"2017-12-07T07:10:15.724Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T07:10:15.725Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T07:10:15.725Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T07:10:15.725Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T07:10:15.725Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[4]++;cov_ratewsw8z.s[20]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[32]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[33]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[35]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[36]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[37]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T07:10:15.725Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, displacement not found!.","timestamp":"2017-12-07T07:10:15.725Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T07:10:15.727Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T07:10:15.727Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T07:10:15.727Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T07:10:15.727Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[4]++;cov_ratewsw8z.s[20]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[32]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[33]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[35]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[36]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[37]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T07:10:15.727Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, color not found!.","timestamp":"2017-12-07T07:10:15.727Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T07:10:15.729Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T07:10:15.729Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T07:10:15.729Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T07:10:15.729Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[5]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[39]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[40]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;\n    let requestedBike = /* istanbul ignore next */(cov_ratewsw8z.s[41]++, getBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[42]++;\n    if (requestedBike)\n      {/* istanbul ignore next */cov_ratewsw8z.b[6][0]++;cov_ratewsw8z.s[43]++;sendJSON(res, 200, requestedBike);} else\n\n      {/* istanbul ignore next */cov_ratewsw8z.b[6][1]++;cov_ratewsw8z.s[44]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[5][1]++;cov_ratewsw8z.s[45]++;sendJSON(res, 200, trialsBikes);}\n}","timestamp":"2017-12-07T07:10:15.729Z"}
{"level":"info","message":"Responding with a 200 code and the following data:","timestamp":"2017-12-07T07:10:15.729Z"}
[{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"acc2edc0-db1d-11e7-917e-ebfb40ef4602","timestamp":"2017-12-07T07:10:15.708Z"}]
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T07:10:15.731Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes?id=acc2edc0-db1d-11e7-917e-ebfb40ef4602\"","timestamp":"2017-12-07T07:10:15.731Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=acc2edc0-db1d-11e7-917e-ebfb40ef4602\",\"query\":{\"id\":\"acc2edc0-db1d-11e7-917e-ebfb40ef4602\"},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes?id=acc2edc0-db1d-11e7-917e-ebfb40ef4602\",\"href\":\"/api/trials-bikes?id=acc2edc0-db1d-11e7-917e-ebfb40ef4602\"}","timestamp":"2017-12-07T07:10:15.731Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T07:10:15.731Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[5]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[39]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[40]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;\n    let requestedBike = /* istanbul ignore next */(cov_ratewsw8z.s[41]++, getBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[42]++;\n    if (requestedBike)\n      {/* istanbul ignore next */cov_ratewsw8z.b[6][0]++;cov_ratewsw8z.s[43]++;sendJSON(res, 200, requestedBike);} else\n\n      {/* istanbul ignore next */cov_ratewsw8z.b[6][1]++;cov_ratewsw8z.s[44]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[5][1]++;cov_ratewsw8z.s[45]++;sendJSON(res, 200, trialsBikes);}\n}","timestamp":"2017-12-07T07:10:15.731Z"}
{"level":"info","message":"Responding with a 200 code and the following data:","timestamp":"2017-12-07T07:10:15.732Z"}
{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"acc2edc0-db1d-11e7-917e-ebfb40ef4602","timestamp":"2017-12-07T07:10:15.732Z","level":"info","message":""}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T07:10:15.733Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes?id=hamburger\"","timestamp":"2017-12-07T07:10:15.733Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=hamburger\",\"query\":{\"id\":\"hamburger\"},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes?id=hamburger\",\"href\":\"/api/trials-bikes?id=hamburger\"}","timestamp":"2017-12-07T07:10:15.733Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T07:10:15.733Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[5]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[39]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[40]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;\n    let requestedBike = /* istanbul ignore next */(cov_ratewsw8z.s[41]++, getBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[42]++;\n    if (requestedBike)\n      {/* istanbul ignore next */cov_ratewsw8z.b[6][0]++;cov_ratewsw8z.s[43]++;sendJSON(res, 200, requestedBike);} else\n\n      {/* istanbul ignore next */cov_ratewsw8z.b[6][1]++;cov_ratewsw8z.s[44]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[5][1]++;cov_ratewsw8z.s[45]++;sendJSON(res, 200, trialsBikes);}\n}","timestamp":"2017-12-07T07:10:15.733Z"}
{"level":"info","message":"Responding with a 404 code due to No bike with id \"hamburger\"..","timestamp":"2017-12-07T07:10:15.733Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T07:10:15.735Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes?id=acc2edc0-db1d-11e7-917e-ebfb40ef4602\"","timestamp":"2017-12-07T07:10:15.735Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=acc2edc0-db1d-11e7-917e-ebfb40ef4602\",\"query\":{\"id\":\"acc2edc0-db1d-11e7-917e-ebfb40ef4602\"},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes?id=acc2edc0-db1d-11e7-917e-ebfb40ef4602\",\"href\":\"/api/trials-bikes?id=acc2edc0-db1d-11e7-917e-ebfb40ef4602\"}","timestamp":"2017-12-07T07:10:15.735Z"}
{"level":"info","message":"Bad endpoint hit. 404.","timestamp":"2017-12-07T07:10:15.735Z"}
{"level":"info","message":"Adding a POST url and callback.","timestamp":"2017-12-07T07:21:58.689Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-07T07:21:58.689Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[27]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[28]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[30]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[31]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[33]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[34]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[36]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[37]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[39]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[40]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[41]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[42]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[43]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[44]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T07:21:58.689Z"}
{"level":"info","message":"Adding a GET url and callback.","timestamp":"2017-12-07T07:21:58.689Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-07T07:21:58.689Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[7]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[46]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[47]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[6][0]++;\n    let requestedBike = /* istanbul ignore next */(cov_ratewsw8z.s[48]++, getBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[49]++;\n    if (requestedBike)\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][0]++;cov_ratewsw8z.s[50]++;sendJSON(res, 200, requestedBike);} else\n\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][1]++;cov_ratewsw8z.s[51]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[6][1]++;cov_ratewsw8z.s[52]++;sendJSON(res, 200, trialsBikes);}\n}","timestamp":"2017-12-07T07:21:58.689Z"}
{"level":"info","message":"Adding a DELETE url and callback.","timestamp":"2017-12-07T07:21:58.690Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-07T07:21:58.690Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[8]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[54]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[55]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[8][0]++;\n    let removedBike = /* istanbul ignore next */(cov_ratewsw8z.s[56]++, removeBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[57]++;\n    if (removedBike)\n      {/* istanbul ignore next */cov_ratewsw8z.b[9][0]++;cov_ratewsw8z.s[58]++;sendJSON(res, 204, null);} else\n\n      {/* istanbul ignore next */cov_ratewsw8z.b[9][1]++;cov_ratewsw8z.s[59]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[8][1]++;cov_ratewsw8z.s[60]++;sendBadStatus(res, 400, `bad request, no id.`);}\n}","timestamp":"2017-12-07T07:21:58.690Z"}
{"level":"info","message":"Server is up on port 3000.","timestamp":"2017-12-07T07:21:58.726Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T07:21:58.767Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T07:21:58.767Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T07:21:58.767Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T07:21:58.768Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[27]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[28]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[30]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[31]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[33]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[34]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[36]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[37]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[39]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[40]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[41]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[42]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[43]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[44]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T07:21:58.768Z"}
{"level":"info","message":"Responding with a 200 code and the following data:","timestamp":"2017-12-07T07:21:58.768Z"}
{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"4fd15f00-db1f-11e7-8713-6938ab029f87","timestamp":"2017-12-07T07:21:58.768Z","level":"info","message":""}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T07:21:58.776Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T07:21:58.776Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T07:21:58.776Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T07:21:58.776Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.req.on (/Users/robertreed/Documents/programming/cf/401/lab/08-09-vanilla-rest-server/lab-rob/lib/req-parser.js:25:27)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-07T07:21:58.777Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T07:21:58.779Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T07:21:58.779Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T07:21:58.779Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T07:21:58.779Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[27]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[28]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[30]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[31]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[33]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[34]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[36]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[37]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[39]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[40]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[41]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[42]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[43]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[44]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T07:21:58.779Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, make not found!.","timestamp":"2017-12-07T07:21:58.779Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T07:21:58.781Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T07:21:58.781Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T07:21:58.781Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T07:21:58.781Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[27]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[28]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[30]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[31]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[33]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[34]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[36]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[37]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[39]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[40]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[41]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[42]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[43]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[44]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T07:21:58.781Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, model not found!.","timestamp":"2017-12-07T07:21:58.781Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T07:21:58.782Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T07:21:58.783Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T07:21:58.783Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T07:21:58.783Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[27]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[28]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[30]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[31]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[33]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[34]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[36]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[37]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[39]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[40]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[41]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[42]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[43]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[44]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T07:21:58.783Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, year not found!.","timestamp":"2017-12-07T07:21:58.783Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T07:21:58.784Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T07:21:58.784Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T07:21:58.784Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T07:21:58.784Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[27]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[28]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[30]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[31]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[33]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[34]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[36]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[37]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[39]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[40]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[41]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[42]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[43]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[44]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T07:21:58.785Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, displacement not found!.","timestamp":"2017-12-07T07:21:58.785Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T07:21:58.786Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T07:21:58.786Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T07:21:58.786Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T07:21:58.786Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[27]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[28]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[30]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[31]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[33]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[34]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[36]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[37]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[39]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[40]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[41]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[42]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[43]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[44]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T07:21:58.786Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, color not found!.","timestamp":"2017-12-07T07:21:58.786Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T07:21:58.788Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T07:21:58.788Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T07:21:58.788Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T07:21:58.788Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[7]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[46]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[47]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[6][0]++;\n    let requestedBike = /* istanbul ignore next */(cov_ratewsw8z.s[48]++, getBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[49]++;\n    if (requestedBike)\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][0]++;cov_ratewsw8z.s[50]++;sendJSON(res, 200, requestedBike);} else\n\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][1]++;cov_ratewsw8z.s[51]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[6][1]++;cov_ratewsw8z.s[52]++;sendJSON(res, 200, trialsBikes);}\n}","timestamp":"2017-12-07T07:21:58.788Z"}
{"level":"info","message":"Responding with a 200 code and the following data:","timestamp":"2017-12-07T07:21:58.788Z"}
[{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"4fd15f00-db1f-11e7-8713-6938ab029f87","timestamp":"2017-12-07T07:21:58.768Z"}]
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T07:21:58.790Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes?id=4fd15f00-db1f-11e7-8713-6938ab029f87\"","timestamp":"2017-12-07T07:21:58.790Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=4fd15f00-db1f-11e7-8713-6938ab029f87\",\"query\":{\"id\":\"4fd15f00-db1f-11e7-8713-6938ab029f87\"},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes?id=4fd15f00-db1f-11e7-8713-6938ab029f87\",\"href\":\"/api/trials-bikes?id=4fd15f00-db1f-11e7-8713-6938ab029f87\"}","timestamp":"2017-12-07T07:21:58.791Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T07:21:58.791Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[7]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[46]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[47]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[6][0]++;\n    let requestedBike = /* istanbul ignore next */(cov_ratewsw8z.s[48]++, getBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[49]++;\n    if (requestedBike)\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][0]++;cov_ratewsw8z.s[50]++;sendJSON(res, 200, requestedBike);} else\n\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][1]++;cov_ratewsw8z.s[51]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[6][1]++;cov_ratewsw8z.s[52]++;sendJSON(res, 200, trialsBikes);}\n}","timestamp":"2017-12-07T07:21:58.791Z"}
{"level":"info","message":"Responding with a 200 code and the following data:","timestamp":"2017-12-07T07:21:58.791Z"}
{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"4fd15f00-db1f-11e7-8713-6938ab029f87","timestamp":"2017-12-07T07:21:58.791Z","level":"info","message":""}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T07:21:58.792Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes?id=hamburger\"","timestamp":"2017-12-07T07:21:58.793Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=hamburger\",\"query\":{\"id\":\"hamburger\"},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes?id=hamburger\",\"href\":\"/api/trials-bikes?id=hamburger\"}","timestamp":"2017-12-07T07:21:58.793Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T07:21:58.793Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[7]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[46]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[47]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[6][0]++;\n    let requestedBike = /* istanbul ignore next */(cov_ratewsw8z.s[48]++, getBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[49]++;\n    if (requestedBike)\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][0]++;cov_ratewsw8z.s[50]++;sendJSON(res, 200, requestedBike);} else\n\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][1]++;cov_ratewsw8z.s[51]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[6][1]++;cov_ratewsw8z.s[52]++;sendJSON(res, 200, trialsBikes);}\n}","timestamp":"2017-12-07T07:21:58.793Z"}
{"level":"info","message":"Responding with a 404 code due to No bike with id \"hamburger\"..","timestamp":"2017-12-07T07:21:58.793Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T07:21:58.794Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes?id=4fd15f00-db1f-11e7-8713-6938ab029f87\"","timestamp":"2017-12-07T07:21:58.794Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=4fd15f00-db1f-11e7-8713-6938ab029f87\",\"query\":{\"id\":\"4fd15f00-db1f-11e7-8713-6938ab029f87\"},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes?id=4fd15f00-db1f-11e7-8713-6938ab029f87\",\"href\":\"/api/trials-bikes?id=4fd15f00-db1f-11e7-8713-6938ab029f87\"}","timestamp":"2017-12-07T07:21:58.794Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T07:21:58.794Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[8]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[54]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[55]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[8][0]++;\n    let removedBike = /* istanbul ignore next */(cov_ratewsw8z.s[56]++, removeBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[57]++;\n    if (removedBike)\n      {/* istanbul ignore next */cov_ratewsw8z.b[9][0]++;cov_ratewsw8z.s[58]++;sendJSON(res, 204, null);} else\n\n      {/* istanbul ignore next */cov_ratewsw8z.b[9][1]++;cov_ratewsw8z.s[59]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[8][1]++;cov_ratewsw8z.s[60]++;sendBadStatus(res, 400, `bad request, no id.`);}\n}","timestamp":"2017-12-07T07:21:58.794Z"}
{"level":"info","message":"Responding with a 204 code and the following data:","timestamp":"2017-12-07T07:21:58.795Z"}
{"level":"info","message":"","timestamp":"2017-12-07T07:21:58.795Z"}
{"level":"info","message":"Adding a POST url and callback.","timestamp":"2017-12-07T07:22:41.947Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-07T07:22:41.947Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[27]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[28]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[30]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[31]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[33]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[34]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[36]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[37]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[39]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[40]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[41]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[42]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[43]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[44]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T07:22:41.948Z"}
{"level":"info","message":"Adding a GET url and callback.","timestamp":"2017-12-07T07:22:41.948Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-07T07:22:41.948Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[7]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[46]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[47]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[6][0]++;\n    let requestedBike = /* istanbul ignore next */(cov_ratewsw8z.s[48]++, getBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[49]++;\n    if (requestedBike)\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][0]++;cov_ratewsw8z.s[50]++;sendJSON(res, 200, requestedBike);} else\n\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][1]++;cov_ratewsw8z.s[51]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[6][1]++;cov_ratewsw8z.s[52]++;sendJSON(res, 200, trialsBikes);}\n}","timestamp":"2017-12-07T07:22:41.948Z"}
{"level":"info","message":"Adding a DELETE url and callback.","timestamp":"2017-12-07T07:22:41.948Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-07T07:22:41.948Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[8]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[54]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[55]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[8][0]++;\n    let removedBike = /* istanbul ignore next */(cov_ratewsw8z.s[56]++, removeBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[57]++;\n    if (removedBike)\n      {/* istanbul ignore next */cov_ratewsw8z.b[9][0]++;cov_ratewsw8z.s[58]++;sendJSON(res, 204, undefined);} else\n\n      {/* istanbul ignore next */cov_ratewsw8z.b[9][1]++;cov_ratewsw8z.s[59]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[8][1]++;cov_ratewsw8z.s[60]++;sendBadStatus(res, 400, `bad request, no id.`);}\n}","timestamp":"2017-12-07T07:22:41.948Z"}
{"level":"info","message":"Server is up on port 3000.","timestamp":"2017-12-07T07:22:41.985Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T07:22:42.026Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T07:22:42.026Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T07:22:42.026Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T07:22:42.027Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[27]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[28]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[30]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[31]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[33]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[34]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[36]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[37]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[39]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[40]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[41]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[42]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[43]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[44]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T07:22:42.027Z"}
{"level":"info","message":"Responding with a 200 code and the following data:","timestamp":"2017-12-07T07:22:42.027Z"}
{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"699a2bb0-db1f-11e7-9490-f7746b6d520d","timestamp":"2017-12-07T07:22:42.027Z","level":"info","message":""}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T07:22:42.035Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T07:22:42.035Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T07:22:42.035Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T07:22:42.035Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.req.on (/Users/robertreed/Documents/programming/cf/401/lab/08-09-vanilla-rest-server/lab-rob/lib/req-parser.js:25:27)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-07T07:22:42.035Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T07:22:42.038Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T07:22:42.038Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T07:22:42.038Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T07:22:42.038Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[27]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[28]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[30]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[31]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[33]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[34]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[36]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[37]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[39]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[40]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[41]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[42]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[43]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[44]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T07:22:42.038Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, make not found!.","timestamp":"2017-12-07T07:22:42.038Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T07:22:42.040Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T07:22:42.040Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T07:22:42.040Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T07:22:42.040Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[27]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[28]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[30]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[31]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[33]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[34]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[36]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[37]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[39]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[40]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[41]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[42]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[43]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[44]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T07:22:42.040Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, model not found!.","timestamp":"2017-12-07T07:22:42.040Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T07:22:42.041Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T07:22:42.041Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T07:22:42.041Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T07:22:42.042Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[27]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[28]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[30]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[31]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[33]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[34]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[36]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[37]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[39]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[40]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[41]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[42]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[43]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[44]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T07:22:42.042Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, year not found!.","timestamp":"2017-12-07T07:22:42.042Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T07:22:42.043Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T07:22:42.043Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T07:22:42.043Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T07:22:42.043Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[27]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[28]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[30]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[31]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[33]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[34]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[36]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[37]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[39]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[40]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[41]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[42]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[43]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[44]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T07:22:42.043Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, displacement not found!.","timestamp":"2017-12-07T07:22:42.043Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T07:22:42.045Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T07:22:42.045Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T07:22:42.045Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T07:22:42.045Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[27]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[28]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[30]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[31]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[33]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[34]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[36]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[37]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[39]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[40]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[41]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[42]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[43]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[44]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T07:22:42.045Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, color not found!.","timestamp":"2017-12-07T07:22:42.045Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T07:22:42.046Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T07:22:42.047Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T07:22:42.047Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T07:22:42.047Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[7]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[46]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[47]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[6][0]++;\n    let requestedBike = /* istanbul ignore next */(cov_ratewsw8z.s[48]++, getBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[49]++;\n    if (requestedBike)\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][0]++;cov_ratewsw8z.s[50]++;sendJSON(res, 200, requestedBike);} else\n\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][1]++;cov_ratewsw8z.s[51]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[6][1]++;cov_ratewsw8z.s[52]++;sendJSON(res, 200, trialsBikes);}\n}","timestamp":"2017-12-07T07:22:42.047Z"}
{"level":"info","message":"Responding with a 200 code and the following data:","timestamp":"2017-12-07T07:22:42.047Z"}
[{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"699a2bb0-db1f-11e7-9490-f7746b6d520d","timestamp":"2017-12-07T07:22:42.027Z"}]
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T07:22:42.049Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes?id=699a2bb0-db1f-11e7-9490-f7746b6d520d\"","timestamp":"2017-12-07T07:22:42.049Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=699a2bb0-db1f-11e7-9490-f7746b6d520d\",\"query\":{\"id\":\"699a2bb0-db1f-11e7-9490-f7746b6d520d\"},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes?id=699a2bb0-db1f-11e7-9490-f7746b6d520d\",\"href\":\"/api/trials-bikes?id=699a2bb0-db1f-11e7-9490-f7746b6d520d\"}","timestamp":"2017-12-07T07:22:42.049Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T07:22:42.049Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[7]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[46]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[47]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[6][0]++;\n    let requestedBike = /* istanbul ignore next */(cov_ratewsw8z.s[48]++, getBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[49]++;\n    if (requestedBike)\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][0]++;cov_ratewsw8z.s[50]++;sendJSON(res, 200, requestedBike);} else\n\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][1]++;cov_ratewsw8z.s[51]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[6][1]++;cov_ratewsw8z.s[52]++;sendJSON(res, 200, trialsBikes);}\n}","timestamp":"2017-12-07T07:22:42.049Z"}
{"level":"info","message":"Responding with a 200 code and the following data:","timestamp":"2017-12-07T07:22:42.050Z"}
{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"699a2bb0-db1f-11e7-9490-f7746b6d520d","timestamp":"2017-12-07T07:22:42.050Z","level":"info","message":""}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T07:22:42.051Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes?id=hamburger\"","timestamp":"2017-12-07T07:22:42.051Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=hamburger\",\"query\":{\"id\":\"hamburger\"},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes?id=hamburger\",\"href\":\"/api/trials-bikes?id=hamburger\"}","timestamp":"2017-12-07T07:22:42.051Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T07:22:42.051Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[7]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[46]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[47]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[6][0]++;\n    let requestedBike = /* istanbul ignore next */(cov_ratewsw8z.s[48]++, getBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[49]++;\n    if (requestedBike)\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][0]++;cov_ratewsw8z.s[50]++;sendJSON(res, 200, requestedBike);} else\n\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][1]++;cov_ratewsw8z.s[51]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[6][1]++;cov_ratewsw8z.s[52]++;sendJSON(res, 200, trialsBikes);}\n}","timestamp":"2017-12-07T07:22:42.051Z"}
{"level":"info","message":"Responding with a 404 code due to No bike with id \"hamburger\"..","timestamp":"2017-12-07T07:22:42.051Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T07:22:42.053Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes?id=699a2bb0-db1f-11e7-9490-f7746b6d520d\"","timestamp":"2017-12-07T07:22:42.053Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=699a2bb0-db1f-11e7-9490-f7746b6d520d\",\"query\":{\"id\":\"699a2bb0-db1f-11e7-9490-f7746b6d520d\"},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes?id=699a2bb0-db1f-11e7-9490-f7746b6d520d\",\"href\":\"/api/trials-bikes?id=699a2bb0-db1f-11e7-9490-f7746b6d520d\"}","timestamp":"2017-12-07T07:22:42.053Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T07:22:42.053Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[8]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[54]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[55]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[8][0]++;\n    let removedBike = /* istanbul ignore next */(cov_ratewsw8z.s[56]++, removeBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[57]++;\n    if (removedBike)\n      {/* istanbul ignore next */cov_ratewsw8z.b[9][0]++;cov_ratewsw8z.s[58]++;sendJSON(res, 204, undefined);} else\n\n      {/* istanbul ignore next */cov_ratewsw8z.b[9][1]++;cov_ratewsw8z.s[59]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[8][1]++;cov_ratewsw8z.s[60]++;sendBadStatus(res, 400, `bad request, no id.`);}\n}","timestamp":"2017-12-07T07:22:42.053Z"}
{"level":"info","message":"Responding with a 204 code and the following data:","timestamp":"2017-12-07T07:22:42.054Z"}
{"level":"info","message":"","timestamp":"2017-12-07T07:22:42.054Z"}
{"level":"info","message":"Adding a POST url and callback.","timestamp":"2017-12-07T07:23:20.177Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-07T07:23:20.178Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[27]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[28]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[30]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[31]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[33]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[34]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[36]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[37]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[39]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[40]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[41]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[42]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[43]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[44]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T07:23:20.178Z"}
{"level":"info","message":"Adding a GET url and callback.","timestamp":"2017-12-07T07:23:20.178Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-07T07:23:20.178Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[7]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[46]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[47]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[6][0]++;\n    let requestedBike = /* istanbul ignore next */(cov_ratewsw8z.s[48]++, getBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[49]++;\n    if (requestedBike)\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][0]++;cov_ratewsw8z.s[50]++;sendJSON(res, 200, requestedBike);} else\n\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][1]++;cov_ratewsw8z.s[51]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[6][1]++;cov_ratewsw8z.s[52]++;sendJSON(res, 200, trialsBikes);}\n}","timestamp":"2017-12-07T07:23:20.178Z"}
{"level":"info","message":"Adding a DELETE url and callback.","timestamp":"2017-12-07T07:23:20.178Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-07T07:23:20.178Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[8]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[54]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[55]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[8][0]++;\n    let removedBike = /* istanbul ignore next */(cov_ratewsw8z.s[56]++, removeBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[57]++;\n    if (removedBike)\n      {/* istanbul ignore next */cov_ratewsw8z.b[9][0]++;cov_ratewsw8z.s[58]++;sendJSON(res, 204, undefined);} else\n\n      {/* istanbul ignore next */cov_ratewsw8z.b[9][1]++;cov_ratewsw8z.s[59]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[8][1]++;cov_ratewsw8z.s[60]++;sendBadStatus(res, 400, `bad request, no id.`);}\n}","timestamp":"2017-12-07T07:23:20.178Z"}
{"level":"info","message":"Server is up on port 3000.","timestamp":"2017-12-07T07:23:20.219Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T07:23:20.258Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T07:23:20.258Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T07:23:20.258Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T07:23:20.259Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[27]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[28]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[30]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[31]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[33]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[34]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[36]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[37]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[39]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[40]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[41]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[42]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[43]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[44]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T07:23:20.259Z"}
{"level":"info","message":"Responding with a 200 code and the following data:","timestamp":"2017-12-07T07:23:20.259Z"}
{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"8063e930-db1f-11e7-bf46-ebe3fbb694d4","timestamp":"2017-12-07T07:23:20.259Z","level":"info","message":""}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T07:23:20.267Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T07:23:20.267Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T07:23:20.267Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T07:23:20.267Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.req.on (/Users/robertreed/Documents/programming/cf/401/lab/08-09-vanilla-rest-server/lab-rob/lib/req-parser.js:25:27)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-07T07:23:20.267Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T07:23:20.270Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T07:23:20.270Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T07:23:20.270Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T07:23:20.270Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[27]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[28]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[30]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[31]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[33]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[34]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[36]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[37]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[39]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[40]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[41]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[42]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[43]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[44]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T07:23:20.270Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, make not found!.","timestamp":"2017-12-07T07:23:20.270Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T07:23:20.272Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T07:23:20.272Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T07:23:20.272Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T07:23:20.272Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[27]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[28]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[30]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[31]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[33]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[34]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[36]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[37]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[39]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[40]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[41]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[42]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[43]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[44]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T07:23:20.272Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, model not found!.","timestamp":"2017-12-07T07:23:20.272Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T07:23:20.273Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T07:23:20.274Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T07:23:20.274Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T07:23:20.274Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[27]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[28]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[30]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[31]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[33]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[34]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[36]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[37]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[39]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[40]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[41]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[42]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[43]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[44]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T07:23:20.274Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, year not found!.","timestamp":"2017-12-07T07:23:20.274Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T07:23:20.275Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T07:23:20.275Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T07:23:20.275Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T07:23:20.275Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[27]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[28]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[30]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[31]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[33]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[34]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[36]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[37]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[39]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[40]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[41]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[42]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[43]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[44]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T07:23:20.275Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, displacement not found!.","timestamp":"2017-12-07T07:23:20.276Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T07:23:20.277Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T07:23:20.277Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T07:23:20.277Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T07:23:20.277Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[27]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[28]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[30]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[31]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[33]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[34]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[36]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[37]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[39]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[40]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[41]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[42]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[43]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[44]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T07:23:20.277Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, color not found!.","timestamp":"2017-12-07T07:23:20.277Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T07:23:20.279Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T07:23:20.279Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T07:23:20.279Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T07:23:20.279Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[7]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[46]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[47]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[6][0]++;\n    let requestedBike = /* istanbul ignore next */(cov_ratewsw8z.s[48]++, getBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[49]++;\n    if (requestedBike)\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][0]++;cov_ratewsw8z.s[50]++;sendJSON(res, 200, requestedBike);} else\n\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][1]++;cov_ratewsw8z.s[51]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[6][1]++;cov_ratewsw8z.s[52]++;sendJSON(res, 200, trialsBikes);}\n}","timestamp":"2017-12-07T07:23:20.279Z"}
{"level":"info","message":"Responding with a 200 code and the following data:","timestamp":"2017-12-07T07:23:20.279Z"}
[{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"8063e930-db1f-11e7-bf46-ebe3fbb694d4","timestamp":"2017-12-07T07:23:20.259Z"}]
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T07:23:20.281Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes?id=8063e930-db1f-11e7-bf46-ebe3fbb694d4\"","timestamp":"2017-12-07T07:23:20.281Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=8063e930-db1f-11e7-bf46-ebe3fbb694d4\",\"query\":{\"id\":\"8063e930-db1f-11e7-bf46-ebe3fbb694d4\"},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes?id=8063e930-db1f-11e7-bf46-ebe3fbb694d4\",\"href\":\"/api/trials-bikes?id=8063e930-db1f-11e7-bf46-ebe3fbb694d4\"}","timestamp":"2017-12-07T07:23:20.281Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T07:23:20.281Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[7]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[46]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[47]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[6][0]++;\n    let requestedBike = /* istanbul ignore next */(cov_ratewsw8z.s[48]++, getBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[49]++;\n    if (requestedBike)\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][0]++;cov_ratewsw8z.s[50]++;sendJSON(res, 200, requestedBike);} else\n\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][1]++;cov_ratewsw8z.s[51]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[6][1]++;cov_ratewsw8z.s[52]++;sendJSON(res, 200, trialsBikes);}\n}","timestamp":"2017-12-07T07:23:20.281Z"}
{"level":"info","message":"Responding with a 200 code and the following data:","timestamp":"2017-12-07T07:23:20.282Z"}
{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"8063e930-db1f-11e7-bf46-ebe3fbb694d4","timestamp":"2017-12-07T07:23:20.282Z","level":"info","message":""}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T07:23:20.283Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes?id=hamburger\"","timestamp":"2017-12-07T07:23:20.283Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=hamburger\",\"query\":{\"id\":\"hamburger\"},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes?id=hamburger\",\"href\":\"/api/trials-bikes?id=hamburger\"}","timestamp":"2017-12-07T07:23:20.283Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T07:23:20.283Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[7]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[46]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[47]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[6][0]++;\n    let requestedBike = /* istanbul ignore next */(cov_ratewsw8z.s[48]++, getBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[49]++;\n    if (requestedBike)\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][0]++;cov_ratewsw8z.s[50]++;sendJSON(res, 200, requestedBike);} else\n\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][1]++;cov_ratewsw8z.s[51]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[6][1]++;cov_ratewsw8z.s[52]++;sendJSON(res, 200, trialsBikes);}\n}","timestamp":"2017-12-07T07:23:20.283Z"}
{"level":"info","message":"Responding with a 404 code due to No bike with id \"hamburger\"..","timestamp":"2017-12-07T07:23:20.283Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T07:23:20.285Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes?id=8063e930-db1f-11e7-bf46-ebe3fbb694d4\"","timestamp":"2017-12-07T07:23:20.285Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=8063e930-db1f-11e7-bf46-ebe3fbb694d4\",\"query\":{\"id\":\"8063e930-db1f-11e7-bf46-ebe3fbb694d4\"},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes?id=8063e930-db1f-11e7-bf46-ebe3fbb694d4\",\"href\":\"/api/trials-bikes?id=8063e930-db1f-11e7-bf46-ebe3fbb694d4\"}","timestamp":"2017-12-07T07:23:20.285Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T07:23:20.285Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[8]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[54]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[55]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[8][0]++;\n    let removedBike = /* istanbul ignore next */(cov_ratewsw8z.s[56]++, removeBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[57]++;\n    if (removedBike)\n      {/* istanbul ignore next */cov_ratewsw8z.b[9][0]++;cov_ratewsw8z.s[58]++;sendJSON(res, 204, undefined);} else\n\n      {/* istanbul ignore next */cov_ratewsw8z.b[9][1]++;cov_ratewsw8z.s[59]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[8][1]++;cov_ratewsw8z.s[60]++;sendBadStatus(res, 400, `bad request, no id.`);}\n}","timestamp":"2017-12-07T07:23:20.285Z"}
{"level":"info","message":"Responding with a 204 code and the following data:","timestamp":"2017-12-07T07:23:20.285Z"}
{"level":"info","message":"","timestamp":"2017-12-07T07:23:20.285Z"}
{"level":"info","message":"Adding a POST url and callback.","timestamp":"2017-12-07T07:24:39.726Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-07T07:24:39.727Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[27]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[28]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[30]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[31]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[33]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[34]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[36]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[37]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[39]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[40]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[41]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[42]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[43]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[44]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T07:24:39.727Z"}
{"level":"info","message":"Adding a GET url and callback.","timestamp":"2017-12-07T07:24:39.727Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-07T07:24:39.727Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[7]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[46]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[47]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[6][0]++;\n    let requestedBike = /* istanbul ignore next */(cov_ratewsw8z.s[48]++, getBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[49]++;\n    if (requestedBike)\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][0]++;cov_ratewsw8z.s[50]++;sendJSON(res, 200, requestedBike);} else\n\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][1]++;cov_ratewsw8z.s[51]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[6][1]++;cov_ratewsw8z.s[52]++;sendJSON(res, 200, trialsBikes);}\n}","timestamp":"2017-12-07T07:24:39.727Z"}
{"level":"info","message":"Adding a DELETE url and callback.","timestamp":"2017-12-07T07:24:39.727Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-07T07:24:39.727Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[8]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[54]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[55]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[8][0]++;\n    let removedBike = /* istanbul ignore next */(cov_ratewsw8z.s[56]++, removeBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[57]++;\n    if (removedBike)\n      {/* istanbul ignore next */cov_ratewsw8z.b[9][0]++;cov_ratewsw8z.s[58]++;sendJSON(res, 204, undefined);} else\n\n      {/* istanbul ignore next */cov_ratewsw8z.b[9][1]++;cov_ratewsw8z.s[59]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[8][1]++;cov_ratewsw8z.s[60]++;sendBadStatus(res, 400, `bad request, no id.`);}\n}","timestamp":"2017-12-07T07:24:39.727Z"}
{"level":"info","message":"Server is up on port 3000.","timestamp":"2017-12-07T07:24:39.768Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T07:24:39.808Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T07:24:39.809Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T07:24:39.809Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T07:24:39.809Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[27]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[28]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[30]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[31]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[33]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[34]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[36]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[37]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[39]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[40]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[41]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[42]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[43]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[44]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T07:24:39.809Z"}
{"level":"info","message":"Responding with a 200 code and the following data:","timestamp":"2017-12-07T07:24:39.810Z"}
{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"afce6e20-db1f-11e7-8ac8-a9375e9f7f7b","timestamp":"2017-12-07T07:24:39.810Z","level":"info","message":""}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T07:24:39.817Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T07:24:39.818Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T07:24:39.818Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T07:24:39.818Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.req.on (/Users/robertreed/Documents/programming/cf/401/lab/08-09-vanilla-rest-server/lab-rob/lib/req-parser.js:25:27)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-07T07:24:39.818Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T07:24:39.820Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T07:24:39.820Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T07:24:39.821Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T07:24:39.821Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[27]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[28]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[30]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[31]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[33]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[34]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[36]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[37]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[39]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[40]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[41]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[42]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[43]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[44]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T07:24:39.821Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, make not found!.","timestamp":"2017-12-07T07:24:39.821Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T07:24:39.822Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T07:24:39.823Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T07:24:39.823Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T07:24:39.823Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[27]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[28]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[30]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[31]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[33]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[34]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[36]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[37]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[39]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[40]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[41]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[42]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[43]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[44]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T07:24:39.823Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, model not found!.","timestamp":"2017-12-07T07:24:39.823Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T07:24:39.824Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T07:24:39.824Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T07:24:39.824Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T07:24:39.824Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[27]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[28]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[30]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[31]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[33]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[34]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[36]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[37]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[39]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[40]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[41]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[42]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[43]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[44]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T07:24:39.824Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, year not found!.","timestamp":"2017-12-07T07:24:39.824Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T07:24:39.826Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T07:24:39.826Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T07:24:39.826Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T07:24:39.826Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[27]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[28]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[30]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[31]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[33]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[34]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[36]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[37]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[39]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[40]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[41]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[42]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[43]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[44]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T07:24:39.826Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, displacement not found!.","timestamp":"2017-12-07T07:24:39.826Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T07:24:39.828Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T07:24:39.828Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T07:24:39.828Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T07:24:39.828Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[27]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[28]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[30]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[31]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[33]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[34]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[36]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[37]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[39]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[40]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[41]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[42]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[43]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[44]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T07:24:39.828Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, color not found!.","timestamp":"2017-12-07T07:24:39.828Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T07:24:39.829Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T07:24:39.829Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T07:24:39.829Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T07:24:39.830Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[7]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[46]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[47]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[6][0]++;\n    let requestedBike = /* istanbul ignore next */(cov_ratewsw8z.s[48]++, getBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[49]++;\n    if (requestedBike)\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][0]++;cov_ratewsw8z.s[50]++;sendJSON(res, 200, requestedBike);} else\n\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][1]++;cov_ratewsw8z.s[51]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[6][1]++;cov_ratewsw8z.s[52]++;sendJSON(res, 200, trialsBikes);}\n}","timestamp":"2017-12-07T07:24:39.830Z"}
{"level":"info","message":"Responding with a 200 code and the following data:","timestamp":"2017-12-07T07:24:39.830Z"}
[{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"afce6e20-db1f-11e7-8ac8-a9375e9f7f7b","timestamp":"2017-12-07T07:24:39.810Z"}]
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T07:24:39.832Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes?id=afce6e20-db1f-11e7-8ac8-a9375e9f7f7b\"","timestamp":"2017-12-07T07:24:39.832Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=afce6e20-db1f-11e7-8ac8-a9375e9f7f7b\",\"query\":{\"id\":\"afce6e20-db1f-11e7-8ac8-a9375e9f7f7b\"},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes?id=afce6e20-db1f-11e7-8ac8-a9375e9f7f7b\",\"href\":\"/api/trials-bikes?id=afce6e20-db1f-11e7-8ac8-a9375e9f7f7b\"}","timestamp":"2017-12-07T07:24:39.832Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T07:24:39.832Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[7]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[46]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[47]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[6][0]++;\n    let requestedBike = /* istanbul ignore next */(cov_ratewsw8z.s[48]++, getBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[49]++;\n    if (requestedBike)\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][0]++;cov_ratewsw8z.s[50]++;sendJSON(res, 200, requestedBike);} else\n\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][1]++;cov_ratewsw8z.s[51]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[6][1]++;cov_ratewsw8z.s[52]++;sendJSON(res, 200, trialsBikes);}\n}","timestamp":"2017-12-07T07:24:39.832Z"}
{"level":"info","message":"Responding with a 200 code and the following data:","timestamp":"2017-12-07T07:24:39.832Z"}
{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"afce6e20-db1f-11e7-8ac8-a9375e9f7f7b","timestamp":"2017-12-07T07:24:39.832Z","level":"info","message":""}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T07:24:39.834Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes?id=hamburger\"","timestamp":"2017-12-07T07:24:39.834Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=hamburger\",\"query\":{\"id\":\"hamburger\"},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes?id=hamburger\",\"href\":\"/api/trials-bikes?id=hamburger\"}","timestamp":"2017-12-07T07:24:39.834Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T07:24:39.834Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[7]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[46]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[47]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[6][0]++;\n    let requestedBike = /* istanbul ignore next */(cov_ratewsw8z.s[48]++, getBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[49]++;\n    if (requestedBike)\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][0]++;cov_ratewsw8z.s[50]++;sendJSON(res, 200, requestedBike);} else\n\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][1]++;cov_ratewsw8z.s[51]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[6][1]++;cov_ratewsw8z.s[52]++;sendJSON(res, 200, trialsBikes);}\n}","timestamp":"2017-12-07T07:24:39.834Z"}
{"level":"info","message":"Responding with a 404 code due to No bike with id \"hamburger\"..","timestamp":"2017-12-07T07:24:39.834Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T07:24:39.836Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes?id=afce6e20-db1f-11e7-8ac8-a9375e9f7f7b\"","timestamp":"2017-12-07T07:24:39.836Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=afce6e20-db1f-11e7-8ac8-a9375e9f7f7b\",\"query\":{\"id\":\"afce6e20-db1f-11e7-8ac8-a9375e9f7f7b\"},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes?id=afce6e20-db1f-11e7-8ac8-a9375e9f7f7b\",\"href\":\"/api/trials-bikes?id=afce6e20-db1f-11e7-8ac8-a9375e9f7f7b\"}","timestamp":"2017-12-07T07:24:39.836Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T07:24:39.836Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[8]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[54]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[55]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[8][0]++;\n    let removedBike = /* istanbul ignore next */(cov_ratewsw8z.s[56]++, removeBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[57]++;\n    if (removedBike)\n      {/* istanbul ignore next */cov_ratewsw8z.b[9][0]++;cov_ratewsw8z.s[58]++;sendJSON(res, 204, undefined);} else\n\n      {/* istanbul ignore next */cov_ratewsw8z.b[9][1]++;cov_ratewsw8z.s[59]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[8][1]++;cov_ratewsw8z.s[60]++;sendBadStatus(res, 400, `bad request, no id.`);}\n}","timestamp":"2017-12-07T07:24:39.836Z"}
{"level":"info","message":"Responding with a 204 code and the following data:","timestamp":"2017-12-07T07:24:39.836Z"}
{"level":"info","message":"","timestamp":"2017-12-07T07:24:39.836Z"}
{"level":"info","message":"Adding a POST url and callback.","timestamp":"2017-12-07T07:26:36.181Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-07T07:26:36.182Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[27]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[28]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[30]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[31]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[33]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[34]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[36]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[37]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[39]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[40]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[41]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[42]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[43]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[44]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T07:26:36.182Z"}
{"level":"info","message":"Adding a GET url and callback.","timestamp":"2017-12-07T07:26:36.182Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-07T07:26:36.182Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[7]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[46]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[47]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[6][0]++;\n    let requestedBike = /* istanbul ignore next */(cov_ratewsw8z.s[48]++, getBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[49]++;\n    if (requestedBike)\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][0]++;cov_ratewsw8z.s[50]++;sendJSON(res, 200, requestedBike);} else\n\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][1]++;cov_ratewsw8z.s[51]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[6][1]++;cov_ratewsw8z.s[52]++;sendJSON(res, 200, trialsBikes);}\n}","timestamp":"2017-12-07T07:26:36.182Z"}
{"level":"info","message":"Adding a DELETE url and callback.","timestamp":"2017-12-07T07:26:36.182Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-07T07:26:36.182Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[8]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[54]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[55]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[8][0]++;\n    let removedBike = /* istanbul ignore next */(cov_ratewsw8z.s[56]++, removeBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[57]++;\n    if (removedBike) {/* istanbul ignore next */cov_ratewsw8z.b[9][0]++;cov_ratewsw8z.s[58]++;\n      logger.log('info', `Bike deleted, responding with a 204 code.`); /* istanbul ignore next */cov_ratewsw8z.s[59]++;\n      res.writeHead(204); /* istanbul ignore next */cov_ratewsw8z.s[60]++;\n      res.end();\n    } else\n      {/* istanbul ignore next */cov_ratewsw8z.b[9][1]++;cov_ratewsw8z.s[61]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[8][1]++;cov_ratewsw8z.s[62]++;sendBadStatus(res, 400, `bad request, no id.`);}\n}","timestamp":"2017-12-07T07:26:36.182Z"}
{"level":"info","message":"Server is up on port 3000.","timestamp":"2017-12-07T07:26:36.220Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T07:26:36.261Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T07:26:36.261Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T07:26:36.261Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T07:26:36.262Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[27]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[28]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[30]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[31]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[33]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[34]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[36]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[37]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[39]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[40]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[41]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[42]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[43]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[44]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T07:26:36.262Z"}
{"level":"info","message":"Responding with a 200 code and the following data:","timestamp":"2017-12-07T07:26:36.262Z"}
{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"f5379860-db1f-11e7-b0b8-3d069abc990d","timestamp":"2017-12-07T07:26:36.262Z","level":"info","message":""}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T07:26:36.270Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T07:26:36.270Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T07:26:36.270Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T07:26:36.270Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.req.on (/Users/robertreed/Documents/programming/cf/401/lab/08-09-vanilla-rest-server/lab-rob/lib/req-parser.js:25:27)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-07T07:26:36.270Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T07:26:36.273Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T07:26:36.273Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T07:26:36.273Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T07:26:36.273Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[27]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[28]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[30]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[31]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[33]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[34]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[36]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[37]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[39]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[40]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[41]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[42]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[43]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[44]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T07:26:36.273Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, make not found!.","timestamp":"2017-12-07T07:26:36.273Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T07:26:36.275Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T07:26:36.275Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T07:26:36.275Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T07:26:36.275Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[27]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[28]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[30]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[31]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[33]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[34]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[36]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[37]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[39]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[40]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[41]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[42]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[43]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[44]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T07:26:36.275Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, model not found!.","timestamp":"2017-12-07T07:26:36.275Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T07:26:36.277Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T07:26:36.277Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T07:26:36.277Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T07:26:36.277Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[27]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[28]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[30]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[31]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[33]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[34]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[36]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[37]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[39]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[40]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[41]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[42]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[43]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[44]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T07:26:36.277Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, year not found!.","timestamp":"2017-12-07T07:26:36.277Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T07:26:36.278Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T07:26:36.278Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T07:26:36.278Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T07:26:36.279Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[27]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[28]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[30]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[31]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[33]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[34]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[36]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[37]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[39]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[40]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[41]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[42]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[43]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[44]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T07:26:36.279Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, displacement not found!.","timestamp":"2017-12-07T07:26:36.279Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T07:26:36.280Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T07:26:36.280Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T07:26:36.280Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T07:26:36.280Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[27]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[28]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[30]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[31]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[33]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[34]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[36]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[37]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[39]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[40]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[41]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[42]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[43]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[44]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T07:26:36.280Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, color not found!.","timestamp":"2017-12-07T07:26:36.280Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T07:26:36.282Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T07:26:36.282Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T07:26:36.282Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T07:26:36.282Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[7]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[46]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[47]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[6][0]++;\n    let requestedBike = /* istanbul ignore next */(cov_ratewsw8z.s[48]++, getBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[49]++;\n    if (requestedBike)\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][0]++;cov_ratewsw8z.s[50]++;sendJSON(res, 200, requestedBike);} else\n\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][1]++;cov_ratewsw8z.s[51]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[6][1]++;cov_ratewsw8z.s[52]++;sendJSON(res, 200, trialsBikes);}\n}","timestamp":"2017-12-07T07:26:36.282Z"}
{"level":"info","message":"Responding with a 200 code and the following data:","timestamp":"2017-12-07T07:26:36.282Z"}
[{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"f5379860-db1f-11e7-b0b8-3d069abc990d","timestamp":"2017-12-07T07:26:36.262Z"}]
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T07:26:36.284Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes?id=f5379860-db1f-11e7-b0b8-3d069abc990d\"","timestamp":"2017-12-07T07:26:36.284Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=f5379860-db1f-11e7-b0b8-3d069abc990d\",\"query\":{\"id\":\"f5379860-db1f-11e7-b0b8-3d069abc990d\"},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes?id=f5379860-db1f-11e7-b0b8-3d069abc990d\",\"href\":\"/api/trials-bikes?id=f5379860-db1f-11e7-b0b8-3d069abc990d\"}","timestamp":"2017-12-07T07:26:36.285Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T07:26:36.285Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[7]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[46]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[47]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[6][0]++;\n    let requestedBike = /* istanbul ignore next */(cov_ratewsw8z.s[48]++, getBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[49]++;\n    if (requestedBike)\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][0]++;cov_ratewsw8z.s[50]++;sendJSON(res, 200, requestedBike);} else\n\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][1]++;cov_ratewsw8z.s[51]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[6][1]++;cov_ratewsw8z.s[52]++;sendJSON(res, 200, trialsBikes);}\n}","timestamp":"2017-12-07T07:26:36.285Z"}
{"level":"info","message":"Responding with a 200 code and the following data:","timestamp":"2017-12-07T07:26:36.285Z"}
{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"f5379860-db1f-11e7-b0b8-3d069abc990d","timestamp":"2017-12-07T07:26:36.285Z","level":"info","message":""}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T07:26:36.287Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes?id=hamburger\"","timestamp":"2017-12-07T07:26:36.287Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=hamburger\",\"query\":{\"id\":\"hamburger\"},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes?id=hamburger\",\"href\":\"/api/trials-bikes?id=hamburger\"}","timestamp":"2017-12-07T07:26:36.287Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T07:26:36.287Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[7]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[46]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[47]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[6][0]++;\n    let requestedBike = /* istanbul ignore next */(cov_ratewsw8z.s[48]++, getBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[49]++;\n    if (requestedBike)\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][0]++;cov_ratewsw8z.s[50]++;sendJSON(res, 200, requestedBike);} else\n\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][1]++;cov_ratewsw8z.s[51]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[6][1]++;cov_ratewsw8z.s[52]++;sendJSON(res, 200, trialsBikes);}\n}","timestamp":"2017-12-07T07:26:36.287Z"}
{"level":"info","message":"Responding with a 404 code due to No bike with id \"hamburger\"..","timestamp":"2017-12-07T07:26:36.287Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T07:26:36.289Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes?id=f5379860-db1f-11e7-b0b8-3d069abc990d\"","timestamp":"2017-12-07T07:26:36.289Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=f5379860-db1f-11e7-b0b8-3d069abc990d\",\"query\":{\"id\":\"f5379860-db1f-11e7-b0b8-3d069abc990d\"},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes?id=f5379860-db1f-11e7-b0b8-3d069abc990d\",\"href\":\"/api/trials-bikes?id=f5379860-db1f-11e7-b0b8-3d069abc990d\"}","timestamp":"2017-12-07T07:26:36.289Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T07:26:36.289Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[8]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[54]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[55]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[8][0]++;\n    let removedBike = /* istanbul ignore next */(cov_ratewsw8z.s[56]++, removeBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[57]++;\n    if (removedBike) {/* istanbul ignore next */cov_ratewsw8z.b[9][0]++;cov_ratewsw8z.s[58]++;\n      logger.log('info', `Bike deleted, responding with a 204 code.`); /* istanbul ignore next */cov_ratewsw8z.s[59]++;\n      res.writeHead(204); /* istanbul ignore next */cov_ratewsw8z.s[60]++;\n      res.end();\n    } else\n      {/* istanbul ignore next */cov_ratewsw8z.b[9][1]++;cov_ratewsw8z.s[61]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[8][1]++;cov_ratewsw8z.s[62]++;sendBadStatus(res, 400, `bad request, no id.`);}\n}","timestamp":"2017-12-07T07:26:36.289Z"}
{"level":"info","message":"Bike deleted, responding with a 204 code.","timestamp":"2017-12-07T07:26:36.289Z"}
{"level":"info","message":"Adding a POST url and callback.","timestamp":"2017-12-07T07:26:57.697Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-07T07:26:57.698Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[27]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[28]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[30]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[31]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[33]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[34]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[36]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[37]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[39]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[40]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[41]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[42]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[43]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[44]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T07:26:57.698Z"}
{"level":"info","message":"Adding a GET url and callback.","timestamp":"2017-12-07T07:26:57.698Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-07T07:26:57.698Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[7]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[46]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[47]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[6][0]++;\n    let requestedBike = /* istanbul ignore next */(cov_ratewsw8z.s[48]++, getBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[49]++;\n    if (requestedBike)\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][0]++;cov_ratewsw8z.s[50]++;sendJSON(res, 200, requestedBike);} else\n\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][1]++;cov_ratewsw8z.s[51]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[6][1]++;cov_ratewsw8z.s[52]++;sendJSON(res, 200, trialsBikes);}\n}","timestamp":"2017-12-07T07:26:57.698Z"}
{"level":"info","message":"Adding a DELETE url and callback.","timestamp":"2017-12-07T07:26:57.698Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-07T07:26:57.698Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[8]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[54]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[55]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[8][0]++;\n    let removedBike = /* istanbul ignore next */(cov_ratewsw8z.s[56]++, removeBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[57]++;\n    if (removedBike) {/* istanbul ignore next */cov_ratewsw8z.b[9][0]++;cov_ratewsw8z.s[58]++;\n      logger.log('info', `Bike deleted, responding with a 204 code.`); /* istanbul ignore next */cov_ratewsw8z.s[59]++;\n      res.writeHead(204); /* istanbul ignore next */cov_ratewsw8z.s[60]++;\n      res.end();\n    } else\n      {/* istanbul ignore next */cov_ratewsw8z.b[9][1]++;cov_ratewsw8z.s[61]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[8][1]++;cov_ratewsw8z.s[62]++;sendBadStatus(res, 400, `bad request, no id.`);}\n}","timestamp":"2017-12-07T07:26:57.698Z"}
{"level":"info","message":"Server is up on port 3000.","timestamp":"2017-12-07T07:26:57.740Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T07:26:57.780Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T07:26:57.780Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T07:26:57.780Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T07:26:57.781Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[27]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[28]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[30]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[31]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[33]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[34]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[36]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[37]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[39]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[40]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[41]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[42]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[43]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[44]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T07:26:57.781Z"}
{"level":"info","message":"Responding with a 200 code and the following data:","timestamp":"2017-12-07T07:26:57.781Z"}
{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"020b2250-db20-11e7-b3e2-839e5dd2cfde","timestamp":"2017-12-07T07:26:57.781Z","level":"info","message":""}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T07:26:57.789Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T07:26:57.789Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T07:26:57.790Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T07:26:57.790Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.req.on (/Users/robertreed/Documents/programming/cf/401/lab/08-09-vanilla-rest-server/lab-rob/lib/req-parser.js:25:27)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-07T07:26:57.790Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T07:26:57.792Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T07:26:57.792Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T07:26:57.792Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T07:26:57.792Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[27]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[28]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[30]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[31]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[33]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[34]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[36]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[37]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[39]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[40]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[41]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[42]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[43]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[44]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T07:26:57.792Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, make not found!.","timestamp":"2017-12-07T07:26:57.793Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T07:26:57.794Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T07:26:57.794Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T07:26:57.794Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T07:26:57.794Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[27]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[28]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[30]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[31]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[33]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[34]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[36]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[37]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[39]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[40]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[41]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[42]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[43]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[44]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T07:26:57.795Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, model not found!.","timestamp":"2017-12-07T07:26:57.795Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T07:26:57.796Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T07:26:57.796Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T07:26:57.796Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T07:26:57.796Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[27]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[28]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[30]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[31]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[33]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[34]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[36]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[37]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[39]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[40]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[41]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[42]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[43]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[44]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T07:26:57.796Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, year not found!.","timestamp":"2017-12-07T07:26:57.796Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T07:26:57.798Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T07:26:57.798Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T07:26:57.798Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T07:26:57.798Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[27]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[28]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[30]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[31]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[33]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[34]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[36]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[37]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[39]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[40]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[41]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[42]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[43]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[44]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T07:26:57.798Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, displacement not found!.","timestamp":"2017-12-07T07:26:57.798Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T07:26:57.800Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T07:26:57.800Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T07:26:57.800Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T07:26:57.800Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[27]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[28]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[30]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[31]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[33]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[34]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[36]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[37]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[39]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[40]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[41]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[42]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[43]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[44]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T07:26:57.800Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, color not found!.","timestamp":"2017-12-07T07:26:57.800Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T07:26:57.802Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T07:26:57.802Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T07:26:57.802Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T07:26:57.802Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[7]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[46]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[47]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[6][0]++;\n    let requestedBike = /* istanbul ignore next */(cov_ratewsw8z.s[48]++, getBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[49]++;\n    if (requestedBike)\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][0]++;cov_ratewsw8z.s[50]++;sendJSON(res, 200, requestedBike);} else\n\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][1]++;cov_ratewsw8z.s[51]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[6][1]++;cov_ratewsw8z.s[52]++;sendJSON(res, 200, trialsBikes);}\n}","timestamp":"2017-12-07T07:26:57.802Z"}
{"level":"info","message":"Responding with a 200 code and the following data:","timestamp":"2017-12-07T07:26:57.802Z"}
[{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"020b2250-db20-11e7-b3e2-839e5dd2cfde","timestamp":"2017-12-07T07:26:57.781Z"}]
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T07:26:57.804Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes?id=020b2250-db20-11e7-b3e2-839e5dd2cfde\"","timestamp":"2017-12-07T07:26:57.804Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=020b2250-db20-11e7-b3e2-839e5dd2cfde\",\"query\":{\"id\":\"020b2250-db20-11e7-b3e2-839e5dd2cfde\"},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes?id=020b2250-db20-11e7-b3e2-839e5dd2cfde\",\"href\":\"/api/trials-bikes?id=020b2250-db20-11e7-b3e2-839e5dd2cfde\"}","timestamp":"2017-12-07T07:26:57.805Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T07:26:57.805Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[7]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[46]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[47]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[6][0]++;\n    let requestedBike = /* istanbul ignore next */(cov_ratewsw8z.s[48]++, getBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[49]++;\n    if (requestedBike)\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][0]++;cov_ratewsw8z.s[50]++;sendJSON(res, 200, requestedBike);} else\n\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][1]++;cov_ratewsw8z.s[51]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[6][1]++;cov_ratewsw8z.s[52]++;sendJSON(res, 200, trialsBikes);}\n}","timestamp":"2017-12-07T07:26:57.805Z"}
{"level":"info","message":"Responding with a 200 code and the following data:","timestamp":"2017-12-07T07:26:57.805Z"}
{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"020b2250-db20-11e7-b3e2-839e5dd2cfde","timestamp":"2017-12-07T07:26:57.805Z","level":"info","message":""}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T07:26:57.807Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes?id=hamburger\"","timestamp":"2017-12-07T07:26:57.807Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=hamburger\",\"query\":{\"id\":\"hamburger\"},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes?id=hamburger\",\"href\":\"/api/trials-bikes?id=hamburger\"}","timestamp":"2017-12-07T07:26:57.807Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T07:26:57.807Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[7]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[46]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[47]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[6][0]++;\n    let requestedBike = /* istanbul ignore next */(cov_ratewsw8z.s[48]++, getBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[49]++;\n    if (requestedBike)\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][0]++;cov_ratewsw8z.s[50]++;sendJSON(res, 200, requestedBike);} else\n\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][1]++;cov_ratewsw8z.s[51]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[6][1]++;cov_ratewsw8z.s[52]++;sendJSON(res, 200, trialsBikes);}\n}","timestamp":"2017-12-07T07:26:57.807Z"}
{"level":"info","message":"Responding with a 404 code due to No bike with id \"hamburger\"..","timestamp":"2017-12-07T07:26:57.807Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T07:26:57.808Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes?id=020b2250-db20-11e7-b3e2-839e5dd2cfde\"","timestamp":"2017-12-07T07:26:57.808Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=020b2250-db20-11e7-b3e2-839e5dd2cfde\",\"query\":{\"id\":\"020b2250-db20-11e7-b3e2-839e5dd2cfde\"},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes?id=020b2250-db20-11e7-b3e2-839e5dd2cfde\",\"href\":\"/api/trials-bikes?id=020b2250-db20-11e7-b3e2-839e5dd2cfde\"}","timestamp":"2017-12-07T07:26:57.809Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T07:26:57.809Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[8]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[54]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[55]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[8][0]++;\n    let removedBike = /* istanbul ignore next */(cov_ratewsw8z.s[56]++, removeBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[57]++;\n    if (removedBike) {/* istanbul ignore next */cov_ratewsw8z.b[9][0]++;cov_ratewsw8z.s[58]++;\n      logger.log('info', `Bike deleted, responding with a 204 code.`); /* istanbul ignore next */cov_ratewsw8z.s[59]++;\n      res.writeHead(204); /* istanbul ignore next */cov_ratewsw8z.s[60]++;\n      res.end();\n    } else\n      {/* istanbul ignore next */cov_ratewsw8z.b[9][1]++;cov_ratewsw8z.s[61]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[8][1]++;cov_ratewsw8z.s[62]++;sendBadStatus(res, 400, `bad request, no id.`);}\n}","timestamp":"2017-12-07T07:26:57.809Z"}
{"level":"info","message":"Bike deleted, responding with a 204 code.","timestamp":"2017-12-07T07:26:57.809Z"}
{"level":"info","message":"Adding a POST url and callback.","timestamp":"2017-12-07T07:27:30.293Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-07T07:27:30.293Z"}
{"level":"info","message":"(req, res) => {\n  if(!req.body.make) {\n    sendBadStatus(res, 400, 'bad request, make not found!');\n    return;\n  }\n  \n  if(!req.body.model) {\n    sendBadStatus(res, 400, 'bad request, model not found!');\n    return;\n  }\n\n  if(!req.body.year) {\n    sendBadStatus(res, 400, 'bad request, year not found!');\n    return;\n  }\n\n  if(!req.body.displacement) {\n    sendBadStatus(res, 400, 'bad request, displacement not found!');\n    return;\n  }\n\n  if(!req.body.color) {\n    sendBadStatus(res, 400, 'bad request, color not found!');\n    return;\n  }\n\n  let trialsBike = new TrialsBike(\n    req.body.make,\n    req.body.model,\n    req.body.year,\n    req.body.displacement,\n    req.body.color\n  );\n  \n  trialsBikes.push(trialsBike);\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T07:27:30.293Z"}
{"level":"info","message":"Adding a GET url and callback.","timestamp":"2017-12-07T07:27:30.293Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-07T07:27:30.293Z"}
{"level":"info","message":"(req, res) => {\n  let id = req.url.query.id;\n  if(id) {\n    let requestedBike = getBikeById(id);\n    if(requestedBike)\n      sendJSON(res, 200, requestedBike);\n    else\n      sendBadStatus(res, 404, `No bike with id \"${id}\".`);\n  } else\n    sendJSON(res, 200, trialsBikes);\n}","timestamp":"2017-12-07T07:27:30.293Z"}
{"level":"info","message":"Adding a DELETE url and callback.","timestamp":"2017-12-07T07:27:30.293Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-07T07:27:30.293Z"}
{"level":"info","message":"(req, res) => {\n  let id = req.url.query.id;\n  if(id) {\n    let removedBike = removeBikeById(id);\n    if (removedBike) {\n      logger.log('info', `Bike deleted, responding with a 204 code.`);\n      res.writeHead(204);\n      res.end();\n    } else\n      sendBadStatus(res, 404, `No bike with id \"${id}\".`);\n  } else\n    sendBadStatus(res, 400, `bad request, no id.`);\n}","timestamp":"2017-12-07T07:27:30.293Z"}
{"level":"info","message":"Server is up on port 3000.","timestamp":"2017-12-07T07:27:30.300Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T07:27:47.690Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T07:27:47.690Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T07:27:47.691Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T07:27:47.692Z"}
{"level":"info","message":"(req, res) => {\n  if(!req.body.make) {\n    sendBadStatus(res, 400, 'bad request, make not found!');\n    return;\n  }\n  \n  if(!req.body.model) {\n    sendBadStatus(res, 400, 'bad request, model not found!');\n    return;\n  }\n\n  if(!req.body.year) {\n    sendBadStatus(res, 400, 'bad request, year not found!');\n    return;\n  }\n\n  if(!req.body.displacement) {\n    sendBadStatus(res, 400, 'bad request, displacement not found!');\n    return;\n  }\n\n  if(!req.body.color) {\n    sendBadStatus(res, 400, 'bad request, color not found!');\n    return;\n  }\n\n  let trialsBike = new TrialsBike(\n    req.body.make,\n    req.body.model,\n    req.body.year,\n    req.body.displacement,\n    req.body.color\n  );\n  \n  trialsBikes.push(trialsBike);\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T07:27:47.692Z"}
{"level":"info","message":"Responding with a 200 code and the following data:","timestamp":"2017-12-07T07:27:47.692Z"}
{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"1fcaf2c0-db20-11e7-8d83-d114090a7334","timestamp":"2017-12-07T07:27:47.692Z","level":"info","message":""}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T07:27:50.195Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T07:27:50.195Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T07:27:50.195Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T07:27:50.195Z"}
{"level":"info","message":"(req, res) => {\n  if(!req.body.make) {\n    sendBadStatus(res, 400, 'bad request, make not found!');\n    return;\n  }\n  \n  if(!req.body.model) {\n    sendBadStatus(res, 400, 'bad request, model not found!');\n    return;\n  }\n\n  if(!req.body.year) {\n    sendBadStatus(res, 400, 'bad request, year not found!');\n    return;\n  }\n\n  if(!req.body.displacement) {\n    sendBadStatus(res, 400, 'bad request, displacement not found!');\n    return;\n  }\n\n  if(!req.body.color) {\n    sendBadStatus(res, 400, 'bad request, color not found!');\n    return;\n  }\n\n  let trialsBike = new TrialsBike(\n    req.body.make,\n    req.body.model,\n    req.body.year,\n    req.body.displacement,\n    req.body.color\n  );\n  \n  trialsBikes.push(trialsBike);\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T07:27:50.195Z"}
{"level":"info","message":"Responding with a 200 code and the following data:","timestamp":"2017-12-07T07:27:50.195Z"}
{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"2148e030-db20-11e7-8d83-d114090a7334","timestamp":"2017-12-07T07:27:50.195Z","level":"info","message":""}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T07:27:52.508Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T07:27:52.508Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T07:27:52.508Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T07:27:52.508Z"}
{"level":"info","message":"(req, res) => {\n  if(!req.body.make) {\n    sendBadStatus(res, 400, 'bad request, make not found!');\n    return;\n  }\n  \n  if(!req.body.model) {\n    sendBadStatus(res, 400, 'bad request, model not found!');\n    return;\n  }\n\n  if(!req.body.year) {\n    sendBadStatus(res, 400, 'bad request, year not found!');\n    return;\n  }\n\n  if(!req.body.displacement) {\n    sendBadStatus(res, 400, 'bad request, displacement not found!');\n    return;\n  }\n\n  if(!req.body.color) {\n    sendBadStatus(res, 400, 'bad request, color not found!');\n    return;\n  }\n\n  let trialsBike = new TrialsBike(\n    req.body.make,\n    req.body.model,\n    req.body.year,\n    req.body.displacement,\n    req.body.color\n  );\n  \n  trialsBikes.push(trialsBike);\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T07:27:52.509Z"}
{"level":"info","message":"Responding with a 200 code and the following data:","timestamp":"2017-12-07T07:27:52.509Z"}
{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"22a9f6d0-db20-11e7-8d83-d114090a7334","timestamp":"2017-12-07T07:27:52.509Z","level":"info","message":""}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T07:28:00.151Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T07:28:00.151Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T07:28:00.151Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T07:28:00.151Z"}
{"level":"info","message":"(req, res) => {\n  let id = req.url.query.id;\n  if(id) {\n    let requestedBike = getBikeById(id);\n    if(requestedBike)\n      sendJSON(res, 200, requestedBike);\n    else\n      sendBadStatus(res, 404, `No bike with id \"${id}\".`);\n  } else\n    sendJSON(res, 200, trialsBikes);\n}","timestamp":"2017-12-07T07:28:00.151Z"}
{"level":"info","message":"Responding with a 200 code and the following data:","timestamp":"2017-12-07T07:28:00.151Z"}
[{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"1fcaf2c0-db20-11e7-8d83-d114090a7334","timestamp":"2017-12-07T07:27:47.692Z"},{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"2148e030-db20-11e7-8d83-d114090a7334","timestamp":"2017-12-07T07:27:50.195Z"},{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"22a9f6d0-db20-11e7-8d83-d114090a7334","timestamp":"2017-12-07T07:27:52.509Z"}]
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T07:28:16.926Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes?id=22a9f6d0-db20-11e7-8d83-d114090a7334\"","timestamp":"2017-12-07T07:28:16.926Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=22a9f6d0-db20-11e7-8d83-d114090a7334\",\"query\":{\"id\":\"22a9f6d0-db20-11e7-8d83-d114090a7334\"},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes?id=22a9f6d0-db20-11e7-8d83-d114090a7334\",\"href\":\"/api/trials-bikes?id=22a9f6d0-db20-11e7-8d83-d114090a7334\"}","timestamp":"2017-12-07T07:28:16.927Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T07:28:16.927Z"}
{"level":"info","message":"(req, res) => {\n  let id = req.url.query.id;\n  if(id) {\n    let requestedBike = getBikeById(id);\n    if(requestedBike)\n      sendJSON(res, 200, requestedBike);\n    else\n      sendBadStatus(res, 404, `No bike with id \"${id}\".`);\n  } else\n    sendJSON(res, 200, trialsBikes);\n}","timestamp":"2017-12-07T07:28:16.927Z"}
{"level":"info","message":"Responding with a 200 code and the following data:","timestamp":"2017-12-07T07:28:16.927Z"}
{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"22a9f6d0-db20-11e7-8d83-d114090a7334","timestamp":"2017-12-07T07:28:16.927Z","level":"info","message":""}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T07:28:30.837Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes?id=22a9f6d0-db20-11e7-8d83-d114090a7334\"","timestamp":"2017-12-07T07:28:30.837Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=22a9f6d0-db20-11e7-8d83-d114090a7334\",\"query\":{\"id\":\"22a9f6d0-db20-11e7-8d83-d114090a7334\"},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes?id=22a9f6d0-db20-11e7-8d83-d114090a7334\",\"href\":\"/api/trials-bikes?id=22a9f6d0-db20-11e7-8d83-d114090a7334\"}","timestamp":"2017-12-07T07:28:30.837Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T07:28:30.837Z"}
{"level":"info","message":"(req, res) => {\n  let id = req.url.query.id;\n  if(id) {\n    let removedBike = removeBikeById(id);\n    if (removedBike) {\n      logger.log('info', `Bike deleted, responding with a 204 code.`);\n      res.writeHead(204);\n      res.end();\n    } else\n      sendBadStatus(res, 404, `No bike with id \"${id}\".`);\n  } else\n    sendBadStatus(res, 400, `bad request, no id.`);\n}","timestamp":"2017-12-07T07:28:30.837Z"}
{"level":"info","message":"Bike deleted, responding with a 204 code.","timestamp":"2017-12-07T07:28:30.837Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T07:28:43.121Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T07:28:43.122Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T07:28:43.122Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T07:28:43.122Z"}
{"level":"info","message":"(req, res) => {\n  let id = req.url.query.id;\n  if(id) {\n    let requestedBike = getBikeById(id);\n    if(requestedBike)\n      sendJSON(res, 200, requestedBike);\n    else\n      sendBadStatus(res, 404, `No bike with id \"${id}\".`);\n  } else\n    sendJSON(res, 200, trialsBikes);\n}","timestamp":"2017-12-07T07:28:43.122Z"}
{"level":"info","message":"Responding with a 200 code and the following data:","timestamp":"2017-12-07T07:28:43.122Z"}
[{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"1fcaf2c0-db20-11e7-8d83-d114090a7334","timestamp":"2017-12-07T07:27:47.692Z"},{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"2148e030-db20-11e7-8d83-d114090a7334","timestamp":"2017-12-07T07:27:50.195Z"}]
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T07:29:03.190Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes?id=2148e030-db20-11e7-8d83-d114090a7334\"","timestamp":"2017-12-07T07:29:03.190Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=2148e030-db20-11e7-8d83-d114090a7334\",\"query\":{\"id\":\"2148e030-db20-11e7-8d83-d114090a7334\"},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes?id=2148e030-db20-11e7-8d83-d114090a7334\",\"href\":\"/api/trials-bikes?id=2148e030-db20-11e7-8d83-d114090a7334\"}","timestamp":"2017-12-07T07:29:03.190Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T07:29:03.190Z"}
{"level":"info","message":"(req, res) => {\n  let id = req.url.query.id;\n  if(id) {\n    let removedBike = removeBikeById(id);\n    if (removedBike) {\n      logger.log('info', `Bike deleted, responding with a 204 code.`);\n      res.writeHead(204);\n      res.end();\n    } else\n      sendBadStatus(res, 404, `No bike with id \"${id}\".`);\n  } else\n    sendBadStatus(res, 400, `bad request, no id.`);\n}","timestamp":"2017-12-07T07:29:03.190Z"}
{"level":"info","message":"Bike deleted, responding with a 204 code.","timestamp":"2017-12-07T07:29:03.190Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T07:29:11.348Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T07:29:11.348Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T07:29:11.348Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T07:29:11.348Z"}
{"level":"info","message":"(req, res) => {\n  let id = req.url.query.id;\n  if(id) {\n    let requestedBike = getBikeById(id);\n    if(requestedBike)\n      sendJSON(res, 200, requestedBike);\n    else\n      sendBadStatus(res, 404, `No bike with id \"${id}\".`);\n  } else\n    sendJSON(res, 200, trialsBikes);\n}","timestamp":"2017-12-07T07:29:11.348Z"}
{"level":"info","message":"Responding with a 200 code and the following data:","timestamp":"2017-12-07T07:29:11.348Z"}
[{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"1fcaf2c0-db20-11e7-8d83-d114090a7334","timestamp":"2017-12-07T07:27:47.692Z"}]
{"level":"info","message":"Adding a POST url and callback.","timestamp":"2017-12-07T07:31:05.869Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-07T07:31:05.869Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[27]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[28]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[30]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[31]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[33]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[34]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[36]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[37]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[39]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[40]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[41]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[42]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[43]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[44]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T07:31:05.869Z"}
{"level":"info","message":"Adding a GET url and callback.","timestamp":"2017-12-07T07:31:05.869Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-07T07:31:05.869Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[7]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[46]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[47]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[6][0]++;\n    let requestedBike = /* istanbul ignore next */(cov_ratewsw8z.s[48]++, getBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[49]++;\n    if (requestedBike)\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][0]++;cov_ratewsw8z.s[50]++;sendJSON(res, 200, requestedBike);} else\n\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][1]++;cov_ratewsw8z.s[51]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[6][1]++;cov_ratewsw8z.s[52]++;sendJSON(res, 200, trialsBikes);}\n}","timestamp":"2017-12-07T07:31:05.869Z"}
{"level":"info","message":"Adding a DELETE url and callback.","timestamp":"2017-12-07T07:31:05.869Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-07T07:31:05.869Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[8]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[54]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[55]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[8][0]++;\n    let removedBike = /* istanbul ignore next */(cov_ratewsw8z.s[56]++, removeBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[57]++;\n    if (removedBike) {/* istanbul ignore next */cov_ratewsw8z.b[9][0]++;cov_ratewsw8z.s[58]++;\n      logger.log('info', `Bike deleted, responding with a 204 code.`); /* istanbul ignore next */cov_ratewsw8z.s[59]++;\n      res.writeHead(204); /* istanbul ignore next */cov_ratewsw8z.s[60]++;\n      res.end();\n    } else\n      {/* istanbul ignore next */cov_ratewsw8z.b[9][1]++;cov_ratewsw8z.s[61]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[8][1]++;cov_ratewsw8z.s[62]++;sendBadStatus(res, 400, `bad request, no id.`);}\n}","timestamp":"2017-12-07T07:31:05.869Z"}
{"level":"info","message":"Server is up on port 3000.","timestamp":"2017-12-07T07:31:05.911Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T07:31:05.952Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T07:31:05.952Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T07:31:05.952Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T07:31:05.953Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[27]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[28]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[30]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[31]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[33]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[34]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[36]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[37]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[39]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[40]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[41]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[42]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[43]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[44]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T07:31:05.953Z"}
{"level":"info","message":"Responding with a 200 code and the following data:","timestamp":"2017-12-07T07:31:05.953Z"}
{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"95f72d10-db20-11e7-95c8-dda026817e22","timestamp":"2017-12-07T07:31:05.953Z","level":"info","message":""}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T07:31:05.961Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T07:31:05.961Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T07:31:05.961Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T07:31:05.961Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.req.on (/Users/robertreed/Documents/programming/cf/401/lab/08-09-vanilla-rest-server/lab-rob/lib/req-parser.js:25:27)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-07T07:31:05.961Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T07:31:05.963Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T07:31:05.964Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T07:31:05.964Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T07:31:05.964Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[27]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[28]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[30]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[31]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[33]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[34]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[36]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[37]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[39]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[40]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[41]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[42]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[43]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[44]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T07:31:05.964Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, make not found!.","timestamp":"2017-12-07T07:31:05.964Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T07:31:05.966Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T07:31:05.966Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T07:31:05.966Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T07:31:05.966Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[27]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[28]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[30]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[31]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[33]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[34]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[36]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[37]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[39]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[40]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[41]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[42]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[43]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[44]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T07:31:05.966Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, model not found!.","timestamp":"2017-12-07T07:31:05.966Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T07:31:05.967Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T07:31:05.968Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T07:31:05.968Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T07:31:05.968Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[27]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[28]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[30]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[31]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[33]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[34]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[36]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[37]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[39]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[40]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[41]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[42]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[43]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[44]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T07:31:05.968Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, year not found!.","timestamp":"2017-12-07T07:31:05.968Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T07:31:05.969Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T07:31:05.969Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T07:31:05.969Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T07:31:05.970Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[27]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[28]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[30]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[31]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[33]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[34]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[36]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[37]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[39]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[40]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[41]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[42]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[43]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[44]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T07:31:05.970Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, displacement not found!.","timestamp":"2017-12-07T07:31:05.970Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T07:31:05.971Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T07:31:05.971Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T07:31:05.971Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T07:31:05.971Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[27]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[28]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[30]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[31]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[33]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[34]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[36]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[37]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[39]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[40]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[41]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[42]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[43]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[44]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T07:31:05.971Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, color not found!.","timestamp":"2017-12-07T07:31:05.971Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T07:31:05.973Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T07:31:05.973Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T07:31:05.973Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T07:31:05.973Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[7]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[46]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[47]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[6][0]++;\n    let requestedBike = /* istanbul ignore next */(cov_ratewsw8z.s[48]++, getBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[49]++;\n    if (requestedBike)\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][0]++;cov_ratewsw8z.s[50]++;sendJSON(res, 200, requestedBike);} else\n\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][1]++;cov_ratewsw8z.s[51]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[6][1]++;cov_ratewsw8z.s[52]++;sendJSON(res, 200, trialsBikes);}\n}","timestamp":"2017-12-07T07:31:05.973Z"}
{"level":"info","message":"Responding with a 200 code and the following data:","timestamp":"2017-12-07T07:31:05.973Z"}
[{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"95f72d10-db20-11e7-95c8-dda026817e22","timestamp":"2017-12-07T07:31:05.953Z"}]
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T07:31:05.975Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes?id=95f72d10-db20-11e7-95c8-dda026817e22\"","timestamp":"2017-12-07T07:31:05.976Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=95f72d10-db20-11e7-95c8-dda026817e22\",\"query\":{\"id\":\"95f72d10-db20-11e7-95c8-dda026817e22\"},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes?id=95f72d10-db20-11e7-95c8-dda026817e22\",\"href\":\"/api/trials-bikes?id=95f72d10-db20-11e7-95c8-dda026817e22\"}","timestamp":"2017-12-07T07:31:05.976Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T07:31:05.976Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[7]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[46]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[47]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[6][0]++;\n    let requestedBike = /* istanbul ignore next */(cov_ratewsw8z.s[48]++, getBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[49]++;\n    if (requestedBike)\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][0]++;cov_ratewsw8z.s[50]++;sendJSON(res, 200, requestedBike);} else\n\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][1]++;cov_ratewsw8z.s[51]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[6][1]++;cov_ratewsw8z.s[52]++;sendJSON(res, 200, trialsBikes);}\n}","timestamp":"2017-12-07T07:31:05.976Z"}
{"level":"info","message":"Responding with a 200 code and the following data:","timestamp":"2017-12-07T07:31:05.976Z"}
{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"95f72d10-db20-11e7-95c8-dda026817e22","timestamp":"2017-12-07T07:31:05.976Z","level":"info","message":""}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T07:31:05.978Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes?id=hamburger\"","timestamp":"2017-12-07T07:31:05.978Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=hamburger\",\"query\":{\"id\":\"hamburger\"},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes?id=hamburger\",\"href\":\"/api/trials-bikes?id=hamburger\"}","timestamp":"2017-12-07T07:31:05.978Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T07:31:05.978Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[7]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[46]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[47]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[6][0]++;\n    let requestedBike = /* istanbul ignore next */(cov_ratewsw8z.s[48]++, getBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[49]++;\n    if (requestedBike)\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][0]++;cov_ratewsw8z.s[50]++;sendJSON(res, 200, requestedBike);} else\n\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][1]++;cov_ratewsw8z.s[51]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[6][1]++;cov_ratewsw8z.s[52]++;sendJSON(res, 200, trialsBikes);}\n}","timestamp":"2017-12-07T07:31:05.978Z"}
{"level":"info","message":"Responding with a 404 code due to No bike with id \"hamburger\"..","timestamp":"2017-12-07T07:31:05.978Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T07:31:05.980Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes?id=95f72d10-db20-11e7-95c8-dda026817e22\"","timestamp":"2017-12-07T07:31:05.980Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=95f72d10-db20-11e7-95c8-dda026817e22\",\"query\":{\"id\":\"95f72d10-db20-11e7-95c8-dda026817e22\"},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes?id=95f72d10-db20-11e7-95c8-dda026817e22\",\"href\":\"/api/trials-bikes?id=95f72d10-db20-11e7-95c8-dda026817e22\"}","timestamp":"2017-12-07T07:31:05.980Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T07:31:05.980Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[8]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[54]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[55]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[8][0]++;\n    let removedBike = /* istanbul ignore next */(cov_ratewsw8z.s[56]++, removeBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[57]++;\n    if (removedBike) {/* istanbul ignore next */cov_ratewsw8z.b[9][0]++;cov_ratewsw8z.s[58]++;\n      logger.log('info', `Bike deleted, responding with a 204 code.`); /* istanbul ignore next */cov_ratewsw8z.s[59]++;\n      res.writeHead(204); /* istanbul ignore next */cov_ratewsw8z.s[60]++;\n      res.end();\n    } else\n      {/* istanbul ignore next */cov_ratewsw8z.b[9][1]++;cov_ratewsw8z.s[61]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[8][1]++;cov_ratewsw8z.s[62]++;sendBadStatus(res, 400, `bad request, no id.`);}\n}","timestamp":"2017-12-07T07:31:05.980Z"}
{"level":"info","message":"Bike deleted, responding with a 204 code.","timestamp":"2017-12-07T07:31:05.980Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T07:31:05.982Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes?id=95f72d10-db20-11e7-95c8-dda026817e22\"","timestamp":"2017-12-07T07:31:05.982Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=95f72d10-db20-11e7-95c8-dda026817e22\",\"query\":{\"id\":\"95f72d10-db20-11e7-95c8-dda026817e22\"},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes?id=95f72d10-db20-11e7-95c8-dda026817e22\",\"href\":\"/api/trials-bikes?id=95f72d10-db20-11e7-95c8-dda026817e22\"}","timestamp":"2017-12-07T07:31:05.982Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T07:31:05.982Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[8]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[54]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[55]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[8][0]++;\n    let removedBike = /* istanbul ignore next */(cov_ratewsw8z.s[56]++, removeBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[57]++;\n    if (removedBike) {/* istanbul ignore next */cov_ratewsw8z.b[9][0]++;cov_ratewsw8z.s[58]++;\n      logger.log('info', `Bike deleted, responding with a 204 code.`); /* istanbul ignore next */cov_ratewsw8z.s[59]++;\n      res.writeHead(204); /* istanbul ignore next */cov_ratewsw8z.s[60]++;\n      res.end();\n    } else\n      {/* istanbul ignore next */cov_ratewsw8z.b[9][1]++;cov_ratewsw8z.s[61]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[8][1]++;cov_ratewsw8z.s[62]++;sendBadStatus(res, 400, `bad request, no id.`);}\n}","timestamp":"2017-12-07T07:31:05.982Z"}
{"level":"info","message":"Responding with a 404 code due to No bike with id \"95f72d10-db20-11e7-95c8-dda026817e22\"..","timestamp":"2017-12-07T07:31:05.982Z"}
{"level":"info","message":"Adding a POST url and callback.","timestamp":"2017-12-07T07:31:58.924Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-07T07:31:58.924Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[27]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[28]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[30]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[31]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[33]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[34]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[36]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[37]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[39]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[40]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[41]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[42]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[43]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[44]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T07:31:58.924Z"}
{"level":"info","message":"Adding a GET url and callback.","timestamp":"2017-12-07T07:31:58.924Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-07T07:31:58.924Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[7]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[46]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[47]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[6][0]++;\n    let requestedBike = /* istanbul ignore next */(cov_ratewsw8z.s[48]++, getBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[49]++;\n    if (requestedBike)\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][0]++;cov_ratewsw8z.s[50]++;sendJSON(res, 200, requestedBike);} else\n\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][1]++;cov_ratewsw8z.s[51]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[6][1]++;cov_ratewsw8z.s[52]++;sendJSON(res, 200, trialsBikes);}\n}","timestamp":"2017-12-07T07:31:58.924Z"}
{"level":"info","message":"Adding a DELETE url and callback.","timestamp":"2017-12-07T07:31:58.924Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-07T07:31:58.925Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[8]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[54]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[55]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[8][0]++;\n    let removedBike = /* istanbul ignore next */(cov_ratewsw8z.s[56]++, removeBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[57]++;\n    if (removedBike) {/* istanbul ignore next */cov_ratewsw8z.b[9][0]++;cov_ratewsw8z.s[58]++;\n      logger.log('info', `Bike deleted, responding with a 204 code.`); /* istanbul ignore next */cov_ratewsw8z.s[59]++;\n      res.writeHead(204); /* istanbul ignore next */cov_ratewsw8z.s[60]++;\n      res.end();\n    } else\n      {/* istanbul ignore next */cov_ratewsw8z.b[9][1]++;cov_ratewsw8z.s[61]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[8][1]++;cov_ratewsw8z.s[62]++;sendBadStatus(res, 400, `bad request, no id.`);}\n}","timestamp":"2017-12-07T07:31:58.925Z"}
{"level":"info","message":"Server is up on port 3000.","timestamp":"2017-12-07T07:31:58.964Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T07:31:59.004Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T07:31:59.005Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T07:31:59.005Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T07:31:59.005Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[27]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[28]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[30]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[31]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[33]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[34]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[36]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[37]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[39]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[40]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[41]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[42]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[43]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[44]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T07:31:59.005Z"}
{"level":"info","message":"Responding with a 200 code and the following data:","timestamp":"2017-12-07T07:31:59.006Z"}
{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"b5966be0-db20-11e7-9071-c717e4f7eec9","timestamp":"2017-12-07T07:31:59.006Z","level":"info","message":""}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T07:31:59.014Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T07:31:59.014Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T07:31:59.014Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T07:31:59.014Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.req.on (/Users/robertreed/Documents/programming/cf/401/lab/08-09-vanilla-rest-server/lab-rob/lib/req-parser.js:25:27)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-07T07:31:59.014Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T07:31:59.016Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T07:31:59.016Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T07:31:59.017Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T07:31:59.017Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[27]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[28]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[30]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[31]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[33]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[34]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[36]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[37]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[39]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[40]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[41]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[42]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[43]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[44]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T07:31:59.017Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, make not found!.","timestamp":"2017-12-07T07:31:59.017Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T07:31:59.018Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T07:31:59.018Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T07:31:59.018Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T07:31:59.019Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[27]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[28]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[30]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[31]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[33]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[34]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[36]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[37]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[39]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[40]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[41]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[42]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[43]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[44]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T07:31:59.019Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, model not found!.","timestamp":"2017-12-07T07:31:59.019Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T07:31:59.020Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T07:31:59.020Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T07:31:59.020Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T07:31:59.020Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[27]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[28]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[30]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[31]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[33]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[34]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[36]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[37]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[39]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[40]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[41]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[42]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[43]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[44]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T07:31:59.020Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, year not found!.","timestamp":"2017-12-07T07:31:59.020Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T07:31:59.022Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T07:31:59.022Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T07:31:59.022Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T07:31:59.022Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[27]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[28]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[30]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[31]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[33]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[34]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[36]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[37]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[39]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[40]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[41]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[42]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[43]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[44]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T07:31:59.022Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, displacement not found!.","timestamp":"2017-12-07T07:31:59.022Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T07:31:59.024Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T07:31:59.024Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T07:31:59.024Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T07:31:59.024Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[27]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[28]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[30]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[31]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[33]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[34]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[36]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[37]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[39]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[40]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[41]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[42]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[43]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[44]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T07:31:59.024Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, color not found!.","timestamp":"2017-12-07T07:31:59.024Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T07:31:59.025Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T07:31:59.025Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T07:31:59.026Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T07:31:59.026Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[7]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[46]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[47]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[6][0]++;\n    let requestedBike = /* istanbul ignore next */(cov_ratewsw8z.s[48]++, getBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[49]++;\n    if (requestedBike)\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][0]++;cov_ratewsw8z.s[50]++;sendJSON(res, 200, requestedBike);} else\n\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][1]++;cov_ratewsw8z.s[51]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[6][1]++;cov_ratewsw8z.s[52]++;sendJSON(res, 200, trialsBikes);}\n}","timestamp":"2017-12-07T07:31:59.026Z"}
{"level":"info","message":"Responding with a 200 code and the following data:","timestamp":"2017-12-07T07:31:59.026Z"}
[{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"b5966be0-db20-11e7-9071-c717e4f7eec9","timestamp":"2017-12-07T07:31:59.006Z"}]
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T07:31:59.028Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes?id=b5966be0-db20-11e7-9071-c717e4f7eec9\"","timestamp":"2017-12-07T07:31:59.028Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=b5966be0-db20-11e7-9071-c717e4f7eec9\",\"query\":{\"id\":\"b5966be0-db20-11e7-9071-c717e4f7eec9\"},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes?id=b5966be0-db20-11e7-9071-c717e4f7eec9\",\"href\":\"/api/trials-bikes?id=b5966be0-db20-11e7-9071-c717e4f7eec9\"}","timestamp":"2017-12-07T07:31:59.029Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T07:31:59.029Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[7]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[46]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[47]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[6][0]++;\n    let requestedBike = /* istanbul ignore next */(cov_ratewsw8z.s[48]++, getBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[49]++;\n    if (requestedBike)\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][0]++;cov_ratewsw8z.s[50]++;sendJSON(res, 200, requestedBike);} else\n\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][1]++;cov_ratewsw8z.s[51]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[6][1]++;cov_ratewsw8z.s[52]++;sendJSON(res, 200, trialsBikes);}\n}","timestamp":"2017-12-07T07:31:59.029Z"}
{"level":"info","message":"Responding with a 200 code and the following data:","timestamp":"2017-12-07T07:31:59.029Z"}
{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"b5966be0-db20-11e7-9071-c717e4f7eec9","timestamp":"2017-12-07T07:31:59.029Z","level":"info","message":""}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T07:31:59.031Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes?id=hamburger\"","timestamp":"2017-12-07T07:31:59.031Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=hamburger\",\"query\":{\"id\":\"hamburger\"},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes?id=hamburger\",\"href\":\"/api/trials-bikes?id=hamburger\"}","timestamp":"2017-12-07T07:31:59.031Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T07:31:59.031Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[7]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[46]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[47]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[6][0]++;\n    let requestedBike = /* istanbul ignore next */(cov_ratewsw8z.s[48]++, getBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[49]++;\n    if (requestedBike)\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][0]++;cov_ratewsw8z.s[50]++;sendJSON(res, 200, requestedBike);} else\n\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][1]++;cov_ratewsw8z.s[51]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[6][1]++;cov_ratewsw8z.s[52]++;sendJSON(res, 200, trialsBikes);}\n}","timestamp":"2017-12-07T07:31:59.031Z"}
{"level":"info","message":"Responding with a 404 code due to No bike with id \"hamburger\"..","timestamp":"2017-12-07T07:31:59.031Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T07:31:59.033Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes?id=b5966be0-db20-11e7-9071-c717e4f7eec9\"","timestamp":"2017-12-07T07:31:59.033Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=b5966be0-db20-11e7-9071-c717e4f7eec9\",\"query\":{\"id\":\"b5966be0-db20-11e7-9071-c717e4f7eec9\"},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes?id=b5966be0-db20-11e7-9071-c717e4f7eec9\",\"href\":\"/api/trials-bikes?id=b5966be0-db20-11e7-9071-c717e4f7eec9\"}","timestamp":"2017-12-07T07:31:59.033Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T07:31:59.033Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[8]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[54]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[55]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[8][0]++;\n    let removedBike = /* istanbul ignore next */(cov_ratewsw8z.s[56]++, removeBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[57]++;\n    if (removedBike) {/* istanbul ignore next */cov_ratewsw8z.b[9][0]++;cov_ratewsw8z.s[58]++;\n      logger.log('info', `Bike deleted, responding with a 204 code.`); /* istanbul ignore next */cov_ratewsw8z.s[59]++;\n      res.writeHead(204); /* istanbul ignore next */cov_ratewsw8z.s[60]++;\n      res.end();\n    } else\n      {/* istanbul ignore next */cov_ratewsw8z.b[9][1]++;cov_ratewsw8z.s[61]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[8][1]++;cov_ratewsw8z.s[62]++;sendBadStatus(res, 400, `bad request, no id.`);}\n}","timestamp":"2017-12-07T07:31:59.033Z"}
{"level":"info","message":"Bike deleted, responding with a 204 code.","timestamp":"2017-12-07T07:31:59.033Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T07:31:59.035Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T07:31:59.035Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T07:31:59.035Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T07:31:59.035Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[8]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[54]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[55]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[8][0]++;\n    let removedBike = /* istanbul ignore next */(cov_ratewsw8z.s[56]++, removeBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[57]++;\n    if (removedBike) {/* istanbul ignore next */cov_ratewsw8z.b[9][0]++;cov_ratewsw8z.s[58]++;\n      logger.log('info', `Bike deleted, responding with a 204 code.`); /* istanbul ignore next */cov_ratewsw8z.s[59]++;\n      res.writeHead(204); /* istanbul ignore next */cov_ratewsw8z.s[60]++;\n      res.end();\n    } else\n      {/* istanbul ignore next */cov_ratewsw8z.b[9][1]++;cov_ratewsw8z.s[61]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[8][1]++;cov_ratewsw8z.s[62]++;sendBadStatus(res, 400, `bad request, no id.`);}\n}","timestamp":"2017-12-07T07:31:59.035Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, no id..","timestamp":"2017-12-07T07:31:59.035Z"}
{"level":"info","message":"Adding a POST url and callback.","timestamp":"2017-12-07T07:33:38.567Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-07T07:33:38.568Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[27]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[28]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[30]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[31]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[33]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[34]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[36]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[37]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[39]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[40]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[41]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[42]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[43]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[44]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T07:33:38.568Z"}
{"level":"info","message":"Adding a GET url and callback.","timestamp":"2017-12-07T07:33:38.568Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-07T07:33:38.568Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[7]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[46]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[47]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[6][0]++;\n    let requestedBike = /* istanbul ignore next */(cov_ratewsw8z.s[48]++, getBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[49]++;\n    if (requestedBike)\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][0]++;cov_ratewsw8z.s[50]++;sendJSON(res, 200, requestedBike);} else\n\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][1]++;cov_ratewsw8z.s[51]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[6][1]++;cov_ratewsw8z.s[52]++;sendJSON(res, 200, trialsBikes);}\n}","timestamp":"2017-12-07T07:33:38.568Z"}
{"level":"info","message":"Adding a DELETE url and callback.","timestamp":"2017-12-07T07:33:38.568Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-07T07:33:38.568Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[8]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[54]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[55]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[8][0]++;\n    let removedBike = /* istanbul ignore next */(cov_ratewsw8z.s[56]++, removeBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[57]++;\n    if (removedBike) {/* istanbul ignore next */cov_ratewsw8z.b[9][0]++;cov_ratewsw8z.s[58]++;\n      logger.log('info', `Bike deleted, responding with a 204 code.`); /* istanbul ignore next */cov_ratewsw8z.s[59]++;\n      res.writeHead(204); /* istanbul ignore next */cov_ratewsw8z.s[60]++;\n      res.end();\n    } else\n      {/* istanbul ignore next */cov_ratewsw8z.b[9][1]++;cov_ratewsw8z.s[61]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[8][1]++;cov_ratewsw8z.s[62]++;sendBadStatus(res, 400, `bad request, no id.`);}\n}","timestamp":"2017-12-07T07:33:38.568Z"}
{"level":"info","message":"Server is up on port 3000.","timestamp":"2017-12-07T07:33:38.609Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T07:33:38.650Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T07:33:38.650Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T07:33:38.650Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T07:33:38.651Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[27]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[28]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[30]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[31]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[33]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[34]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[36]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[37]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[39]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[40]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[41]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[42]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[43]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[44]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T07:33:38.651Z"}
{"level":"info","message":"Responding with a 200 code and the following data:","timestamp":"2017-12-07T07:33:38.652Z"}
{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"f0fb0ab0-db20-11e7-a05c-c7b4f7993c1e","timestamp":"2017-12-07T07:33:38.652Z","level":"info","message":""}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T07:33:38.659Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T07:33:38.659Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T07:33:38.659Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T07:33:38.660Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.req.on (/Users/robertreed/Documents/programming/cf/401/lab/08-09-vanilla-rest-server/lab-rob/lib/req-parser.js:25:27)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-07T07:33:38.660Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T07:33:38.662Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T07:33:38.662Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T07:33:38.662Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T07:33:38.662Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[27]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[28]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[30]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[31]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[33]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[34]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[36]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[37]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[39]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[40]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[41]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[42]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[43]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[44]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T07:33:38.662Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, make not found!.","timestamp":"2017-12-07T07:33:38.662Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T07:33:38.664Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T07:33:38.664Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T07:33:38.664Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T07:33:38.664Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[27]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[28]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[30]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[31]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[33]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[34]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[36]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[37]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[39]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[40]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[41]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[42]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[43]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[44]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T07:33:38.664Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, model not found!.","timestamp":"2017-12-07T07:33:38.664Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T07:33:38.666Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T07:33:38.666Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T07:33:38.666Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T07:33:38.666Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[27]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[28]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[30]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[31]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[33]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[34]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[36]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[37]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[39]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[40]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[41]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[42]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[43]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[44]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T07:33:38.666Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, year not found!.","timestamp":"2017-12-07T07:33:38.666Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T07:33:38.667Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T07:33:38.668Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T07:33:38.668Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T07:33:38.668Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[27]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[28]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[30]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[31]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[33]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[34]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[36]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[37]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[39]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[40]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[41]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[42]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[43]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[44]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T07:33:38.668Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, displacement not found!.","timestamp":"2017-12-07T07:33:38.668Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T07:33:38.669Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T07:33:38.669Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T07:33:38.669Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T07:33:38.670Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[27]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[28]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[30]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[31]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[33]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[34]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[36]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[37]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[39]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[40]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[41]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[42]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[43]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[44]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T07:33:38.670Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, color not found!.","timestamp":"2017-12-07T07:33:38.670Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T07:33:38.671Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T07:33:38.671Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T07:33:38.671Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T07:33:38.671Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[7]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[46]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[47]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[6][0]++;\n    let requestedBike = /* istanbul ignore next */(cov_ratewsw8z.s[48]++, getBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[49]++;\n    if (requestedBike)\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][0]++;cov_ratewsw8z.s[50]++;sendJSON(res, 200, requestedBike);} else\n\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][1]++;cov_ratewsw8z.s[51]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[6][1]++;cov_ratewsw8z.s[52]++;sendJSON(res, 200, trialsBikes);}\n}","timestamp":"2017-12-07T07:33:38.671Z"}
{"level":"info","message":"Responding with a 200 code and the following data:","timestamp":"2017-12-07T07:33:38.672Z"}
[{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"f0fb0ab0-db20-11e7-a05c-c7b4f7993c1e","timestamp":"2017-12-07T07:33:38.652Z"}]
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T07:33:38.674Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes?id=f0fb0ab0-db20-11e7-a05c-c7b4f7993c1e\"","timestamp":"2017-12-07T07:33:38.674Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=f0fb0ab0-db20-11e7-a05c-c7b4f7993c1e\",\"query\":{\"id\":\"f0fb0ab0-db20-11e7-a05c-c7b4f7993c1e\"},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes?id=f0fb0ab0-db20-11e7-a05c-c7b4f7993c1e\",\"href\":\"/api/trials-bikes?id=f0fb0ab0-db20-11e7-a05c-c7b4f7993c1e\"}","timestamp":"2017-12-07T07:33:38.674Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T07:33:38.674Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[7]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[46]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[47]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[6][0]++;\n    let requestedBike = /* istanbul ignore next */(cov_ratewsw8z.s[48]++, getBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[49]++;\n    if (requestedBike)\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][0]++;cov_ratewsw8z.s[50]++;sendJSON(res, 200, requestedBike);} else\n\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][1]++;cov_ratewsw8z.s[51]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[6][1]++;cov_ratewsw8z.s[52]++;sendJSON(res, 200, trialsBikes);}\n}","timestamp":"2017-12-07T07:33:38.674Z"}
{"level":"info","message":"Responding with a 200 code and the following data:","timestamp":"2017-12-07T07:33:38.674Z"}
{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"f0fb0ab0-db20-11e7-a05c-c7b4f7993c1e","timestamp":"2017-12-07T07:33:38.674Z","level":"info","message":""}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T07:33:38.676Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes?id=hamburger\"","timestamp":"2017-12-07T07:33:38.676Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=hamburger\",\"query\":{\"id\":\"hamburger\"},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes?id=hamburger\",\"href\":\"/api/trials-bikes?id=hamburger\"}","timestamp":"2017-12-07T07:33:38.676Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T07:33:38.676Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[7]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[46]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[47]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[6][0]++;\n    let requestedBike = /* istanbul ignore next */(cov_ratewsw8z.s[48]++, getBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[49]++;\n    if (requestedBike)\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][0]++;cov_ratewsw8z.s[50]++;sendJSON(res, 200, requestedBike);} else\n\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][1]++;cov_ratewsw8z.s[51]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[6][1]++;cov_ratewsw8z.s[52]++;sendJSON(res, 200, trialsBikes);}\n}","timestamp":"2017-12-07T07:33:38.676Z"}
{"level":"info","message":"Responding with a 404 code due to No bike with id \"hamburger\"..","timestamp":"2017-12-07T07:33:38.676Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T07:33:38.678Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes?id=f0fb0ab0-db20-11e7-a05c-c7b4f7993c1e\"","timestamp":"2017-12-07T07:33:38.678Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=f0fb0ab0-db20-11e7-a05c-c7b4f7993c1e\",\"query\":{\"id\":\"f0fb0ab0-db20-11e7-a05c-c7b4f7993c1e\"},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes?id=f0fb0ab0-db20-11e7-a05c-c7b4f7993c1e\",\"href\":\"/api/trials-bikes?id=f0fb0ab0-db20-11e7-a05c-c7b4f7993c1e\"}","timestamp":"2017-12-07T07:33:38.678Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T07:33:38.678Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[8]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[54]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[55]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[8][0]++;\n    let removedBike = /* istanbul ignore next */(cov_ratewsw8z.s[56]++, removeBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[57]++;\n    if (removedBike) {/* istanbul ignore next */cov_ratewsw8z.b[9][0]++;cov_ratewsw8z.s[58]++;\n      logger.log('info', `Bike deleted, responding with a 204 code.`); /* istanbul ignore next */cov_ratewsw8z.s[59]++;\n      res.writeHead(204); /* istanbul ignore next */cov_ratewsw8z.s[60]++;\n      res.end();\n    } else\n      {/* istanbul ignore next */cov_ratewsw8z.b[9][1]++;cov_ratewsw8z.s[61]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[8][1]++;cov_ratewsw8z.s[62]++;sendBadStatus(res, 400, `bad request, no id.`);}\n}","timestamp":"2017-12-07T07:33:38.678Z"}
{"level":"info","message":"Bike deleted, responding with a 204 code.","timestamp":"2017-12-07T07:33:38.678Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T07:33:38.680Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T07:33:38.680Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T07:33:38.680Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T07:33:38.680Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[8]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[54]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[55]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[8][0]++;\n    let removedBike = /* istanbul ignore next */(cov_ratewsw8z.s[56]++, removeBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[57]++;\n    if (removedBike) {/* istanbul ignore next */cov_ratewsw8z.b[9][0]++;cov_ratewsw8z.s[58]++;\n      logger.log('info', `Bike deleted, responding with a 204 code.`); /* istanbul ignore next */cov_ratewsw8z.s[59]++;\n      res.writeHead(204); /* istanbul ignore next */cov_ratewsw8z.s[60]++;\n      res.end();\n    } else\n      {/* istanbul ignore next */cov_ratewsw8z.b[9][1]++;cov_ratewsw8z.s[61]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[8][1]++;cov_ratewsw8z.s[62]++;sendBadStatus(res, 400, `bad request, no id.`);}\n}","timestamp":"2017-12-07T07:33:38.680Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, no id..","timestamp":"2017-12-07T07:33:38.680Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T07:33:38.682Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes?id=hotdogs\"","timestamp":"2017-12-07T07:33:38.682Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=hotdogs\",\"query\":{\"id\":\"hotdogs\"},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes?id=hotdogs\",\"href\":\"/api/trials-bikes?id=hotdogs\"}","timestamp":"2017-12-07T07:33:38.682Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T07:33:38.682Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[8]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[54]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[55]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[8][0]++;\n    let removedBike = /* istanbul ignore next */(cov_ratewsw8z.s[56]++, removeBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[57]++;\n    if (removedBike) {/* istanbul ignore next */cov_ratewsw8z.b[9][0]++;cov_ratewsw8z.s[58]++;\n      logger.log('info', `Bike deleted, responding with a 204 code.`); /* istanbul ignore next */cov_ratewsw8z.s[59]++;\n      res.writeHead(204); /* istanbul ignore next */cov_ratewsw8z.s[60]++;\n      res.end();\n    } else\n      {/* istanbul ignore next */cov_ratewsw8z.b[9][1]++;cov_ratewsw8z.s[61]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[8][1]++;cov_ratewsw8z.s[62]++;sendBadStatus(res, 400, `bad request, no id.`);}\n}","timestamp":"2017-12-07T07:33:38.682Z"}
{"level":"info","message":"Responding with a 404 code due to No bike with id \"hotdogs\"..","timestamp":"2017-12-07T07:33:38.682Z"}
{"level":"info","message":"Adding a POST url and callback.","timestamp":"2017-12-07T16:40:27.977Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-07T16:40:27.978Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[27]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[28]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[30]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[31]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[33]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[34]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[36]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[37]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[39]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[40]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[41]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[42]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[43]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[44]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T16:40:27.978Z"}
{"level":"info","message":"Adding a GET url and callback.","timestamp":"2017-12-07T16:40:27.978Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-07T16:40:27.978Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[7]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[46]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[47]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[6][0]++;\n    let requestedBike = /* istanbul ignore next */(cov_ratewsw8z.s[48]++, getBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[49]++;\n    if (requestedBike)\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][0]++;cov_ratewsw8z.s[50]++;sendJSON(res, 200, requestedBike);} else\n\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][1]++;cov_ratewsw8z.s[51]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[6][1]++;cov_ratewsw8z.s[52]++;sendJSON(res, 200, trialsBikes);}\n}","timestamp":"2017-12-07T16:40:27.978Z"}
{"level":"info","message":"Adding a DELETE url and callback.","timestamp":"2017-12-07T16:40:27.978Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-07T16:40:27.978Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[8]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[54]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[55]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[8][0]++;\n    let removedBike = /* istanbul ignore next */(cov_ratewsw8z.s[56]++, removeBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[57]++;\n    if (removedBike) {/* istanbul ignore next */cov_ratewsw8z.b[9][0]++;cov_ratewsw8z.s[58]++;\n      logger.log('info', `Bike deleted, responding with a 204 code.`); /* istanbul ignore next */cov_ratewsw8z.s[59]++;\n      res.writeHead(204); /* istanbul ignore next */cov_ratewsw8z.s[60]++;\n      res.end();\n    } else\n      {/* istanbul ignore next */cov_ratewsw8z.b[9][1]++;cov_ratewsw8z.s[61]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[8][1]++;cov_ratewsw8z.s[62]++;sendBadStatus(res, 400, `bad request, no id.`);}\n}","timestamp":"2017-12-07T16:40:27.978Z"}
{"level":"info","message":"Server is up on port 3000.","timestamp":"2017-12-07T16:40:28.048Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T16:40:28.085Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T16:40:28.086Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T16:40:28.086Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T16:40:28.086Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[27]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[28]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[30]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[31]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[33]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[34]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[36]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[37]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[39]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[40]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[41]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[42]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[43]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[44]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T16:40:28.086Z"}
{"level":"info","message":"Responding with a 200 code and the following data:","timestamp":"2017-12-07T16:40:28.087Z"}
{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"54edac70-db6d-11e7-a866-cf6017ffe457","timestamp":"2017-12-07T16:40:28.087Z","level":"info","message":""}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T16:40:28.094Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T16:40:28.095Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T16:40:28.095Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T16:40:28.095Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.req.on (/Users/robertreed/Documents/programming/cf/401/lab/08-09-vanilla-rest-server/lab-rob/lib/req-parser.js:25:27)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-07T16:40:28.095Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T16:40:28.097Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T16:40:28.097Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T16:40:28.097Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T16:40:28.097Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[27]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[28]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[30]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[31]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[33]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[34]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[36]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[37]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[39]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[40]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[41]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[42]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[43]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[44]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T16:40:28.097Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, make not found!.","timestamp":"2017-12-07T16:40:28.098Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T16:40:28.099Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T16:40:28.099Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T16:40:28.099Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T16:40:28.099Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[27]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[28]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[30]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[31]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[33]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[34]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[36]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[37]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[39]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[40]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[41]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[42]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[43]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[44]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T16:40:28.099Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, model not found!.","timestamp":"2017-12-07T16:40:28.099Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T16:40:28.101Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T16:40:28.101Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T16:40:28.101Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T16:40:28.102Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[27]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[28]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[30]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[31]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[33]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[34]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[36]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[37]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[39]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[40]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[41]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[42]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[43]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[44]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T16:40:28.102Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, year not found!.","timestamp":"2017-12-07T16:40:28.102Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T16:40:28.103Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T16:40:28.103Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T16:40:28.103Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T16:40:28.104Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[27]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[28]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[30]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[31]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[33]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[34]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[36]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[37]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[39]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[40]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[41]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[42]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[43]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[44]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T16:40:28.104Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, displacement not found!.","timestamp":"2017-12-07T16:40:28.104Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T16:40:28.105Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T16:40:28.105Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T16:40:28.105Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T16:40:28.105Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[27]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[28]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[30]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[31]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[33]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[34]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[36]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[37]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[39]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[40]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[41]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[42]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[43]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[44]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T16:40:28.105Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, color not found!.","timestamp":"2017-12-07T16:40:28.106Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T16:40:28.107Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T16:40:28.107Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T16:40:28.107Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T16:40:28.107Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[7]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[46]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[47]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[6][0]++;\n    let requestedBike = /* istanbul ignore next */(cov_ratewsw8z.s[48]++, getBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[49]++;\n    if (requestedBike)\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][0]++;cov_ratewsw8z.s[50]++;sendJSON(res, 200, requestedBike);} else\n\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][1]++;cov_ratewsw8z.s[51]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[6][1]++;cov_ratewsw8z.s[52]++;sendJSON(res, 200, trialsBikes);}\n}","timestamp":"2017-12-07T16:40:28.107Z"}
{"level":"info","message":"Responding with a 200 code and the following data:","timestamp":"2017-12-07T16:40:28.107Z"}
[{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"54edac70-db6d-11e7-a866-cf6017ffe457","timestamp":"2017-12-07T16:40:28.087Z"}]
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T16:40:28.109Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes?id=54edac70-db6d-11e7-a866-cf6017ffe457\"","timestamp":"2017-12-07T16:40:28.109Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=54edac70-db6d-11e7-a866-cf6017ffe457\",\"query\":{\"id\":\"54edac70-db6d-11e7-a866-cf6017ffe457\"},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes?id=54edac70-db6d-11e7-a866-cf6017ffe457\",\"href\":\"/api/trials-bikes?id=54edac70-db6d-11e7-a866-cf6017ffe457\"}","timestamp":"2017-12-07T16:40:28.109Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T16:40:28.110Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[7]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[46]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[47]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[6][0]++;\n    let requestedBike = /* istanbul ignore next */(cov_ratewsw8z.s[48]++, getBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[49]++;\n    if (requestedBike)\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][0]++;cov_ratewsw8z.s[50]++;sendJSON(res, 200, requestedBike);} else\n\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][1]++;cov_ratewsw8z.s[51]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[6][1]++;cov_ratewsw8z.s[52]++;sendJSON(res, 200, trialsBikes);}\n}","timestamp":"2017-12-07T16:40:28.110Z"}
{"level":"info","message":"Responding with a 200 code and the following data:","timestamp":"2017-12-07T16:40:28.110Z"}
{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"54edac70-db6d-11e7-a866-cf6017ffe457","timestamp":"2017-12-07T16:40:28.110Z","level":"info","message":""}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T16:40:28.111Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes?id=hamburger\"","timestamp":"2017-12-07T16:40:28.111Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=hamburger\",\"query\":{\"id\":\"hamburger\"},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes?id=hamburger\",\"href\":\"/api/trials-bikes?id=hamburger\"}","timestamp":"2017-12-07T16:40:28.111Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T16:40:28.112Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[7]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[46]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[47]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[6][0]++;\n    let requestedBike = /* istanbul ignore next */(cov_ratewsw8z.s[48]++, getBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[49]++;\n    if (requestedBike)\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][0]++;cov_ratewsw8z.s[50]++;sendJSON(res, 200, requestedBike);} else\n\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][1]++;cov_ratewsw8z.s[51]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[6][1]++;cov_ratewsw8z.s[52]++;sendJSON(res, 200, trialsBikes);}\n}","timestamp":"2017-12-07T16:40:28.112Z"}
{"level":"info","message":"Responding with a 404 code due to No bike with id \"hamburger\"..","timestamp":"2017-12-07T16:40:28.112Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T16:40:28.113Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes?id=54edac70-db6d-11e7-a866-cf6017ffe457\"","timestamp":"2017-12-07T16:40:28.113Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=54edac70-db6d-11e7-a866-cf6017ffe457\",\"query\":{\"id\":\"54edac70-db6d-11e7-a866-cf6017ffe457\"},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes?id=54edac70-db6d-11e7-a866-cf6017ffe457\",\"href\":\"/api/trials-bikes?id=54edac70-db6d-11e7-a866-cf6017ffe457\"}","timestamp":"2017-12-07T16:40:28.113Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T16:40:28.113Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[8]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[54]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[55]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[8][0]++;\n    let removedBike = /* istanbul ignore next */(cov_ratewsw8z.s[56]++, removeBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[57]++;\n    if (removedBike) {/* istanbul ignore next */cov_ratewsw8z.b[9][0]++;cov_ratewsw8z.s[58]++;\n      logger.log('info', `Bike deleted, responding with a 204 code.`); /* istanbul ignore next */cov_ratewsw8z.s[59]++;\n      res.writeHead(204); /* istanbul ignore next */cov_ratewsw8z.s[60]++;\n      res.end();\n    } else\n      {/* istanbul ignore next */cov_ratewsw8z.b[9][1]++;cov_ratewsw8z.s[61]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[8][1]++;cov_ratewsw8z.s[62]++;sendBadStatus(res, 400, `bad request, no id.`);}\n}","timestamp":"2017-12-07T16:40:28.113Z"}
{"level":"info","message":"Bike deleted, responding with a 204 code.","timestamp":"2017-12-07T16:40:28.114Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T16:40:28.115Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T16:40:28.115Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T16:40:28.115Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T16:40:28.115Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[8]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[54]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[55]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[8][0]++;\n    let removedBike = /* istanbul ignore next */(cov_ratewsw8z.s[56]++, removeBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[57]++;\n    if (removedBike) {/* istanbul ignore next */cov_ratewsw8z.b[9][0]++;cov_ratewsw8z.s[58]++;\n      logger.log('info', `Bike deleted, responding with a 204 code.`); /* istanbul ignore next */cov_ratewsw8z.s[59]++;\n      res.writeHead(204); /* istanbul ignore next */cov_ratewsw8z.s[60]++;\n      res.end();\n    } else\n      {/* istanbul ignore next */cov_ratewsw8z.b[9][1]++;cov_ratewsw8z.s[61]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[8][1]++;cov_ratewsw8z.s[62]++;sendBadStatus(res, 400, `bad request, no id.`);}\n}","timestamp":"2017-12-07T16:40:28.115Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, no id..","timestamp":"2017-12-07T16:40:28.115Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T16:40:28.117Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes?id=hotdogs\"","timestamp":"2017-12-07T16:40:28.117Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=hotdogs\",\"query\":{\"id\":\"hotdogs\"},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes?id=hotdogs\",\"href\":\"/api/trials-bikes?id=hotdogs\"}","timestamp":"2017-12-07T16:40:28.117Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T16:40:28.118Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[8]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[54]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[55]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[8][0]++;\n    let removedBike = /* istanbul ignore next */(cov_ratewsw8z.s[56]++, removeBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[57]++;\n    if (removedBike) {/* istanbul ignore next */cov_ratewsw8z.b[9][0]++;cov_ratewsw8z.s[58]++;\n      logger.log('info', `Bike deleted, responding with a 204 code.`); /* istanbul ignore next */cov_ratewsw8z.s[59]++;\n      res.writeHead(204); /* istanbul ignore next */cov_ratewsw8z.s[60]++;\n      res.end();\n    } else\n      {/* istanbul ignore next */cov_ratewsw8z.b[9][1]++;cov_ratewsw8z.s[61]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[8][1]++;cov_ratewsw8z.s[62]++;sendBadStatus(res, 400, `bad request, no id.`);}\n}","timestamp":"2017-12-07T16:40:28.118Z"}
{"level":"info","message":"Responding with a 404 code due to No bike with id \"hotdogs\"..","timestamp":"2017-12-07T16:40:28.118Z"}
{"level":"info","message":"Adding a POST url and callback.","timestamp":"2017-12-07T16:40:45.558Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-07T16:40:45.559Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[27]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[28]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[30]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[31]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[33]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[34]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[36]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[37]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[39]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[40]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[41]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[42]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[43]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[44]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T16:40:45.559Z"}
{"level":"info","message":"Adding a GET url and callback.","timestamp":"2017-12-07T16:40:45.559Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-07T16:40:45.559Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[7]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[46]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[47]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[6][0]++;\n    let requestedBike = /* istanbul ignore next */(cov_ratewsw8z.s[48]++, getBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[49]++;\n    if (requestedBike)\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][0]++;cov_ratewsw8z.s[50]++;sendJSON(res, 200, requestedBike);} else\n\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][1]++;cov_ratewsw8z.s[51]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[6][1]++;cov_ratewsw8z.s[52]++;sendJSON(res, 200, trialsBikes);}\n}","timestamp":"2017-12-07T16:40:45.559Z"}
{"level":"info","message":"Adding a DELETE url and callback.","timestamp":"2017-12-07T16:40:45.559Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-07T16:40:45.559Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[8]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[54]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[55]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[8][0]++;\n    let removedBike = /* istanbul ignore next */(cov_ratewsw8z.s[56]++, removeBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[57]++;\n    if (removedBike) {/* istanbul ignore next */cov_ratewsw8z.b[9][0]++;cov_ratewsw8z.s[58]++;\n      logger.log('info', `Bike deleted, responding with a 204 code.`); /* istanbul ignore next */cov_ratewsw8z.s[59]++;\n      res.writeHead(204); /* istanbul ignore next */cov_ratewsw8z.s[60]++;\n      res.end();\n    } else\n      {/* istanbul ignore next */cov_ratewsw8z.b[9][1]++;cov_ratewsw8z.s[61]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[8][1]++;cov_ratewsw8z.s[62]++;sendBadStatus(res, 400, `bad request, no id.`);}\n}","timestamp":"2017-12-07T16:40:45.559Z"}
{"level":"info","message":"Server is up on port 3000.","timestamp":"2017-12-07T16:40:45.603Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T16:40:45.643Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T16:40:45.643Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T16:40:45.644Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T16:40:45.644Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[27]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[28]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[30]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[31]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[33]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[34]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[36]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[37]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[39]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[40]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[41]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[42]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[43]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[44]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T16:40:45.644Z"}
{"level":"info","message":"Responding with a 200 code and the following data:","timestamp":"2017-12-07T16:40:45.645Z"}
{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"5f64cfd0-db6d-11e7-8b38-f19083587084","timestamp":"2017-12-07T16:40:45.645Z","level":"info","message":""}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T16:40:45.652Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T16:40:45.653Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T16:40:45.653Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T16:40:45.653Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.req.on (/Users/robertreed/Documents/programming/cf/401/lab/08-09-vanilla-rest-server/lab-rob/lib/req-parser.js:25:27)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-07T16:40:45.653Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T16:40:45.655Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T16:40:45.655Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T16:40:45.656Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T16:40:45.656Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[27]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[28]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[30]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[31]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[33]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[34]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[36]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[37]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[39]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[40]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[41]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[42]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[43]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[44]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T16:40:45.656Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, make not found!.","timestamp":"2017-12-07T16:40:45.656Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T16:40:45.658Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T16:40:45.658Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T16:40:45.658Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T16:40:45.658Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[27]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[28]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[30]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[31]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[33]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[34]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[36]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[37]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[39]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[40]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[41]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[42]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[43]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[44]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T16:40:45.658Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, model not found!.","timestamp":"2017-12-07T16:40:45.658Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T16:40:45.659Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T16:40:45.660Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T16:40:45.660Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T16:40:45.660Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[27]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[28]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[30]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[31]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[33]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[34]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[36]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[37]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[39]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[40]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[41]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[42]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[43]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[44]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T16:40:45.660Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, year not found!.","timestamp":"2017-12-07T16:40:45.660Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T16:40:45.661Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T16:40:45.661Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T16:40:45.661Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T16:40:45.662Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[27]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[28]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[30]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[31]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[33]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[34]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[36]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[37]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[39]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[40]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[41]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[42]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[43]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[44]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T16:40:45.662Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, displacement not found!.","timestamp":"2017-12-07T16:40:45.662Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T16:40:45.663Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T16:40:45.663Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T16:40:45.663Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T16:40:45.664Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[27]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[28]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[30]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[31]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[33]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[34]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[36]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[37]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[39]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[40]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[41]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[42]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[43]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[44]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T16:40:45.664Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, color not found!.","timestamp":"2017-12-07T16:40:45.664Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T16:40:45.666Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T16:40:45.666Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T16:40:45.666Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T16:40:45.666Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[7]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[46]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[47]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[6][0]++;\n    let requestedBike = /* istanbul ignore next */(cov_ratewsw8z.s[48]++, getBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[49]++;\n    if (requestedBike)\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][0]++;cov_ratewsw8z.s[50]++;sendJSON(res, 200, requestedBike);} else\n\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][1]++;cov_ratewsw8z.s[51]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[6][1]++;cov_ratewsw8z.s[52]++;sendJSON(res, 200, trialsBikes);}\n}","timestamp":"2017-12-07T16:40:45.666Z"}
{"level":"info","message":"Responding with a 200 code and the following data:","timestamp":"2017-12-07T16:40:45.666Z"}
[{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"5f64cfd0-db6d-11e7-8b38-f19083587084","timestamp":"2017-12-07T16:40:45.645Z"}]
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T16:40:45.668Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes?id=5f64cfd0-db6d-11e7-8b38-f19083587084\"","timestamp":"2017-12-07T16:40:45.668Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=5f64cfd0-db6d-11e7-8b38-f19083587084\",\"query\":{\"id\":\"5f64cfd0-db6d-11e7-8b38-f19083587084\"},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes?id=5f64cfd0-db6d-11e7-8b38-f19083587084\",\"href\":\"/api/trials-bikes?id=5f64cfd0-db6d-11e7-8b38-f19083587084\"}","timestamp":"2017-12-07T16:40:45.669Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T16:40:45.669Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[7]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[46]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[47]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[6][0]++;\n    let requestedBike = /* istanbul ignore next */(cov_ratewsw8z.s[48]++, getBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[49]++;\n    if (requestedBike)\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][0]++;cov_ratewsw8z.s[50]++;sendJSON(res, 200, requestedBike);} else\n\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][1]++;cov_ratewsw8z.s[51]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[6][1]++;cov_ratewsw8z.s[52]++;sendJSON(res, 200, trialsBikes);}\n}","timestamp":"2017-12-07T16:40:45.669Z"}
{"level":"info","message":"Responding with a 200 code and the following data:","timestamp":"2017-12-07T16:40:45.669Z"}
{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"5f64cfd0-db6d-11e7-8b38-f19083587084","timestamp":"2017-12-07T16:40:45.669Z","level":"info","message":""}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T16:40:45.671Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes?id=hamburger\"","timestamp":"2017-12-07T16:40:45.671Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=hamburger\",\"query\":{\"id\":\"hamburger\"},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes?id=hamburger\",\"href\":\"/api/trials-bikes?id=hamburger\"}","timestamp":"2017-12-07T16:40:45.671Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T16:40:45.671Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[7]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[46]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[47]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[6][0]++;\n    let requestedBike = /* istanbul ignore next */(cov_ratewsw8z.s[48]++, getBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[49]++;\n    if (requestedBike)\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][0]++;cov_ratewsw8z.s[50]++;sendJSON(res, 200, requestedBike);} else\n\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][1]++;cov_ratewsw8z.s[51]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[6][1]++;cov_ratewsw8z.s[52]++;sendJSON(res, 200, trialsBikes);}\n}","timestamp":"2017-12-07T16:40:45.671Z"}
{"level":"info","message":"Responding with a 404 code due to No bike with id \"hamburger\"..","timestamp":"2017-12-07T16:40:45.671Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T16:40:45.672Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes?id=5f64cfd0-db6d-11e7-8b38-f19083587084\"","timestamp":"2017-12-07T16:40:45.673Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=5f64cfd0-db6d-11e7-8b38-f19083587084\",\"query\":{\"id\":\"5f64cfd0-db6d-11e7-8b38-f19083587084\"},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes?id=5f64cfd0-db6d-11e7-8b38-f19083587084\",\"href\":\"/api/trials-bikes?id=5f64cfd0-db6d-11e7-8b38-f19083587084\"}","timestamp":"2017-12-07T16:40:45.673Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T16:40:45.673Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[8]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[54]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[55]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[8][0]++;\n    let removedBike = /* istanbul ignore next */(cov_ratewsw8z.s[56]++, removeBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[57]++;\n    if (removedBike) {/* istanbul ignore next */cov_ratewsw8z.b[9][0]++;cov_ratewsw8z.s[58]++;\n      logger.log('info', `Bike deleted, responding with a 204 code.`); /* istanbul ignore next */cov_ratewsw8z.s[59]++;\n      res.writeHead(204); /* istanbul ignore next */cov_ratewsw8z.s[60]++;\n      res.end();\n    } else\n      {/* istanbul ignore next */cov_ratewsw8z.b[9][1]++;cov_ratewsw8z.s[61]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[8][1]++;cov_ratewsw8z.s[62]++;sendBadStatus(res, 400, `bad request, no id.`);}\n}","timestamp":"2017-12-07T16:40:45.673Z"}
{"level":"info","message":"Bike deleted, responding with a 204 code.","timestamp":"2017-12-07T16:40:45.673Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T16:40:45.675Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T16:40:45.675Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T16:40:45.675Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T16:40:45.675Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[8]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[54]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[55]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[8][0]++;\n    let removedBike = /* istanbul ignore next */(cov_ratewsw8z.s[56]++, removeBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[57]++;\n    if (removedBike) {/* istanbul ignore next */cov_ratewsw8z.b[9][0]++;cov_ratewsw8z.s[58]++;\n      logger.log('info', `Bike deleted, responding with a 204 code.`); /* istanbul ignore next */cov_ratewsw8z.s[59]++;\n      res.writeHead(204); /* istanbul ignore next */cov_ratewsw8z.s[60]++;\n      res.end();\n    } else\n      {/* istanbul ignore next */cov_ratewsw8z.b[9][1]++;cov_ratewsw8z.s[61]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[8][1]++;cov_ratewsw8z.s[62]++;sendBadStatus(res, 400, `bad request, no id.`);}\n}","timestamp":"2017-12-07T16:40:45.675Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, no id..","timestamp":"2017-12-07T16:40:45.675Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T16:40:45.677Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes?id=hotdogs\"","timestamp":"2017-12-07T16:40:45.677Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=hotdogs\",\"query\":{\"id\":\"hotdogs\"},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes?id=hotdogs\",\"href\":\"/api/trials-bikes?id=hotdogs\"}","timestamp":"2017-12-07T16:40:45.677Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T16:40:45.677Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[8]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[54]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[55]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[8][0]++;\n    let removedBike = /* istanbul ignore next */(cov_ratewsw8z.s[56]++, removeBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[57]++;\n    if (removedBike) {/* istanbul ignore next */cov_ratewsw8z.b[9][0]++;cov_ratewsw8z.s[58]++;\n      logger.log('info', `Bike deleted, responding with a 204 code.`); /* istanbul ignore next */cov_ratewsw8z.s[59]++;\n      res.writeHead(204); /* istanbul ignore next */cov_ratewsw8z.s[60]++;\n      res.end();\n    } else\n      {/* istanbul ignore next */cov_ratewsw8z.b[9][1]++;cov_ratewsw8z.s[61]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[8][1]++;cov_ratewsw8z.s[62]++;sendBadStatus(res, 400, `bad request, no id.`);}\n}","timestamp":"2017-12-07T16:40:45.677Z"}
{"level":"info","message":"Responding with a 404 code due to No bike with id \"hotdogs\"..","timestamp":"2017-12-07T16:40:45.677Z"}
{"level":"info","message":"Adding a POST url and callback.","timestamp":"2017-12-07T16:42:08.489Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-07T16:42:08.489Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[27]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[28]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[30]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[31]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[33]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[34]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[36]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[37]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[39]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[40]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[41]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[42]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[43]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[44]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T16:42:08.489Z"}
{"level":"info","message":"Adding a GET url and callback.","timestamp":"2017-12-07T16:42:08.489Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-07T16:42:08.489Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[7]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[46]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[47]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[6][0]++;\n    let requestedBike = /* istanbul ignore next */(cov_ratewsw8z.s[48]++, getBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[49]++;\n    if (requestedBike)\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][0]++;cov_ratewsw8z.s[50]++;sendJSON(res, 200, requestedBike);} else\n\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][1]++;cov_ratewsw8z.s[51]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[6][1]++;cov_ratewsw8z.s[52]++;sendJSON(res, 200, trialsBikes);}\n}","timestamp":"2017-12-07T16:42:08.489Z"}
{"level":"info","message":"Adding a DELETE url and callback.","timestamp":"2017-12-07T16:42:08.490Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-07T16:42:08.490Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[8]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[54]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[55]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[8][0]++;\n    let removedBike = /* istanbul ignore next */(cov_ratewsw8z.s[56]++, removeBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[57]++;\n    if (removedBike) {/* istanbul ignore next */cov_ratewsw8z.b[9][0]++;cov_ratewsw8z.s[58]++;\n      logger.log('info', `Bike deleted, responding with a 204 code.`); /* istanbul ignore next */cov_ratewsw8z.s[59]++;\n      res.writeHead(204); /* istanbul ignore next */cov_ratewsw8z.s[60]++;\n      res.end();\n    } else\n      {/* istanbul ignore next */cov_ratewsw8z.b[9][1]++;cov_ratewsw8z.s[61]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[8][1]++;cov_ratewsw8z.s[62]++;sendBadStatus(res, 400, `bad request, no id.`);}\n}","timestamp":"2017-12-07T16:42:08.490Z"}
{"level":"info","message":"Server is up on port 3000.","timestamp":"2017-12-07T16:42:08.528Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T16:42:08.567Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T16:42:08.568Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T16:42:08.568Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T16:42:08.569Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[27]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[28]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[30]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[31]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[33]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[34]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[36]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[37]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[39]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[40]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[41]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[42]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[43]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[44]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T16:42:08.569Z"}
{"level":"info","message":"Responding with a 200 code and the following data:","timestamp":"2017-12-07T16:42:08.569Z"}
{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"90d20290-db6d-11e7-96f8-9d3d4614ebc8","timestamp":"2017-12-07T16:42:08.569Z","level":"info","message":""}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T16:42:08.577Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T16:42:08.577Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T16:42:08.577Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T16:42:08.577Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.req.on (/Users/robertreed/Documents/programming/cf/401/lab/08-09-vanilla-rest-server/lab-rob/lib/req-parser.js:25:27)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-07T16:42:08.577Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T16:42:08.580Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T16:42:08.580Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T16:42:08.580Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T16:42:08.580Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[27]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[28]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[30]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[31]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[33]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[34]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[36]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[37]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[39]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[40]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[41]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[42]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[43]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[44]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T16:42:08.580Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, make not found!.","timestamp":"2017-12-07T16:42:08.580Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T16:42:08.582Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T16:42:08.582Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T16:42:08.582Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T16:42:08.582Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[27]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[28]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[30]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[31]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[33]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[34]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[36]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[37]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[39]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[40]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[41]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[42]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[43]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[44]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T16:42:08.582Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, model not found!.","timestamp":"2017-12-07T16:42:08.582Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T16:42:08.584Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T16:42:08.584Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T16:42:08.584Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T16:42:08.584Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[27]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[28]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[30]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[31]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[33]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[34]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[36]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[37]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[39]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[40]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[41]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[42]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[43]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[44]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T16:42:08.584Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, year not found!.","timestamp":"2017-12-07T16:42:08.584Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T16:42:08.585Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T16:42:08.585Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T16:42:08.586Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T16:42:08.586Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[27]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[28]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[30]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[31]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[33]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[34]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[36]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[37]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[39]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[40]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[41]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[42]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[43]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[44]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T16:42:08.586Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, displacement not found!.","timestamp":"2017-12-07T16:42:08.586Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T16:42:08.587Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T16:42:08.587Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T16:42:08.587Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T16:42:08.588Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[27]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[28]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[30]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[31]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[33]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[34]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[36]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[37]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[39]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[40]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[41]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[42]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[43]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[44]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T16:42:08.588Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, color not found!.","timestamp":"2017-12-07T16:42:08.588Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T16:42:08.589Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T16:42:08.589Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T16:42:08.589Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T16:42:08.589Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[7]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[46]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[47]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[6][0]++;\n    let requestedBike = /* istanbul ignore next */(cov_ratewsw8z.s[48]++, getBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[49]++;\n    if (requestedBike)\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][0]++;cov_ratewsw8z.s[50]++;sendJSON(res, 200, requestedBike);} else\n\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][1]++;cov_ratewsw8z.s[51]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[6][1]++;cov_ratewsw8z.s[52]++;sendJSON(res, 200, trialsBikes);}\n}","timestamp":"2017-12-07T16:42:08.589Z"}
{"level":"info","message":"Responding with a 200 code and the following data:","timestamp":"2017-12-07T16:42:08.589Z"}
[{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"90d20290-db6d-11e7-96f8-9d3d4614ebc8","timestamp":"2017-12-07T16:42:08.569Z"}]
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T16:42:08.591Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes?id=90d20290-db6d-11e7-96f8-9d3d4614ebc8\"","timestamp":"2017-12-07T16:42:08.591Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=90d20290-db6d-11e7-96f8-9d3d4614ebc8\",\"query\":{\"id\":\"90d20290-db6d-11e7-96f8-9d3d4614ebc8\"},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes?id=90d20290-db6d-11e7-96f8-9d3d4614ebc8\",\"href\":\"/api/trials-bikes?id=90d20290-db6d-11e7-96f8-9d3d4614ebc8\"}","timestamp":"2017-12-07T16:42:08.592Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T16:42:08.592Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[7]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[46]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[47]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[6][0]++;\n    let requestedBike = /* istanbul ignore next */(cov_ratewsw8z.s[48]++, getBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[49]++;\n    if (requestedBike)\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][0]++;cov_ratewsw8z.s[50]++;sendJSON(res, 200, requestedBike);} else\n\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][1]++;cov_ratewsw8z.s[51]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[6][1]++;cov_ratewsw8z.s[52]++;sendJSON(res, 200, trialsBikes);}\n}","timestamp":"2017-12-07T16:42:08.592Z"}
{"level":"info","message":"Responding with a 200 code and the following data:","timestamp":"2017-12-07T16:42:08.592Z"}
{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"90d20290-db6d-11e7-96f8-9d3d4614ebc8","timestamp":"2017-12-07T16:42:08.592Z","level":"info","message":""}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T16:42:08.594Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes?id=hamburger\"","timestamp":"2017-12-07T16:42:08.594Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=hamburger\",\"query\":{\"id\":\"hamburger\"},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes?id=hamburger\",\"href\":\"/api/trials-bikes?id=hamburger\"}","timestamp":"2017-12-07T16:42:08.594Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T16:42:08.594Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[7]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[46]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[47]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[6][0]++;\n    let requestedBike = /* istanbul ignore next */(cov_ratewsw8z.s[48]++, getBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[49]++;\n    if (requestedBike)\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][0]++;cov_ratewsw8z.s[50]++;sendJSON(res, 200, requestedBike);} else\n\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][1]++;cov_ratewsw8z.s[51]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[6][1]++;cov_ratewsw8z.s[52]++;sendJSON(res, 200, trialsBikes);}\n}","timestamp":"2017-12-07T16:42:08.594Z"}
{"level":"info","message":"Responding with a 404 code due to No bike with id \"hamburger\"..","timestamp":"2017-12-07T16:42:08.594Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T16:42:08.595Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes?id=90d20290-db6d-11e7-96f8-9d3d4614ebc8\"","timestamp":"2017-12-07T16:42:08.595Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=90d20290-db6d-11e7-96f8-9d3d4614ebc8\",\"query\":{\"id\":\"90d20290-db6d-11e7-96f8-9d3d4614ebc8\"},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes?id=90d20290-db6d-11e7-96f8-9d3d4614ebc8\",\"href\":\"/api/trials-bikes?id=90d20290-db6d-11e7-96f8-9d3d4614ebc8\"}","timestamp":"2017-12-07T16:42:08.596Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T16:42:08.596Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[8]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[54]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[55]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[8][0]++;\n    let removedBike = /* istanbul ignore next */(cov_ratewsw8z.s[56]++, removeBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[57]++;\n    if (removedBike) {/* istanbul ignore next */cov_ratewsw8z.b[9][0]++;cov_ratewsw8z.s[58]++;\n      logger.log('info', `Bike deleted, responding with a 204 code.`); /* istanbul ignore next */cov_ratewsw8z.s[59]++;\n      res.writeHead(204); /* istanbul ignore next */cov_ratewsw8z.s[60]++;\n      res.end();\n    } else\n      {/* istanbul ignore next */cov_ratewsw8z.b[9][1]++;cov_ratewsw8z.s[61]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[8][1]++;cov_ratewsw8z.s[62]++;sendBadStatus(res, 400, `bad request, no id.`);}\n}","timestamp":"2017-12-07T16:42:08.596Z"}
{"level":"info","message":"Bike deleted, responding with a 204 code.","timestamp":"2017-12-07T16:42:08.596Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T16:42:08.598Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T16:42:08.598Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T16:42:08.598Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T16:42:08.598Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[8]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[54]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[55]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[8][0]++;\n    let removedBike = /* istanbul ignore next */(cov_ratewsw8z.s[56]++, removeBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[57]++;\n    if (removedBike) {/* istanbul ignore next */cov_ratewsw8z.b[9][0]++;cov_ratewsw8z.s[58]++;\n      logger.log('info', `Bike deleted, responding with a 204 code.`); /* istanbul ignore next */cov_ratewsw8z.s[59]++;\n      res.writeHead(204); /* istanbul ignore next */cov_ratewsw8z.s[60]++;\n      res.end();\n    } else\n      {/* istanbul ignore next */cov_ratewsw8z.b[9][1]++;cov_ratewsw8z.s[61]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[8][1]++;cov_ratewsw8z.s[62]++;sendBadStatus(res, 400, `bad request, no id.`);}\n}","timestamp":"2017-12-07T16:42:08.598Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, no id..","timestamp":"2017-12-07T16:42:08.598Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T16:42:08.600Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes?id=hotdogs\"","timestamp":"2017-12-07T16:42:08.600Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=hotdogs\",\"query\":{\"id\":\"hotdogs\"},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes?id=hotdogs\",\"href\":\"/api/trials-bikes?id=hotdogs\"}","timestamp":"2017-12-07T16:42:08.600Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T16:42:08.600Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[8]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[54]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[55]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[8][0]++;\n    let removedBike = /* istanbul ignore next */(cov_ratewsw8z.s[56]++, removeBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[57]++;\n    if (removedBike) {/* istanbul ignore next */cov_ratewsw8z.b[9][0]++;cov_ratewsw8z.s[58]++;\n      logger.log('info', `Bike deleted, responding with a 204 code.`); /* istanbul ignore next */cov_ratewsw8z.s[59]++;\n      res.writeHead(204); /* istanbul ignore next */cov_ratewsw8z.s[60]++;\n      res.end();\n    } else\n      {/* istanbul ignore next */cov_ratewsw8z.b[9][1]++;cov_ratewsw8z.s[61]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[8][1]++;cov_ratewsw8z.s[62]++;sendBadStatus(res, 400, `bad request, no id.`);}\n}","timestamp":"2017-12-07T16:42:08.600Z"}
{"level":"info","message":"Responding with a 404 code due to No bike with id \"hotdogs\"..","timestamp":"2017-12-07T16:42:08.600Z"}
{"level":"info","message":"Adding a POST url and callback.","timestamp":"2017-12-07T16:44:45.179Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-07T16:44:45.179Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[27]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[28]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[30]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[31]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[33]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[34]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[36]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[37]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[39]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[40]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[41]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[42]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[43]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[44]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T16:44:45.179Z"}
{"level":"info","message":"Adding a GET url and callback.","timestamp":"2017-12-07T16:44:45.179Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-07T16:44:45.179Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[7]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[46]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[47]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[6][0]++;\n    let requestedBike = /* istanbul ignore next */(cov_ratewsw8z.s[48]++, getBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[49]++;\n    if (requestedBike)\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][0]++;cov_ratewsw8z.s[50]++;sendJSON(res, 200, requestedBike);} else\n\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][1]++;cov_ratewsw8z.s[51]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[6][1]++;cov_ratewsw8z.s[52]++;sendJSON(res, 200, trialsBikes);}\n}","timestamp":"2017-12-07T16:44:45.180Z"}
{"level":"info","message":"Adding a DELETE url and callback.","timestamp":"2017-12-07T16:44:45.180Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-07T16:44:45.180Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[8]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[54]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[55]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[8][0]++;\n    let removedBike = /* istanbul ignore next */(cov_ratewsw8z.s[56]++, removeBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[57]++;\n    if (removedBike) {/* istanbul ignore next */cov_ratewsw8z.b[9][0]++;cov_ratewsw8z.s[58]++;\n      logger.log('info', `Bike deleted, responding with a 204 code.`); /* istanbul ignore next */cov_ratewsw8z.s[59]++;\n      res.writeHead(204); /* istanbul ignore next */cov_ratewsw8z.s[60]++;\n      res.end();\n    } else\n      {/* istanbul ignore next */cov_ratewsw8z.b[9][1]++;cov_ratewsw8z.s[61]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[8][1]++;cov_ratewsw8z.s[62]++;sendBadStatus(res, 400, `bad request, no id.`);}\n}","timestamp":"2017-12-07T16:44:45.180Z"}
{"level":"info","message":"Server is up on port 3000.","timestamp":"2017-12-07T16:44:45.222Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T16:44:45.263Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T16:44:45.263Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T16:44:45.263Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T16:44:45.264Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[27]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[28]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[30]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[31]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[33]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[34]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[36]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[37]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[39]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[40]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[41]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[42]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[43]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[44]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T16:44:45.264Z"}
{"level":"info","message":"Responding with a 200 code and the following data:","timestamp":"2017-12-07T16:44:45.264Z"}
{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"ee37c500-db6d-11e7-b830-fd2b7b260fb5","timestamp":"2017-12-07T16:44:45.265Z","level":"info","message":""}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T16:44:45.272Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T16:44:45.272Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T16:44:45.272Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T16:44:45.273Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.req.on (/Users/robertreed/Documents/programming/cf/401/lab/08-09-vanilla-rest-server/lab-rob/lib/req-parser.js:25:27)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-07T16:44:45.273Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T16:44:45.275Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T16:44:45.275Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T16:44:45.275Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T16:44:45.275Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[27]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[28]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[30]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[31]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[33]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[34]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[36]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[37]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[39]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[40]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[41]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[42]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[43]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[44]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T16:44:45.275Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, make not found!.","timestamp":"2017-12-07T16:44:45.275Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T16:44:45.277Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T16:44:45.277Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T16:44:45.277Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T16:44:45.277Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[27]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[28]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[30]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[31]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[33]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[34]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[36]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[37]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[39]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[40]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[41]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[42]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[43]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[44]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T16:44:45.277Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, model not found!.","timestamp":"2017-12-07T16:44:45.277Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T16:44:45.279Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T16:44:45.279Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T16:44:45.279Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T16:44:45.279Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[27]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[28]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[30]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[31]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[33]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[34]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[36]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[37]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[39]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[40]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[41]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[42]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[43]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[44]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T16:44:45.279Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, year not found!.","timestamp":"2017-12-07T16:44:45.279Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T16:44:45.281Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T16:44:45.281Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T16:44:45.281Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T16:44:45.281Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[27]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[28]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[30]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[31]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[33]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[34]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[36]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[37]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[39]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[40]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[41]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[42]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[43]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[44]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T16:44:45.281Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, displacement not found!.","timestamp":"2017-12-07T16:44:45.281Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T16:44:45.282Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T16:44:45.282Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T16:44:45.282Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T16:44:45.283Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[27]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[28]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[30]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[31]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[33]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[34]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[36]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[37]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[39]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[40]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[41]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[42]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[43]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[44]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T16:44:45.283Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, color not found!.","timestamp":"2017-12-07T16:44:45.283Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T16:44:45.284Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T16:44:45.284Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T16:44:45.284Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T16:44:45.284Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[7]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[46]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[47]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[6][0]++;\n    let requestedBike = /* istanbul ignore next */(cov_ratewsw8z.s[48]++, getBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[49]++;\n    if (requestedBike)\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][0]++;cov_ratewsw8z.s[50]++;sendJSON(res, 200, requestedBike);} else\n\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][1]++;cov_ratewsw8z.s[51]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[6][1]++;cov_ratewsw8z.s[52]++;sendJSON(res, 200, trialsBikes);}\n}","timestamp":"2017-12-07T16:44:45.284Z"}
{"level":"info","message":"Responding with a 200 code and the following data:","timestamp":"2017-12-07T16:44:45.284Z"}
[{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"ee37c500-db6d-11e7-b830-fd2b7b260fb5","timestamp":"2017-12-07T16:44:45.264Z"}]
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T16:44:45.287Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes?id=ee37c500-db6d-11e7-b830-fd2b7b260fb5\"","timestamp":"2017-12-07T16:44:45.287Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=ee37c500-db6d-11e7-b830-fd2b7b260fb5\",\"query\":{\"id\":\"ee37c500-db6d-11e7-b830-fd2b7b260fb5\"},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes?id=ee37c500-db6d-11e7-b830-fd2b7b260fb5\",\"href\":\"/api/trials-bikes?id=ee37c500-db6d-11e7-b830-fd2b7b260fb5\"}","timestamp":"2017-12-07T16:44:45.287Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T16:44:45.287Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[7]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[46]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[47]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[6][0]++;\n    let requestedBike = /* istanbul ignore next */(cov_ratewsw8z.s[48]++, getBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[49]++;\n    if (requestedBike)\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][0]++;cov_ratewsw8z.s[50]++;sendJSON(res, 200, requestedBike);} else\n\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][1]++;cov_ratewsw8z.s[51]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[6][1]++;cov_ratewsw8z.s[52]++;sendJSON(res, 200, trialsBikes);}\n}","timestamp":"2017-12-07T16:44:45.287Z"}
{"level":"info","message":"Responding with a 200 code and the following data:","timestamp":"2017-12-07T16:44:45.287Z"}
{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"ee37c500-db6d-11e7-b830-fd2b7b260fb5","timestamp":"2017-12-07T16:44:45.287Z","level":"info","message":""}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T16:44:45.289Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes?id=hamburger\"","timestamp":"2017-12-07T16:44:45.289Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=hamburger\",\"query\":{\"id\":\"hamburger\"},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes?id=hamburger\",\"href\":\"/api/trials-bikes?id=hamburger\"}","timestamp":"2017-12-07T16:44:45.289Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T16:44:45.289Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[7]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[46]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[47]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[6][0]++;\n    let requestedBike = /* istanbul ignore next */(cov_ratewsw8z.s[48]++, getBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[49]++;\n    if (requestedBike)\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][0]++;cov_ratewsw8z.s[50]++;sendJSON(res, 200, requestedBike);} else\n\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][1]++;cov_ratewsw8z.s[51]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[6][1]++;cov_ratewsw8z.s[52]++;sendJSON(res, 200, trialsBikes);}\n}","timestamp":"2017-12-07T16:44:45.289Z"}
{"level":"info","message":"Responding with a 404 code due to No bike with id \"hamburger\"..","timestamp":"2017-12-07T16:44:45.289Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T16:44:45.291Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes?id=ee37c500-db6d-11e7-b830-fd2b7b260fb5\"","timestamp":"2017-12-07T16:44:45.291Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=ee37c500-db6d-11e7-b830-fd2b7b260fb5\",\"query\":{\"id\":\"ee37c500-db6d-11e7-b830-fd2b7b260fb5\"},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes?id=ee37c500-db6d-11e7-b830-fd2b7b260fb5\",\"href\":\"/api/trials-bikes?id=ee37c500-db6d-11e7-b830-fd2b7b260fb5\"}","timestamp":"2017-12-07T16:44:45.291Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T16:44:45.291Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[8]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[54]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[55]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[8][0]++;\n    let removedBike = /* istanbul ignore next */(cov_ratewsw8z.s[56]++, removeBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[57]++;\n    if (removedBike) {/* istanbul ignore next */cov_ratewsw8z.b[9][0]++;cov_ratewsw8z.s[58]++;\n      logger.log('info', `Bike deleted, responding with a 204 code.`); /* istanbul ignore next */cov_ratewsw8z.s[59]++;\n      res.writeHead(204); /* istanbul ignore next */cov_ratewsw8z.s[60]++;\n      res.end();\n    } else\n      {/* istanbul ignore next */cov_ratewsw8z.b[9][1]++;cov_ratewsw8z.s[61]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[8][1]++;cov_ratewsw8z.s[62]++;sendBadStatus(res, 400, `bad request, no id.`);}\n}","timestamp":"2017-12-07T16:44:45.291Z"}
{"level":"info","message":"Bike deleted, responding with a 204 code.","timestamp":"2017-12-07T16:44:45.291Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T16:44:45.293Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T16:44:45.293Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T16:44:45.293Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T16:44:45.293Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[8]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[54]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[55]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[8][0]++;\n    let removedBike = /* istanbul ignore next */(cov_ratewsw8z.s[56]++, removeBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[57]++;\n    if (removedBike) {/* istanbul ignore next */cov_ratewsw8z.b[9][0]++;cov_ratewsw8z.s[58]++;\n      logger.log('info', `Bike deleted, responding with a 204 code.`); /* istanbul ignore next */cov_ratewsw8z.s[59]++;\n      res.writeHead(204); /* istanbul ignore next */cov_ratewsw8z.s[60]++;\n      res.end();\n    } else\n      {/* istanbul ignore next */cov_ratewsw8z.b[9][1]++;cov_ratewsw8z.s[61]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[8][1]++;cov_ratewsw8z.s[62]++;sendBadStatus(res, 400, `bad request, no id.`);}\n}","timestamp":"2017-12-07T16:44:45.293Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, no id..","timestamp":"2017-12-07T16:44:45.293Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T16:44:45.295Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes?id=hotdogs\"","timestamp":"2017-12-07T16:44:45.295Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=hotdogs\",\"query\":{\"id\":\"hotdogs\"},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes?id=hotdogs\",\"href\":\"/api/trials-bikes?id=hotdogs\"}","timestamp":"2017-12-07T16:44:45.295Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T16:44:45.295Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[8]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[54]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[55]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[8][0]++;\n    let removedBike = /* istanbul ignore next */(cov_ratewsw8z.s[56]++, removeBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[57]++;\n    if (removedBike) {/* istanbul ignore next */cov_ratewsw8z.b[9][0]++;cov_ratewsw8z.s[58]++;\n      logger.log('info', `Bike deleted, responding with a 204 code.`); /* istanbul ignore next */cov_ratewsw8z.s[59]++;\n      res.writeHead(204); /* istanbul ignore next */cov_ratewsw8z.s[60]++;\n      res.end();\n    } else\n      {/* istanbul ignore next */cov_ratewsw8z.b[9][1]++;cov_ratewsw8z.s[61]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[8][1]++;cov_ratewsw8z.s[62]++;sendBadStatus(res, 400, `bad request, no id.`);}\n}","timestamp":"2017-12-07T16:44:45.295Z"}
{"level":"info","message":"Responding with a 404 code due to No bike with id \"hotdogs\"..","timestamp":"2017-12-07T16:44:45.295Z"}
{"level":"info","message":"Adding a POST url and callback.","timestamp":"2017-12-07T16:45:11.371Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-07T16:45:11.371Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[27]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[28]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[30]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[31]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[33]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[34]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[36]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[37]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[39]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[40]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[41]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[42]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[43]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[44]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T16:45:11.371Z"}
{"level":"info","message":"Adding a GET url and callback.","timestamp":"2017-12-07T16:45:11.371Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-07T16:45:11.371Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[7]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[46]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[47]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[6][0]++;\n    let requestedBike = /* istanbul ignore next */(cov_ratewsw8z.s[48]++, getBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[49]++;\n    if (requestedBike)\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][0]++;cov_ratewsw8z.s[50]++;sendJSON(res, 200, requestedBike);} else\n\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][1]++;cov_ratewsw8z.s[51]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[6][1]++;cov_ratewsw8z.s[52]++;sendJSON(res, 200, trialsBikes);}\n}","timestamp":"2017-12-07T16:45:11.371Z"}
{"level":"info","message":"Adding a DELETE url and callback.","timestamp":"2017-12-07T16:45:11.372Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-07T16:45:11.372Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[8]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[54]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[55]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[8][0]++;\n    let removedBike = /* istanbul ignore next */(cov_ratewsw8z.s[56]++, removeBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[57]++;\n    if (removedBike) {/* istanbul ignore next */cov_ratewsw8z.b[9][0]++;cov_ratewsw8z.s[58]++;\n      logger.log('info', `Bike deleted, responding with a 204 code.`); /* istanbul ignore next */cov_ratewsw8z.s[59]++;\n      res.writeHead(204); /* istanbul ignore next */cov_ratewsw8z.s[60]++;\n      res.end();\n    } else\n      {/* istanbul ignore next */cov_ratewsw8z.b[9][1]++;cov_ratewsw8z.s[61]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[8][1]++;cov_ratewsw8z.s[62]++;sendBadStatus(res, 400, `bad request, no id.`);}\n}","timestamp":"2017-12-07T16:45:11.372Z"}
{"level":"info","message":"Server is up on port 3000.","timestamp":"2017-12-07T16:45:11.412Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T16:45:11.452Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T16:45:11.452Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T16:45:11.452Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T16:45:11.453Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[27]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[28]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[30]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[31]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[33]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[34]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[36]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[37]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[39]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[40]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[41]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[42]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[43]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[44]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T16:45:11.453Z"}
{"level":"info","message":"Responding with a 200 code and the following data:","timestamp":"2017-12-07T16:45:11.454Z"}
{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"fdd3e4d0-db6d-11e7-9f33-073bd6146fc0","timestamp":"2017-12-07T16:45:11.454Z","level":"info","message":""}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T16:45:11.462Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T16:45:11.462Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T16:45:11.462Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T16:45:11.462Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.req.on (/Users/robertreed/Documents/programming/cf/401/lab/08-09-vanilla-rest-server/lab-rob/lib/req-parser.js:25:27)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-07T16:45:11.462Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T16:45:11.465Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T16:45:11.465Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T16:45:11.465Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T16:45:11.465Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[27]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[28]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[30]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[31]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[33]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[34]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[36]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[37]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[39]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[40]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[41]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[42]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[43]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[44]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T16:45:11.465Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, make not found!.","timestamp":"2017-12-07T16:45:11.465Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T16:45:11.467Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T16:45:11.468Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T16:45:11.468Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T16:45:11.468Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[27]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[28]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[30]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[31]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[33]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[34]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[36]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[37]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[39]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[40]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[41]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[42]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[43]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[44]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T16:45:11.468Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, model not found!.","timestamp":"2017-12-07T16:45:11.468Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T16:45:11.470Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T16:45:11.470Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T16:45:11.470Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T16:45:11.470Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[27]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[28]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[30]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[31]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[33]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[34]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[36]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[37]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[39]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[40]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[41]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[42]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[43]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[44]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T16:45:11.470Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, year not found!.","timestamp":"2017-12-07T16:45:11.470Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T16:45:11.472Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T16:45:11.472Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T16:45:11.472Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T16:45:11.472Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[27]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[28]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[30]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[31]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[33]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[34]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[36]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[37]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[39]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[40]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[41]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[42]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[43]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[44]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T16:45:11.472Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, displacement not found!.","timestamp":"2017-12-07T16:45:11.472Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T16:45:11.474Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T16:45:11.474Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T16:45:11.474Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T16:45:11.474Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[27]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[28]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[30]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[31]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[33]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[34]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[36]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[37]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[39]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[40]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[41]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[42]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[43]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[44]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T16:45:11.474Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, color not found!.","timestamp":"2017-12-07T16:45:11.474Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T16:45:11.475Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T16:45:11.476Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T16:45:11.476Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T16:45:11.476Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[7]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[46]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[47]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[6][0]++;\n    let requestedBike = /* istanbul ignore next */(cov_ratewsw8z.s[48]++, getBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[49]++;\n    if (requestedBike)\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][0]++;cov_ratewsw8z.s[50]++;sendJSON(res, 200, requestedBike);} else\n\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][1]++;cov_ratewsw8z.s[51]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[6][1]++;cov_ratewsw8z.s[52]++;sendJSON(res, 200, trialsBikes);}\n}","timestamp":"2017-12-07T16:45:11.476Z"}
{"level":"info","message":"Responding with a 200 code and the following data:","timestamp":"2017-12-07T16:45:11.476Z"}
[{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"fdd3e4d0-db6d-11e7-9f33-073bd6146fc0","timestamp":"2017-12-07T16:45:11.454Z"}]
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T16:45:11.478Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes?id=fdd3e4d0-db6d-11e7-9f33-073bd6146fc0\"","timestamp":"2017-12-07T16:45:11.478Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=fdd3e4d0-db6d-11e7-9f33-073bd6146fc0\",\"query\":{\"id\":\"fdd3e4d0-db6d-11e7-9f33-073bd6146fc0\"},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes?id=fdd3e4d0-db6d-11e7-9f33-073bd6146fc0\",\"href\":\"/api/trials-bikes?id=fdd3e4d0-db6d-11e7-9f33-073bd6146fc0\"}","timestamp":"2017-12-07T16:45:11.478Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T16:45:11.479Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[7]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[46]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[47]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[6][0]++;\n    let requestedBike = /* istanbul ignore next */(cov_ratewsw8z.s[48]++, getBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[49]++;\n    if (requestedBike)\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][0]++;cov_ratewsw8z.s[50]++;sendJSON(res, 200, requestedBike);} else\n\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][1]++;cov_ratewsw8z.s[51]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[6][1]++;cov_ratewsw8z.s[52]++;sendJSON(res, 200, trialsBikes);}\n}","timestamp":"2017-12-07T16:45:11.479Z"}
{"level":"info","message":"Responding with a 200 code and the following data:","timestamp":"2017-12-07T16:45:11.479Z"}
{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"fdd3e4d0-db6d-11e7-9f33-073bd6146fc0","timestamp":"2017-12-07T16:45:11.479Z","level":"info","message":""}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T16:45:11.480Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes?id=hamburger\"","timestamp":"2017-12-07T16:45:11.480Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=hamburger\",\"query\":{\"id\":\"hamburger\"},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes?id=hamburger\",\"href\":\"/api/trials-bikes?id=hamburger\"}","timestamp":"2017-12-07T16:45:11.481Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T16:45:11.481Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[7]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[46]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[47]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[6][0]++;\n    let requestedBike = /* istanbul ignore next */(cov_ratewsw8z.s[48]++, getBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[49]++;\n    if (requestedBike)\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][0]++;cov_ratewsw8z.s[50]++;sendJSON(res, 200, requestedBike);} else\n\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][1]++;cov_ratewsw8z.s[51]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[6][1]++;cov_ratewsw8z.s[52]++;sendJSON(res, 200, trialsBikes);}\n}","timestamp":"2017-12-07T16:45:11.481Z"}
{"level":"info","message":"Responding with a 404 code due to No bike with id \"hamburger\"..","timestamp":"2017-12-07T16:45:11.481Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T16:45:11.482Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes?id=fdd3e4d0-db6d-11e7-9f33-073bd6146fc0\"","timestamp":"2017-12-07T16:45:11.482Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=fdd3e4d0-db6d-11e7-9f33-073bd6146fc0\",\"query\":{\"id\":\"fdd3e4d0-db6d-11e7-9f33-073bd6146fc0\"},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes?id=fdd3e4d0-db6d-11e7-9f33-073bd6146fc0\",\"href\":\"/api/trials-bikes?id=fdd3e4d0-db6d-11e7-9f33-073bd6146fc0\"}","timestamp":"2017-12-07T16:45:11.482Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T16:45:11.482Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[8]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[54]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[55]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[8][0]++;\n    let removedBike = /* istanbul ignore next */(cov_ratewsw8z.s[56]++, removeBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[57]++;\n    if (removedBike) {/* istanbul ignore next */cov_ratewsw8z.b[9][0]++;cov_ratewsw8z.s[58]++;\n      logger.log('info', `Bike deleted, responding with a 204 code.`); /* istanbul ignore next */cov_ratewsw8z.s[59]++;\n      res.writeHead(204); /* istanbul ignore next */cov_ratewsw8z.s[60]++;\n      res.end();\n    } else\n      {/* istanbul ignore next */cov_ratewsw8z.b[9][1]++;cov_ratewsw8z.s[61]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[8][1]++;cov_ratewsw8z.s[62]++;sendBadStatus(res, 400, `bad request, no id.`);}\n}","timestamp":"2017-12-07T16:45:11.483Z"}
{"level":"info","message":"Bike deleted, responding with a 204 code.","timestamp":"2017-12-07T16:45:11.483Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T16:45:11.484Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T16:45:11.484Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T16:45:11.484Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T16:45:11.484Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[8]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[54]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[55]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[8][0]++;\n    let removedBike = /* istanbul ignore next */(cov_ratewsw8z.s[56]++, removeBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[57]++;\n    if (removedBike) {/* istanbul ignore next */cov_ratewsw8z.b[9][0]++;cov_ratewsw8z.s[58]++;\n      logger.log('info', `Bike deleted, responding with a 204 code.`); /* istanbul ignore next */cov_ratewsw8z.s[59]++;\n      res.writeHead(204); /* istanbul ignore next */cov_ratewsw8z.s[60]++;\n      res.end();\n    } else\n      {/* istanbul ignore next */cov_ratewsw8z.b[9][1]++;cov_ratewsw8z.s[61]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[8][1]++;cov_ratewsw8z.s[62]++;sendBadStatus(res, 400, `bad request, no id.`);}\n}","timestamp":"2017-12-07T16:45:11.484Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, no id..","timestamp":"2017-12-07T16:45:11.484Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T16:45:11.486Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes?id=hotdogs\"","timestamp":"2017-12-07T16:45:11.486Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=hotdogs\",\"query\":{\"id\":\"hotdogs\"},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes?id=hotdogs\",\"href\":\"/api/trials-bikes?id=hotdogs\"}","timestamp":"2017-12-07T16:45:11.486Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T16:45:11.486Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[8]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[54]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[55]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[8][0]++;\n    let removedBike = /* istanbul ignore next */(cov_ratewsw8z.s[56]++, removeBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[57]++;\n    if (removedBike) {/* istanbul ignore next */cov_ratewsw8z.b[9][0]++;cov_ratewsw8z.s[58]++;\n      logger.log('info', `Bike deleted, responding with a 204 code.`); /* istanbul ignore next */cov_ratewsw8z.s[59]++;\n      res.writeHead(204); /* istanbul ignore next */cov_ratewsw8z.s[60]++;\n      res.end();\n    } else\n      {/* istanbul ignore next */cov_ratewsw8z.b[9][1]++;cov_ratewsw8z.s[61]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[8][1]++;cov_ratewsw8z.s[62]++;sendBadStatus(res, 400, `bad request, no id.`);}\n}","timestamp":"2017-12-07T16:45:11.486Z"}
{"level":"info","message":"Responding with a 404 code due to No bike with id \"hotdogs\"..","timestamp":"2017-12-07T16:45:11.486Z"}
{"level":"info","message":"Adding a POST url and callback.","timestamp":"2017-12-07T16:50:13.037Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-07T16:50:13.039Z"}
{"level":"info","message":"(req, res) => {\n  if(!req.body.make) {\n    sendBadStatus(res, 400, 'bad request, make not found!');\n    return;\n  }\n  \n  if(!req.body.model) {\n    sendBadStatus(res, 400, 'bad request, model not found!');\n    return;\n  }\n\n  if(!req.body.year) {\n    sendBadStatus(res, 400, 'bad request, year not found!');\n    return;\n  }\n\n  if(!req.body.displacement) {\n    sendBadStatus(res, 400, 'bad request, displacement not found!');\n    return;\n  }\n\n  if(!req.body.color) {\n    sendBadStatus(res, 400, 'bad request, color not found!');\n    return;\n  }\n\n  let trialsBike = new TrialsBike(\n    req.body.make,\n    req.body.model,\n    req.body.year,\n    req.body.displacement,\n    req.body.color\n  );\n  \n  trialsBikes.push(trialsBike);\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T16:50:13.039Z"}
{"level":"info","message":"Adding a GET url and callback.","timestamp":"2017-12-07T16:50:13.039Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-07T16:50:13.039Z"}
{"level":"info","message":"(req, res) => {\n  let id = req.url.query.id;\n  if(id) {\n    let requestedBike = getBikeById(id);\n    if(requestedBike)\n      sendJSON(res, 200, requestedBike);\n    else\n      sendBadStatus(res, 404, `No bike with id \"${id}\".`);\n  } else\n    sendJSON(res, 200, trialsBikes);\n}","timestamp":"2017-12-07T16:50:13.039Z"}
{"level":"info","message":"Adding a DELETE url and callback.","timestamp":"2017-12-07T16:50:13.039Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-07T16:50:13.039Z"}
{"level":"info","message":"(req, res) => {\n  let id = req.url.query.id;\n  if(id) {\n    let removedBike = removeBikeById(id);\n    if (removedBike) {\n      logger.log('info', `Bike deleted, responding with a 204 code.`);\n      res.writeHead(204);\n      res.end();\n    } else\n      sendBadStatus(res, 404, `No bike with id \"${id}\".`);\n  } else\n    sendBadStatus(res, 400, `bad request, no id.`);\n}","timestamp":"2017-12-07T16:50:13.039Z"}
{"level":"info","message":"Server is up on port 3000.","timestamp":"2017-12-07T16:50:13.045Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T16:50:16.457Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T16:50:16.457Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T16:50:16.457Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T16:50:16.458Z"}
{"level":"info","message":"(req, res) => {\n  if(!req.body.make) {\n    sendBadStatus(res, 400, 'bad request, make not found!');\n    return;\n  }\n  \n  if(!req.body.model) {\n    sendBadStatus(res, 400, 'bad request, model not found!');\n    return;\n  }\n\n  if(!req.body.year) {\n    sendBadStatus(res, 400, 'bad request, year not found!');\n    return;\n  }\n\n  if(!req.body.displacement) {\n    sendBadStatus(res, 400, 'bad request, displacement not found!');\n    return;\n  }\n\n  if(!req.body.color) {\n    sendBadStatus(res, 400, 'bad request, color not found!');\n    return;\n  }\n\n  let trialsBike = new TrialsBike(\n    req.body.make,\n    req.body.model,\n    req.body.year,\n    req.body.displacement,\n    req.body.color\n  );\n  \n  trialsBikes.push(trialsBike);\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T16:50:16.458Z"}
{"level":"info","message":"Responding with a 200 code and the following data:","timestamp":"2017-12-07T16:50:16.459Z"}
{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"b3a01db0-db6e-11e7-a066-85a7b05bde52","timestamp":"2017-12-07T16:50:16.459Z","level":"info","message":""}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T16:50:37.126Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes?id=dc256e50-db1b-11e7-9f4a-2bb8540a5\"","timestamp":"2017-12-07T16:50:37.126Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=dc256e50-db1b-11e7-9f4a-2bb8540a5\",\"query\":{\"id\":\"dc256e50-db1b-11e7-9f4a-2bb8540a5\"},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes?id=dc256e50-db1b-11e7-9f4a-2bb8540a5\",\"href\":\"/api/trials-bikes?id=dc256e50-db1b-11e7-9f4a-2bb8540a5\"}","timestamp":"2017-12-07T16:50:37.127Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T16:50:37.127Z"}
{"level":"info","message":"(req, res) => {\n  let id = req.url.query.id;\n  if(id) {\n    let removedBike = removeBikeById(id);\n    if (removedBike) {\n      logger.log('info', `Bike deleted, responding with a 204 code.`);\n      res.writeHead(204);\n      res.end();\n    } else\n      sendBadStatus(res, 404, `No bike with id \"${id}\".`);\n  } else\n    sendBadStatus(res, 400, `bad request, no id.`);\n}","timestamp":"2017-12-07T16:50:37.127Z"}
{"level":"info","message":"Responding with a 404 code due to No bike with id \"dc256e50-db1b-11e7-9f4a-2bb8540a5\"..","timestamp":"2017-12-07T16:50:37.127Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T16:50:56.083Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes?id=dc256e50-db1b-11e7-9f4a-2bb8540a5f\"","timestamp":"2017-12-07T16:50:56.083Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=dc256e50-db1b-11e7-9f4a-2bb8540a5f\",\"query\":{\"id\":\"dc256e50-db1b-11e7-9f4a-2bb8540a5f\"},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes?id=dc256e50-db1b-11e7-9f4a-2bb8540a5f\",\"href\":\"/api/trials-bikes?id=dc256e50-db1b-11e7-9f4a-2bb8540a5f\"}","timestamp":"2017-12-07T16:50:56.083Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T16:50:56.083Z"}
{"level":"info","message":"(req, res) => {\n  let id = req.url.query.id;\n  if(id) {\n    let removedBike = removeBikeById(id);\n    if (removedBike) {\n      logger.log('info', `Bike deleted, responding with a 204 code.`);\n      res.writeHead(204);\n      res.end();\n    } else\n      sendBadStatus(res, 404, `No bike with id \"${id}\".`);\n  } else\n    sendBadStatus(res, 400, `bad request, no id.`);\n}","timestamp":"2017-12-07T16:50:56.083Z"}
{"level":"info","message":"Responding with a 404 code due to No bike with id \"dc256e50-db1b-11e7-9f4a-2bb8540a5f\"..","timestamp":"2017-12-07T16:50:56.083Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T16:51:29.414Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes?id=b3a01db0-db6e-11e7-a066-85a7b05bde52\"","timestamp":"2017-12-07T16:51:29.414Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=b3a01db0-db6e-11e7-a066-85a7b05bde52\",\"query\":{\"id\":\"b3a01db0-db6e-11e7-a066-85a7b05bde52\"},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes?id=b3a01db0-db6e-11e7-a066-85a7b05bde52\",\"href\":\"/api/trials-bikes?id=b3a01db0-db6e-11e7-a066-85a7b05bde52\"}","timestamp":"2017-12-07T16:51:29.414Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T16:51:29.414Z"}
{"level":"info","message":"(req, res) => {\n  let id = req.url.query.id;\n  if(id) {\n    let removedBike = removeBikeById(id);\n    if (removedBike) {\n      logger.log('info', `Bike deleted, responding with a 204 code.`);\n      res.writeHead(204);\n      res.end();\n    } else\n      sendBadStatus(res, 404, `No bike with id \"${id}\".`);\n  } else\n    sendBadStatus(res, 400, `bad request, no id.`);\n}","timestamp":"2017-12-07T16:51:29.414Z"}
{"level":"info","message":"Bike deleted, responding with a 204 code.","timestamp":"2017-12-07T16:51:29.414Z"}
{"level":"info","message":"Adding a POST url and callback.","timestamp":"2017-12-07T16:57:30.117Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-07T16:57:30.117Z"}
{"level":"info","message":"(req, res) => {\n  if(!req.body.make) {\n    sendBadStatus(res, 400, 'bad request, make not found!');\n    return;\n  }\n  \n  if(!req.body.model) {\n    sendBadStatus(res, 400, 'bad request, model not found!');\n    return;\n  }\n\n  if(!req.body.year) {\n    sendBadStatus(res, 400, 'bad request, year not found!');\n    return;\n  }\n\n  if(!req.body.displacement) {\n    sendBadStatus(res, 400, 'bad request, displacement not found!');\n    return;\n  }\n\n  if(!req.body.color) {\n    sendBadStatus(res, 400, 'bad request, color not found!');\n    return;\n  }\n\n  let trialsBike = new TrialsBike(\n    req.body.make,\n    req.body.model,\n    req.body.year,\n    req.body.displacement,\n    req.body.color\n  );\n  \n  trialsBikes.push(trialsBike);\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T16:57:30.117Z"}
{"level":"info","message":"Adding a GET url and callback.","timestamp":"2017-12-07T16:57:30.117Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-07T16:57:30.117Z"}
{"level":"info","message":"(req, res) => {\n  let id = req.url.query.id;\n  if(id) {\n    let requestedBike = getBikeById(id);\n    if(requestedBike)\n      sendJSON(res, 200, requestedBike);\n    else\n      sendBadStatus(res, 404, `No bike with id \"${id}\".`);\n  } else\n    sendJSON(res, 200, trialsBikes);\n}","timestamp":"2017-12-07T16:57:30.117Z"}
{"level":"info","message":"Adding a DELETE url and callback.","timestamp":"2017-12-07T16:57:30.117Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-07T16:57:30.117Z"}
{"level":"info","message":"(req, res) => {\n  let id = req.url.query.id;\n  if(id) {\n    let removedBike = removeBikeById(id);\n    if (removedBike) {\n      logger.log('info', `Bike deleted, responding with a 204 code.`);\n      res.writeHead(204);\n      res.end();\n    } else\n      sendBadStatus(res, 404, `No bike with id \"${id}\".`);\n  } else\n    sendBadStatus(res, 400, `bad request, no id.`);\n}","timestamp":"2017-12-07T16:57:30.117Z"}
{"level":"info","message":"Server is up on port 3000.","timestamp":"2017-12-07T16:57:30.124Z"}
{"level":"info","message":"Adding a POST url and callback.","timestamp":"2017-12-07T16:57:34.838Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-07T16:57:34.839Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[27]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[28]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[30]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[31]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[33]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[34]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[36]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[37]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[39]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[40]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[41]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[42]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[43]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[44]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T16:57:34.839Z"}
{"level":"info","message":"Adding a GET url and callback.","timestamp":"2017-12-07T16:57:34.839Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-07T16:57:34.839Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[7]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[46]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[47]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[6][0]++;\n    let requestedBike = /* istanbul ignore next */(cov_ratewsw8z.s[48]++, getBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[49]++;\n    if (requestedBike)\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][0]++;cov_ratewsw8z.s[50]++;sendJSON(res, 200, requestedBike);} else\n\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][1]++;cov_ratewsw8z.s[51]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[6][1]++;cov_ratewsw8z.s[52]++;sendJSON(res, 200, trialsBikes);}\n}","timestamp":"2017-12-07T16:57:34.839Z"}
{"level":"info","message":"Adding a DELETE url and callback.","timestamp":"2017-12-07T16:57:34.839Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-07T16:57:34.839Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[8]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[54]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[55]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[8][0]++;\n    let removedBike = /* istanbul ignore next */(cov_ratewsw8z.s[56]++, removeBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[57]++;\n    if (removedBike) {/* istanbul ignore next */cov_ratewsw8z.b[9][0]++;cov_ratewsw8z.s[58]++;\n      logger.log('info', `Bike deleted, responding with a 204 code.`); /* istanbul ignore next */cov_ratewsw8z.s[59]++;\n      res.writeHead(204); /* istanbul ignore next */cov_ratewsw8z.s[60]++;\n      res.end();\n    } else\n      {/* istanbul ignore next */cov_ratewsw8z.b[9][1]++;cov_ratewsw8z.s[61]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[8][1]++;cov_ratewsw8z.s[62]++;sendBadStatus(res, 400, `bad request, no id.`);}\n}","timestamp":"2017-12-07T16:57:34.839Z"}
{"level":"info","message":"Server is up on port 3000.","timestamp":"2017-12-07T16:57:34.881Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T16:57:34.921Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T16:57:34.921Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T16:57:34.921Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T16:57:34.922Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[27]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[28]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[30]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[31]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[33]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[34]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[36]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[37]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[39]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[40]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[41]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[42]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[43]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[44]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T16:57:34.922Z"}
{"level":"info","message":"Responding with a 200 code and the following data:","timestamp":"2017-12-07T16:57:34.922Z"}
{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"b8f842a0-db6f-11e7-9935-69b0c8afa8ca","timestamp":"2017-12-07T16:57:34.922Z","level":"info","message":""}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T16:57:34.929Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T16:57:34.930Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T16:57:34.930Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T16:57:34.930Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.req.on (/Users/robertreed/Documents/programming/cf/401/lab/08-09-vanilla-rest-server/lab-rob/lib/req-parser.js:25:27)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-07T16:57:34.930Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T16:57:34.932Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T16:57:34.932Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T16:57:34.932Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T16:57:34.932Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[27]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[28]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[30]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[31]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[33]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[34]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[36]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[37]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[39]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[40]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[41]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[42]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[43]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[44]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T16:57:34.933Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, make not found!.","timestamp":"2017-12-07T16:57:34.933Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T16:57:34.934Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T16:57:34.934Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T16:57:34.934Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T16:57:34.935Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[27]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[28]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[30]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[31]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[33]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[34]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[36]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[37]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[39]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[40]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[41]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[42]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[43]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[44]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T16:57:34.935Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, model not found!.","timestamp":"2017-12-07T16:57:34.935Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T16:57:34.936Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T16:57:34.936Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T16:57:34.936Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T16:57:34.936Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[27]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[28]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[30]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[31]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[33]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[34]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[36]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[37]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[39]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[40]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[41]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[42]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[43]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[44]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T16:57:34.936Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, year not found!.","timestamp":"2017-12-07T16:57:34.936Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T16:57:34.938Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T16:57:34.938Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T16:57:34.938Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T16:57:34.938Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[27]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[28]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[30]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[31]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[33]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[34]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[36]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[37]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[39]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[40]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[41]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[42]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[43]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[44]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T16:57:34.938Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, displacement not found!.","timestamp":"2017-12-07T16:57:34.938Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T16:57:34.940Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T16:57:34.940Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T16:57:34.940Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T16:57:34.940Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[27]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[28]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[30]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[31]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[33]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[34]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[36]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[37]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[39]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[40]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[41]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[42]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[43]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[44]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T16:57:34.940Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, color not found!.","timestamp":"2017-12-07T16:57:34.940Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T16:57:34.941Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T16:57:34.941Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T16:57:34.942Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T16:57:34.942Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[7]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[46]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[47]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[6][0]++;\n    let requestedBike = /* istanbul ignore next */(cov_ratewsw8z.s[48]++, getBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[49]++;\n    if (requestedBike)\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][0]++;cov_ratewsw8z.s[50]++;sendJSON(res, 200, requestedBike);} else\n\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][1]++;cov_ratewsw8z.s[51]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[6][1]++;cov_ratewsw8z.s[52]++;sendJSON(res, 200, trialsBikes);}\n}","timestamp":"2017-12-07T16:57:34.942Z"}
{"level":"info","message":"Responding with a 200 code and the following data:","timestamp":"2017-12-07T16:57:34.942Z"}
[{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"b8f842a0-db6f-11e7-9935-69b0c8afa8ca","timestamp":"2017-12-07T16:57:34.922Z"}]
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T16:57:34.944Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes?id=b8f842a0-db6f-11e7-9935-69b0c8afa8ca\"","timestamp":"2017-12-07T16:57:34.944Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=b8f842a0-db6f-11e7-9935-69b0c8afa8ca\",\"query\":{\"id\":\"b8f842a0-db6f-11e7-9935-69b0c8afa8ca\"},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes?id=b8f842a0-db6f-11e7-9935-69b0c8afa8ca\",\"href\":\"/api/trials-bikes?id=b8f842a0-db6f-11e7-9935-69b0c8afa8ca\"}","timestamp":"2017-12-07T16:57:34.944Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T16:57:34.944Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[7]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[46]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[47]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[6][0]++;\n    let requestedBike = /* istanbul ignore next */(cov_ratewsw8z.s[48]++, getBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[49]++;\n    if (requestedBike)\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][0]++;cov_ratewsw8z.s[50]++;sendJSON(res, 200, requestedBike);} else\n\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][1]++;cov_ratewsw8z.s[51]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[6][1]++;cov_ratewsw8z.s[52]++;sendJSON(res, 200, trialsBikes);}\n}","timestamp":"2017-12-07T16:57:34.944Z"}
{"level":"info","message":"Responding with a 200 code and the following data:","timestamp":"2017-12-07T16:57:34.944Z"}
{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"b8f842a0-db6f-11e7-9935-69b0c8afa8ca","timestamp":"2017-12-07T16:57:34.944Z","level":"info","message":""}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T16:57:34.946Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes?id=hamburger\"","timestamp":"2017-12-07T16:57:34.946Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=hamburger\",\"query\":{\"id\":\"hamburger\"},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes?id=hamburger\",\"href\":\"/api/trials-bikes?id=hamburger\"}","timestamp":"2017-12-07T16:57:34.946Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T16:57:34.946Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[7]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[46]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[47]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[6][0]++;\n    let requestedBike = /* istanbul ignore next */(cov_ratewsw8z.s[48]++, getBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[49]++;\n    if (requestedBike)\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][0]++;cov_ratewsw8z.s[50]++;sendJSON(res, 200, requestedBike);} else\n\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][1]++;cov_ratewsw8z.s[51]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[6][1]++;cov_ratewsw8z.s[52]++;sendJSON(res, 200, trialsBikes);}\n}","timestamp":"2017-12-07T16:57:34.946Z"}
{"level":"info","message":"Responding with a 404 code due to No bike with id \"hamburger\"..","timestamp":"2017-12-07T16:57:34.946Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T16:57:34.948Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes?id=b8f842a0-db6f-11e7-9935-69b0c8afa8ca\"","timestamp":"2017-12-07T16:57:34.948Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=b8f842a0-db6f-11e7-9935-69b0c8afa8ca\",\"query\":{\"id\":\"b8f842a0-db6f-11e7-9935-69b0c8afa8ca\"},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes?id=b8f842a0-db6f-11e7-9935-69b0c8afa8ca\",\"href\":\"/api/trials-bikes?id=b8f842a0-db6f-11e7-9935-69b0c8afa8ca\"}","timestamp":"2017-12-07T16:57:34.948Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T16:57:34.948Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[8]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[54]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[55]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[8][0]++;\n    let removedBike = /* istanbul ignore next */(cov_ratewsw8z.s[56]++, removeBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[57]++;\n    if (removedBike) {/* istanbul ignore next */cov_ratewsw8z.b[9][0]++;cov_ratewsw8z.s[58]++;\n      logger.log('info', `Bike deleted, responding with a 204 code.`); /* istanbul ignore next */cov_ratewsw8z.s[59]++;\n      res.writeHead(204); /* istanbul ignore next */cov_ratewsw8z.s[60]++;\n      res.end();\n    } else\n      {/* istanbul ignore next */cov_ratewsw8z.b[9][1]++;cov_ratewsw8z.s[61]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[8][1]++;cov_ratewsw8z.s[62]++;sendBadStatus(res, 400, `bad request, no id.`);}\n}","timestamp":"2017-12-07T16:57:34.948Z"}
{"level":"info","message":"Bike deleted, responding with a 204 code.","timestamp":"2017-12-07T16:57:34.948Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T16:57:34.949Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T16:57:34.950Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T16:57:34.950Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T16:57:34.950Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[8]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[54]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[55]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[8][0]++;\n    let removedBike = /* istanbul ignore next */(cov_ratewsw8z.s[56]++, removeBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[57]++;\n    if (removedBike) {/* istanbul ignore next */cov_ratewsw8z.b[9][0]++;cov_ratewsw8z.s[58]++;\n      logger.log('info', `Bike deleted, responding with a 204 code.`); /* istanbul ignore next */cov_ratewsw8z.s[59]++;\n      res.writeHead(204); /* istanbul ignore next */cov_ratewsw8z.s[60]++;\n      res.end();\n    } else\n      {/* istanbul ignore next */cov_ratewsw8z.b[9][1]++;cov_ratewsw8z.s[61]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[8][1]++;cov_ratewsw8z.s[62]++;sendBadStatus(res, 400, `bad request, no id.`);}\n}","timestamp":"2017-12-07T16:57:34.950Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, no id..","timestamp":"2017-12-07T16:57:34.950Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T16:57:34.951Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes?id=hotdogs\"","timestamp":"2017-12-07T16:57:34.951Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=hotdogs\",\"query\":{\"id\":\"hotdogs\"},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes?id=hotdogs\",\"href\":\"/api/trials-bikes?id=hotdogs\"}","timestamp":"2017-12-07T16:57:34.951Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T16:57:34.951Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[8]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[54]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[55]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[8][0]++;\n    let removedBike = /* istanbul ignore next */(cov_ratewsw8z.s[56]++, removeBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[57]++;\n    if (removedBike) {/* istanbul ignore next */cov_ratewsw8z.b[9][0]++;cov_ratewsw8z.s[58]++;\n      logger.log('info', `Bike deleted, responding with a 204 code.`); /* istanbul ignore next */cov_ratewsw8z.s[59]++;\n      res.writeHead(204); /* istanbul ignore next */cov_ratewsw8z.s[60]++;\n      res.end();\n    } else\n      {/* istanbul ignore next */cov_ratewsw8z.b[9][1]++;cov_ratewsw8z.s[61]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[8][1]++;cov_ratewsw8z.s[62]++;sendBadStatus(res, 400, `bad request, no id.`);}\n}","timestamp":"2017-12-07T16:57:34.951Z"}
{"level":"info","message":"Responding with a 404 code due to No bike with id \"hotdogs\"..","timestamp":"2017-12-07T16:57:34.952Z"}
{"level":"info","message":"Adding a POST url and callback.","timestamp":"2017-12-07T16:58:24.038Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-07T16:58:24.039Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[27]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[28]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[30]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[31]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[33]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[34]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[36]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[37]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[39]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[40]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[41]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[42]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[43]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[44]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T16:58:24.039Z"}
{"level":"info","message":"Adding a GET url and callback.","timestamp":"2017-12-07T16:58:24.039Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-07T16:58:24.039Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[7]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[46]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[47]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[6][0]++;\n    let requestedBike = /* istanbul ignore next */(cov_ratewsw8z.s[48]++, getBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[49]++;\n    if (requestedBike)\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][0]++;cov_ratewsw8z.s[50]++;sendJSON(res, 200, requestedBike);} else\n\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][1]++;cov_ratewsw8z.s[51]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[6][1]++;cov_ratewsw8z.s[52]++;sendJSON(res, 200, trialsBikes);}\n}","timestamp":"2017-12-07T16:58:24.039Z"}
{"level":"info","message":"Adding a DELETE url and callback.","timestamp":"2017-12-07T16:58:24.039Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-07T16:58:24.039Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[8]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[54]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[55]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[8][0]++;\n    let removedBike = /* istanbul ignore next */(cov_ratewsw8z.s[56]++, removeBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[57]++;\n    if (removedBike) {/* istanbul ignore next */cov_ratewsw8z.b[9][0]++;cov_ratewsw8z.s[58]++;\n      logger.log('info', `Bike deleted, responding with a 204 code.`); /* istanbul ignore next */cov_ratewsw8z.s[59]++;\n      res.writeHead(204); /* istanbul ignore next */cov_ratewsw8z.s[60]++;\n      res.end();\n    } else\n      {/* istanbul ignore next */cov_ratewsw8z.b[9][1]++;cov_ratewsw8z.s[61]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[8][1]++;cov_ratewsw8z.s[62]++;sendBadStatus(res, 400, `bad request, no id.`);}\n}","timestamp":"2017-12-07T16:58:24.039Z"}
{"level":"info","message":"Server is up on port 3000.","timestamp":"2017-12-07T16:58:24.075Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T16:58:24.114Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T16:58:24.114Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T16:58:24.114Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T16:58:24.115Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[27]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[28]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[30]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[31]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[33]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[34]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[36]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[37]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[39]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[40]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[41]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[42]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[43]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[44]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T16:58:24.115Z"}
{"level":"info","message":"Responding with a 200 code and the following data:","timestamp":"2017-12-07T16:58:24.116Z"}
{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"d64a8430-db6f-11e7-bd6b-23eed06b2c89","timestamp":"2017-12-07T16:58:24.116Z","level":"info","message":""}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T16:58:24.123Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T16:58:24.123Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T16:58:24.123Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T16:58:24.123Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.req.on (/Users/robertreed/Documents/programming/cf/401/lab/08-09-vanilla-rest-server/lab-rob/lib/req-parser.js:25:27)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-07T16:58:24.123Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T16:58:24.126Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T16:58:24.126Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T16:58:24.126Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T16:58:24.126Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[27]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[28]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[30]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[31]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[33]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[34]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[36]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[37]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[39]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[40]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[41]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[42]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[43]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[44]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T16:58:24.126Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, make not found!.","timestamp":"2017-12-07T16:58:24.126Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T16:58:24.127Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T16:58:24.128Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T16:58:24.128Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T16:58:24.128Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[27]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[28]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[30]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[31]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[33]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[34]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[36]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[37]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[39]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[40]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[41]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[42]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[43]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[44]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T16:58:24.128Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, model not found!.","timestamp":"2017-12-07T16:58:24.128Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T16:58:24.129Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T16:58:24.129Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T16:58:24.129Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T16:58:24.129Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[27]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[28]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[30]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[31]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[33]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[34]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[36]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[37]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[39]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[40]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[41]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[42]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[43]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[44]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T16:58:24.129Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, year not found!.","timestamp":"2017-12-07T16:58:24.129Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T16:58:24.131Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T16:58:24.131Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T16:58:24.131Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T16:58:24.131Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[27]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[28]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[30]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[31]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[33]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[34]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[36]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[37]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[39]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[40]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[41]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[42]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[43]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[44]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T16:58:24.131Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, displacement not found!.","timestamp":"2017-12-07T16:58:24.131Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T16:58:24.133Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T16:58:24.133Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T16:58:24.133Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T16:58:24.133Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[27]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[28]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[30]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[31]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[33]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[34]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[36]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[37]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[39]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[40]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[41]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[42]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[43]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[44]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T16:58:24.133Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, color not found!.","timestamp":"2017-12-07T16:58:24.133Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T16:58:24.134Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T16:58:24.134Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T16:58:24.135Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T16:58:24.135Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[7]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[46]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[47]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[6][0]++;\n    let requestedBike = /* istanbul ignore next */(cov_ratewsw8z.s[48]++, getBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[49]++;\n    if (requestedBike)\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][0]++;cov_ratewsw8z.s[50]++;sendJSON(res, 200, requestedBike);} else\n\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][1]++;cov_ratewsw8z.s[51]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[6][1]++;cov_ratewsw8z.s[52]++;sendJSON(res, 200, trialsBikes);}\n}","timestamp":"2017-12-07T16:58:24.135Z"}
{"level":"info","message":"Responding with a 200 code and the following data:","timestamp":"2017-12-07T16:58:24.135Z"}
[{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"d64a8430-db6f-11e7-bd6b-23eed06b2c89","timestamp":"2017-12-07T16:58:24.116Z"}]
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T16:58:24.137Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes?id=d64a8430-db6f-11e7-bd6b-23eed06b2c89\"","timestamp":"2017-12-07T16:58:24.137Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=d64a8430-db6f-11e7-bd6b-23eed06b2c89\",\"query\":{\"id\":\"d64a8430-db6f-11e7-bd6b-23eed06b2c89\"},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes?id=d64a8430-db6f-11e7-bd6b-23eed06b2c89\",\"href\":\"/api/trials-bikes?id=d64a8430-db6f-11e7-bd6b-23eed06b2c89\"}","timestamp":"2017-12-07T16:58:24.137Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T16:58:24.137Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[7]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[46]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[47]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[6][0]++;\n    let requestedBike = /* istanbul ignore next */(cov_ratewsw8z.s[48]++, getBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[49]++;\n    if (requestedBike)\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][0]++;cov_ratewsw8z.s[50]++;sendJSON(res, 200, requestedBike);} else\n\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][1]++;cov_ratewsw8z.s[51]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[6][1]++;cov_ratewsw8z.s[52]++;sendJSON(res, 200, trialsBikes);}\n}","timestamp":"2017-12-07T16:58:24.137Z"}
{"level":"info","message":"Responding with a 200 code and the following data:","timestamp":"2017-12-07T16:58:24.138Z"}
{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"d64a8430-db6f-11e7-bd6b-23eed06b2c89","timestamp":"2017-12-07T16:58:24.138Z","level":"info","message":""}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T16:58:24.139Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes?id=hamburger\"","timestamp":"2017-12-07T16:58:24.139Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=hamburger\",\"query\":{\"id\":\"hamburger\"},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes?id=hamburger\",\"href\":\"/api/trials-bikes?id=hamburger\"}","timestamp":"2017-12-07T16:58:24.139Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T16:58:24.139Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[7]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[46]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[47]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[6][0]++;\n    let requestedBike = /* istanbul ignore next */(cov_ratewsw8z.s[48]++, getBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[49]++;\n    if (requestedBike)\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][0]++;cov_ratewsw8z.s[50]++;sendJSON(res, 200, requestedBike);} else\n\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][1]++;cov_ratewsw8z.s[51]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[6][1]++;cov_ratewsw8z.s[52]++;sendJSON(res, 200, trialsBikes);}\n}","timestamp":"2017-12-07T16:58:24.139Z"}
{"level":"info","message":"Responding with a 404 code due to No bike with id \"hamburger\"..","timestamp":"2017-12-07T16:58:24.139Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T16:58:24.141Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes?id=d64a8430-db6f-11e7-bd6b-23eed06b2c89\"","timestamp":"2017-12-07T16:58:24.141Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=d64a8430-db6f-11e7-bd6b-23eed06b2c89\",\"query\":{\"id\":\"d64a8430-db6f-11e7-bd6b-23eed06b2c89\"},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes?id=d64a8430-db6f-11e7-bd6b-23eed06b2c89\",\"href\":\"/api/trials-bikes?id=d64a8430-db6f-11e7-bd6b-23eed06b2c89\"}","timestamp":"2017-12-07T16:58:24.141Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T16:58:24.141Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[8]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[54]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[55]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[8][0]++;\n    let removedBike = /* istanbul ignore next */(cov_ratewsw8z.s[56]++, removeBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[57]++;\n    if (removedBike) {/* istanbul ignore next */cov_ratewsw8z.b[9][0]++;cov_ratewsw8z.s[58]++;\n      logger.log('info', `Bike deleted, responding with a 204 code.`); /* istanbul ignore next */cov_ratewsw8z.s[59]++;\n      res.writeHead(204); /* istanbul ignore next */cov_ratewsw8z.s[60]++;\n      res.end();\n    } else\n      {/* istanbul ignore next */cov_ratewsw8z.b[9][1]++;cov_ratewsw8z.s[61]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[8][1]++;cov_ratewsw8z.s[62]++;sendBadStatus(res, 400, `bad request, no id.`);}\n}","timestamp":"2017-12-07T16:58:24.141Z"}
{"level":"info","message":"Bike deleted, responding with a 204 code.","timestamp":"2017-12-07T16:58:24.141Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T16:58:24.143Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T16:58:24.143Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T16:58:24.143Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T16:58:24.143Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[8]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[54]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[55]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[8][0]++;\n    let removedBike = /* istanbul ignore next */(cov_ratewsw8z.s[56]++, removeBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[57]++;\n    if (removedBike) {/* istanbul ignore next */cov_ratewsw8z.b[9][0]++;cov_ratewsw8z.s[58]++;\n      logger.log('info', `Bike deleted, responding with a 204 code.`); /* istanbul ignore next */cov_ratewsw8z.s[59]++;\n      res.writeHead(204); /* istanbul ignore next */cov_ratewsw8z.s[60]++;\n      res.end();\n    } else\n      {/* istanbul ignore next */cov_ratewsw8z.b[9][1]++;cov_ratewsw8z.s[61]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[8][1]++;cov_ratewsw8z.s[62]++;sendBadStatus(res, 400, `bad request, no id.`);}\n}","timestamp":"2017-12-07T16:58:24.143Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, no id..","timestamp":"2017-12-07T16:58:24.143Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T16:58:24.144Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes?id=hotdogs\"","timestamp":"2017-12-07T16:58:24.144Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=hotdogs\",\"query\":{\"id\":\"hotdogs\"},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes?id=hotdogs\",\"href\":\"/api/trials-bikes?id=hotdogs\"}","timestamp":"2017-12-07T16:58:24.144Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T16:58:24.144Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[8]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[54]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[55]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[8][0]++;\n    let removedBike = /* istanbul ignore next */(cov_ratewsw8z.s[56]++, removeBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[57]++;\n    if (removedBike) {/* istanbul ignore next */cov_ratewsw8z.b[9][0]++;cov_ratewsw8z.s[58]++;\n      logger.log('info', `Bike deleted, responding with a 204 code.`); /* istanbul ignore next */cov_ratewsw8z.s[59]++;\n      res.writeHead(204); /* istanbul ignore next */cov_ratewsw8z.s[60]++;\n      res.end();\n    } else\n      {/* istanbul ignore next */cov_ratewsw8z.b[9][1]++;cov_ratewsw8z.s[61]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[8][1]++;cov_ratewsw8z.s[62]++;sendBadStatus(res, 400, `bad request, no id.`);}\n}","timestamp":"2017-12-07T16:58:24.144Z"}
{"level":"info","message":"Responding with a 404 code due to No bike with id \"hotdogs\"..","timestamp":"2017-12-07T16:58:24.145Z"}
{"level":"info","message":"Adding a POST url and callback.","timestamp":"2017-12-07T16:59:23.618Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-07T16:59:23.619Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[27]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[28]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[30]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[31]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[33]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[34]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[36]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[37]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[39]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[40]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[41]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[42]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[43]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[44]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T16:59:23.619Z"}
{"level":"info","message":"Adding a GET url and callback.","timestamp":"2017-12-07T16:59:23.619Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-07T16:59:23.619Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[7]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[46]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[47]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[6][0]++;\n    let requestedBike = /* istanbul ignore next */(cov_ratewsw8z.s[48]++, getBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[49]++;\n    if (requestedBike)\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][0]++;cov_ratewsw8z.s[50]++;sendJSON(res, 200, requestedBike);} else\n\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][1]++;cov_ratewsw8z.s[51]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[6][1]++;cov_ratewsw8z.s[52]++;sendJSON(res, 200, trialsBikes);}\n}","timestamp":"2017-12-07T16:59:23.619Z"}
{"level":"info","message":"Adding a DELETE url and callback.","timestamp":"2017-12-07T16:59:23.619Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-07T16:59:23.619Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[8]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[54]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[55]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[8][0]++;\n    let removedBike = /* istanbul ignore next */(cov_ratewsw8z.s[56]++, removeBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[57]++;\n    if (removedBike) {/* istanbul ignore next */cov_ratewsw8z.b[9][0]++;cov_ratewsw8z.s[58]++;\n      logger.log('info', `Bike deleted, responding with a 204 code.`); /* istanbul ignore next */cov_ratewsw8z.s[59]++;\n      res.writeHead(204); /* istanbul ignore next */cov_ratewsw8z.s[60]++;\n      res.end();\n    } else\n      {/* istanbul ignore next */cov_ratewsw8z.b[9][1]++;cov_ratewsw8z.s[61]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[8][1]++;cov_ratewsw8z.s[62]++;sendBadStatus(res, 400, `bad request, no id.`);}\n}","timestamp":"2017-12-07T16:59:23.619Z"}
{"level":"info","message":"Server is up on port 3000.","timestamp":"2017-12-07T16:59:23.659Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T16:59:23.700Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T16:59:23.700Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T16:59:23.700Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T16:59:23.701Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[27]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[28]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[30]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[31]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[33]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[34]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[36]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[37]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[39]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[40]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[41]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[42]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[43]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[44]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T16:59:23.701Z"}
{"level":"info","message":"Responding with a 200 code and the following data:","timestamp":"2017-12-07T16:59:23.702Z"}
{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"f9cec560-db6f-11e7-87ff-85b5389ff0bb","timestamp":"2017-12-07T16:59:23.702Z","level":"info","message":""}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T16:59:23.709Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T16:59:23.710Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T16:59:23.710Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T16:59:23.710Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.req.on (/Users/robertreed/Documents/programming/cf/401/lab/08-09-vanilla-rest-server/lab-rob/lib/req-parser.js:25:27)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-07T16:59:23.710Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T16:59:23.712Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T16:59:23.712Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T16:59:23.713Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T16:59:23.713Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[27]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[28]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[30]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[31]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[33]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[34]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[36]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[37]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[39]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[40]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[41]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[42]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[43]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[44]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T16:59:23.713Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, make not found!.","timestamp":"2017-12-07T16:59:23.713Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T16:59:23.715Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T16:59:23.715Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T16:59:23.715Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T16:59:23.715Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[27]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[28]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[30]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[31]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[33]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[34]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[36]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[37]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[39]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[40]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[41]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[42]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[43]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[44]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T16:59:23.715Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, model not found!.","timestamp":"2017-12-07T16:59:23.715Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T16:59:23.716Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T16:59:23.717Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T16:59:23.717Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T16:59:23.717Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[27]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[28]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[30]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[31]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[33]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[34]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[36]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[37]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[39]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[40]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[41]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[42]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[43]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[44]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T16:59:23.717Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, year not found!.","timestamp":"2017-12-07T16:59:23.717Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T16:59:23.718Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T16:59:23.719Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T16:59:23.719Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T16:59:23.719Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[27]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[28]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[30]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[31]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[33]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[34]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[36]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[37]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[39]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[40]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[41]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[42]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[43]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[44]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T16:59:23.719Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, displacement not found!.","timestamp":"2017-12-07T16:59:23.719Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T16:59:23.721Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T16:59:23.721Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T16:59:23.721Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T16:59:23.721Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[27]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[28]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[30]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[31]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[33]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[34]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[36]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[37]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[39]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[40]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[41]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[42]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[43]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[44]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T16:59:23.721Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, color not found!.","timestamp":"2017-12-07T16:59:23.721Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T16:59:23.722Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T16:59:23.723Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T16:59:23.723Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T16:59:23.723Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[7]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[46]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[47]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[6][0]++;\n    let requestedBike = /* istanbul ignore next */(cov_ratewsw8z.s[48]++, getBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[49]++;\n    if (requestedBike)\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][0]++;cov_ratewsw8z.s[50]++;sendJSON(res, 200, requestedBike);} else\n\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][1]++;cov_ratewsw8z.s[51]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[6][1]++;cov_ratewsw8z.s[52]++;sendJSON(res, 200, trialsBikes);}\n}","timestamp":"2017-12-07T16:59:23.723Z"}
{"level":"info","message":"Responding with a 200 code and the following data:","timestamp":"2017-12-07T16:59:23.723Z"}
[{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"f9cec560-db6f-11e7-87ff-85b5389ff0bb","timestamp":"2017-12-07T16:59:23.702Z"}]
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T16:59:23.725Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes?id=f9cec560-db6f-11e7-87ff-85b5389ff0bb\"","timestamp":"2017-12-07T16:59:23.725Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=f9cec560-db6f-11e7-87ff-85b5389ff0bb\",\"query\":{\"id\":\"f9cec560-db6f-11e7-87ff-85b5389ff0bb\"},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes?id=f9cec560-db6f-11e7-87ff-85b5389ff0bb\",\"href\":\"/api/trials-bikes?id=f9cec560-db6f-11e7-87ff-85b5389ff0bb\"}","timestamp":"2017-12-07T16:59:23.725Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T16:59:23.725Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[7]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[46]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[47]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[6][0]++;\n    let requestedBike = /* istanbul ignore next */(cov_ratewsw8z.s[48]++, getBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[49]++;\n    if (requestedBike)\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][0]++;cov_ratewsw8z.s[50]++;sendJSON(res, 200, requestedBike);} else\n\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][1]++;cov_ratewsw8z.s[51]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[6][1]++;cov_ratewsw8z.s[52]++;sendJSON(res, 200, trialsBikes);}\n}","timestamp":"2017-12-07T16:59:23.725Z"}
{"level":"info","message":"Responding with a 200 code and the following data:","timestamp":"2017-12-07T16:59:23.726Z"}
{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"f9cec560-db6f-11e7-87ff-85b5389ff0bb","timestamp":"2017-12-07T16:59:23.726Z","level":"info","message":""}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T16:59:23.727Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes?id=hamburger\"","timestamp":"2017-12-07T16:59:23.727Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=hamburger\",\"query\":{\"id\":\"hamburger\"},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes?id=hamburger\",\"href\":\"/api/trials-bikes?id=hamburger\"}","timestamp":"2017-12-07T16:59:23.727Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T16:59:23.727Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[7]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[46]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[47]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[6][0]++;\n    let requestedBike = /* istanbul ignore next */(cov_ratewsw8z.s[48]++, getBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[49]++;\n    if (requestedBike)\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][0]++;cov_ratewsw8z.s[50]++;sendJSON(res, 200, requestedBike);} else\n\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][1]++;cov_ratewsw8z.s[51]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[6][1]++;cov_ratewsw8z.s[52]++;sendJSON(res, 200, trialsBikes);}\n}","timestamp":"2017-12-07T16:59:23.727Z"}
{"level":"info","message":"Responding with a 404 code due to No bike with id \"hamburger\"..","timestamp":"2017-12-07T16:59:23.727Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T16:59:23.729Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes?id=f9cec560-db6f-11e7-87ff-85b5389ff0bb\"","timestamp":"2017-12-07T16:59:23.729Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=f9cec560-db6f-11e7-87ff-85b5389ff0bb\",\"query\":{\"id\":\"f9cec560-db6f-11e7-87ff-85b5389ff0bb\"},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes?id=f9cec560-db6f-11e7-87ff-85b5389ff0bb\",\"href\":\"/api/trials-bikes?id=f9cec560-db6f-11e7-87ff-85b5389ff0bb\"}","timestamp":"2017-12-07T16:59:23.729Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T16:59:23.729Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[8]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[54]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[55]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[8][0]++;\n    let removedBike = /* istanbul ignore next */(cov_ratewsw8z.s[56]++, removeBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[57]++;\n    if (removedBike) {/* istanbul ignore next */cov_ratewsw8z.b[9][0]++;cov_ratewsw8z.s[58]++;\n      logger.log('info', `Bike deleted, responding with a 204 code.`); /* istanbul ignore next */cov_ratewsw8z.s[59]++;\n      res.writeHead(204); /* istanbul ignore next */cov_ratewsw8z.s[60]++;\n      res.end();\n    } else\n      {/* istanbul ignore next */cov_ratewsw8z.b[9][1]++;cov_ratewsw8z.s[61]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[8][1]++;cov_ratewsw8z.s[62]++;sendBadStatus(res, 400, `bad request, no id.`);}\n}","timestamp":"2017-12-07T16:59:23.729Z"}
{"level":"info","message":"Bike deleted, responding with a 204 code.","timestamp":"2017-12-07T16:59:23.730Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T16:59:23.732Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T16:59:23.732Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T16:59:23.732Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T16:59:23.732Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[8]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[54]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[55]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[8][0]++;\n    let removedBike = /* istanbul ignore next */(cov_ratewsw8z.s[56]++, removeBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[57]++;\n    if (removedBike) {/* istanbul ignore next */cov_ratewsw8z.b[9][0]++;cov_ratewsw8z.s[58]++;\n      logger.log('info', `Bike deleted, responding with a 204 code.`); /* istanbul ignore next */cov_ratewsw8z.s[59]++;\n      res.writeHead(204); /* istanbul ignore next */cov_ratewsw8z.s[60]++;\n      res.end();\n    } else\n      {/* istanbul ignore next */cov_ratewsw8z.b[9][1]++;cov_ratewsw8z.s[61]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[8][1]++;cov_ratewsw8z.s[62]++;sendBadStatus(res, 400, `bad request, no id.`);}\n}","timestamp":"2017-12-07T16:59:23.732Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, no id..","timestamp":"2017-12-07T16:59:23.732Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T16:59:23.733Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes?id=hotdogs\"","timestamp":"2017-12-07T16:59:23.733Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=hotdogs\",\"query\":{\"id\":\"hotdogs\"},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes?id=hotdogs\",\"href\":\"/api/trials-bikes?id=hotdogs\"}","timestamp":"2017-12-07T16:59:23.733Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T16:59:23.734Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[8]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[54]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[55]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[8][0]++;\n    let removedBike = /* istanbul ignore next */(cov_ratewsw8z.s[56]++, removeBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[57]++;\n    if (removedBike) {/* istanbul ignore next */cov_ratewsw8z.b[9][0]++;cov_ratewsw8z.s[58]++;\n      logger.log('info', `Bike deleted, responding with a 204 code.`); /* istanbul ignore next */cov_ratewsw8z.s[59]++;\n      res.writeHead(204); /* istanbul ignore next */cov_ratewsw8z.s[60]++;\n      res.end();\n    } else\n      {/* istanbul ignore next */cov_ratewsw8z.b[9][1]++;cov_ratewsw8z.s[61]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[8][1]++;cov_ratewsw8z.s[62]++;sendBadStatus(res, 400, `bad request, no id.`);}\n}","timestamp":"2017-12-07T16:59:23.734Z"}
{"level":"info","message":"Responding with a 404 code due to No bike with id \"hotdogs\"..","timestamp":"2017-12-07T16:59:23.734Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T16:59:23.735Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes?id=hotdogs\"","timestamp":"2017-12-07T16:59:23.735Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=hotdogs\",\"query\":{\"id\":\"hotdogs\"},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes?id=hotdogs\",\"href\":\"/api/trials-bikes?id=hotdogs\"}","timestamp":"2017-12-07T16:59:23.735Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T16:59:23.736Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[8]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[54]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[55]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[8][0]++;\n    let removedBike = /* istanbul ignore next */(cov_ratewsw8z.s[56]++, removeBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[57]++;\n    if (removedBike) {/* istanbul ignore next */cov_ratewsw8z.b[9][0]++;cov_ratewsw8z.s[58]++;\n      logger.log('info', `Bike deleted, responding with a 204 code.`); /* istanbul ignore next */cov_ratewsw8z.s[59]++;\n      res.writeHead(204); /* istanbul ignore next */cov_ratewsw8z.s[60]++;\n      res.end();\n    } else\n      {/* istanbul ignore next */cov_ratewsw8z.b[9][1]++;cov_ratewsw8z.s[61]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[8][1]++;cov_ratewsw8z.s[62]++;sendBadStatus(res, 400, `bad request, no id.`);}\n}","timestamp":"2017-12-07T16:59:23.736Z"}
{"level":"info","message":"Responding with a 404 code due to No bike with id \"hotdogs\"..","timestamp":"2017-12-07T16:59:23.736Z"}
{"level":"info","message":"Adding a POST url and callback.","timestamp":"2017-12-07T17:00:55.685Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-07T17:00:55.686Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[27]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[28]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[30]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[31]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[33]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[34]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[36]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[37]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[39]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[40]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[41]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[42]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[43]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[44]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T17:00:55.686Z"}
{"level":"info","message":"Adding a GET url and callback.","timestamp":"2017-12-07T17:00:55.686Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-07T17:00:55.686Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[7]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[46]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[47]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[6][0]++;\n    let requestedBike = /* istanbul ignore next */(cov_ratewsw8z.s[48]++, getBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[49]++;\n    if (requestedBike)\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][0]++;cov_ratewsw8z.s[50]++;sendJSON(res, 200, requestedBike);} else\n\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][1]++;cov_ratewsw8z.s[51]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[6][1]++;cov_ratewsw8z.s[52]++;sendJSON(res, 200, trialsBikes);}\n}","timestamp":"2017-12-07T17:00:55.686Z"}
{"level":"info","message":"Adding a DELETE url and callback.","timestamp":"2017-12-07T17:00:55.686Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-07T17:00:55.686Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[8]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[54]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[55]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[8][0]++;\n    let removedBike = /* istanbul ignore next */(cov_ratewsw8z.s[56]++, removeBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[57]++;\n    if (removedBike) {/* istanbul ignore next */cov_ratewsw8z.b[9][0]++;cov_ratewsw8z.s[58]++;\n      logger.log('info', `Bike deleted, responding with a 204 code.`); /* istanbul ignore next */cov_ratewsw8z.s[59]++;\n      res.writeHead(204); /* istanbul ignore next */cov_ratewsw8z.s[60]++;\n      res.end();\n    } else\n      {/* istanbul ignore next */cov_ratewsw8z.b[9][1]++;cov_ratewsw8z.s[61]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[8][1]++;cov_ratewsw8z.s[62]++;sendBadStatus(res, 400, `bad request, no id.`);}\n}","timestamp":"2017-12-07T17:00:55.686Z"}
{"level":"info","message":"Server is up on port 3000.","timestamp":"2017-12-07T17:00:55.722Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T17:00:55.763Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T17:00:55.763Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T17:00:55.763Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T17:00:55.764Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[27]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[28]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[30]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[31]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[33]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[34]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[36]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[37]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[39]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[40]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[41]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[42]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[43]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[44]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T17:00:55.764Z"}
{"level":"info","message":"Responding with a 200 code and the following data:","timestamp":"2017-12-07T17:00:55.764Z"}
{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"30ae5140-db70-11e7-b64d-5f204e946e7e","timestamp":"2017-12-07T17:00:55.764Z","level":"info","message":""}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T17:00:55.772Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T17:00:55.772Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T17:00:55.772Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T17:00:55.772Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.req.on (/Users/robertreed/Documents/programming/cf/401/lab/08-09-vanilla-rest-server/lab-rob/lib/req-parser.js:25:27)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-07T17:00:55.772Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T17:00:55.775Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T17:00:55.775Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T17:00:55.775Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T17:00:55.775Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[27]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[28]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[30]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[31]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[33]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[34]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[36]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[37]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[39]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[40]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[41]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[42]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[43]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[44]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T17:00:55.775Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, make not found!.","timestamp":"2017-12-07T17:00:55.775Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T17:00:55.777Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T17:00:55.777Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T17:00:55.777Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T17:00:55.777Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[27]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[28]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[30]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[31]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[33]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[34]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[36]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[37]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[39]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[40]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[41]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[42]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[43]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[44]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T17:00:55.777Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, model not found!.","timestamp":"2017-12-07T17:00:55.777Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T17:00:55.779Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T17:00:55.779Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T17:00:55.779Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T17:00:55.779Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[27]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[28]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[30]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[31]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[33]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[34]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[36]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[37]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[39]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[40]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[41]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[42]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[43]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[44]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T17:00:55.779Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, year not found!.","timestamp":"2017-12-07T17:00:55.779Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T17:00:55.780Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T17:00:55.780Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T17:00:55.781Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T17:00:55.781Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[27]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[28]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[30]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[31]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[33]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[34]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[36]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[37]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[39]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[40]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[41]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[42]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[43]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[44]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T17:00:55.781Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, displacement not found!.","timestamp":"2017-12-07T17:00:55.781Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T17:00:55.782Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T17:00:55.782Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T17:00:55.782Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T17:00:55.782Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[27]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[28]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[30]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[31]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[33]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[34]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[36]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[37]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[39]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[40]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[41]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[42]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[43]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[44]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T17:00:55.782Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, color not found!.","timestamp":"2017-12-07T17:00:55.782Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T17:00:55.784Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T17:00:55.784Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T17:00:55.784Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T17:00:55.784Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[7]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[46]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[47]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[6][0]++;\n    let requestedBike = /* istanbul ignore next */(cov_ratewsw8z.s[48]++, getBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[49]++;\n    if (requestedBike)\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][0]++;cov_ratewsw8z.s[50]++;sendJSON(res, 200, requestedBike);} else\n\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][1]++;cov_ratewsw8z.s[51]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[6][1]++;cov_ratewsw8z.s[52]++;sendJSON(res, 200, trialsBikes);}\n}","timestamp":"2017-12-07T17:00:55.784Z"}
{"level":"info","message":"Responding with a 200 code and the following data:","timestamp":"2017-12-07T17:00:55.784Z"}
[{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"30ae5140-db70-11e7-b64d-5f204e946e7e","timestamp":"2017-12-07T17:00:55.764Z"}]
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T17:00:55.786Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes?id=30ae5140-db70-11e7-b64d-5f204e946e7e\"","timestamp":"2017-12-07T17:00:55.786Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=30ae5140-db70-11e7-b64d-5f204e946e7e\",\"query\":{\"id\":\"30ae5140-db70-11e7-b64d-5f204e946e7e\"},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes?id=30ae5140-db70-11e7-b64d-5f204e946e7e\",\"href\":\"/api/trials-bikes?id=30ae5140-db70-11e7-b64d-5f204e946e7e\"}","timestamp":"2017-12-07T17:00:55.786Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T17:00:55.787Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[7]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[46]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[47]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[6][0]++;\n    let requestedBike = /* istanbul ignore next */(cov_ratewsw8z.s[48]++, getBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[49]++;\n    if (requestedBike)\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][0]++;cov_ratewsw8z.s[50]++;sendJSON(res, 200, requestedBike);} else\n\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][1]++;cov_ratewsw8z.s[51]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[6][1]++;cov_ratewsw8z.s[52]++;sendJSON(res, 200, trialsBikes);}\n}","timestamp":"2017-12-07T17:00:55.787Z"}
{"level":"info","message":"Responding with a 200 code and the following data:","timestamp":"2017-12-07T17:00:55.787Z"}
{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"30ae5140-db70-11e7-b64d-5f204e946e7e","timestamp":"2017-12-07T17:00:55.787Z","level":"info","message":""}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T17:00:55.788Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes?id=hamburger\"","timestamp":"2017-12-07T17:00:55.788Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=hamburger\",\"query\":{\"id\":\"hamburger\"},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes?id=hamburger\",\"href\":\"/api/trials-bikes?id=hamburger\"}","timestamp":"2017-12-07T17:00:55.788Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T17:00:55.788Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[7]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[46]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[47]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[6][0]++;\n    let requestedBike = /* istanbul ignore next */(cov_ratewsw8z.s[48]++, getBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[49]++;\n    if (requestedBike)\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][0]++;cov_ratewsw8z.s[50]++;sendJSON(res, 200, requestedBike);} else\n\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][1]++;cov_ratewsw8z.s[51]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[6][1]++;cov_ratewsw8z.s[52]++;sendJSON(res, 200, trialsBikes);}\n}","timestamp":"2017-12-07T17:00:55.789Z"}
{"level":"info","message":"Responding with a 404 code due to No bike with id \"hamburger\"..","timestamp":"2017-12-07T17:00:55.789Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T17:00:55.790Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes?id=30ae5140-db70-11e7-b64d-5f204e946e7e\"","timestamp":"2017-12-07T17:00:55.790Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=30ae5140-db70-11e7-b64d-5f204e946e7e\",\"query\":{\"id\":\"30ae5140-db70-11e7-b64d-5f204e946e7e\"},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes?id=30ae5140-db70-11e7-b64d-5f204e946e7e\",\"href\":\"/api/trials-bikes?id=30ae5140-db70-11e7-b64d-5f204e946e7e\"}","timestamp":"2017-12-07T17:00:55.790Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T17:00:55.790Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[8]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[54]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[55]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[8][0]++;\n    let removedBike = /* istanbul ignore next */(cov_ratewsw8z.s[56]++, removeBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[57]++;\n    if (removedBike) {/* istanbul ignore next */cov_ratewsw8z.b[9][0]++;cov_ratewsw8z.s[58]++;\n      logger.log('info', `Bike deleted, responding with a 204 code.`); /* istanbul ignore next */cov_ratewsw8z.s[59]++;\n      res.writeHead(204); /* istanbul ignore next */cov_ratewsw8z.s[60]++;\n      res.end();\n    } else\n      {/* istanbul ignore next */cov_ratewsw8z.b[9][1]++;cov_ratewsw8z.s[61]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[8][1]++;cov_ratewsw8z.s[62]++;sendBadStatus(res, 400, `bad request, no id.`);}\n}","timestamp":"2017-12-07T17:00:55.790Z"}
{"level":"info","message":"Bike deleted, responding with a 204 code.","timestamp":"2017-12-07T17:00:55.791Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T17:00:55.792Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T17:00:55.792Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T17:00:55.792Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T17:00:55.792Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[8]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[54]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[55]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[8][0]++;\n    let removedBike = /* istanbul ignore next */(cov_ratewsw8z.s[56]++, removeBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[57]++;\n    if (removedBike) {/* istanbul ignore next */cov_ratewsw8z.b[9][0]++;cov_ratewsw8z.s[58]++;\n      logger.log('info', `Bike deleted, responding with a 204 code.`); /* istanbul ignore next */cov_ratewsw8z.s[59]++;\n      res.writeHead(204); /* istanbul ignore next */cov_ratewsw8z.s[60]++;\n      res.end();\n    } else\n      {/* istanbul ignore next */cov_ratewsw8z.b[9][1]++;cov_ratewsw8z.s[61]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[8][1]++;cov_ratewsw8z.s[62]++;sendBadStatus(res, 400, `bad request, no id.`);}\n}","timestamp":"2017-12-07T17:00:55.792Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, no id..","timestamp":"2017-12-07T17:00:55.792Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T17:00:55.794Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes?id=hotdogs\"","timestamp":"2017-12-07T17:00:55.794Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=hotdogs\",\"query\":{\"id\":\"hotdogs\"},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes?id=hotdogs\",\"href\":\"/api/trials-bikes?id=hotdogs\"}","timestamp":"2017-12-07T17:00:55.794Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T17:00:55.795Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[8]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[54]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[55]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[8][0]++;\n    let removedBike = /* istanbul ignore next */(cov_ratewsw8z.s[56]++, removeBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[57]++;\n    if (removedBike) {/* istanbul ignore next */cov_ratewsw8z.b[9][0]++;cov_ratewsw8z.s[58]++;\n      logger.log('info', `Bike deleted, responding with a 204 code.`); /* istanbul ignore next */cov_ratewsw8z.s[59]++;\n      res.writeHead(204); /* istanbul ignore next */cov_ratewsw8z.s[60]++;\n      res.end();\n    } else\n      {/* istanbul ignore next */cov_ratewsw8z.b[9][1]++;cov_ratewsw8z.s[61]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[8][1]++;cov_ratewsw8z.s[62]++;sendBadStatus(res, 400, `bad request, no id.`);}\n}","timestamp":"2017-12-07T17:00:55.795Z"}
{"level":"info","message":"Responding with a 404 code due to No bike with id \"hotdogs\"..","timestamp":"2017-12-07T17:00:55.795Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T17:00:55.796Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes?id=hotdogs\"","timestamp":"2017-12-07T17:00:55.796Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=hotdogs\",\"query\":{\"id\":\"hotdogs\"},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes?id=hotdogs\",\"href\":\"/api/trials-bikes?id=hotdogs\"}","timestamp":"2017-12-07T17:00:55.796Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T17:00:55.796Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[8]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[54]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[55]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[8][0]++;\n    let removedBike = /* istanbul ignore next */(cov_ratewsw8z.s[56]++, removeBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[57]++;\n    if (removedBike) {/* istanbul ignore next */cov_ratewsw8z.b[9][0]++;cov_ratewsw8z.s[58]++;\n      logger.log('info', `Bike deleted, responding with a 204 code.`); /* istanbul ignore next */cov_ratewsw8z.s[59]++;\n      res.writeHead(204); /* istanbul ignore next */cov_ratewsw8z.s[60]++;\n      res.end();\n    } else\n      {/* istanbul ignore next */cov_ratewsw8z.b[9][1]++;cov_ratewsw8z.s[61]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[8][1]++;cov_ratewsw8z.s[62]++;sendBadStatus(res, 400, `bad request, no id.`);}\n}","timestamp":"2017-12-07T17:00:55.796Z"}
{"level":"info","message":"Responding with a 404 code due to No bike with id \"hotdogs\"..","timestamp":"2017-12-07T17:00:55.796Z"}
{"level":"info","message":"Adding a POST url and callback.","timestamp":"2017-12-07T17:01:32.379Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-07T17:01:32.379Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[27]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[28]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[30]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[31]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[33]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[34]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[36]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[37]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[39]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[40]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[41]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[42]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[43]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[44]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T17:01:32.379Z"}
{"level":"info","message":"Adding a GET url and callback.","timestamp":"2017-12-07T17:01:32.379Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-07T17:01:32.380Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[7]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[46]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[47]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[6][0]++;\n    let requestedBike = /* istanbul ignore next */(cov_ratewsw8z.s[48]++, getBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[49]++;\n    if (requestedBike)\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][0]++;cov_ratewsw8z.s[50]++;sendJSON(res, 200, requestedBike);} else\n\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][1]++;cov_ratewsw8z.s[51]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[6][1]++;cov_ratewsw8z.s[52]++;sendJSON(res, 200, trialsBikes);}\n}","timestamp":"2017-12-07T17:01:32.380Z"}
{"level":"info","message":"Adding a DELETE url and callback.","timestamp":"2017-12-07T17:01:32.380Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-07T17:01:32.380Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[8]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[54]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[55]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[8][0]++;\n    let removedBike = /* istanbul ignore next */(cov_ratewsw8z.s[56]++, removeBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[57]++;\n    if (removedBike) {/* istanbul ignore next */cov_ratewsw8z.b[9][0]++;cov_ratewsw8z.s[58]++;\n      logger.log('info', `Bike deleted, responding with a 204 code.`); /* istanbul ignore next */cov_ratewsw8z.s[59]++;\n      res.writeHead(204); /* istanbul ignore next */cov_ratewsw8z.s[60]++;\n      res.end();\n    } else\n      {/* istanbul ignore next */cov_ratewsw8z.b[9][1]++;cov_ratewsw8z.s[61]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[8][1]++;cov_ratewsw8z.s[62]++;sendBadStatus(res, 400, `bad request, no id.`);}\n}","timestamp":"2017-12-07T17:01:32.380Z"}
{"level":"info","message":"Server is up on port 3000.","timestamp":"2017-12-07T17:01:32.420Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T17:01:32.433Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T17:01:32.433Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T17:01:32.433Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T17:01:32.434Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[27]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[28]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[30]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[31]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[33]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[34]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[36]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[37]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[39]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[40]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[41]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[42]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[43]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[44]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T17:01:32.434Z"}
{"level":"info","message":"Responding with a 200 code and the following data:","timestamp":"2017-12-07T17:01:32.435Z"}
{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"4689de30-db70-11e7-8bad-4de72b51c535","timestamp":"2017-12-07T17:01:32.435Z","level":"info","message":""}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T17:01:32.442Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T17:01:32.443Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T17:01:32.443Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T17:01:32.443Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.req.on (/Users/robertreed/Documents/programming/cf/401/lab/08-09-vanilla-rest-server/lab-rob/lib/req-parser.js:25:27)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-07T17:01:32.443Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T17:01:32.446Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T17:01:32.446Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T17:01:32.446Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T17:01:32.446Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[27]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[28]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[30]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[31]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[33]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[34]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[36]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[37]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[39]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[40]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[41]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[42]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[43]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[44]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T17:01:32.446Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, make not found!.","timestamp":"2017-12-07T17:01:32.446Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T17:01:32.448Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T17:01:32.448Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T17:01:32.448Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T17:01:32.448Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[27]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[28]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[30]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[31]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[33]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[34]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[36]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[37]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[39]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[40]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[41]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[42]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[43]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[44]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T17:01:32.448Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, model not found!.","timestamp":"2017-12-07T17:01:32.448Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T17:01:32.450Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T17:01:32.450Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T17:01:32.450Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T17:01:32.450Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[27]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[28]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[30]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[31]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[33]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[34]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[36]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[37]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[39]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[40]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[41]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[42]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[43]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[44]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T17:01:32.450Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, year not found!.","timestamp":"2017-12-07T17:01:32.450Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T17:01:32.452Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T17:01:32.452Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T17:01:32.452Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T17:01:32.452Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[27]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[28]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[30]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[31]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[33]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[34]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[36]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[37]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[39]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[40]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[41]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[42]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[43]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[44]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T17:01:32.452Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, displacement not found!.","timestamp":"2017-12-07T17:01:32.452Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T17:01:32.454Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T17:01:32.454Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T17:01:32.454Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T17:01:32.454Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[27]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[28]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[30]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[31]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[33]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[34]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[36]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[37]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[39]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[40]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[41]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[42]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[43]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[44]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T17:01:32.454Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, color not found!.","timestamp":"2017-12-07T17:01:32.454Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T17:01:32.456Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T17:01:32.456Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T17:01:32.456Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T17:01:32.456Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[7]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[46]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[47]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[6][0]++;\n    let requestedBike = /* istanbul ignore next */(cov_ratewsw8z.s[48]++, getBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[49]++;\n    if (requestedBike)\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][0]++;cov_ratewsw8z.s[50]++;sendJSON(res, 200, requestedBike);} else\n\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][1]++;cov_ratewsw8z.s[51]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[6][1]++;cov_ratewsw8z.s[52]++;sendJSON(res, 200, trialsBikes);}\n}","timestamp":"2017-12-07T17:01:32.456Z"}
{"level":"info","message":"Responding with a 200 code and the following data:","timestamp":"2017-12-07T17:01:32.456Z"}
[{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"4689de30-db70-11e7-8bad-4de72b51c535","timestamp":"2017-12-07T17:01:32.435Z"}]
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T17:01:32.458Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes?id=4689de30-db70-11e7-8bad-4de72b51c535\"","timestamp":"2017-12-07T17:01:32.458Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=4689de30-db70-11e7-8bad-4de72b51c535\",\"query\":{\"id\":\"4689de30-db70-11e7-8bad-4de72b51c535\"},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes?id=4689de30-db70-11e7-8bad-4de72b51c535\",\"href\":\"/api/trials-bikes?id=4689de30-db70-11e7-8bad-4de72b51c535\"}","timestamp":"2017-12-07T17:01:32.459Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T17:01:32.459Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[7]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[46]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[47]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[6][0]++;\n    let requestedBike = /* istanbul ignore next */(cov_ratewsw8z.s[48]++, getBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[49]++;\n    if (requestedBike)\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][0]++;cov_ratewsw8z.s[50]++;sendJSON(res, 200, requestedBike);} else\n\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][1]++;cov_ratewsw8z.s[51]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[6][1]++;cov_ratewsw8z.s[52]++;sendJSON(res, 200, trialsBikes);}\n}","timestamp":"2017-12-07T17:01:32.459Z"}
{"level":"info","message":"Responding with a 200 code and the following data:","timestamp":"2017-12-07T17:01:32.459Z"}
{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"4689de30-db70-11e7-8bad-4de72b51c535","timestamp":"2017-12-07T17:01:32.459Z","level":"info","message":""}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T17:01:32.461Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes?id=hamburger\"","timestamp":"2017-12-07T17:01:32.461Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=hamburger\",\"query\":{\"id\":\"hamburger\"},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes?id=hamburger\",\"href\":\"/api/trials-bikes?id=hamburger\"}","timestamp":"2017-12-07T17:01:32.461Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T17:01:32.461Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[7]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[46]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[47]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[6][0]++;\n    let requestedBike = /* istanbul ignore next */(cov_ratewsw8z.s[48]++, getBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[49]++;\n    if (requestedBike)\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][0]++;cov_ratewsw8z.s[50]++;sendJSON(res, 200, requestedBike);} else\n\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][1]++;cov_ratewsw8z.s[51]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[6][1]++;cov_ratewsw8z.s[52]++;sendJSON(res, 200, trialsBikes);}\n}","timestamp":"2017-12-07T17:01:32.461Z"}
{"level":"info","message":"Responding with a 404 code due to No bike with id \"hamburger\"..","timestamp":"2017-12-07T17:01:32.461Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T17:01:32.463Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes?id=4689de30-db70-11e7-8bad-4de72b51c535\"","timestamp":"2017-12-07T17:01:32.463Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=4689de30-db70-11e7-8bad-4de72b51c535\",\"query\":{\"id\":\"4689de30-db70-11e7-8bad-4de72b51c535\"},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes?id=4689de30-db70-11e7-8bad-4de72b51c535\",\"href\":\"/api/trials-bikes?id=4689de30-db70-11e7-8bad-4de72b51c535\"}","timestamp":"2017-12-07T17:01:32.463Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T17:01:32.463Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[8]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[54]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[55]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[8][0]++;\n    let removedBike = /* istanbul ignore next */(cov_ratewsw8z.s[56]++, removeBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[57]++;\n    if (removedBike) {/* istanbul ignore next */cov_ratewsw8z.b[9][0]++;cov_ratewsw8z.s[58]++;\n      logger.log('info', `Bike deleted, responding with a 204 code.`); /* istanbul ignore next */cov_ratewsw8z.s[59]++;\n      res.writeHead(204); /* istanbul ignore next */cov_ratewsw8z.s[60]++;\n      res.end();\n    } else\n      {/* istanbul ignore next */cov_ratewsw8z.b[9][1]++;cov_ratewsw8z.s[61]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[8][1]++;cov_ratewsw8z.s[62]++;sendBadStatus(res, 400, `bad request, no id.`);}\n}","timestamp":"2017-12-07T17:01:32.463Z"}
{"level":"info","message":"Bike deleted, responding with a 204 code.","timestamp":"2017-12-07T17:01:32.463Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T17:01:32.465Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T17:01:32.465Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T17:01:32.465Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T17:01:32.465Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[8]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[54]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[55]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[8][0]++;\n    let removedBike = /* istanbul ignore next */(cov_ratewsw8z.s[56]++, removeBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[57]++;\n    if (removedBike) {/* istanbul ignore next */cov_ratewsw8z.b[9][0]++;cov_ratewsw8z.s[58]++;\n      logger.log('info', `Bike deleted, responding with a 204 code.`); /* istanbul ignore next */cov_ratewsw8z.s[59]++;\n      res.writeHead(204); /* istanbul ignore next */cov_ratewsw8z.s[60]++;\n      res.end();\n    } else\n      {/* istanbul ignore next */cov_ratewsw8z.b[9][1]++;cov_ratewsw8z.s[61]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[8][1]++;cov_ratewsw8z.s[62]++;sendBadStatus(res, 400, `bad request, no id.`);}\n}","timestamp":"2017-12-07T17:01:32.465Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, no id..","timestamp":"2017-12-07T17:01:32.465Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T17:01:32.467Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes?id=hotdogs\"","timestamp":"2017-12-07T17:01:32.467Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=hotdogs\",\"query\":{\"id\":\"hotdogs\"},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes?id=hotdogs\",\"href\":\"/api/trials-bikes?id=hotdogs\"}","timestamp":"2017-12-07T17:01:32.467Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T17:01:32.467Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[8]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[54]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[55]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[8][0]++;\n    let removedBike = /* istanbul ignore next */(cov_ratewsw8z.s[56]++, removeBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[57]++;\n    if (removedBike) {/* istanbul ignore next */cov_ratewsw8z.b[9][0]++;cov_ratewsw8z.s[58]++;\n      logger.log('info', `Bike deleted, responding with a 204 code.`); /* istanbul ignore next */cov_ratewsw8z.s[59]++;\n      res.writeHead(204); /* istanbul ignore next */cov_ratewsw8z.s[60]++;\n      res.end();\n    } else\n      {/* istanbul ignore next */cov_ratewsw8z.b[9][1]++;cov_ratewsw8z.s[61]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[8][1]++;cov_ratewsw8z.s[62]++;sendBadStatus(res, 400, `bad request, no id.`);}\n}","timestamp":"2017-12-07T17:01:32.467Z"}
{"level":"info","message":"Responding with a 404 code due to No bike with id \"hotdogs\"..","timestamp":"2017-12-07T17:01:32.467Z"}
{"level":"info","message":"Adding a POST url and callback.","timestamp":"2017-12-07T17:06:06.386Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-07T17:06:06.387Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[27]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[28]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[30]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[31]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[33]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[34]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[36]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[37]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[39]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[40]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[41]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[42]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[43]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[44]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T17:06:06.387Z"}
{"level":"info","message":"Adding a GET url and callback.","timestamp":"2017-12-07T17:06:06.387Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-07T17:06:06.387Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[7]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[46]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[47]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[6][0]++;\n    let requestedBike = /* istanbul ignore next */(cov_ratewsw8z.s[48]++, getBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[49]++;\n    if (requestedBike)\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][0]++;cov_ratewsw8z.s[50]++;sendJSON(res, 200, requestedBike);} else\n\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][1]++;cov_ratewsw8z.s[51]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[6][1]++;cov_ratewsw8z.s[52]++;sendJSON(res, 200, trialsBikes);}\n}","timestamp":"2017-12-07T17:06:06.387Z"}
{"level":"info","message":"Adding a DELETE url and callback.","timestamp":"2017-12-07T17:06:06.387Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-07T17:06:06.387Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[8]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[54]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[55]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[8][0]++;\n    let removedBike = /* istanbul ignore next */(cov_ratewsw8z.s[56]++, removeBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[57]++;\n    if (removedBike) {/* istanbul ignore next */cov_ratewsw8z.b[9][0]++;cov_ratewsw8z.s[58]++;\n      logger.log('info', `Bike deleted, responding with a 204 code.`); /* istanbul ignore next */cov_ratewsw8z.s[59]++;\n      res.writeHead(204); /* istanbul ignore next */cov_ratewsw8z.s[60]++;\n      res.end();\n    } else\n      {/* istanbul ignore next */cov_ratewsw8z.b[9][1]++;cov_ratewsw8z.s[61]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[8][1]++;cov_ratewsw8z.s[62]++;sendBadStatus(res, 400, `bad request, no id.`);}\n}","timestamp":"2017-12-07T17:06:06.387Z"}
{"level":"info","message":"Server is up on port 3000.","timestamp":"2017-12-07T17:06:06.426Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T17:06:06.467Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T17:06:06.467Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T17:06:06.467Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T17:06:06.468Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[27]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[28]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[30]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[31]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[33]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[34]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[36]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[37]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[39]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[40]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[41]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[42]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[43]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[44]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T17:06:06.468Z"}
{"level":"info","message":"Responding with a 200 code and the following data:","timestamp":"2017-12-07T17:06:06.468Z"}
{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"e9dffc40-db70-11e7-a88b-ad8be3d2c322","timestamp":"2017-12-07T17:06:06.468Z","level":"info","message":""}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T17:06:06.476Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T17:06:06.476Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T17:06:06.477Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T17:06:06.477Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.req.on (/Users/robertreed/Documents/programming/cf/401/lab/08-09-vanilla-rest-server/lab-rob/lib/req-parser.js:25:27)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-07T17:06:06.477Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T17:06:06.479Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T17:06:06.479Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T17:06:06.479Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T17:06:06.480Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[27]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[28]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[30]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[31]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[33]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[34]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[36]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[37]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[39]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[40]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[41]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[42]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[43]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[44]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T17:06:06.480Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, make not found!.","timestamp":"2017-12-07T17:06:06.480Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T17:06:06.481Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T17:06:06.482Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T17:06:06.482Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T17:06:06.482Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[27]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[28]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[30]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[31]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[33]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[34]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[36]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[37]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[39]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[40]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[41]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[42]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[43]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[44]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T17:06:06.482Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, model not found!.","timestamp":"2017-12-07T17:06:06.482Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T17:06:06.483Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T17:06:06.483Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T17:06:06.483Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T17:06:06.484Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[27]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[28]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[30]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[31]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[33]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[34]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[36]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[37]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[39]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[40]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[41]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[42]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[43]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[44]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T17:06:06.484Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, year not found!.","timestamp":"2017-12-07T17:06:06.484Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T17:06:06.485Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T17:06:06.485Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T17:06:06.485Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T17:06:06.486Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[27]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[28]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[30]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[31]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[33]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[34]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[36]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[37]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[39]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[40]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[41]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[42]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[43]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[44]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T17:06:06.486Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, displacement not found!.","timestamp":"2017-12-07T17:06:06.486Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T17:06:06.487Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T17:06:06.487Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T17:06:06.487Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T17:06:06.488Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[27]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[28]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[30]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[31]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[33]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[34]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[36]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[37]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[39]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[40]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[41]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[42]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[43]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[44]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T17:06:06.488Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, color not found!.","timestamp":"2017-12-07T17:06:06.488Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T17:06:06.489Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T17:06:06.489Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T17:06:06.489Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T17:06:06.489Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[7]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[46]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[47]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[6][0]++;\n    let requestedBike = /* istanbul ignore next */(cov_ratewsw8z.s[48]++, getBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[49]++;\n    if (requestedBike)\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][0]++;cov_ratewsw8z.s[50]++;sendJSON(res, 200, requestedBike);} else\n\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][1]++;cov_ratewsw8z.s[51]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[6][1]++;cov_ratewsw8z.s[52]++;sendJSON(res, 200, trialsBikes);}\n}","timestamp":"2017-12-07T17:06:06.489Z"}
{"level":"info","message":"Responding with a 200 code and the following data:","timestamp":"2017-12-07T17:06:06.489Z"}
[{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"e9dffc40-db70-11e7-a88b-ad8be3d2c322","timestamp":"2017-12-07T17:06:06.468Z"}]
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T17:06:06.492Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes?id=e9dffc40-db70-11e7-a88b-ad8be3d2c322\"","timestamp":"2017-12-07T17:06:06.492Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=e9dffc40-db70-11e7-a88b-ad8be3d2c322\",\"query\":{\"id\":\"e9dffc40-db70-11e7-a88b-ad8be3d2c322\"},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes?id=e9dffc40-db70-11e7-a88b-ad8be3d2c322\",\"href\":\"/api/trials-bikes?id=e9dffc40-db70-11e7-a88b-ad8be3d2c322\"}","timestamp":"2017-12-07T17:06:06.492Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T17:06:06.492Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[7]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[46]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[47]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[6][0]++;\n    let requestedBike = /* istanbul ignore next */(cov_ratewsw8z.s[48]++, getBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[49]++;\n    if (requestedBike)\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][0]++;cov_ratewsw8z.s[50]++;sendJSON(res, 200, requestedBike);} else\n\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][1]++;cov_ratewsw8z.s[51]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[6][1]++;cov_ratewsw8z.s[52]++;sendJSON(res, 200, trialsBikes);}\n}","timestamp":"2017-12-07T17:06:06.492Z"}
{"level":"info","message":"Responding with a 200 code and the following data:","timestamp":"2017-12-07T17:06:06.492Z"}
{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"e9dffc40-db70-11e7-a88b-ad8be3d2c322","timestamp":"2017-12-07T17:06:06.492Z","level":"info","message":""}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T17:06:06.494Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes?id=hamburger\"","timestamp":"2017-12-07T17:06:06.494Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=hamburger\",\"query\":{\"id\":\"hamburger\"},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes?id=hamburger\",\"href\":\"/api/trials-bikes?id=hamburger\"}","timestamp":"2017-12-07T17:06:06.494Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T17:06:06.494Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[7]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[46]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[47]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[6][0]++;\n    let requestedBike = /* istanbul ignore next */(cov_ratewsw8z.s[48]++, getBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[49]++;\n    if (requestedBike)\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][0]++;cov_ratewsw8z.s[50]++;sendJSON(res, 200, requestedBike);} else\n\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][1]++;cov_ratewsw8z.s[51]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[6][1]++;cov_ratewsw8z.s[52]++;sendJSON(res, 200, trialsBikes);}\n}","timestamp":"2017-12-07T17:06:06.494Z"}
{"level":"info","message":"Responding with a 404 code due to No bike with id \"hamburger\"..","timestamp":"2017-12-07T17:06:06.494Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T17:06:06.496Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes?id=e9dffc40-db70-11e7-a88b-ad8be3d2c322\"","timestamp":"2017-12-07T17:06:06.496Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=e9dffc40-db70-11e7-a88b-ad8be3d2c322\",\"query\":{\"id\":\"e9dffc40-db70-11e7-a88b-ad8be3d2c322\"},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes?id=e9dffc40-db70-11e7-a88b-ad8be3d2c322\",\"href\":\"/api/trials-bikes?id=e9dffc40-db70-11e7-a88b-ad8be3d2c322\"}","timestamp":"2017-12-07T17:06:06.496Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T17:06:06.496Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[8]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[54]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[55]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[8][0]++;\n    let removedBike = /* istanbul ignore next */(cov_ratewsw8z.s[56]++, removeBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[57]++;\n    if (removedBike) {/* istanbul ignore next */cov_ratewsw8z.b[9][0]++;cov_ratewsw8z.s[58]++;\n      logger.log('info', `Bike deleted, responding with a 204 code.`); /* istanbul ignore next */cov_ratewsw8z.s[59]++;\n      res.writeHead(204); /* istanbul ignore next */cov_ratewsw8z.s[60]++;\n      res.end();\n    } else\n      {/* istanbul ignore next */cov_ratewsw8z.b[9][1]++;cov_ratewsw8z.s[61]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[8][1]++;cov_ratewsw8z.s[62]++;sendBadStatus(res, 400, `bad request, no id.`);}\n}","timestamp":"2017-12-07T17:06:06.496Z"}
{"level":"info","message":"Bike deleted, responding with a 204 code.","timestamp":"2017-12-07T17:06:06.496Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T17:06:06.498Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T17:06:06.498Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T17:06:06.498Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T17:06:06.498Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[8]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[54]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[55]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[8][0]++;\n    let removedBike = /* istanbul ignore next */(cov_ratewsw8z.s[56]++, removeBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[57]++;\n    if (removedBike) {/* istanbul ignore next */cov_ratewsw8z.b[9][0]++;cov_ratewsw8z.s[58]++;\n      logger.log('info', `Bike deleted, responding with a 204 code.`); /* istanbul ignore next */cov_ratewsw8z.s[59]++;\n      res.writeHead(204); /* istanbul ignore next */cov_ratewsw8z.s[60]++;\n      res.end();\n    } else\n      {/* istanbul ignore next */cov_ratewsw8z.b[9][1]++;cov_ratewsw8z.s[61]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[8][1]++;cov_ratewsw8z.s[62]++;sendBadStatus(res, 400, `bad request, no id.`);}\n}","timestamp":"2017-12-07T17:06:06.498Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, no id..","timestamp":"2017-12-07T17:06:06.499Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T17:06:06.500Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes?id=hotdogs\"","timestamp":"2017-12-07T17:06:06.500Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=hotdogs\",\"query\":{\"id\":\"hotdogs\"},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes?id=hotdogs\",\"href\":\"/api/trials-bikes?id=hotdogs\"}","timestamp":"2017-12-07T17:06:06.500Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T17:06:06.500Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[8]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[54]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[55]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[8][0]++;\n    let removedBike = /* istanbul ignore next */(cov_ratewsw8z.s[56]++, removeBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[57]++;\n    if (removedBike) {/* istanbul ignore next */cov_ratewsw8z.b[9][0]++;cov_ratewsw8z.s[58]++;\n      logger.log('info', `Bike deleted, responding with a 204 code.`); /* istanbul ignore next */cov_ratewsw8z.s[59]++;\n      res.writeHead(204); /* istanbul ignore next */cov_ratewsw8z.s[60]++;\n      res.end();\n    } else\n      {/* istanbul ignore next */cov_ratewsw8z.b[9][1]++;cov_ratewsw8z.s[61]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[8][1]++;cov_ratewsw8z.s[62]++;sendBadStatus(res, 400, `bad request, no id.`);}\n}","timestamp":"2017-12-07T17:06:06.500Z"}
{"level":"info","message":"Responding with a 404 code due to No bike with id \"hotdogs\"..","timestamp":"2017-12-07T17:06:06.500Z"}
{"level":"info","message":"Adding a POST url and callback.","timestamp":"2017-12-07T17:06:14.691Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-07T17:06:14.692Z"}
{"level":"info","message":"(req, res) => {\n  if(!req.body.make) {\n    sendBadStatus(res, 400, 'bad request, make not found!');\n    return;\n  }\n  \n  if(!req.body.model) {\n    sendBadStatus(res, 400, 'bad request, model not found!');\n    return;\n  }\n\n  if(!req.body.year) {\n    sendBadStatus(res, 400, 'bad request, year not found!');\n    return;\n  }\n\n  if(!req.body.displacement) {\n    sendBadStatus(res, 400, 'bad request, displacement not found!');\n    return;\n  }\n\n  if(!req.body.color) {\n    sendBadStatus(res, 400, 'bad request, color not found!');\n    return;\n  }\n\n  let trialsBike = new TrialsBike(\n    req.body.make,\n    req.body.model,\n    req.body.year,\n    req.body.displacement,\n    req.body.color\n  );\n  \n  trialsBikes.push(trialsBike);\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T17:06:14.692Z"}
{"level":"info","message":"Adding a GET url and callback.","timestamp":"2017-12-07T17:06:14.692Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-07T17:06:14.692Z"}
{"level":"info","message":"(req, res) => {\n  let id = req.url.query.id;\n  if(id) {\n    let requestedBike = getBikeById(id);\n    if(requestedBike)\n      sendJSON(res, 200, requestedBike);\n    else\n      sendBadStatus(res, 404, `No bike with id \"${id}\".`);\n  } else\n    sendJSON(res, 200, trialsBikes);\n}","timestamp":"2017-12-07T17:06:14.692Z"}
{"level":"info","message":"Adding a DELETE url and callback.","timestamp":"2017-12-07T17:06:14.692Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-07T17:06:14.692Z"}
{"level":"info","message":"(req, res) => {\n  let id = req.url.query.id;\n  if(id) {\n    let removedBike = removeBikeById(id);\n    if (removedBike) {\n      logger.log('info', `Bike deleted, responding with a 204 code.`);\n      res.writeHead(204);\n      res.end();\n    } else\n      sendBadStatus(res, 404, `No bike with id \"${id}\".`);\n  } else\n    sendBadStatus(res, 400, `bad request, no id.`);\n}","timestamp":"2017-12-07T17:06:14.692Z"}
{"level":"info","message":"Server is up on port 3000.","timestamp":"2017-12-07T17:06:14.698Z"}
{"level":"info","message":"Adding a POST url and callback.","timestamp":"2017-12-07T17:07:27.064Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-07T17:07:27.065Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[27]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[28]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[30]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[31]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[33]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[34]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[36]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[37]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[39]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[40]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[41]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[42]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[43]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[44]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T17:07:27.065Z"}
{"level":"info","message":"Adding a GET url and callback.","timestamp":"2017-12-07T17:07:27.065Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-07T17:07:27.065Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[7]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[46]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[47]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[6][0]++;\n    let requestedBike = /* istanbul ignore next */(cov_ratewsw8z.s[48]++, getBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[49]++;\n    if (requestedBike)\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][0]++;cov_ratewsw8z.s[50]++;sendJSON(res, 200, requestedBike);} else\n\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][1]++;cov_ratewsw8z.s[51]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[6][1]++;cov_ratewsw8z.s[52]++;sendJSON(res, 200, trialsBikes);}\n}","timestamp":"2017-12-07T17:07:27.065Z"}
{"level":"info","message":"Adding a DELETE url and callback.","timestamp":"2017-12-07T17:07:27.065Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-07T17:07:27.065Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[8]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[54]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[55]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[8][0]++;\n    let removedBike = /* istanbul ignore next */(cov_ratewsw8z.s[56]++, removeBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[57]++;\n    if (removedBike) {/* istanbul ignore next */cov_ratewsw8z.b[9][0]++;cov_ratewsw8z.s[58]++;\n      logger.log('info', `Bike deleted, responding with a 204 code.`); /* istanbul ignore next */cov_ratewsw8z.s[59]++;\n      res.writeHead(204); /* istanbul ignore next */cov_ratewsw8z.s[60]++;\n      res.end();\n    } else\n      {/* istanbul ignore next */cov_ratewsw8z.b[9][1]++;cov_ratewsw8z.s[61]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[8][1]++;cov_ratewsw8z.s[62]++;sendBadStatus(res, 400, `bad request, no id.`);}\n}","timestamp":"2017-12-07T17:07:27.065Z"}
{"level":"info","message":"Server is up on port 3000.","timestamp":"2017-12-07T17:07:27.103Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T17:07:27.115Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T17:07:27.116Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T17:07:27.116Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T17:07:27.116Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[27]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[28]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[30]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[31]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[33]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[34]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[36]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[37]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[39]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[40]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[41]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[42]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[43]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[44]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T17:07:27.116Z"}
{"level":"info","message":"Responding with a 200 code and the following data:","timestamp":"2017-12-07T17:07:27.117Z"}
{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"19f20bd0-db71-11e7-80b9-c9b1efbc01e4","timestamp":"2017-12-07T17:07:27.117Z","level":"info","message":""}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T17:07:27.124Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T17:07:27.124Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T17:07:27.125Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T17:07:27.125Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.req.on (/Users/robertreed/Documents/programming/cf/401/lab/08-09-vanilla-rest-server/lab-rob/lib/req-parser.js:25:27)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-07T17:07:27.125Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T17:07:27.127Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T17:07:27.127Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T17:07:27.127Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T17:07:27.127Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[27]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[28]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[30]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[31]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[33]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[34]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[36]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[37]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[39]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[40]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[41]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[42]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[43]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[44]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T17:07:27.128Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, make not found!.","timestamp":"2017-12-07T17:07:27.128Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T17:07:27.129Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T17:07:27.130Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T17:07:27.130Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T17:07:27.130Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[27]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[28]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[30]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[31]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[33]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[34]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[36]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[37]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[39]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[40]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[41]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[42]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[43]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[44]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T17:07:27.130Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, model not found!.","timestamp":"2017-12-07T17:07:27.130Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T17:07:27.132Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T17:07:27.132Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T17:07:27.132Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T17:07:27.132Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[27]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[28]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[30]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[31]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[33]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[34]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[36]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[37]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[39]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[40]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[41]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[42]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[43]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[44]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T17:07:27.132Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, year not found!.","timestamp":"2017-12-07T17:07:27.132Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T17:07:27.133Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T17:07:27.133Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T17:07:27.133Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T17:07:27.134Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[27]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[28]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[30]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[31]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[33]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[34]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[36]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[37]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[39]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[40]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[41]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[42]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[43]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[44]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T17:07:27.134Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, displacement not found!.","timestamp":"2017-12-07T17:07:27.134Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T17:07:27.135Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T17:07:27.135Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T17:07:27.135Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T17:07:27.135Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[27]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[28]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[30]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[31]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[33]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[34]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[36]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[37]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[39]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[40]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[41]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[42]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[43]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[44]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T17:07:27.135Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, color not found!.","timestamp":"2017-12-07T17:07:27.136Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T17:07:27.137Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T17:07:27.137Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T17:07:27.137Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T17:07:27.137Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[7]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[46]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[47]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[6][0]++;\n    let requestedBike = /* istanbul ignore next */(cov_ratewsw8z.s[48]++, getBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[49]++;\n    if (requestedBike)\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][0]++;cov_ratewsw8z.s[50]++;sendJSON(res, 200, requestedBike);} else\n\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][1]++;cov_ratewsw8z.s[51]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[6][1]++;cov_ratewsw8z.s[52]++;sendJSON(res, 200, trialsBikes);}\n}","timestamp":"2017-12-07T17:07:27.137Z"}
{"level":"info","message":"Responding with a 200 code and the following data:","timestamp":"2017-12-07T17:07:27.138Z"}
[{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"19f20bd0-db71-11e7-80b9-c9b1efbc01e4","timestamp":"2017-12-07T17:07:27.117Z"}]
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T17:07:27.140Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes?id=19f20bd0-db71-11e7-80b9-c9b1efbc01e4\"","timestamp":"2017-12-07T17:07:27.140Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=19f20bd0-db71-11e7-80b9-c9b1efbc01e4\",\"query\":{\"id\":\"19f20bd0-db71-11e7-80b9-c9b1efbc01e4\"},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes?id=19f20bd0-db71-11e7-80b9-c9b1efbc01e4\",\"href\":\"/api/trials-bikes?id=19f20bd0-db71-11e7-80b9-c9b1efbc01e4\"}","timestamp":"2017-12-07T17:07:27.140Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T17:07:27.140Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[7]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[46]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[47]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[6][0]++;\n    let requestedBike = /* istanbul ignore next */(cov_ratewsw8z.s[48]++, getBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[49]++;\n    if (requestedBike)\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][0]++;cov_ratewsw8z.s[50]++;sendJSON(res, 200, requestedBike);} else\n\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][1]++;cov_ratewsw8z.s[51]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[6][1]++;cov_ratewsw8z.s[52]++;sendJSON(res, 200, trialsBikes);}\n}","timestamp":"2017-12-07T17:07:27.141Z"}
{"level":"info","message":"Responding with a 200 code and the following data:","timestamp":"2017-12-07T17:07:27.141Z"}
{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"19f20bd0-db71-11e7-80b9-c9b1efbc01e4","timestamp":"2017-12-07T17:07:27.141Z","level":"info","message":""}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T17:07:27.142Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes?id=hamburger\"","timestamp":"2017-12-07T17:07:27.143Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=hamburger\",\"query\":{\"id\":\"hamburger\"},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes?id=hamburger\",\"href\":\"/api/trials-bikes?id=hamburger\"}","timestamp":"2017-12-07T17:07:27.143Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T17:07:27.143Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[7]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[46]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[47]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[6][0]++;\n    let requestedBike = /* istanbul ignore next */(cov_ratewsw8z.s[48]++, getBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[49]++;\n    if (requestedBike)\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][0]++;cov_ratewsw8z.s[50]++;sendJSON(res, 200, requestedBike);} else\n\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][1]++;cov_ratewsw8z.s[51]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[6][1]++;cov_ratewsw8z.s[52]++;sendJSON(res, 200, trialsBikes);}\n}","timestamp":"2017-12-07T17:07:27.143Z"}
{"level":"info","message":"Responding with a 404 code due to No bike with id \"hamburger\"..","timestamp":"2017-12-07T17:07:27.143Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T17:07:27.144Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes?id=19f20bd0-db71-11e7-80b9-c9b1efbc01e4\"","timestamp":"2017-12-07T17:07:27.144Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=19f20bd0-db71-11e7-80b9-c9b1efbc01e4\",\"query\":{\"id\":\"19f20bd0-db71-11e7-80b9-c9b1efbc01e4\"},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes?id=19f20bd0-db71-11e7-80b9-c9b1efbc01e4\",\"href\":\"/api/trials-bikes?id=19f20bd0-db71-11e7-80b9-c9b1efbc01e4\"}","timestamp":"2017-12-07T17:07:27.144Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T17:07:27.145Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[8]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[54]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[55]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[8][0]++;\n    let removedBike = /* istanbul ignore next */(cov_ratewsw8z.s[56]++, removeBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[57]++;\n    if (removedBike) {/* istanbul ignore next */cov_ratewsw8z.b[9][0]++;cov_ratewsw8z.s[58]++;\n      logger.log('info', `Bike deleted, responding with a 204 code.`); /* istanbul ignore next */cov_ratewsw8z.s[59]++;\n      res.writeHead(204); /* istanbul ignore next */cov_ratewsw8z.s[60]++;\n      res.end();\n    } else\n      {/* istanbul ignore next */cov_ratewsw8z.b[9][1]++;cov_ratewsw8z.s[61]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[8][1]++;cov_ratewsw8z.s[62]++;sendBadStatus(res, 400, `bad request, no id.`);}\n}","timestamp":"2017-12-07T17:07:27.145Z"}
{"level":"info","message":"Bike deleted, responding with a 204 code.","timestamp":"2017-12-07T17:07:27.145Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T17:07:27.147Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T17:07:27.147Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T17:07:27.147Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T17:07:27.147Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[8]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[54]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[55]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[8][0]++;\n    let removedBike = /* istanbul ignore next */(cov_ratewsw8z.s[56]++, removeBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[57]++;\n    if (removedBike) {/* istanbul ignore next */cov_ratewsw8z.b[9][0]++;cov_ratewsw8z.s[58]++;\n      logger.log('info', `Bike deleted, responding with a 204 code.`); /* istanbul ignore next */cov_ratewsw8z.s[59]++;\n      res.writeHead(204); /* istanbul ignore next */cov_ratewsw8z.s[60]++;\n      res.end();\n    } else\n      {/* istanbul ignore next */cov_ratewsw8z.b[9][1]++;cov_ratewsw8z.s[61]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[8][1]++;cov_ratewsw8z.s[62]++;sendBadStatus(res, 400, `bad request, no id.`);}\n}","timestamp":"2017-12-07T17:07:27.147Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, no id..","timestamp":"2017-12-07T17:07:27.147Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T17:07:27.149Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes?id=hotdogs\"","timestamp":"2017-12-07T17:07:27.149Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=hotdogs\",\"query\":{\"id\":\"hotdogs\"},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes?id=hotdogs\",\"href\":\"/api/trials-bikes?id=hotdogs\"}","timestamp":"2017-12-07T17:07:27.149Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T17:07:27.149Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[8]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[54]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[55]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[8][0]++;\n    let removedBike = /* istanbul ignore next */(cov_ratewsw8z.s[56]++, removeBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[57]++;\n    if (removedBike) {/* istanbul ignore next */cov_ratewsw8z.b[9][0]++;cov_ratewsw8z.s[58]++;\n      logger.log('info', `Bike deleted, responding with a 204 code.`); /* istanbul ignore next */cov_ratewsw8z.s[59]++;\n      res.writeHead(204); /* istanbul ignore next */cov_ratewsw8z.s[60]++;\n      res.end();\n    } else\n      {/* istanbul ignore next */cov_ratewsw8z.b[9][1]++;cov_ratewsw8z.s[61]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[8][1]++;cov_ratewsw8z.s[62]++;sendBadStatus(res, 400, `bad request, no id.`);}\n}","timestamp":"2017-12-07T17:07:27.149Z"}
{"level":"info","message":"Responding with a 404 code due to No bike with id \"hotdogs\"..","timestamp":"2017-12-07T17:07:27.149Z"}
{"level":"info","message":"Adding a POST url and callback.","timestamp":"2017-12-07T17:07:31.869Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-07T17:07:31.869Z"}
{"level":"info","message":"(req, res) => {\n  if(!req.body.make) {\n    sendBadStatus(res, 400, 'bad request, make not found!');\n    return;\n  }\n  \n  if(!req.body.model) {\n    sendBadStatus(res, 400, 'bad request, model not found!');\n    return;\n  }\n\n  if(!req.body.year) {\n    sendBadStatus(res, 400, 'bad request, year not found!');\n    return;\n  }\n\n  if(!req.body.displacement) {\n    sendBadStatus(res, 400, 'bad request, displacement not found!');\n    return;\n  }\n\n  if(!req.body.color) {\n    sendBadStatus(res, 400, 'bad request, color not found!');\n    return;\n  }\n\n  let trialsBike = new TrialsBike(\n    req.body.make,\n    req.body.model,\n    req.body.year,\n    req.body.displacement,\n    req.body.color\n  );\n  \n  trialsBikes.push(trialsBike);\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T17:07:31.869Z"}
{"level":"info","message":"Adding a GET url and callback.","timestamp":"2017-12-07T17:07:31.870Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-07T17:07:31.870Z"}
{"level":"info","message":"(req, res) => {\n  let id = req.url.query.id;\n  if(id) {\n    let requestedBike = getBikeById(id);\n    if(requestedBike)\n      sendJSON(res, 200, requestedBike);\n    else\n      sendBadStatus(res, 404, `No bike with id \"${id}\".`);\n  } else\n    sendJSON(res, 200, trialsBikes);\n}","timestamp":"2017-12-07T17:07:31.870Z"}
{"level":"info","message":"Adding a DELETE url and callback.","timestamp":"2017-12-07T17:07:31.870Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-07T17:07:31.870Z"}
{"level":"info","message":"(req, res) => {\n  let id = req.url.query.id;\n  if(id) {\n    let removedBike = removeBikeById(id);\n    if (removedBike) {\n      logger.log('info', `Bike deleted, responding with a 204 code.`);\n      res.writeHead(204);\n      res.end();\n    } else\n      sendBadStatus(res, 404, `No bike with id \"${id}\".`);\n  } else\n    sendBadStatus(res, 400, `bad request, no id.`);\n}","timestamp":"2017-12-07T17:07:31.870Z"}
{"level":"info","message":"Server is up on port 3000.","timestamp":"2017-12-07T17:07:31.876Z"}
{"level":"info","message":"Adding a POST url and callback.","timestamp":"2017-12-07T23:06:27.883Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-07T23:06:27.883Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[27]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[28]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[30]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[31]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[33]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[34]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[36]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[37]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[39]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[40]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[41]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[42]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[43]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[44]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T23:06:27.883Z"}
{"level":"info","message":"Adding a GET url and callback.","timestamp":"2017-12-07T23:06:27.884Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-07T23:06:27.884Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[7]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[46]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[47]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[6][0]++;\n    let requestedBike = /* istanbul ignore next */(cov_ratewsw8z.s[48]++, getBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[49]++;\n    if (requestedBike)\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][0]++;cov_ratewsw8z.s[50]++;sendJSON(res, 200, requestedBike);} else\n\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][1]++;cov_ratewsw8z.s[51]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[6][1]++;cov_ratewsw8z.s[52]++;sendJSON(res, 200, trialsBikes);}\n}","timestamp":"2017-12-07T23:06:27.884Z"}
{"level":"info","message":"Adding a DELETE url and callback.","timestamp":"2017-12-07T23:06:27.884Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-07T23:06:27.884Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[8]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[54]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[55]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[8][0]++;\n    let removedBike = /* istanbul ignore next */(cov_ratewsw8z.s[56]++, removeBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[57]++;\n    if (removedBike) {/* istanbul ignore next */cov_ratewsw8z.b[9][0]++;cov_ratewsw8z.s[58]++;\n      logger.log('info', `Bike deleted, responding with a 204 code.`); /* istanbul ignore next */cov_ratewsw8z.s[59]++;\n      res.writeHead(204); /* istanbul ignore next */cov_ratewsw8z.s[60]++;\n      res.end();\n    } else\n      {/* istanbul ignore next */cov_ratewsw8z.b[9][1]++;cov_ratewsw8z.s[61]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[8][1]++;cov_ratewsw8z.s[62]++;sendBadStatus(res, 400, `bad request, no id.`);}\n}","timestamp":"2017-12-07T23:06:27.884Z"}
{"level":"info","message":"Server is up on port 3000.","timestamp":"2017-12-07T23:06:27.942Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T23:06:27.953Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T23:06:27.954Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T23:06:27.954Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T23:06:27.954Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[27]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[28]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[30]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[31]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[33]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[34]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[36]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[37]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[39]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[40]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[41]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[42]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[43]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[44]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T23:06:27.954Z"}
{"level":"info","message":"Responding with a 200 code and the following data:","timestamp":"2017-12-07T23:06:27.955Z"}
{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"41491430-dba3-11e7-b444-7f4b268e75b2","timestamp":"2017-12-07T23:06:27.955Z","level":"info","message":""}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T23:06:27.963Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T23:06:27.963Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T23:06:27.963Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T23:06:27.963Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.req.on (/Users/robertreed/Documents/programming/cf/401/lab/08-09-vanilla-rest-server/lab-rob/lib/req-parser.js:25:27)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-07T23:06:27.963Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T23:06:27.966Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T23:06:27.966Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T23:06:27.966Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T23:06:27.966Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[27]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[28]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[30]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[31]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[33]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[34]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[36]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[37]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[39]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[40]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[41]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[42]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[43]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[44]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T23:06:27.966Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, make not found!.","timestamp":"2017-12-07T23:06:27.966Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T23:06:27.969Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T23:06:27.969Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T23:06:27.969Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T23:06:27.969Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[27]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[28]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[30]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[31]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[33]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[34]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[36]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[37]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[39]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[40]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[41]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[42]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[43]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[44]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T23:06:27.969Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, model not found!.","timestamp":"2017-12-07T23:06:27.969Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T23:06:27.971Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T23:06:27.971Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T23:06:27.971Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T23:06:27.971Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[27]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[28]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[30]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[31]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[33]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[34]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[36]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[37]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[39]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[40]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[41]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[42]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[43]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[44]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T23:06:27.971Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, year not found!.","timestamp":"2017-12-07T23:06:27.971Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T23:06:27.972Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T23:06:27.973Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T23:06:27.973Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T23:06:27.973Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[27]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[28]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[30]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[31]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[33]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[34]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[36]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[37]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[39]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[40]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[41]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[42]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[43]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[44]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T23:06:27.973Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, displacement not found!.","timestamp":"2017-12-07T23:06:27.973Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T23:06:27.974Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T23:06:27.975Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T23:06:27.975Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T23:06:27.975Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[27]++;\n  if (!req.body.make) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[28]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[30]++;\n\n  if (!req.body.model) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[31]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[33]++;\n\n  if (!req.body.year) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[34]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[36]++;\n\n  if (!req.body.displacement) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[37]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[39]++;\n\n  if (!req.body.color) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[40]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[41]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[42]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[43]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[44]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T23:06:27.975Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, color not found!.","timestamp":"2017-12-07T23:06:27.975Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T23:06:27.976Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T23:06:27.976Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T23:06:27.977Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T23:06:27.977Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[7]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[46]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[47]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[6][0]++;\n    let requestedBike = /* istanbul ignore next */(cov_ratewsw8z.s[48]++, getBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[49]++;\n    if (requestedBike)\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][0]++;cov_ratewsw8z.s[50]++;sendJSON(res, 200, requestedBike);} else\n\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][1]++;cov_ratewsw8z.s[51]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[6][1]++;cov_ratewsw8z.s[52]++;sendJSON(res, 200, trialsBikes);}\n}","timestamp":"2017-12-07T23:06:27.977Z"}
{"level":"info","message":"Responding with a 200 code and the following data:","timestamp":"2017-12-07T23:06:27.977Z"}
[{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"41491430-dba3-11e7-b444-7f4b268e75b2","timestamp":"2017-12-07T23:06:27.955Z"}]
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T23:06:27.979Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes?id=41491430-dba3-11e7-b444-7f4b268e75b2\"","timestamp":"2017-12-07T23:06:27.979Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=41491430-dba3-11e7-b444-7f4b268e75b2\",\"query\":{\"id\":\"41491430-dba3-11e7-b444-7f4b268e75b2\"},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes?id=41491430-dba3-11e7-b444-7f4b268e75b2\",\"href\":\"/api/trials-bikes?id=41491430-dba3-11e7-b444-7f4b268e75b2\"}","timestamp":"2017-12-07T23:06:27.979Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T23:06:27.979Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[7]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[46]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[47]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[6][0]++;\n    let requestedBike = /* istanbul ignore next */(cov_ratewsw8z.s[48]++, getBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[49]++;\n    if (requestedBike)\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][0]++;cov_ratewsw8z.s[50]++;sendJSON(res, 200, requestedBike);} else\n\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][1]++;cov_ratewsw8z.s[51]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[6][1]++;cov_ratewsw8z.s[52]++;sendJSON(res, 200, trialsBikes);}\n}","timestamp":"2017-12-07T23:06:27.979Z"}
{"level":"info","message":"Responding with a 200 code and the following data:","timestamp":"2017-12-07T23:06:27.980Z"}
{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"41491430-dba3-11e7-b444-7f4b268e75b2","timestamp":"2017-12-07T23:06:27.980Z","level":"info","message":""}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T23:06:27.981Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes?id=hamburger\"","timestamp":"2017-12-07T23:06:27.981Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=hamburger\",\"query\":{\"id\":\"hamburger\"},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes?id=hamburger\",\"href\":\"/api/trials-bikes?id=hamburger\"}","timestamp":"2017-12-07T23:06:27.981Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T23:06:27.981Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[7]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[46]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[47]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[6][0]++;\n    let requestedBike = /* istanbul ignore next */(cov_ratewsw8z.s[48]++, getBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[49]++;\n    if (requestedBike)\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][0]++;cov_ratewsw8z.s[50]++;sendJSON(res, 200, requestedBike);} else\n\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][1]++;cov_ratewsw8z.s[51]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[6][1]++;cov_ratewsw8z.s[52]++;sendJSON(res, 200, trialsBikes);}\n}","timestamp":"2017-12-07T23:06:27.981Z"}
{"level":"info","message":"Responding with a 404 code due to No bike with id \"hamburger\"..","timestamp":"2017-12-07T23:06:27.982Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T23:06:27.984Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes?id=41491430-dba3-11e7-b444-7f4b268e75b2\"","timestamp":"2017-12-07T23:06:27.984Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=41491430-dba3-11e7-b444-7f4b268e75b2\",\"query\":{\"id\":\"41491430-dba3-11e7-b444-7f4b268e75b2\"},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes?id=41491430-dba3-11e7-b444-7f4b268e75b2\",\"href\":\"/api/trials-bikes?id=41491430-dba3-11e7-b444-7f4b268e75b2\"}","timestamp":"2017-12-07T23:06:27.984Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T23:06:27.984Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[8]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[54]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[55]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[8][0]++;\n    let removedBike = /* istanbul ignore next */(cov_ratewsw8z.s[56]++, removeBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[57]++;\n    if (removedBike) {/* istanbul ignore next */cov_ratewsw8z.b[9][0]++;cov_ratewsw8z.s[58]++;\n      logger.log('info', `Bike deleted, responding with a 204 code.`); /* istanbul ignore next */cov_ratewsw8z.s[59]++;\n      res.writeHead(204); /* istanbul ignore next */cov_ratewsw8z.s[60]++;\n      res.end();\n    } else\n      {/* istanbul ignore next */cov_ratewsw8z.b[9][1]++;cov_ratewsw8z.s[61]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[8][1]++;cov_ratewsw8z.s[62]++;sendBadStatus(res, 400, `bad request, no id.`);}\n}","timestamp":"2017-12-07T23:06:27.984Z"}
{"level":"info","message":"Bike deleted, responding with a 204 code.","timestamp":"2017-12-07T23:06:27.984Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T23:06:27.986Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T23:06:27.986Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T23:06:27.986Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T23:06:27.987Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[8]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[54]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[55]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[8][0]++;\n    let removedBike = /* istanbul ignore next */(cov_ratewsw8z.s[56]++, removeBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[57]++;\n    if (removedBike) {/* istanbul ignore next */cov_ratewsw8z.b[9][0]++;cov_ratewsw8z.s[58]++;\n      logger.log('info', `Bike deleted, responding with a 204 code.`); /* istanbul ignore next */cov_ratewsw8z.s[59]++;\n      res.writeHead(204); /* istanbul ignore next */cov_ratewsw8z.s[60]++;\n      res.end();\n    } else\n      {/* istanbul ignore next */cov_ratewsw8z.b[9][1]++;cov_ratewsw8z.s[61]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[8][1]++;cov_ratewsw8z.s[62]++;sendBadStatus(res, 400, `bad request, no id.`);}\n}","timestamp":"2017-12-07T23:06:27.987Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, no id..","timestamp":"2017-12-07T23:06:27.987Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T23:06:27.988Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes?id=hotdogs\"","timestamp":"2017-12-07T23:06:27.988Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=hotdogs\",\"query\":{\"id\":\"hotdogs\"},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes?id=hotdogs\",\"href\":\"/api/trials-bikes?id=hotdogs\"}","timestamp":"2017-12-07T23:06:27.988Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T23:06:27.988Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[8]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[54]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[55]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[8][0]++;\n    let removedBike = /* istanbul ignore next */(cov_ratewsw8z.s[56]++, removeBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[57]++;\n    if (removedBike) {/* istanbul ignore next */cov_ratewsw8z.b[9][0]++;cov_ratewsw8z.s[58]++;\n      logger.log('info', `Bike deleted, responding with a 204 code.`); /* istanbul ignore next */cov_ratewsw8z.s[59]++;\n      res.writeHead(204); /* istanbul ignore next */cov_ratewsw8z.s[60]++;\n      res.end();\n    } else\n      {/* istanbul ignore next */cov_ratewsw8z.b[9][1]++;cov_ratewsw8z.s[61]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[8][1]++;cov_ratewsw8z.s[62]++;sendBadStatus(res, 400, `bad request, no id.`);}\n}","timestamp":"2017-12-07T23:06:27.988Z"}
{"level":"info","message":"Responding with a 404 code due to No bike with id \"hotdogs\"..","timestamp":"2017-12-07T23:06:27.988Z"}
{"level":"info","message":"Adding a POST url and callback.","timestamp":"2017-12-07T23:09:17.397Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-07T23:09:17.398Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[27]++;\n  if (!(typeof req.body.make === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[28]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[30]++;\n\n  if (!(typeof req.body.model === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[31]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[33]++;\n\n  if (!(typeof req.body.year === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[34]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[36]++;\n\n  if (!(typeof req.body.displacement === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[37]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[39]++;\n\n  if (!(typeof req.body.color === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[40]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[41]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[42]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[43]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[44]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T23:09:17.398Z"}
{"level":"info","message":"Adding a GET url and callback.","timestamp":"2017-12-07T23:09:17.398Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-07T23:09:17.398Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[7]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[46]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[47]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[6][0]++;\n    let requestedBike = /* istanbul ignore next */(cov_ratewsw8z.s[48]++, getBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[49]++;\n    if (requestedBike)\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][0]++;cov_ratewsw8z.s[50]++;sendJSON(res, 200, requestedBike);} else\n\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][1]++;cov_ratewsw8z.s[51]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[6][1]++;cov_ratewsw8z.s[52]++;sendJSON(res, 200, trialsBikes);}\n}","timestamp":"2017-12-07T23:09:17.398Z"}
{"level":"info","message":"Adding a DELETE url and callback.","timestamp":"2017-12-07T23:09:17.398Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-07T23:09:17.398Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[8]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[54]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[55]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[8][0]++;\n    let removedBike = /* istanbul ignore next */(cov_ratewsw8z.s[56]++, removeBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[57]++;\n    if (removedBike) {/* istanbul ignore next */cov_ratewsw8z.b[9][0]++;cov_ratewsw8z.s[58]++;\n      logger.log('info', `Bike deleted, responding with a 204 code.`); /* istanbul ignore next */cov_ratewsw8z.s[59]++;\n      res.writeHead(204); /* istanbul ignore next */cov_ratewsw8z.s[60]++;\n      res.end();\n    } else\n      {/* istanbul ignore next */cov_ratewsw8z.b[9][1]++;cov_ratewsw8z.s[61]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[8][1]++;cov_ratewsw8z.s[62]++;sendBadStatus(res, 400, `bad request, no id.`);}\n}","timestamp":"2017-12-07T23:09:17.398Z"}
{"level":"info","message":"Server is up on port 3000.","timestamp":"2017-12-07T23:09:17.436Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T23:09:17.474Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T23:09:17.475Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T23:09:17.475Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T23:09:17.475Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[27]++;\n  if (!(typeof req.body.make === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[28]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[30]++;\n\n  if (!(typeof req.body.model === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[31]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[33]++;\n\n  if (!(typeof req.body.year === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[34]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[36]++;\n\n  if (!(typeof req.body.displacement === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[37]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[39]++;\n\n  if (!(typeof req.body.color === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[40]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[41]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[42]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[43]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[44]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T23:09:17.476Z"}
{"level":"info","message":"Responding with a 200 code and the following data:","timestamp":"2017-12-07T23:09:17.476Z"}
{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"a653ee40-dba3-11e7-bf12-afa0b36c94ac","timestamp":"2017-12-07T23:09:17.476Z","level":"info","message":""}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T23:09:17.484Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T23:09:17.484Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T23:09:17.484Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T23:09:17.484Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.req.on (/Users/robertreed/Documents/programming/cf/401/lab/08-09-vanilla-rest-server/lab-rob/lib/req-parser.js:25:27)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-07T23:09:17.484Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T23:09:17.486Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T23:09:17.486Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T23:09:17.486Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T23:09:17.487Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[27]++;\n  if (!(typeof req.body.make === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[28]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[30]++;\n\n  if (!(typeof req.body.model === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[31]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[33]++;\n\n  if (!(typeof req.body.year === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[34]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[36]++;\n\n  if (!(typeof req.body.displacement === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[37]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[39]++;\n\n  if (!(typeof req.body.color === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[40]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[41]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[42]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[43]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[44]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T23:09:17.487Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, make not found!.","timestamp":"2017-12-07T23:09:17.487Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T23:09:17.488Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T23:09:17.488Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T23:09:17.489Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T23:09:17.489Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[27]++;\n  if (!(typeof req.body.make === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[28]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[30]++;\n\n  if (!(typeof req.body.model === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[31]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[33]++;\n\n  if (!(typeof req.body.year === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[34]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[36]++;\n\n  if (!(typeof req.body.displacement === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[37]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[39]++;\n\n  if (!(typeof req.body.color === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[40]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[41]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[42]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[43]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[44]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T23:09:17.489Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, make not found!.","timestamp":"2017-12-07T23:09:17.489Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T23:09:17.492Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T23:09:17.492Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T23:09:17.492Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T23:09:17.492Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[27]++;\n  if (!(typeof req.body.make === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[28]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[30]++;\n\n  if (!(typeof req.body.model === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[31]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[33]++;\n\n  if (!(typeof req.body.year === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[34]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[36]++;\n\n  if (!(typeof req.body.displacement === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[37]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[39]++;\n\n  if (!(typeof req.body.color === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[40]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[41]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[42]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[43]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[44]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T23:09:17.492Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, make not found!.","timestamp":"2017-12-07T23:09:17.492Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T23:09:17.494Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T23:09:17.494Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T23:09:17.494Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T23:09:17.494Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[27]++;\n  if (!(typeof req.body.make === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[28]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[30]++;\n\n  if (!(typeof req.body.model === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[31]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[33]++;\n\n  if (!(typeof req.body.year === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[34]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[36]++;\n\n  if (!(typeof req.body.displacement === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[37]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[39]++;\n\n  if (!(typeof req.body.color === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[40]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[41]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[42]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[43]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[44]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T23:09:17.494Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, make not found!.","timestamp":"2017-12-07T23:09:17.494Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T23:09:17.496Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T23:09:17.496Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T23:09:17.496Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T23:09:17.496Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[27]++;\n  if (!(typeof req.body.make === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[28]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[30]++;\n\n  if (!(typeof req.body.model === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[31]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[33]++;\n\n  if (!(typeof req.body.year === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[34]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[36]++;\n\n  if (!(typeof req.body.displacement === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[37]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[39]++;\n\n  if (!(typeof req.body.color === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[40]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[41]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[42]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[43]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[44]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T23:09:17.496Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, make not found!.","timestamp":"2017-12-07T23:09:17.496Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T23:09:17.497Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T23:09:17.497Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T23:09:17.497Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T23:09:17.498Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[7]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[46]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[47]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[6][0]++;\n    let requestedBike = /* istanbul ignore next */(cov_ratewsw8z.s[48]++, getBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[49]++;\n    if (requestedBike)\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][0]++;cov_ratewsw8z.s[50]++;sendJSON(res, 200, requestedBike);} else\n\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][1]++;cov_ratewsw8z.s[51]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[6][1]++;cov_ratewsw8z.s[52]++;sendJSON(res, 200, trialsBikes);}\n}","timestamp":"2017-12-07T23:09:17.498Z"}
{"level":"info","message":"Responding with a 200 code and the following data:","timestamp":"2017-12-07T23:09:17.498Z"}
[{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"a653ee40-dba3-11e7-bf12-afa0b36c94ac","timestamp":"2017-12-07T23:09:17.476Z"}]
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T23:09:17.500Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes?id=a653ee40-dba3-11e7-bf12-afa0b36c94ac\"","timestamp":"2017-12-07T23:09:17.500Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=a653ee40-dba3-11e7-bf12-afa0b36c94ac\",\"query\":{\"id\":\"a653ee40-dba3-11e7-bf12-afa0b36c94ac\"},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes?id=a653ee40-dba3-11e7-bf12-afa0b36c94ac\",\"href\":\"/api/trials-bikes?id=a653ee40-dba3-11e7-bf12-afa0b36c94ac\"}","timestamp":"2017-12-07T23:09:17.500Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T23:09:17.500Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[7]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[46]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[47]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[6][0]++;\n    let requestedBike = /* istanbul ignore next */(cov_ratewsw8z.s[48]++, getBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[49]++;\n    if (requestedBike)\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][0]++;cov_ratewsw8z.s[50]++;sendJSON(res, 200, requestedBike);} else\n\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][1]++;cov_ratewsw8z.s[51]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[6][1]++;cov_ratewsw8z.s[52]++;sendJSON(res, 200, trialsBikes);}\n}","timestamp":"2017-12-07T23:09:17.500Z"}
{"level":"info","message":"Responding with a 200 code and the following data:","timestamp":"2017-12-07T23:09:17.500Z"}
{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"a653ee40-dba3-11e7-bf12-afa0b36c94ac","timestamp":"2017-12-07T23:09:17.500Z","level":"info","message":""}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T23:09:17.502Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes?id=hamburger\"","timestamp":"2017-12-07T23:09:17.502Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=hamburger\",\"query\":{\"id\":\"hamburger\"},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes?id=hamburger\",\"href\":\"/api/trials-bikes?id=hamburger\"}","timestamp":"2017-12-07T23:09:17.502Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T23:09:17.502Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[7]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[46]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[47]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[6][0]++;\n    let requestedBike = /* istanbul ignore next */(cov_ratewsw8z.s[48]++, getBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[49]++;\n    if (requestedBike)\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][0]++;cov_ratewsw8z.s[50]++;sendJSON(res, 200, requestedBike);} else\n\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][1]++;cov_ratewsw8z.s[51]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[6][1]++;cov_ratewsw8z.s[52]++;sendJSON(res, 200, trialsBikes);}\n}","timestamp":"2017-12-07T23:09:17.502Z"}
{"level":"info","message":"Responding with a 404 code due to No bike with id \"hamburger\"..","timestamp":"2017-12-07T23:09:17.502Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T23:09:17.504Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes?id=a653ee40-dba3-11e7-bf12-afa0b36c94ac\"","timestamp":"2017-12-07T23:09:17.504Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=a653ee40-dba3-11e7-bf12-afa0b36c94ac\",\"query\":{\"id\":\"a653ee40-dba3-11e7-bf12-afa0b36c94ac\"},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes?id=a653ee40-dba3-11e7-bf12-afa0b36c94ac\",\"href\":\"/api/trials-bikes?id=a653ee40-dba3-11e7-bf12-afa0b36c94ac\"}","timestamp":"2017-12-07T23:09:17.504Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T23:09:17.504Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[8]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[54]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[55]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[8][0]++;\n    let removedBike = /* istanbul ignore next */(cov_ratewsw8z.s[56]++, removeBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[57]++;\n    if (removedBike) {/* istanbul ignore next */cov_ratewsw8z.b[9][0]++;cov_ratewsw8z.s[58]++;\n      logger.log('info', `Bike deleted, responding with a 204 code.`); /* istanbul ignore next */cov_ratewsw8z.s[59]++;\n      res.writeHead(204); /* istanbul ignore next */cov_ratewsw8z.s[60]++;\n      res.end();\n    } else\n      {/* istanbul ignore next */cov_ratewsw8z.b[9][1]++;cov_ratewsw8z.s[61]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[8][1]++;cov_ratewsw8z.s[62]++;sendBadStatus(res, 400, `bad request, no id.`);}\n}","timestamp":"2017-12-07T23:09:17.504Z"}
{"level":"info","message":"Bike deleted, responding with a 204 code.","timestamp":"2017-12-07T23:09:17.504Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T23:09:17.506Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T23:09:17.506Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T23:09:17.507Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T23:09:17.507Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[8]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[54]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[55]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[8][0]++;\n    let removedBike = /* istanbul ignore next */(cov_ratewsw8z.s[56]++, removeBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[57]++;\n    if (removedBike) {/* istanbul ignore next */cov_ratewsw8z.b[9][0]++;cov_ratewsw8z.s[58]++;\n      logger.log('info', `Bike deleted, responding with a 204 code.`); /* istanbul ignore next */cov_ratewsw8z.s[59]++;\n      res.writeHead(204); /* istanbul ignore next */cov_ratewsw8z.s[60]++;\n      res.end();\n    } else\n      {/* istanbul ignore next */cov_ratewsw8z.b[9][1]++;cov_ratewsw8z.s[61]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[8][1]++;cov_ratewsw8z.s[62]++;sendBadStatus(res, 400, `bad request, no id.`);}\n}","timestamp":"2017-12-07T23:09:17.507Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, no id..","timestamp":"2017-12-07T23:09:17.507Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T23:09:17.508Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes?id=hotdogs\"","timestamp":"2017-12-07T23:09:17.508Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=hotdogs\",\"query\":{\"id\":\"hotdogs\"},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes?id=hotdogs\",\"href\":\"/api/trials-bikes?id=hotdogs\"}","timestamp":"2017-12-07T23:09:17.508Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T23:09:17.509Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[8]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[54]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[55]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[8][0]++;\n    let removedBike = /* istanbul ignore next */(cov_ratewsw8z.s[56]++, removeBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[57]++;\n    if (removedBike) {/* istanbul ignore next */cov_ratewsw8z.b[9][0]++;cov_ratewsw8z.s[58]++;\n      logger.log('info', `Bike deleted, responding with a 204 code.`); /* istanbul ignore next */cov_ratewsw8z.s[59]++;\n      res.writeHead(204); /* istanbul ignore next */cov_ratewsw8z.s[60]++;\n      res.end();\n    } else\n      {/* istanbul ignore next */cov_ratewsw8z.b[9][1]++;cov_ratewsw8z.s[61]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[8][1]++;cov_ratewsw8z.s[62]++;sendBadStatus(res, 400, `bad request, no id.`);}\n}","timestamp":"2017-12-07T23:09:17.509Z"}
{"level":"info","message":"Responding with a 404 code due to No bike with id \"hotdogs\"..","timestamp":"2017-12-07T23:09:17.509Z"}
{"level":"info","message":"Adding a POST url and callback.","timestamp":"2017-12-07T23:11:11.211Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-07T23:11:11.212Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[27]++;\n  if (!(typeof req.body.make === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[28]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[30]++;\n\n  if (!(typeof req.body.model === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[31]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[33]++;\n\n  if (!(typeof req.body.year === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[34]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[36]++;\n\n  if (!(typeof req.body.displacement === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[37]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[39]++;\n\n  if (!(typeof req.body.color === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[40]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[41]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[42]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[43]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[44]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T23:11:11.212Z"}
{"level":"info","message":"Adding a GET url and callback.","timestamp":"2017-12-07T23:11:11.212Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-07T23:11:11.212Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[7]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[46]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[47]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[6][0]++;\n    let requestedBike = /* istanbul ignore next */(cov_ratewsw8z.s[48]++, getBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[49]++;\n    if (requestedBike)\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][0]++;cov_ratewsw8z.s[50]++;sendJSON(res, 200, requestedBike);} else\n\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][1]++;cov_ratewsw8z.s[51]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[6][1]++;cov_ratewsw8z.s[52]++;sendJSON(res, 200, trialsBikes);}\n}","timestamp":"2017-12-07T23:11:11.212Z"}
{"level":"info","message":"Adding a DELETE url and callback.","timestamp":"2017-12-07T23:11:11.212Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-07T23:11:11.212Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[8]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[54]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[55]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[8][0]++;\n    let removedBike = /* istanbul ignore next */(cov_ratewsw8z.s[56]++, removeBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[57]++;\n    if (removedBike) {/* istanbul ignore next */cov_ratewsw8z.b[9][0]++;cov_ratewsw8z.s[58]++;\n      logger.log('info', `Bike deleted, responding with a 204 code.`); /* istanbul ignore next */cov_ratewsw8z.s[59]++;\n      res.writeHead(204); /* istanbul ignore next */cov_ratewsw8z.s[60]++;\n      res.end();\n    } else\n      {/* istanbul ignore next */cov_ratewsw8z.b[9][1]++;cov_ratewsw8z.s[61]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[8][1]++;cov_ratewsw8z.s[62]++;sendBadStatus(res, 400, `bad request, no id.`);}\n}","timestamp":"2017-12-07T23:11:11.212Z"}
{"level":"info","message":"Server is up on port 3000.","timestamp":"2017-12-07T23:11:11.250Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T23:11:11.287Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T23:11:11.287Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T23:11:11.287Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T23:11:11.288Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[27]++;\n  if (!(typeof req.body.make === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[28]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[30]++;\n\n  if (!(typeof req.body.model === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[31]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[33]++;\n\n  if (!(typeof req.body.year === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[34]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[36]++;\n\n  if (!(typeof req.body.displacement === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[37]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[39]++;\n\n  if (!(typeof req.body.color === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[40]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[41]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[42]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[43]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[44]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T23:11:11.288Z"}
{"level":"info","message":"Responding with a 200 code and the following data:","timestamp":"2017-12-07T23:11:11.289Z"}
{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"ea2a4380-dba3-11e7-8708-d5521b81da9e","timestamp":"2017-12-07T23:11:11.289Z","level":"info","message":""}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T23:11:11.296Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T23:11:11.296Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T23:11:11.296Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T23:11:11.297Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.req.on (/Users/robertreed/Documents/programming/cf/401/lab/08-09-vanilla-rest-server/lab-rob/lib/req-parser.js:25:27)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-07T23:11:11.297Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T23:11:11.299Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T23:11:11.299Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T23:11:11.299Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T23:11:11.299Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[27]++;\n  if (!(typeof req.body.make === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[28]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[30]++;\n\n  if (!(typeof req.body.model === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[31]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[33]++;\n\n  if (!(typeof req.body.year === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[34]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[36]++;\n\n  if (!(typeof req.body.displacement === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[37]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[39]++;\n\n  if (!(typeof req.body.color === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[40]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[41]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[42]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[43]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[44]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T23:11:11.299Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, make not found!.","timestamp":"2017-12-07T23:11:11.299Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T23:11:11.301Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T23:11:11.301Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T23:11:11.301Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T23:11:11.301Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[27]++;\n  if (!(typeof req.body.make === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[28]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[30]++;\n\n  if (!(typeof req.body.model === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[31]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[33]++;\n\n  if (!(typeof req.body.year === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[34]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[36]++;\n\n  if (!(typeof req.body.displacement === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[37]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[39]++;\n\n  if (!(typeof req.body.color === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[40]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[41]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[42]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[43]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[44]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T23:11:11.301Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, model not found!.","timestamp":"2017-12-07T23:11:11.301Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T23:11:11.303Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T23:11:11.303Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T23:11:11.303Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T23:11:11.303Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[27]++;\n  if (!(typeof req.body.make === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[28]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[30]++;\n\n  if (!(typeof req.body.model === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[31]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[33]++;\n\n  if (!(typeof req.body.year === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[34]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[36]++;\n\n  if (!(typeof req.body.displacement === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[37]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[39]++;\n\n  if (!(typeof req.body.color === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[40]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[41]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[42]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[43]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[44]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T23:11:11.303Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, year not found!.","timestamp":"2017-12-07T23:11:11.303Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T23:11:11.305Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T23:11:11.305Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T23:11:11.305Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T23:11:11.305Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[27]++;\n  if (!(typeof req.body.make === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[28]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[30]++;\n\n  if (!(typeof req.body.model === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[31]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[33]++;\n\n  if (!(typeof req.body.year === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[34]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[36]++;\n\n  if (!(typeof req.body.displacement === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[37]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[39]++;\n\n  if (!(typeof req.body.color === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[40]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[41]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[42]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[43]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[44]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T23:11:11.305Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, displacement not found!.","timestamp":"2017-12-07T23:11:11.305Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T23:11:11.306Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T23:11:11.306Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T23:11:11.306Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T23:11:11.307Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[27]++;\n  if (!(typeof req.body.make === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[28]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[30]++;\n\n  if (!(typeof req.body.model === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[31]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[33]++;\n\n  if (!(typeof req.body.year === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[34]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[36]++;\n\n  if (!(typeof req.body.displacement === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[37]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[39]++;\n\n  if (!(typeof req.body.color === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[40]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[41]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[42]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[43]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[44]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T23:11:11.307Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, color not found!.","timestamp":"2017-12-07T23:11:11.307Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T23:11:11.308Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T23:11:11.308Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T23:11:11.308Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T23:11:11.308Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[7]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[46]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[47]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[6][0]++;\n    let requestedBike = /* istanbul ignore next */(cov_ratewsw8z.s[48]++, getBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[49]++;\n    if (requestedBike)\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][0]++;cov_ratewsw8z.s[50]++;sendJSON(res, 200, requestedBike);} else\n\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][1]++;cov_ratewsw8z.s[51]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[6][1]++;cov_ratewsw8z.s[52]++;sendJSON(res, 200, trialsBikes);}\n}","timestamp":"2017-12-07T23:11:11.308Z"}
{"level":"info","message":"Responding with a 200 code and the following data:","timestamp":"2017-12-07T23:11:11.308Z"}
[{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"ea2a4380-dba3-11e7-8708-d5521b81da9e","timestamp":"2017-12-07T23:11:11.288Z"}]
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T23:11:11.310Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes?id=ea2a4380-dba3-11e7-8708-d5521b81da9e\"","timestamp":"2017-12-07T23:11:11.310Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=ea2a4380-dba3-11e7-8708-d5521b81da9e\",\"query\":{\"id\":\"ea2a4380-dba3-11e7-8708-d5521b81da9e\"},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes?id=ea2a4380-dba3-11e7-8708-d5521b81da9e\",\"href\":\"/api/trials-bikes?id=ea2a4380-dba3-11e7-8708-d5521b81da9e\"}","timestamp":"2017-12-07T23:11:11.311Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T23:11:11.311Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[7]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[46]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[47]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[6][0]++;\n    let requestedBike = /* istanbul ignore next */(cov_ratewsw8z.s[48]++, getBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[49]++;\n    if (requestedBike)\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][0]++;cov_ratewsw8z.s[50]++;sendJSON(res, 200, requestedBike);} else\n\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][1]++;cov_ratewsw8z.s[51]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[6][1]++;cov_ratewsw8z.s[52]++;sendJSON(res, 200, trialsBikes);}\n}","timestamp":"2017-12-07T23:11:11.311Z"}
{"level":"info","message":"Responding with a 200 code and the following data:","timestamp":"2017-12-07T23:11:11.311Z"}
{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"ea2a4380-dba3-11e7-8708-d5521b81da9e","timestamp":"2017-12-07T23:11:11.311Z","level":"info","message":""}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T23:11:11.313Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes?id=hamburger\"","timestamp":"2017-12-07T23:11:11.313Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=hamburger\",\"query\":{\"id\":\"hamburger\"},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes?id=hamburger\",\"href\":\"/api/trials-bikes?id=hamburger\"}","timestamp":"2017-12-07T23:11:11.313Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T23:11:11.313Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[7]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[46]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[47]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[6][0]++;\n    let requestedBike = /* istanbul ignore next */(cov_ratewsw8z.s[48]++, getBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[49]++;\n    if (requestedBike)\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][0]++;cov_ratewsw8z.s[50]++;sendJSON(res, 200, requestedBike);} else\n\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][1]++;cov_ratewsw8z.s[51]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[6][1]++;cov_ratewsw8z.s[52]++;sendJSON(res, 200, trialsBikes);}\n}","timestamp":"2017-12-07T23:11:11.313Z"}
{"level":"info","message":"Responding with a 404 code due to No bike with id \"hamburger\"..","timestamp":"2017-12-07T23:11:11.313Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T23:11:11.314Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes?id=ea2a4380-dba3-11e7-8708-d5521b81da9e\"","timestamp":"2017-12-07T23:11:11.314Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=ea2a4380-dba3-11e7-8708-d5521b81da9e\",\"query\":{\"id\":\"ea2a4380-dba3-11e7-8708-d5521b81da9e\"},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes?id=ea2a4380-dba3-11e7-8708-d5521b81da9e\",\"href\":\"/api/trials-bikes?id=ea2a4380-dba3-11e7-8708-d5521b81da9e\"}","timestamp":"2017-12-07T23:11:11.314Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T23:11:11.315Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[8]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[54]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[55]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[8][0]++;\n    let removedBike = /* istanbul ignore next */(cov_ratewsw8z.s[56]++, removeBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[57]++;\n    if (removedBike) {/* istanbul ignore next */cov_ratewsw8z.b[9][0]++;cov_ratewsw8z.s[58]++;\n      logger.log('info', `Bike deleted, responding with a 204 code.`); /* istanbul ignore next */cov_ratewsw8z.s[59]++;\n      res.writeHead(204); /* istanbul ignore next */cov_ratewsw8z.s[60]++;\n      res.end();\n    } else\n      {/* istanbul ignore next */cov_ratewsw8z.b[9][1]++;cov_ratewsw8z.s[61]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[8][1]++;cov_ratewsw8z.s[62]++;sendBadStatus(res, 400, `bad request, no id.`);}\n}","timestamp":"2017-12-07T23:11:11.315Z"}
{"level":"info","message":"Bike deleted, responding with a 204 code.","timestamp":"2017-12-07T23:11:11.315Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T23:11:11.317Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T23:11:11.317Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T23:11:11.317Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T23:11:11.317Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[8]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[54]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[55]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[8][0]++;\n    let removedBike = /* istanbul ignore next */(cov_ratewsw8z.s[56]++, removeBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[57]++;\n    if (removedBike) {/* istanbul ignore next */cov_ratewsw8z.b[9][0]++;cov_ratewsw8z.s[58]++;\n      logger.log('info', `Bike deleted, responding with a 204 code.`); /* istanbul ignore next */cov_ratewsw8z.s[59]++;\n      res.writeHead(204); /* istanbul ignore next */cov_ratewsw8z.s[60]++;\n      res.end();\n    } else\n      {/* istanbul ignore next */cov_ratewsw8z.b[9][1]++;cov_ratewsw8z.s[61]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[8][1]++;cov_ratewsw8z.s[62]++;sendBadStatus(res, 400, `bad request, no id.`);}\n}","timestamp":"2017-12-07T23:11:11.317Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, no id..","timestamp":"2017-12-07T23:11:11.317Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T23:11:11.319Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes?id=hotdogs\"","timestamp":"2017-12-07T23:11:11.319Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=hotdogs\",\"query\":{\"id\":\"hotdogs\"},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes?id=hotdogs\",\"href\":\"/api/trials-bikes?id=hotdogs\"}","timestamp":"2017-12-07T23:11:11.319Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T23:11:11.319Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[8]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[54]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[55]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[8][0]++;\n    let removedBike = /* istanbul ignore next */(cov_ratewsw8z.s[56]++, removeBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[57]++;\n    if (removedBike) {/* istanbul ignore next */cov_ratewsw8z.b[9][0]++;cov_ratewsw8z.s[58]++;\n      logger.log('info', `Bike deleted, responding with a 204 code.`); /* istanbul ignore next */cov_ratewsw8z.s[59]++;\n      res.writeHead(204); /* istanbul ignore next */cov_ratewsw8z.s[60]++;\n      res.end();\n    } else\n      {/* istanbul ignore next */cov_ratewsw8z.b[9][1]++;cov_ratewsw8z.s[61]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[8][1]++;cov_ratewsw8z.s[62]++;sendBadStatus(res, 400, `bad request, no id.`);}\n}","timestamp":"2017-12-07T23:11:11.319Z"}
{"level":"info","message":"Responding with a 404 code due to No bike with id \"hotdogs\"..","timestamp":"2017-12-07T23:11:11.319Z"}
{"level":"info","message":"Adding a POST url and callback.","timestamp":"2017-12-07T23:12:03.810Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-07T23:12:03.811Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[27]++;\n  if (!(typeof req.body.make === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[28]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[30]++;\n\n  if (!(typeof req.body.model === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[31]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[33]++;\n\n  if (!(typeof req.body.year === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[34]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[36]++;\n\n  if (!(typeof req.body.displacement === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[37]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[39]++;\n\n  if (!(typeof req.body.color === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[40]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[41]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[42]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[43]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[44]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T23:12:03.811Z"}
{"level":"info","message":"Adding a GET url and callback.","timestamp":"2017-12-07T23:12:03.811Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-07T23:12:03.811Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[7]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[46]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[47]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[6][0]++;\n    let requestedBike = /* istanbul ignore next */(cov_ratewsw8z.s[48]++, getBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[49]++;\n    if (requestedBike)\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][0]++;cov_ratewsw8z.s[50]++;sendJSON(res, 200, requestedBike);} else\n\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][1]++;cov_ratewsw8z.s[51]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[6][1]++;cov_ratewsw8z.s[52]++;sendJSON(res, 200, trialsBikes);}\n}","timestamp":"2017-12-07T23:12:03.811Z"}
{"level":"info","message":"Adding a DELETE url and callback.","timestamp":"2017-12-07T23:12:03.811Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-07T23:12:03.811Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[8]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[54]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[55]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[8][0]++;\n    let removedBike = /* istanbul ignore next */(cov_ratewsw8z.s[56]++, removeBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[57]++;\n    if (removedBike) {/* istanbul ignore next */cov_ratewsw8z.b[9][0]++;cov_ratewsw8z.s[58]++;\n      logger.log('info', `Bike deleted, responding with a 204 code.`); /* istanbul ignore next */cov_ratewsw8z.s[59]++;\n      res.writeHead(204); /* istanbul ignore next */cov_ratewsw8z.s[60]++;\n      res.end();\n    } else\n      {/* istanbul ignore next */cov_ratewsw8z.b[9][1]++;cov_ratewsw8z.s[61]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[8][1]++;cov_ratewsw8z.s[62]++;sendBadStatus(res, 400, `bad request, no id.`);}\n}","timestamp":"2017-12-07T23:12:03.811Z"}
{"level":"info","message":"Server is up on port 3000.","timestamp":"2017-12-07T23:12:03.853Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T23:12:03.892Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T23:12:03.892Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T23:12:03.892Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T23:12:03.893Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[27]++;\n  if (!(typeof req.body.make === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[28]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[30]++;\n\n  if (!(typeof req.body.model === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[31]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[33]++;\n\n  if (!(typeof req.body.year === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[34]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[36]++;\n\n  if (!(typeof req.body.displacement === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[37]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[39]++;\n\n  if (!(typeof req.body.color === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[40]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[41]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[42]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[43]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[44]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T23:12:03.893Z"}
{"level":"info","message":"Responding with a 200 code and the following data:","timestamp":"2017-12-07T23:12:03.893Z"}
{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"09852650-dba4-11e7-886b-5b3e90e94256","timestamp":"2017-12-07T23:12:03.893Z","level":"info","message":""}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T23:12:03.901Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T23:12:03.901Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T23:12:03.901Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T23:12:03.901Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.req.on (/Users/robertreed/Documents/programming/cf/401/lab/08-09-vanilla-rest-server/lab-rob/lib/req-parser.js:25:27)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-07T23:12:03.901Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T23:12:03.903Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T23:12:03.903Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T23:12:03.903Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T23:12:03.904Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[27]++;\n  if (!(typeof req.body.make === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[28]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[30]++;\n\n  if (!(typeof req.body.model === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[31]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[33]++;\n\n  if (!(typeof req.body.year === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[34]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[36]++;\n\n  if (!(typeof req.body.displacement === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[37]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[39]++;\n\n  if (!(typeof req.body.color === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[40]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[41]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[42]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[43]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[44]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T23:12:03.904Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, make not found!.","timestamp":"2017-12-07T23:12:03.904Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T23:12:03.905Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T23:12:03.905Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T23:12:03.905Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T23:12:03.906Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[27]++;\n  if (!(typeof req.body.make === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[28]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[30]++;\n\n  if (!(typeof req.body.model === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[31]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[33]++;\n\n  if (!(typeof req.body.year === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[34]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[36]++;\n\n  if (!(typeof req.body.displacement === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[37]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[39]++;\n\n  if (!(typeof req.body.color === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[40]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[41]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[42]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[43]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[44]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T23:12:03.906Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, model not found!.","timestamp":"2017-12-07T23:12:03.906Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T23:12:03.907Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T23:12:03.907Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T23:12:03.907Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T23:12:03.907Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[27]++;\n  if (!(typeof req.body.make === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[28]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[30]++;\n\n  if (!(typeof req.body.model === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[31]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[33]++;\n\n  if (!(typeof req.body.year === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[34]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[36]++;\n\n  if (!(typeof req.body.displacement === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[37]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[39]++;\n\n  if (!(typeof req.body.color === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[40]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[41]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[42]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[43]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[44]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T23:12:03.908Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, year not found!.","timestamp":"2017-12-07T23:12:03.908Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T23:12:03.909Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T23:12:03.909Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T23:12:03.909Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T23:12:03.909Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[27]++;\n  if (!(typeof req.body.make === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[28]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[30]++;\n\n  if (!(typeof req.body.model === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[31]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[33]++;\n\n  if (!(typeof req.body.year === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[34]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[36]++;\n\n  if (!(typeof req.body.displacement === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[37]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[39]++;\n\n  if (!(typeof req.body.color === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[40]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[41]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[42]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[43]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[44]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T23:12:03.909Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, displacement not found!.","timestamp":"2017-12-07T23:12:03.909Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T23:12:03.911Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T23:12:03.911Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T23:12:03.911Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T23:12:03.911Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[27]++;\n  if (!(typeof req.body.make === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[28]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[30]++;\n\n  if (!(typeof req.body.model === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[31]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[33]++;\n\n  if (!(typeof req.body.year === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[34]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[36]++;\n\n  if (!(typeof req.body.displacement === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[37]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[39]++;\n\n  if (!(typeof req.body.color === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[40]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[41]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[42]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[43]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[44]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T23:12:03.911Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, color not found!.","timestamp":"2017-12-07T23:12:03.911Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T23:12:03.913Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T23:12:03.913Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T23:12:03.913Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T23:12:03.913Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[7]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[46]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[47]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[6][0]++;\n    let requestedBike = /* istanbul ignore next */(cov_ratewsw8z.s[48]++, getBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[49]++;\n    if (requestedBike)\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][0]++;cov_ratewsw8z.s[50]++;sendJSON(res, 200, requestedBike);} else\n\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][1]++;cov_ratewsw8z.s[51]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[6][1]++;cov_ratewsw8z.s[52]++;sendJSON(res, 200, trialsBikes);}\n}","timestamp":"2017-12-07T23:12:03.913Z"}
{"level":"info","message":"Responding with a 200 code and the following data:","timestamp":"2017-12-07T23:12:03.913Z"}
[{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"09852650-dba4-11e7-886b-5b3e90e94256","timestamp":"2017-12-07T23:12:03.893Z"}]
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T23:12:03.915Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes?id=09852650-dba4-11e7-886b-5b3e90e94256\"","timestamp":"2017-12-07T23:12:03.915Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=09852650-dba4-11e7-886b-5b3e90e94256\",\"query\":{\"id\":\"09852650-dba4-11e7-886b-5b3e90e94256\"},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes?id=09852650-dba4-11e7-886b-5b3e90e94256\",\"href\":\"/api/trials-bikes?id=09852650-dba4-11e7-886b-5b3e90e94256\"}","timestamp":"2017-12-07T23:12:03.915Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T23:12:03.915Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[7]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[46]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[47]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[6][0]++;\n    let requestedBike = /* istanbul ignore next */(cov_ratewsw8z.s[48]++, getBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[49]++;\n    if (requestedBike)\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][0]++;cov_ratewsw8z.s[50]++;sendJSON(res, 200, requestedBike);} else\n\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][1]++;cov_ratewsw8z.s[51]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[6][1]++;cov_ratewsw8z.s[52]++;sendJSON(res, 200, trialsBikes);}\n}","timestamp":"2017-12-07T23:12:03.915Z"}
{"level":"info","message":"Responding with a 200 code and the following data:","timestamp":"2017-12-07T23:12:03.916Z"}
{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"09852650-dba4-11e7-886b-5b3e90e94256","timestamp":"2017-12-07T23:12:03.916Z","level":"info","message":""}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T23:12:03.917Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes?id=hamburger\"","timestamp":"2017-12-07T23:12:03.917Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=hamburger\",\"query\":{\"id\":\"hamburger\"},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes?id=hamburger\",\"href\":\"/api/trials-bikes?id=hamburger\"}","timestamp":"2017-12-07T23:12:03.917Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T23:12:03.917Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[7]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[46]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[47]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[6][0]++;\n    let requestedBike = /* istanbul ignore next */(cov_ratewsw8z.s[48]++, getBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[49]++;\n    if (requestedBike)\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][0]++;cov_ratewsw8z.s[50]++;sendJSON(res, 200, requestedBike);} else\n\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][1]++;cov_ratewsw8z.s[51]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[6][1]++;cov_ratewsw8z.s[52]++;sendJSON(res, 200, trialsBikes);}\n}","timestamp":"2017-12-07T23:12:03.917Z"}
{"level":"info","message":"Responding with a 404 code due to No bike with id \"hamburger\"..","timestamp":"2017-12-07T23:12:03.917Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T23:12:03.919Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes?id=09852650-dba4-11e7-886b-5b3e90e94256\"","timestamp":"2017-12-07T23:12:03.919Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=09852650-dba4-11e7-886b-5b3e90e94256\",\"query\":{\"id\":\"09852650-dba4-11e7-886b-5b3e90e94256\"},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes?id=09852650-dba4-11e7-886b-5b3e90e94256\",\"href\":\"/api/trials-bikes?id=09852650-dba4-11e7-886b-5b3e90e94256\"}","timestamp":"2017-12-07T23:12:03.919Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T23:12:03.919Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[8]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[54]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[55]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[8][0]++;\n    let removedBike = /* istanbul ignore next */(cov_ratewsw8z.s[56]++, removeBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[57]++;\n    if (removedBike) {/* istanbul ignore next */cov_ratewsw8z.b[9][0]++;cov_ratewsw8z.s[58]++;\n      logger.log('info', `Bike deleted, responding with a 204 code.`); /* istanbul ignore next */cov_ratewsw8z.s[59]++;\n      res.writeHead(204); /* istanbul ignore next */cov_ratewsw8z.s[60]++;\n      res.end();\n    } else\n      {/* istanbul ignore next */cov_ratewsw8z.b[9][1]++;cov_ratewsw8z.s[61]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[8][1]++;cov_ratewsw8z.s[62]++;sendBadStatus(res, 400, `bad request, no id.`);}\n}","timestamp":"2017-12-07T23:12:03.919Z"}
{"level":"info","message":"Bike deleted, responding with a 204 code.","timestamp":"2017-12-07T23:12:03.919Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T23:12:03.921Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T23:12:03.921Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T23:12:03.921Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T23:12:03.921Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[8]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[54]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[55]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[8][0]++;\n    let removedBike = /* istanbul ignore next */(cov_ratewsw8z.s[56]++, removeBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[57]++;\n    if (removedBike) {/* istanbul ignore next */cov_ratewsw8z.b[9][0]++;cov_ratewsw8z.s[58]++;\n      logger.log('info', `Bike deleted, responding with a 204 code.`); /* istanbul ignore next */cov_ratewsw8z.s[59]++;\n      res.writeHead(204); /* istanbul ignore next */cov_ratewsw8z.s[60]++;\n      res.end();\n    } else\n      {/* istanbul ignore next */cov_ratewsw8z.b[9][1]++;cov_ratewsw8z.s[61]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[8][1]++;cov_ratewsw8z.s[62]++;sendBadStatus(res, 400, `bad request, no id.`);}\n}","timestamp":"2017-12-07T23:12:03.921Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, no id..","timestamp":"2017-12-07T23:12:03.921Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T23:12:03.923Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes?id=hotdogs\"","timestamp":"2017-12-07T23:12:03.923Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=hotdogs\",\"query\":{\"id\":\"hotdogs\"},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes?id=hotdogs\",\"href\":\"/api/trials-bikes?id=hotdogs\"}","timestamp":"2017-12-07T23:12:03.923Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T23:12:03.923Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[8]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[54]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[55]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[8][0]++;\n    let removedBike = /* istanbul ignore next */(cov_ratewsw8z.s[56]++, removeBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[57]++;\n    if (removedBike) {/* istanbul ignore next */cov_ratewsw8z.b[9][0]++;cov_ratewsw8z.s[58]++;\n      logger.log('info', `Bike deleted, responding with a 204 code.`); /* istanbul ignore next */cov_ratewsw8z.s[59]++;\n      res.writeHead(204); /* istanbul ignore next */cov_ratewsw8z.s[60]++;\n      res.end();\n    } else\n      {/* istanbul ignore next */cov_ratewsw8z.b[9][1]++;cov_ratewsw8z.s[61]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[8][1]++;cov_ratewsw8z.s[62]++;sendBadStatus(res, 400, `bad request, no id.`);}\n}","timestamp":"2017-12-07T23:12:03.923Z"}
{"level":"info","message":"Responding with a 404 code due to No bike with id \"hotdogs\"..","timestamp":"2017-12-07T23:12:03.923Z"}
{"level":"info","message":"Adding a POST url and callback.","timestamp":"2017-12-07T23:12:36.188Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-07T23:12:36.189Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[27]++;\n  if (!(typeof req.body.make === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[28]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[30]++;\n\n  if (!(typeof req.body.model === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[31]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[33]++;\n\n  if (!(typeof req.body.year === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[34]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[36]++;\n\n  if (!(typeof req.body.displacement === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[37]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[39]++;\n\n  if (!(typeof req.body.color === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[40]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[41]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[42]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[43]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[44]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T23:12:36.189Z"}
{"level":"info","message":"Adding a GET url and callback.","timestamp":"2017-12-07T23:12:36.189Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-07T23:12:36.189Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[7]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[46]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[47]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[6][0]++;\n    let requestedBike = /* istanbul ignore next */(cov_ratewsw8z.s[48]++, getBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[49]++;\n    if (requestedBike)\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][0]++;cov_ratewsw8z.s[50]++;sendJSON(res, 200, requestedBike);} else\n\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][1]++;cov_ratewsw8z.s[51]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[6][1]++;cov_ratewsw8z.s[52]++;sendJSON(res, 200, trialsBikes);}\n}","timestamp":"2017-12-07T23:12:36.189Z"}
{"level":"info","message":"Adding a DELETE url and callback.","timestamp":"2017-12-07T23:12:36.189Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-07T23:12:36.189Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[8]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[54]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[55]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[8][0]++;\n    let removedBike = /* istanbul ignore next */(cov_ratewsw8z.s[56]++, removeBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[57]++;\n    if (removedBike) {/* istanbul ignore next */cov_ratewsw8z.b[9][0]++;cov_ratewsw8z.s[58]++;\n      logger.log('info', `Bike deleted, responding with a 204 code.`); /* istanbul ignore next */cov_ratewsw8z.s[59]++;\n      res.writeHead(204); /* istanbul ignore next */cov_ratewsw8z.s[60]++;\n      res.end();\n    } else\n      {/* istanbul ignore next */cov_ratewsw8z.b[9][1]++;cov_ratewsw8z.s[61]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[8][1]++;cov_ratewsw8z.s[62]++;sendBadStatus(res, 400, `bad request, no id.`);}\n}","timestamp":"2017-12-07T23:12:36.189Z"}
{"level":"info","message":"Server is up on port 3000.","timestamp":"2017-12-07T23:12:36.232Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T23:12:36.269Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T23:12:36.270Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T23:12:36.270Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T23:12:36.270Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[27]++;\n  if (!(typeof req.body.make === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[28]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[30]++;\n\n  if (!(typeof req.body.model === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[31]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[33]++;\n\n  if (!(typeof req.body.year === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[34]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[36]++;\n\n  if (!(typeof req.body.displacement === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[37]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[39]++;\n\n  if (!(typeof req.body.color === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[40]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[41]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[42]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[43]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[44]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T23:12:36.270Z"}
{"level":"info","message":"Responding with a 200 code and the following data:","timestamp":"2017-12-07T23:12:36.271Z"}
{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"1cd1a3f0-dba4-11e7-99d0-79a212f5df18","timestamp":"2017-12-07T23:12:36.271Z","level":"info","message":""}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T23:12:36.278Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T23:12:36.279Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T23:12:36.279Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T23:12:36.279Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.req.on (/Users/robertreed/Documents/programming/cf/401/lab/08-09-vanilla-rest-server/lab-rob/lib/req-parser.js:25:27)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-07T23:12:36.279Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T23:12:36.281Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T23:12:36.281Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T23:12:36.281Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T23:12:36.282Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[27]++;\n  if (!(typeof req.body.make === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[28]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[30]++;\n\n  if (!(typeof req.body.model === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[31]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[33]++;\n\n  if (!(typeof req.body.year === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[34]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[36]++;\n\n  if (!(typeof req.body.displacement === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[37]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[39]++;\n\n  if (!(typeof req.body.color === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[40]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[41]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[42]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[43]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[44]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T23:12:36.282Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, make not found!.","timestamp":"2017-12-07T23:12:36.282Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T23:12:36.283Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T23:12:36.284Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T23:12:36.284Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T23:12:36.284Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[27]++;\n  if (!(typeof req.body.make === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[28]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[30]++;\n\n  if (!(typeof req.body.model === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[31]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[33]++;\n\n  if (!(typeof req.body.year === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[34]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[36]++;\n\n  if (!(typeof req.body.displacement === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[37]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[39]++;\n\n  if (!(typeof req.body.color === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[40]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[41]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[42]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[43]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[44]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T23:12:36.284Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, model not found!.","timestamp":"2017-12-07T23:12:36.284Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T23:12:36.285Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T23:12:36.285Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T23:12:36.285Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T23:12:36.286Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[27]++;\n  if (!(typeof req.body.make === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[28]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[30]++;\n\n  if (!(typeof req.body.model === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[31]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[33]++;\n\n  if (!(typeof req.body.year === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[34]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[36]++;\n\n  if (!(typeof req.body.displacement === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[37]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[39]++;\n\n  if (!(typeof req.body.color === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[40]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[41]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[42]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[43]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[44]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T23:12:36.286Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, year not found!.","timestamp":"2017-12-07T23:12:36.286Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T23:12:36.287Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T23:12:36.287Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T23:12:36.287Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T23:12:36.287Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[27]++;\n  if (!(typeof req.body.make === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[28]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[30]++;\n\n  if (!(typeof req.body.model === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[31]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[33]++;\n\n  if (!(typeof req.body.year === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[34]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[36]++;\n\n  if (!(typeof req.body.displacement === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[37]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[39]++;\n\n  if (!(typeof req.body.color === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[40]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[41]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[42]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[43]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[44]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T23:12:36.287Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, displacement not found!.","timestamp":"2017-12-07T23:12:36.287Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T23:12:36.289Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T23:12:36.289Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T23:12:36.289Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T23:12:36.289Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[27]++;\n  if (!(typeof req.body.make === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[28]++;\n    sendBadStatus(res, 400, 'bad request, make not found!'); /* istanbul ignore next */cov_ratewsw8z.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[30]++;\n\n  if (!(typeof req.body.model === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[31]++;\n    sendBadStatus(res, 400, 'bad request, model not found!'); /* istanbul ignore next */cov_ratewsw8z.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[33]++;\n\n  if (!(typeof req.body.year === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[34]++;\n    sendBadStatus(res, 400, 'bad request, year not found!'); /* istanbul ignore next */cov_ratewsw8z.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[36]++;\n\n  if (!(typeof req.body.displacement === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[37]++;\n    sendBadStatus(res, 400, 'bad request, displacement not found!'); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[39]++;\n\n  if (!(typeof req.body.color === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[40]++;\n    sendBadStatus(res, 400, 'bad request, color not found!'); /* istanbul ignore next */cov_ratewsw8z.s[41]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[42]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[43]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[44]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T23:12:36.289Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, color not found!.","timestamp":"2017-12-07T23:12:36.289Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T23:12:36.291Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T23:12:36.291Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T23:12:36.291Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T23:12:36.291Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[7]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[46]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[47]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[6][0]++;\n    let requestedBike = /* istanbul ignore next */(cov_ratewsw8z.s[48]++, getBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[49]++;\n    if (requestedBike)\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][0]++;cov_ratewsw8z.s[50]++;sendJSON(res, 200, requestedBike);} else\n\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][1]++;cov_ratewsw8z.s[51]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[6][1]++;cov_ratewsw8z.s[52]++;sendJSON(res, 200, trialsBikes);}\n}","timestamp":"2017-12-07T23:12:36.291Z"}
{"level":"info","message":"Responding with a 200 code and the following data:","timestamp":"2017-12-07T23:12:36.291Z"}
[{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"1cd1a3f0-dba4-11e7-99d0-79a212f5df18","timestamp":"2017-12-07T23:12:36.271Z"}]
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T23:12:36.293Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes?id=1cd1a3f0-dba4-11e7-99d0-79a212f5df18\"","timestamp":"2017-12-07T23:12:36.293Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=1cd1a3f0-dba4-11e7-99d0-79a212f5df18\",\"query\":{\"id\":\"1cd1a3f0-dba4-11e7-99d0-79a212f5df18\"},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes?id=1cd1a3f0-dba4-11e7-99d0-79a212f5df18\",\"href\":\"/api/trials-bikes?id=1cd1a3f0-dba4-11e7-99d0-79a212f5df18\"}","timestamp":"2017-12-07T23:12:36.293Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T23:12:36.293Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[7]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[46]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[47]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[6][0]++;\n    let requestedBike = /* istanbul ignore next */(cov_ratewsw8z.s[48]++, getBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[49]++;\n    if (requestedBike)\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][0]++;cov_ratewsw8z.s[50]++;sendJSON(res, 200, requestedBike);} else\n\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][1]++;cov_ratewsw8z.s[51]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[6][1]++;cov_ratewsw8z.s[52]++;sendJSON(res, 200, trialsBikes);}\n}","timestamp":"2017-12-07T23:12:36.294Z"}
{"level":"info","message":"Responding with a 200 code and the following data:","timestamp":"2017-12-07T23:12:36.294Z"}
{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"1cd1a3f0-dba4-11e7-99d0-79a212f5df18","timestamp":"2017-12-07T23:12:36.294Z","level":"info","message":""}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T23:12:36.295Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes?id=hamburger\"","timestamp":"2017-12-07T23:12:36.295Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=hamburger\",\"query\":{\"id\":\"hamburger\"},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes?id=hamburger\",\"href\":\"/api/trials-bikes?id=hamburger\"}","timestamp":"2017-12-07T23:12:36.295Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T23:12:36.295Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[7]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[46]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[47]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[6][0]++;\n    let requestedBike = /* istanbul ignore next */(cov_ratewsw8z.s[48]++, getBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[49]++;\n    if (requestedBike)\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][0]++;cov_ratewsw8z.s[50]++;sendJSON(res, 200, requestedBike);} else\n\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][1]++;cov_ratewsw8z.s[51]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[6][1]++;cov_ratewsw8z.s[52]++;sendJSON(res, 200, trialsBikes);}\n}","timestamp":"2017-12-07T23:12:36.295Z"}
{"level":"info","message":"Responding with a 404 code due to No bike with id \"hamburger\"..","timestamp":"2017-12-07T23:12:36.295Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T23:12:36.297Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes?id=1cd1a3f0-dba4-11e7-99d0-79a212f5df18\"","timestamp":"2017-12-07T23:12:36.297Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=1cd1a3f0-dba4-11e7-99d0-79a212f5df18\",\"query\":{\"id\":\"1cd1a3f0-dba4-11e7-99d0-79a212f5df18\"},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes?id=1cd1a3f0-dba4-11e7-99d0-79a212f5df18\",\"href\":\"/api/trials-bikes?id=1cd1a3f0-dba4-11e7-99d0-79a212f5df18\"}","timestamp":"2017-12-07T23:12:36.297Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T23:12:36.297Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[8]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[54]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[55]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[8][0]++;\n    let removedBike = /* istanbul ignore next */(cov_ratewsw8z.s[56]++, removeBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[57]++;\n    if (removedBike) {/* istanbul ignore next */cov_ratewsw8z.b[9][0]++;cov_ratewsw8z.s[58]++;\n      logger.log('info', `Bike deleted, responding with a 204 code.`); /* istanbul ignore next */cov_ratewsw8z.s[59]++;\n      res.writeHead(204); /* istanbul ignore next */cov_ratewsw8z.s[60]++;\n      res.end();\n    } else\n      {/* istanbul ignore next */cov_ratewsw8z.b[9][1]++;cov_ratewsw8z.s[61]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[8][1]++;cov_ratewsw8z.s[62]++;sendBadStatus(res, 400, `bad request, no id.`);}\n}","timestamp":"2017-12-07T23:12:36.297Z"}
{"level":"info","message":"Bike deleted, responding with a 204 code.","timestamp":"2017-12-07T23:12:36.297Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T23:12:36.299Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T23:12:36.299Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T23:12:36.299Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T23:12:36.299Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[8]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[54]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[55]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[8][0]++;\n    let removedBike = /* istanbul ignore next */(cov_ratewsw8z.s[56]++, removeBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[57]++;\n    if (removedBike) {/* istanbul ignore next */cov_ratewsw8z.b[9][0]++;cov_ratewsw8z.s[58]++;\n      logger.log('info', `Bike deleted, responding with a 204 code.`); /* istanbul ignore next */cov_ratewsw8z.s[59]++;\n      res.writeHead(204); /* istanbul ignore next */cov_ratewsw8z.s[60]++;\n      res.end();\n    } else\n      {/* istanbul ignore next */cov_ratewsw8z.b[9][1]++;cov_ratewsw8z.s[61]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[8][1]++;cov_ratewsw8z.s[62]++;sendBadStatus(res, 400, `bad request, no id.`);}\n}","timestamp":"2017-12-07T23:12:36.299Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, no id..","timestamp":"2017-12-07T23:12:36.299Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T23:12:36.301Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes?id=hotdogs\"","timestamp":"2017-12-07T23:12:36.301Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=hotdogs\",\"query\":{\"id\":\"hotdogs\"},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes?id=hotdogs\",\"href\":\"/api/trials-bikes?id=hotdogs\"}","timestamp":"2017-12-07T23:12:36.301Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T23:12:36.301Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[8]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[54]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[55]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[8][0]++;\n    let removedBike = /* istanbul ignore next */(cov_ratewsw8z.s[56]++, removeBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[57]++;\n    if (removedBike) {/* istanbul ignore next */cov_ratewsw8z.b[9][0]++;cov_ratewsw8z.s[58]++;\n      logger.log('info', `Bike deleted, responding with a 204 code.`); /* istanbul ignore next */cov_ratewsw8z.s[59]++;\n      res.writeHead(204); /* istanbul ignore next */cov_ratewsw8z.s[60]++;\n      res.end();\n    } else\n      {/* istanbul ignore next */cov_ratewsw8z.b[9][1]++;cov_ratewsw8z.s[61]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[8][1]++;cov_ratewsw8z.s[62]++;sendBadStatus(res, 400, `bad request, no id.`);}\n}","timestamp":"2017-12-07T23:12:36.301Z"}
{"level":"info","message":"Responding with a 404 code due to No bike with id \"hotdogs\"..","timestamp":"2017-12-07T23:12:36.301Z"}
{"level":"info","message":"Adding a POST url and callback.","timestamp":"2017-12-07T23:24:42.070Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-07T23:24:42.070Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[27]++;\n  if (!(typeof req.body.make === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[28]++;\n    sendBadStatus(res, 400, `bad request, request property \"make\" must be of type string. You supplied type: ${typeof req.body.make}`); /* istanbul ignore next */cov_ratewsw8z.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[30]++;\n\n  if (!(typeof req.body.model === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[31]++;\n    sendBadStatus(res, 400, `bad request, request property \"model\" must be of type string. You supplied type: ${typeof req.body.model}`); /* istanbul ignore next */cov_ratewsw8z.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[33]++;\n\n  if (!(typeof req.body.year === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[34]++;\n    sendBadStatus(res, 400, `bad request, request property \"year\" must be of type string. You supplied type: ${typeof req.body.year}`); /* istanbul ignore next */cov_ratewsw8z.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[36]++;\n\n  if (!(typeof req.body.displacement === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[37]++;\n    sendBadStatus(res, 400, `bad request, request property \"displacement\" must be of type string. You supplied type: ${typeof req.body.displacement}`); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[39]++;\n\n  if (!(typeof req.body.color === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[40]++;\n    sendBadStatus(res, 400, `bad request, request property \"color\" must be of type string. You supplied type: ${typeof req.body.color}`); /* istanbul ignore next */cov_ratewsw8z.s[41]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[42]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[43]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[44]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T23:24:42.071Z"}
{"level":"info","message":"Adding a GET url and callback.","timestamp":"2017-12-07T23:24:42.071Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-07T23:24:42.071Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[7]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[46]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[47]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[6][0]++;\n    let requestedBike = /* istanbul ignore next */(cov_ratewsw8z.s[48]++, getBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[49]++;\n    if (requestedBike)\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][0]++;cov_ratewsw8z.s[50]++;sendJSON(res, 200, requestedBike);} else\n\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][1]++;cov_ratewsw8z.s[51]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[6][1]++;cov_ratewsw8z.s[52]++;sendJSON(res, 200, trialsBikes);}\n}","timestamp":"2017-12-07T23:24:42.071Z"}
{"level":"info","message":"Adding a DELETE url and callback.","timestamp":"2017-12-07T23:24:42.071Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-07T23:24:42.071Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[8]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[54]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[55]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[8][0]++;\n    let removedBike = /* istanbul ignore next */(cov_ratewsw8z.s[56]++, removeBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[57]++;\n    if (removedBike) {/* istanbul ignore next */cov_ratewsw8z.b[9][0]++;cov_ratewsw8z.s[58]++;\n      logger.log('info', `Bike deleted, responding with a 204 code.`); /* istanbul ignore next */cov_ratewsw8z.s[59]++;\n      res.writeHead(204); /* istanbul ignore next */cov_ratewsw8z.s[60]++;\n      res.end();\n    } else\n      {/* istanbul ignore next */cov_ratewsw8z.b[9][1]++;cov_ratewsw8z.s[61]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[8][1]++;cov_ratewsw8z.s[62]++;sendBadStatus(res, 400, `bad request, no id.`);}\n}","timestamp":"2017-12-07T23:24:42.071Z"}
{"level":"info","message":"Server is up on port 3000.","timestamp":"2017-12-07T23:24:42.112Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T23:24:42.153Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T23:24:42.153Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T23:24:42.153Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T23:24:42.154Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[27]++;\n  if (!(typeof req.body.make === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[28]++;\n    sendBadStatus(res, 400, `bad request, request property \"make\" must be of type string. You supplied type: ${typeof req.body.make}`); /* istanbul ignore next */cov_ratewsw8z.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[30]++;\n\n  if (!(typeof req.body.model === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[31]++;\n    sendBadStatus(res, 400, `bad request, request property \"model\" must be of type string. You supplied type: ${typeof req.body.model}`); /* istanbul ignore next */cov_ratewsw8z.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[33]++;\n\n  if (!(typeof req.body.year === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[34]++;\n    sendBadStatus(res, 400, `bad request, request property \"year\" must be of type string. You supplied type: ${typeof req.body.year}`); /* istanbul ignore next */cov_ratewsw8z.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[36]++;\n\n  if (!(typeof req.body.displacement === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[37]++;\n    sendBadStatus(res, 400, `bad request, request property \"displacement\" must be of type string. You supplied type: ${typeof req.body.displacement}`); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[39]++;\n\n  if (!(typeof req.body.color === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[40]++;\n    sendBadStatus(res, 400, `bad request, request property \"color\" must be of type string. You supplied type: ${typeof req.body.color}`); /* istanbul ignore next */cov_ratewsw8z.s[41]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[42]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[43]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[44]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T23:24:42.154Z"}
{"level":"info","message":"Responding with a 200 code and the following data:","timestamp":"2017-12-07T23:24:42.155Z"}
{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"cd7a98a0-dba5-11e7-830d-5d84e01acb7c","timestamp":"2017-12-07T23:24:42.155Z","level":"info","message":""}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T23:24:42.162Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T23:24:42.162Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T23:24:42.162Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T23:24:42.163Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.req.on (/Users/robertreed/Documents/programming/cf/401/lab/08-09-vanilla-rest-server/lab-rob/lib/req-parser.js:25:27)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-07T23:24:42.163Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T23:24:42.165Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T23:24:42.165Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T23:24:42.165Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T23:24:42.165Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[27]++;\n  if (!(typeof req.body.make === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[28]++;\n    sendBadStatus(res, 400, `bad request, request property \"make\" must be of type string. You supplied type: ${typeof req.body.make}`); /* istanbul ignore next */cov_ratewsw8z.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[30]++;\n\n  if (!(typeof req.body.model === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[31]++;\n    sendBadStatus(res, 400, `bad request, request property \"model\" must be of type string. You supplied type: ${typeof req.body.model}`); /* istanbul ignore next */cov_ratewsw8z.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[33]++;\n\n  if (!(typeof req.body.year === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[34]++;\n    sendBadStatus(res, 400, `bad request, request property \"year\" must be of type string. You supplied type: ${typeof req.body.year}`); /* istanbul ignore next */cov_ratewsw8z.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[36]++;\n\n  if (!(typeof req.body.displacement === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[37]++;\n    sendBadStatus(res, 400, `bad request, request property \"displacement\" must be of type string. You supplied type: ${typeof req.body.displacement}`); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[39]++;\n\n  if (!(typeof req.body.color === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[40]++;\n    sendBadStatus(res, 400, `bad request, request property \"color\" must be of type string. You supplied type: ${typeof req.body.color}`); /* istanbul ignore next */cov_ratewsw8z.s[41]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[42]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[43]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[44]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T23:24:42.165Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, request property \"make\" must be of type string. You supplied type: undefined.","timestamp":"2017-12-07T23:24:42.165Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T23:24:42.167Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T23:24:42.167Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T23:24:42.167Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T23:24:42.167Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[27]++;\n  if (!(typeof req.body.make === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[28]++;\n    sendBadStatus(res, 400, `bad request, request property \"make\" must be of type string. You supplied type: ${typeof req.body.make}`); /* istanbul ignore next */cov_ratewsw8z.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[30]++;\n\n  if (!(typeof req.body.model === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[31]++;\n    sendBadStatus(res, 400, `bad request, request property \"model\" must be of type string. You supplied type: ${typeof req.body.model}`); /* istanbul ignore next */cov_ratewsw8z.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[33]++;\n\n  if (!(typeof req.body.year === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[34]++;\n    sendBadStatus(res, 400, `bad request, request property \"year\" must be of type string. You supplied type: ${typeof req.body.year}`); /* istanbul ignore next */cov_ratewsw8z.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[36]++;\n\n  if (!(typeof req.body.displacement === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[37]++;\n    sendBadStatus(res, 400, `bad request, request property \"displacement\" must be of type string. You supplied type: ${typeof req.body.displacement}`); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[39]++;\n\n  if (!(typeof req.body.color === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[40]++;\n    sendBadStatus(res, 400, `bad request, request property \"color\" must be of type string. You supplied type: ${typeof req.body.color}`); /* istanbul ignore next */cov_ratewsw8z.s[41]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[42]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[43]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[44]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T23:24:42.167Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, request property \"model\" must be of type string. You supplied type: undefined.","timestamp":"2017-12-07T23:24:42.167Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T23:24:42.169Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T23:24:42.169Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T23:24:42.169Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T23:24:42.169Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[27]++;\n  if (!(typeof req.body.make === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[28]++;\n    sendBadStatus(res, 400, `bad request, request property \"make\" must be of type string. You supplied type: ${typeof req.body.make}`); /* istanbul ignore next */cov_ratewsw8z.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[30]++;\n\n  if (!(typeof req.body.model === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[31]++;\n    sendBadStatus(res, 400, `bad request, request property \"model\" must be of type string. You supplied type: ${typeof req.body.model}`); /* istanbul ignore next */cov_ratewsw8z.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[33]++;\n\n  if (!(typeof req.body.year === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[34]++;\n    sendBadStatus(res, 400, `bad request, request property \"year\" must be of type string. You supplied type: ${typeof req.body.year}`); /* istanbul ignore next */cov_ratewsw8z.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[36]++;\n\n  if (!(typeof req.body.displacement === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[37]++;\n    sendBadStatus(res, 400, `bad request, request property \"displacement\" must be of type string. You supplied type: ${typeof req.body.displacement}`); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[39]++;\n\n  if (!(typeof req.body.color === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[40]++;\n    sendBadStatus(res, 400, `bad request, request property \"color\" must be of type string. You supplied type: ${typeof req.body.color}`); /* istanbul ignore next */cov_ratewsw8z.s[41]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[42]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[43]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[44]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T23:24:42.169Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, request property \"year\" must be of type string. You supplied type: boolean.","timestamp":"2017-12-07T23:24:42.169Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T23:24:42.172Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T23:24:42.172Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T23:24:42.172Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T23:24:42.172Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[27]++;\n  if (!(typeof req.body.make === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[28]++;\n    sendBadStatus(res, 400, `bad request, request property \"make\" must be of type string. You supplied type: ${typeof req.body.make}`); /* istanbul ignore next */cov_ratewsw8z.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[30]++;\n\n  if (!(typeof req.body.model === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[31]++;\n    sendBadStatus(res, 400, `bad request, request property \"model\" must be of type string. You supplied type: ${typeof req.body.model}`); /* istanbul ignore next */cov_ratewsw8z.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[33]++;\n\n  if (!(typeof req.body.year === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[34]++;\n    sendBadStatus(res, 400, `bad request, request property \"year\" must be of type string. You supplied type: ${typeof req.body.year}`); /* istanbul ignore next */cov_ratewsw8z.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[36]++;\n\n  if (!(typeof req.body.displacement === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[37]++;\n    sendBadStatus(res, 400, `bad request, request property \"displacement\" must be of type string. You supplied type: ${typeof req.body.displacement}`); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[39]++;\n\n  if (!(typeof req.body.color === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[40]++;\n    sendBadStatus(res, 400, `bad request, request property \"color\" must be of type string. You supplied type: ${typeof req.body.color}`); /* istanbul ignore next */cov_ratewsw8z.s[41]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[42]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[43]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[44]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T23:24:42.172Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, request property \"displacement\" must be of type string. You supplied type: object.","timestamp":"2017-12-07T23:24:42.172Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T23:24:42.174Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T23:24:42.174Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T23:24:42.174Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T23:24:42.174Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[27]++;\n  if (!(typeof req.body.make === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[28]++;\n    sendBadStatus(res, 400, `bad request, request property \"make\" must be of type string. You supplied type: ${typeof req.body.make}`); /* istanbul ignore next */cov_ratewsw8z.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[30]++;\n\n  if (!(typeof req.body.model === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[31]++;\n    sendBadStatus(res, 400, `bad request, request property \"model\" must be of type string. You supplied type: ${typeof req.body.model}`); /* istanbul ignore next */cov_ratewsw8z.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[33]++;\n\n  if (!(typeof req.body.year === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[34]++;\n    sendBadStatus(res, 400, `bad request, request property \"year\" must be of type string. You supplied type: ${typeof req.body.year}`); /* istanbul ignore next */cov_ratewsw8z.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[36]++;\n\n  if (!(typeof req.body.displacement === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[37]++;\n    sendBadStatus(res, 400, `bad request, request property \"displacement\" must be of type string. You supplied type: ${typeof req.body.displacement}`); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[39]++;\n\n  if (!(typeof req.body.color === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[40]++;\n    sendBadStatus(res, 400, `bad request, request property \"color\" must be of type string. You supplied type: ${typeof req.body.color}`); /* istanbul ignore next */cov_ratewsw8z.s[41]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[42]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[43]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[44]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T23:24:42.174Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, request property \"color\" must be of type string. You supplied type: number.","timestamp":"2017-12-07T23:24:42.174Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T23:24:42.176Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T23:24:42.176Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T23:24:42.176Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T23:24:42.176Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[7]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[46]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[47]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[6][0]++;\n    let requestedBike = /* istanbul ignore next */(cov_ratewsw8z.s[48]++, getBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[49]++;\n    if (requestedBike)\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][0]++;cov_ratewsw8z.s[50]++;sendJSON(res, 200, requestedBike);} else\n\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][1]++;cov_ratewsw8z.s[51]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[6][1]++;cov_ratewsw8z.s[52]++;sendJSON(res, 200, trialsBikes);}\n}","timestamp":"2017-12-07T23:24:42.176Z"}
{"level":"info","message":"Responding with a 200 code and the following data:","timestamp":"2017-12-07T23:24:42.176Z"}
[{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"cd7a98a0-dba5-11e7-830d-5d84e01acb7c","timestamp":"2017-12-07T23:24:42.154Z"}]
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T23:24:42.178Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes?id=cd7a98a0-dba5-11e7-830d-5d84e01acb7c\"","timestamp":"2017-12-07T23:24:42.178Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=cd7a98a0-dba5-11e7-830d-5d84e01acb7c\",\"query\":{\"id\":\"cd7a98a0-dba5-11e7-830d-5d84e01acb7c\"},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes?id=cd7a98a0-dba5-11e7-830d-5d84e01acb7c\",\"href\":\"/api/trials-bikes?id=cd7a98a0-dba5-11e7-830d-5d84e01acb7c\"}","timestamp":"2017-12-07T23:24:42.179Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T23:24:42.179Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[7]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[46]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[47]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[6][0]++;\n    let requestedBike = /* istanbul ignore next */(cov_ratewsw8z.s[48]++, getBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[49]++;\n    if (requestedBike)\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][0]++;cov_ratewsw8z.s[50]++;sendJSON(res, 200, requestedBike);} else\n\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][1]++;cov_ratewsw8z.s[51]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[6][1]++;cov_ratewsw8z.s[52]++;sendJSON(res, 200, trialsBikes);}\n}","timestamp":"2017-12-07T23:24:42.179Z"}
{"level":"info","message":"Responding with a 200 code and the following data:","timestamp":"2017-12-07T23:24:42.179Z"}
{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"cd7a98a0-dba5-11e7-830d-5d84e01acb7c","timestamp":"2017-12-07T23:24:42.179Z","level":"info","message":""}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T23:24:42.181Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes?id=hamburger\"","timestamp":"2017-12-07T23:24:42.181Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=hamburger\",\"query\":{\"id\":\"hamburger\"},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes?id=hamburger\",\"href\":\"/api/trials-bikes?id=hamburger\"}","timestamp":"2017-12-07T23:24:42.181Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T23:24:42.181Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[7]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[46]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[47]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[6][0]++;\n    let requestedBike = /* istanbul ignore next */(cov_ratewsw8z.s[48]++, getBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[49]++;\n    if (requestedBike)\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][0]++;cov_ratewsw8z.s[50]++;sendJSON(res, 200, requestedBike);} else\n\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][1]++;cov_ratewsw8z.s[51]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[6][1]++;cov_ratewsw8z.s[52]++;sendJSON(res, 200, trialsBikes);}\n}","timestamp":"2017-12-07T23:24:42.181Z"}
{"level":"info","message":"Responding with a 404 code due to No bike with id \"hamburger\"..","timestamp":"2017-12-07T23:24:42.181Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T23:24:42.182Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes?id=cd7a98a0-dba5-11e7-830d-5d84e01acb7c\"","timestamp":"2017-12-07T23:24:42.182Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=cd7a98a0-dba5-11e7-830d-5d84e01acb7c\",\"query\":{\"id\":\"cd7a98a0-dba5-11e7-830d-5d84e01acb7c\"},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes?id=cd7a98a0-dba5-11e7-830d-5d84e01acb7c\",\"href\":\"/api/trials-bikes?id=cd7a98a0-dba5-11e7-830d-5d84e01acb7c\"}","timestamp":"2017-12-07T23:24:42.182Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T23:24:42.182Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[8]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[54]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[55]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[8][0]++;\n    let removedBike = /* istanbul ignore next */(cov_ratewsw8z.s[56]++, removeBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[57]++;\n    if (removedBike) {/* istanbul ignore next */cov_ratewsw8z.b[9][0]++;cov_ratewsw8z.s[58]++;\n      logger.log('info', `Bike deleted, responding with a 204 code.`); /* istanbul ignore next */cov_ratewsw8z.s[59]++;\n      res.writeHead(204); /* istanbul ignore next */cov_ratewsw8z.s[60]++;\n      res.end();\n    } else\n      {/* istanbul ignore next */cov_ratewsw8z.b[9][1]++;cov_ratewsw8z.s[61]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[8][1]++;cov_ratewsw8z.s[62]++;sendBadStatus(res, 400, `bad request, no id.`);}\n}","timestamp":"2017-12-07T23:24:42.182Z"}
{"level":"info","message":"Bike deleted, responding with a 204 code.","timestamp":"2017-12-07T23:24:42.183Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T23:24:42.185Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T23:24:42.185Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T23:24:42.185Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T23:24:42.185Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[8]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[54]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[55]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[8][0]++;\n    let removedBike = /* istanbul ignore next */(cov_ratewsw8z.s[56]++, removeBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[57]++;\n    if (removedBike) {/* istanbul ignore next */cov_ratewsw8z.b[9][0]++;cov_ratewsw8z.s[58]++;\n      logger.log('info', `Bike deleted, responding with a 204 code.`); /* istanbul ignore next */cov_ratewsw8z.s[59]++;\n      res.writeHead(204); /* istanbul ignore next */cov_ratewsw8z.s[60]++;\n      res.end();\n    } else\n      {/* istanbul ignore next */cov_ratewsw8z.b[9][1]++;cov_ratewsw8z.s[61]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[8][1]++;cov_ratewsw8z.s[62]++;sendBadStatus(res, 400, `bad request, no id.`);}\n}","timestamp":"2017-12-07T23:24:42.185Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, no id..","timestamp":"2017-12-07T23:24:42.185Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T23:24:42.187Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes?id=hotdogs\"","timestamp":"2017-12-07T23:24:42.187Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=hotdogs\",\"query\":{\"id\":\"hotdogs\"},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes?id=hotdogs\",\"href\":\"/api/trials-bikes?id=hotdogs\"}","timestamp":"2017-12-07T23:24:42.187Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T23:24:42.187Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[8]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[54]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[55]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[8][0]++;\n    let removedBike = /* istanbul ignore next */(cov_ratewsw8z.s[56]++, removeBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[57]++;\n    if (removedBike) {/* istanbul ignore next */cov_ratewsw8z.b[9][0]++;cov_ratewsw8z.s[58]++;\n      logger.log('info', `Bike deleted, responding with a 204 code.`); /* istanbul ignore next */cov_ratewsw8z.s[59]++;\n      res.writeHead(204); /* istanbul ignore next */cov_ratewsw8z.s[60]++;\n      res.end();\n    } else\n      {/* istanbul ignore next */cov_ratewsw8z.b[9][1]++;cov_ratewsw8z.s[61]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[8][1]++;cov_ratewsw8z.s[62]++;sendBadStatus(res, 400, `bad request, no id.`);}\n}","timestamp":"2017-12-07T23:24:42.187Z"}
{"level":"info","message":"Responding with a 404 code due to No bike with id \"hotdogs\"..","timestamp":"2017-12-07T23:24:42.187Z"}
{"level":"info","message":"Adding a POST url and callback.","timestamp":"2017-12-07T23:27:11.689Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-07T23:27:11.690Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[27]++;\n  if (!(typeof req.body.make === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[28]++;\n    sendBadStatus(res, 400, `bad request, request property \"make\" must be of type string. You supplied type: ${typeof req.body.make}`); /* istanbul ignore next */cov_ratewsw8z.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[30]++;\n\n  if (!(typeof req.body.model === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[31]++;\n    sendBadStatus(res, 400, `bad request, request property \"model\" must be of type string. You supplied type: ${typeof req.body.model}`); /* istanbul ignore next */cov_ratewsw8z.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[33]++;\n\n  if (!(typeof req.body.year === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[34]++;\n    sendBadStatus(res, 400, `bad request, request property \"year\" must be of type number. You supplied type: ${typeof req.body.year}`); /* istanbul ignore next */cov_ratewsw8z.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[36]++;\n\n  if (!(typeof req.body.displacement === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[37]++;\n    sendBadStatus(res, 400, `bad request, request property \"displacement\" must be of type number. You supplied type: ${typeof req.body.displacement}`); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[39]++;\n\n  if (!(typeof req.body.color === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[40]++;\n    sendBadStatus(res, 400, `bad request, request property \"color\" must be of type string. You supplied type: ${typeof req.body.color}`); /* istanbul ignore next */cov_ratewsw8z.s[41]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[42]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[43]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[44]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T23:27:11.690Z"}
{"level":"info","message":"Adding a GET url and callback.","timestamp":"2017-12-07T23:27:11.690Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-07T23:27:11.690Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[7]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[46]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[47]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[6][0]++;\n    let requestedBike = /* istanbul ignore next */(cov_ratewsw8z.s[48]++, getBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[49]++;\n    if (requestedBike)\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][0]++;cov_ratewsw8z.s[50]++;sendJSON(res, 200, requestedBike);} else\n\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][1]++;cov_ratewsw8z.s[51]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[6][1]++;cov_ratewsw8z.s[52]++;sendJSON(res, 200, trialsBikes);}\n}","timestamp":"2017-12-07T23:27:11.690Z"}
{"level":"info","message":"Adding a DELETE url and callback.","timestamp":"2017-12-07T23:27:11.690Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-07T23:27:11.690Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[8]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[54]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[55]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[8][0]++;\n    let removedBike = /* istanbul ignore next */(cov_ratewsw8z.s[56]++, removeBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[57]++;\n    if (removedBike) {/* istanbul ignore next */cov_ratewsw8z.b[9][0]++;cov_ratewsw8z.s[58]++;\n      logger.log('info', `Bike deleted, responding with a 204 code.`); /* istanbul ignore next */cov_ratewsw8z.s[59]++;\n      res.writeHead(204); /* istanbul ignore next */cov_ratewsw8z.s[60]++;\n      res.end();\n    } else\n      {/* istanbul ignore next */cov_ratewsw8z.b[9][1]++;cov_ratewsw8z.s[61]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[8][1]++;cov_ratewsw8z.s[62]++;sendBadStatus(res, 400, `bad request, no id.`);}\n}","timestamp":"2017-12-07T23:27:11.690Z"}
{"level":"info","message":"Server is up on port 3000.","timestamp":"2017-12-07T23:27:11.728Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T23:27:11.767Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T23:27:11.767Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T23:27:11.767Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T23:27:11.768Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[27]++;\n  if (!(typeof req.body.make === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[28]++;\n    sendBadStatus(res, 400, `bad request, request property \"make\" must be of type string. You supplied type: ${typeof req.body.make}`); /* istanbul ignore next */cov_ratewsw8z.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[30]++;\n\n  if (!(typeof req.body.model === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[31]++;\n    sendBadStatus(res, 400, `bad request, request property \"model\" must be of type string. You supplied type: ${typeof req.body.model}`); /* istanbul ignore next */cov_ratewsw8z.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[33]++;\n\n  if (!(typeof req.body.year === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[34]++;\n    sendBadStatus(res, 400, `bad request, request property \"year\" must be of type number. You supplied type: ${typeof req.body.year}`); /* istanbul ignore next */cov_ratewsw8z.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[36]++;\n\n  if (!(typeof req.body.displacement === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[37]++;\n    sendBadStatus(res, 400, `bad request, request property \"displacement\" must be of type number. You supplied type: ${typeof req.body.displacement}`); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[39]++;\n\n  if (!(typeof req.body.color === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[40]++;\n    sendBadStatus(res, 400, `bad request, request property \"color\" must be of type string. You supplied type: ${typeof req.body.color}`); /* istanbul ignore next */cov_ratewsw8z.s[41]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[42]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[43]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[44]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T23:27:11.768Z"}
{"level":"info","message":"Responding with a 200 code and the following data:","timestamp":"2017-12-07T23:27:11.768Z"}
{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"26a7e180-dba6-11e7-b029-fd3d6a8f18d9","timestamp":"2017-12-07T23:27:11.769Z","level":"info","message":""}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T23:27:11.776Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T23:27:11.776Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T23:27:11.776Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T23:27:11.777Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.req.on (/Users/robertreed/Documents/programming/cf/401/lab/08-09-vanilla-rest-server/lab-rob/lib/req-parser.js:25:27)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-07T23:27:11.777Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T23:27:11.779Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T23:27:11.779Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T23:27:11.779Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T23:27:11.779Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[27]++;\n  if (!(typeof req.body.make === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[28]++;\n    sendBadStatus(res, 400, `bad request, request property \"make\" must be of type string. You supplied type: ${typeof req.body.make}`); /* istanbul ignore next */cov_ratewsw8z.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[30]++;\n\n  if (!(typeof req.body.model === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[31]++;\n    sendBadStatus(res, 400, `bad request, request property \"model\" must be of type string. You supplied type: ${typeof req.body.model}`); /* istanbul ignore next */cov_ratewsw8z.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[33]++;\n\n  if (!(typeof req.body.year === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[34]++;\n    sendBadStatus(res, 400, `bad request, request property \"year\" must be of type number. You supplied type: ${typeof req.body.year}`); /* istanbul ignore next */cov_ratewsw8z.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[36]++;\n\n  if (!(typeof req.body.displacement === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[37]++;\n    sendBadStatus(res, 400, `bad request, request property \"displacement\" must be of type number. You supplied type: ${typeof req.body.displacement}`); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[39]++;\n\n  if (!(typeof req.body.color === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[40]++;\n    sendBadStatus(res, 400, `bad request, request property \"color\" must be of type string. You supplied type: ${typeof req.body.color}`); /* istanbul ignore next */cov_ratewsw8z.s[41]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[42]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[43]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[44]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T23:27:11.779Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, request property \"make\" must be of type string. You supplied type: undefined.","timestamp":"2017-12-07T23:27:11.779Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T23:27:11.781Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T23:27:11.781Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T23:27:11.781Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T23:27:11.781Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[27]++;\n  if (!(typeof req.body.make === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[28]++;\n    sendBadStatus(res, 400, `bad request, request property \"make\" must be of type string. You supplied type: ${typeof req.body.make}`); /* istanbul ignore next */cov_ratewsw8z.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[30]++;\n\n  if (!(typeof req.body.model === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[31]++;\n    sendBadStatus(res, 400, `bad request, request property \"model\" must be of type string. You supplied type: ${typeof req.body.model}`); /* istanbul ignore next */cov_ratewsw8z.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[33]++;\n\n  if (!(typeof req.body.year === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[34]++;\n    sendBadStatus(res, 400, `bad request, request property \"year\" must be of type number. You supplied type: ${typeof req.body.year}`); /* istanbul ignore next */cov_ratewsw8z.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[36]++;\n\n  if (!(typeof req.body.displacement === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[37]++;\n    sendBadStatus(res, 400, `bad request, request property \"displacement\" must be of type number. You supplied type: ${typeof req.body.displacement}`); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[39]++;\n\n  if (!(typeof req.body.color === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[40]++;\n    sendBadStatus(res, 400, `bad request, request property \"color\" must be of type string. You supplied type: ${typeof req.body.color}`); /* istanbul ignore next */cov_ratewsw8z.s[41]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[42]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[43]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[44]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T23:27:11.781Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, request property \"model\" must be of type string. You supplied type: undefined.","timestamp":"2017-12-07T23:27:11.781Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T23:27:11.783Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T23:27:11.783Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T23:27:11.783Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T23:27:11.783Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[27]++;\n  if (!(typeof req.body.make === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[28]++;\n    sendBadStatus(res, 400, `bad request, request property \"make\" must be of type string. You supplied type: ${typeof req.body.make}`); /* istanbul ignore next */cov_ratewsw8z.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[30]++;\n\n  if (!(typeof req.body.model === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[31]++;\n    sendBadStatus(res, 400, `bad request, request property \"model\" must be of type string. You supplied type: ${typeof req.body.model}`); /* istanbul ignore next */cov_ratewsw8z.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[33]++;\n\n  if (!(typeof req.body.year === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[34]++;\n    sendBadStatus(res, 400, `bad request, request property \"year\" must be of type number. You supplied type: ${typeof req.body.year}`); /* istanbul ignore next */cov_ratewsw8z.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[36]++;\n\n  if (!(typeof req.body.displacement === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[37]++;\n    sendBadStatus(res, 400, `bad request, request property \"displacement\" must be of type number. You supplied type: ${typeof req.body.displacement}`); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[39]++;\n\n  if (!(typeof req.body.color === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[40]++;\n    sendBadStatus(res, 400, `bad request, request property \"color\" must be of type string. You supplied type: ${typeof req.body.color}`); /* istanbul ignore next */cov_ratewsw8z.s[41]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[42]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[43]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[44]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T23:27:11.783Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, request property \"year\" must be of type number. You supplied type: boolean.","timestamp":"2017-12-07T23:27:11.783Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T23:27:11.785Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T23:27:11.785Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T23:27:11.785Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T23:27:11.785Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[27]++;\n  if (!(typeof req.body.make === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[28]++;\n    sendBadStatus(res, 400, `bad request, request property \"make\" must be of type string. You supplied type: ${typeof req.body.make}`); /* istanbul ignore next */cov_ratewsw8z.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[30]++;\n\n  if (!(typeof req.body.model === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[31]++;\n    sendBadStatus(res, 400, `bad request, request property \"model\" must be of type string. You supplied type: ${typeof req.body.model}`); /* istanbul ignore next */cov_ratewsw8z.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[33]++;\n\n  if (!(typeof req.body.year === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[34]++;\n    sendBadStatus(res, 400, `bad request, request property \"year\" must be of type number. You supplied type: ${typeof req.body.year}`); /* istanbul ignore next */cov_ratewsw8z.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[36]++;\n\n  if (!(typeof req.body.displacement === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[37]++;\n    sendBadStatus(res, 400, `bad request, request property \"displacement\" must be of type number. You supplied type: ${typeof req.body.displacement}`); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[39]++;\n\n  if (!(typeof req.body.color === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[40]++;\n    sendBadStatus(res, 400, `bad request, request property \"color\" must be of type string. You supplied type: ${typeof req.body.color}`); /* istanbul ignore next */cov_ratewsw8z.s[41]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[42]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[43]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[44]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T23:27:11.785Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, request property \"displacement\" must be of type number. You supplied type: object.","timestamp":"2017-12-07T23:27:11.785Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T23:27:11.787Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T23:27:11.787Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T23:27:11.787Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T23:27:11.787Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[27]++;\n  if (!(typeof req.body.make === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[28]++;\n    sendBadStatus(res, 400, `bad request, request property \"make\" must be of type string. You supplied type: ${typeof req.body.make}`); /* istanbul ignore next */cov_ratewsw8z.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[30]++;\n\n  if (!(typeof req.body.model === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[31]++;\n    sendBadStatus(res, 400, `bad request, request property \"model\" must be of type string. You supplied type: ${typeof req.body.model}`); /* istanbul ignore next */cov_ratewsw8z.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[33]++;\n\n  if (!(typeof req.body.year === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[34]++;\n    sendBadStatus(res, 400, `bad request, request property \"year\" must be of type number. You supplied type: ${typeof req.body.year}`); /* istanbul ignore next */cov_ratewsw8z.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[36]++;\n\n  if (!(typeof req.body.displacement === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[37]++;\n    sendBadStatus(res, 400, `bad request, request property \"displacement\" must be of type number. You supplied type: ${typeof req.body.displacement}`); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[39]++;\n\n  if (!(typeof req.body.color === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[40]++;\n    sendBadStatus(res, 400, `bad request, request property \"color\" must be of type string. You supplied type: ${typeof req.body.color}`); /* istanbul ignore next */cov_ratewsw8z.s[41]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[42]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[43]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[44]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T23:27:11.787Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, request property \"color\" must be of type string. You supplied type: number.","timestamp":"2017-12-07T23:27:11.787Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T23:27:11.788Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T23:27:11.788Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T23:27:11.788Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T23:27:11.789Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[7]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[46]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[47]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[6][0]++;\n    let requestedBike = /* istanbul ignore next */(cov_ratewsw8z.s[48]++, getBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[49]++;\n    if (requestedBike)\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][0]++;cov_ratewsw8z.s[50]++;sendJSON(res, 200, requestedBike);} else\n\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][1]++;cov_ratewsw8z.s[51]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[6][1]++;cov_ratewsw8z.s[52]++;sendJSON(res, 200, trialsBikes);}\n}","timestamp":"2017-12-07T23:27:11.789Z"}
{"level":"info","message":"Responding with a 200 code and the following data:","timestamp":"2017-12-07T23:27:11.789Z"}
[{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"26a7e180-dba6-11e7-b029-fd3d6a8f18d9","timestamp":"2017-12-07T23:27:11.768Z"}]
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T23:27:11.791Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes?id=26a7e180-dba6-11e7-b029-fd3d6a8f18d9\"","timestamp":"2017-12-07T23:27:11.791Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=26a7e180-dba6-11e7-b029-fd3d6a8f18d9\",\"query\":{\"id\":\"26a7e180-dba6-11e7-b029-fd3d6a8f18d9\"},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes?id=26a7e180-dba6-11e7-b029-fd3d6a8f18d9\",\"href\":\"/api/trials-bikes?id=26a7e180-dba6-11e7-b029-fd3d6a8f18d9\"}","timestamp":"2017-12-07T23:27:11.791Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T23:27:11.791Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[7]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[46]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[47]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[6][0]++;\n    let requestedBike = /* istanbul ignore next */(cov_ratewsw8z.s[48]++, getBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[49]++;\n    if (requestedBike)\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][0]++;cov_ratewsw8z.s[50]++;sendJSON(res, 200, requestedBike);} else\n\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][1]++;cov_ratewsw8z.s[51]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[6][1]++;cov_ratewsw8z.s[52]++;sendJSON(res, 200, trialsBikes);}\n}","timestamp":"2017-12-07T23:27:11.791Z"}
{"level":"info","message":"Responding with a 200 code and the following data:","timestamp":"2017-12-07T23:27:11.791Z"}
{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"26a7e180-dba6-11e7-b029-fd3d6a8f18d9","timestamp":"2017-12-07T23:27:11.791Z","level":"info","message":""}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T23:27:11.793Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes?id=hamburger\"","timestamp":"2017-12-07T23:27:11.793Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=hamburger\",\"query\":{\"id\":\"hamburger\"},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes?id=hamburger\",\"href\":\"/api/trials-bikes?id=hamburger\"}","timestamp":"2017-12-07T23:27:11.793Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T23:27:11.793Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[7]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[46]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[47]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[6][0]++;\n    let requestedBike = /* istanbul ignore next */(cov_ratewsw8z.s[48]++, getBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[49]++;\n    if (requestedBike)\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][0]++;cov_ratewsw8z.s[50]++;sendJSON(res, 200, requestedBike);} else\n\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][1]++;cov_ratewsw8z.s[51]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[6][1]++;cov_ratewsw8z.s[52]++;sendJSON(res, 200, trialsBikes);}\n}","timestamp":"2017-12-07T23:27:11.793Z"}
{"level":"info","message":"Responding with a 404 code due to No bike with id \"hamburger\"..","timestamp":"2017-12-07T23:27:11.793Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T23:27:11.795Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes?id=26a7e180-dba6-11e7-b029-fd3d6a8f18d9\"","timestamp":"2017-12-07T23:27:11.795Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=26a7e180-dba6-11e7-b029-fd3d6a8f18d9\",\"query\":{\"id\":\"26a7e180-dba6-11e7-b029-fd3d6a8f18d9\"},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes?id=26a7e180-dba6-11e7-b029-fd3d6a8f18d9\",\"href\":\"/api/trials-bikes?id=26a7e180-dba6-11e7-b029-fd3d6a8f18d9\"}","timestamp":"2017-12-07T23:27:11.795Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T23:27:11.795Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[8]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[54]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[55]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[8][0]++;\n    let removedBike = /* istanbul ignore next */(cov_ratewsw8z.s[56]++, removeBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[57]++;\n    if (removedBike) {/* istanbul ignore next */cov_ratewsw8z.b[9][0]++;cov_ratewsw8z.s[58]++;\n      logger.log('info', `Bike deleted, responding with a 204 code.`); /* istanbul ignore next */cov_ratewsw8z.s[59]++;\n      res.writeHead(204); /* istanbul ignore next */cov_ratewsw8z.s[60]++;\n      res.end();\n    } else\n      {/* istanbul ignore next */cov_ratewsw8z.b[9][1]++;cov_ratewsw8z.s[61]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[8][1]++;cov_ratewsw8z.s[62]++;sendBadStatus(res, 400, `bad request, no id.`);}\n}","timestamp":"2017-12-07T23:27:11.795Z"}
{"level":"info","message":"Bike deleted, responding with a 204 code.","timestamp":"2017-12-07T23:27:11.795Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T23:27:11.797Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T23:27:11.797Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T23:27:11.797Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T23:27:11.797Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[8]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[54]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[55]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[8][0]++;\n    let removedBike = /* istanbul ignore next */(cov_ratewsw8z.s[56]++, removeBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[57]++;\n    if (removedBike) {/* istanbul ignore next */cov_ratewsw8z.b[9][0]++;cov_ratewsw8z.s[58]++;\n      logger.log('info', `Bike deleted, responding with a 204 code.`); /* istanbul ignore next */cov_ratewsw8z.s[59]++;\n      res.writeHead(204); /* istanbul ignore next */cov_ratewsw8z.s[60]++;\n      res.end();\n    } else\n      {/* istanbul ignore next */cov_ratewsw8z.b[9][1]++;cov_ratewsw8z.s[61]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[8][1]++;cov_ratewsw8z.s[62]++;sendBadStatus(res, 400, `bad request, no id.`);}\n}","timestamp":"2017-12-07T23:27:11.797Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, no id..","timestamp":"2017-12-07T23:27:11.797Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T23:27:11.799Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes?id=hotdogs\"","timestamp":"2017-12-07T23:27:11.799Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=hotdogs\",\"query\":{\"id\":\"hotdogs\"},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes?id=hotdogs\",\"href\":\"/api/trials-bikes?id=hotdogs\"}","timestamp":"2017-12-07T23:27:11.799Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T23:27:11.799Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[8]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[54]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[55]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[8][0]++;\n    let removedBike = /* istanbul ignore next */(cov_ratewsw8z.s[56]++, removeBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[57]++;\n    if (removedBike) {/* istanbul ignore next */cov_ratewsw8z.b[9][0]++;cov_ratewsw8z.s[58]++;\n      logger.log('info', `Bike deleted, responding with a 204 code.`); /* istanbul ignore next */cov_ratewsw8z.s[59]++;\n      res.writeHead(204); /* istanbul ignore next */cov_ratewsw8z.s[60]++;\n      res.end();\n    } else\n      {/* istanbul ignore next */cov_ratewsw8z.b[9][1]++;cov_ratewsw8z.s[61]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[8][1]++;cov_ratewsw8z.s[62]++;sendBadStatus(res, 400, `bad request, no id.`);}\n}","timestamp":"2017-12-07T23:27:11.799Z"}
{"level":"info","message":"Responding with a 404 code due to No bike with id \"hotdogs\"..","timestamp":"2017-12-07T23:27:11.799Z"}
{"level":"info","message":"Adding a POST url and callback.","timestamp":"2017-12-07T23:33:07.294Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-07T23:33:07.295Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[27]++;\n  if (!(typeof req.body.make === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[28]++;\n    sendBadStatus(res, 400, `bad request, request property \"make\" must be of type string. You supplied type: ${typeof req.body.make}`); /* istanbul ignore next */cov_ratewsw8z.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[30]++;\n\n  if (!(typeof req.body.model === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[31]++;\n    sendBadStatus(res, 400, `bad request, request property \"model\" must be of type string. You supplied type: ${typeof req.body.model}`); /* istanbul ignore next */cov_ratewsw8z.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[33]++;\n\n  if (!(typeof req.body.year === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[34]++;\n    sendBadStatus(res, 400, `bad request, request property \"year\" must be of type number. You supplied type: ${typeof req.body.year}`); /* istanbul ignore next */cov_ratewsw8z.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[36]++;\n\n  if (!(typeof req.body.displacement === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[37]++;\n    sendBadStatus(res, 400, `bad request, request property \"displacement\" must be of type number. You supplied type: ${typeof req.body.displacement}`); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[39]++;\n\n  if (!(typeof req.body.color === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[40]++;\n    sendBadStatus(res, 400, `bad request, request property \"color\" must be of type string. You supplied type: ${typeof req.body.color}`); /* istanbul ignore next */cov_ratewsw8z.s[41]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[42]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[43]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[44]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T23:33:07.295Z"}
{"level":"info","message":"Adding a GET url and callback.","timestamp":"2017-12-07T23:33:07.295Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-07T23:33:07.295Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[7]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[46]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[47]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[6][0]++;\n    let requestedBike = /* istanbul ignore next */(cov_ratewsw8z.s[48]++, getBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[49]++;\n    if (requestedBike)\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][0]++;cov_ratewsw8z.s[50]++;sendJSON(res, 200, requestedBike);} else\n\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][1]++;cov_ratewsw8z.s[51]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[6][1]++;cov_ratewsw8z.s[52]++;sendJSON(res, 200, trialsBikes);}\n}","timestamp":"2017-12-07T23:33:07.295Z"}
{"level":"info","message":"Adding a DELETE url and callback.","timestamp":"2017-12-07T23:33:07.295Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-07T23:33:07.295Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[8]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[54]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[55]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[8][0]++;\n    let removedBike = /* istanbul ignore next */(cov_ratewsw8z.s[56]++, removeBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[57]++;\n    if (removedBike) {/* istanbul ignore next */cov_ratewsw8z.b[9][0]++;cov_ratewsw8z.s[58]++;\n      logger.log('info', `Bike deleted, responding with a 204 code.`); /* istanbul ignore next */cov_ratewsw8z.s[59]++;\n      res.writeHead(204); /* istanbul ignore next */cov_ratewsw8z.s[60]++;\n      res.end();\n    } else\n      {/* istanbul ignore next */cov_ratewsw8z.b[9][1]++;cov_ratewsw8z.s[61]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[8][1]++;cov_ratewsw8z.s[62]++;sendBadStatus(res, 400, `bad request, no id.`);}\n}","timestamp":"2017-12-07T23:33:07.295Z"}
{"level":"info","message":"Server is up on port 3000.","timestamp":"2017-12-07T23:33:07.335Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T23:33:07.374Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T23:33:07.374Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T23:33:07.374Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T23:33:07.375Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[27]++;\n  if (!(typeof req.body.make === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[28]++;\n    sendBadStatus(res, 400, `bad request, request property \"make\" must be of type string. You supplied type: ${typeof req.body.make}`); /* istanbul ignore next */cov_ratewsw8z.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[30]++;\n\n  if (!(typeof req.body.model === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[31]++;\n    sendBadStatus(res, 400, `bad request, request property \"model\" must be of type string. You supplied type: ${typeof req.body.model}`); /* istanbul ignore next */cov_ratewsw8z.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[33]++;\n\n  if (!(typeof req.body.year === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[34]++;\n    sendBadStatus(res, 400, `bad request, request property \"year\" must be of type number. You supplied type: ${typeof req.body.year}`); /* istanbul ignore next */cov_ratewsw8z.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[36]++;\n\n  if (!(typeof req.body.displacement === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[37]++;\n    sendBadStatus(res, 400, `bad request, request property \"displacement\" must be of type number. You supplied type: ${typeof req.body.displacement}`); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[39]++;\n\n  if (!(typeof req.body.color === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[40]++;\n    sendBadStatus(res, 400, `bad request, request property \"color\" must be of type string. You supplied type: ${typeof req.body.color}`); /* istanbul ignore next */cov_ratewsw8z.s[41]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[42]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[43]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[44]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T23:33:07.375Z"}
{"level":"info","message":"Responding with a 200 code and the following data:","timestamp":"2017-12-07T23:33:07.375Z"}
{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"fa9d33f0-dba6-11e7-b44b-696b7b4729c2","timestamp":"2017-12-07T23:33:07.375Z","level":"info","message":""}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T23:33:07.383Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T23:33:07.383Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T23:33:07.383Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T23:33:07.383Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.req.on (/Users/robertreed/Documents/programming/cf/401/lab/08-09-vanilla-rest-server/lab-rob/lib/req-parser.js:25:27)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-07T23:33:07.384Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T23:33:07.386Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T23:33:07.386Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T23:33:07.386Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T23:33:07.386Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[27]++;\n  if (!(typeof req.body.make === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[28]++;\n    sendBadStatus(res, 400, `bad request, request property \"make\" must be of type string. You supplied type: ${typeof req.body.make}`); /* istanbul ignore next */cov_ratewsw8z.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[30]++;\n\n  if (!(typeof req.body.model === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[31]++;\n    sendBadStatus(res, 400, `bad request, request property \"model\" must be of type string. You supplied type: ${typeof req.body.model}`); /* istanbul ignore next */cov_ratewsw8z.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[33]++;\n\n  if (!(typeof req.body.year === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[34]++;\n    sendBadStatus(res, 400, `bad request, request property \"year\" must be of type number. You supplied type: ${typeof req.body.year}`); /* istanbul ignore next */cov_ratewsw8z.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[36]++;\n\n  if (!(typeof req.body.displacement === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[37]++;\n    sendBadStatus(res, 400, `bad request, request property \"displacement\" must be of type number. You supplied type: ${typeof req.body.displacement}`); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[39]++;\n\n  if (!(typeof req.body.color === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[40]++;\n    sendBadStatus(res, 400, `bad request, request property \"color\" must be of type string. You supplied type: ${typeof req.body.color}`); /* istanbul ignore next */cov_ratewsw8z.s[41]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[42]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[43]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[44]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T23:33:07.386Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, request property \"make\" must be of type string. You supplied type: undefined.","timestamp":"2017-12-07T23:33:07.386Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T23:33:07.388Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T23:33:07.388Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T23:33:07.388Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T23:33:07.388Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[27]++;\n  if (!(typeof req.body.make === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[28]++;\n    sendBadStatus(res, 400, `bad request, request property \"make\" must be of type string. You supplied type: ${typeof req.body.make}`); /* istanbul ignore next */cov_ratewsw8z.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[30]++;\n\n  if (!(typeof req.body.model === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[31]++;\n    sendBadStatus(res, 400, `bad request, request property \"model\" must be of type string. You supplied type: ${typeof req.body.model}`); /* istanbul ignore next */cov_ratewsw8z.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[33]++;\n\n  if (!(typeof req.body.year === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[34]++;\n    sendBadStatus(res, 400, `bad request, request property \"year\" must be of type number. You supplied type: ${typeof req.body.year}`); /* istanbul ignore next */cov_ratewsw8z.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[36]++;\n\n  if (!(typeof req.body.displacement === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[37]++;\n    sendBadStatus(res, 400, `bad request, request property \"displacement\" must be of type number. You supplied type: ${typeof req.body.displacement}`); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[39]++;\n\n  if (!(typeof req.body.color === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[40]++;\n    sendBadStatus(res, 400, `bad request, request property \"color\" must be of type string. You supplied type: ${typeof req.body.color}`); /* istanbul ignore next */cov_ratewsw8z.s[41]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[42]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[43]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[44]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T23:33:07.388Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, request property \"model\" must be of type string. You supplied type: undefined.","timestamp":"2017-12-07T23:33:07.388Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T23:33:07.390Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T23:33:07.390Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T23:33:07.390Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T23:33:07.390Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[27]++;\n  if (!(typeof req.body.make === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[28]++;\n    sendBadStatus(res, 400, `bad request, request property \"make\" must be of type string. You supplied type: ${typeof req.body.make}`); /* istanbul ignore next */cov_ratewsw8z.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[30]++;\n\n  if (!(typeof req.body.model === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[31]++;\n    sendBadStatus(res, 400, `bad request, request property \"model\" must be of type string. You supplied type: ${typeof req.body.model}`); /* istanbul ignore next */cov_ratewsw8z.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[33]++;\n\n  if (!(typeof req.body.year === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[34]++;\n    sendBadStatus(res, 400, `bad request, request property \"year\" must be of type number. You supplied type: ${typeof req.body.year}`); /* istanbul ignore next */cov_ratewsw8z.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[36]++;\n\n  if (!(typeof req.body.displacement === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[37]++;\n    sendBadStatus(res, 400, `bad request, request property \"displacement\" must be of type number. You supplied type: ${typeof req.body.displacement}`); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[39]++;\n\n  if (!(typeof req.body.color === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[40]++;\n    sendBadStatus(res, 400, `bad request, request property \"color\" must be of type string. You supplied type: ${typeof req.body.color}`); /* istanbul ignore next */cov_ratewsw8z.s[41]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[42]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[43]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[44]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T23:33:07.390Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, request property \"year\" must be of type number. You supplied type: boolean.","timestamp":"2017-12-07T23:33:07.390Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T23:33:07.392Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T23:33:07.392Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T23:33:07.392Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T23:33:07.392Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[27]++;\n  if (!(typeof req.body.make === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[28]++;\n    sendBadStatus(res, 400, `bad request, request property \"make\" must be of type string. You supplied type: ${typeof req.body.make}`); /* istanbul ignore next */cov_ratewsw8z.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[30]++;\n\n  if (!(typeof req.body.model === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[31]++;\n    sendBadStatus(res, 400, `bad request, request property \"model\" must be of type string. You supplied type: ${typeof req.body.model}`); /* istanbul ignore next */cov_ratewsw8z.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[33]++;\n\n  if (!(typeof req.body.year === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[34]++;\n    sendBadStatus(res, 400, `bad request, request property \"year\" must be of type number. You supplied type: ${typeof req.body.year}`); /* istanbul ignore next */cov_ratewsw8z.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[36]++;\n\n  if (!(typeof req.body.displacement === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[37]++;\n    sendBadStatus(res, 400, `bad request, request property \"displacement\" must be of type number. You supplied type: ${typeof req.body.displacement}`); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[39]++;\n\n  if (!(typeof req.body.color === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[40]++;\n    sendBadStatus(res, 400, `bad request, request property \"color\" must be of type string. You supplied type: ${typeof req.body.color}`); /* istanbul ignore next */cov_ratewsw8z.s[41]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[42]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[43]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[44]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T23:33:07.392Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, request property \"displacement\" must be of type number. You supplied type: object.","timestamp":"2017-12-07T23:33:07.392Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T23:33:07.394Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T23:33:07.394Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T23:33:07.394Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T23:33:07.394Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[27]++;\n  if (!(typeof req.body.make === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[28]++;\n    sendBadStatus(res, 400, `bad request, request property \"make\" must be of type string. You supplied type: ${typeof req.body.make}`); /* istanbul ignore next */cov_ratewsw8z.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[30]++;\n\n  if (!(typeof req.body.model === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[31]++;\n    sendBadStatus(res, 400, `bad request, request property \"model\" must be of type string. You supplied type: ${typeof req.body.model}`); /* istanbul ignore next */cov_ratewsw8z.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[33]++;\n\n  if (!(typeof req.body.year === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[34]++;\n    sendBadStatus(res, 400, `bad request, request property \"year\" must be of type number. You supplied type: ${typeof req.body.year}`); /* istanbul ignore next */cov_ratewsw8z.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[36]++;\n\n  if (!(typeof req.body.displacement === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[37]++;\n    sendBadStatus(res, 400, `bad request, request property \"displacement\" must be of type number. You supplied type: ${typeof req.body.displacement}`); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}cov_ratewsw8z.s[39]++;\n\n  if (!(typeof req.body.color === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[40]++;\n    sendBadStatus(res, 400, `bad request, request property \"color\" must be of type string. You supplied type: ${typeof req.body.color}`); /* istanbul ignore next */cov_ratewsw8z.s[41]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[5][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[42]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[43]++;\n\n\n  trialsBikes.push(trialsBike); /* istanbul ignore next */cov_ratewsw8z.s[44]++;\n  sendJSON(res, 200, trialsBike);\n}","timestamp":"2017-12-07T23:33:07.394Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, request property \"color\" must be of type string. You supplied type: number.","timestamp":"2017-12-07T23:33:07.394Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T23:33:07.396Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T23:33:07.396Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T23:33:07.396Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T23:33:07.396Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[7]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[46]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[47]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[6][0]++;\n    let requestedBike = /* istanbul ignore next */(cov_ratewsw8z.s[48]++, getBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[49]++;\n    if (requestedBike)\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][0]++;cov_ratewsw8z.s[50]++;sendJSON(res, 200, requestedBike);} else\n\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][1]++;cov_ratewsw8z.s[51]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[6][1]++;cov_ratewsw8z.s[52]++;sendJSON(res, 200, trialsBikes);}\n}","timestamp":"2017-12-07T23:33:07.396Z"}
{"level":"info","message":"Responding with a 200 code and the following data:","timestamp":"2017-12-07T23:33:07.396Z"}
[{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"fa9d33f0-dba6-11e7-b44b-696b7b4729c2","timestamp":"2017-12-07T23:33:07.375Z"}]
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T23:33:07.398Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes?id=fa9d33f0-dba6-11e7-b44b-696b7b4729c2\"","timestamp":"2017-12-07T23:33:07.398Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=fa9d33f0-dba6-11e7-b44b-696b7b4729c2\",\"query\":{\"id\":\"fa9d33f0-dba6-11e7-b44b-696b7b4729c2\"},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes?id=fa9d33f0-dba6-11e7-b44b-696b7b4729c2\",\"href\":\"/api/trials-bikes?id=fa9d33f0-dba6-11e7-b44b-696b7b4729c2\"}","timestamp":"2017-12-07T23:33:07.398Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T23:33:07.399Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[7]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[46]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[47]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[6][0]++;\n    let requestedBike = /* istanbul ignore next */(cov_ratewsw8z.s[48]++, getBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[49]++;\n    if (requestedBike)\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][0]++;cov_ratewsw8z.s[50]++;sendJSON(res, 200, requestedBike);} else\n\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][1]++;cov_ratewsw8z.s[51]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[6][1]++;cov_ratewsw8z.s[52]++;sendJSON(res, 200, trialsBikes);}\n}","timestamp":"2017-12-07T23:33:07.399Z"}
{"level":"info","message":"Responding with a 200 code and the following data:","timestamp":"2017-12-07T23:33:07.399Z"}
{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"fa9d33f0-dba6-11e7-b44b-696b7b4729c2","timestamp":"2017-12-07T23:33:07.399Z","level":"info","message":""}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T23:33:07.400Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes?id=hamburger\"","timestamp":"2017-12-07T23:33:07.400Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=hamburger\",\"query\":{\"id\":\"hamburger\"},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes?id=hamburger\",\"href\":\"/api/trials-bikes?id=hamburger\"}","timestamp":"2017-12-07T23:33:07.401Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T23:33:07.401Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[7]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[46]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[47]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[6][0]++;\n    let requestedBike = /* istanbul ignore next */(cov_ratewsw8z.s[48]++, getBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[49]++;\n    if (requestedBike)\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][0]++;cov_ratewsw8z.s[50]++;sendJSON(res, 200, requestedBike);} else\n\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][1]++;cov_ratewsw8z.s[51]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[6][1]++;cov_ratewsw8z.s[52]++;sendJSON(res, 200, trialsBikes);}\n}","timestamp":"2017-12-07T23:33:07.401Z"}
{"level":"info","message":"Responding with a 404 code due to No bike with id \"hamburger\"..","timestamp":"2017-12-07T23:33:07.401Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T23:33:07.402Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes?id=fa9d33f0-dba6-11e7-b44b-696b7b4729c2\"","timestamp":"2017-12-07T23:33:07.402Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=fa9d33f0-dba6-11e7-b44b-696b7b4729c2\",\"query\":{\"id\":\"fa9d33f0-dba6-11e7-b44b-696b7b4729c2\"},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes?id=fa9d33f0-dba6-11e7-b44b-696b7b4729c2\",\"href\":\"/api/trials-bikes?id=fa9d33f0-dba6-11e7-b44b-696b7b4729c2\"}","timestamp":"2017-12-07T23:33:07.402Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T23:33:07.402Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[8]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[54]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[55]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[8][0]++;\n    let removedBike = /* istanbul ignore next */(cov_ratewsw8z.s[56]++, removeBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[57]++;\n    if (removedBike) {/* istanbul ignore next */cov_ratewsw8z.b[9][0]++;cov_ratewsw8z.s[58]++;\n      logger.log('info', `Bike deleted, responding with a 204 code.`); /* istanbul ignore next */cov_ratewsw8z.s[59]++;\n      res.writeHead(204); /* istanbul ignore next */cov_ratewsw8z.s[60]++;\n      res.end();\n    } else\n      {/* istanbul ignore next */cov_ratewsw8z.b[9][1]++;cov_ratewsw8z.s[61]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[8][1]++;cov_ratewsw8z.s[62]++;sendBadStatus(res, 400, `bad request, no id.`);}\n}","timestamp":"2017-12-07T23:33:07.403Z"}
{"level":"info","message":"Bike deleted, responding with a 204 code.","timestamp":"2017-12-07T23:33:07.403Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T23:33:07.405Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-07T23:33:07.405Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-07T23:33:07.405Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T23:33:07.405Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[8]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[54]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[55]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[8][0]++;\n    let removedBike = /* istanbul ignore next */(cov_ratewsw8z.s[56]++, removeBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[57]++;\n    if (removedBike) {/* istanbul ignore next */cov_ratewsw8z.b[9][0]++;cov_ratewsw8z.s[58]++;\n      logger.log('info', `Bike deleted, responding with a 204 code.`); /* istanbul ignore next */cov_ratewsw8z.s[59]++;\n      res.writeHead(204); /* istanbul ignore next */cov_ratewsw8z.s[60]++;\n      res.end();\n    } else\n      {/* istanbul ignore next */cov_ratewsw8z.b[9][1]++;cov_ratewsw8z.s[61]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[8][1]++;cov_ratewsw8z.s[62]++;sendBadStatus(res, 400, `bad request, no id.`);}\n}","timestamp":"2017-12-07T23:33:07.405Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, no id..","timestamp":"2017-12-07T23:33:07.405Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-07T23:33:07.407Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes?id=hotdogs\"","timestamp":"2017-12-07T23:33:07.407Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=hotdogs\",\"query\":{\"id\":\"hotdogs\"},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes?id=hotdogs\",\"href\":\"/api/trials-bikes?id=hotdogs\"}","timestamp":"2017-12-07T23:33:07.407Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-07T23:33:07.407Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[8]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[54]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[55]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[8][0]++;\n    let removedBike = /* istanbul ignore next */(cov_ratewsw8z.s[56]++, removeBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[57]++;\n    if (removedBike) {/* istanbul ignore next */cov_ratewsw8z.b[9][0]++;cov_ratewsw8z.s[58]++;\n      logger.log('info', `Bike deleted, responding with a 204 code.`); /* istanbul ignore next */cov_ratewsw8z.s[59]++;\n      res.writeHead(204); /* istanbul ignore next */cov_ratewsw8z.s[60]++;\n      res.end();\n    } else\n      {/* istanbul ignore next */cov_ratewsw8z.b[9][1]++;cov_ratewsw8z.s[61]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[8][1]++;cov_ratewsw8z.s[62]++;sendBadStatus(res, 400, `bad request, no id.`);}\n}","timestamp":"2017-12-07T23:33:07.407Z"}
{"level":"info","message":"Responding with a 404 code due to No bike with id \"hotdogs\"..","timestamp":"2017-12-07T23:33:07.407Z"}
{"level":"info","message":"Adding a POST url and callback.","timestamp":"2017-12-08T01:57:39.996Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-08T01:57:39.997Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[2]++;cov_ratewsw8z.s[17]++;\n  if (!(typeof req.body.make === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[18]++;\n    sendBadStatus(res, 400, `bad request, request property \"make\" must be of type string. You supplied type: ${typeof req.body.make}`); /* istanbul ignore next */cov_ratewsw8z.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[20]++;\n\n  if (!(typeof req.body.model === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, `bad request, request property \"model\" must be of type string. You supplied type: ${typeof req.body.model}`); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!(typeof req.body.year === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, `bad request, request property \"year\" must be of type number. You supplied type: ${typeof req.body.year}`); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!(typeof req.body.displacement === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, `bad request, request property \"displacement\" must be of type number. You supplied type: ${typeof req.body.displacement}`); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!(typeof req.body.color === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, `bad request, request property \"color\" must be of type string. You supplied type: ${typeof req.body.color}`); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[32]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[33]++;\n\n\n  storage.addTrialsBike(trialsBike).\n  then(() => {/* istanbul ignore next */cov_ratewsw8z.f[3]++;cov_ratewsw8z.s[34]++;\n    sendJSON(res, 200, trialsBike);\n  }).\n  catch(() => {/* istanbul ignore next */cov_ratewsw8z.f[4]++;cov_ratewsw8z.s[35]++;\n    sendBadStatus(res, 500, 'SERVER_ERROR');\n  });\n}","timestamp":"2017-12-08T01:57:39.997Z"}
{"level":"info","message":"Adding a GET url and callback.","timestamp":"2017-12-08T01:57:39.997Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-08T01:57:39.997Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[5]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[37]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[39]++;\n    storage.fetchTrialsBike(id).\n    then(trialsBike => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[40]++;\n      sendJSON(res, 200, trialsBike);\n    }).\n    catch(() => {/* istanbul ignore next */cov_ratewsw8z.f[7]++;cov_ratewsw8z.s[41]++;\n      sendBadStatus(res, 404, `No bike with id \"${id}\".`);\n    });\n  } else {/* istanbul ignore next */cov_ratewsw8z.b[5][1]++;cov_ratewsw8z.s[42]++;\n    storage.fetchAllTrialsBikes().\n    then(trialsBikes => {/* istanbul ignore next */cov_ratewsw8z.f[8]++;cov_ratewsw8z.s[43]++;\n      sendJSON(res, 200, trialsBikes);\n    });\n  }\n}","timestamp":"2017-12-08T01:57:39.997Z"}
{"level":"info","message":"Adding a DELETE url and callback.","timestamp":"2017-12-08T01:57:39.997Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-08T01:57:39.997Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[9]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[45]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[46]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[6][0]++;\n    let removedBike = /* istanbul ignore next */(cov_ratewsw8z.s[47]++, removeBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[48]++;\n    if (removedBike) {/* istanbul ignore next */cov_ratewsw8z.b[7][0]++;cov_ratewsw8z.s[49]++;\n      logger.log('info', `Bike deleted, responding with a 204 code.`); /* istanbul ignore next */cov_ratewsw8z.s[50]++;\n      res.writeHead(204); /* istanbul ignore next */cov_ratewsw8z.s[51]++;\n      res.end();\n    } else\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][1]++;cov_ratewsw8z.s[52]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[6][1]++;cov_ratewsw8z.s[53]++;sendBadStatus(res, 400, `bad request, no id.`);}\n}","timestamp":"2017-12-08T01:57:39.997Z"}
{"level":"info","message":"Server is up on port 3000.","timestamp":"2017-12-08T01:57:40.036Z"}
{"level":"verbose","message":"STORAGE_PATH doesn't exist, creating file /Users/robertreed/Documents/programming/cf/401/lab/08-09-vanilla-rest-server/lab-rob/db.json","timestamp":"2017-12-08T01:57:40.073Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-08T01:57:40.077Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-08T01:57:40.077Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-08T01:57:40.077Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-08T01:57:40.078Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[2]++;cov_ratewsw8z.s[17]++;\n  if (!(typeof req.body.make === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[18]++;\n    sendBadStatus(res, 400, `bad request, request property \"make\" must be of type string. You supplied type: ${typeof req.body.make}`); /* istanbul ignore next */cov_ratewsw8z.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[20]++;\n\n  if (!(typeof req.body.model === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, `bad request, request property \"model\" must be of type string. You supplied type: ${typeof req.body.model}`); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!(typeof req.body.year === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, `bad request, request property \"year\" must be of type number. You supplied type: ${typeof req.body.year}`); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!(typeof req.body.displacement === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, `bad request, request property \"displacement\" must be of type number. You supplied type: ${typeof req.body.displacement}`); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!(typeof req.body.color === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, `bad request, request property \"color\" must be of type string. You supplied type: ${typeof req.body.color}`); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[32]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[33]++;\n\n\n  storage.addTrialsBike(trialsBike).\n  then(() => {/* istanbul ignore next */cov_ratewsw8z.f[3]++;cov_ratewsw8z.s[34]++;\n    sendJSON(res, 200, trialsBike);\n  }).\n  catch(() => {/* istanbul ignore next */cov_ratewsw8z.f[4]++;cov_ratewsw8z.s[35]++;\n    sendBadStatus(res, 500, 'SERVER_ERROR');\n  });\n}","timestamp":"2017-12-08T01:57:40.078Z"}
{"level":"verbose","message":"STORAGE - adding the following note:","timestamp":"2017-12-08T01:57:40.079Z"}
{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"2bf2cff0-dbbb-11e7-a606-fdf376c27591","timestamp":"2017-12-08T01:57:40.079Z","level":"verbose","message":""}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T01:57:40.079Z"}
{"message":"Storage is not defined","stack":"ReferenceError: Storage is not defined\n    at Object.<anonymous>.storage.addTrialsBike.trialsBike [as addTrialsBike] (/Users/robertreed/Documents/programming/cf/401/lab/08-09-vanilla-rest-server/lab-rob/lib/storage.js:33:3)\n    at Object.<anonymous>.router.post (/Users/robertreed/Documents/programming/cf/401/lab/08-09-vanilla-rest-server/lab-rob/route/trials-bike-router.js:62:11)\n    at reqParser.parse.then.req (/Users/robertreed/Documents/programming/cf/401/lab/08-09-vanilla-rest-server/lab-rob/lib/router.js:49:14)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-08T01:57:40.079Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-08T01:57:40.085Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-08T01:57:40.085Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-08T01:57:40.086Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T01:57:40.086Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.req.on (/Users/robertreed/Documents/programming/cf/401/lab/08-09-vanilla-rest-server/lab-rob/lib/req-parser.js:25:27)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-08T01:57:40.086Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-08T01:57:40.089Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-08T01:57:40.090Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-08T01:57:40.090Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-08T01:57:40.090Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[2]++;cov_ratewsw8z.s[17]++;\n  if (!(typeof req.body.make === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[18]++;\n    sendBadStatus(res, 400, `bad request, request property \"make\" must be of type string. You supplied type: ${typeof req.body.make}`); /* istanbul ignore next */cov_ratewsw8z.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[20]++;\n\n  if (!(typeof req.body.model === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, `bad request, request property \"model\" must be of type string. You supplied type: ${typeof req.body.model}`); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!(typeof req.body.year === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, `bad request, request property \"year\" must be of type number. You supplied type: ${typeof req.body.year}`); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!(typeof req.body.displacement === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, `bad request, request property \"displacement\" must be of type number. You supplied type: ${typeof req.body.displacement}`); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!(typeof req.body.color === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, `bad request, request property \"color\" must be of type string. You supplied type: ${typeof req.body.color}`); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[32]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[33]++;\n\n\n  storage.addTrialsBike(trialsBike).\n  then(() => {/* istanbul ignore next */cov_ratewsw8z.f[3]++;cov_ratewsw8z.s[34]++;\n    sendJSON(res, 200, trialsBike);\n  }).\n  catch(() => {/* istanbul ignore next */cov_ratewsw8z.f[4]++;cov_ratewsw8z.s[35]++;\n    sendBadStatus(res, 500, 'SERVER_ERROR');\n  });\n}","timestamp":"2017-12-08T01:57:40.090Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, request property \"make\" must be of type string. You supplied type: undefined.","timestamp":"2017-12-08T01:57:40.090Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-08T01:57:40.092Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-08T01:57:40.092Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-08T01:57:40.092Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-08T01:57:40.092Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[2]++;cov_ratewsw8z.s[17]++;\n  if (!(typeof req.body.make === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[18]++;\n    sendBadStatus(res, 400, `bad request, request property \"make\" must be of type string. You supplied type: ${typeof req.body.make}`); /* istanbul ignore next */cov_ratewsw8z.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[20]++;\n\n  if (!(typeof req.body.model === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, `bad request, request property \"model\" must be of type string. You supplied type: ${typeof req.body.model}`); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!(typeof req.body.year === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, `bad request, request property \"year\" must be of type number. You supplied type: ${typeof req.body.year}`); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!(typeof req.body.displacement === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, `bad request, request property \"displacement\" must be of type number. You supplied type: ${typeof req.body.displacement}`); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!(typeof req.body.color === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, `bad request, request property \"color\" must be of type string. You supplied type: ${typeof req.body.color}`); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[32]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[33]++;\n\n\n  storage.addTrialsBike(trialsBike).\n  then(() => {/* istanbul ignore next */cov_ratewsw8z.f[3]++;cov_ratewsw8z.s[34]++;\n    sendJSON(res, 200, trialsBike);\n  }).\n  catch(() => {/* istanbul ignore next */cov_ratewsw8z.f[4]++;cov_ratewsw8z.s[35]++;\n    sendBadStatus(res, 500, 'SERVER_ERROR');\n  });\n}","timestamp":"2017-12-08T01:57:40.092Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, request property \"model\" must be of type string. You supplied type: undefined.","timestamp":"2017-12-08T01:57:40.092Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-08T01:57:40.094Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-08T01:57:40.094Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-08T01:57:40.094Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-08T01:57:40.094Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[2]++;cov_ratewsw8z.s[17]++;\n  if (!(typeof req.body.make === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[18]++;\n    sendBadStatus(res, 400, `bad request, request property \"make\" must be of type string. You supplied type: ${typeof req.body.make}`); /* istanbul ignore next */cov_ratewsw8z.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[20]++;\n\n  if (!(typeof req.body.model === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, `bad request, request property \"model\" must be of type string. You supplied type: ${typeof req.body.model}`); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!(typeof req.body.year === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, `bad request, request property \"year\" must be of type number. You supplied type: ${typeof req.body.year}`); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!(typeof req.body.displacement === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, `bad request, request property \"displacement\" must be of type number. You supplied type: ${typeof req.body.displacement}`); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!(typeof req.body.color === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, `bad request, request property \"color\" must be of type string. You supplied type: ${typeof req.body.color}`); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[32]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[33]++;\n\n\n  storage.addTrialsBike(trialsBike).\n  then(() => {/* istanbul ignore next */cov_ratewsw8z.f[3]++;cov_ratewsw8z.s[34]++;\n    sendJSON(res, 200, trialsBike);\n  }).\n  catch(() => {/* istanbul ignore next */cov_ratewsw8z.f[4]++;cov_ratewsw8z.s[35]++;\n    sendBadStatus(res, 500, 'SERVER_ERROR');\n  });\n}","timestamp":"2017-12-08T01:57:40.094Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, request property \"year\" must be of type number. You supplied type: boolean.","timestamp":"2017-12-08T01:57:40.094Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-08T01:57:40.095Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-08T01:57:40.095Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-08T01:57:40.096Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-08T01:57:40.096Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[2]++;cov_ratewsw8z.s[17]++;\n  if (!(typeof req.body.make === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[18]++;\n    sendBadStatus(res, 400, `bad request, request property \"make\" must be of type string. You supplied type: ${typeof req.body.make}`); /* istanbul ignore next */cov_ratewsw8z.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[20]++;\n\n  if (!(typeof req.body.model === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, `bad request, request property \"model\" must be of type string. You supplied type: ${typeof req.body.model}`); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!(typeof req.body.year === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, `bad request, request property \"year\" must be of type number. You supplied type: ${typeof req.body.year}`); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!(typeof req.body.displacement === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, `bad request, request property \"displacement\" must be of type number. You supplied type: ${typeof req.body.displacement}`); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!(typeof req.body.color === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, `bad request, request property \"color\" must be of type string. You supplied type: ${typeof req.body.color}`); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[32]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[33]++;\n\n\n  storage.addTrialsBike(trialsBike).\n  then(() => {/* istanbul ignore next */cov_ratewsw8z.f[3]++;cov_ratewsw8z.s[34]++;\n    sendJSON(res, 200, trialsBike);\n  }).\n  catch(() => {/* istanbul ignore next */cov_ratewsw8z.f[4]++;cov_ratewsw8z.s[35]++;\n    sendBadStatus(res, 500, 'SERVER_ERROR');\n  });\n}","timestamp":"2017-12-08T01:57:40.096Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, request property \"displacement\" must be of type number. You supplied type: object.","timestamp":"2017-12-08T01:57:40.096Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-08T01:57:40.097Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-08T01:57:40.097Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-08T01:57:40.097Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-08T01:57:40.097Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[2]++;cov_ratewsw8z.s[17]++;\n  if (!(typeof req.body.make === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[18]++;\n    sendBadStatus(res, 400, `bad request, request property \"make\" must be of type string. You supplied type: ${typeof req.body.make}`); /* istanbul ignore next */cov_ratewsw8z.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[20]++;\n\n  if (!(typeof req.body.model === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, `bad request, request property \"model\" must be of type string. You supplied type: ${typeof req.body.model}`); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!(typeof req.body.year === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, `bad request, request property \"year\" must be of type number. You supplied type: ${typeof req.body.year}`); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!(typeof req.body.displacement === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, `bad request, request property \"displacement\" must be of type number. You supplied type: ${typeof req.body.displacement}`); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!(typeof req.body.color === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, `bad request, request property \"color\" must be of type string. You supplied type: ${typeof req.body.color}`); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[32]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[33]++;\n\n\n  storage.addTrialsBike(trialsBike).\n  then(() => {/* istanbul ignore next */cov_ratewsw8z.f[3]++;cov_ratewsw8z.s[34]++;\n    sendJSON(res, 200, trialsBike);\n  }).\n  catch(() => {/* istanbul ignore next */cov_ratewsw8z.f[4]++;cov_ratewsw8z.s[35]++;\n    sendBadStatus(res, 500, 'SERVER_ERROR');\n  });\n}","timestamp":"2017-12-08T01:57:40.097Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, request property \"color\" must be of type string. You supplied type: number.","timestamp":"2017-12-08T01:57:40.098Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-08T01:57:40.099Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-08T01:57:40.099Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-08T01:57:40.099Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-08T01:57:40.099Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[5]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[37]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[39]++;\n    storage.fetchTrialsBike(id).\n    then(trialsBike => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[40]++;\n      sendJSON(res, 200, trialsBike);\n    }).\n    catch(() => {/* istanbul ignore next */cov_ratewsw8z.f[7]++;cov_ratewsw8z.s[41]++;\n      sendBadStatus(res, 404, `No bike with id \"${id}\".`);\n    });\n  } else {/* istanbul ignore next */cov_ratewsw8z.b[5][1]++;cov_ratewsw8z.s[42]++;\n    storage.fetchAllTrialsBikes().\n    then(trialsBikes => {/* istanbul ignore next */cov_ratewsw8z.f[8]++;cov_ratewsw8z.s[43]++;\n      sendJSON(res, 200, trialsBikes);\n    });\n  }\n}","timestamp":"2017-12-08T01:57:40.099Z"}
{"level":"verbose","message":"STORAGE - Fetching array from database","timestamp":"2017-12-08T01:57:40.099Z"}
{"level":"info","message":"Responding with a 200 code and the following data:","timestamp":"2017-12-08T01:57:40.100Z"}
[]
{"level":"info","message":"Routing a request.","timestamp":"2017-12-08T01:57:40.104Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes?id=undefined\"","timestamp":"2017-12-08T01:57:40.104Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=undefined\",\"query\":{\"id\":\"undefined\"},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes?id=undefined\",\"href\":\"/api/trials-bikes?id=undefined\"}","timestamp":"2017-12-08T01:57:40.104Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-08T01:57:40.104Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[5]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[37]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[39]++;\n    storage.fetchTrialsBike(id).\n    then(trialsBike => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[40]++;\n      sendJSON(res, 200, trialsBike);\n    }).\n    catch(() => {/* istanbul ignore next */cov_ratewsw8z.f[7]++;cov_ratewsw8z.s[41]++;\n      sendBadStatus(res, 404, `No bike with id \"${id}\".`);\n    });\n  } else {/* istanbul ignore next */cov_ratewsw8z.b[5][1]++;cov_ratewsw8z.s[42]++;\n    storage.fetchAllTrialsBikes().\n    then(trialsBikes => {/* istanbul ignore next */cov_ratewsw8z.f[8]++;cov_ratewsw8z.s[43]++;\n      sendJSON(res, 200, trialsBikes);\n    });\n  }\n}","timestamp":"2017-12-08T01:57:40.104Z"}
{"level":"verbose","message":"STORAGE - fetching trials bike with id undefined.","timestamp":"2017-12-08T01:57:40.104Z"}
{"level":"verbose","message":"STORAGE - Fetching array from database","timestamp":"2017-12-08T01:57:40.104Z"}
{"level":"info","message":"Responding with a 404 code due to No bike with id \"undefined\"..","timestamp":"2017-12-08T01:57:40.105Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-08T01:57:40.106Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes?id=hamburger\"","timestamp":"2017-12-08T01:57:40.106Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=hamburger\",\"query\":{\"id\":\"hamburger\"},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes?id=hamburger\",\"href\":\"/api/trials-bikes?id=hamburger\"}","timestamp":"2017-12-08T01:57:40.106Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-08T01:57:40.106Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[5]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[37]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[39]++;\n    storage.fetchTrialsBike(id).\n    then(trialsBike => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[40]++;\n      sendJSON(res, 200, trialsBike);\n    }).\n    catch(() => {/* istanbul ignore next */cov_ratewsw8z.f[7]++;cov_ratewsw8z.s[41]++;\n      sendBadStatus(res, 404, `No bike with id \"${id}\".`);\n    });\n  } else {/* istanbul ignore next */cov_ratewsw8z.b[5][1]++;cov_ratewsw8z.s[42]++;\n    storage.fetchAllTrialsBikes().\n    then(trialsBikes => {/* istanbul ignore next */cov_ratewsw8z.f[8]++;cov_ratewsw8z.s[43]++;\n      sendJSON(res, 200, trialsBikes);\n    });\n  }\n}","timestamp":"2017-12-08T01:57:40.106Z"}
{"level":"verbose","message":"STORAGE - fetching trials bike with id hamburger.","timestamp":"2017-12-08T01:57:40.106Z"}
{"level":"verbose","message":"STORAGE - Fetching array from database","timestamp":"2017-12-08T01:57:40.107Z"}
{"level":"info","message":"Responding with a 404 code due to No bike with id \"hamburger\"..","timestamp":"2017-12-08T01:57:40.107Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-08T01:57:40.109Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes?id=undefined\"","timestamp":"2017-12-08T01:57:40.109Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=undefined\",\"query\":{\"id\":\"undefined\"},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes?id=undefined\",\"href\":\"/api/trials-bikes?id=undefined\"}","timestamp":"2017-12-08T01:57:40.109Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-08T01:57:40.109Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[9]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[45]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[46]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[6][0]++;\n    let removedBike = /* istanbul ignore next */(cov_ratewsw8z.s[47]++, removeBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[48]++;\n    if (removedBike) {/* istanbul ignore next */cov_ratewsw8z.b[7][0]++;cov_ratewsw8z.s[49]++;\n      logger.log('info', `Bike deleted, responding with a 204 code.`); /* istanbul ignore next */cov_ratewsw8z.s[50]++;\n      res.writeHead(204); /* istanbul ignore next */cov_ratewsw8z.s[51]++;\n      res.end();\n    } else\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][1]++;cov_ratewsw8z.s[52]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[6][1]++;cov_ratewsw8z.s[53]++;sendBadStatus(res, 400, `bad request, no id.`);}\n}","timestamp":"2017-12-08T01:57:40.109Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T01:57:40.109Z"}
{"message":"removeBikeById is not defined","stack":"ReferenceError: removeBikeById is not defined\n    at Object.<anonymous>.router.delete (/Users/robertreed/Documents/programming/cf/401/lab/08-09-vanilla-rest-server/lab-rob/route/trials-bike-router.js:92:69)\n    at reqParser.parse.then.req (/Users/robertreed/Documents/programming/cf/401/lab/08-09-vanilla-rest-server/lab-rob/lib/router.js:49:14)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-08T01:57:40.109Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-08T01:57:40.111Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-08T01:57:40.111Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-08T01:57:40.111Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-08T01:57:40.111Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[9]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[45]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[46]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[6][0]++;\n    let removedBike = /* istanbul ignore next */(cov_ratewsw8z.s[47]++, removeBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[48]++;\n    if (removedBike) {/* istanbul ignore next */cov_ratewsw8z.b[7][0]++;cov_ratewsw8z.s[49]++;\n      logger.log('info', `Bike deleted, responding with a 204 code.`); /* istanbul ignore next */cov_ratewsw8z.s[50]++;\n      res.writeHead(204); /* istanbul ignore next */cov_ratewsw8z.s[51]++;\n      res.end();\n    } else\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][1]++;cov_ratewsw8z.s[52]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[6][1]++;cov_ratewsw8z.s[53]++;sendBadStatus(res, 400, `bad request, no id.`);}\n}","timestamp":"2017-12-08T01:57:40.111Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, no id..","timestamp":"2017-12-08T01:57:40.111Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-08T01:57:40.112Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes?id=hotdogs\"","timestamp":"2017-12-08T01:57:40.112Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=hotdogs\",\"query\":{\"id\":\"hotdogs\"},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes?id=hotdogs\",\"href\":\"/api/trials-bikes?id=hotdogs\"}","timestamp":"2017-12-08T01:57:40.113Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-08T01:57:40.113Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[9]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[45]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[46]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[6][0]++;\n    let removedBike = /* istanbul ignore next */(cov_ratewsw8z.s[47]++, removeBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[48]++;\n    if (removedBike) {/* istanbul ignore next */cov_ratewsw8z.b[7][0]++;cov_ratewsw8z.s[49]++;\n      logger.log('info', `Bike deleted, responding with a 204 code.`); /* istanbul ignore next */cov_ratewsw8z.s[50]++;\n      res.writeHead(204); /* istanbul ignore next */cov_ratewsw8z.s[51]++;\n      res.end();\n    } else\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][1]++;cov_ratewsw8z.s[52]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[6][1]++;cov_ratewsw8z.s[53]++;sendBadStatus(res, 400, `bad request, no id.`);}\n}","timestamp":"2017-12-08T01:57:40.113Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T01:57:40.113Z"}
{"message":"removeBikeById is not defined","stack":"ReferenceError: removeBikeById is not defined\n    at Object.<anonymous>.router.delete (/Users/robertreed/Documents/programming/cf/401/lab/08-09-vanilla-rest-server/lab-rob/route/trials-bike-router.js:92:69)\n    at reqParser.parse.then.req (/Users/robertreed/Documents/programming/cf/401/lab/08-09-vanilla-rest-server/lab-rob/lib/router.js:49:14)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-08T01:57:40.113Z"}
{"level":"info","message":"Adding a POST url and callback.","timestamp":"2017-12-08T02:01:02.007Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-08T02:01:02.008Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[2]++;cov_ratewsw8z.s[17]++;\n  if (!(typeof req.body.make === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[18]++;\n    sendBadStatus(res, 400, `bad request, request property \"make\" must be of type string. You supplied type: ${typeof req.body.make}`); /* istanbul ignore next */cov_ratewsw8z.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[20]++;\n\n  if (!(typeof req.body.model === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, `bad request, request property \"model\" must be of type string. You supplied type: ${typeof req.body.model}`); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!(typeof req.body.year === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, `bad request, request property \"year\" must be of type number. You supplied type: ${typeof req.body.year}`); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!(typeof req.body.displacement === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, `bad request, request property \"displacement\" must be of type number. You supplied type: ${typeof req.body.displacement}`); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!(typeof req.body.color === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, `bad request, request property \"color\" must be of type string. You supplied type: ${typeof req.body.color}`); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[32]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[33]++;\n\n\n  storage.addTrialsBike(trialsBike).\n  then(() => {/* istanbul ignore next */cov_ratewsw8z.f[3]++;cov_ratewsw8z.s[34]++;\n    sendJSON(res, 200, trialsBike);\n  }).\n  catch(() => {/* istanbul ignore next */cov_ratewsw8z.f[4]++;cov_ratewsw8z.s[35]++;\n    sendBadStatus(res, 500, 'SERVER_ERROR');\n  });\n}","timestamp":"2017-12-08T02:01:02.008Z"}
{"level":"info","message":"Adding a GET url and callback.","timestamp":"2017-12-08T02:01:02.008Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-08T02:01:02.008Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[5]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[37]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[39]++;\n    storage.fetchTrialsBike(id).\n    then(trialsBike => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[40]++;\n      sendJSON(res, 200, trialsBike);\n    }).\n    catch(() => {/* istanbul ignore next */cov_ratewsw8z.f[7]++;cov_ratewsw8z.s[41]++;\n      sendBadStatus(res, 404, `No bike with id \"${id}\".`);\n    });\n  } else {/* istanbul ignore next */cov_ratewsw8z.b[5][1]++;cov_ratewsw8z.s[42]++;\n    storage.fetchAllTrialsBikes().\n    then(trialsBikes => {/* istanbul ignore next */cov_ratewsw8z.f[8]++;cov_ratewsw8z.s[43]++;\n      sendJSON(res, 200, trialsBikes);\n    });\n  }\n}","timestamp":"2017-12-08T02:01:02.008Z"}
{"level":"info","message":"Adding a DELETE url and callback.","timestamp":"2017-12-08T02:01:02.008Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-08T02:01:02.008Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[9]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[45]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[46]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[6][0]++;\n    let removedBike = /* istanbul ignore next */(cov_ratewsw8z.s[47]++, removeBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[48]++;\n    if (removedBike) {/* istanbul ignore next */cov_ratewsw8z.b[7][0]++;cov_ratewsw8z.s[49]++;\n      logger.log('info', `Bike deleted, responding with a 204 code.`); /* istanbul ignore next */cov_ratewsw8z.s[50]++;\n      res.writeHead(204); /* istanbul ignore next */cov_ratewsw8z.s[51]++;\n      res.end();\n    } else\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][1]++;cov_ratewsw8z.s[52]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[6][1]++;cov_ratewsw8z.s[53]++;sendBadStatus(res, 400, `bad request, no id.`);}\n}","timestamp":"2017-12-08T02:01:02.008Z"}
{"level":"info","message":"Server is up on port 3000.","timestamp":"2017-12-08T02:01:02.046Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-08T02:01:02.086Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-08T02:01:02.086Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-08T02:01:02.086Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-08T02:01:02.087Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[2]++;cov_ratewsw8z.s[17]++;\n  if (!(typeof req.body.make === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[18]++;\n    sendBadStatus(res, 400, `bad request, request property \"make\" must be of type string. You supplied type: ${typeof req.body.make}`); /* istanbul ignore next */cov_ratewsw8z.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[20]++;\n\n  if (!(typeof req.body.model === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, `bad request, request property \"model\" must be of type string. You supplied type: ${typeof req.body.model}`); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!(typeof req.body.year === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, `bad request, request property \"year\" must be of type number. You supplied type: ${typeof req.body.year}`); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!(typeof req.body.displacement === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, `bad request, request property \"displacement\" must be of type number. You supplied type: ${typeof req.body.displacement}`); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!(typeof req.body.color === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, `bad request, request property \"color\" must be of type string. You supplied type: ${typeof req.body.color}`); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[32]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[33]++;\n\n\n  storage.addTrialsBike(trialsBike).\n  then(() => {/* istanbul ignore next */cov_ratewsw8z.f[3]++;cov_ratewsw8z.s[34]++;\n    sendJSON(res, 200, trialsBike);\n  }).\n  catch(() => {/* istanbul ignore next */cov_ratewsw8z.f[4]++;cov_ratewsw8z.s[35]++;\n    sendBadStatus(res, 500, 'SERVER_ERROR');\n  });\n}","timestamp":"2017-12-08T02:01:02.087Z"}
{"level":"verbose","message":"STORAGE - adding the following note:","timestamp":"2017-12-08T02:01:02.087Z"}
{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"a45ac970-dbbb-11e7-b86f-79cbd2f92c7b","timestamp":"2017-12-08T02:01:02.087Z","level":"verbose","message":""}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T02:01:02.087Z"}
{"message":"Storage is not defined","stack":"ReferenceError: Storage is not defined\n    at Object.<anonymous>.storage.addTrialsBike.trialsBike [as addTrialsBike] (/Users/robertreed/Documents/programming/cf/401/lab/08-09-vanilla-rest-server/lab-rob/lib/storage.js:33:3)\n    at Object.<anonymous>.router.post (/Users/robertreed/Documents/programming/cf/401/lab/08-09-vanilla-rest-server/lab-rob/route/trials-bike-router.js:62:11)\n    at reqParser.parse.then.req (/Users/robertreed/Documents/programming/cf/401/lab/08-09-vanilla-rest-server/lab-rob/lib/router.js:49:14)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-08T02:01:02.088Z"}
{"level":"info","message":"Adding a POST url and callback.","timestamp":"2017-12-08T02:05:15.032Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-08T02:05:15.033Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[2]++;cov_ratewsw8z.s[17]++;\n  if (!(typeof req.body.make === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[18]++;\n    sendBadStatus(res, 400, `bad request, request property \"make\" must be of type string. You supplied type: ${typeof req.body.make}`); /* istanbul ignore next */cov_ratewsw8z.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[20]++;\n\n  if (!(typeof req.body.model === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, `bad request, request property \"model\" must be of type string. You supplied type: ${typeof req.body.model}`); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!(typeof req.body.year === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, `bad request, request property \"year\" must be of type number. You supplied type: ${typeof req.body.year}`); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!(typeof req.body.displacement === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, `bad request, request property \"displacement\" must be of type number. You supplied type: ${typeof req.body.displacement}`); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!(typeof req.body.color === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, `bad request, request property \"color\" must be of type string. You supplied type: ${typeof req.body.color}`); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[32]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[33]++;\n\n\n  storage.addTrialsBike(trialsBike).\n  then(() => {/* istanbul ignore next */cov_ratewsw8z.f[3]++;cov_ratewsw8z.s[34]++;\n    sendJSON(res, 200, trialsBike);\n  }).\n  catch(() => {/* istanbul ignore next */cov_ratewsw8z.f[4]++;cov_ratewsw8z.s[35]++;\n    sendBadStatus(res, 500, 'SERVER_ERROR');\n  });\n}","timestamp":"2017-12-08T02:05:15.033Z"}
{"level":"info","message":"Adding a GET url and callback.","timestamp":"2017-12-08T02:05:15.033Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-08T02:05:15.033Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[5]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[37]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[39]++;\n    storage.fetchTrialsBike(id).\n    then(trialsBike => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[40]++;\n      sendJSON(res, 200, trialsBike);\n    }).\n    catch(() => {/* istanbul ignore next */cov_ratewsw8z.f[7]++;cov_ratewsw8z.s[41]++;\n      sendBadStatus(res, 404, `No bike with id \"${id}\".`);\n    });\n  } else {/* istanbul ignore next */cov_ratewsw8z.b[5][1]++;cov_ratewsw8z.s[42]++;\n    storage.fetchAllTrialsBikes().\n    then(trialsBikes => {/* istanbul ignore next */cov_ratewsw8z.f[8]++;cov_ratewsw8z.s[43]++;\n      sendJSON(res, 200, trialsBikes);\n    });\n  }\n}","timestamp":"2017-12-08T02:05:15.033Z"}
{"level":"info","message":"Adding a DELETE url and callback.","timestamp":"2017-12-08T02:05:15.033Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-08T02:05:15.033Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[9]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[45]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[46]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[6][0]++;\n    let removedBike = /* istanbul ignore next */(cov_ratewsw8z.s[47]++, removeBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[48]++;\n    if (removedBike) {/* istanbul ignore next */cov_ratewsw8z.b[7][0]++;cov_ratewsw8z.s[49]++;\n      logger.log('info', `Bike deleted, responding with a 204 code.`); /* istanbul ignore next */cov_ratewsw8z.s[50]++;\n      res.writeHead(204); /* istanbul ignore next */cov_ratewsw8z.s[51]++;\n      res.end();\n    } else\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][1]++;cov_ratewsw8z.s[52]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[6][1]++;cov_ratewsw8z.s[53]++;sendBadStatus(res, 400, `bad request, no id.`);}\n}","timestamp":"2017-12-08T02:05:15.033Z"}
{"level":"info","message":"Server is up on port 3000.","timestamp":"2017-12-08T02:05:15.070Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-08T02:05:15.082Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-08T02:05:15.082Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-08T02:05:15.082Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-08T02:05:15.083Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[2]++;cov_ratewsw8z.s[17]++;\n  if (!(typeof req.body.make === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[18]++;\n    sendBadStatus(res, 400, `bad request, request property \"make\" must be of type string. You supplied type: ${typeof req.body.make}`); /* istanbul ignore next */cov_ratewsw8z.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[20]++;\n\n  if (!(typeof req.body.model === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, `bad request, request property \"model\" must be of type string. You supplied type: ${typeof req.body.model}`); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!(typeof req.body.year === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, `bad request, request property \"year\" must be of type number. You supplied type: ${typeof req.body.year}`); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!(typeof req.body.displacement === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, `bad request, request property \"displacement\" must be of type number. You supplied type: ${typeof req.body.displacement}`); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!(typeof req.body.color === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, `bad request, request property \"color\" must be of type string. You supplied type: ${typeof req.body.color}`); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[32]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[33]++;\n\n\n  storage.addTrialsBike(trialsBike).\n  then(() => {/* istanbul ignore next */cov_ratewsw8z.f[3]++;cov_ratewsw8z.s[34]++;\n    sendJSON(res, 200, trialsBike);\n  }).\n  catch(() => {/* istanbul ignore next */cov_ratewsw8z.f[4]++;cov_ratewsw8z.s[35]++;\n    sendBadStatus(res, 500, 'SERVER_ERROR');\n  });\n}","timestamp":"2017-12-08T02:05:15.083Z"}
{"level":"verbose","message":"STORAGE - adding the following note:","timestamp":"2017-12-08T02:05:15.083Z"}
{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"3b26e9b0-dbbc-11e7-8ab5-15dc188b869a","timestamp":"2017-12-08T02:05:15.083Z","level":"verbose","message":""}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T02:05:15.084Z"}
{"message":"Storage is not defined","stack":"ReferenceError: Storage is not defined\n    at Object.<anonymous>.storage.addTrialsBike.trialsBike [as addTrialsBike] (/Users/robertreed/Documents/programming/cf/401/lab/08-09-vanilla-rest-server/lab-rob/lib/storage.js:33:3)\n    at Object.<anonymous>.router.post (/Users/robertreed/Documents/programming/cf/401/lab/08-09-vanilla-rest-server/lab-rob/route/trials-bike-router.js:62:11)\n    at reqParser.parse.then.req (/Users/robertreed/Documents/programming/cf/401/lab/08-09-vanilla-rest-server/lab-rob/lib/router.js:49:14)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-08T02:05:15.084Z"}
{"level":"info","message":"Adding a POST url and callback.","timestamp":"2017-12-08T02:12:06.276Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-08T02:12:06.276Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[2]++;cov_ratewsw8z.s[17]++;\n  if (!(typeof req.body.make === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[18]++;\n    sendBadStatus(res, 400, `bad request, request property \"make\" must be of type string. You supplied type: ${typeof req.body.make}`); /* istanbul ignore next */cov_ratewsw8z.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[20]++;\n\n  if (!(typeof req.body.model === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, `bad request, request property \"model\" must be of type string. You supplied type: ${typeof req.body.model}`); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!(typeof req.body.year === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, `bad request, request property \"year\" must be of type number. You supplied type: ${typeof req.body.year}`); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!(typeof req.body.displacement === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, `bad request, request property \"displacement\" must be of type number. You supplied type: ${typeof req.body.displacement}`); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!(typeof req.body.color === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, `bad request, request property \"color\" must be of type string. You supplied type: ${typeof req.body.color}`); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[32]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[33]++;\n\n\n  storage.addTrialsBike(trialsBike).\n  then(() => {/* istanbul ignore next */cov_ratewsw8z.f[3]++;cov_ratewsw8z.s[34]++;\n    sendJSON(res, 200, trialsBike);\n  }).\n  catch(() => {/* istanbul ignore next */cov_ratewsw8z.f[4]++;cov_ratewsw8z.s[35]++;\n    sendBadStatus(res, 500, 'SERVER_ERROR');\n  });\n}","timestamp":"2017-12-08T02:12:06.276Z"}
{"level":"info","message":"Adding a GET url and callback.","timestamp":"2017-12-08T02:12:06.276Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-08T02:12:06.276Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[5]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[37]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[39]++;\n    storage.fetchTrialsBike(id).\n    then(trialsBike => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[40]++;\n      sendJSON(res, 200, trialsBike);\n    }).\n    catch(() => {/* istanbul ignore next */cov_ratewsw8z.f[7]++;cov_ratewsw8z.s[41]++;\n      sendBadStatus(res, 404, `No bike with id \"${id}\".`);\n    });\n  } else {/* istanbul ignore next */cov_ratewsw8z.b[5][1]++;cov_ratewsw8z.s[42]++;\n    storage.fetchAllTrialsBikes().\n    then(trialsBikes => {/* istanbul ignore next */cov_ratewsw8z.f[8]++;cov_ratewsw8z.s[43]++;\n      sendJSON(res, 200, trialsBikes);\n    });\n  }\n}","timestamp":"2017-12-08T02:12:06.276Z"}
{"level":"info","message":"Adding a DELETE url and callback.","timestamp":"2017-12-08T02:12:06.276Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-08T02:12:06.276Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[9]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[45]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[46]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[6][0]++;\n    let removedBike = /* istanbul ignore next */(cov_ratewsw8z.s[47]++, removeBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[48]++;\n    if (removedBike) {/* istanbul ignore next */cov_ratewsw8z.b[7][0]++;cov_ratewsw8z.s[49]++;\n      logger.log('info', `Bike deleted, responding with a 204 code.`); /* istanbul ignore next */cov_ratewsw8z.s[50]++;\n      res.writeHead(204); /* istanbul ignore next */cov_ratewsw8z.s[51]++;\n      res.end();\n    } else\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][1]++;cov_ratewsw8z.s[52]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[6][1]++;cov_ratewsw8z.s[53]++;sendBadStatus(res, 400, `bad request, no id.`);}\n}","timestamp":"2017-12-08T02:12:06.276Z"}
{"level":"info","message":"Server is up on port 3000.","timestamp":"2017-12-08T02:12:06.310Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-08T02:12:06.351Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-08T02:12:06.351Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-08T02:12:06.351Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-08T02:12:06.352Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[2]++;cov_ratewsw8z.s[17]++;\n  if (!(typeof req.body.make === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[18]++;\n    sendBadStatus(res, 400, `bad request, request property \"make\" must be of type string. You supplied type: ${typeof req.body.make}`); /* istanbul ignore next */cov_ratewsw8z.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[20]++;\n\n  if (!(typeof req.body.model === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, `bad request, request property \"model\" must be of type string. You supplied type: ${typeof req.body.model}`); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!(typeof req.body.year === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, `bad request, request property \"year\" must be of type number. You supplied type: ${typeof req.body.year}`); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!(typeof req.body.displacement === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, `bad request, request property \"displacement\" must be of type number. You supplied type: ${typeof req.body.displacement}`); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!(typeof req.body.color === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, `bad request, request property \"color\" must be of type string. You supplied type: ${typeof req.body.color}`); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[32]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[33]++;\n\n\n  storage.addTrialsBike(trialsBike).\n  then(() => {/* istanbul ignore next */cov_ratewsw8z.f[3]++;cov_ratewsw8z.s[34]++;\n    sendJSON(res, 200, trialsBike);\n  }).\n  catch(() => {/* istanbul ignore next */cov_ratewsw8z.f[4]++;cov_ratewsw8z.s[35]++;\n    sendBadStatus(res, 500, 'SERVER_ERROR');\n  });\n}","timestamp":"2017-12-08T02:12:06.352Z"}
{"level":"verbose","message":"STORAGE - adding the following bike:","timestamp":"2017-12-08T02:12:06.352Z"}
{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"30499500-dbbd-11e7-afeb-8dad6ed2e683","timestamp":"2017-12-08T02:12:06.352Z","level":"verbose","message":""}
{"level":"verbose","message":"STORAGE - Fetching array from database","timestamp":"2017-12-08T02:12:06.352Z"}
{"level":"info","message":"Responding with a 200 code and the following data:","timestamp":"2017-12-08T02:12:06.355Z"}
{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"30499500-dbbd-11e7-afeb-8dad6ed2e683","timestamp":"2017-12-08T02:12:06.355Z","level":"info","message":""}
{"level":"info","message":"Adding a POST url and callback.","timestamp":"2017-12-08T02:13:19.255Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-08T02:13:19.256Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[2]++;cov_ratewsw8z.s[17]++;\n  if (!(typeof req.body.make === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[18]++;\n    sendBadStatus(res, 400, `bad request, request property \"make\" must be of type string. You supplied type: ${typeof req.body.make}`); /* istanbul ignore next */cov_ratewsw8z.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[20]++;\n\n  if (!(typeof req.body.model === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, `bad request, request property \"model\" must be of type string. You supplied type: ${typeof req.body.model}`); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!(typeof req.body.year === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, `bad request, request property \"year\" must be of type number. You supplied type: ${typeof req.body.year}`); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!(typeof req.body.displacement === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, `bad request, request property \"displacement\" must be of type number. You supplied type: ${typeof req.body.displacement}`); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!(typeof req.body.color === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, `bad request, request property \"color\" must be of type string. You supplied type: ${typeof req.body.color}`); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[32]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[33]++;\n\n\n  storage.addTrialsBike(trialsBike).\n  then(() => {/* istanbul ignore next */cov_ratewsw8z.f[3]++;cov_ratewsw8z.s[34]++;\n    sendJSON(res, 200, trialsBike);\n  }).\n  catch(() => {/* istanbul ignore next */cov_ratewsw8z.f[4]++;cov_ratewsw8z.s[35]++;\n    sendBadStatus(res, 500, 'SERVER_ERROR');\n  });\n}","timestamp":"2017-12-08T02:13:19.256Z"}
{"level":"info","message":"Adding a GET url and callback.","timestamp":"2017-12-08T02:13:19.256Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-08T02:13:19.256Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[5]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[37]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[39]++;\n    storage.fetchTrialsBike(id).\n    then(trialsBike => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[40]++;\n      sendJSON(res, 200, trialsBike);\n    }).\n    catch(() => {/* istanbul ignore next */cov_ratewsw8z.f[7]++;cov_ratewsw8z.s[41]++;\n      sendBadStatus(res, 404, `No bike with id \"${id}\".`);\n    });\n  } else {/* istanbul ignore next */cov_ratewsw8z.b[5][1]++;cov_ratewsw8z.s[42]++;\n    storage.fetchAllTrialsBikes().\n    then(trialsBikes => {/* istanbul ignore next */cov_ratewsw8z.f[8]++;cov_ratewsw8z.s[43]++;\n      sendJSON(res, 200, trialsBikes);\n    });\n  }\n}","timestamp":"2017-12-08T02:13:19.256Z"}
{"level":"info","message":"Adding a DELETE url and callback.","timestamp":"2017-12-08T02:13:19.256Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-08T02:13:19.256Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[9]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[45]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[46]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[6][0]++;\n    let removedBike = /* istanbul ignore next */(cov_ratewsw8z.s[47]++, removeBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[48]++;\n    if (removedBike) {/* istanbul ignore next */cov_ratewsw8z.b[7][0]++;cov_ratewsw8z.s[49]++;\n      logger.log('info', `Bike deleted, responding with a 204 code.`); /* istanbul ignore next */cov_ratewsw8z.s[50]++;\n      res.writeHead(204); /* istanbul ignore next */cov_ratewsw8z.s[51]++;\n      res.end();\n    } else\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][1]++;cov_ratewsw8z.s[52]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[6][1]++;cov_ratewsw8z.s[53]++;sendBadStatus(res, 400, `bad request, no id.`);}\n}","timestamp":"2017-12-08T02:13:19.256Z"}
{"level":"info","message":"Server is up on port 3000.","timestamp":"2017-12-08T02:13:19.291Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-08T02:13:19.302Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-08T02:13:19.303Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-08T02:13:19.303Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-08T02:13:19.303Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[2]++;cov_ratewsw8z.s[17]++;\n  if (!(typeof req.body.make === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[18]++;\n    sendBadStatus(res, 400, `bad request, request property \"make\" must be of type string. You supplied type: ${typeof req.body.make}`); /* istanbul ignore next */cov_ratewsw8z.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[20]++;\n\n  if (!(typeof req.body.model === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, `bad request, request property \"model\" must be of type string. You supplied type: ${typeof req.body.model}`); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!(typeof req.body.year === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, `bad request, request property \"year\" must be of type number. You supplied type: ${typeof req.body.year}`); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!(typeof req.body.displacement === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, `bad request, request property \"displacement\" must be of type number. You supplied type: ${typeof req.body.displacement}`); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!(typeof req.body.color === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, `bad request, request property \"color\" must be of type string. You supplied type: ${typeof req.body.color}`); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[32]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[33]++;\n\n\n  storage.addTrialsBike(trialsBike).\n  then(() => {/* istanbul ignore next */cov_ratewsw8z.f[3]++;cov_ratewsw8z.s[34]++;\n    sendJSON(res, 200, trialsBike);\n  }).\n  catch(() => {/* istanbul ignore next */cov_ratewsw8z.f[4]++;cov_ratewsw8z.s[35]++;\n    sendBadStatus(res, 500, 'SERVER_ERROR');\n  });\n}","timestamp":"2017-12-08T02:13:19.303Z"}
{"level":"verbose","message":"STORAGE - adding the following bike:","timestamp":"2017-12-08T02:13:19.304Z"}
{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"5bc52c80-dbbd-11e7-8ad6-b79d84451076","timestamp":"2017-12-08T02:13:19.304Z","level":"verbose","message":""}
{"level":"verbose","message":"STORAGE - Fetching array from database","timestamp":"2017-12-08T02:13:19.304Z"}
{"level":"info","message":"Responding with a 200 code and the following data:","timestamp":"2017-12-08T02:13:19.306Z"}
{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"5bc52c80-dbbd-11e7-8ad6-b79d84451076","timestamp":"2017-12-08T02:13:19.306Z","level":"info","message":""}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-08T02:13:19.314Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-08T02:13:19.314Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-08T02:13:19.314Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T02:13:19.314Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.req.on (/Users/robertreed/Documents/programming/cf/401/lab/08-09-vanilla-rest-server/lab-rob/lib/req-parser.js:25:27)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-08T02:13:19.314Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-08T02:13:19.317Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-08T02:13:19.317Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-08T02:13:19.317Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-08T02:13:19.317Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[2]++;cov_ratewsw8z.s[17]++;\n  if (!(typeof req.body.make === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[18]++;\n    sendBadStatus(res, 400, `bad request, request property \"make\" must be of type string. You supplied type: ${typeof req.body.make}`); /* istanbul ignore next */cov_ratewsw8z.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[20]++;\n\n  if (!(typeof req.body.model === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, `bad request, request property \"model\" must be of type string. You supplied type: ${typeof req.body.model}`); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!(typeof req.body.year === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, `bad request, request property \"year\" must be of type number. You supplied type: ${typeof req.body.year}`); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!(typeof req.body.displacement === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, `bad request, request property \"displacement\" must be of type number. You supplied type: ${typeof req.body.displacement}`); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!(typeof req.body.color === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, `bad request, request property \"color\" must be of type string. You supplied type: ${typeof req.body.color}`); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[32]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[33]++;\n\n\n  storage.addTrialsBike(trialsBike).\n  then(() => {/* istanbul ignore next */cov_ratewsw8z.f[3]++;cov_ratewsw8z.s[34]++;\n    sendJSON(res, 200, trialsBike);\n  }).\n  catch(() => {/* istanbul ignore next */cov_ratewsw8z.f[4]++;cov_ratewsw8z.s[35]++;\n    sendBadStatus(res, 500, 'SERVER_ERROR');\n  });\n}","timestamp":"2017-12-08T02:13:19.317Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, request property \"make\" must be of type string. You supplied type: undefined.","timestamp":"2017-12-08T02:13:19.317Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-08T02:13:19.319Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-08T02:13:19.319Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-08T02:13:19.320Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-08T02:13:19.320Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[2]++;cov_ratewsw8z.s[17]++;\n  if (!(typeof req.body.make === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[18]++;\n    sendBadStatus(res, 400, `bad request, request property \"make\" must be of type string. You supplied type: ${typeof req.body.make}`); /* istanbul ignore next */cov_ratewsw8z.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[20]++;\n\n  if (!(typeof req.body.model === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, `bad request, request property \"model\" must be of type string. You supplied type: ${typeof req.body.model}`); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!(typeof req.body.year === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, `bad request, request property \"year\" must be of type number. You supplied type: ${typeof req.body.year}`); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!(typeof req.body.displacement === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, `bad request, request property \"displacement\" must be of type number. You supplied type: ${typeof req.body.displacement}`); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!(typeof req.body.color === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, `bad request, request property \"color\" must be of type string. You supplied type: ${typeof req.body.color}`); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[32]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[33]++;\n\n\n  storage.addTrialsBike(trialsBike).\n  then(() => {/* istanbul ignore next */cov_ratewsw8z.f[3]++;cov_ratewsw8z.s[34]++;\n    sendJSON(res, 200, trialsBike);\n  }).\n  catch(() => {/* istanbul ignore next */cov_ratewsw8z.f[4]++;cov_ratewsw8z.s[35]++;\n    sendBadStatus(res, 500, 'SERVER_ERROR');\n  });\n}","timestamp":"2017-12-08T02:13:19.320Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, request property \"model\" must be of type string. You supplied type: undefined.","timestamp":"2017-12-08T02:13:19.320Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-08T02:13:19.321Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-08T02:13:19.322Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-08T02:13:19.322Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-08T02:13:19.322Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[2]++;cov_ratewsw8z.s[17]++;\n  if (!(typeof req.body.make === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[18]++;\n    sendBadStatus(res, 400, `bad request, request property \"make\" must be of type string. You supplied type: ${typeof req.body.make}`); /* istanbul ignore next */cov_ratewsw8z.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[20]++;\n\n  if (!(typeof req.body.model === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, `bad request, request property \"model\" must be of type string. You supplied type: ${typeof req.body.model}`); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!(typeof req.body.year === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, `bad request, request property \"year\" must be of type number. You supplied type: ${typeof req.body.year}`); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!(typeof req.body.displacement === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, `bad request, request property \"displacement\" must be of type number. You supplied type: ${typeof req.body.displacement}`); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!(typeof req.body.color === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, `bad request, request property \"color\" must be of type string. You supplied type: ${typeof req.body.color}`); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[32]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[33]++;\n\n\n  storage.addTrialsBike(trialsBike).\n  then(() => {/* istanbul ignore next */cov_ratewsw8z.f[3]++;cov_ratewsw8z.s[34]++;\n    sendJSON(res, 200, trialsBike);\n  }).\n  catch(() => {/* istanbul ignore next */cov_ratewsw8z.f[4]++;cov_ratewsw8z.s[35]++;\n    sendBadStatus(res, 500, 'SERVER_ERROR');\n  });\n}","timestamp":"2017-12-08T02:13:19.322Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, request property \"year\" must be of type number. You supplied type: boolean.","timestamp":"2017-12-08T02:13:19.322Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-08T02:13:19.324Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-08T02:13:19.324Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-08T02:13:19.324Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-08T02:13:19.324Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[2]++;cov_ratewsw8z.s[17]++;\n  if (!(typeof req.body.make === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[18]++;\n    sendBadStatus(res, 400, `bad request, request property \"make\" must be of type string. You supplied type: ${typeof req.body.make}`); /* istanbul ignore next */cov_ratewsw8z.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[20]++;\n\n  if (!(typeof req.body.model === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, `bad request, request property \"model\" must be of type string. You supplied type: ${typeof req.body.model}`); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!(typeof req.body.year === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, `bad request, request property \"year\" must be of type number. You supplied type: ${typeof req.body.year}`); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!(typeof req.body.displacement === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, `bad request, request property \"displacement\" must be of type number. You supplied type: ${typeof req.body.displacement}`); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!(typeof req.body.color === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, `bad request, request property \"color\" must be of type string. You supplied type: ${typeof req.body.color}`); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[32]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[33]++;\n\n\n  storage.addTrialsBike(trialsBike).\n  then(() => {/* istanbul ignore next */cov_ratewsw8z.f[3]++;cov_ratewsw8z.s[34]++;\n    sendJSON(res, 200, trialsBike);\n  }).\n  catch(() => {/* istanbul ignore next */cov_ratewsw8z.f[4]++;cov_ratewsw8z.s[35]++;\n    sendBadStatus(res, 500, 'SERVER_ERROR');\n  });\n}","timestamp":"2017-12-08T02:13:19.324Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, request property \"displacement\" must be of type number. You supplied type: object.","timestamp":"2017-12-08T02:13:19.324Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-08T02:13:19.326Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-08T02:13:19.326Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-08T02:13:19.326Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-08T02:13:19.326Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[2]++;cov_ratewsw8z.s[17]++;\n  if (!(typeof req.body.make === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[18]++;\n    sendBadStatus(res, 400, `bad request, request property \"make\" must be of type string. You supplied type: ${typeof req.body.make}`); /* istanbul ignore next */cov_ratewsw8z.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[20]++;\n\n  if (!(typeof req.body.model === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, `bad request, request property \"model\" must be of type string. You supplied type: ${typeof req.body.model}`); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!(typeof req.body.year === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, `bad request, request property \"year\" must be of type number. You supplied type: ${typeof req.body.year}`); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!(typeof req.body.displacement === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, `bad request, request property \"displacement\" must be of type number. You supplied type: ${typeof req.body.displacement}`); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!(typeof req.body.color === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, `bad request, request property \"color\" must be of type string. You supplied type: ${typeof req.body.color}`); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[32]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[33]++;\n\n\n  storage.addTrialsBike(trialsBike).\n  then(() => {/* istanbul ignore next */cov_ratewsw8z.f[3]++;cov_ratewsw8z.s[34]++;\n    sendJSON(res, 200, trialsBike);\n  }).\n  catch(() => {/* istanbul ignore next */cov_ratewsw8z.f[4]++;cov_ratewsw8z.s[35]++;\n    sendBadStatus(res, 500, 'SERVER_ERROR');\n  });\n}","timestamp":"2017-12-08T02:13:19.326Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, request property \"color\" must be of type string. You supplied type: number.","timestamp":"2017-12-08T02:13:19.326Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-08T02:13:19.328Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-08T02:13:19.328Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-08T02:13:19.328Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-08T02:13:19.328Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[5]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[37]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[39]++;\n    storage.fetchTrialsBike(id).\n    then(trialsBike => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[40]++;\n      sendJSON(res, 200, trialsBike);\n    }).\n    catch(() => {/* istanbul ignore next */cov_ratewsw8z.f[7]++;cov_ratewsw8z.s[41]++;\n      sendBadStatus(res, 404, `No bike with id \"${id}\".`);\n    });\n  } else {/* istanbul ignore next */cov_ratewsw8z.b[5][1]++;cov_ratewsw8z.s[42]++;\n    storage.fetchAllTrialsBikes().\n    then(trialsBikes => {/* istanbul ignore next */cov_ratewsw8z.f[8]++;cov_ratewsw8z.s[43]++;\n      sendJSON(res, 200, trialsBikes);\n    });\n  }\n}","timestamp":"2017-12-08T02:13:19.328Z"}
{"level":"verbose","message":"STORAGE - Fetching array from database","timestamp":"2017-12-08T02:13:19.328Z"}
{"level":"info","message":"Responding with a 200 code and the following data:","timestamp":"2017-12-08T02:13:19.329Z"}
[{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"30499500-dbbd-11e7-afeb-8dad6ed2e683","timestamp":"2017-12-08T02:12:06.352Z"},{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"5bc52c80-dbbd-11e7-8ad6-b79d84451076","timestamp":"2017-12-08T02:13:19.304Z"}]
{"level":"info","message":"Routing a request.","timestamp":"2017-12-08T02:13:19.336Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes?id=5bc52c80-dbbd-11e7-8ad6-b79d84451076\"","timestamp":"2017-12-08T02:13:19.336Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=5bc52c80-dbbd-11e7-8ad6-b79d84451076\",\"query\":{\"id\":\"5bc52c80-dbbd-11e7-8ad6-b79d84451076\"},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes?id=5bc52c80-dbbd-11e7-8ad6-b79d84451076\",\"href\":\"/api/trials-bikes?id=5bc52c80-dbbd-11e7-8ad6-b79d84451076\"}","timestamp":"2017-12-08T02:13:19.336Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-08T02:13:19.336Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[5]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[37]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[39]++;\n    storage.fetchTrialsBike(id).\n    then(trialsBike => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[40]++;\n      sendJSON(res, 200, trialsBike);\n    }).\n    catch(() => {/* istanbul ignore next */cov_ratewsw8z.f[7]++;cov_ratewsw8z.s[41]++;\n      sendBadStatus(res, 404, `No bike with id \"${id}\".`);\n    });\n  } else {/* istanbul ignore next */cov_ratewsw8z.b[5][1]++;cov_ratewsw8z.s[42]++;\n    storage.fetchAllTrialsBikes().\n    then(trialsBikes => {/* istanbul ignore next */cov_ratewsw8z.f[8]++;cov_ratewsw8z.s[43]++;\n      sendJSON(res, 200, trialsBikes);\n    });\n  }\n}","timestamp":"2017-12-08T02:13:19.336Z"}
{"level":"verbose","message":"STORAGE - fetching trials bike with id 5bc52c80-dbbd-11e7-8ad6-b79d84451076.","timestamp":"2017-12-08T02:13:19.337Z"}
{"level":"verbose","message":"STORAGE - Fetching array from database","timestamp":"2017-12-08T02:13:19.337Z"}
{"level":"info","message":"Responding with a 200 code and the following data:","timestamp":"2017-12-08T02:13:19.337Z"}
{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"5bc52c80-dbbd-11e7-8ad6-b79d84451076","timestamp":"2017-12-08T02:13:19.337Z","level":"info","message":""}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-08T02:13:19.339Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes?id=hamburger\"","timestamp":"2017-12-08T02:13:19.339Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=hamburger\",\"query\":{\"id\":\"hamburger\"},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes?id=hamburger\",\"href\":\"/api/trials-bikes?id=hamburger\"}","timestamp":"2017-12-08T02:13:19.339Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-08T02:13:19.339Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[5]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[37]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[39]++;\n    storage.fetchTrialsBike(id).\n    then(trialsBike => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[40]++;\n      sendJSON(res, 200, trialsBike);\n    }).\n    catch(() => {/* istanbul ignore next */cov_ratewsw8z.f[7]++;cov_ratewsw8z.s[41]++;\n      sendBadStatus(res, 404, `No bike with id \"${id}\".`);\n    });\n  } else {/* istanbul ignore next */cov_ratewsw8z.b[5][1]++;cov_ratewsw8z.s[42]++;\n    storage.fetchAllTrialsBikes().\n    then(trialsBikes => {/* istanbul ignore next */cov_ratewsw8z.f[8]++;cov_ratewsw8z.s[43]++;\n      sendJSON(res, 200, trialsBikes);\n    });\n  }\n}","timestamp":"2017-12-08T02:13:19.339Z"}
{"level":"verbose","message":"STORAGE - fetching trials bike with id hamburger.","timestamp":"2017-12-08T02:13:19.339Z"}
{"level":"verbose","message":"STORAGE - Fetching array from database","timestamp":"2017-12-08T02:13:19.339Z"}
{"level":"info","message":"Responding with a 404 code due to No bike with id \"hamburger\"..","timestamp":"2017-12-08T02:13:19.340Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-08T02:13:19.341Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes?id=5bc52c80-dbbd-11e7-8ad6-b79d84451076\"","timestamp":"2017-12-08T02:13:19.341Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=5bc52c80-dbbd-11e7-8ad6-b79d84451076\",\"query\":{\"id\":\"5bc52c80-dbbd-11e7-8ad6-b79d84451076\"},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes?id=5bc52c80-dbbd-11e7-8ad6-b79d84451076\",\"href\":\"/api/trials-bikes?id=5bc52c80-dbbd-11e7-8ad6-b79d84451076\"}","timestamp":"2017-12-08T02:13:19.341Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-08T02:13:19.341Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[9]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[45]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[46]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[6][0]++;\n    let removedBike = /* istanbul ignore next */(cov_ratewsw8z.s[47]++, removeBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[48]++;\n    if (removedBike) {/* istanbul ignore next */cov_ratewsw8z.b[7][0]++;cov_ratewsw8z.s[49]++;\n      logger.log('info', `Bike deleted, responding with a 204 code.`); /* istanbul ignore next */cov_ratewsw8z.s[50]++;\n      res.writeHead(204); /* istanbul ignore next */cov_ratewsw8z.s[51]++;\n      res.end();\n    } else\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][1]++;cov_ratewsw8z.s[52]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[6][1]++;cov_ratewsw8z.s[53]++;sendBadStatus(res, 400, `bad request, no id.`);}\n}","timestamp":"2017-12-08T02:13:19.341Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T02:13:19.342Z"}
{"message":"removeBikeById is not defined","stack":"ReferenceError: removeBikeById is not defined\n    at Object.<anonymous>.router.delete (/Users/robertreed/Documents/programming/cf/401/lab/08-09-vanilla-rest-server/lab-rob/route/trials-bike-router.js:92:69)\n    at reqParser.parse.then.req (/Users/robertreed/Documents/programming/cf/401/lab/08-09-vanilla-rest-server/lab-rob/lib/router.js:49:14)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-08T02:13:19.342Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-08T02:13:19.343Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-08T02:13:19.343Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-08T02:13:19.343Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-08T02:13:19.343Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[9]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[45]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[46]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[6][0]++;\n    let removedBike = /* istanbul ignore next */(cov_ratewsw8z.s[47]++, removeBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[48]++;\n    if (removedBike) {/* istanbul ignore next */cov_ratewsw8z.b[7][0]++;cov_ratewsw8z.s[49]++;\n      logger.log('info', `Bike deleted, responding with a 204 code.`); /* istanbul ignore next */cov_ratewsw8z.s[50]++;\n      res.writeHead(204); /* istanbul ignore next */cov_ratewsw8z.s[51]++;\n      res.end();\n    } else\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][1]++;cov_ratewsw8z.s[52]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[6][1]++;cov_ratewsw8z.s[53]++;sendBadStatus(res, 400, `bad request, no id.`);}\n}","timestamp":"2017-12-08T02:13:19.343Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, no id..","timestamp":"2017-12-08T02:13:19.343Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-08T02:13:19.345Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes?id=hotdogs\"","timestamp":"2017-12-08T02:13:19.345Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=hotdogs\",\"query\":{\"id\":\"hotdogs\"},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes?id=hotdogs\",\"href\":\"/api/trials-bikes?id=hotdogs\"}","timestamp":"2017-12-08T02:13:19.345Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-08T02:13:19.345Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[9]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[45]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[46]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[6][0]++;\n    let removedBike = /* istanbul ignore next */(cov_ratewsw8z.s[47]++, removeBikeById(id)); /* istanbul ignore next */cov_ratewsw8z.s[48]++;\n    if (removedBike) {/* istanbul ignore next */cov_ratewsw8z.b[7][0]++;cov_ratewsw8z.s[49]++;\n      logger.log('info', `Bike deleted, responding with a 204 code.`); /* istanbul ignore next */cov_ratewsw8z.s[50]++;\n      res.writeHead(204); /* istanbul ignore next */cov_ratewsw8z.s[51]++;\n      res.end();\n    } else\n      {/* istanbul ignore next */cov_ratewsw8z.b[7][1]++;cov_ratewsw8z.s[52]++;sendBadStatus(res, 404, `No bike with id \"${id}\".`);}\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[6][1]++;cov_ratewsw8z.s[53]++;sendBadStatus(res, 400, `bad request, no id.`);}\n}","timestamp":"2017-12-08T02:13:19.345Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T02:13:19.345Z"}
{"message":"removeBikeById is not defined","stack":"ReferenceError: removeBikeById is not defined\n    at Object.<anonymous>.router.delete (/Users/robertreed/Documents/programming/cf/401/lab/08-09-vanilla-rest-server/lab-rob/route/trials-bike-router.js:92:69)\n    at reqParser.parse.then.req (/Users/robertreed/Documents/programming/cf/401/lab/08-09-vanilla-rest-server/lab-rob/lib/router.js:49:14)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-08T02:13:19.345Z"}
{"level":"info","message":"Adding a POST url and callback.","timestamp":"2017-12-08T02:20:58.804Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-08T02:20:58.805Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[2]++;cov_ratewsw8z.s[17]++;\n  if (!(typeof req.body.make === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[18]++;\n    sendBadStatus(res, 400, `bad request, request property \"make\" must be of type string. You supplied type: ${typeof req.body.make}`); /* istanbul ignore next */cov_ratewsw8z.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[20]++;\n\n  if (!(typeof req.body.model === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, `bad request, request property \"model\" must be of type string. You supplied type: ${typeof req.body.model}`); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!(typeof req.body.year === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, `bad request, request property \"year\" must be of type number. You supplied type: ${typeof req.body.year}`); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!(typeof req.body.displacement === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, `bad request, request property \"displacement\" must be of type number. You supplied type: ${typeof req.body.displacement}`); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!(typeof req.body.color === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, `bad request, request property \"color\" must be of type string. You supplied type: ${typeof req.body.color}`); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[32]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[33]++;\n\n\n  storage.addTrialsBike(trialsBike).\n  then(() => {/* istanbul ignore next */cov_ratewsw8z.f[3]++;cov_ratewsw8z.s[34]++;\n    sendJSON(res, 200, trialsBike);\n  }).\n  catch(() => {/* istanbul ignore next */cov_ratewsw8z.f[4]++;cov_ratewsw8z.s[35]++;\n    sendBadStatus(res, 500, 'SERVER_ERROR');\n  });\n}","timestamp":"2017-12-08T02:20:58.805Z"}
{"level":"info","message":"Adding a GET url and callback.","timestamp":"2017-12-08T02:20:58.805Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-08T02:20:58.805Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[5]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[37]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[39]++;\n    storage.fetchTrialsBike(id).\n    then(trialsBike => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[40]++;\n      sendJSON(res, 200, trialsBike);\n    }).\n    catch(() => {/* istanbul ignore next */cov_ratewsw8z.f[7]++;cov_ratewsw8z.s[41]++;\n      sendBadStatus(res, 404, `No bike with id \"${id}\".`);\n    });\n  } else {/* istanbul ignore next */cov_ratewsw8z.b[5][1]++;cov_ratewsw8z.s[42]++;\n    storage.fetchAllTrialsBikes().\n    then(trialsBikes => {/* istanbul ignore next */cov_ratewsw8z.f[8]++;cov_ratewsw8z.s[43]++;\n      sendJSON(res, 200, trialsBikes);\n    });\n  }\n}","timestamp":"2017-12-08T02:20:58.805Z"}
{"level":"info","message":"Adding a DELETE url and callback.","timestamp":"2017-12-08T02:20:58.805Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-08T02:20:58.805Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[9]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[45]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[46]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[6][0]++;cov_ratewsw8z.s[47]++;\n    storage.deleteTrialsBike(id).\n    then(() => {/* istanbul ignore next */cov_ratewsw8z.f[10]++;cov_ratewsw8z.s[48]++;\n      logger.log('info', `Bike deleted, responding with a 204 code.`); /* istanbul ignore next */cov_ratewsw8z.s[49]++;\n      res.writeHead(204); /* istanbul ignore next */cov_ratewsw8z.s[50]++;\n      res.end();\n    }).\n    catch(() => {/* istanbul ignore next */cov_ratewsw8z.f[11]++;cov_ratewsw8z.s[51]++;\n      sendBadStatus(res, 404, `No bike with id \"${id}\".`);\n    });\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[6][1]++;cov_ratewsw8z.s[52]++;sendBadStatus(res, 400, `bad request, no id.`);}\n}","timestamp":"2017-12-08T02:20:58.805Z"}
{"level":"info","message":"Server is up on port 3000.","timestamp":"2017-12-08T02:20:58.840Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-08T02:20:58.881Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-08T02:20:58.881Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-08T02:20:58.881Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-08T02:20:58.882Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[2]++;cov_ratewsw8z.s[17]++;\n  if (!(typeof req.body.make === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[18]++;\n    sendBadStatus(res, 400, `bad request, request property \"make\" must be of type string. You supplied type: ${typeof req.body.make}`); /* istanbul ignore next */cov_ratewsw8z.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[20]++;\n\n  if (!(typeof req.body.model === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, `bad request, request property \"model\" must be of type string. You supplied type: ${typeof req.body.model}`); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!(typeof req.body.year === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, `bad request, request property \"year\" must be of type number. You supplied type: ${typeof req.body.year}`); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!(typeof req.body.displacement === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, `bad request, request property \"displacement\" must be of type number. You supplied type: ${typeof req.body.displacement}`); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!(typeof req.body.color === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, `bad request, request property \"color\" must be of type string. You supplied type: ${typeof req.body.color}`); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[32]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[33]++;\n\n\n  storage.addTrialsBike(trialsBike).\n  then(() => {/* istanbul ignore next */cov_ratewsw8z.f[3]++;cov_ratewsw8z.s[34]++;\n    sendJSON(res, 200, trialsBike);\n  }).\n  catch(() => {/* istanbul ignore next */cov_ratewsw8z.f[4]++;cov_ratewsw8z.s[35]++;\n    sendBadStatus(res, 500, 'SERVER_ERROR');\n  });\n}","timestamp":"2017-12-08T02:20:58.882Z"}
{"level":"verbose","message":"STORAGE - adding the following bike:","timestamp":"2017-12-08T02:20:58.883Z"}
{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"6db33620-dbbe-11e7-9df7-812c6884e118","timestamp":"2017-12-08T02:20:58.883Z","level":"verbose","message":""}
{"level":"verbose","message":"STORAGE - Fetching array from database","timestamp":"2017-12-08T02:20:58.883Z"}
{"level":"info","message":"Responding with a 200 code and the following data:","timestamp":"2017-12-08T02:20:58.885Z"}
{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"6db33620-dbbe-11e7-9df7-812c6884e118","timestamp":"2017-12-08T02:20:58.885Z","level":"info","message":""}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-08T02:20:58.893Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-08T02:20:58.893Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-08T02:20:58.893Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T02:20:58.894Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.req.on (/Users/robertreed/Documents/programming/cf/401/lab/08-09-vanilla-rest-server/lab-rob/lib/req-parser.js:25:27)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-08T02:20:58.894Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-08T02:20:58.897Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-08T02:20:58.897Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-08T02:20:58.897Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-08T02:20:58.897Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[2]++;cov_ratewsw8z.s[17]++;\n  if (!(typeof req.body.make === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[18]++;\n    sendBadStatus(res, 400, `bad request, request property \"make\" must be of type string. You supplied type: ${typeof req.body.make}`); /* istanbul ignore next */cov_ratewsw8z.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[20]++;\n\n  if (!(typeof req.body.model === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, `bad request, request property \"model\" must be of type string. You supplied type: ${typeof req.body.model}`); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!(typeof req.body.year === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, `bad request, request property \"year\" must be of type number. You supplied type: ${typeof req.body.year}`); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!(typeof req.body.displacement === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, `bad request, request property \"displacement\" must be of type number. You supplied type: ${typeof req.body.displacement}`); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!(typeof req.body.color === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, `bad request, request property \"color\" must be of type string. You supplied type: ${typeof req.body.color}`); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[32]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[33]++;\n\n\n  storage.addTrialsBike(trialsBike).\n  then(() => {/* istanbul ignore next */cov_ratewsw8z.f[3]++;cov_ratewsw8z.s[34]++;\n    sendJSON(res, 200, trialsBike);\n  }).\n  catch(() => {/* istanbul ignore next */cov_ratewsw8z.f[4]++;cov_ratewsw8z.s[35]++;\n    sendBadStatus(res, 500, 'SERVER_ERROR');\n  });\n}","timestamp":"2017-12-08T02:20:58.897Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, request property \"make\" must be of type string. You supplied type: undefined.","timestamp":"2017-12-08T02:20:58.897Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-08T02:20:58.899Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-08T02:20:58.899Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-08T02:20:58.899Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-08T02:20:58.899Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[2]++;cov_ratewsw8z.s[17]++;\n  if (!(typeof req.body.make === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[18]++;\n    sendBadStatus(res, 400, `bad request, request property \"make\" must be of type string. You supplied type: ${typeof req.body.make}`); /* istanbul ignore next */cov_ratewsw8z.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[20]++;\n\n  if (!(typeof req.body.model === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, `bad request, request property \"model\" must be of type string. You supplied type: ${typeof req.body.model}`); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!(typeof req.body.year === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, `bad request, request property \"year\" must be of type number. You supplied type: ${typeof req.body.year}`); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!(typeof req.body.displacement === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, `bad request, request property \"displacement\" must be of type number. You supplied type: ${typeof req.body.displacement}`); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!(typeof req.body.color === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, `bad request, request property \"color\" must be of type string. You supplied type: ${typeof req.body.color}`); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[32]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[33]++;\n\n\n  storage.addTrialsBike(trialsBike).\n  then(() => {/* istanbul ignore next */cov_ratewsw8z.f[3]++;cov_ratewsw8z.s[34]++;\n    sendJSON(res, 200, trialsBike);\n  }).\n  catch(() => {/* istanbul ignore next */cov_ratewsw8z.f[4]++;cov_ratewsw8z.s[35]++;\n    sendBadStatus(res, 500, 'SERVER_ERROR');\n  });\n}","timestamp":"2017-12-08T02:20:58.899Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, request property \"model\" must be of type string. You supplied type: undefined.","timestamp":"2017-12-08T02:20:58.899Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-08T02:20:58.901Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-08T02:20:58.901Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-08T02:20:58.901Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-08T02:20:58.901Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[2]++;cov_ratewsw8z.s[17]++;\n  if (!(typeof req.body.make === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[18]++;\n    sendBadStatus(res, 400, `bad request, request property \"make\" must be of type string. You supplied type: ${typeof req.body.make}`); /* istanbul ignore next */cov_ratewsw8z.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[20]++;\n\n  if (!(typeof req.body.model === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, `bad request, request property \"model\" must be of type string. You supplied type: ${typeof req.body.model}`); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!(typeof req.body.year === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, `bad request, request property \"year\" must be of type number. You supplied type: ${typeof req.body.year}`); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!(typeof req.body.displacement === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, `bad request, request property \"displacement\" must be of type number. You supplied type: ${typeof req.body.displacement}`); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!(typeof req.body.color === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, `bad request, request property \"color\" must be of type string. You supplied type: ${typeof req.body.color}`); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[32]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[33]++;\n\n\n  storage.addTrialsBike(trialsBike).\n  then(() => {/* istanbul ignore next */cov_ratewsw8z.f[3]++;cov_ratewsw8z.s[34]++;\n    sendJSON(res, 200, trialsBike);\n  }).\n  catch(() => {/* istanbul ignore next */cov_ratewsw8z.f[4]++;cov_ratewsw8z.s[35]++;\n    sendBadStatus(res, 500, 'SERVER_ERROR');\n  });\n}","timestamp":"2017-12-08T02:20:58.901Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, request property \"year\" must be of type number. You supplied type: boolean.","timestamp":"2017-12-08T02:20:58.901Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-08T02:20:58.903Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-08T02:20:58.903Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-08T02:20:58.903Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-08T02:20:58.903Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[2]++;cov_ratewsw8z.s[17]++;\n  if (!(typeof req.body.make === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[18]++;\n    sendBadStatus(res, 400, `bad request, request property \"make\" must be of type string. You supplied type: ${typeof req.body.make}`); /* istanbul ignore next */cov_ratewsw8z.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[20]++;\n\n  if (!(typeof req.body.model === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, `bad request, request property \"model\" must be of type string. You supplied type: ${typeof req.body.model}`); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!(typeof req.body.year === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, `bad request, request property \"year\" must be of type number. You supplied type: ${typeof req.body.year}`); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!(typeof req.body.displacement === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, `bad request, request property \"displacement\" must be of type number. You supplied type: ${typeof req.body.displacement}`); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!(typeof req.body.color === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, `bad request, request property \"color\" must be of type string. You supplied type: ${typeof req.body.color}`); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[32]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[33]++;\n\n\n  storage.addTrialsBike(trialsBike).\n  then(() => {/* istanbul ignore next */cov_ratewsw8z.f[3]++;cov_ratewsw8z.s[34]++;\n    sendJSON(res, 200, trialsBike);\n  }).\n  catch(() => {/* istanbul ignore next */cov_ratewsw8z.f[4]++;cov_ratewsw8z.s[35]++;\n    sendBadStatus(res, 500, 'SERVER_ERROR');\n  });\n}","timestamp":"2017-12-08T02:20:58.903Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, request property \"displacement\" must be of type number. You supplied type: object.","timestamp":"2017-12-08T02:20:58.903Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-08T02:20:58.905Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-08T02:20:58.905Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-08T02:20:58.905Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-08T02:20:58.905Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[2]++;cov_ratewsw8z.s[17]++;\n  if (!(typeof req.body.make === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[18]++;\n    sendBadStatus(res, 400, `bad request, request property \"make\" must be of type string. You supplied type: ${typeof req.body.make}`); /* istanbul ignore next */cov_ratewsw8z.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[20]++;\n\n  if (!(typeof req.body.model === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, `bad request, request property \"model\" must be of type string. You supplied type: ${typeof req.body.model}`); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!(typeof req.body.year === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, `bad request, request property \"year\" must be of type number. You supplied type: ${typeof req.body.year}`); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!(typeof req.body.displacement === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, `bad request, request property \"displacement\" must be of type number. You supplied type: ${typeof req.body.displacement}`); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!(typeof req.body.color === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, `bad request, request property \"color\" must be of type string. You supplied type: ${typeof req.body.color}`); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[32]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[33]++;\n\n\n  storage.addTrialsBike(trialsBike).\n  then(() => {/* istanbul ignore next */cov_ratewsw8z.f[3]++;cov_ratewsw8z.s[34]++;\n    sendJSON(res, 200, trialsBike);\n  }).\n  catch(() => {/* istanbul ignore next */cov_ratewsw8z.f[4]++;cov_ratewsw8z.s[35]++;\n    sendBadStatus(res, 500, 'SERVER_ERROR');\n  });\n}","timestamp":"2017-12-08T02:20:58.905Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, request property \"color\" must be of type string. You supplied type: number.","timestamp":"2017-12-08T02:20:58.905Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-08T02:20:58.907Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-08T02:20:58.907Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-08T02:20:58.907Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-08T02:20:58.907Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[5]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[37]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[39]++;\n    storage.fetchTrialsBike(id).\n    then(trialsBike => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[40]++;\n      sendJSON(res, 200, trialsBike);\n    }).\n    catch(() => {/* istanbul ignore next */cov_ratewsw8z.f[7]++;cov_ratewsw8z.s[41]++;\n      sendBadStatus(res, 404, `No bike with id \"${id}\".`);\n    });\n  } else {/* istanbul ignore next */cov_ratewsw8z.b[5][1]++;cov_ratewsw8z.s[42]++;\n    storage.fetchAllTrialsBikes().\n    then(trialsBikes => {/* istanbul ignore next */cov_ratewsw8z.f[8]++;cov_ratewsw8z.s[43]++;\n      sendJSON(res, 200, trialsBikes);\n    });\n  }\n}","timestamp":"2017-12-08T02:20:58.907Z"}
{"level":"verbose","message":"STORAGE - Fetching array from database","timestamp":"2017-12-08T02:20:58.907Z"}
{"level":"info","message":"Responding with a 200 code and the following data:","timestamp":"2017-12-08T02:20:58.908Z"}
[{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"30499500-dbbd-11e7-afeb-8dad6ed2e683","timestamp":"2017-12-08T02:12:06.352Z"},{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"5bc52c80-dbbd-11e7-8ad6-b79d84451076","timestamp":"2017-12-08T02:13:19.304Z"},{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"6db33620-dbbe-11e7-9df7-812c6884e118","timestamp":"2017-12-08T02:20:58.882Z"}]
{"level":"info","message":"Routing a request.","timestamp":"2017-12-08T02:20:58.915Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes?id=6db33620-dbbe-11e7-9df7-812c6884e118\"","timestamp":"2017-12-08T02:20:58.915Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=6db33620-dbbe-11e7-9df7-812c6884e118\",\"query\":{\"id\":\"6db33620-dbbe-11e7-9df7-812c6884e118\"},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes?id=6db33620-dbbe-11e7-9df7-812c6884e118\",\"href\":\"/api/trials-bikes?id=6db33620-dbbe-11e7-9df7-812c6884e118\"}","timestamp":"2017-12-08T02:20:58.915Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-08T02:20:58.915Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[5]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[37]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[39]++;\n    storage.fetchTrialsBike(id).\n    then(trialsBike => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[40]++;\n      sendJSON(res, 200, trialsBike);\n    }).\n    catch(() => {/* istanbul ignore next */cov_ratewsw8z.f[7]++;cov_ratewsw8z.s[41]++;\n      sendBadStatus(res, 404, `No bike with id \"${id}\".`);\n    });\n  } else {/* istanbul ignore next */cov_ratewsw8z.b[5][1]++;cov_ratewsw8z.s[42]++;\n    storage.fetchAllTrialsBikes().\n    then(trialsBikes => {/* istanbul ignore next */cov_ratewsw8z.f[8]++;cov_ratewsw8z.s[43]++;\n      sendJSON(res, 200, trialsBikes);\n    });\n  }\n}","timestamp":"2017-12-08T02:20:58.915Z"}
{"level":"verbose","message":"STORAGE - fetching trials bike with id 6db33620-dbbe-11e7-9df7-812c6884e118.","timestamp":"2017-12-08T02:20:58.915Z"}
{"level":"verbose","message":"STORAGE - Fetching array from database","timestamp":"2017-12-08T02:20:58.916Z"}
{"level":"info","message":"Responding with a 200 code and the following data:","timestamp":"2017-12-08T02:20:58.916Z"}
{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"6db33620-dbbe-11e7-9df7-812c6884e118","timestamp":"2017-12-08T02:20:58.916Z","level":"info","message":""}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-08T02:20:58.918Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes?id=hamburger\"","timestamp":"2017-12-08T02:20:58.918Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=hamburger\",\"query\":{\"id\":\"hamburger\"},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes?id=hamburger\",\"href\":\"/api/trials-bikes?id=hamburger\"}","timestamp":"2017-12-08T02:20:58.918Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-08T02:20:58.918Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[5]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[37]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[39]++;\n    storage.fetchTrialsBike(id).\n    then(trialsBike => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[40]++;\n      sendJSON(res, 200, trialsBike);\n    }).\n    catch(() => {/* istanbul ignore next */cov_ratewsw8z.f[7]++;cov_ratewsw8z.s[41]++;\n      sendBadStatus(res, 404, `No bike with id \"${id}\".`);\n    });\n  } else {/* istanbul ignore next */cov_ratewsw8z.b[5][1]++;cov_ratewsw8z.s[42]++;\n    storage.fetchAllTrialsBikes().\n    then(trialsBikes => {/* istanbul ignore next */cov_ratewsw8z.f[8]++;cov_ratewsw8z.s[43]++;\n      sendJSON(res, 200, trialsBikes);\n    });\n  }\n}","timestamp":"2017-12-08T02:20:58.918Z"}
{"level":"verbose","message":"STORAGE - fetching trials bike with id hamburger.","timestamp":"2017-12-08T02:20:58.918Z"}
{"level":"verbose","message":"STORAGE - Fetching array from database","timestamp":"2017-12-08T02:20:58.918Z"}
{"level":"info","message":"Responding with a 404 code due to No bike with id \"hamburger\"..","timestamp":"2017-12-08T02:20:58.918Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-08T02:20:58.920Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes?id=6db33620-dbbe-11e7-9df7-812c6884e118\"","timestamp":"2017-12-08T02:20:58.920Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=6db33620-dbbe-11e7-9df7-812c6884e118\",\"query\":{\"id\":\"6db33620-dbbe-11e7-9df7-812c6884e118\"},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes?id=6db33620-dbbe-11e7-9df7-812c6884e118\",\"href\":\"/api/trials-bikes?id=6db33620-dbbe-11e7-9df7-812c6884e118\"}","timestamp":"2017-12-08T02:20:58.920Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-08T02:20:58.920Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[9]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[45]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[46]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[6][0]++;cov_ratewsw8z.s[47]++;\n    storage.deleteTrialsBike(id).\n    then(() => {/* istanbul ignore next */cov_ratewsw8z.f[10]++;cov_ratewsw8z.s[48]++;\n      logger.log('info', `Bike deleted, responding with a 204 code.`); /* istanbul ignore next */cov_ratewsw8z.s[49]++;\n      res.writeHead(204); /* istanbul ignore next */cov_ratewsw8z.s[50]++;\n      res.end();\n    }).\n    catch(() => {/* istanbul ignore next */cov_ratewsw8z.f[11]++;cov_ratewsw8z.s[51]++;\n      sendBadStatus(res, 404, `No bike with id \"${id}\".`);\n    });\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[6][1]++;cov_ratewsw8z.s[52]++;sendBadStatus(res, 400, `bad request, no id.`);}\n}","timestamp":"2017-12-08T02:20:58.920Z"}
{"level":"verbose","message":"STORAGE - removing trials bike with id 6db33620-dbbe-11e7-9df7-812c6884e118","timestamp":"2017-12-08T02:20:58.921Z"}
{"level":"verbose","message":"STORAGE - Fetching array from database","timestamp":"2017-12-08T02:20:58.921Z"}
{"level":"info","message":"Bike deleted, responding with a 204 code.","timestamp":"2017-12-08T02:20:58.921Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-08T02:20:58.923Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-08T02:20:58.923Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-08T02:20:58.923Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-08T02:20:58.923Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[9]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[45]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[46]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[6][0]++;cov_ratewsw8z.s[47]++;\n    storage.deleteTrialsBike(id).\n    then(() => {/* istanbul ignore next */cov_ratewsw8z.f[10]++;cov_ratewsw8z.s[48]++;\n      logger.log('info', `Bike deleted, responding with a 204 code.`); /* istanbul ignore next */cov_ratewsw8z.s[49]++;\n      res.writeHead(204); /* istanbul ignore next */cov_ratewsw8z.s[50]++;\n      res.end();\n    }).\n    catch(() => {/* istanbul ignore next */cov_ratewsw8z.f[11]++;cov_ratewsw8z.s[51]++;\n      sendBadStatus(res, 404, `No bike with id \"${id}\".`);\n    });\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[6][1]++;cov_ratewsw8z.s[52]++;sendBadStatus(res, 400, `bad request, no id.`);}\n}","timestamp":"2017-12-08T02:20:58.923Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, no id..","timestamp":"2017-12-08T02:20:58.923Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-08T02:20:58.925Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes?id=hotdogs\"","timestamp":"2017-12-08T02:20:58.925Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=hotdogs\",\"query\":{\"id\":\"hotdogs\"},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes?id=hotdogs\",\"href\":\"/api/trials-bikes?id=hotdogs\"}","timestamp":"2017-12-08T02:20:58.925Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-08T02:20:58.925Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[9]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[45]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[46]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[6][0]++;cov_ratewsw8z.s[47]++;\n    storage.deleteTrialsBike(id).\n    then(() => {/* istanbul ignore next */cov_ratewsw8z.f[10]++;cov_ratewsw8z.s[48]++;\n      logger.log('info', `Bike deleted, responding with a 204 code.`); /* istanbul ignore next */cov_ratewsw8z.s[49]++;\n      res.writeHead(204); /* istanbul ignore next */cov_ratewsw8z.s[50]++;\n      res.end();\n    }).\n    catch(() => {/* istanbul ignore next */cov_ratewsw8z.f[11]++;cov_ratewsw8z.s[51]++;\n      sendBadStatus(res, 404, `No bike with id \"${id}\".`);\n    });\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[6][1]++;cov_ratewsw8z.s[52]++;sendBadStatus(res, 400, `bad request, no id.`);}\n}","timestamp":"2017-12-08T02:20:58.925Z"}
{"level":"verbose","message":"STORAGE - removing trials bike with id hotdogs","timestamp":"2017-12-08T02:20:58.925Z"}
{"level":"verbose","message":"STORAGE - Fetching array from database","timestamp":"2017-12-08T02:20:58.925Z"}
{"level":"info","message":"Responding with a 404 code due to No bike with id \"hotdogs\"..","timestamp":"2017-12-08T02:20:58.925Z"}
{"level":"info","message":"Adding a POST url and callback.","timestamp":"2017-12-08T02:23:19.793Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-08T02:23:19.793Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[2]++;cov_ratewsw8z.s[17]++;\n  if (!(typeof req.body.make === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[18]++;\n    sendBadStatus(res, 400, `bad request, request property \"make\" must be of type string. You supplied type: ${typeof req.body.make}`); /* istanbul ignore next */cov_ratewsw8z.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[20]++;\n\n  if (!(typeof req.body.model === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, `bad request, request property \"model\" must be of type string. You supplied type: ${typeof req.body.model}`); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!(typeof req.body.year === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, `bad request, request property \"year\" must be of type number. You supplied type: ${typeof req.body.year}`); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!(typeof req.body.displacement === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, `bad request, request property \"displacement\" must be of type number. You supplied type: ${typeof req.body.displacement}`); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!(typeof req.body.color === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, `bad request, request property \"color\" must be of type string. You supplied type: ${typeof req.body.color}`); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[32]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[33]++;\n\n\n  storage.addTrialsBike(trialsBike).\n  then(() => {/* istanbul ignore next */cov_ratewsw8z.f[3]++;cov_ratewsw8z.s[34]++;\n    sendJSON(res, 200, trialsBike);\n  }).\n  catch(() => {/* istanbul ignore next */cov_ratewsw8z.f[4]++;cov_ratewsw8z.s[35]++;\n    sendBadStatus(res, 500, 'SERVER_ERROR');\n  });\n}","timestamp":"2017-12-08T02:23:19.793Z"}
{"level":"info","message":"Adding a GET url and callback.","timestamp":"2017-12-08T02:23:19.793Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-08T02:23:19.793Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[5]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[37]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[39]++;\n    storage.fetchTrialsBike(id).\n    then(trialsBike => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[40]++;\n      sendJSON(res, 200, trialsBike);\n    }).\n    catch(() => {/* istanbul ignore next */cov_ratewsw8z.f[7]++;cov_ratewsw8z.s[41]++;\n      sendBadStatus(res, 404, `No bike with id \"${id}\".`);\n    });\n  } else {/* istanbul ignore next */cov_ratewsw8z.b[5][1]++;cov_ratewsw8z.s[42]++;\n    storage.fetchAllTrialsBikes().\n    then(trialsBikes => {/* istanbul ignore next */cov_ratewsw8z.f[8]++;cov_ratewsw8z.s[43]++;\n      sendJSON(res, 200, trialsBikes);\n    });\n  }\n}","timestamp":"2017-12-08T02:23:19.793Z"}
{"level":"info","message":"Adding a DELETE url and callback.","timestamp":"2017-12-08T02:23:19.793Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-08T02:23:19.793Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[9]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[45]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[46]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[6][0]++;cov_ratewsw8z.s[47]++;\n    storage.deleteTrialsBike(id).\n    then(() => {/* istanbul ignore next */cov_ratewsw8z.f[10]++;cov_ratewsw8z.s[48]++;\n      logger.log('info', `Bike deleted, responding with a 204 code.`); /* istanbul ignore next */cov_ratewsw8z.s[49]++;\n      res.writeHead(204); /* istanbul ignore next */cov_ratewsw8z.s[50]++;\n      res.end();\n    }).\n    catch(() => {/* istanbul ignore next */cov_ratewsw8z.f[11]++;cov_ratewsw8z.s[51]++;\n      sendBadStatus(res, 404, `No bike with id \"${id}\".`);\n    });\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[6][1]++;cov_ratewsw8z.s[52]++;sendBadStatus(res, 400, `bad request, no id.`);}\n}","timestamp":"2017-12-08T02:23:19.793Z"}
{"level":"info","message":"Server is up on port 3000.","timestamp":"2017-12-08T02:23:19.834Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-08T02:23:19.875Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-08T02:23:19.875Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-08T02:23:19.876Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-08T02:23:19.876Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[2]++;cov_ratewsw8z.s[17]++;\n  if (!(typeof req.body.make === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[18]++;\n    sendBadStatus(res, 400, `bad request, request property \"make\" must be of type string. You supplied type: ${typeof req.body.make}`); /* istanbul ignore next */cov_ratewsw8z.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[20]++;\n\n  if (!(typeof req.body.model === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, `bad request, request property \"model\" must be of type string. You supplied type: ${typeof req.body.model}`); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!(typeof req.body.year === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, `bad request, request property \"year\" must be of type number. You supplied type: ${typeof req.body.year}`); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!(typeof req.body.displacement === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, `bad request, request property \"displacement\" must be of type number. You supplied type: ${typeof req.body.displacement}`); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!(typeof req.body.color === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, `bad request, request property \"color\" must be of type string. You supplied type: ${typeof req.body.color}`); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[32]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[33]++;\n\n\n  storage.addTrialsBike(trialsBike).\n  then(() => {/* istanbul ignore next */cov_ratewsw8z.f[3]++;cov_ratewsw8z.s[34]++;\n    sendJSON(res, 200, trialsBike);\n  }).\n  catch(() => {/* istanbul ignore next */cov_ratewsw8z.f[4]++;cov_ratewsw8z.s[35]++;\n    sendBadStatus(res, 500, 'SERVER_ERROR');\n  });\n}","timestamp":"2017-12-08T02:23:19.876Z"}
{"level":"verbose","message":"STORAGE - adding the following bike:","timestamp":"2017-12-08T02:23:19.877Z"}
{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"c1bd5750-dbbe-11e7-82c0-ed0e06364a34","timestamp":"2017-12-08T02:23:19.877Z","level":"verbose","message":""}
{"level":"verbose","message":"STORAGE - Fetching array from database","timestamp":"2017-12-08T02:23:19.877Z"}
{"level":"info","message":"Responding with a 200 code and the following data:","timestamp":"2017-12-08T02:23:19.879Z"}
{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"c1bd5750-dbbe-11e7-82c0-ed0e06364a34","timestamp":"2017-12-08T02:23:19.879Z","level":"info","message":""}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-08T02:23:19.887Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-08T02:23:19.887Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-08T02:23:19.887Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T02:23:19.887Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.req.on (/Users/robertreed/Documents/programming/cf/401/lab/08-09-vanilla-rest-server/lab-rob/lib/req-parser.js:25:27)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-08T02:23:19.887Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-08T02:23:19.890Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-08T02:23:19.890Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-08T02:23:19.890Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-08T02:23:19.890Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[2]++;cov_ratewsw8z.s[17]++;\n  if (!(typeof req.body.make === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[18]++;\n    sendBadStatus(res, 400, `bad request, request property \"make\" must be of type string. You supplied type: ${typeof req.body.make}`); /* istanbul ignore next */cov_ratewsw8z.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[20]++;\n\n  if (!(typeof req.body.model === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, `bad request, request property \"model\" must be of type string. You supplied type: ${typeof req.body.model}`); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!(typeof req.body.year === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, `bad request, request property \"year\" must be of type number. You supplied type: ${typeof req.body.year}`); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!(typeof req.body.displacement === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, `bad request, request property \"displacement\" must be of type number. You supplied type: ${typeof req.body.displacement}`); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!(typeof req.body.color === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, `bad request, request property \"color\" must be of type string. You supplied type: ${typeof req.body.color}`); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[32]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[33]++;\n\n\n  storage.addTrialsBike(trialsBike).\n  then(() => {/* istanbul ignore next */cov_ratewsw8z.f[3]++;cov_ratewsw8z.s[34]++;\n    sendJSON(res, 200, trialsBike);\n  }).\n  catch(() => {/* istanbul ignore next */cov_ratewsw8z.f[4]++;cov_ratewsw8z.s[35]++;\n    sendBadStatus(res, 500, 'SERVER_ERROR');\n  });\n}","timestamp":"2017-12-08T02:23:19.890Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, request property \"make\" must be of type string. You supplied type: undefined.","timestamp":"2017-12-08T02:23:19.890Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-08T02:23:19.892Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-08T02:23:19.892Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-08T02:23:19.892Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-08T02:23:19.892Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[2]++;cov_ratewsw8z.s[17]++;\n  if (!(typeof req.body.make === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[18]++;\n    sendBadStatus(res, 400, `bad request, request property \"make\" must be of type string. You supplied type: ${typeof req.body.make}`); /* istanbul ignore next */cov_ratewsw8z.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[20]++;\n\n  if (!(typeof req.body.model === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, `bad request, request property \"model\" must be of type string. You supplied type: ${typeof req.body.model}`); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!(typeof req.body.year === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, `bad request, request property \"year\" must be of type number. You supplied type: ${typeof req.body.year}`); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!(typeof req.body.displacement === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, `bad request, request property \"displacement\" must be of type number. You supplied type: ${typeof req.body.displacement}`); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!(typeof req.body.color === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, `bad request, request property \"color\" must be of type string. You supplied type: ${typeof req.body.color}`); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[32]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[33]++;\n\n\n  storage.addTrialsBike(trialsBike).\n  then(() => {/* istanbul ignore next */cov_ratewsw8z.f[3]++;cov_ratewsw8z.s[34]++;\n    sendJSON(res, 200, trialsBike);\n  }).\n  catch(() => {/* istanbul ignore next */cov_ratewsw8z.f[4]++;cov_ratewsw8z.s[35]++;\n    sendBadStatus(res, 500, 'SERVER_ERROR');\n  });\n}","timestamp":"2017-12-08T02:23:19.892Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, request property \"model\" must be of type string. You supplied type: undefined.","timestamp":"2017-12-08T02:23:19.892Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-08T02:23:19.894Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-08T02:23:19.894Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-08T02:23:19.894Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-08T02:23:19.894Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[2]++;cov_ratewsw8z.s[17]++;\n  if (!(typeof req.body.make === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[18]++;\n    sendBadStatus(res, 400, `bad request, request property \"make\" must be of type string. You supplied type: ${typeof req.body.make}`); /* istanbul ignore next */cov_ratewsw8z.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[20]++;\n\n  if (!(typeof req.body.model === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, `bad request, request property \"model\" must be of type string. You supplied type: ${typeof req.body.model}`); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!(typeof req.body.year === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, `bad request, request property \"year\" must be of type number. You supplied type: ${typeof req.body.year}`); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!(typeof req.body.displacement === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, `bad request, request property \"displacement\" must be of type number. You supplied type: ${typeof req.body.displacement}`); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!(typeof req.body.color === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, `bad request, request property \"color\" must be of type string. You supplied type: ${typeof req.body.color}`); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[32]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[33]++;\n\n\n  storage.addTrialsBike(trialsBike).\n  then(() => {/* istanbul ignore next */cov_ratewsw8z.f[3]++;cov_ratewsw8z.s[34]++;\n    sendJSON(res, 200, trialsBike);\n  }).\n  catch(() => {/* istanbul ignore next */cov_ratewsw8z.f[4]++;cov_ratewsw8z.s[35]++;\n    sendBadStatus(res, 500, 'SERVER_ERROR');\n  });\n}","timestamp":"2017-12-08T02:23:19.894Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, request property \"year\" must be of type number. You supplied type: boolean.","timestamp":"2017-12-08T02:23:19.894Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-08T02:23:19.896Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-08T02:23:19.896Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-08T02:23:19.896Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-08T02:23:19.896Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[2]++;cov_ratewsw8z.s[17]++;\n  if (!(typeof req.body.make === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[18]++;\n    sendBadStatus(res, 400, `bad request, request property \"make\" must be of type string. You supplied type: ${typeof req.body.make}`); /* istanbul ignore next */cov_ratewsw8z.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[20]++;\n\n  if (!(typeof req.body.model === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, `bad request, request property \"model\" must be of type string. You supplied type: ${typeof req.body.model}`); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!(typeof req.body.year === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, `bad request, request property \"year\" must be of type number. You supplied type: ${typeof req.body.year}`); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!(typeof req.body.displacement === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, `bad request, request property \"displacement\" must be of type number. You supplied type: ${typeof req.body.displacement}`); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!(typeof req.body.color === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, `bad request, request property \"color\" must be of type string. You supplied type: ${typeof req.body.color}`); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[32]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[33]++;\n\n\n  storage.addTrialsBike(trialsBike).\n  then(() => {/* istanbul ignore next */cov_ratewsw8z.f[3]++;cov_ratewsw8z.s[34]++;\n    sendJSON(res, 200, trialsBike);\n  }).\n  catch(() => {/* istanbul ignore next */cov_ratewsw8z.f[4]++;cov_ratewsw8z.s[35]++;\n    sendBadStatus(res, 500, 'SERVER_ERROR');\n  });\n}","timestamp":"2017-12-08T02:23:19.896Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, request property \"displacement\" must be of type number. You supplied type: object.","timestamp":"2017-12-08T02:23:19.896Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-08T02:23:19.898Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-08T02:23:19.898Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-08T02:23:19.898Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-08T02:23:19.898Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[2]++;cov_ratewsw8z.s[17]++;\n  if (!(typeof req.body.make === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[18]++;\n    sendBadStatus(res, 400, `bad request, request property \"make\" must be of type string. You supplied type: ${typeof req.body.make}`); /* istanbul ignore next */cov_ratewsw8z.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[20]++;\n\n  if (!(typeof req.body.model === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, `bad request, request property \"model\" must be of type string. You supplied type: ${typeof req.body.model}`); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!(typeof req.body.year === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, `bad request, request property \"year\" must be of type number. You supplied type: ${typeof req.body.year}`); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!(typeof req.body.displacement === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, `bad request, request property \"displacement\" must be of type number. You supplied type: ${typeof req.body.displacement}`); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!(typeof req.body.color === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, `bad request, request property \"color\" must be of type string. You supplied type: ${typeof req.body.color}`); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[32]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[33]++;\n\n\n  storage.addTrialsBike(trialsBike).\n  then(() => {/* istanbul ignore next */cov_ratewsw8z.f[3]++;cov_ratewsw8z.s[34]++;\n    sendJSON(res, 200, trialsBike);\n  }).\n  catch(() => {/* istanbul ignore next */cov_ratewsw8z.f[4]++;cov_ratewsw8z.s[35]++;\n    sendBadStatus(res, 500, 'SERVER_ERROR');\n  });\n}","timestamp":"2017-12-08T02:23:19.898Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, request property \"color\" must be of type string. You supplied type: number.","timestamp":"2017-12-08T02:23:19.898Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-08T02:23:19.900Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-08T02:23:19.900Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-08T02:23:19.900Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-08T02:23:19.900Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[5]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[37]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[39]++;\n    storage.fetchTrialsBike(id).\n    then(trialsBike => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[40]++;\n      sendJSON(res, 200, trialsBike);\n    }).\n    catch(() => {/* istanbul ignore next */cov_ratewsw8z.f[7]++;cov_ratewsw8z.s[41]++;\n      sendBadStatus(res, 404, `No bike with id \"${id}\".`);\n    });\n  } else {/* istanbul ignore next */cov_ratewsw8z.b[5][1]++;cov_ratewsw8z.s[42]++;\n    storage.fetchAllTrialsBikes().\n    then(trialsBikes => {/* istanbul ignore next */cov_ratewsw8z.f[8]++;cov_ratewsw8z.s[43]++;\n      sendJSON(res, 200, trialsBikes);\n    });\n  }\n}","timestamp":"2017-12-08T02:23:19.900Z"}
{"level":"verbose","message":"STORAGE - Fetching array from database","timestamp":"2017-12-08T02:23:19.900Z"}
{"level":"info","message":"Responding with a 200 code and the following data:","timestamp":"2017-12-08T02:23:19.900Z"}
[{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"30499500-dbbd-11e7-afeb-8dad6ed2e683","timestamp":"2017-12-08T02:12:06.352Z"},{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"5bc52c80-dbbd-11e7-8ad6-b79d84451076","timestamp":"2017-12-08T02:13:19.304Z"},{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"c1bd5750-dbbe-11e7-82c0-ed0e06364a34","timestamp":"2017-12-08T02:23:19.877Z"}]
{"level":"info","message":"Routing a request.","timestamp":"2017-12-08T02:23:19.902Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes?id=c1bd5750-dbbe-11e7-82c0-ed0e06364a34\"","timestamp":"2017-12-08T02:23:19.902Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=c1bd5750-dbbe-11e7-82c0-ed0e06364a34\",\"query\":{\"id\":\"c1bd5750-dbbe-11e7-82c0-ed0e06364a34\"},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes?id=c1bd5750-dbbe-11e7-82c0-ed0e06364a34\",\"href\":\"/api/trials-bikes?id=c1bd5750-dbbe-11e7-82c0-ed0e06364a34\"}","timestamp":"2017-12-08T02:23:19.903Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-08T02:23:19.903Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[5]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[37]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[39]++;\n    storage.fetchTrialsBike(id).\n    then(trialsBike => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[40]++;\n      sendJSON(res, 200, trialsBike);\n    }).\n    catch(() => {/* istanbul ignore next */cov_ratewsw8z.f[7]++;cov_ratewsw8z.s[41]++;\n      sendBadStatus(res, 404, `No bike with id \"${id}\".`);\n    });\n  } else {/* istanbul ignore next */cov_ratewsw8z.b[5][1]++;cov_ratewsw8z.s[42]++;\n    storage.fetchAllTrialsBikes().\n    then(trialsBikes => {/* istanbul ignore next */cov_ratewsw8z.f[8]++;cov_ratewsw8z.s[43]++;\n      sendJSON(res, 200, trialsBikes);\n    });\n  }\n}","timestamp":"2017-12-08T02:23:19.903Z"}
{"level":"verbose","message":"STORAGE - fetching trials bike with id c1bd5750-dbbe-11e7-82c0-ed0e06364a34.","timestamp":"2017-12-08T02:23:19.903Z"}
{"level":"verbose","message":"STORAGE - Fetching array from database","timestamp":"2017-12-08T02:23:19.903Z"}
{"level":"info","message":"Responding with a 200 code and the following data:","timestamp":"2017-12-08T02:23:19.903Z"}
{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"c1bd5750-dbbe-11e7-82c0-ed0e06364a34","timestamp":"2017-12-08T02:23:19.904Z","level":"info","message":""}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-08T02:23:19.905Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes?id=hamburger\"","timestamp":"2017-12-08T02:23:19.905Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=hamburger\",\"query\":{\"id\":\"hamburger\"},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes?id=hamburger\",\"href\":\"/api/trials-bikes?id=hamburger\"}","timestamp":"2017-12-08T02:23:19.905Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-08T02:23:19.906Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[5]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[37]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[39]++;\n    storage.fetchTrialsBike(id).\n    then(trialsBike => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[40]++;\n      sendJSON(res, 200, trialsBike);\n    }).\n    catch(() => {/* istanbul ignore next */cov_ratewsw8z.f[7]++;cov_ratewsw8z.s[41]++;\n      sendBadStatus(res, 404, `No bike with id \"${id}\".`);\n    });\n  } else {/* istanbul ignore next */cov_ratewsw8z.b[5][1]++;cov_ratewsw8z.s[42]++;\n    storage.fetchAllTrialsBikes().\n    then(trialsBikes => {/* istanbul ignore next */cov_ratewsw8z.f[8]++;cov_ratewsw8z.s[43]++;\n      sendJSON(res, 200, trialsBikes);\n    });\n  }\n}","timestamp":"2017-12-08T02:23:19.906Z"}
{"level":"verbose","message":"STORAGE - fetching trials bike with id hamburger.","timestamp":"2017-12-08T02:23:19.906Z"}
{"level":"verbose","message":"STORAGE - Fetching array from database","timestamp":"2017-12-08T02:23:19.906Z"}
{"level":"info","message":"Responding with a 404 code due to No bike with id \"hamburger\"..","timestamp":"2017-12-08T02:23:19.906Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-08T02:23:19.908Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes?id=c1bd5750-dbbe-11e7-82c0-ed0e06364a34\"","timestamp":"2017-12-08T02:23:19.908Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=c1bd5750-dbbe-11e7-82c0-ed0e06364a34\",\"query\":{\"id\":\"c1bd5750-dbbe-11e7-82c0-ed0e06364a34\"},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes?id=c1bd5750-dbbe-11e7-82c0-ed0e06364a34\",\"href\":\"/api/trials-bikes?id=c1bd5750-dbbe-11e7-82c0-ed0e06364a34\"}","timestamp":"2017-12-08T02:23:19.908Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-08T02:23:19.908Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[9]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[45]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[46]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[6][0]++;cov_ratewsw8z.s[47]++;\n    storage.deleteTrialsBike(id).\n    then(() => {/* istanbul ignore next */cov_ratewsw8z.f[10]++;cov_ratewsw8z.s[48]++;\n      logger.log('info', `Bike deleted, responding with a 204 code.`); /* istanbul ignore next */cov_ratewsw8z.s[49]++;\n      res.writeHead(204); /* istanbul ignore next */cov_ratewsw8z.s[50]++;\n      res.end();\n    }).\n    catch(() => {/* istanbul ignore next */cov_ratewsw8z.f[11]++;cov_ratewsw8z.s[51]++;\n      sendBadStatus(res, 404, `No bike with id \"${id}\".`);\n    });\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[6][1]++;cov_ratewsw8z.s[52]++;sendBadStatus(res, 400, `bad request, no id.`);}\n}","timestamp":"2017-12-08T02:23:19.908Z"}
{"level":"verbose","message":"STORAGE - removing trials bike with id c1bd5750-dbbe-11e7-82c0-ed0e06364a34","timestamp":"2017-12-08T02:23:19.909Z"}
{"level":"verbose","message":"STORAGE - Fetching array from database","timestamp":"2017-12-08T02:23:19.909Z"}
{"level":"info","message":"Bike deleted, responding with a 204 code.","timestamp":"2017-12-08T02:23:19.909Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-08T02:23:19.911Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-08T02:23:19.911Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-08T02:23:19.911Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-08T02:23:19.911Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[9]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[45]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[46]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[6][0]++;cov_ratewsw8z.s[47]++;\n    storage.deleteTrialsBike(id).\n    then(() => {/* istanbul ignore next */cov_ratewsw8z.f[10]++;cov_ratewsw8z.s[48]++;\n      logger.log('info', `Bike deleted, responding with a 204 code.`); /* istanbul ignore next */cov_ratewsw8z.s[49]++;\n      res.writeHead(204); /* istanbul ignore next */cov_ratewsw8z.s[50]++;\n      res.end();\n    }).\n    catch(() => {/* istanbul ignore next */cov_ratewsw8z.f[11]++;cov_ratewsw8z.s[51]++;\n      sendBadStatus(res, 404, `No bike with id \"${id}\".`);\n    });\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[6][1]++;cov_ratewsw8z.s[52]++;sendBadStatus(res, 400, `bad request, no id.`);}\n}","timestamp":"2017-12-08T02:23:19.911Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, no id..","timestamp":"2017-12-08T02:23:19.911Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-08T02:23:19.913Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes?id=hotdogs\"","timestamp":"2017-12-08T02:23:19.913Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=hotdogs\",\"query\":{\"id\":\"hotdogs\"},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes?id=hotdogs\",\"href\":\"/api/trials-bikes?id=hotdogs\"}","timestamp":"2017-12-08T02:23:19.913Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-08T02:23:19.913Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[9]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[45]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[46]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[6][0]++;cov_ratewsw8z.s[47]++;\n    storage.deleteTrialsBike(id).\n    then(() => {/* istanbul ignore next */cov_ratewsw8z.f[10]++;cov_ratewsw8z.s[48]++;\n      logger.log('info', `Bike deleted, responding with a 204 code.`); /* istanbul ignore next */cov_ratewsw8z.s[49]++;\n      res.writeHead(204); /* istanbul ignore next */cov_ratewsw8z.s[50]++;\n      res.end();\n    }).\n    catch(() => {/* istanbul ignore next */cov_ratewsw8z.f[11]++;cov_ratewsw8z.s[51]++;\n      sendBadStatus(res, 404, `No bike with id \"${id}\".`);\n    });\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[6][1]++;cov_ratewsw8z.s[52]++;sendBadStatus(res, 400, `bad request, no id.`);}\n}","timestamp":"2017-12-08T02:23:19.913Z"}
{"level":"verbose","message":"STORAGE - removing trials bike with id hotdogs","timestamp":"2017-12-08T02:23:19.913Z"}
{"level":"verbose","message":"STORAGE - Fetching array from database","timestamp":"2017-12-08T02:23:19.913Z"}
{"level":"info","message":"Responding with a 404 code due to No bike with id \"hotdogs\"..","timestamp":"2017-12-08T02:23:19.913Z"}
{"level":"info","message":"Adding a POST url and callback.","timestamp":"2017-12-08T02:30:00.848Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-08T02:30:00.849Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[2]++;cov_ratewsw8z.s[17]++;\n  if (!(typeof req.body.make === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[18]++;\n    sendBadStatus(res, 400, `bad request, request property \"make\" must be of type string. You supplied type: ${typeof req.body.make}`); /* istanbul ignore next */cov_ratewsw8z.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[20]++;\n\n  if (!(typeof req.body.model === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, `bad request, request property \"model\" must be of type string. You supplied type: ${typeof req.body.model}`); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!(typeof req.body.year === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, `bad request, request property \"year\" must be of type number. You supplied type: ${typeof req.body.year}`); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!(typeof req.body.displacement === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, `bad request, request property \"displacement\" must be of type number. You supplied type: ${typeof req.body.displacement}`); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!(typeof req.body.color === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, `bad request, request property \"color\" must be of type string. You supplied type: ${typeof req.body.color}`); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[32]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[33]++;\n\n\n  storage.addTrialsBike(trialsBike).\n  then(() => {/* istanbul ignore next */cov_ratewsw8z.f[3]++;cov_ratewsw8z.s[34]++;\n    sendJSON(res, 200, trialsBike);\n  }).\n  catch(() => {/* istanbul ignore next */cov_ratewsw8z.f[4]++;cov_ratewsw8z.s[35]++;\n    sendBadStatus(res, 500, 'SERVER_ERROR');\n  });\n}","timestamp":"2017-12-08T02:30:00.849Z"}
{"level":"info","message":"Adding a GET url and callback.","timestamp":"2017-12-08T02:30:00.849Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-08T02:30:00.849Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[5]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[37]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[39]++;\n    storage.fetchTrialsBike(id).\n    then(trialsBike => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[40]++;\n      sendJSON(res, 200, trialsBike);\n    }).\n    catch(() => {/* istanbul ignore next */cov_ratewsw8z.f[7]++;cov_ratewsw8z.s[41]++;\n      sendBadStatus(res, 404, `No bike with id \"${id}\".`);\n    });\n  } else {/* istanbul ignore next */cov_ratewsw8z.b[5][1]++;cov_ratewsw8z.s[42]++;\n    storage.fetchAllTrialsBikes().\n    then(trialsBikes => {/* istanbul ignore next */cov_ratewsw8z.f[8]++;cov_ratewsw8z.s[43]++;\n      sendJSON(res, 200, trialsBikes);\n    });\n  }\n}","timestamp":"2017-12-08T02:30:00.849Z"}
{"level":"info","message":"Adding a DELETE url and callback.","timestamp":"2017-12-08T02:30:00.849Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-08T02:30:00.849Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[9]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[45]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[46]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[6][0]++;cov_ratewsw8z.s[47]++;\n    storage.deleteTrialsBike(id).\n    then(() => {/* istanbul ignore next */cov_ratewsw8z.f[10]++;cov_ratewsw8z.s[48]++;\n      logger.log('info', `Bike deleted, responding with a 204 code.`); /* istanbul ignore next */cov_ratewsw8z.s[49]++;\n      res.writeHead(204); /* istanbul ignore next */cov_ratewsw8z.s[50]++;\n      res.end();\n    }).\n    catch(() => {/* istanbul ignore next */cov_ratewsw8z.f[11]++;cov_ratewsw8z.s[51]++;\n      sendBadStatus(res, 404, `No bike with id \"${id}\".`);\n    });\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[6][1]++;cov_ratewsw8z.s[52]++;sendBadStatus(res, 400, `bad request, no id.`);}\n}","timestamp":"2017-12-08T02:30:00.849Z"}
{"level":"info","message":"Server is up on port 3000.","timestamp":"2017-12-08T02:30:00.891Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-08T02:30:00.931Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-08T02:30:00.931Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-08T02:30:00.932Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-08T02:30:00.932Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[2]++;cov_ratewsw8z.s[17]++;\n  if (!(typeof req.body.make === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[18]++;\n    sendBadStatus(res, 400, `bad request, request property \"make\" must be of type string. You supplied type: ${typeof req.body.make}`); /* istanbul ignore next */cov_ratewsw8z.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[20]++;\n\n  if (!(typeof req.body.model === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, `bad request, request property \"model\" must be of type string. You supplied type: ${typeof req.body.model}`); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!(typeof req.body.year === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, `bad request, request property \"year\" must be of type number. You supplied type: ${typeof req.body.year}`); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!(typeof req.body.displacement === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, `bad request, request property \"displacement\" must be of type number. You supplied type: ${typeof req.body.displacement}`); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!(typeof req.body.color === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, `bad request, request property \"color\" must be of type string. You supplied type: ${typeof req.body.color}`); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[32]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[33]++;\n\n\n  storage.addTrialsBike(trialsBike).\n  then(() => {/* istanbul ignore next */cov_ratewsw8z.f[3]++;cov_ratewsw8z.s[34]++;\n    sendJSON(res, 200, trialsBike);\n  }).\n  catch(() => {/* istanbul ignore next */cov_ratewsw8z.f[4]++;cov_ratewsw8z.s[35]++;\n    sendBadStatus(res, 500, 'SERVER_ERROR');\n  });\n}","timestamp":"2017-12-08T02:30:00.932Z"}
{"level":"verbose","message":"STORAGE - adding the following bike:","timestamp":"2017-12-08T02:30:00.933Z"}
{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"b0c9a150-dbbf-11e7-b59b-a745d93f0521","timestamp":"2017-12-08T02:30:00.933Z","level":"verbose","message":""}
{"level":"verbose","message":"STORAGE - Fetching array from database","timestamp":"2017-12-08T02:30:00.933Z"}
{"level":"info","message":"Responding with a 200 code and the following data:","timestamp":"2017-12-08T02:30:00.936Z"}
{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"b0c9a150-dbbf-11e7-b59b-a745d93f0521","timestamp":"2017-12-08T02:30:00.936Z","level":"info","message":""}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-08T02:30:00.943Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-08T02:30:00.943Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-08T02:30:00.943Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T02:30:00.944Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.req.on (/Users/robertreed/Documents/programming/cf/401/lab/08-09-vanilla-rest-server/lab-rob/lib/req-parser.js:25:27)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-08T02:30:00.944Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-08T02:30:00.946Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-08T02:30:00.946Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-08T02:30:00.946Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-08T02:30:00.946Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[2]++;cov_ratewsw8z.s[17]++;\n  if (!(typeof req.body.make === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[18]++;\n    sendBadStatus(res, 400, `bad request, request property \"make\" must be of type string. You supplied type: ${typeof req.body.make}`); /* istanbul ignore next */cov_ratewsw8z.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[20]++;\n\n  if (!(typeof req.body.model === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, `bad request, request property \"model\" must be of type string. You supplied type: ${typeof req.body.model}`); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!(typeof req.body.year === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, `bad request, request property \"year\" must be of type number. You supplied type: ${typeof req.body.year}`); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!(typeof req.body.displacement === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, `bad request, request property \"displacement\" must be of type number. You supplied type: ${typeof req.body.displacement}`); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!(typeof req.body.color === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, `bad request, request property \"color\" must be of type string. You supplied type: ${typeof req.body.color}`); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[32]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[33]++;\n\n\n  storage.addTrialsBike(trialsBike).\n  then(() => {/* istanbul ignore next */cov_ratewsw8z.f[3]++;cov_ratewsw8z.s[34]++;\n    sendJSON(res, 200, trialsBike);\n  }).\n  catch(() => {/* istanbul ignore next */cov_ratewsw8z.f[4]++;cov_ratewsw8z.s[35]++;\n    sendBadStatus(res, 500, 'SERVER_ERROR');\n  });\n}","timestamp":"2017-12-08T02:30:00.946Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, request property \"make\" must be of type string. You supplied type: undefined.","timestamp":"2017-12-08T02:30:00.947Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-08T02:30:00.948Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-08T02:30:00.948Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-08T02:30:00.948Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-08T02:30:00.949Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[2]++;cov_ratewsw8z.s[17]++;\n  if (!(typeof req.body.make === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[18]++;\n    sendBadStatus(res, 400, `bad request, request property \"make\" must be of type string. You supplied type: ${typeof req.body.make}`); /* istanbul ignore next */cov_ratewsw8z.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[20]++;\n\n  if (!(typeof req.body.model === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, `bad request, request property \"model\" must be of type string. You supplied type: ${typeof req.body.model}`); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!(typeof req.body.year === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, `bad request, request property \"year\" must be of type number. You supplied type: ${typeof req.body.year}`); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!(typeof req.body.displacement === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, `bad request, request property \"displacement\" must be of type number. You supplied type: ${typeof req.body.displacement}`); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!(typeof req.body.color === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, `bad request, request property \"color\" must be of type string. You supplied type: ${typeof req.body.color}`); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[32]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[33]++;\n\n\n  storage.addTrialsBike(trialsBike).\n  then(() => {/* istanbul ignore next */cov_ratewsw8z.f[3]++;cov_ratewsw8z.s[34]++;\n    sendJSON(res, 200, trialsBike);\n  }).\n  catch(() => {/* istanbul ignore next */cov_ratewsw8z.f[4]++;cov_ratewsw8z.s[35]++;\n    sendBadStatus(res, 500, 'SERVER_ERROR');\n  });\n}","timestamp":"2017-12-08T02:30:00.949Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, request property \"model\" must be of type string. You supplied type: undefined.","timestamp":"2017-12-08T02:30:00.949Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-08T02:30:00.950Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-08T02:30:00.950Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-08T02:30:00.950Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-08T02:30:00.950Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[2]++;cov_ratewsw8z.s[17]++;\n  if (!(typeof req.body.make === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[18]++;\n    sendBadStatus(res, 400, `bad request, request property \"make\" must be of type string. You supplied type: ${typeof req.body.make}`); /* istanbul ignore next */cov_ratewsw8z.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[20]++;\n\n  if (!(typeof req.body.model === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, `bad request, request property \"model\" must be of type string. You supplied type: ${typeof req.body.model}`); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!(typeof req.body.year === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, `bad request, request property \"year\" must be of type number. You supplied type: ${typeof req.body.year}`); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!(typeof req.body.displacement === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, `bad request, request property \"displacement\" must be of type number. You supplied type: ${typeof req.body.displacement}`); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!(typeof req.body.color === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, `bad request, request property \"color\" must be of type string. You supplied type: ${typeof req.body.color}`); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[32]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[33]++;\n\n\n  storage.addTrialsBike(trialsBike).\n  then(() => {/* istanbul ignore next */cov_ratewsw8z.f[3]++;cov_ratewsw8z.s[34]++;\n    sendJSON(res, 200, trialsBike);\n  }).\n  catch(() => {/* istanbul ignore next */cov_ratewsw8z.f[4]++;cov_ratewsw8z.s[35]++;\n    sendBadStatus(res, 500, 'SERVER_ERROR');\n  });\n}","timestamp":"2017-12-08T02:30:00.951Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, request property \"year\" must be of type number. You supplied type: boolean.","timestamp":"2017-12-08T02:30:00.951Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-08T02:30:00.952Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-08T02:30:00.952Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-08T02:30:00.952Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-08T02:30:00.952Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[2]++;cov_ratewsw8z.s[17]++;\n  if (!(typeof req.body.make === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[18]++;\n    sendBadStatus(res, 400, `bad request, request property \"make\" must be of type string. You supplied type: ${typeof req.body.make}`); /* istanbul ignore next */cov_ratewsw8z.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[20]++;\n\n  if (!(typeof req.body.model === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, `bad request, request property \"model\" must be of type string. You supplied type: ${typeof req.body.model}`); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!(typeof req.body.year === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, `bad request, request property \"year\" must be of type number. You supplied type: ${typeof req.body.year}`); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!(typeof req.body.displacement === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, `bad request, request property \"displacement\" must be of type number. You supplied type: ${typeof req.body.displacement}`); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!(typeof req.body.color === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, `bad request, request property \"color\" must be of type string. You supplied type: ${typeof req.body.color}`); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[32]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[33]++;\n\n\n  storage.addTrialsBike(trialsBike).\n  then(() => {/* istanbul ignore next */cov_ratewsw8z.f[3]++;cov_ratewsw8z.s[34]++;\n    sendJSON(res, 200, trialsBike);\n  }).\n  catch(() => {/* istanbul ignore next */cov_ratewsw8z.f[4]++;cov_ratewsw8z.s[35]++;\n    sendBadStatus(res, 500, 'SERVER_ERROR');\n  });\n}","timestamp":"2017-12-08T02:30:00.952Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, request property \"displacement\" must be of type number. You supplied type: object.","timestamp":"2017-12-08T02:30:00.952Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-08T02:30:00.954Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-08T02:30:00.954Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-08T02:30:00.954Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-08T02:30:00.954Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[2]++;cov_ratewsw8z.s[17]++;\n  if (!(typeof req.body.make === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[18]++;\n    sendBadStatus(res, 400, `bad request, request property \"make\" must be of type string. You supplied type: ${typeof req.body.make}`); /* istanbul ignore next */cov_ratewsw8z.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[20]++;\n\n  if (!(typeof req.body.model === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, `bad request, request property \"model\" must be of type string. You supplied type: ${typeof req.body.model}`); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!(typeof req.body.year === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, `bad request, request property \"year\" must be of type number. You supplied type: ${typeof req.body.year}`); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!(typeof req.body.displacement === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, `bad request, request property \"displacement\" must be of type number. You supplied type: ${typeof req.body.displacement}`); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!(typeof req.body.color === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, `bad request, request property \"color\" must be of type string. You supplied type: ${typeof req.body.color}`); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[32]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[33]++;\n\n\n  storage.addTrialsBike(trialsBike).\n  then(() => {/* istanbul ignore next */cov_ratewsw8z.f[3]++;cov_ratewsw8z.s[34]++;\n    sendJSON(res, 200, trialsBike);\n  }).\n  catch(() => {/* istanbul ignore next */cov_ratewsw8z.f[4]++;cov_ratewsw8z.s[35]++;\n    sendBadStatus(res, 500, 'SERVER_ERROR');\n  });\n}","timestamp":"2017-12-08T02:30:00.954Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, request property \"color\" must be of type string. You supplied type: number.","timestamp":"2017-12-08T02:30:00.954Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-08T02:30:00.956Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-08T02:30:00.956Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-08T02:30:00.956Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-08T02:30:00.956Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[5]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[37]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[39]++;\n    storage.fetchTrialsBike(id).\n    then(trialsBike => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[40]++;\n      sendJSON(res, 200, trialsBike);\n    }).\n    catch(() => {/* istanbul ignore next */cov_ratewsw8z.f[7]++;cov_ratewsw8z.s[41]++;\n      sendBadStatus(res, 404, `No bike with id \"${id}\".`);\n    });\n  } else {/* istanbul ignore next */cov_ratewsw8z.b[5][1]++;cov_ratewsw8z.s[42]++;\n    storage.fetchAllTrialsBikes().\n    then(trialsBikes => {/* istanbul ignore next */cov_ratewsw8z.f[8]++;cov_ratewsw8z.s[43]++;\n      sendJSON(res, 200, trialsBikes);\n    });\n  }\n}","timestamp":"2017-12-08T02:30:00.956Z"}
{"level":"verbose","message":"STORAGE - Fetching array from database","timestamp":"2017-12-08T02:30:00.956Z"}
{"level":"info","message":"Responding with a 200 code and the following data:","timestamp":"2017-12-08T02:30:00.957Z"}
[{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"30499500-dbbd-11e7-afeb-8dad6ed2e683","timestamp":"2017-12-08T02:12:06.352Z"},{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"5bc52c80-dbbd-11e7-8ad6-b79d84451076","timestamp":"2017-12-08T02:13:19.304Z"},{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"b0c9a150-dbbf-11e7-b59b-a745d93f0521","timestamp":"2017-12-08T02:30:00.933Z"}]
{"level":"info","message":"Routing a request.","timestamp":"2017-12-08T02:30:00.959Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes?id=b0c9a150-dbbf-11e7-b59b-a745d93f0521\"","timestamp":"2017-12-08T02:30:00.959Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=b0c9a150-dbbf-11e7-b59b-a745d93f0521\",\"query\":{\"id\":\"b0c9a150-dbbf-11e7-b59b-a745d93f0521\"},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes?id=b0c9a150-dbbf-11e7-b59b-a745d93f0521\",\"href\":\"/api/trials-bikes?id=b0c9a150-dbbf-11e7-b59b-a745d93f0521\"}","timestamp":"2017-12-08T02:30:00.959Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-08T02:30:00.959Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[5]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[37]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[39]++;\n    storage.fetchTrialsBike(id).\n    then(trialsBike => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[40]++;\n      sendJSON(res, 200, trialsBike);\n    }).\n    catch(() => {/* istanbul ignore next */cov_ratewsw8z.f[7]++;cov_ratewsw8z.s[41]++;\n      sendBadStatus(res, 404, `No bike with id \"${id}\".`);\n    });\n  } else {/* istanbul ignore next */cov_ratewsw8z.b[5][1]++;cov_ratewsw8z.s[42]++;\n    storage.fetchAllTrialsBikes().\n    then(trialsBikes => {/* istanbul ignore next */cov_ratewsw8z.f[8]++;cov_ratewsw8z.s[43]++;\n      sendJSON(res, 200, trialsBikes);\n    });\n  }\n}","timestamp":"2017-12-08T02:30:00.959Z"}
{"level":"verbose","message":"STORAGE - fetching trials bike with id b0c9a150-dbbf-11e7-b59b-a745d93f0521.","timestamp":"2017-12-08T02:30:00.959Z"}
{"level":"verbose","message":"STORAGE - Fetching array from database","timestamp":"2017-12-08T02:30:00.960Z"}
{"level":"info","message":"Responding with a 200 code and the following data:","timestamp":"2017-12-08T02:30:00.960Z"}
{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"b0c9a150-dbbf-11e7-b59b-a745d93f0521","timestamp":"2017-12-08T02:30:00.960Z","level":"info","message":""}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-08T02:30:00.962Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes?id=hamburger\"","timestamp":"2017-12-08T02:30:00.962Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=hamburger\",\"query\":{\"id\":\"hamburger\"},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes?id=hamburger\",\"href\":\"/api/trials-bikes?id=hamburger\"}","timestamp":"2017-12-08T02:30:00.962Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-08T02:30:00.962Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[5]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[37]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[39]++;\n    storage.fetchTrialsBike(id).\n    then(trialsBike => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[40]++;\n      sendJSON(res, 200, trialsBike);\n    }).\n    catch(() => {/* istanbul ignore next */cov_ratewsw8z.f[7]++;cov_ratewsw8z.s[41]++;\n      sendBadStatus(res, 404, `No bike with id \"${id}\".`);\n    });\n  } else {/* istanbul ignore next */cov_ratewsw8z.b[5][1]++;cov_ratewsw8z.s[42]++;\n    storage.fetchAllTrialsBikes().\n    then(trialsBikes => {/* istanbul ignore next */cov_ratewsw8z.f[8]++;cov_ratewsw8z.s[43]++;\n      sendJSON(res, 200, trialsBikes);\n    });\n  }\n}","timestamp":"2017-12-08T02:30:00.962Z"}
{"level":"verbose","message":"STORAGE - fetching trials bike with id hamburger.","timestamp":"2017-12-08T02:30:00.962Z"}
{"level":"verbose","message":"STORAGE - Fetching array from database","timestamp":"2017-12-08T02:30:00.962Z"}
{"level":"info","message":"Responding with a 404 code due to No bike with id \"hamburger\"..","timestamp":"2017-12-08T02:30:00.963Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-08T02:30:00.965Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes?id=b0c9a150-dbbf-11e7-b59b-a745d93f0521\"","timestamp":"2017-12-08T02:30:00.965Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=b0c9a150-dbbf-11e7-b59b-a745d93f0521\",\"query\":{\"id\":\"b0c9a150-dbbf-11e7-b59b-a745d93f0521\"},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes?id=b0c9a150-dbbf-11e7-b59b-a745d93f0521\",\"href\":\"/api/trials-bikes?id=b0c9a150-dbbf-11e7-b59b-a745d93f0521\"}","timestamp":"2017-12-08T02:30:00.965Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-08T02:30:00.965Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[9]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[45]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[46]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[6][0]++;cov_ratewsw8z.s[47]++;\n    storage.deleteTrialsBike(id).\n    then(() => {/* istanbul ignore next */cov_ratewsw8z.f[10]++;cov_ratewsw8z.s[48]++;\n      logger.log('info', `Bike deleted, responding with a 204 code.`); /* istanbul ignore next */cov_ratewsw8z.s[49]++;\n      res.writeHead(204); /* istanbul ignore next */cov_ratewsw8z.s[50]++;\n      res.end();\n    }).\n    catch(() => {/* istanbul ignore next */cov_ratewsw8z.f[11]++;cov_ratewsw8z.s[51]++;\n      sendBadStatus(res, 404, `No bike with id \"${id}\".`);\n    });\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[6][1]++;cov_ratewsw8z.s[52]++;sendBadStatus(res, 400, `bad request, no id.`);}\n}","timestamp":"2017-12-08T02:30:00.965Z"}
{"level":"verbose","message":"STORAGE - removing trials bike with id b0c9a150-dbbf-11e7-b59b-a745d93f0521","timestamp":"2017-12-08T02:30:00.965Z"}
{"level":"verbose","message":"STORAGE - Fetching array from database","timestamp":"2017-12-08T02:30:00.965Z"}
{"level":"info","message":"Bike deleted, responding with a 204 code.","timestamp":"2017-12-08T02:30:00.966Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-08T02:30:00.967Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-08T02:30:00.967Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-08T02:30:00.967Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-08T02:30:00.967Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[9]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[45]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[46]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[6][0]++;cov_ratewsw8z.s[47]++;\n    storage.deleteTrialsBike(id).\n    then(() => {/* istanbul ignore next */cov_ratewsw8z.f[10]++;cov_ratewsw8z.s[48]++;\n      logger.log('info', `Bike deleted, responding with a 204 code.`); /* istanbul ignore next */cov_ratewsw8z.s[49]++;\n      res.writeHead(204); /* istanbul ignore next */cov_ratewsw8z.s[50]++;\n      res.end();\n    }).\n    catch(() => {/* istanbul ignore next */cov_ratewsw8z.f[11]++;cov_ratewsw8z.s[51]++;\n      sendBadStatus(res, 404, `No bike with id \"${id}\".`);\n    });\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[6][1]++;cov_ratewsw8z.s[52]++;sendBadStatus(res, 400, `bad request, no id.`);}\n}","timestamp":"2017-12-08T02:30:00.967Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, no id..","timestamp":"2017-12-08T02:30:00.968Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-08T02:30:00.969Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes?id=hotdogs\"","timestamp":"2017-12-08T02:30:00.969Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=hotdogs\",\"query\":{\"id\":\"hotdogs\"},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes?id=hotdogs\",\"href\":\"/api/trials-bikes?id=hotdogs\"}","timestamp":"2017-12-08T02:30:00.969Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-08T02:30:00.969Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[9]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[45]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[46]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[6][0]++;cov_ratewsw8z.s[47]++;\n    storage.deleteTrialsBike(id).\n    then(() => {/* istanbul ignore next */cov_ratewsw8z.f[10]++;cov_ratewsw8z.s[48]++;\n      logger.log('info', `Bike deleted, responding with a 204 code.`); /* istanbul ignore next */cov_ratewsw8z.s[49]++;\n      res.writeHead(204); /* istanbul ignore next */cov_ratewsw8z.s[50]++;\n      res.end();\n    }).\n    catch(() => {/* istanbul ignore next */cov_ratewsw8z.f[11]++;cov_ratewsw8z.s[51]++;\n      sendBadStatus(res, 404, `No bike with id \"${id}\".`);\n    });\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[6][1]++;cov_ratewsw8z.s[52]++;sendBadStatus(res, 400, `bad request, no id.`);}\n}","timestamp":"2017-12-08T02:30:00.969Z"}
{"level":"verbose","message":"STORAGE - removing trials bike with id hotdogs","timestamp":"2017-12-08T02:30:00.969Z"}
{"level":"verbose","message":"STORAGE - Fetching array from database","timestamp":"2017-12-08T02:30:00.969Z"}
{"level":"info","message":"Responding with a 404 code due to No bike with id \"hotdogs\"..","timestamp":"2017-12-08T02:30:00.970Z"}
{"level":"info","message":"Adding a POST url and callback.","timestamp":"2017-12-08T05:03:52.650Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-08T05:03:52.651Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[2]++;cov_ratewsw8z.s[17]++;\n  if (!(typeof req.body.make === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[18]++;\n    sendBadStatus(res, 400, `bad request, request property \"make\" must be of type string. You supplied type: ${typeof req.body.make}`); /* istanbul ignore next */cov_ratewsw8z.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[20]++;\n\n  if (!(typeof req.body.model === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, `bad request, request property \"model\" must be of type string. You supplied type: ${typeof req.body.model}`); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!(typeof req.body.year === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, `bad request, request property \"year\" must be of type number. You supplied type: ${typeof req.body.year}`); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!(typeof req.body.displacement === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, `bad request, request property \"displacement\" must be of type number. You supplied type: ${typeof req.body.displacement}`); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!(typeof req.body.color === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, `bad request, request property \"color\" must be of type string. You supplied type: ${typeof req.body.color}`); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[32]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[33]++;\n\n\n  storage.addTrialsBike(trialsBike).\n  then(() => {/* istanbul ignore next */cov_ratewsw8z.f[3]++;cov_ratewsw8z.s[34]++;\n    sendJSON(res, 200, trialsBike);\n  }).\n  catch(() => {/* istanbul ignore next */cov_ratewsw8z.f[4]++;cov_ratewsw8z.s[35]++;\n    sendBadStatus(res, 500, 'SERVER_ERROR');\n  });\n}","timestamp":"2017-12-08T05:03:52.651Z"}
{"level":"info","message":"Adding a GET url and callback.","timestamp":"2017-12-08T05:03:52.651Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-08T05:03:52.651Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[5]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[37]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[39]++;\n    storage.fetchTrialsBike(id).\n    then(trialsBike => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[40]++;\n      sendJSON(res, 200, trialsBike);\n    }).\n    catch(() => {/* istanbul ignore next */cov_ratewsw8z.f[7]++;cov_ratewsw8z.s[41]++;\n      sendBadStatus(res, 404, `No bike with id \"${id}\".`);\n    });\n  } else {/* istanbul ignore next */cov_ratewsw8z.b[5][1]++;cov_ratewsw8z.s[42]++;\n    storage.fetchAllTrialsBikes().\n    then(trialsBikes => {/* istanbul ignore next */cov_ratewsw8z.f[8]++;cov_ratewsw8z.s[43]++;\n      sendJSON(res, 200, trialsBikes);\n    });\n  }\n}","timestamp":"2017-12-08T05:03:52.651Z"}
{"level":"info","message":"Adding a DELETE url and callback.","timestamp":"2017-12-08T05:03:52.651Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-08T05:03:52.651Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[9]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[45]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[46]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[6][0]++;cov_ratewsw8z.s[47]++;\n    storage.deleteTrialsBike(id).\n    then(() => {/* istanbul ignore next */cov_ratewsw8z.f[10]++;cov_ratewsw8z.s[48]++;\n      logger.log('info', `Bike deleted, responding with a 204 code.`); /* istanbul ignore next */cov_ratewsw8z.s[49]++;\n      res.writeHead(204); /* istanbul ignore next */cov_ratewsw8z.s[50]++;\n      res.end();\n    }).\n    catch(() => {/* istanbul ignore next */cov_ratewsw8z.f[11]++;cov_ratewsw8z.s[51]++;\n      sendBadStatus(res, 404, `No bike with id \"${id}\".`);\n    });\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[6][1]++;cov_ratewsw8z.s[52]++;sendBadStatus(res, 400, `bad request, no id.`);}\n}","timestamp":"2017-12-08T05:03:52.651Z"}
{"level":"info","message":"Server is up on port 3000.","timestamp":"2017-12-08T05:03:52.685Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-08T05:03:52.696Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-08T05:03:52.696Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-08T05:03:52.696Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-08T05:03:52.697Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[2]++;cov_ratewsw8z.s[17]++;\n  if (!(typeof req.body.make === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[18]++;\n    sendBadStatus(res, 400, `bad request, request property \"make\" must be of type string. You supplied type: ${typeof req.body.make}`); /* istanbul ignore next */cov_ratewsw8z.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[20]++;\n\n  if (!(typeof req.body.model === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, `bad request, request property \"model\" must be of type string. You supplied type: ${typeof req.body.model}`); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!(typeof req.body.year === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, `bad request, request property \"year\" must be of type number. You supplied type: ${typeof req.body.year}`); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!(typeof req.body.displacement === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, `bad request, request property \"displacement\" must be of type number. You supplied type: ${typeof req.body.displacement}`); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!(typeof req.body.color === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, `bad request, request property \"color\" must be of type string. You supplied type: ${typeof req.body.color}`); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[32]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[33]++;\n\n\n  storage.addTrialsBike(trialsBike).\n  then(() => {/* istanbul ignore next */cov_ratewsw8z.f[3]++;cov_ratewsw8z.s[34]++;\n    sendJSON(res, 200, trialsBike);\n  }).\n  catch(() => {/* istanbul ignore next */cov_ratewsw8z.f[4]++;cov_ratewsw8z.s[35]++;\n    sendBadStatus(res, 500, 'SERVER_ERROR');\n  });\n}","timestamp":"2017-12-08T05:03:52.697Z"}
{"level":"verbose","message":"STORAGE - adding the following bike:","timestamp":"2017-12-08T05:03:52.698Z"}
{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"2f590690-dbd5-11e7-bbb8-9d54f97cc9e1","timestamp":"2017-12-08T05:03:52.698Z","level":"verbose","message":""}
{"level":"verbose","message":"STORAGE - Fetching array from database","timestamp":"2017-12-08T05:03:52.698Z"}
{"level":"info","message":"Responding with a 200 code and the following data:","timestamp":"2017-12-08T05:03:52.700Z"}
{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"2f590690-dbd5-11e7-bbb8-9d54f97cc9e1","timestamp":"2017-12-08T05:03:52.700Z","level":"info","message":""}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-08T05:03:52.708Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-08T05:03:52.709Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-08T05:03:52.709Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T05:03:52.709Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.req.on (/Users/robertreed/Documents/programming/cf/401/lab/08-09-vanilla-rest-server/lab-rob/lib/req-parser.js:25:27)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-08T05:03:52.709Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-08T05:03:52.712Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-08T05:03:52.712Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-08T05:03:52.712Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-08T05:03:52.712Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[2]++;cov_ratewsw8z.s[17]++;\n  if (!(typeof req.body.make === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[18]++;\n    sendBadStatus(res, 400, `bad request, request property \"make\" must be of type string. You supplied type: ${typeof req.body.make}`); /* istanbul ignore next */cov_ratewsw8z.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[20]++;\n\n  if (!(typeof req.body.model === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, `bad request, request property \"model\" must be of type string. You supplied type: ${typeof req.body.model}`); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!(typeof req.body.year === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, `bad request, request property \"year\" must be of type number. You supplied type: ${typeof req.body.year}`); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!(typeof req.body.displacement === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, `bad request, request property \"displacement\" must be of type number. You supplied type: ${typeof req.body.displacement}`); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!(typeof req.body.color === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, `bad request, request property \"color\" must be of type string. You supplied type: ${typeof req.body.color}`); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[32]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[33]++;\n\n\n  storage.addTrialsBike(trialsBike).\n  then(() => {/* istanbul ignore next */cov_ratewsw8z.f[3]++;cov_ratewsw8z.s[34]++;\n    sendJSON(res, 200, trialsBike);\n  }).\n  catch(() => {/* istanbul ignore next */cov_ratewsw8z.f[4]++;cov_ratewsw8z.s[35]++;\n    sendBadStatus(res, 500, 'SERVER_ERROR');\n  });\n}","timestamp":"2017-12-08T05:03:52.712Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, request property \"make\" must be of type string. You supplied type: undefined.","timestamp":"2017-12-08T05:03:52.712Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-08T05:03:52.714Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-08T05:03:52.714Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-08T05:03:52.715Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-08T05:03:52.715Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[2]++;cov_ratewsw8z.s[17]++;\n  if (!(typeof req.body.make === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[18]++;\n    sendBadStatus(res, 400, `bad request, request property \"make\" must be of type string. You supplied type: ${typeof req.body.make}`); /* istanbul ignore next */cov_ratewsw8z.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[20]++;\n\n  if (!(typeof req.body.model === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, `bad request, request property \"model\" must be of type string. You supplied type: ${typeof req.body.model}`); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!(typeof req.body.year === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, `bad request, request property \"year\" must be of type number. You supplied type: ${typeof req.body.year}`); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!(typeof req.body.displacement === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, `bad request, request property \"displacement\" must be of type number. You supplied type: ${typeof req.body.displacement}`); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!(typeof req.body.color === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, `bad request, request property \"color\" must be of type string. You supplied type: ${typeof req.body.color}`); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[32]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[33]++;\n\n\n  storage.addTrialsBike(trialsBike).\n  then(() => {/* istanbul ignore next */cov_ratewsw8z.f[3]++;cov_ratewsw8z.s[34]++;\n    sendJSON(res, 200, trialsBike);\n  }).\n  catch(() => {/* istanbul ignore next */cov_ratewsw8z.f[4]++;cov_ratewsw8z.s[35]++;\n    sendBadStatus(res, 500, 'SERVER_ERROR');\n  });\n}","timestamp":"2017-12-08T05:03:52.715Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, request property \"model\" must be of type string. You supplied type: undefined.","timestamp":"2017-12-08T05:03:52.715Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-08T05:03:52.717Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-08T05:03:52.717Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-08T05:03:52.717Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-08T05:03:52.717Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[2]++;cov_ratewsw8z.s[17]++;\n  if (!(typeof req.body.make === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[18]++;\n    sendBadStatus(res, 400, `bad request, request property \"make\" must be of type string. You supplied type: ${typeof req.body.make}`); /* istanbul ignore next */cov_ratewsw8z.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[20]++;\n\n  if (!(typeof req.body.model === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, `bad request, request property \"model\" must be of type string. You supplied type: ${typeof req.body.model}`); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!(typeof req.body.year === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, `bad request, request property \"year\" must be of type number. You supplied type: ${typeof req.body.year}`); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!(typeof req.body.displacement === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, `bad request, request property \"displacement\" must be of type number. You supplied type: ${typeof req.body.displacement}`); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!(typeof req.body.color === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, `bad request, request property \"color\" must be of type string. You supplied type: ${typeof req.body.color}`); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[32]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[33]++;\n\n\n  storage.addTrialsBike(trialsBike).\n  then(() => {/* istanbul ignore next */cov_ratewsw8z.f[3]++;cov_ratewsw8z.s[34]++;\n    sendJSON(res, 200, trialsBike);\n  }).\n  catch(() => {/* istanbul ignore next */cov_ratewsw8z.f[4]++;cov_ratewsw8z.s[35]++;\n    sendBadStatus(res, 500, 'SERVER_ERROR');\n  });\n}","timestamp":"2017-12-08T05:03:52.717Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, request property \"year\" must be of type number. You supplied type: boolean.","timestamp":"2017-12-08T05:03:52.717Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-08T05:03:52.720Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-08T05:03:52.720Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-08T05:03:52.720Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-08T05:03:52.720Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[2]++;cov_ratewsw8z.s[17]++;\n  if (!(typeof req.body.make === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[18]++;\n    sendBadStatus(res, 400, `bad request, request property \"make\" must be of type string. You supplied type: ${typeof req.body.make}`); /* istanbul ignore next */cov_ratewsw8z.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[20]++;\n\n  if (!(typeof req.body.model === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, `bad request, request property \"model\" must be of type string. You supplied type: ${typeof req.body.model}`); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!(typeof req.body.year === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, `bad request, request property \"year\" must be of type number. You supplied type: ${typeof req.body.year}`); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!(typeof req.body.displacement === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, `bad request, request property \"displacement\" must be of type number. You supplied type: ${typeof req.body.displacement}`); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!(typeof req.body.color === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, `bad request, request property \"color\" must be of type string. You supplied type: ${typeof req.body.color}`); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[32]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[33]++;\n\n\n  storage.addTrialsBike(trialsBike).\n  then(() => {/* istanbul ignore next */cov_ratewsw8z.f[3]++;cov_ratewsw8z.s[34]++;\n    sendJSON(res, 200, trialsBike);\n  }).\n  catch(() => {/* istanbul ignore next */cov_ratewsw8z.f[4]++;cov_ratewsw8z.s[35]++;\n    sendBadStatus(res, 500, 'SERVER_ERROR');\n  });\n}","timestamp":"2017-12-08T05:03:52.720Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, request property \"displacement\" must be of type number. You supplied type: object.","timestamp":"2017-12-08T05:03:52.720Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-08T05:03:52.722Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-08T05:03:52.722Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-08T05:03:52.722Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-08T05:03:52.722Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[2]++;cov_ratewsw8z.s[17]++;\n  if (!(typeof req.body.make === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[18]++;\n    sendBadStatus(res, 400, `bad request, request property \"make\" must be of type string. You supplied type: ${typeof req.body.make}`); /* istanbul ignore next */cov_ratewsw8z.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[20]++;\n\n  if (!(typeof req.body.model === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, `bad request, request property \"model\" must be of type string. You supplied type: ${typeof req.body.model}`); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!(typeof req.body.year === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, `bad request, request property \"year\" must be of type number. You supplied type: ${typeof req.body.year}`); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!(typeof req.body.displacement === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, `bad request, request property \"displacement\" must be of type number. You supplied type: ${typeof req.body.displacement}`); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!(typeof req.body.color === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, `bad request, request property \"color\" must be of type string. You supplied type: ${typeof req.body.color}`); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[32]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[33]++;\n\n\n  storage.addTrialsBike(trialsBike).\n  then(() => {/* istanbul ignore next */cov_ratewsw8z.f[3]++;cov_ratewsw8z.s[34]++;\n    sendJSON(res, 200, trialsBike);\n  }).\n  catch(() => {/* istanbul ignore next */cov_ratewsw8z.f[4]++;cov_ratewsw8z.s[35]++;\n    sendBadStatus(res, 500, 'SERVER_ERROR');\n  });\n}","timestamp":"2017-12-08T05:03:52.722Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, request property \"color\" must be of type string. You supplied type: number.","timestamp":"2017-12-08T05:03:52.722Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-08T05:03:52.724Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-08T05:03:52.724Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-08T05:03:52.724Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-08T05:03:52.724Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[5]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[37]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[39]++;\n    storage.fetchTrialsBike(id).\n    then(trialsBike => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[40]++;\n      sendJSON(res, 200, trialsBike);\n    }).\n    catch(() => {/* istanbul ignore next */cov_ratewsw8z.f[7]++;cov_ratewsw8z.s[41]++;\n      sendBadStatus(res, 404, `No bike with id \"${id}\".`);\n    });\n  } else {/* istanbul ignore next */cov_ratewsw8z.b[5][1]++;cov_ratewsw8z.s[42]++;\n    storage.fetchAllTrialsBikes().\n    then(trialsBikes => {/* istanbul ignore next */cov_ratewsw8z.f[8]++;cov_ratewsw8z.s[43]++;\n      sendJSON(res, 200, trialsBikes);\n    });\n  }\n}","timestamp":"2017-12-08T05:03:52.724Z"}
{"level":"verbose","message":"STORAGE - Fetching array from database","timestamp":"2017-12-08T05:03:52.724Z"}
{"level":"info","message":"Responding with a 200 code and the following data:","timestamp":"2017-12-08T05:03:52.724Z"}
[{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"30499500-dbbd-11e7-afeb-8dad6ed2e683","timestamp":"2017-12-08T02:12:06.352Z"},{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"5bc52c80-dbbd-11e7-8ad6-b79d84451076","timestamp":"2017-12-08T02:13:19.304Z"},{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"2f590690-dbd5-11e7-bbb8-9d54f97cc9e1","timestamp":"2017-12-08T05:03:52.698Z"}]
{"level":"info","message":"Routing a request.","timestamp":"2017-12-08T05:03:52.727Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes?id=2f590690-dbd5-11e7-bbb8-9d54f97cc9e1\"","timestamp":"2017-12-08T05:03:52.727Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=2f590690-dbd5-11e7-bbb8-9d54f97cc9e1\",\"query\":{\"id\":\"2f590690-dbd5-11e7-bbb8-9d54f97cc9e1\"},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes?id=2f590690-dbd5-11e7-bbb8-9d54f97cc9e1\",\"href\":\"/api/trials-bikes?id=2f590690-dbd5-11e7-bbb8-9d54f97cc9e1\"}","timestamp":"2017-12-08T05:03:52.727Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-08T05:03:52.727Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[5]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[37]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[39]++;\n    storage.fetchTrialsBike(id).\n    then(trialsBike => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[40]++;\n      sendJSON(res, 200, trialsBike);\n    }).\n    catch(() => {/* istanbul ignore next */cov_ratewsw8z.f[7]++;cov_ratewsw8z.s[41]++;\n      sendBadStatus(res, 404, `No bike with id \"${id}\".`);\n    });\n  } else {/* istanbul ignore next */cov_ratewsw8z.b[5][1]++;cov_ratewsw8z.s[42]++;\n    storage.fetchAllTrialsBikes().\n    then(trialsBikes => {/* istanbul ignore next */cov_ratewsw8z.f[8]++;cov_ratewsw8z.s[43]++;\n      sendJSON(res, 200, trialsBikes);\n    });\n  }\n}","timestamp":"2017-12-08T05:03:52.727Z"}
{"level":"verbose","message":"STORAGE - fetching trials bike with id 2f590690-dbd5-11e7-bbb8-9d54f97cc9e1.","timestamp":"2017-12-08T05:03:52.728Z"}
{"level":"verbose","message":"STORAGE - Fetching array from database","timestamp":"2017-12-08T05:03:52.728Z"}
{"level":"info","message":"Responding with a 200 code and the following data:","timestamp":"2017-12-08T05:03:52.728Z"}
{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"2f590690-dbd5-11e7-bbb8-9d54f97cc9e1","timestamp":"2017-12-08T05:03:52.728Z","level":"info","message":""}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-08T05:03:52.732Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes?id=hamburger\"","timestamp":"2017-12-08T05:03:52.732Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=hamburger\",\"query\":{\"id\":\"hamburger\"},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes?id=hamburger\",\"href\":\"/api/trials-bikes?id=hamburger\"}","timestamp":"2017-12-08T05:03:52.732Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-08T05:03:52.732Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[5]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[37]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[39]++;\n    storage.fetchTrialsBike(id).\n    then(trialsBike => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[40]++;\n      sendJSON(res, 200, trialsBike);\n    }).\n    catch(() => {/* istanbul ignore next */cov_ratewsw8z.f[7]++;cov_ratewsw8z.s[41]++;\n      sendBadStatus(res, 404, `No bike with id \"${id}\".`);\n    });\n  } else {/* istanbul ignore next */cov_ratewsw8z.b[5][1]++;cov_ratewsw8z.s[42]++;\n    storage.fetchAllTrialsBikes().\n    then(trialsBikes => {/* istanbul ignore next */cov_ratewsw8z.f[8]++;cov_ratewsw8z.s[43]++;\n      sendJSON(res, 200, trialsBikes);\n    });\n  }\n}","timestamp":"2017-12-08T05:03:52.733Z"}
{"level":"verbose","message":"STORAGE - fetching trials bike with id hamburger.","timestamp":"2017-12-08T05:03:52.733Z"}
{"level":"verbose","message":"STORAGE - Fetching array from database","timestamp":"2017-12-08T05:03:52.733Z"}
{"level":"info","message":"Responding with a 404 code due to No bike with id \"hamburger\"..","timestamp":"2017-12-08T05:03:52.733Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-08T05:03:52.735Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes?id=2f590690-dbd5-11e7-bbb8-9d54f97cc9e1\"","timestamp":"2017-12-08T05:03:52.735Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=2f590690-dbd5-11e7-bbb8-9d54f97cc9e1\",\"query\":{\"id\":\"2f590690-dbd5-11e7-bbb8-9d54f97cc9e1\"},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes?id=2f590690-dbd5-11e7-bbb8-9d54f97cc9e1\",\"href\":\"/api/trials-bikes?id=2f590690-dbd5-11e7-bbb8-9d54f97cc9e1\"}","timestamp":"2017-12-08T05:03:52.735Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-08T05:03:52.735Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[9]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[45]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[46]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[6][0]++;cov_ratewsw8z.s[47]++;\n    storage.deleteTrialsBike(id).\n    then(() => {/* istanbul ignore next */cov_ratewsw8z.f[10]++;cov_ratewsw8z.s[48]++;\n      logger.log('info', `Bike deleted, responding with a 204 code.`); /* istanbul ignore next */cov_ratewsw8z.s[49]++;\n      res.writeHead(204); /* istanbul ignore next */cov_ratewsw8z.s[50]++;\n      res.end();\n    }).\n    catch(() => {/* istanbul ignore next */cov_ratewsw8z.f[11]++;cov_ratewsw8z.s[51]++;\n      sendBadStatus(res, 404, `No bike with id \"${id}\".`);\n    });\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[6][1]++;cov_ratewsw8z.s[52]++;sendBadStatus(res, 400, `bad request, no id.`);}\n}","timestamp":"2017-12-08T05:03:52.735Z"}
{"level":"verbose","message":"STORAGE - removing trials bike with id 2f590690-dbd5-11e7-bbb8-9d54f97cc9e1","timestamp":"2017-12-08T05:03:52.735Z"}
{"level":"verbose","message":"STORAGE - Fetching array from database","timestamp":"2017-12-08T05:03:52.735Z"}
{"level":"info","message":"Bike deleted, responding with a 204 code.","timestamp":"2017-12-08T05:03:52.736Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-08T05:03:52.737Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-08T05:03:52.737Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-08T05:03:52.737Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-08T05:03:52.737Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[9]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[45]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[46]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[6][0]++;cov_ratewsw8z.s[47]++;\n    storage.deleteTrialsBike(id).\n    then(() => {/* istanbul ignore next */cov_ratewsw8z.f[10]++;cov_ratewsw8z.s[48]++;\n      logger.log('info', `Bike deleted, responding with a 204 code.`); /* istanbul ignore next */cov_ratewsw8z.s[49]++;\n      res.writeHead(204); /* istanbul ignore next */cov_ratewsw8z.s[50]++;\n      res.end();\n    }).\n    catch(() => {/* istanbul ignore next */cov_ratewsw8z.f[11]++;cov_ratewsw8z.s[51]++;\n      sendBadStatus(res, 404, `No bike with id \"${id}\".`);\n    });\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[6][1]++;cov_ratewsw8z.s[52]++;sendBadStatus(res, 400, `bad request, no id.`);}\n}","timestamp":"2017-12-08T05:03:52.738Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, no id..","timestamp":"2017-12-08T05:03:52.738Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-08T05:03:52.739Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes?id=hotdogs\"","timestamp":"2017-12-08T05:03:52.739Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=hotdogs\",\"query\":{\"id\":\"hotdogs\"},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes?id=hotdogs\",\"href\":\"/api/trials-bikes?id=hotdogs\"}","timestamp":"2017-12-08T05:03:52.739Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-08T05:03:52.739Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[9]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[45]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[46]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[6][0]++;cov_ratewsw8z.s[47]++;\n    storage.deleteTrialsBike(id).\n    then(() => {/* istanbul ignore next */cov_ratewsw8z.f[10]++;cov_ratewsw8z.s[48]++;\n      logger.log('info', `Bike deleted, responding with a 204 code.`); /* istanbul ignore next */cov_ratewsw8z.s[49]++;\n      res.writeHead(204); /* istanbul ignore next */cov_ratewsw8z.s[50]++;\n      res.end();\n    }).\n    catch(() => {/* istanbul ignore next */cov_ratewsw8z.f[11]++;cov_ratewsw8z.s[51]++;\n      sendBadStatus(res, 404, `No bike with id \"${id}\".`);\n    });\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[6][1]++;cov_ratewsw8z.s[52]++;sendBadStatus(res, 400, `bad request, no id.`);}\n}","timestamp":"2017-12-08T05:03:52.739Z"}
{"level":"verbose","message":"STORAGE - removing trials bike with id hotdogs","timestamp":"2017-12-08T05:03:52.739Z"}
{"level":"verbose","message":"STORAGE - Fetching array from database","timestamp":"2017-12-08T05:03:52.739Z"}
{"level":"info","message":"Responding with a 404 code due to No bike with id \"hotdogs\"..","timestamp":"2017-12-08T05:03:52.740Z"}
{"level":"info","message":"Adding a POST url and callback.","timestamp":"2017-12-08T05:04:25.724Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-08T05:04:25.724Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[2]++;cov_ratewsw8z.s[17]++;\n  if (!(typeof req.body.make === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[18]++;\n    sendBadStatus(res, 400, `bad request, request property \"make\" must be of type string. You supplied type: ${typeof req.body.make}`); /* istanbul ignore next */cov_ratewsw8z.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[20]++;\n\n  if (!(typeof req.body.model === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, `bad request, request property \"model\" must be of type string. You supplied type: ${typeof req.body.model}`); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!(typeof req.body.year === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, `bad request, request property \"year\" must be of type number. You supplied type: ${typeof req.body.year}`); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!(typeof req.body.displacement === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, `bad request, request property \"displacement\" must be of type number. You supplied type: ${typeof req.body.displacement}`); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!(typeof req.body.color === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, `bad request, request property \"color\" must be of type string. You supplied type: ${typeof req.body.color}`); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[32]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[33]++;\n\n\n  storage.addTrialsBike(trialsBike).\n  then(() => {/* istanbul ignore next */cov_ratewsw8z.f[3]++;cov_ratewsw8z.s[34]++;\n    sendJSON(res, 200, trialsBike);\n  }).\n  catch(() => {/* istanbul ignore next */cov_ratewsw8z.f[4]++;cov_ratewsw8z.s[35]++;\n    sendBadStatus(res, 500, 'SERVER_ERROR');\n  });\n}","timestamp":"2017-12-08T05:04:25.724Z"}
{"level":"info","message":"Adding a GET url and callback.","timestamp":"2017-12-08T05:04:25.725Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-08T05:04:25.725Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[5]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[37]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[39]++;\n    storage.fetchTrialsBike(id).\n    then(trialsBike => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[40]++;\n      sendJSON(res, 200, trialsBike);\n    }).\n    catch(() => {/* istanbul ignore next */cov_ratewsw8z.f[7]++;cov_ratewsw8z.s[41]++;\n      sendBadStatus(res, 404, `No bike with id \"${id}\".`);\n    });\n  } else {/* istanbul ignore next */cov_ratewsw8z.b[5][1]++;cov_ratewsw8z.s[42]++;\n    storage.fetchAllTrialsBikes().\n    then(trialsBikes => {/* istanbul ignore next */cov_ratewsw8z.f[8]++;cov_ratewsw8z.s[43]++;\n      sendJSON(res, 200, trialsBikes);\n    });\n  }\n}","timestamp":"2017-12-08T05:04:25.725Z"}
{"level":"info","message":"Adding a DELETE url and callback.","timestamp":"2017-12-08T05:04:25.725Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-08T05:04:25.725Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[9]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[45]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[46]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[6][0]++;cov_ratewsw8z.s[47]++;\n    storage.deleteTrialsBike(id).\n    then(() => {/* istanbul ignore next */cov_ratewsw8z.f[10]++;cov_ratewsw8z.s[48]++;\n      logger.log('info', `Bike deleted, responding with a 204 code.`); /* istanbul ignore next */cov_ratewsw8z.s[49]++;\n      res.writeHead(204); /* istanbul ignore next */cov_ratewsw8z.s[50]++;\n      res.end();\n    }).\n    catch(() => {/* istanbul ignore next */cov_ratewsw8z.f[11]++;cov_ratewsw8z.s[51]++;\n      sendBadStatus(res, 404, `No bike with id \"${id}\".`);\n    });\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[6][1]++;cov_ratewsw8z.s[52]++;sendBadStatus(res, 400, `bad request, no id.`);}\n}","timestamp":"2017-12-08T05:04:25.725Z"}
{"level":"info","message":"Server is up on port 3000.","timestamp":"2017-12-08T05:04:25.758Z"}
{"level":"verbose","message":"STORAGE_PATH doesn't exist, creating file /Users/robertreed/Documents/programming/cf/401/lab/08-09-vanilla-rest-server/lab-rob/db.json","timestamp":"2017-12-08T05:04:25.766Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-08T05:04:25.770Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-08T05:04:25.771Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-08T05:04:25.771Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-08T05:04:25.771Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[2]++;cov_ratewsw8z.s[17]++;\n  if (!(typeof req.body.make === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[18]++;\n    sendBadStatus(res, 400, `bad request, request property \"make\" must be of type string. You supplied type: ${typeof req.body.make}`); /* istanbul ignore next */cov_ratewsw8z.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[20]++;\n\n  if (!(typeof req.body.model === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, `bad request, request property \"model\" must be of type string. You supplied type: ${typeof req.body.model}`); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!(typeof req.body.year === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, `bad request, request property \"year\" must be of type number. You supplied type: ${typeof req.body.year}`); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!(typeof req.body.displacement === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, `bad request, request property \"displacement\" must be of type number. You supplied type: ${typeof req.body.displacement}`); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!(typeof req.body.color === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, `bad request, request property \"color\" must be of type string. You supplied type: ${typeof req.body.color}`); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[32]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[33]++;\n\n\n  storage.addTrialsBike(trialsBike).\n  then(() => {/* istanbul ignore next */cov_ratewsw8z.f[3]++;cov_ratewsw8z.s[34]++;\n    sendJSON(res, 200, trialsBike);\n  }).\n  catch(() => {/* istanbul ignore next */cov_ratewsw8z.f[4]++;cov_ratewsw8z.s[35]++;\n    sendBadStatus(res, 500, 'SERVER_ERROR');\n  });\n}","timestamp":"2017-12-08T05:04:25.771Z"}
{"level":"verbose","message":"STORAGE - adding the following bike:","timestamp":"2017-12-08T05:04:25.772Z"}
{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"430fdec0-dbd5-11e7-b020-c1d10fa8d217","timestamp":"2017-12-08T05:04:25.772Z","level":"verbose","message":""}
{"level":"verbose","message":"STORAGE - Fetching array from database","timestamp":"2017-12-08T05:04:25.772Z"}
{"level":"info","message":"Responding with a 200 code and the following data:","timestamp":"2017-12-08T05:04:25.774Z"}
{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"430fdec0-dbd5-11e7-b020-c1d10fa8d217","timestamp":"2017-12-08T05:04:25.775Z","level":"info","message":""}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-08T05:04:25.783Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-08T05:04:25.783Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-08T05:04:25.783Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T05:04:25.783Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.req.on (/Users/robertreed/Documents/programming/cf/401/lab/08-09-vanilla-rest-server/lab-rob/lib/req-parser.js:25:27)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-08T05:04:25.783Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-08T05:04:25.786Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-08T05:04:25.786Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-08T05:04:25.786Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-08T05:04:25.786Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[2]++;cov_ratewsw8z.s[17]++;\n  if (!(typeof req.body.make === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[18]++;\n    sendBadStatus(res, 400, `bad request, request property \"make\" must be of type string. You supplied type: ${typeof req.body.make}`); /* istanbul ignore next */cov_ratewsw8z.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[20]++;\n\n  if (!(typeof req.body.model === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, `bad request, request property \"model\" must be of type string. You supplied type: ${typeof req.body.model}`); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!(typeof req.body.year === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, `bad request, request property \"year\" must be of type number. You supplied type: ${typeof req.body.year}`); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!(typeof req.body.displacement === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, `bad request, request property \"displacement\" must be of type number. You supplied type: ${typeof req.body.displacement}`); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!(typeof req.body.color === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, `bad request, request property \"color\" must be of type string. You supplied type: ${typeof req.body.color}`); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[32]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[33]++;\n\n\n  storage.addTrialsBike(trialsBike).\n  then(() => {/* istanbul ignore next */cov_ratewsw8z.f[3]++;cov_ratewsw8z.s[34]++;\n    sendJSON(res, 200, trialsBike);\n  }).\n  catch(() => {/* istanbul ignore next */cov_ratewsw8z.f[4]++;cov_ratewsw8z.s[35]++;\n    sendBadStatus(res, 500, 'SERVER_ERROR');\n  });\n}","timestamp":"2017-12-08T05:04:25.786Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, request property \"make\" must be of type string. You supplied type: undefined.","timestamp":"2017-12-08T05:04:25.786Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-08T05:04:25.788Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-08T05:04:25.788Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-08T05:04:25.788Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-08T05:04:25.788Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[2]++;cov_ratewsw8z.s[17]++;\n  if (!(typeof req.body.make === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[18]++;\n    sendBadStatus(res, 400, `bad request, request property \"make\" must be of type string. You supplied type: ${typeof req.body.make}`); /* istanbul ignore next */cov_ratewsw8z.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[20]++;\n\n  if (!(typeof req.body.model === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, `bad request, request property \"model\" must be of type string. You supplied type: ${typeof req.body.model}`); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!(typeof req.body.year === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, `bad request, request property \"year\" must be of type number. You supplied type: ${typeof req.body.year}`); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!(typeof req.body.displacement === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, `bad request, request property \"displacement\" must be of type number. You supplied type: ${typeof req.body.displacement}`); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!(typeof req.body.color === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, `bad request, request property \"color\" must be of type string. You supplied type: ${typeof req.body.color}`); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[32]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[33]++;\n\n\n  storage.addTrialsBike(trialsBike).\n  then(() => {/* istanbul ignore next */cov_ratewsw8z.f[3]++;cov_ratewsw8z.s[34]++;\n    sendJSON(res, 200, trialsBike);\n  }).\n  catch(() => {/* istanbul ignore next */cov_ratewsw8z.f[4]++;cov_ratewsw8z.s[35]++;\n    sendBadStatus(res, 500, 'SERVER_ERROR');\n  });\n}","timestamp":"2017-12-08T05:04:25.788Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, request property \"model\" must be of type string. You supplied type: undefined.","timestamp":"2017-12-08T05:04:25.789Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-08T05:04:25.790Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-08T05:04:25.790Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-08T05:04:25.790Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-08T05:04:25.790Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[2]++;cov_ratewsw8z.s[17]++;\n  if (!(typeof req.body.make === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[18]++;\n    sendBadStatus(res, 400, `bad request, request property \"make\" must be of type string. You supplied type: ${typeof req.body.make}`); /* istanbul ignore next */cov_ratewsw8z.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[20]++;\n\n  if (!(typeof req.body.model === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, `bad request, request property \"model\" must be of type string. You supplied type: ${typeof req.body.model}`); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!(typeof req.body.year === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, `bad request, request property \"year\" must be of type number. You supplied type: ${typeof req.body.year}`); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!(typeof req.body.displacement === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, `bad request, request property \"displacement\" must be of type number. You supplied type: ${typeof req.body.displacement}`); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!(typeof req.body.color === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, `bad request, request property \"color\" must be of type string. You supplied type: ${typeof req.body.color}`); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[32]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[33]++;\n\n\n  storage.addTrialsBike(trialsBike).\n  then(() => {/* istanbul ignore next */cov_ratewsw8z.f[3]++;cov_ratewsw8z.s[34]++;\n    sendJSON(res, 200, trialsBike);\n  }).\n  catch(() => {/* istanbul ignore next */cov_ratewsw8z.f[4]++;cov_ratewsw8z.s[35]++;\n    sendBadStatus(res, 500, 'SERVER_ERROR');\n  });\n}","timestamp":"2017-12-08T05:04:25.791Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, request property \"year\" must be of type number. You supplied type: boolean.","timestamp":"2017-12-08T05:04:25.791Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-08T05:04:25.792Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-08T05:04:25.792Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-08T05:04:25.792Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-08T05:04:25.792Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[2]++;cov_ratewsw8z.s[17]++;\n  if (!(typeof req.body.make === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[18]++;\n    sendBadStatus(res, 400, `bad request, request property \"make\" must be of type string. You supplied type: ${typeof req.body.make}`); /* istanbul ignore next */cov_ratewsw8z.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[20]++;\n\n  if (!(typeof req.body.model === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, `bad request, request property \"model\" must be of type string. You supplied type: ${typeof req.body.model}`); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!(typeof req.body.year === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, `bad request, request property \"year\" must be of type number. You supplied type: ${typeof req.body.year}`); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!(typeof req.body.displacement === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, `bad request, request property \"displacement\" must be of type number. You supplied type: ${typeof req.body.displacement}`); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!(typeof req.body.color === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, `bad request, request property \"color\" must be of type string. You supplied type: ${typeof req.body.color}`); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[32]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[33]++;\n\n\n  storage.addTrialsBike(trialsBike).\n  then(() => {/* istanbul ignore next */cov_ratewsw8z.f[3]++;cov_ratewsw8z.s[34]++;\n    sendJSON(res, 200, trialsBike);\n  }).\n  catch(() => {/* istanbul ignore next */cov_ratewsw8z.f[4]++;cov_ratewsw8z.s[35]++;\n    sendBadStatus(res, 500, 'SERVER_ERROR');\n  });\n}","timestamp":"2017-12-08T05:04:25.792Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, request property \"displacement\" must be of type number. You supplied type: object.","timestamp":"2017-12-08T05:04:25.792Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-08T05:04:25.794Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-08T05:04:25.794Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-08T05:04:25.794Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-08T05:04:25.794Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[2]++;cov_ratewsw8z.s[17]++;\n  if (!(typeof req.body.make === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[18]++;\n    sendBadStatus(res, 400, `bad request, request property \"make\" must be of type string. You supplied type: ${typeof req.body.make}`); /* istanbul ignore next */cov_ratewsw8z.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[20]++;\n\n  if (!(typeof req.body.model === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, `bad request, request property \"model\" must be of type string. You supplied type: ${typeof req.body.model}`); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!(typeof req.body.year === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, `bad request, request property \"year\" must be of type number. You supplied type: ${typeof req.body.year}`); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!(typeof req.body.displacement === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, `bad request, request property \"displacement\" must be of type number. You supplied type: ${typeof req.body.displacement}`); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!(typeof req.body.color === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, `bad request, request property \"color\" must be of type string. You supplied type: ${typeof req.body.color}`); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[32]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[33]++;\n\n\n  storage.addTrialsBike(trialsBike).\n  then(() => {/* istanbul ignore next */cov_ratewsw8z.f[3]++;cov_ratewsw8z.s[34]++;\n    sendJSON(res, 200, trialsBike);\n  }).\n  catch(() => {/* istanbul ignore next */cov_ratewsw8z.f[4]++;cov_ratewsw8z.s[35]++;\n    sendBadStatus(res, 500, 'SERVER_ERROR');\n  });\n}","timestamp":"2017-12-08T05:04:25.794Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, request property \"color\" must be of type string. You supplied type: number.","timestamp":"2017-12-08T05:04:25.794Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-08T05:04:25.796Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-08T05:04:25.796Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-08T05:04:25.796Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-08T05:04:25.796Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[5]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[37]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[39]++;\n    storage.fetchTrialsBike(id).\n    then(trialsBike => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[40]++;\n      sendJSON(res, 200, trialsBike);\n    }).\n    catch(() => {/* istanbul ignore next */cov_ratewsw8z.f[7]++;cov_ratewsw8z.s[41]++;\n      sendBadStatus(res, 404, `No bike with id \"${id}\".`);\n    });\n  } else {/* istanbul ignore next */cov_ratewsw8z.b[5][1]++;cov_ratewsw8z.s[42]++;\n    storage.fetchAllTrialsBikes().\n    then(trialsBikes => {/* istanbul ignore next */cov_ratewsw8z.f[8]++;cov_ratewsw8z.s[43]++;\n      sendJSON(res, 200, trialsBikes);\n    });\n  }\n}","timestamp":"2017-12-08T05:04:25.796Z"}
{"level":"verbose","message":"STORAGE - Fetching array from database","timestamp":"2017-12-08T05:04:25.796Z"}
{"level":"info","message":"Responding with a 200 code and the following data:","timestamp":"2017-12-08T05:04:25.797Z"}
[{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"430fdec0-dbd5-11e7-b020-c1d10fa8d217","timestamp":"2017-12-08T05:04:25.772Z"}]
{"level":"info","message":"Routing a request.","timestamp":"2017-12-08T05:04:25.799Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes?id=430fdec0-dbd5-11e7-b020-c1d10fa8d217\"","timestamp":"2017-12-08T05:04:25.799Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=430fdec0-dbd5-11e7-b020-c1d10fa8d217\",\"query\":{\"id\":\"430fdec0-dbd5-11e7-b020-c1d10fa8d217\"},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes?id=430fdec0-dbd5-11e7-b020-c1d10fa8d217\",\"href\":\"/api/trials-bikes?id=430fdec0-dbd5-11e7-b020-c1d10fa8d217\"}","timestamp":"2017-12-08T05:04:25.799Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-08T05:04:25.799Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[5]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[37]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[39]++;\n    storage.fetchTrialsBike(id).\n    then(trialsBike => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[40]++;\n      sendJSON(res, 200, trialsBike);\n    }).\n    catch(() => {/* istanbul ignore next */cov_ratewsw8z.f[7]++;cov_ratewsw8z.s[41]++;\n      sendBadStatus(res, 404, `No bike with id \"${id}\".`);\n    });\n  } else {/* istanbul ignore next */cov_ratewsw8z.b[5][1]++;cov_ratewsw8z.s[42]++;\n    storage.fetchAllTrialsBikes().\n    then(trialsBikes => {/* istanbul ignore next */cov_ratewsw8z.f[8]++;cov_ratewsw8z.s[43]++;\n      sendJSON(res, 200, trialsBikes);\n    });\n  }\n}","timestamp":"2017-12-08T05:04:25.799Z"}
{"level":"verbose","message":"STORAGE - fetching trials bike with id 430fdec0-dbd5-11e7-b020-c1d10fa8d217.","timestamp":"2017-12-08T05:04:25.799Z"}
{"level":"verbose","message":"STORAGE - Fetching array from database","timestamp":"2017-12-08T05:04:25.799Z"}
{"level":"info","message":"Responding with a 200 code and the following data:","timestamp":"2017-12-08T05:04:25.800Z"}
{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"430fdec0-dbd5-11e7-b020-c1d10fa8d217","timestamp":"2017-12-08T05:04:25.800Z","level":"info","message":""}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-08T05:04:25.802Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes?id=hamburger\"","timestamp":"2017-12-08T05:04:25.802Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=hamburger\",\"query\":{\"id\":\"hamburger\"},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes?id=hamburger\",\"href\":\"/api/trials-bikes?id=hamburger\"}","timestamp":"2017-12-08T05:04:25.802Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-08T05:04:25.802Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[5]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[37]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[39]++;\n    storage.fetchTrialsBike(id).\n    then(trialsBike => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[40]++;\n      sendJSON(res, 200, trialsBike);\n    }).\n    catch(() => {/* istanbul ignore next */cov_ratewsw8z.f[7]++;cov_ratewsw8z.s[41]++;\n      sendBadStatus(res, 404, `No bike with id \"${id}\".`);\n    });\n  } else {/* istanbul ignore next */cov_ratewsw8z.b[5][1]++;cov_ratewsw8z.s[42]++;\n    storage.fetchAllTrialsBikes().\n    then(trialsBikes => {/* istanbul ignore next */cov_ratewsw8z.f[8]++;cov_ratewsw8z.s[43]++;\n      sendJSON(res, 200, trialsBikes);\n    });\n  }\n}","timestamp":"2017-12-08T05:04:25.802Z"}
{"level":"verbose","message":"STORAGE - fetching trials bike with id hamburger.","timestamp":"2017-12-08T05:04:25.803Z"}
{"level":"verbose","message":"STORAGE - Fetching array from database","timestamp":"2017-12-08T05:04:25.803Z"}
{"level":"info","message":"Responding with a 404 code due to No bike with id \"hamburger\"..","timestamp":"2017-12-08T05:04:25.803Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-08T05:04:25.804Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes?id=430fdec0-dbd5-11e7-b020-c1d10fa8d217\"","timestamp":"2017-12-08T05:04:25.805Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=430fdec0-dbd5-11e7-b020-c1d10fa8d217\",\"query\":{\"id\":\"430fdec0-dbd5-11e7-b020-c1d10fa8d217\"},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes?id=430fdec0-dbd5-11e7-b020-c1d10fa8d217\",\"href\":\"/api/trials-bikes?id=430fdec0-dbd5-11e7-b020-c1d10fa8d217\"}","timestamp":"2017-12-08T05:04:25.805Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-08T05:04:25.805Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[9]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[45]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[46]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[6][0]++;cov_ratewsw8z.s[47]++;\n    storage.deleteTrialsBike(id).\n    then(() => {/* istanbul ignore next */cov_ratewsw8z.f[10]++;cov_ratewsw8z.s[48]++;\n      logger.log('info', `Bike deleted, responding with a 204 code.`); /* istanbul ignore next */cov_ratewsw8z.s[49]++;\n      res.writeHead(204); /* istanbul ignore next */cov_ratewsw8z.s[50]++;\n      res.end();\n    }).\n    catch(() => {/* istanbul ignore next */cov_ratewsw8z.f[11]++;cov_ratewsw8z.s[51]++;\n      sendBadStatus(res, 404, `No bike with id \"${id}\".`);\n    });\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[6][1]++;cov_ratewsw8z.s[52]++;sendBadStatus(res, 400, `bad request, no id.`);}\n}","timestamp":"2017-12-08T05:04:25.805Z"}
{"level":"verbose","message":"STORAGE - removing trials bike with id 430fdec0-dbd5-11e7-b020-c1d10fa8d217","timestamp":"2017-12-08T05:04:25.805Z"}
{"level":"verbose","message":"STORAGE - Fetching array from database","timestamp":"2017-12-08T05:04:25.805Z"}
{"level":"info","message":"Bike deleted, responding with a 204 code.","timestamp":"2017-12-08T05:04:25.806Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-08T05:04:25.807Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-08T05:04:25.807Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-08T05:04:25.807Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-08T05:04:25.808Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[9]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[45]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[46]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[6][0]++;cov_ratewsw8z.s[47]++;\n    storage.deleteTrialsBike(id).\n    then(() => {/* istanbul ignore next */cov_ratewsw8z.f[10]++;cov_ratewsw8z.s[48]++;\n      logger.log('info', `Bike deleted, responding with a 204 code.`); /* istanbul ignore next */cov_ratewsw8z.s[49]++;\n      res.writeHead(204); /* istanbul ignore next */cov_ratewsw8z.s[50]++;\n      res.end();\n    }).\n    catch(() => {/* istanbul ignore next */cov_ratewsw8z.f[11]++;cov_ratewsw8z.s[51]++;\n      sendBadStatus(res, 404, `No bike with id \"${id}\".`);\n    });\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[6][1]++;cov_ratewsw8z.s[52]++;sendBadStatus(res, 400, `bad request, no id.`);}\n}","timestamp":"2017-12-08T05:04:25.808Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, no id..","timestamp":"2017-12-08T05:04:25.808Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-08T05:04:25.809Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes?id=hotdogs\"","timestamp":"2017-12-08T05:04:25.809Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=hotdogs\",\"query\":{\"id\":\"hotdogs\"},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes?id=hotdogs\",\"href\":\"/api/trials-bikes?id=hotdogs\"}","timestamp":"2017-12-08T05:04:25.809Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-08T05:04:25.809Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[9]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[45]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[46]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[6][0]++;cov_ratewsw8z.s[47]++;\n    storage.deleteTrialsBike(id).\n    then(() => {/* istanbul ignore next */cov_ratewsw8z.f[10]++;cov_ratewsw8z.s[48]++;\n      logger.log('info', `Bike deleted, responding with a 204 code.`); /* istanbul ignore next */cov_ratewsw8z.s[49]++;\n      res.writeHead(204); /* istanbul ignore next */cov_ratewsw8z.s[50]++;\n      res.end();\n    }).\n    catch(() => {/* istanbul ignore next */cov_ratewsw8z.f[11]++;cov_ratewsw8z.s[51]++;\n      sendBadStatus(res, 404, `No bike with id \"${id}\".`);\n    });\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[6][1]++;cov_ratewsw8z.s[52]++;sendBadStatus(res, 400, `bad request, no id.`);}\n}","timestamp":"2017-12-08T05:04:25.809Z"}
{"level":"verbose","message":"STORAGE - removing trials bike with id hotdogs","timestamp":"2017-12-08T05:04:25.809Z"}
{"level":"verbose","message":"STORAGE - Fetching array from database","timestamp":"2017-12-08T05:04:25.809Z"}
{"level":"info","message":"Responding with a 404 code due to No bike with id \"hotdogs\"..","timestamp":"2017-12-08T05:04:25.810Z"}
{"level":"info","message":"Adding a POST url and callback.","timestamp":"2017-12-08T05:06:44.632Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-08T05:06:44.633Z"}
{"level":"info","message":"(req, res) => {\n  if(!(typeof req.body.make === 'string')) {\n    sendBadStatus(res, 400, `bad request, request property \"make\" must be of type string. You supplied type: ${typeof req.body.make}`);\n    return;\n  }\n  \n  if (!(typeof req.body.model === 'string')) {\n    sendBadStatus(res, 400, `bad request, request property \"model\" must be of type string. You supplied type: ${typeof req.body.model}`);\n    return;\n  }\n\n  if (!(typeof req.body.year === 'number')) {\n    sendBadStatus(res, 400, `bad request, request property \"year\" must be of type number. You supplied type: ${typeof req.body.year}`);\n    return;\n  }\n\n  if (!(typeof req.body.displacement === 'number')) {\n    sendBadStatus(res, 400, `bad request, request property \"displacement\" must be of type number. You supplied type: ${typeof req.body.displacement}`);\n    return;\n  }\n\n  if (!(typeof req.body.color === 'string')) {\n    sendBadStatus(res, 400, `bad request, request property \"color\" must be of type string. You supplied type: ${typeof req.body.color}`);\n    return;\n  }\n\n  let trialsBike = new TrialsBike(\n    req.body.make,\n    req.body.model,\n    req.body.year,\n    req.body.displacement,\n    req.body.color\n  );\n  \n  storage.addTrialsBike(trialsBike)\n    .then(() => {\n      sendJSON(res, 200, trialsBike);\n    })\n    .catch(() => {\n      sendBadStatus(res, 500, 'SERVER_ERROR');\n    });\n}","timestamp":"2017-12-08T05:06:44.633Z"}
{"level":"info","message":"Adding a GET url and callback.","timestamp":"2017-12-08T05:06:44.633Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-08T05:06:44.633Z"}
{"level":"info","message":"(req, res) => {\n  let id = req.url.query.id;\n  if(id) {\n    storage.fetchTrialsBike(id)\n      .then(trialsBike => {\n        sendJSON(res, 200, trialsBike); \n      })\n      .catch(() => {\n        sendBadStatus(res, 404, `No bike with id \"${id}\".`); \n      });\n  } else {\n    storage.fetchAllTrialsBikes()\n      .then(trialsBikes => {\n        sendJSON(res, 200, trialsBikes);\n      });\n  }\n}","timestamp":"2017-12-08T05:06:44.633Z"}
{"level":"info","message":"Adding a DELETE url and callback.","timestamp":"2017-12-08T05:06:44.633Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-08T05:06:44.633Z"}
{"level":"info","message":"(req, res) => {\n  let id = req.url.query.id;\n  if(id) {\n    storage.deleteTrialsBike(id)\n      .then(() => {\n        logger.log('info', `Bike deleted, responding with a 204 code.`);\n        res.writeHead(204);\n        res.end();\n      })\n      .catch(() => {\n        sendBadStatus(res, 404, `No bike with id \"${id}\".`);\n      });\n  } else\n    sendBadStatus(res, 400, `bad request, no id.`);\n}","timestamp":"2017-12-08T05:06:44.633Z"}
{"level":"info","message":"Server is up on port 3000.","timestamp":"2017-12-08T05:06:44.641Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-08T05:07:43.082Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-08T05:07:43.082Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-08T05:07:43.083Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-08T05:07:43.084Z"}
{"level":"info","message":"(req, res) => {\n  if(!(typeof req.body.make === 'string')) {\n    sendBadStatus(res, 400, `bad request, request property \"make\" must be of type string. You supplied type: ${typeof req.body.make}`);\n    return;\n  }\n  \n  if (!(typeof req.body.model === 'string')) {\n    sendBadStatus(res, 400, `bad request, request property \"model\" must be of type string. You supplied type: ${typeof req.body.model}`);\n    return;\n  }\n\n  if (!(typeof req.body.year === 'number')) {\n    sendBadStatus(res, 400, `bad request, request property \"year\" must be of type number. You supplied type: ${typeof req.body.year}`);\n    return;\n  }\n\n  if (!(typeof req.body.displacement === 'number')) {\n    sendBadStatus(res, 400, `bad request, request property \"displacement\" must be of type number. You supplied type: ${typeof req.body.displacement}`);\n    return;\n  }\n\n  if (!(typeof req.body.color === 'string')) {\n    sendBadStatus(res, 400, `bad request, request property \"color\" must be of type string. You supplied type: ${typeof req.body.color}`);\n    return;\n  }\n\n  let trialsBike = new TrialsBike(\n    req.body.make,\n    req.body.model,\n    req.body.year,\n    req.body.displacement,\n    req.body.color\n  );\n  \n  storage.addTrialsBike(trialsBike)\n    .then(() => {\n      sendJSON(res, 200, trialsBike);\n    })\n    .catch(() => {\n      sendBadStatus(res, 500, 'SERVER_ERROR');\n    });\n}","timestamp":"2017-12-08T05:07:43.084Z"}
{"level":"verbose","message":"STORAGE - adding the following bike:","timestamp":"2017-12-08T05:07:43.084Z"}
{"make":"Gas Gas","model":"TXT Race","year":2013,"displacement":280,"color":"red","id":"b8ab4ac0-dbd5-11e7-be8c-b5be973f1442","timestamp":"2017-12-08T05:07:43.084Z","level":"verbose","message":""}
{"level":"verbose","message":"STORAGE - Fetching array from database","timestamp":"2017-12-08T05:07:43.085Z"}
{"level":"info","message":"Responding with a 200 code and the following data:","timestamp":"2017-12-08T05:07:43.086Z"}
{"make":"Gas Gas","model":"TXT Race","year":2013,"displacement":280,"color":"red","id":"b8ab4ac0-dbd5-11e7-be8c-b5be973f1442","timestamp":"2017-12-08T05:07:43.086Z","level":"info","message":""}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-08T05:08:55.967Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-08T05:08:55.967Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-08T05:08:55.967Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-08T05:08:55.968Z"}
{"level":"info","message":"(req, res) => {\n  if(!(typeof req.body.make === 'string')) {\n    sendBadStatus(res, 400, `bad request, request property \"make\" must be of type string. You supplied type: ${typeof req.body.make}`);\n    return;\n  }\n  \n  if (!(typeof req.body.model === 'string')) {\n    sendBadStatus(res, 400, `bad request, request property \"model\" must be of type string. You supplied type: ${typeof req.body.model}`);\n    return;\n  }\n\n  if (!(typeof req.body.year === 'number')) {\n    sendBadStatus(res, 400, `bad request, request property \"year\" must be of type number. You supplied type: ${typeof req.body.year}`);\n    return;\n  }\n\n  if (!(typeof req.body.displacement === 'number')) {\n    sendBadStatus(res, 400, `bad request, request property \"displacement\" must be of type number. You supplied type: ${typeof req.body.displacement}`);\n    return;\n  }\n\n  if (!(typeof req.body.color === 'string')) {\n    sendBadStatus(res, 400, `bad request, request property \"color\" must be of type string. You supplied type: ${typeof req.body.color}`);\n    return;\n  }\n\n  let trialsBike = new TrialsBike(\n    req.body.make,\n    req.body.model,\n    req.body.year,\n    req.body.displacement,\n    req.body.color\n  );\n  \n  storage.addTrialsBike(trialsBike)\n    .then(() => {\n      sendJSON(res, 200, trialsBike);\n    })\n    .catch(() => {\n      sendBadStatus(res, 500, 'SERVER_ERROR');\n    });\n}","timestamp":"2017-12-08T05:08:55.968Z"}
{"level":"verbose","message":"STORAGE - adding the following bike:","timestamp":"2017-12-08T05:08:55.968Z"}
{"make":"Gas Gas","model":"TXT","year":2005,"displacement":280,"color":"red","id":"e41c8200-dbd5-11e7-be8c-b5be973f1442","timestamp":"2017-12-08T05:08:55.968Z","level":"verbose","message":""}
{"level":"verbose","message":"STORAGE - Fetching array from database","timestamp":"2017-12-08T05:08:55.968Z"}
{"level":"info","message":"Responding with a 200 code and the following data:","timestamp":"2017-12-08T05:08:55.968Z"}
{"make":"Gas Gas","model":"TXT","year":2005,"displacement":280,"color":"red","id":"e41c8200-dbd5-11e7-be8c-b5be973f1442","timestamp":"2017-12-08T05:08:55.968Z","level":"info","message":""}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-08T05:09:44.042Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-08T05:09:44.042Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-08T05:09:44.042Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-08T05:09:44.043Z"}
{"level":"info","message":"(req, res) => {\n  if(!(typeof req.body.make === 'string')) {\n    sendBadStatus(res, 400, `bad request, request property \"make\" must be of type string. You supplied type: ${typeof req.body.make}`);\n    return;\n  }\n  \n  if (!(typeof req.body.model === 'string')) {\n    sendBadStatus(res, 400, `bad request, request property \"model\" must be of type string. You supplied type: ${typeof req.body.model}`);\n    return;\n  }\n\n  if (!(typeof req.body.year === 'number')) {\n    sendBadStatus(res, 400, `bad request, request property \"year\" must be of type number. You supplied type: ${typeof req.body.year}`);\n    return;\n  }\n\n  if (!(typeof req.body.displacement === 'number')) {\n    sendBadStatus(res, 400, `bad request, request property \"displacement\" must be of type number. You supplied type: ${typeof req.body.displacement}`);\n    return;\n  }\n\n  if (!(typeof req.body.color === 'string')) {\n    sendBadStatus(res, 400, `bad request, request property \"color\" must be of type string. You supplied type: ${typeof req.body.color}`);\n    return;\n  }\n\n  let trialsBike = new TrialsBike(\n    req.body.make,\n    req.body.model,\n    req.body.year,\n    req.body.displacement,\n    req.body.color\n  );\n  \n  storage.addTrialsBike(trialsBike)\n    .then(() => {\n      sendJSON(res, 200, trialsBike);\n    })\n    .catch(() => {\n      sendBadStatus(res, 500, 'SERVER_ERROR');\n    });\n}","timestamp":"2017-12-08T05:09:44.043Z"}
{"level":"verbose","message":"STORAGE - adding the following bike:","timestamp":"2017-12-08T05:09:44.043Z"}
{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"00c42bb0-dbd6-11e7-be8c-b5be973f1442","timestamp":"2017-12-08T05:09:44.043Z","level":"verbose","message":""}
{"level":"verbose","message":"STORAGE - Fetching array from database","timestamp":"2017-12-08T05:09:44.043Z"}
{"level":"info","message":"Responding with a 200 code and the following data:","timestamp":"2017-12-08T05:09:44.043Z"}
{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"00c42bb0-dbd6-11e7-be8c-b5be973f1442","timestamp":"2017-12-08T05:09:44.043Z","level":"info","message":""}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-08T05:10:32.356Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-08T05:10:32.356Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-08T05:10:32.356Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-08T05:10:32.356Z"}
{"level":"info","message":"(req, res) => {\n  let id = req.url.query.id;\n  if(id) {\n    storage.fetchTrialsBike(id)\n      .then(trialsBike => {\n        sendJSON(res, 200, trialsBike); \n      })\n      .catch(() => {\n        sendBadStatus(res, 404, `No bike with id \"${id}\".`); \n      });\n  } else {\n    storage.fetchAllTrialsBikes()\n      .then(trialsBikes => {\n        sendJSON(res, 200, trialsBikes);\n      });\n  }\n}","timestamp":"2017-12-08T05:10:32.356Z"}
{"level":"verbose","message":"STORAGE - Fetching array from database","timestamp":"2017-12-08T05:10:32.356Z"}
{"level":"info","message":"Responding with a 200 code and the following data:","timestamp":"2017-12-08T05:10:32.356Z"}
[{"make":"Gas Gas","model":"TXT Race","year":2013,"displacement":280,"color":"red","id":"b8ab4ac0-dbd5-11e7-be8c-b5be973f1442","timestamp":"2017-12-08T05:07:43.084Z"},{"make":"Gas Gas","model":"TXT","year":2005,"displacement":280,"color":"red","id":"e41c8200-dbd5-11e7-be8c-b5be973f1442","timestamp":"2017-12-08T05:08:55.968Z"},{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"00c42bb0-dbd6-11e7-be8c-b5be973f1442","timestamp":"2017-12-08T05:09:44.043Z"}]
{"level":"info","message":"Adding a POST url and callback.","timestamp":"2017-12-08T05:11:14.742Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-08T05:11:14.743Z"}
{"level":"info","message":"(req, res) => {\n  if(!(typeof req.body.make === 'string')) {\n    sendBadStatus(res, 400, `bad request, request property \"make\" must be of type string. You supplied type: ${typeof req.body.make}`);\n    return;\n  }\n  \n  if (!(typeof req.body.model === 'string')) {\n    sendBadStatus(res, 400, `bad request, request property \"model\" must be of type string. You supplied type: ${typeof req.body.model}`);\n    return;\n  }\n\n  if (!(typeof req.body.year === 'number')) {\n    sendBadStatus(res, 400, `bad request, request property \"year\" must be of type number. You supplied type: ${typeof req.body.year}`);\n    return;\n  }\n\n  if (!(typeof req.body.displacement === 'number')) {\n    sendBadStatus(res, 400, `bad request, request property \"displacement\" must be of type number. You supplied type: ${typeof req.body.displacement}`);\n    return;\n  }\n\n  if (!(typeof req.body.color === 'string')) {\n    sendBadStatus(res, 400, `bad request, request property \"color\" must be of type string. You supplied type: ${typeof req.body.color}`);\n    return;\n  }\n\n  let trialsBike = new TrialsBike(\n    req.body.make,\n    req.body.model,\n    req.body.year,\n    req.body.displacement,\n    req.body.color\n  );\n  \n  storage.addTrialsBike(trialsBike)\n    .then(() => {\n      sendJSON(res, 200, trialsBike);\n    })\n    .catch(() => {\n      sendBadStatus(res, 500, 'SERVER_ERROR');\n    });\n}","timestamp":"2017-12-08T05:11:14.743Z"}
{"level":"info","message":"Adding a GET url and callback.","timestamp":"2017-12-08T05:11:14.743Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-08T05:11:14.743Z"}
{"level":"info","message":"(req, res) => {\n  let id = req.url.query.id;\n  if(id) {\n    storage.fetchTrialsBike(id)\n      .then(trialsBike => {\n        sendJSON(res, 200, trialsBike); \n      })\n      .catch(() => {\n        sendBadStatus(res, 404, `No bike with id \"${id}\".`); \n      });\n  } else {\n    storage.fetchAllTrialsBikes()\n      .then(trialsBikes => {\n        sendJSON(res, 200, trialsBikes);\n      });\n  }\n}","timestamp":"2017-12-08T05:11:14.743Z"}
{"level":"info","message":"Adding a DELETE url and callback.","timestamp":"2017-12-08T05:11:14.743Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-08T05:11:14.743Z"}
{"level":"info","message":"(req, res) => {\n  let id = req.url.query.id;\n  if(id) {\n    storage.deleteTrialsBike(id)\n      .then(() => {\n        logger.log('info', `Bike deleted, responding with a 204 code.`);\n        res.writeHead(204);\n        res.end();\n      })\n      .catch(() => {\n        sendBadStatus(res, 404, `No bike with id \"${id}\".`);\n      });\n  } else\n    sendBadStatus(res, 400, `bad request, no id.`);\n}","timestamp":"2017-12-08T05:11:14.743Z"}
{"level":"info","message":"Server is up on port 3000.","timestamp":"2017-12-08T05:11:14.752Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-08T05:11:19.346Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-08T05:11:19.346Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-08T05:11:19.346Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-08T05:11:19.347Z"}
{"level":"info","message":"(req, res) => {\n  let id = req.url.query.id;\n  if(id) {\n    storage.fetchTrialsBike(id)\n      .then(trialsBike => {\n        sendJSON(res, 200, trialsBike); \n      })\n      .catch(() => {\n        sendBadStatus(res, 404, `No bike with id \"${id}\".`); \n      });\n  } else {\n    storage.fetchAllTrialsBikes()\n      .then(trialsBikes => {\n        sendJSON(res, 200, trialsBikes);\n      });\n  }\n}","timestamp":"2017-12-08T05:11:19.347Z"}
{"level":"verbose","message":"STORAGE - Fetching array from database","timestamp":"2017-12-08T05:11:19.347Z"}
{"level":"info","message":"Responding with a 200 code and the following data:","timestamp":"2017-12-08T05:11:19.348Z"}
[{"make":"Gas Gas","model":"TXT Race","year":2013,"displacement":280,"color":"red","id":"b8ab4ac0-dbd5-11e7-be8c-b5be973f1442","timestamp":"2017-12-08T05:07:43.084Z"},{"make":"Gas Gas","model":"TXT","year":2005,"displacement":280,"color":"red","id":"e41c8200-dbd5-11e7-be8c-b5be973f1442","timestamp":"2017-12-08T05:08:55.968Z"},{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"00c42bb0-dbd6-11e7-be8c-b5be973f1442","timestamp":"2017-12-08T05:09:44.043Z"}]
{"level":"info","message":"Routing a request.","timestamp":"2017-12-08T05:11:39.393Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes?id=00c42bb0-dbd6-11e7-be8c-b5be973f1442\"","timestamp":"2017-12-08T05:11:39.393Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=00c42bb0-dbd6-11e7-be8c-b5be973f1442\",\"query\":{\"id\":\"00c42bb0-dbd6-11e7-be8c-b5be973f1442\"},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes?id=00c42bb0-dbd6-11e7-be8c-b5be973f1442\",\"href\":\"/api/trials-bikes?id=00c42bb0-dbd6-11e7-be8c-b5be973f1442\"}","timestamp":"2017-12-08T05:11:39.393Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-08T05:11:39.394Z"}
{"level":"info","message":"(req, res) => {\n  let id = req.url.query.id;\n  if(id) {\n    storage.fetchTrialsBike(id)\n      .then(trialsBike => {\n        sendJSON(res, 200, trialsBike); \n      })\n      .catch(() => {\n        sendBadStatus(res, 404, `No bike with id \"${id}\".`); \n      });\n  } else {\n    storage.fetchAllTrialsBikes()\n      .then(trialsBikes => {\n        sendJSON(res, 200, trialsBikes);\n      });\n  }\n}","timestamp":"2017-12-08T05:11:39.394Z"}
{"level":"verbose","message":"STORAGE - fetching trials bike with id 00c42bb0-dbd6-11e7-be8c-b5be973f1442.","timestamp":"2017-12-08T05:11:39.394Z"}
{"level":"verbose","message":"STORAGE - Fetching array from database","timestamp":"2017-12-08T05:11:39.394Z"}
{"level":"info","message":"Responding with a 200 code and the following data:","timestamp":"2017-12-08T05:11:39.394Z"}
{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"00c42bb0-dbd6-11e7-be8c-b5be973f1442","timestamp":"2017-12-08T05:11:39.394Z","level":"info","message":""}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-08T05:11:44.691Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes?id=00c42bb0-dbd6-11e7-be8c-b5be973f1442d\"","timestamp":"2017-12-08T05:11:44.691Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=00c42bb0-dbd6-11e7-be8c-b5be973f1442d\",\"query\":{\"id\":\"00c42bb0-dbd6-11e7-be8c-b5be973f1442d\"},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes?id=00c42bb0-dbd6-11e7-be8c-b5be973f1442d\",\"href\":\"/api/trials-bikes?id=00c42bb0-dbd6-11e7-be8c-b5be973f1442d\"}","timestamp":"2017-12-08T05:11:44.692Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-08T05:11:44.692Z"}
{"level":"info","message":"(req, res) => {\n  let id = req.url.query.id;\n  if(id) {\n    storage.fetchTrialsBike(id)\n      .then(trialsBike => {\n        sendJSON(res, 200, trialsBike); \n      })\n      .catch(() => {\n        sendBadStatus(res, 404, `No bike with id \"${id}\".`); \n      });\n  } else {\n    storage.fetchAllTrialsBikes()\n      .then(trialsBikes => {\n        sendJSON(res, 200, trialsBikes);\n      });\n  }\n}","timestamp":"2017-12-08T05:11:44.692Z"}
{"level":"verbose","message":"STORAGE - fetching trials bike with id 00c42bb0-dbd6-11e7-be8c-b5be973f1442d.","timestamp":"2017-12-08T05:11:44.692Z"}
{"level":"verbose","message":"STORAGE - Fetching array from database","timestamp":"2017-12-08T05:11:44.692Z"}
{"level":"info","message":"Responding with a 404 code due to No bike with id \"00c42bb0-dbd6-11e7-be8c-b5be973f1442d\"..","timestamp":"2017-12-08T05:11:44.692Z"}
{"level":"info","message":"Adding a POST url and callback.","timestamp":"2017-12-08T05:13:42.073Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-08T05:13:42.074Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[2]++;cov_ratewsw8z.s[17]++;\n  if (!(typeof req.body.make === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[18]++;\n    sendBadStatus(res, 400, `bad request, request property \"make\" must be of type string. You supplied type: ${typeof req.body.make}`); /* istanbul ignore next */cov_ratewsw8z.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[20]++;\n\n  if (!(typeof req.body.model === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, `bad request, request property \"model\" must be of type string. You supplied type: ${typeof req.body.model}`); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!(typeof req.body.year === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, `bad request, request property \"year\" must be of type number. You supplied type: ${typeof req.body.year}`); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!(typeof req.body.displacement === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, `bad request, request property \"displacement\" must be of type number. You supplied type: ${typeof req.body.displacement}`); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!(typeof req.body.color === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, `bad request, request property \"color\" must be of type string. You supplied type: ${typeof req.body.color}`); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[32]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[33]++;\n\n\n  storage.addTrialsBike(trialsBike).\n  then(() => {/* istanbul ignore next */cov_ratewsw8z.f[3]++;cov_ratewsw8z.s[34]++;\n    sendJSON(res, 200, trialsBike);\n  }).\n  catch(() => {/* istanbul ignore next */cov_ratewsw8z.f[4]++;cov_ratewsw8z.s[35]++;\n    sendBadStatus(res, 500, 'SERVER_ERROR');\n  });\n}","timestamp":"2017-12-08T05:13:42.074Z"}
{"level":"info","message":"Adding a GET url and callback.","timestamp":"2017-12-08T05:13:42.074Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-08T05:13:42.074Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[5]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[37]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[39]++;\n    storage.fetchTrialsBike(id).\n    then(trialsBike => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[40]++;\n      sendJSON(res, 200, trialsBike);\n    }).\n    catch(() => {/* istanbul ignore next */cov_ratewsw8z.f[7]++;cov_ratewsw8z.s[41]++;\n      sendBadStatus(res, 404, `No bike with id \"${id}\".`);\n    });\n  } else {/* istanbul ignore next */cov_ratewsw8z.b[5][1]++;cov_ratewsw8z.s[42]++;\n    storage.fetchAllTrialsBikes().\n    then(trialsBikes => {/* istanbul ignore next */cov_ratewsw8z.f[8]++;cov_ratewsw8z.s[43]++;\n      sendJSON(res, 200, trialsBikes);\n    });\n  }\n}","timestamp":"2017-12-08T05:13:42.074Z"}
{"level":"info","message":"Adding a DELETE url and callback.","timestamp":"2017-12-08T05:13:42.074Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-08T05:13:42.074Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[9]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[45]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[46]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[6][0]++;cov_ratewsw8z.s[47]++;\n    storage.deleteTrialsBike(id).\n    then(() => {/* istanbul ignore next */cov_ratewsw8z.f[10]++;cov_ratewsw8z.s[48]++;\n      logger.log('info', `Bike deleted, responding with a 204 code.`); /* istanbul ignore next */cov_ratewsw8z.s[49]++;\n      res.writeHead(204); /* istanbul ignore next */cov_ratewsw8z.s[50]++;\n      res.end();\n    }).\n    catch(() => {/* istanbul ignore next */cov_ratewsw8z.f[11]++;cov_ratewsw8z.s[51]++;\n      sendBadStatus(res, 404, `No bike with id \"${id}\".`);\n    });\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[6][1]++;cov_ratewsw8z.s[52]++;sendBadStatus(res, 400, `bad request, no id.`);}\n}","timestamp":"2017-12-08T05:13:42.074Z"}
{"level":"info","message":"Server is up on port 3000.","timestamp":"2017-12-08T05:13:42.116Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-08T05:13:42.128Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-08T05:13:42.128Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-08T05:13:42.128Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-08T05:13:42.129Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[2]++;cov_ratewsw8z.s[17]++;\n  if (!(typeof req.body.make === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[18]++;\n    sendBadStatus(res, 400, `bad request, request property \"make\" must be of type string. You supplied type: ${typeof req.body.make}`); /* istanbul ignore next */cov_ratewsw8z.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[20]++;\n\n  if (!(typeof req.body.model === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, `bad request, request property \"model\" must be of type string. You supplied type: ${typeof req.body.model}`); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!(typeof req.body.year === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, `bad request, request property \"year\" must be of type number. You supplied type: ${typeof req.body.year}`); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!(typeof req.body.displacement === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, `bad request, request property \"displacement\" must be of type number. You supplied type: ${typeof req.body.displacement}`); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!(typeof req.body.color === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, `bad request, request property \"color\" must be of type string. You supplied type: ${typeof req.body.color}`); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[32]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[33]++;\n\n\n  storage.addTrialsBike(trialsBike).\n  then(() => {/* istanbul ignore next */cov_ratewsw8z.f[3]++;cov_ratewsw8z.s[34]++;\n    sendJSON(res, 200, trialsBike);\n  }).\n  catch(() => {/* istanbul ignore next */cov_ratewsw8z.f[4]++;cov_ratewsw8z.s[35]++;\n    sendBadStatus(res, 500, 'SERVER_ERROR');\n  });\n}","timestamp":"2017-12-08T05:13:42.129Z"}
{"level":"verbose","message":"STORAGE - adding the following bike:","timestamp":"2017-12-08T05:13:42.130Z"}
{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"8ead3610-dbd6-11e7-88fd-75bcee6b8fdc","timestamp":"2017-12-08T05:13:42.130Z","level":"verbose","message":""}
{"level":"verbose","message":"STORAGE - Fetching array from database","timestamp":"2017-12-08T05:13:42.130Z"}
{"level":"info","message":"Responding with a 200 code and the following data:","timestamp":"2017-12-08T05:13:42.132Z"}
{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"8ead3610-dbd6-11e7-88fd-75bcee6b8fdc","timestamp":"2017-12-08T05:13:42.132Z","level":"info","message":""}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-08T05:13:42.140Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-08T05:13:42.140Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-08T05:13:42.140Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T05:13:42.140Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.req.on (/Users/robertreed/Documents/programming/cf/401/lab/08-09-vanilla-rest-server/lab-rob/lib/req-parser.js:25:27)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-08T05:13:42.140Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-08T05:13:42.143Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-08T05:13:42.143Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-08T05:13:42.143Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-08T05:13:42.143Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[2]++;cov_ratewsw8z.s[17]++;\n  if (!(typeof req.body.make === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[18]++;\n    sendBadStatus(res, 400, `bad request, request property \"make\" must be of type string. You supplied type: ${typeof req.body.make}`); /* istanbul ignore next */cov_ratewsw8z.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[20]++;\n\n  if (!(typeof req.body.model === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, `bad request, request property \"model\" must be of type string. You supplied type: ${typeof req.body.model}`); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!(typeof req.body.year === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, `bad request, request property \"year\" must be of type number. You supplied type: ${typeof req.body.year}`); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!(typeof req.body.displacement === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, `bad request, request property \"displacement\" must be of type number. You supplied type: ${typeof req.body.displacement}`); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!(typeof req.body.color === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, `bad request, request property \"color\" must be of type string. You supplied type: ${typeof req.body.color}`); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[32]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[33]++;\n\n\n  storage.addTrialsBike(trialsBike).\n  then(() => {/* istanbul ignore next */cov_ratewsw8z.f[3]++;cov_ratewsw8z.s[34]++;\n    sendJSON(res, 200, trialsBike);\n  }).\n  catch(() => {/* istanbul ignore next */cov_ratewsw8z.f[4]++;cov_ratewsw8z.s[35]++;\n    sendBadStatus(res, 500, 'SERVER_ERROR');\n  });\n}","timestamp":"2017-12-08T05:13:42.143Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, request property \"make\" must be of type string. You supplied type: undefined.","timestamp":"2017-12-08T05:13:42.143Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-08T05:13:42.145Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-08T05:13:42.145Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-08T05:13:42.145Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-08T05:13:42.145Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[2]++;cov_ratewsw8z.s[17]++;\n  if (!(typeof req.body.make === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[18]++;\n    sendBadStatus(res, 400, `bad request, request property \"make\" must be of type string. You supplied type: ${typeof req.body.make}`); /* istanbul ignore next */cov_ratewsw8z.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[20]++;\n\n  if (!(typeof req.body.model === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, `bad request, request property \"model\" must be of type string. You supplied type: ${typeof req.body.model}`); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!(typeof req.body.year === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, `bad request, request property \"year\" must be of type number. You supplied type: ${typeof req.body.year}`); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!(typeof req.body.displacement === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, `bad request, request property \"displacement\" must be of type number. You supplied type: ${typeof req.body.displacement}`); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!(typeof req.body.color === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, `bad request, request property \"color\" must be of type string. You supplied type: ${typeof req.body.color}`); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[32]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[33]++;\n\n\n  storage.addTrialsBike(trialsBike).\n  then(() => {/* istanbul ignore next */cov_ratewsw8z.f[3]++;cov_ratewsw8z.s[34]++;\n    sendJSON(res, 200, trialsBike);\n  }).\n  catch(() => {/* istanbul ignore next */cov_ratewsw8z.f[4]++;cov_ratewsw8z.s[35]++;\n    sendBadStatus(res, 500, 'SERVER_ERROR');\n  });\n}","timestamp":"2017-12-08T05:13:42.145Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, request property \"model\" must be of type string. You supplied type: undefined.","timestamp":"2017-12-08T05:13:42.145Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-08T05:13:42.147Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-08T05:13:42.147Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-08T05:13:42.147Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-08T05:13:42.147Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[2]++;cov_ratewsw8z.s[17]++;\n  if (!(typeof req.body.make === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[18]++;\n    sendBadStatus(res, 400, `bad request, request property \"make\" must be of type string. You supplied type: ${typeof req.body.make}`); /* istanbul ignore next */cov_ratewsw8z.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[20]++;\n\n  if (!(typeof req.body.model === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, `bad request, request property \"model\" must be of type string. You supplied type: ${typeof req.body.model}`); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!(typeof req.body.year === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, `bad request, request property \"year\" must be of type number. You supplied type: ${typeof req.body.year}`); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!(typeof req.body.displacement === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, `bad request, request property \"displacement\" must be of type number. You supplied type: ${typeof req.body.displacement}`); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!(typeof req.body.color === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, `bad request, request property \"color\" must be of type string. You supplied type: ${typeof req.body.color}`); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[32]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[33]++;\n\n\n  storage.addTrialsBike(trialsBike).\n  then(() => {/* istanbul ignore next */cov_ratewsw8z.f[3]++;cov_ratewsw8z.s[34]++;\n    sendJSON(res, 200, trialsBike);\n  }).\n  catch(() => {/* istanbul ignore next */cov_ratewsw8z.f[4]++;cov_ratewsw8z.s[35]++;\n    sendBadStatus(res, 500, 'SERVER_ERROR');\n  });\n}","timestamp":"2017-12-08T05:13:42.147Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, request property \"year\" must be of type number. You supplied type: boolean.","timestamp":"2017-12-08T05:13:42.148Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-08T05:13:42.149Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-08T05:13:42.149Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-08T05:13:42.149Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-08T05:13:42.149Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[2]++;cov_ratewsw8z.s[17]++;\n  if (!(typeof req.body.make === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[18]++;\n    sendBadStatus(res, 400, `bad request, request property \"make\" must be of type string. You supplied type: ${typeof req.body.make}`); /* istanbul ignore next */cov_ratewsw8z.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[20]++;\n\n  if (!(typeof req.body.model === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, `bad request, request property \"model\" must be of type string. You supplied type: ${typeof req.body.model}`); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!(typeof req.body.year === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, `bad request, request property \"year\" must be of type number. You supplied type: ${typeof req.body.year}`); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!(typeof req.body.displacement === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, `bad request, request property \"displacement\" must be of type number. You supplied type: ${typeof req.body.displacement}`); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!(typeof req.body.color === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, `bad request, request property \"color\" must be of type string. You supplied type: ${typeof req.body.color}`); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[32]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[33]++;\n\n\n  storage.addTrialsBike(trialsBike).\n  then(() => {/* istanbul ignore next */cov_ratewsw8z.f[3]++;cov_ratewsw8z.s[34]++;\n    sendJSON(res, 200, trialsBike);\n  }).\n  catch(() => {/* istanbul ignore next */cov_ratewsw8z.f[4]++;cov_ratewsw8z.s[35]++;\n    sendBadStatus(res, 500, 'SERVER_ERROR');\n  });\n}","timestamp":"2017-12-08T05:13:42.149Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, request property \"displacement\" must be of type number. You supplied type: object.","timestamp":"2017-12-08T05:13:42.149Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-08T05:13:42.151Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-08T05:13:42.151Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-08T05:13:42.151Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-08T05:13:42.151Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[2]++;cov_ratewsw8z.s[17]++;\n  if (!(typeof req.body.make === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[18]++;\n    sendBadStatus(res, 400, `bad request, request property \"make\" must be of type string. You supplied type: ${typeof req.body.make}`); /* istanbul ignore next */cov_ratewsw8z.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[20]++;\n\n  if (!(typeof req.body.model === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, `bad request, request property \"model\" must be of type string. You supplied type: ${typeof req.body.model}`); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!(typeof req.body.year === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, `bad request, request property \"year\" must be of type number. You supplied type: ${typeof req.body.year}`); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!(typeof req.body.displacement === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, `bad request, request property \"displacement\" must be of type number. You supplied type: ${typeof req.body.displacement}`); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!(typeof req.body.color === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, `bad request, request property \"color\" must be of type string. You supplied type: ${typeof req.body.color}`); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[32]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[33]++;\n\n\n  storage.addTrialsBike(trialsBike).\n  then(() => {/* istanbul ignore next */cov_ratewsw8z.f[3]++;cov_ratewsw8z.s[34]++;\n    sendJSON(res, 200, trialsBike);\n  }).\n  catch(() => {/* istanbul ignore next */cov_ratewsw8z.f[4]++;cov_ratewsw8z.s[35]++;\n    sendBadStatus(res, 500, 'SERVER_ERROR');\n  });\n}","timestamp":"2017-12-08T05:13:42.151Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, request property \"color\" must be of type string. You supplied type: number.","timestamp":"2017-12-08T05:13:42.151Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-08T05:13:42.153Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-08T05:13:42.153Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-08T05:13:42.153Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-08T05:13:42.153Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[5]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[37]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[39]++;\n    storage.fetchTrialsBike(id).\n    then(trialsBike => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[40]++;\n      sendJSON(res, 200, trialsBike);\n    }).\n    catch(() => {/* istanbul ignore next */cov_ratewsw8z.f[7]++;cov_ratewsw8z.s[41]++;\n      sendBadStatus(res, 404, `No bike with id \"${id}\".`);\n    });\n  } else {/* istanbul ignore next */cov_ratewsw8z.b[5][1]++;cov_ratewsw8z.s[42]++;\n    storage.fetchAllTrialsBikes().\n    then(trialsBikes => {/* istanbul ignore next */cov_ratewsw8z.f[8]++;cov_ratewsw8z.s[43]++;\n      sendJSON(res, 200, trialsBikes);\n    });\n  }\n}","timestamp":"2017-12-08T05:13:42.153Z"}
{"level":"verbose","message":"STORAGE - Fetching array from database","timestamp":"2017-12-08T05:13:42.154Z"}
{"level":"info","message":"Responding with a 200 code and the following data:","timestamp":"2017-12-08T05:13:42.154Z"}
[{"make":"Gas Gas","model":"TXT Race","year":2013,"displacement":280,"color":"red","id":"b8ab4ac0-dbd5-11e7-be8c-b5be973f1442","timestamp":"2017-12-08T05:07:43.084Z"},{"make":"Gas Gas","model":"TXT","year":2005,"displacement":280,"color":"red","id":"e41c8200-dbd5-11e7-be8c-b5be973f1442","timestamp":"2017-12-08T05:08:55.968Z"},{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"00c42bb0-dbd6-11e7-be8c-b5be973f1442","timestamp":"2017-12-08T05:09:44.043Z"},{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"8ead3610-dbd6-11e7-88fd-75bcee6b8fdc","timestamp":"2017-12-08T05:13:42.129Z"}]
{"level":"info","message":"Routing a request.","timestamp":"2017-12-08T05:13:42.156Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes?id=8ead3610-dbd6-11e7-88fd-75bcee6b8fdc\"","timestamp":"2017-12-08T05:13:42.159Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=8ead3610-dbd6-11e7-88fd-75bcee6b8fdc\",\"query\":{\"id\":\"8ead3610-dbd6-11e7-88fd-75bcee6b8fdc\"},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes?id=8ead3610-dbd6-11e7-88fd-75bcee6b8fdc\",\"href\":\"/api/trials-bikes?id=8ead3610-dbd6-11e7-88fd-75bcee6b8fdc\"}","timestamp":"2017-12-08T05:13:42.160Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-08T05:13:42.160Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[5]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[37]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[39]++;\n    storage.fetchTrialsBike(id).\n    then(trialsBike => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[40]++;\n      sendJSON(res, 200, trialsBike);\n    }).\n    catch(() => {/* istanbul ignore next */cov_ratewsw8z.f[7]++;cov_ratewsw8z.s[41]++;\n      sendBadStatus(res, 404, `No bike with id \"${id}\".`);\n    });\n  } else {/* istanbul ignore next */cov_ratewsw8z.b[5][1]++;cov_ratewsw8z.s[42]++;\n    storage.fetchAllTrialsBikes().\n    then(trialsBikes => {/* istanbul ignore next */cov_ratewsw8z.f[8]++;cov_ratewsw8z.s[43]++;\n      sendJSON(res, 200, trialsBikes);\n    });\n  }\n}","timestamp":"2017-12-08T05:13:42.160Z"}
{"level":"verbose","message":"STORAGE - fetching trials bike with id 8ead3610-dbd6-11e7-88fd-75bcee6b8fdc.","timestamp":"2017-12-08T05:13:42.160Z"}
{"level":"verbose","message":"STORAGE - Fetching array from database","timestamp":"2017-12-08T05:13:42.160Z"}
{"level":"info","message":"Responding with a 200 code and the following data:","timestamp":"2017-12-08T05:13:42.160Z"}
{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"8ead3610-dbd6-11e7-88fd-75bcee6b8fdc","timestamp":"2017-12-08T05:13:42.160Z","level":"info","message":""}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-08T05:13:42.163Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes?id=hamburger\"","timestamp":"2017-12-08T05:13:42.163Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=hamburger\",\"query\":{\"id\":\"hamburger\"},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes?id=hamburger\",\"href\":\"/api/trials-bikes?id=hamburger\"}","timestamp":"2017-12-08T05:13:42.163Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-08T05:13:42.163Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[5]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[37]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[39]++;\n    storage.fetchTrialsBike(id).\n    then(trialsBike => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[40]++;\n      sendJSON(res, 200, trialsBike);\n    }).\n    catch(() => {/* istanbul ignore next */cov_ratewsw8z.f[7]++;cov_ratewsw8z.s[41]++;\n      sendBadStatus(res, 404, `No bike with id \"${id}\".`);\n    });\n  } else {/* istanbul ignore next */cov_ratewsw8z.b[5][1]++;cov_ratewsw8z.s[42]++;\n    storage.fetchAllTrialsBikes().\n    then(trialsBikes => {/* istanbul ignore next */cov_ratewsw8z.f[8]++;cov_ratewsw8z.s[43]++;\n      sendJSON(res, 200, trialsBikes);\n    });\n  }\n}","timestamp":"2017-12-08T05:13:42.163Z"}
{"level":"verbose","message":"STORAGE - fetching trials bike with id hamburger.","timestamp":"2017-12-08T05:13:42.163Z"}
{"level":"verbose","message":"STORAGE - Fetching array from database","timestamp":"2017-12-08T05:13:42.163Z"}
{"level":"info","message":"Responding with a 404 code due to No bike with id \"hamburger\"..","timestamp":"2017-12-08T05:13:42.163Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-08T05:13:42.165Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes?id=8ead3610-dbd6-11e7-88fd-75bcee6b8fdc\"","timestamp":"2017-12-08T05:13:42.165Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=8ead3610-dbd6-11e7-88fd-75bcee6b8fdc\",\"query\":{\"id\":\"8ead3610-dbd6-11e7-88fd-75bcee6b8fdc\"},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes?id=8ead3610-dbd6-11e7-88fd-75bcee6b8fdc\",\"href\":\"/api/trials-bikes?id=8ead3610-dbd6-11e7-88fd-75bcee6b8fdc\"}","timestamp":"2017-12-08T05:13:42.166Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-08T05:13:42.166Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[9]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[45]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[46]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[6][0]++;cov_ratewsw8z.s[47]++;\n    storage.deleteTrialsBike(id).\n    then(() => {/* istanbul ignore next */cov_ratewsw8z.f[10]++;cov_ratewsw8z.s[48]++;\n      logger.log('info', `Bike deleted, responding with a 204 code.`); /* istanbul ignore next */cov_ratewsw8z.s[49]++;\n      res.writeHead(204); /* istanbul ignore next */cov_ratewsw8z.s[50]++;\n      res.end();\n    }).\n    catch(() => {/* istanbul ignore next */cov_ratewsw8z.f[11]++;cov_ratewsw8z.s[51]++;\n      sendBadStatus(res, 404, `No bike with id \"${id}\".`);\n    });\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[6][1]++;cov_ratewsw8z.s[52]++;sendBadStatus(res, 400, `bad request, no id.`);}\n}","timestamp":"2017-12-08T05:13:42.166Z"}
{"level":"verbose","message":"STORAGE - removing trials bike with id 8ead3610-dbd6-11e7-88fd-75bcee6b8fdc","timestamp":"2017-12-08T05:13:42.166Z"}
{"level":"verbose","message":"STORAGE - Fetching array from database","timestamp":"2017-12-08T05:13:42.166Z"}
{"level":"info","message":"Bike deleted, responding with a 204 code.","timestamp":"2017-12-08T05:13:42.167Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-08T05:13:42.171Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-08T05:13:42.171Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-08T05:13:42.171Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-08T05:13:42.171Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[9]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[45]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[46]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[6][0]++;cov_ratewsw8z.s[47]++;\n    storage.deleteTrialsBike(id).\n    then(() => {/* istanbul ignore next */cov_ratewsw8z.f[10]++;cov_ratewsw8z.s[48]++;\n      logger.log('info', `Bike deleted, responding with a 204 code.`); /* istanbul ignore next */cov_ratewsw8z.s[49]++;\n      res.writeHead(204); /* istanbul ignore next */cov_ratewsw8z.s[50]++;\n      res.end();\n    }).\n    catch(() => {/* istanbul ignore next */cov_ratewsw8z.f[11]++;cov_ratewsw8z.s[51]++;\n      sendBadStatus(res, 404, `No bike with id \"${id}\".`);\n    });\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[6][1]++;cov_ratewsw8z.s[52]++;sendBadStatus(res, 400, `bad request, no id.`);}\n}","timestamp":"2017-12-08T05:13:42.171Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, no id..","timestamp":"2017-12-08T05:13:42.171Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-08T05:13:42.174Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes?id=hotdogs\"","timestamp":"2017-12-08T05:13:42.174Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=hotdogs\",\"query\":{\"id\":\"hotdogs\"},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes?id=hotdogs\",\"href\":\"/api/trials-bikes?id=hotdogs\"}","timestamp":"2017-12-08T05:13:42.174Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-08T05:13:42.174Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[9]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[45]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[46]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[6][0]++;cov_ratewsw8z.s[47]++;\n    storage.deleteTrialsBike(id).\n    then(() => {/* istanbul ignore next */cov_ratewsw8z.f[10]++;cov_ratewsw8z.s[48]++;\n      logger.log('info', `Bike deleted, responding with a 204 code.`); /* istanbul ignore next */cov_ratewsw8z.s[49]++;\n      res.writeHead(204); /* istanbul ignore next */cov_ratewsw8z.s[50]++;\n      res.end();\n    }).\n    catch(() => {/* istanbul ignore next */cov_ratewsw8z.f[11]++;cov_ratewsw8z.s[51]++;\n      sendBadStatus(res, 404, `No bike with id \"${id}\".`);\n    });\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[6][1]++;cov_ratewsw8z.s[52]++;sendBadStatus(res, 400, `bad request, no id.`);}\n}","timestamp":"2017-12-08T05:13:42.174Z"}
{"level":"verbose","message":"STORAGE - removing trials bike with id hotdogs","timestamp":"2017-12-08T05:13:42.174Z"}
{"level":"verbose","message":"STORAGE - Fetching array from database","timestamp":"2017-12-08T05:13:42.174Z"}
{"level":"info","message":"Responding with a 404 code due to No bike with id \"hotdogs\"..","timestamp":"2017-12-08T05:13:42.175Z"}
{"level":"info","message":"Adding a POST url and callback.","timestamp":"2017-12-08T05:15:51.581Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-08T05:15:51.582Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[2]++;cov_ratewsw8z.s[17]++;\n  if (!(typeof req.body.make === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[18]++;\n    sendBadStatus(res, 400, `bad request, request property \"make\" must be of type string. You supplied type: ${typeof req.body.make}`); /* istanbul ignore next */cov_ratewsw8z.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[20]++;\n\n  if (!(typeof req.body.model === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, `bad request, request property \"model\" must be of type string. You supplied type: ${typeof req.body.model}`); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!(typeof req.body.year === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, `bad request, request property \"year\" must be of type number. You supplied type: ${typeof req.body.year}`); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!(typeof req.body.displacement === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, `bad request, request property \"displacement\" must be of type number. You supplied type: ${typeof req.body.displacement}`); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!(typeof req.body.color === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, `bad request, request property \"color\" must be of type string. You supplied type: ${typeof req.body.color}`); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[32]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[33]++;\n\n\n  storage.addTrialsBike(trialsBike).\n  then(() => {/* istanbul ignore next */cov_ratewsw8z.f[3]++;cov_ratewsw8z.s[34]++;\n    sendJSON(res, 200, trialsBike);\n  }).\n  catch(() => {/* istanbul ignore next */cov_ratewsw8z.f[4]++;cov_ratewsw8z.s[35]++;\n    sendBadStatus(res, 500, 'SERVER_ERROR');\n  });\n}","timestamp":"2017-12-08T05:15:51.582Z"}
{"level":"info","message":"Adding a GET url and callback.","timestamp":"2017-12-08T05:15:51.582Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-08T05:15:51.582Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[5]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[37]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[39]++;\n    storage.fetchTrialsBike(id).\n    then(trialsBike => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[40]++;\n      sendJSON(res, 200, trialsBike);\n    }).\n    catch(() => {/* istanbul ignore next */cov_ratewsw8z.f[7]++;cov_ratewsw8z.s[41]++;\n      sendBadStatus(res, 404, `No bike with id \"${id}\".`);\n    });\n  } else {/* istanbul ignore next */cov_ratewsw8z.b[5][1]++;cov_ratewsw8z.s[42]++;\n    storage.fetchAllTrialsBikes().\n    then(trialsBikes => {/* istanbul ignore next */cov_ratewsw8z.f[8]++;cov_ratewsw8z.s[43]++;\n      sendJSON(res, 200, trialsBikes);\n    });\n  }\n}","timestamp":"2017-12-08T05:15:51.582Z"}
{"level":"info","message":"Adding a DELETE url and callback.","timestamp":"2017-12-08T05:15:51.582Z"}
{"level":"info","message":"/api/trials-bikes","timestamp":"2017-12-08T05:15:51.582Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[9]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[45]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[46]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[6][0]++;cov_ratewsw8z.s[47]++;\n    storage.deleteTrialsBike(id).\n    then(() => {/* istanbul ignore next */cov_ratewsw8z.f[10]++;cov_ratewsw8z.s[48]++;\n      logger.log('info', `Bike deleted, responding with a 204 code.`); /* istanbul ignore next */cov_ratewsw8z.s[49]++;\n      res.writeHead(204); /* istanbul ignore next */cov_ratewsw8z.s[50]++;\n      res.end();\n    }).\n    catch(() => {/* istanbul ignore next */cov_ratewsw8z.f[11]++;cov_ratewsw8z.s[51]++;\n      sendBadStatus(res, 404, `No bike with id \"${id}\".`);\n    });\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[6][1]++;cov_ratewsw8z.s[52]++;sendBadStatus(res, 400, `bad request, no id.`);}\n}","timestamp":"2017-12-08T05:15:51.582Z"}
{"level":"info","message":"Server is up on port 3000.","timestamp":"2017-12-08T05:15:51.621Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-08T05:15:51.662Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-08T05:15:51.663Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-08T05:15:51.663Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-08T05:15:51.663Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[2]++;cov_ratewsw8z.s[17]++;\n  if (!(typeof req.body.make === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[18]++;\n    sendBadStatus(res, 400, `bad request, request property \"make\" must be of type string. You supplied type: ${typeof req.body.make}`); /* istanbul ignore next */cov_ratewsw8z.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[20]++;\n\n  if (!(typeof req.body.model === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, `bad request, request property \"model\" must be of type string. You supplied type: ${typeof req.body.model}`); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!(typeof req.body.year === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, `bad request, request property \"year\" must be of type number. You supplied type: ${typeof req.body.year}`); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!(typeof req.body.displacement === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, `bad request, request property \"displacement\" must be of type number. You supplied type: ${typeof req.body.displacement}`); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!(typeof req.body.color === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, `bad request, request property \"color\" must be of type string. You supplied type: ${typeof req.body.color}`); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[32]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[33]++;\n\n\n  storage.addTrialsBike(trialsBike).\n  then(() => {/* istanbul ignore next */cov_ratewsw8z.f[3]++;cov_ratewsw8z.s[34]++;\n    sendJSON(res, 200, trialsBike);\n  }).\n  catch(() => {/* istanbul ignore next */cov_ratewsw8z.f[4]++;cov_ratewsw8z.s[35]++;\n    sendBadStatus(res, 500, 'SERVER_ERROR');\n  });\n}","timestamp":"2017-12-08T05:15:51.663Z"}
{"level":"verbose","message":"STORAGE - adding the following bike:","timestamp":"2017-12-08T05:15:51.664Z"}
{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"dbe2af00-dbd6-11e7-a13a-93bd731a6435","timestamp":"2017-12-08T05:15:51.664Z","level":"verbose","message":""}
{"level":"verbose","message":"STORAGE - Fetching array from database","timestamp":"2017-12-08T05:15:51.664Z"}
{"level":"info","message":"Responding with a 200 code and the following data:","timestamp":"2017-12-08T05:15:51.666Z"}
{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"dbe2af00-dbd6-11e7-a13a-93bd731a6435","timestamp":"2017-12-08T05:15:51.666Z","level":"info","message":""}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-08T05:15:51.674Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-08T05:15:51.674Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-08T05:15:51.674Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T05:15:51.674Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.req.on (/Users/robertreed/Documents/programming/cf/401/lab/08-09-vanilla-rest-server/lab-rob/lib/req-parser.js:25:27)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-08T05:15:51.674Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-08T05:15:51.677Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-08T05:15:51.677Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-08T05:15:51.677Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-08T05:15:51.677Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[2]++;cov_ratewsw8z.s[17]++;\n  if (!(typeof req.body.make === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[18]++;\n    sendBadStatus(res, 400, `bad request, request property \"make\" must be of type string. You supplied type: ${typeof req.body.make}`); /* istanbul ignore next */cov_ratewsw8z.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[20]++;\n\n  if (!(typeof req.body.model === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, `bad request, request property \"model\" must be of type string. You supplied type: ${typeof req.body.model}`); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!(typeof req.body.year === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, `bad request, request property \"year\" must be of type number. You supplied type: ${typeof req.body.year}`); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!(typeof req.body.displacement === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, `bad request, request property \"displacement\" must be of type number. You supplied type: ${typeof req.body.displacement}`); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!(typeof req.body.color === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, `bad request, request property \"color\" must be of type string. You supplied type: ${typeof req.body.color}`); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[32]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[33]++;\n\n\n  storage.addTrialsBike(trialsBike).\n  then(() => {/* istanbul ignore next */cov_ratewsw8z.f[3]++;cov_ratewsw8z.s[34]++;\n    sendJSON(res, 200, trialsBike);\n  }).\n  catch(() => {/* istanbul ignore next */cov_ratewsw8z.f[4]++;cov_ratewsw8z.s[35]++;\n    sendBadStatus(res, 500, 'SERVER_ERROR');\n  });\n}","timestamp":"2017-12-08T05:15:51.677Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, request property \"make\" must be of type string. You supplied type: undefined.","timestamp":"2017-12-08T05:15:51.677Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-08T05:15:51.679Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-08T05:15:51.679Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-08T05:15:51.679Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-08T05:15:51.679Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[2]++;cov_ratewsw8z.s[17]++;\n  if (!(typeof req.body.make === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[18]++;\n    sendBadStatus(res, 400, `bad request, request property \"make\" must be of type string. You supplied type: ${typeof req.body.make}`); /* istanbul ignore next */cov_ratewsw8z.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[20]++;\n\n  if (!(typeof req.body.model === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, `bad request, request property \"model\" must be of type string. You supplied type: ${typeof req.body.model}`); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!(typeof req.body.year === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, `bad request, request property \"year\" must be of type number. You supplied type: ${typeof req.body.year}`); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!(typeof req.body.displacement === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, `bad request, request property \"displacement\" must be of type number. You supplied type: ${typeof req.body.displacement}`); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!(typeof req.body.color === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, `bad request, request property \"color\" must be of type string. You supplied type: ${typeof req.body.color}`); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[32]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[33]++;\n\n\n  storage.addTrialsBike(trialsBike).\n  then(() => {/* istanbul ignore next */cov_ratewsw8z.f[3]++;cov_ratewsw8z.s[34]++;\n    sendJSON(res, 200, trialsBike);\n  }).\n  catch(() => {/* istanbul ignore next */cov_ratewsw8z.f[4]++;cov_ratewsw8z.s[35]++;\n    sendBadStatus(res, 500, 'SERVER_ERROR');\n  });\n}","timestamp":"2017-12-08T05:15:51.679Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, request property \"model\" must be of type string. You supplied type: undefined.","timestamp":"2017-12-08T05:15:51.679Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-08T05:15:51.681Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-08T05:15:51.681Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-08T05:15:51.681Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-08T05:15:51.681Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[2]++;cov_ratewsw8z.s[17]++;\n  if (!(typeof req.body.make === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[18]++;\n    sendBadStatus(res, 400, `bad request, request property \"make\" must be of type string. You supplied type: ${typeof req.body.make}`); /* istanbul ignore next */cov_ratewsw8z.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[20]++;\n\n  if (!(typeof req.body.model === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, `bad request, request property \"model\" must be of type string. You supplied type: ${typeof req.body.model}`); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!(typeof req.body.year === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, `bad request, request property \"year\" must be of type number. You supplied type: ${typeof req.body.year}`); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!(typeof req.body.displacement === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, `bad request, request property \"displacement\" must be of type number. You supplied type: ${typeof req.body.displacement}`); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!(typeof req.body.color === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, `bad request, request property \"color\" must be of type string. You supplied type: ${typeof req.body.color}`); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[32]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[33]++;\n\n\n  storage.addTrialsBike(trialsBike).\n  then(() => {/* istanbul ignore next */cov_ratewsw8z.f[3]++;cov_ratewsw8z.s[34]++;\n    sendJSON(res, 200, trialsBike);\n  }).\n  catch(() => {/* istanbul ignore next */cov_ratewsw8z.f[4]++;cov_ratewsw8z.s[35]++;\n    sendBadStatus(res, 500, 'SERVER_ERROR');\n  });\n}","timestamp":"2017-12-08T05:15:51.681Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, request property \"year\" must be of type number. You supplied type: boolean.","timestamp":"2017-12-08T05:15:51.681Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-08T05:15:51.682Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-08T05:15:51.683Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-08T05:15:51.683Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-08T05:15:51.683Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[2]++;cov_ratewsw8z.s[17]++;\n  if (!(typeof req.body.make === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[18]++;\n    sendBadStatus(res, 400, `bad request, request property \"make\" must be of type string. You supplied type: ${typeof req.body.make}`); /* istanbul ignore next */cov_ratewsw8z.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[20]++;\n\n  if (!(typeof req.body.model === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, `bad request, request property \"model\" must be of type string. You supplied type: ${typeof req.body.model}`); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!(typeof req.body.year === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, `bad request, request property \"year\" must be of type number. You supplied type: ${typeof req.body.year}`); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!(typeof req.body.displacement === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, `bad request, request property \"displacement\" must be of type number. You supplied type: ${typeof req.body.displacement}`); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!(typeof req.body.color === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, `bad request, request property \"color\" must be of type string. You supplied type: ${typeof req.body.color}`); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[32]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[33]++;\n\n\n  storage.addTrialsBike(trialsBike).\n  then(() => {/* istanbul ignore next */cov_ratewsw8z.f[3]++;cov_ratewsw8z.s[34]++;\n    sendJSON(res, 200, trialsBike);\n  }).\n  catch(() => {/* istanbul ignore next */cov_ratewsw8z.f[4]++;cov_ratewsw8z.s[35]++;\n    sendBadStatus(res, 500, 'SERVER_ERROR');\n  });\n}","timestamp":"2017-12-08T05:15:51.683Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, request property \"displacement\" must be of type number. You supplied type: object.","timestamp":"2017-12-08T05:15:51.683Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-08T05:15:51.685Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-08T05:15:51.685Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-08T05:15:51.685Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-08T05:15:51.685Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[2]++;cov_ratewsw8z.s[17]++;\n  if (!(typeof req.body.make === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[0][0]++;cov_ratewsw8z.s[18]++;\n    sendBadStatus(res, 400, `bad request, request property \"make\" must be of type string. You supplied type: ${typeof req.body.make}`); /* istanbul ignore next */cov_ratewsw8z.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[0][1]++;}cov_ratewsw8z.s[20]++;\n\n  if (!(typeof req.body.model === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[1][0]++;cov_ratewsw8z.s[21]++;\n    sendBadStatus(res, 400, `bad request, request property \"model\" must be of type string. You supplied type: ${typeof req.body.model}`); /* istanbul ignore next */cov_ratewsw8z.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[1][1]++;}cov_ratewsw8z.s[23]++;\n\n  if (!(typeof req.body.year === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[2][0]++;cov_ratewsw8z.s[24]++;\n    sendBadStatus(res, 400, `bad request, request property \"year\" must be of type number. You supplied type: ${typeof req.body.year}`); /* istanbul ignore next */cov_ratewsw8z.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[2][1]++;}cov_ratewsw8z.s[26]++;\n\n  if (!(typeof req.body.displacement === 'number')) {/* istanbul ignore next */cov_ratewsw8z.b[3][0]++;cov_ratewsw8z.s[27]++;\n    sendBadStatus(res, 400, `bad request, request property \"displacement\" must be of type number. You supplied type: ${typeof req.body.displacement}`); /* istanbul ignore next */cov_ratewsw8z.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[3][1]++;}cov_ratewsw8z.s[29]++;\n\n  if (!(typeof req.body.color === 'string')) {/* istanbul ignore next */cov_ratewsw8z.b[4][0]++;cov_ratewsw8z.s[30]++;\n    sendBadStatus(res, 400, `bad request, request property \"color\" must be of type string. You supplied type: ${typeof req.body.color}`); /* istanbul ignore next */cov_ratewsw8z.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_ratewsw8z.b[4][1]++;}\n\n  let trialsBike = /* istanbul ignore next */(cov_ratewsw8z.s[32]++, new TrialsBike(\n  req.body.make,\n  req.body.model,\n  req.body.year,\n  req.body.displacement,\n  req.body.color)); /* istanbul ignore next */cov_ratewsw8z.s[33]++;\n\n\n  storage.addTrialsBike(trialsBike).\n  then(() => {/* istanbul ignore next */cov_ratewsw8z.f[3]++;cov_ratewsw8z.s[34]++;\n    sendJSON(res, 200, trialsBike);\n  }).\n  catch(() => {/* istanbul ignore next */cov_ratewsw8z.f[4]++;cov_ratewsw8z.s[35]++;\n    sendBadStatus(res, 500, 'SERVER_ERROR');\n  });\n}","timestamp":"2017-12-08T05:15:51.685Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, request property \"color\" must be of type string. You supplied type: number.","timestamp":"2017-12-08T05:15:51.685Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-08T05:15:51.686Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-08T05:15:51.686Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-08T05:15:51.687Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-08T05:15:51.687Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[5]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[37]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[39]++;\n    storage.fetchTrialsBike(id).\n    then(trialsBike => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[40]++;\n      sendJSON(res, 200, trialsBike);\n    }).\n    catch(() => {/* istanbul ignore next */cov_ratewsw8z.f[7]++;cov_ratewsw8z.s[41]++;\n      sendBadStatus(res, 404, `No bike with id \"${id}\".`);\n    });\n  } else {/* istanbul ignore next */cov_ratewsw8z.b[5][1]++;cov_ratewsw8z.s[42]++;\n    storage.fetchAllTrialsBikes().\n    then(trialsBikes => {/* istanbul ignore next */cov_ratewsw8z.f[8]++;cov_ratewsw8z.s[43]++;\n      sendJSON(res, 200, trialsBikes);\n    });\n  }\n}","timestamp":"2017-12-08T05:15:51.687Z"}
{"level":"verbose","message":"STORAGE - Fetching array from database","timestamp":"2017-12-08T05:15:51.687Z"}
{"level":"info","message":"Responding with a 200 code and the following data:","timestamp":"2017-12-08T05:15:51.687Z"}
[{"make":"Gas Gas","model":"TXT Race","year":2013,"displacement":280,"color":"red","id":"b8ab4ac0-dbd5-11e7-be8c-b5be973f1442","timestamp":"2017-12-08T05:07:43.084Z"},{"make":"Gas Gas","model":"TXT","year":2005,"displacement":280,"color":"red","id":"e41c8200-dbd5-11e7-be8c-b5be973f1442","timestamp":"2017-12-08T05:08:55.968Z"},{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"00c42bb0-dbd6-11e7-be8c-b5be973f1442","timestamp":"2017-12-08T05:09:44.043Z"},{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"dbe2af00-dbd6-11e7-a13a-93bd731a6435","timestamp":"2017-12-08T05:15:51.664Z"}]
{"level":"info","message":"Routing a request.","timestamp":"2017-12-08T05:15:51.689Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes?id=dbe2af00-dbd6-11e7-a13a-93bd731a6435\"","timestamp":"2017-12-08T05:15:51.689Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=dbe2af00-dbd6-11e7-a13a-93bd731a6435\",\"query\":{\"id\":\"dbe2af00-dbd6-11e7-a13a-93bd731a6435\"},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes?id=dbe2af00-dbd6-11e7-a13a-93bd731a6435\",\"href\":\"/api/trials-bikes?id=dbe2af00-dbd6-11e7-a13a-93bd731a6435\"}","timestamp":"2017-12-08T05:15:51.690Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-08T05:15:51.690Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[5]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[37]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[39]++;\n    storage.fetchTrialsBike(id).\n    then(trialsBike => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[40]++;\n      sendJSON(res, 200, trialsBike);\n    }).\n    catch(() => {/* istanbul ignore next */cov_ratewsw8z.f[7]++;cov_ratewsw8z.s[41]++;\n      sendBadStatus(res, 404, `No bike with id \"${id}\".`);\n    });\n  } else {/* istanbul ignore next */cov_ratewsw8z.b[5][1]++;cov_ratewsw8z.s[42]++;\n    storage.fetchAllTrialsBikes().\n    then(trialsBikes => {/* istanbul ignore next */cov_ratewsw8z.f[8]++;cov_ratewsw8z.s[43]++;\n      sendJSON(res, 200, trialsBikes);\n    });\n  }\n}","timestamp":"2017-12-08T05:15:51.690Z"}
{"level":"verbose","message":"STORAGE - fetching trials bike with id dbe2af00-dbd6-11e7-a13a-93bd731a6435.","timestamp":"2017-12-08T05:15:51.690Z"}
{"level":"verbose","message":"STORAGE - Fetching array from database","timestamp":"2017-12-08T05:15:51.690Z"}
{"level":"info","message":"Responding with a 200 code and the following data:","timestamp":"2017-12-08T05:15:51.690Z"}
{"make":"Scorpa","model":"Twenty","year":2016,"displacement":300,"color":"orange","id":"dbe2af00-dbd6-11e7-a13a-93bd731a6435","timestamp":"2017-12-08T05:15:51.690Z","level":"info","message":""}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-08T05:15:51.692Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes?id=hamburger\"","timestamp":"2017-12-08T05:15:51.692Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=hamburger\",\"query\":{\"id\":\"hamburger\"},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes?id=hamburger\",\"href\":\"/api/trials-bikes?id=hamburger\"}","timestamp":"2017-12-08T05:15:51.692Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-08T05:15:51.693Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[5]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[37]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[38]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[5][0]++;cov_ratewsw8z.s[39]++;\n    storage.fetchTrialsBike(id).\n    then(trialsBike => {/* istanbul ignore next */cov_ratewsw8z.f[6]++;cov_ratewsw8z.s[40]++;\n      sendJSON(res, 200, trialsBike);\n    }).\n    catch(() => {/* istanbul ignore next */cov_ratewsw8z.f[7]++;cov_ratewsw8z.s[41]++;\n      sendBadStatus(res, 404, `No bike with id \"${id}\".`);\n    });\n  } else {/* istanbul ignore next */cov_ratewsw8z.b[5][1]++;cov_ratewsw8z.s[42]++;\n    storage.fetchAllTrialsBikes().\n    then(trialsBikes => {/* istanbul ignore next */cov_ratewsw8z.f[8]++;cov_ratewsw8z.s[43]++;\n      sendJSON(res, 200, trialsBikes);\n    });\n  }\n}","timestamp":"2017-12-08T05:15:51.693Z"}
{"level":"verbose","message":"STORAGE - fetching trials bike with id hamburger.","timestamp":"2017-12-08T05:15:51.693Z"}
{"level":"verbose","message":"STORAGE - Fetching array from database","timestamp":"2017-12-08T05:15:51.693Z"}
{"level":"info","message":"Responding with a 404 code due to No bike with id \"hamburger\"..","timestamp":"2017-12-08T05:15:51.693Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-08T05:15:51.696Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes?id=dbe2af00-dbd6-11e7-a13a-93bd731a6435\"","timestamp":"2017-12-08T05:15:51.696Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=dbe2af00-dbd6-11e7-a13a-93bd731a6435\",\"query\":{\"id\":\"dbe2af00-dbd6-11e7-a13a-93bd731a6435\"},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes?id=dbe2af00-dbd6-11e7-a13a-93bd731a6435\",\"href\":\"/api/trials-bikes?id=dbe2af00-dbd6-11e7-a13a-93bd731a6435\"}","timestamp":"2017-12-08T05:15:51.696Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-08T05:15:51.696Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[9]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[45]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[46]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[6][0]++;cov_ratewsw8z.s[47]++;\n    storage.deleteTrialsBike(id).\n    then(() => {/* istanbul ignore next */cov_ratewsw8z.f[10]++;cov_ratewsw8z.s[48]++;\n      logger.log('info', `Bike deleted, responding with a 204 code.`); /* istanbul ignore next */cov_ratewsw8z.s[49]++;\n      res.writeHead(204); /* istanbul ignore next */cov_ratewsw8z.s[50]++;\n      res.end();\n    }).\n    catch(() => {/* istanbul ignore next */cov_ratewsw8z.f[11]++;cov_ratewsw8z.s[51]++;\n      sendBadStatus(res, 404, `No bike with id \"${id}\".`);\n    });\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[6][1]++;cov_ratewsw8z.s[52]++;sendBadStatus(res, 400, `bad request, no id.`);}\n}","timestamp":"2017-12-08T05:15:51.696Z"}
{"level":"verbose","message":"STORAGE - removing trials bike with id dbe2af00-dbd6-11e7-a13a-93bd731a6435","timestamp":"2017-12-08T05:15:51.696Z"}
{"level":"verbose","message":"STORAGE - Fetching array from database","timestamp":"2017-12-08T05:15:51.696Z"}
{"level":"info","message":"Bike deleted, responding with a 204 code.","timestamp":"2017-12-08T05:15:51.697Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-08T05:15:51.699Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes\"","timestamp":"2017-12-08T05:15:51.699Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":null,\"query\":{},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes\",\"href\":\"/api/trials-bikes\"}","timestamp":"2017-12-08T05:15:51.699Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-08T05:15:51.699Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[9]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[45]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[46]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[6][0]++;cov_ratewsw8z.s[47]++;\n    storage.deleteTrialsBike(id).\n    then(() => {/* istanbul ignore next */cov_ratewsw8z.f[10]++;cov_ratewsw8z.s[48]++;\n      logger.log('info', `Bike deleted, responding with a 204 code.`); /* istanbul ignore next */cov_ratewsw8z.s[49]++;\n      res.writeHead(204); /* istanbul ignore next */cov_ratewsw8z.s[50]++;\n      res.end();\n    }).\n    catch(() => {/* istanbul ignore next */cov_ratewsw8z.f[11]++;cov_ratewsw8z.s[51]++;\n      sendBadStatus(res, 404, `No bike with id \"${id}\".`);\n    });\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[6][1]++;cov_ratewsw8z.s[52]++;sendBadStatus(res, 400, `bad request, no id.`);}\n}","timestamp":"2017-12-08T05:15:51.699Z"}
{"level":"info","message":"Responding with a 400 code due to bad request, no id..","timestamp":"2017-12-08T05:15:51.699Z"}
{"level":"info","message":"Routing a request.","timestamp":"2017-12-08T05:15:51.701Z"}
{"level":"info","message":"Original URL: \"/api/trials-bikes?id=hotdogs\"","timestamp":"2017-12-08T05:15:51.701Z"}
{"level":"info","message":"Parsed URL: {\"protocol\":null,\"slashes\":null,\"auth\":null,\"host\":null,\"port\":null,\"hostname\":null,\"hash\":null,\"search\":\"?id=hotdogs\",\"query\":{\"id\":\"hotdogs\"},\"pathname\":\"/api/trials-bikes\",\"path\":\"/api/trials-bikes?id=hotdogs\",\"href\":\"/api/trials-bikes?id=hotdogs\"}","timestamp":"2017-12-08T05:15:51.701Z"}
{"level":"info","message":"Found the following handler:","timestamp":"2017-12-08T05:15:51.701Z"}
{"level":"info","message":"(req, res) => {/* istanbul ignore next */cov_ratewsw8z.f[9]++;\n  let id = /* istanbul ignore next */(cov_ratewsw8z.s[45]++, req.url.query.id); /* istanbul ignore next */cov_ratewsw8z.s[46]++;\n  if (id) {/* istanbul ignore next */cov_ratewsw8z.b[6][0]++;cov_ratewsw8z.s[47]++;\n    storage.deleteTrialsBike(id).\n    then(() => {/* istanbul ignore next */cov_ratewsw8z.f[10]++;cov_ratewsw8z.s[48]++;\n      logger.log('info', `Bike deleted, responding with a 204 code.`); /* istanbul ignore next */cov_ratewsw8z.s[49]++;\n      res.writeHead(204); /* istanbul ignore next */cov_ratewsw8z.s[50]++;\n      res.end();\n    }).\n    catch(() => {/* istanbul ignore next */cov_ratewsw8z.f[11]++;cov_ratewsw8z.s[51]++;\n      sendBadStatus(res, 404, `No bike with id \"${id}\".`);\n    });\n  } else\n    {/* istanbul ignore next */cov_ratewsw8z.b[6][1]++;cov_ratewsw8z.s[52]++;sendBadStatus(res, 400, `bad request, no id.`);}\n}","timestamp":"2017-12-08T05:15:51.701Z"}
{"level":"verbose","message":"STORAGE - removing trials bike with id hotdogs","timestamp":"2017-12-08T05:15:51.701Z"}
{"level":"verbose","message":"STORAGE - Fetching array from database","timestamp":"2017-12-08T05:15:51.701Z"}
{"level":"info","message":"Responding with a 404 code due to No bike with id \"hotdogs\"..","timestamp":"2017-12-08T05:15:51.702Z"}
